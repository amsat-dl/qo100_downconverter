

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 19 10:24:50 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F2520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
    10                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	text0,global,reloc=2,class=CODE,delta=1
    27                           	psect	text1,global,reloc=2,class=CODE,delta=1
    28                           	psect	text2,global,reloc=2,class=CODE,delta=1
    29                           	psect	text3,global,reloc=2,class=CODE,delta=1
    30                           	psect	text4,global,reloc=2,class=CODE,delta=1
    31                           	psect	text5,global,reloc=2,class=CODE,delta=1
    32                           	psect	text6,global,reloc=2,class=CODE,delta=1
    33                           	psect	text7,global,reloc=2,class=CODE,delta=1
    34                           	psect	text8,global,reloc=2,class=CODE,delta=1
    35                           	psect	text9,global,reloc=2,class=CODE,delta=1
    36                           	psect	text10,global,reloc=2,class=CODE,delta=1
    37                           	psect	text11,global,reloc=2,class=CODE,delta=1
    38                           	psect	text12,global,reloc=2,class=CODE,delta=1
    39                           	psect	text13,global,reloc=2,class=CODE,delta=1
    40                           	psect	text14,global,reloc=2,class=CODE,delta=1
    41                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text16,global,reloc=2,class=CODE,delta=1
    43                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text19,global,reloc=2,class=CODE,delta=1
    46                           	psect	text20,global,reloc=2,class=CODE,delta=1
    47                           	psect	text21,global,reloc=2,class=CODE,delta=1
    48                           	psect	text22,global,reloc=2,class=CODE,delta=1
    49                           	psect	text23,global,reloc=2,class=CODE,delta=1
    50                           	psect	text24,global,reloc=2,class=CODE,delta=1
    51                           	psect	text25,global,reloc=2,class=CODE,delta=1
    52                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text30,global,reloc=2,class=CODE,delta=1
    57                           	psect	text31,global,reloc=2,class=CODE,delta=1
    58                           	psect	text32,global,reloc=2,class=CODE,delta=1
    59                           	psect	text33,global,reloc=2,class=CODE,delta=1
    60                           	psect	text34,global,reloc=2,class=CODE,delta=1
    61                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text40,global,reloc=2,class=CODE,delta=1
    67                           	psect	text41,global,reloc=2,class=CODE,delta=1
    68                           	psect	text42,global,reloc=2,class=CODE,delta=1
    69                           	psect	text43,global,reloc=2,class=CODE,delta=1
    70                           	psect	text44,global,reloc=2,class=CODE,delta=1
    71                           	psect	text45,global,reloc=2,class=CODE,delta=1
    72                           	psect	text46,global,reloc=2,class=CODE,delta=1
    73                           	psect	text47,global,reloc=2,class=CODE,delta=1
    74                           	psect	text48,global,reloc=2,class=CODE,delta=1
    75                           	psect	text49,global,reloc=2,class=CODE,delta=1
    76                           	psect	text50,global,reloc=2,class=CODE,delta=1
    77                           	psect	text51,global,reloc=2,class=CODE,delta=1
    78                           	psect	text52,global,reloc=2,class=CODE,delta=1
    79                           	psect	text53,global,reloc=2,class=CODE,delta=1
    80                           	psect	text54,global,reloc=2,class=CODE,delta=1
    81                           	psect	text55,global,reloc=2,class=CODE,delta=1
    82                           	psect	text56,global,reloc=2,class=CODE,delta=1
    83                           	psect	text57,global,reloc=2,class=CODE,delta=1
    84                           	psect	text58,global,reloc=2,class=CODE,delta=1
    85                           	psect	text59,global,reloc=2,class=CODE,delta=1
    86                           	psect	text60,global,reloc=2,class=CODE,delta=1
    87                           	psect	text61,global,reloc=2,class=CODE,delta=1
    88                           	psect	text62,global,reloc=2,class=CODE,delta=1
    89                           	psect	text63,global,reloc=2,class=CODE,delta=1
    90                           	psect	text64,global,reloc=2,class=CODE,delta=1
    91                           	psect	text65,global,reloc=2,class=CODE,delta=1
    92                           	psect	text66,global,reloc=2,class=CODE,delta=1
    93                           	psect	text67,global,reloc=2,class=CODE,delta=1
    94                           	psect	text68,global,reloc=2,class=CODE,delta=1
    95                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    96                           	psect	text70,global,reloc=2,class=CODE,delta=1
    97                           	psect	text71,global,reloc=2,class=CODE,delta=1
    98                           	psect	text72,global,reloc=2,class=CODE,delta=1
    99                           	psect	text73,global,reloc=2,class=CODE,delta=1
   100                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text75,global,reloc=2,class=CODE,delta=1
   102                           	psect	text76,global,reloc=2,class=CODE,delta=1
   103                           	psect	text77,global,reloc=2,class=CODE,delta=1
   104                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   105                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   106                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
   107                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=2
   108                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=2
   109                           	psect	text83,global,reloc=2,class=CODE,delta=1
   110                           	psect	text84,global,reloc=2,class=CODE,delta=1
   111                           	psect	text85,global,reloc=2,class=CODE,delta=1
   112                           	psect	text86,global,reloc=2,class=CODE,delta=1,group=2
   113                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=2
   114                           	psect	text88,global,reloc=2,class=CODE,delta=1
   115                           	psect	text89,global,reloc=2,class=CODE,delta=1
   116                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=2
   117                           	psect	text91,global,reloc=2,class=CODE,delta=1,group=1
   118                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=2
   120                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=2
   121                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   122                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text97,global,reloc=2,class=CODE,delta=1
   124                           	psect	text98,global,reloc=2,class=CODE,delta=1
   125                           	psect	text99,global,reloc=2,class=CODE,delta=1
   126                           	psect	text100,global,reloc=2,class=CODE,delta=1
   127                           	psect	text101,global,reloc=2,class=CODE,delta=1
   128                           	psect	text102,global,reloc=2,class=CODE,delta=1
   129                           	psect	text103,global,reloc=2,class=CODE,delta=1
   130                           	psect	text104,global,reloc=2,class=CODE,delta=1
   131                           	psect	text105,global,reloc=2,class=CODE,delta=1
   132                           	psect	text106,global,reloc=2,class=CODE,delta=1
   133                           	psect	text107,global,reloc=2,class=CODE,delta=1
   134                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=2
   135                           	psect	text109,global,reloc=2,class=CODE,delta=1
   136                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   137                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   138                           	psect	text111,global,reloc=2,class=CODE,delta=1
   139                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   140                           	psect	text112,global,reloc=2,class=CODE,delta=1
   141                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   142                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   143  0000                     
   144                           ; Version 2.10
   145                           ; Generated 31/07/2019 GMT
   146                           ; 
   147                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   148                           ; All rights reserved.
   149                           ; 
   150                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   151                           ; 
   152                           ; Redistribution and use in source and binary forms, with or without modification, are
   153                           ; permitted provided that the following conditions are met:
   154                           ; 
   155                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   156                           ;        conditions and the following disclaimer.
   157                           ; 
   158                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   159                           ;        of conditions and the following disclaimer in the documentation and/or other
   160                           ;        materials provided with the distribution.
   161                           ; 
   162                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   163                           ;        software without specific prior written permission.
   164                           ; 
   165                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   166                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   167                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   168                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   169                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   170                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   171                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   172                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   173                           ; 
   174                           ; 
   175                           ; Code-generator required, PIC18F2520 Definitions
   176                           ; 
   177                           ; SFR Addresses
   178  0000                     
   179                           	psect	idataCOMRAM
   180  0000'                    __pidataCOMRAM:
   181                           	opt callstack 0
   182                           
   183                           ;initializer for _gpsbufidx
   184  0000' FF                 	db	255
   185                           
   186                           	psect	idataBANK0
   187  0000'                    __pidataBANK0:
   188                           	opt callstack 0
   189                           
   190                           ;initializer for _N2L_reg4142
   191  0000' 0001               	dw	1
   192                           
   193                           ;initializer for _N31_reg4445
   194  0002' 0001               	dw	1
   195                           
   196                           ;initializer for show_display@old_adf4351_lockstat
   197  0004' FF                 	db	255
   198                           
   199                           ;initializer for show_display@old_si5328locked
   200  0005' FF                 	db	255
   201                           
   202                           ;initializer for show_display@old_LNB_laststat
   203  0006' FF                 	db	255
   204                           
   205                           ;initializer for show_display@old_GPS_sat
   206  0007' FF                 	db	255
   207                           
   208                           ;initializer for show_display@old_lnbqrg
   209  0008' FF                 	db	255
   210                           
   211                           ;initializer for show_display@old_ubx_ack
   212  0009' FF                 	db	255
   213                           
   214                           ;initializer for show_display@old_GPS_fix
   215  000A' FF                 	db	255
   216                           
   217                           ;initializer for show_display@old_GPS_lock
   218  000B' FF                 	db	255
   219                           
   220                           ;initializer for _actualADFswitch
   221  000C' FF                 	db	255
   222                           
   223                           ;initializer for check_si5328_status@lastinput
   224  000D' FF                 	db	255
   225                           
   226                           ;initializer for check_si5328_status@lastlock
   227  000E' FF                 	db	255
   228                           
   229                           ;initializer for _LNB_laststat
   230  000F' FF                 	db	255
   231                           
   232                           	psect	idataBANK1
   233  0000'                    __pidataBANK1:
   234                           	opt callstack 0
   235                           
   236                           ;initializer for _NC1_LS_reg3233
   237  0000' 0001               	dw	1
   238                           
   239                           	psect	idataBANK2
   240  0000'                    __pidataBANK2:
   241                           	opt callstack 0
   242                           
   243                           ;initializer for stoa@F1139
   244  0000' 28                 	db	40
   245  0001' 6E                 	db	110
   246  0002' 75                 	db	117
   247  0003' 6C                 	db	108
   248  0004' 6C                 	db	108
   249  0005' 29                 	db	41
   250  0006' 00                 	db	0
   251                           
   252                           ;initializer for _LO
   253  0007' 18                 	db	24
   254  0008' 19                 	db	25
   255  0009' 1A                 	db	26
   256  000A' 1B                 	db	27
   257                           
   258                           ;initializer for ssd1306_setpos@F3137
   259  000B' B0                 	db	176
   260  000C' 02                 	db	2
   261  000D' 10                 	db	16
   262                           
   263                           ;initializer for _g_pout
   264  000E' 0001               	dw	1
   265                           
   266                           ;initializer for _g_ipc
   267  0010' 0005               	dw	5
   268                           
   269                           ;initializer for _NC2_LS_reg3536
   270  0012' 0001               	dw	1
   271                           
   272                           ;initializer for _N1HS_reg25
   273  0014' 0001               	dw	1
   274                           
   275                           ;initializer for _N2HS_reg40
   276  0016' 0001               	dw	1
   277                           
   278                           ;initializer for _N32_reg4748
   279  0018' 0001               	dw	1
   280                           
   281                           ;initializer for _use_GPS
   282  001A' 01                 	db	1
   283                           
   284                           ;initializer for _gps_config_data
   285  001B' 00                 	db	0
   286  001C' 01                 	db	1
   287  001D' 00                 	db	0
   288  001E' 00                 	db	0
   289  001F' 32                 	db	50
   290  0020' 00                 	db	0
   291  0021' 00                 	db	0
   292  0022' 00                 	db	0
   293  0023' 00                 	db	0
   294  0024' 00                 	db	0
   295  0025' 00                 	db	0
   296  0026' 00                 	db	0
   297  0027' E3                 	db	227
   298  0028' EA                 	db	234
   299  0029' 21                 	db	33
   300  002A' 01                 	db	1
   301  002B' 00                 	db	0
   302  002C' 00                 	db	0
   303  002D' 00                 	db	0
   304  002E' 80                 	db	128
   305  002F' 00                 	db	0
   306  0030' 00                 	db	0
   307  0031' 00                 	db	0
   308  0032' 80                 	db	128
   309  0033' 00                 	db	0
   310  0034' 00                 	db	0
   311  0035' 00                 	db	0
   312  0036' 00                 	db	0
   313  0037' EF                 	db	239
   314  0038' 00                 	db	0
   315  0039' 00                 	db	0
   316  003A' 00                 	db	0
   317                           
   318                           ;initializer for _reg_set_LNB_LO
   319  003B' 2C                 	db	44
   320  003C' 00                 	db	0
   321  003D' 2D                 	db	45
   322  003E' 00                 	db	0
   323  003F' 2F                 	db	47
   324  0040' 00                 	db	0
   325  0041' 30                 	db	48
   326  0042' 00                 	db	0
   327  0043' 28                 	db	40
   328  0044' 00                 	db	0
   329  0045' 29                 	db	41
   330  0046' 00                 	db	0
   331  0047' 2A                 	db	42
   332  0048' 00                 	db	0
   333  0049' 19                 	db	25
   334  004A' 00                 	db	0
   335  004B' 20                 	db	32
   336  004C' 00                 	db	0
   337  004D' 21                 	db	33
   338  004E' 00                 	db	0
   339  004F' 23                 	db	35
   340  0050' 00                 	db	0
   341  0051' 24                 	db	36
   342  0052' 00                 	db	0
   343                           
   344                           ;initializer for show_display@old_GPS_lon
   345  0053' 20                 	db	32
   346  0054' 20                 	db	32
   347  0055' 20                 	db	32
   348  0056' 20                 	db	32
   349  0057' 20                 	db	32
   350  0058' 20                 	db	32
   351  0059' 20                 	db	32
   352  005A' 20                 	db	32
   353  005B' 20                 	db	32
   354  005C' 20                 	db	32
   355  005D' 20                 	db	32
   356  005E' 20                 	db	32
   357  005F' 20                 	db	32
   358  0060' 00                 	db	0
   359  0061' 00                 	db	0
   360                           
   361                           ;initializer for show_display@old_GPS_lat
   362  0062' 20                 	db	32
   363  0063' 20                 	db	32
   364  0064' 20                 	db	32
   365  0065' 20                 	db	32
   366  0066' 20                 	db	32
   367  0067' 20                 	db	32
   368  0068' 20                 	db	32
   369  0069' 20                 	db	32
   370  006A' 20                 	db	32
   371  006B' 20                 	db	32
   372  006C' 20                 	db	32
   373  006D' 20                 	db	32
   374  006E' 20                 	db	32
   375  006F' 00                 	db	0
   376  0070' 00                 	db	0
   377                           
   378                           ;initializer for _GPS_lon
   379  0071' 20                 	db	32
   380  0072' 20                 	db	32
   381  0073' 20                 	db	32
   382  0074' 20                 	db	32
   383  0075' 20                 	db	32
   384  0076' 20                 	db	32
   385  0077' 20                 	db	32
   386  0078' 20                 	db	32
   387  0079' 00                 	db	0
   388  007A' 00                 	db	0
   389  007B' 00                 	db	0
   390  007C' 00                 	db	0
   391  007D' 00                 	db	0
   392  007E' 00                 	db	0
   393  007F' 00                 	db	0
   394                           
   395                           ;initializer for _GPS_lat
   396  0080' 20                 	db	32
   397  0081' 20                 	db	32
   398  0082' 20                 	db	32
   399  0083' 20                 	db	32
   400  0084' 20                 	db	32
   401  0085' 20                 	db	32
   402  0086' 20                 	db	32
   403  0087' 20                 	db	32
   404  0088' 00                 	db	0
   405  0089' 00                 	db	0
   406  008A' 00                 	db	0
   407  008B' 00                 	db	0
   408  008C' 00                 	db	0
   409  008D' 00                 	db	0
   410  008E' 00                 	db	0
   411                           
   412                           ;initializer for show_display@old_GPS_time
   413  008F' 78                 	db	120
   414  0090' 00                 	db	0
   415  0091' 00                 	db	0
   416  0092' 00                 	db	0
   417  0093' 00                 	db	0
   418  0094' 00                 	db	0
   419  0095' 00                 	db	0
   420  0096' 00                 	db	0
   421  0097' 00                 	db	0
   422                           
   423                           ;initializer for _GPS_time
   424  0098' 20                 	db	32
   425  0099' 00                 	db	0
   426  009A' 00                 	db	0
   427  009B' 00                 	db	0
   428  009C' 00                 	db	0
   429  009D' 00                 	db	0
   430  009E' 00                 	db	0
   431  009F' 00                 	db	0
   432  00A0' 00                 	db	0
   433                           
   434                           	psect	idataBANK3
   435  0000'                    __pidataBANK3:
   436                           	opt callstack 0
   437                           
   438                           ;initializer for _ssd1306_init_commands
   439  0000' AE                 	db	174
   440  0001' D5                 	db	213
   441  0002' A0                 	db	160
   442  0003' A8                 	db	168
   443  0004' 3F                 	db	63
   444  0005' D3                 	db	211
   445  0006' 00                 	db	0
   446  0007' 40                 	db	64
   447  0008' 8D                 	db	141
   448  0009' 14                 	db	20
   449  000A' 20                 	db	32
   450  000B' 00                 	db	0
   451  000C' A1                 	db	161
   452  000D' C8                 	db	200
   453  000E' DA                 	db	218
   454  000F' 12                 	db	18
   455  0010' 81                 	db	129
   456  0011' DF                 	db	223
   457  0012' D9                 	db	217
   458  0013' 82                 	db	130
   459  0014' DB                 	db	219
   460  0015' 34                 	db	52
   461  0016' A4                 	db	164
   462  0017' A6                 	db	166
   463  0018' C0                 	db	192
   464  0019' A0                 	db	160
   465  001A' AF                 	db	175
   466                           
   467                           	psect	mediumconst
   468  0000'                    __pmediumconst:
   469                           	opt callstack 0
   470  0000' 00                 	db	0
   471  0001'                    _font8x8_basic:
   472                           	opt callstack 0
   473  0001' 00                 	db	0
   474  0002' 00                 	db	0
   475  0003' 00                 	db	0
   476  0004' 00                 	db	0
   477  0005' 00                 	db	0
   478  0006' 00                 	db	0
   479  0007' 00                 	db	0
   480  0008' 00                 	db	0
   481  0009' 18                 	db	24
   482  000A' 3C                 	db	60
   483  000B' 3C                 	db	60
   484  000C' 18                 	db	24
   485  000D' 18                 	db	24
   486  000E' 00                 	db	0
   487  000F' 18                 	db	24
   488  0010' 00                 	db	0
   489  0011' 36                 	db	54
   490  0012' 36                 	db	54
   491  0013' 00                 	db	0
   492  0014' 00                 	db	0
   493  0015' 00                 	db	0
   494  0016' 00                 	db	0
   495  0017' 00                 	db	0
   496  0018' 00                 	db	0
   497  0019' 36                 	db	54
   498  001A' 36                 	db	54
   499  001B' 7F                 	db	127
   500  001C' 36                 	db	54
   501  001D' 7F                 	db	127
   502  001E' 36                 	db	54
   503  001F' 36                 	db	54
   504  0020' 00                 	db	0
   505  0021' 0C                 	db	12
   506  0022' 3E                 	db	62
   507  0023' 03                 	db	3
   508  0024' 1E                 	db	30
   509  0025' 30                 	db	48
   510  0026' 1F                 	db	31
   511  0027' 0C                 	db	12
   512  0028' 00                 	db	0
   513  0029' 00                 	db	0
   514  002A' 63                 	db	99
   515  002B' 33                 	db	51
   516  002C' 18                 	db	24
   517  002D' 0C                 	db	12
   518  002E' 66                 	db	102
   519  002F' 63                 	db	99
   520  0030' 00                 	db	0
   521  0031' 1C                 	db	28
   522  0032' 36                 	db	54
   523  0033' 1C                 	db	28
   524  0034' 6E                 	db	110
   525  0035' 3B                 	db	59
   526  0036' 33                 	db	51
   527  0037' 6E                 	db	110
   528  0038' 00                 	db	0
   529  0039' 06                 	db	6
   530  003A' 06                 	db	6
   531  003B' 03                 	db	3
   532  003C' 00                 	db	0
   533  003D' 00                 	db	0
   534  003E' 00                 	db	0
   535  003F' 00                 	db	0
   536  0040' 00                 	db	0
   537  0041' 18                 	db	24
   538  0042' 0C                 	db	12
   539  0043' 06                 	db	6
   540  0044' 06                 	db	6
   541  0045' 06                 	db	6
   542  0046' 0C                 	db	12
   543  0047' 18                 	db	24
   544  0048' 00                 	db	0
   545  0049' 06                 	db	6
   546  004A' 0C                 	db	12
   547  004B' 18                 	db	24
   548  004C' 18                 	db	24
   549  004D' 18                 	db	24
   550  004E' 0C                 	db	12
   551  004F' 06                 	db	6
   552  0050' 00                 	db	0
   553  0051' 00                 	db	0
   554  0052' 66                 	db	102
   555  0053' 3C                 	db	60
   556  0054' FF                 	db	255
   557  0055' 3C                 	db	60
   558  0056' 66                 	db	102
   559  0057' 00                 	db	0
   560  0058' 00                 	db	0
   561  0059' 00                 	db	0
   562  005A' 0C                 	db	12
   563  005B' 0C                 	db	12
   564  005C' 3F                 	db	63
   565  005D' 0C                 	db	12
   566  005E' 0C                 	db	12
   567  005F' 00                 	db	0
   568  0060' 00                 	db	0
   569  0061' 00                 	db	0
   570  0062' 00                 	db	0
   571  0063' 00                 	db	0
   572  0064' 00                 	db	0
   573  0065' 00                 	db	0
   574  0066' 0C                 	db	12
   575  0067' 0C                 	db	12
   576  0068' 06                 	db	6
   577  0069' 00                 	db	0
   578  006A' 00                 	db	0
   579  006B' 00                 	db	0
   580  006C' 3F                 	db	63
   581  006D' 00                 	db	0
   582  006E' 00                 	db	0
   583  006F' 00                 	db	0
   584  0070' 00                 	db	0
   585  0071' 00                 	db	0
   586  0072' 00                 	db	0
   587  0073' 00                 	db	0
   588  0074' 00                 	db	0
   589  0075' 00                 	db	0
   590  0076' 0C                 	db	12
   591  0077' 0C                 	db	12
   592  0078' 00                 	db	0
   593  0079' 60                 	db	96
   594  007A' 30                 	db	48
   595  007B' 18                 	db	24
   596  007C' 0C                 	db	12
   597  007D' 06                 	db	6
   598  007E' 03                 	db	3
   599  007F' 01                 	db	1
   600  0080' 00                 	db	0
   601  0081' 3E                 	db	62
   602  0082' 63                 	db	99
   603  0083' 73                 	db	115
   604  0084' 7B                 	db	123
   605  0085' 6F                 	db	111
   606  0086' 67                 	db	103
   607  0087' 3E                 	db	62
   608  0088' 00                 	db	0
   609  0089' 0C                 	db	12
   610  008A' 0E                 	db	14
   611  008B' 0C                 	db	12
   612  008C' 0C                 	db	12
   613  008D' 0C                 	db	12
   614  008E' 0C                 	db	12
   615  008F' 3F                 	db	63
   616  0090' 00                 	db	0
   617  0091' 1E                 	db	30
   618  0092' 33                 	db	51
   619  0093' 30                 	db	48
   620  0094' 1C                 	db	28
   621  0095' 06                 	db	6
   622  0096' 33                 	db	51
   623  0097' 3F                 	db	63
   624  0098' 00                 	db	0
   625  0099' 1E                 	db	30
   626  009A' 33                 	db	51
   627  009B' 30                 	db	48
   628  009C' 1C                 	db	28
   629  009D' 30                 	db	48
   630  009E' 33                 	db	51
   631  009F' 1E                 	db	30
   632  00A0' 00                 	db	0
   633  00A1' 38                 	db	56
   634  00A2' 3C                 	db	60
   635  00A3' 36                 	db	54
   636  00A4' 33                 	db	51
   637  00A5' 7F                 	db	127
   638  00A6' 30                 	db	48
   639  00A7' 78                 	db	120
   640  00A8' 00                 	db	0
   641  00A9' 3F                 	db	63
   642  00AA' 03                 	db	3
   643  00AB' 1F                 	db	31
   644  00AC' 30                 	db	48
   645  00AD' 30                 	db	48
   646  00AE' 33                 	db	51
   647  00AF' 1E                 	db	30
   648  00B0' 00                 	db	0
   649  00B1' 1C                 	db	28
   650  00B2' 06                 	db	6
   651  00B3' 03                 	db	3
   652  00B4' 1F                 	db	31
   653  00B5' 33                 	db	51
   654  00B6' 33                 	db	51
   655  00B7' 1E                 	db	30
   656  00B8' 00                 	db	0
   657  00B9' 3F                 	db	63
   658  00BA' 33                 	db	51
   659  00BB' 30                 	db	48
   660  00BC' 18                 	db	24
   661  00BD' 0C                 	db	12
   662  00BE' 0C                 	db	12
   663  00BF' 0C                 	db	12
   664  00C0' 00                 	db	0
   665  00C1' 1E                 	db	30
   666  00C2' 33                 	db	51
   667  00C3' 33                 	db	51
   668  00C4' 1E                 	db	30
   669  00C5' 33                 	db	51
   670  00C6' 33                 	db	51
   671  00C7' 1E                 	db	30
   672  00C8' 00                 	db	0
   673  00C9' 1E                 	db	30
   674  00CA' 33                 	db	51
   675  00CB' 33                 	db	51
   676  00CC' 3E                 	db	62
   677  00CD' 30                 	db	48
   678  00CE' 18                 	db	24
   679  00CF' 0E                 	db	14
   680  00D0' 00                 	db	0
   681  00D1' 00                 	db	0
   682  00D2' 0C                 	db	12
   683  00D3' 0C                 	db	12
   684  00D4' 00                 	db	0
   685  00D5' 00                 	db	0
   686  00D6' 0C                 	db	12
   687  00D7' 0C                 	db	12
   688  00D8' 00                 	db	0
   689  00D9' 00                 	db	0
   690  00DA' 0C                 	db	12
   691  00DB' 0C                 	db	12
   692  00DC' 00                 	db	0
   693  00DD' 00                 	db	0
   694  00DE' 0C                 	db	12
   695  00DF' 0C                 	db	12
   696  00E0' 06                 	db	6
   697  00E1' 18                 	db	24
   698  00E2' 0C                 	db	12
   699  00E3' 06                 	db	6
   700  00E4' 03                 	db	3
   701  00E5' 06                 	db	6
   702  00E6' 0C                 	db	12
   703  00E7' 18                 	db	24
   704  00E8' 00                 	db	0
   705  00E9' 00                 	db	0
   706  00EA' 00                 	db	0
   707  00EB' 3F                 	db	63
   708  00EC' 00                 	db	0
   709  00ED' 00                 	db	0
   710  00EE' 3F                 	db	63
   711  00EF' 00                 	db	0
   712  00F0' 00                 	db	0
   713  00F1' 06                 	db	6
   714  00F2' 0C                 	db	12
   715  00F3' 18                 	db	24
   716  00F4' 30                 	db	48
   717  00F5' 18                 	db	24
   718  00F6' 0C                 	db	12
   719  00F7' 06                 	db	6
   720  00F8' 00                 	db	0
   721  00F9' 1E                 	db	30
   722  00FA' 33                 	db	51
   723  00FB' 30                 	db	48
   724  00FC' 18                 	db	24
   725  00FD' 0C                 	db	12
   726  00FE' 00                 	db	0
   727  00FF' 0C                 	db	12
   728  0100' 00                 	db	0
   729  0101' 3E                 	db	62
   730  0102' 63                 	db	99
   731  0103' 7B                 	db	123
   732  0104' 7B                 	db	123
   733  0105' 7B                 	db	123
   734  0106' 03                 	db	3
   735  0107' 1E                 	db	30
   736  0108' 00                 	db	0
   737  0109' 0C                 	db	12
   738  010A' 1E                 	db	30
   739  010B' 33                 	db	51
   740  010C' 33                 	db	51
   741  010D' 3F                 	db	63
   742  010E' 33                 	db	51
   743  010F' 33                 	db	51
   744  0110' 00                 	db	0
   745  0111' 3F                 	db	63
   746  0112' 66                 	db	102
   747  0113' 66                 	db	102
   748  0114' 3E                 	db	62
   749  0115' 66                 	db	102
   750  0116' 66                 	db	102
   751  0117' 3F                 	db	63
   752  0118' 00                 	db	0
   753  0119' 3C                 	db	60
   754  011A' 66                 	db	102
   755  011B' 03                 	db	3
   756  011C' 03                 	db	3
   757  011D' 03                 	db	3
   758  011E' 66                 	db	102
   759  011F' 3C                 	db	60
   760  0120' 00                 	db	0
   761  0121' 1F                 	db	31
   762  0122' 36                 	db	54
   763  0123' 66                 	db	102
   764  0124' 66                 	db	102
   765  0125' 66                 	db	102
   766  0126' 36                 	db	54
   767  0127' 1F                 	db	31
   768  0128' 00                 	db	0
   769  0129' 7F                 	db	127
   770  012A' 46                 	db	70
   771  012B' 16                 	db	22
   772  012C' 1E                 	db	30
   773  012D' 16                 	db	22
   774  012E' 46                 	db	70
   775  012F' 7F                 	db	127
   776  0130' 00                 	db	0
   777  0131' 7F                 	db	127
   778  0132' 46                 	db	70
   779  0133' 16                 	db	22
   780  0134' 1E                 	db	30
   781  0135' 16                 	db	22
   782  0136' 06                 	db	6
   783  0137' 0F                 	db	15
   784  0138' 00                 	db	0
   785  0139' 3C                 	db	60
   786  013A' 66                 	db	102
   787  013B' 03                 	db	3
   788  013C' 03                 	db	3
   789  013D' 73                 	db	115
   790  013E' 66                 	db	102
   791  013F' 7C                 	db	124
   792  0140' 00                 	db	0
   793  0141' 33                 	db	51
   794  0142' 33                 	db	51
   795  0143' 33                 	db	51
   796  0144' 3F                 	db	63
   797  0145' 33                 	db	51
   798  0146' 33                 	db	51
   799  0147' 33                 	db	51
   800  0148' 00                 	db	0
   801  0149' 1E                 	db	30
   802  014A' 0C                 	db	12
   803  014B' 0C                 	db	12
   804  014C' 0C                 	db	12
   805  014D' 0C                 	db	12
   806  014E' 0C                 	db	12
   807  014F' 1E                 	db	30
   808  0150' 00                 	db	0
   809  0151' 78                 	db	120
   810  0152' 30                 	db	48
   811  0153' 30                 	db	48
   812  0154' 30                 	db	48
   813  0155' 33                 	db	51
   814  0156' 33                 	db	51
   815  0157' 1E                 	db	30
   816  0158' 00                 	db	0
   817  0159' 67                 	db	103
   818  015A' 66                 	db	102
   819  015B' 36                 	db	54
   820  015C' 1E                 	db	30
   821  015D' 36                 	db	54
   822  015E' 66                 	db	102
   823  015F' 67                 	db	103
   824  0160' 00                 	db	0
   825  0161' 0F                 	db	15
   826  0162' 06                 	db	6
   827  0163' 06                 	db	6
   828  0164' 06                 	db	6
   829  0165' 46                 	db	70
   830  0166' 66                 	db	102
   831  0167' 7F                 	db	127
   832  0168' 00                 	db	0
   833  0169' 63                 	db	99
   834  016A' 77                 	db	119
   835  016B' 7F                 	db	127
   836  016C' 7F                 	db	127
   837  016D' 6B                 	db	107
   838  016E' 63                 	db	99
   839  016F' 63                 	db	99
   840  0170' 00                 	db	0
   841  0171' 63                 	db	99
   842  0172' 67                 	db	103
   843  0173' 6F                 	db	111
   844  0174' 7B                 	db	123
   845  0175' 73                 	db	115
   846  0176' 63                 	db	99
   847  0177' 63                 	db	99
   848  0178' 00                 	db	0
   849  0179' 1C                 	db	28
   850  017A' 36                 	db	54
   851  017B' 63                 	db	99
   852  017C' 63                 	db	99
   853  017D' 63                 	db	99
   854  017E' 36                 	db	54
   855  017F' 1C                 	db	28
   856  0180' 00                 	db	0
   857  0181' 3F                 	db	63
   858  0182' 66                 	db	102
   859  0183' 66                 	db	102
   860  0184' 3E                 	db	62
   861  0185' 06                 	db	6
   862  0186' 06                 	db	6
   863  0187' 0F                 	db	15
   864  0188' 00                 	db	0
   865  0189' 1E                 	db	30
   866  018A' 33                 	db	51
   867  018B' 33                 	db	51
   868  018C' 33                 	db	51
   869  018D' 3B                 	db	59
   870  018E' 1E                 	db	30
   871  018F' 38                 	db	56
   872  0190' 00                 	db	0
   873  0191' 3F                 	db	63
   874  0192' 66                 	db	102
   875  0193' 66                 	db	102
   876  0194' 3E                 	db	62
   877  0195' 36                 	db	54
   878  0196' 66                 	db	102
   879  0197' 67                 	db	103
   880  0198' 00                 	db	0
   881  0199' 1E                 	db	30
   882  019A' 33                 	db	51
   883  019B' 07                 	db	7
   884  019C' 0E                 	db	14
   885  019D' 38                 	db	56
   886  019E' 33                 	db	51
   887  019F' 1E                 	db	30
   888  01A0' 00                 	db	0
   889  01A1' 3F                 	db	63
   890  01A2' 2D                 	db	45
   891  01A3' 0C                 	db	12
   892  01A4' 0C                 	db	12
   893  01A5' 0C                 	db	12
   894  01A6' 0C                 	db	12
   895  01A7' 1E                 	db	30
   896  01A8' 00                 	db	0
   897  01A9' 33                 	db	51
   898  01AA' 33                 	db	51
   899  01AB' 33                 	db	51
   900  01AC' 33                 	db	51
   901  01AD' 33                 	db	51
   902  01AE' 33                 	db	51
   903  01AF' 3F                 	db	63
   904  01B0' 00                 	db	0
   905  01B1' 33                 	db	51
   906  01B2' 33                 	db	51
   907  01B3' 33                 	db	51
   908  01B4' 33                 	db	51
   909  01B5' 33                 	db	51
   910  01B6' 1E                 	db	30
   911  01B7' 0C                 	db	12
   912  01B8' 00                 	db	0
   913  01B9' 63                 	db	99
   914  01BA' 63                 	db	99
   915  01BB' 63                 	db	99
   916  01BC' 6B                 	db	107
   917  01BD' 7F                 	db	127
   918  01BE' 77                 	db	119
   919  01BF' 63                 	db	99
   920  01C0' 00                 	db	0
   921  01C1' 63                 	db	99
   922  01C2' 63                 	db	99
   923  01C3' 36                 	db	54
   924  01C4' 1C                 	db	28
   925  01C5' 1C                 	db	28
   926  01C6' 36                 	db	54
   927  01C7' 63                 	db	99
   928  01C8' 00                 	db	0
   929  01C9' 33                 	db	51
   930  01CA' 33                 	db	51
   931  01CB' 33                 	db	51
   932  01CC' 1E                 	db	30
   933  01CD' 0C                 	db	12
   934  01CE' 0C                 	db	12
   935  01CF' 1E                 	db	30
   936  01D0' 00                 	db	0
   937  01D1' 7F                 	db	127
   938  01D2' 63                 	db	99
   939  01D3' 31                 	db	49
   940  01D4' 18                 	db	24
   941  01D5' 4C                 	db	76
   942  01D6' 66                 	db	102
   943  01D7' 7F                 	db	127
   944  01D8' 00                 	db	0
   945  01D9' 1E                 	db	30
   946  01DA' 06                 	db	6
   947  01DB' 06                 	db	6
   948  01DC' 06                 	db	6
   949  01DD' 06                 	db	6
   950  01DE' 06                 	db	6
   951  01DF' 1E                 	db	30
   952  01E0' 00                 	db	0
   953  01E1' 03                 	db	3
   954  01E2' 06                 	db	6
   955  01E3' 0C                 	db	12
   956  01E4' 18                 	db	24
   957  01E5' 30                 	db	48
   958  01E6' 60                 	db	96
   959  01E7' 40                 	db	64
   960  01E8' 00                 	db	0
   961  01E9' 1E                 	db	30
   962  01EA' 18                 	db	24
   963  01EB' 18                 	db	24
   964  01EC' 18                 	db	24
   965  01ED' 18                 	db	24
   966  01EE' 18                 	db	24
   967  01EF' 1E                 	db	30
   968  01F0' 00                 	db	0
   969  01F1' 08                 	db	8
   970  01F2' 1C                 	db	28
   971  01F3' 36                 	db	54
   972  01F4' 63                 	db	99
   973  01F5' 00                 	db	0
   974  01F6' 00                 	db	0
   975  01F7' 00                 	db	0
   976  01F8' 00                 	db	0
   977  01F9' 00                 	db	0
   978  01FA' 00                 	db	0
   979  01FB' 00                 	db	0
   980  01FC' 00                 	db	0
   981  01FD' 00                 	db	0
   982  01FE' 00                 	db	0
   983  01FF' 00                 	db	0
   984  0200' FF                 	db	255
   985  0201' 0C                 	db	12
   986  0202' 0C                 	db	12
   987  0203' 18                 	db	24
   988  0204' 00                 	db	0
   989  0205' 00                 	db	0
   990  0206' 00                 	db	0
   991  0207' 00                 	db	0
   992  0208' 00                 	db	0
   993  0209' 00                 	db	0
   994  020A' 00                 	db	0
   995  020B' 1E                 	db	30
   996  020C' 30                 	db	48
   997  020D' 3E                 	db	62
   998  020E' 33                 	db	51
   999  020F' 6E                 	db	110
  1000  0210' 00                 	db	0
  1001  0211' 07                 	db	7
  1002  0212' 06                 	db	6
  1003  0213' 06                 	db	6
  1004  0214' 3E                 	db	62
  1005  0215' 66                 	db	102
  1006  0216' 66                 	db	102
  1007  0217' 3B                 	db	59
  1008  0218' 00                 	db	0
  1009  0219' 00                 	db	0
  1010  021A' 00                 	db	0
  1011  021B' 1E                 	db	30
  1012  021C' 33                 	db	51
  1013  021D' 03                 	db	3
  1014  021E' 33                 	db	51
  1015  021F' 1E                 	db	30
  1016  0220' 00                 	db	0
  1017  0221' 38                 	db	56
  1018  0222' 30                 	db	48
  1019  0223' 30                 	db	48
  1020  0224' 3E                 	db	62
  1021  0225' 33                 	db	51
  1022  0226' 33                 	db	51
  1023  0227' 6E                 	db	110
  1024  0228' 00                 	db	0
  1025  0229' 00                 	db	0
  1026  022A' 00                 	db	0
  1027  022B' 1E                 	db	30
  1028  022C' 33                 	db	51
  1029  022D' 3F                 	db	63
  1030  022E' 03                 	db	3
  1031  022F' 1E                 	db	30
  1032  0230' 00                 	db	0
  1033  0231' 1C                 	db	28
  1034  0232' 36                 	db	54
  1035  0233' 06                 	db	6
  1036  0234' 0F                 	db	15
  1037  0235' 06                 	db	6
  1038  0236' 06                 	db	6
  1039  0237' 0F                 	db	15
  1040  0238' 00                 	db	0
  1041  0239' 00                 	db	0
  1042  023A' 00                 	db	0
  1043  023B' 6E                 	db	110
  1044  023C' 33                 	db	51
  1045  023D' 33                 	db	51
  1046  023E' 3E                 	db	62
  1047  023F' 30                 	db	48
  1048  0240' 1F                 	db	31
  1049  0241' 07                 	db	7
  1050  0242' 06                 	db	6
  1051  0243' 36                 	db	54
  1052  0244' 6E                 	db	110
  1053  0245' 66                 	db	102
  1054  0246' 66                 	db	102
  1055  0247' 67                 	db	103
  1056  0248' 00                 	db	0
  1057  0249' 0C                 	db	12
  1058  024A' 00                 	db	0
  1059  024B' 0E                 	db	14
  1060  024C' 0C                 	db	12
  1061  024D' 0C                 	db	12
  1062  024E' 0C                 	db	12
  1063  024F' 1E                 	db	30
  1064  0250' 00                 	db	0
  1065  0251' 30                 	db	48
  1066  0252' 00                 	db	0
  1067  0253' 30                 	db	48
  1068  0254' 30                 	db	48
  1069  0255' 30                 	db	48
  1070  0256' 33                 	db	51
  1071  0257' 33                 	db	51
  1072  0258' 1E                 	db	30
  1073  0259' 07                 	db	7
  1074  025A' 06                 	db	6
  1075  025B' 66                 	db	102
  1076  025C' 36                 	db	54
  1077  025D' 1E                 	db	30
  1078  025E' 36                 	db	54
  1079  025F' 67                 	db	103
  1080  0260' 00                 	db	0
  1081  0261' 0E                 	db	14
  1082  0262' 0C                 	db	12
  1083  0263' 0C                 	db	12
  1084  0264' 0C                 	db	12
  1085  0265' 0C                 	db	12
  1086  0266' 0C                 	db	12
  1087  0267' 1E                 	db	30
  1088  0268' 00                 	db	0
  1089  0269' 00                 	db	0
  1090  026A' 00                 	db	0
  1091  026B' 33                 	db	51
  1092  026C' 7F                 	db	127
  1093  026D' 7F                 	db	127
  1094  026E' 6B                 	db	107
  1095  026F' 63                 	db	99
  1096  0270' 00                 	db	0
  1097  0271' 00                 	db	0
  1098  0272' 00                 	db	0
  1099  0273' 1F                 	db	31
  1100  0274' 33                 	db	51
  1101  0275' 33                 	db	51
  1102  0276' 33                 	db	51
  1103  0277' 33                 	db	51
  1104  0278' 00                 	db	0
  1105  0279' 00                 	db	0
  1106  027A' 00                 	db	0
  1107  027B' 1E                 	db	30
  1108  027C' 33                 	db	51
  1109  027D' 33                 	db	51
  1110  027E' 33                 	db	51
  1111  027F' 1E                 	db	30
  1112  0280' 00                 	db	0
  1113  0281' 00                 	db	0
  1114  0282' 00                 	db	0
  1115  0283' 3B                 	db	59
  1116  0284' 66                 	db	102
  1117  0285' 66                 	db	102
  1118  0286' 3E                 	db	62
  1119  0287' 06                 	db	6
  1120  0288' 0F                 	db	15
  1121  0289' 00                 	db	0
  1122  028A' 00                 	db	0
  1123  028B' 6E                 	db	110
  1124  028C' 33                 	db	51
  1125  028D' 33                 	db	51
  1126  028E' 3E                 	db	62
  1127  028F' 30                 	db	48
  1128  0290' 78                 	db	120
  1129  0291' 00                 	db	0
  1130  0292' 00                 	db	0
  1131  0293' 3B                 	db	59
  1132  0294' 6E                 	db	110
  1133  0295' 66                 	db	102
  1134  0296' 06                 	db	6
  1135  0297' 0F                 	db	15
  1136  0298' 00                 	db	0
  1137  0299' 00                 	db	0
  1138  029A' 00                 	db	0
  1139  029B' 3E                 	db	62
  1140  029C' 03                 	db	3
  1141  029D' 1E                 	db	30
  1142  029E' 30                 	db	48
  1143  029F' 1F                 	db	31
  1144  02A0' 00                 	db	0
  1145  02A1' 08                 	db	8
  1146  02A2' 0C                 	db	12
  1147  02A3' 3E                 	db	62
  1148  02A4' 0C                 	db	12
  1149  02A5' 0C                 	db	12
  1150  02A6' 2C                 	db	44
  1151  02A7' 18                 	db	24
  1152  02A8' 00                 	db	0
  1153  02A9' 00                 	db	0
  1154  02AA' 00                 	db	0
  1155  02AB' 33                 	db	51
  1156  02AC' 33                 	db	51
  1157  02AD' 33                 	db	51
  1158  02AE' 33                 	db	51
  1159  02AF' 6E                 	db	110
  1160  02B0' 00                 	db	0
  1161  02B1' 00                 	db	0
  1162  02B2' 00                 	db	0
  1163  02B3' 33                 	db	51
  1164  02B4' 33                 	db	51
  1165  02B5' 33                 	db	51
  1166  02B6' 1E                 	db	30
  1167  02B7' 0C                 	db	12
  1168  02B8' 00                 	db	0
  1169  02B9' 00                 	db	0
  1170  02BA' 00                 	db	0
  1171  02BB' 63                 	db	99
  1172  02BC' 6B                 	db	107
  1173  02BD' 7F                 	db	127
  1174  02BE' 7F                 	db	127
  1175  02BF' 36                 	db	54
  1176  02C0' 00                 	db	0
  1177  02C1' 00                 	db	0
  1178  02C2' 00                 	db	0
  1179  02C3' 63                 	db	99
  1180  02C4' 36                 	db	54
  1181  02C5' 1C                 	db	28
  1182  02C6' 36                 	db	54
  1183  02C7' 63                 	db	99
  1184  02C8' 00                 	db	0
  1185  02C9' 00                 	db	0
  1186  02CA' 00                 	db	0
  1187  02CB' 33                 	db	51
  1188  02CC' 33                 	db	51
  1189  02CD' 33                 	db	51
  1190  02CE' 3E                 	db	62
  1191  02CF' 30                 	db	48
  1192  02D0' 1F                 	db	31
  1193  02D1' 00                 	db	0
  1194  02D2' 00                 	db	0
  1195  02D3' 3F                 	db	63
  1196  02D4' 19                 	db	25
  1197  02D5' 0C                 	db	12
  1198  02D6' 26                 	db	38
  1199  02D7' 3F                 	db	63
  1200  02D8' 00                 	db	0
  1201  02D9' 38                 	db	56
  1202  02DA' 0C                 	db	12
  1203  02DB' 0C                 	db	12
  1204  02DC' 07                 	db	7
  1205  02DD' 0C                 	db	12
  1206  02DE' 0C                 	db	12
  1207  02DF' 38                 	db	56
  1208  02E0' 00                 	db	0
  1209  02E1' 18                 	db	24
  1210  02E2' 18                 	db	24
  1211  02E3' 18                 	db	24
  1212  02E4' 00                 	db	0
  1213  02E5' 18                 	db	24
  1214  02E6' 18                 	db	24
  1215  02E7' 18                 	db	24
  1216  02E8' 00                 	db	0
  1217  02E9' 07                 	db	7
  1218  02EA' 0C                 	db	12
  1219  02EB' 0C                 	db	12
  1220  02EC' 38                 	db	56
  1221  02ED' 0C                 	db	12
  1222  02EE' 0C                 	db	12
  1223  02EF' 07                 	db	7
  1224  02F0' 00                 	db	0
  1225  02F1' 6E                 	db	110
  1226  02F2' 3B                 	db	59
  1227  02F3' 00                 	db	0
  1228  02F4' 00                 	db	0
  1229  02F5' 00                 	db	0
  1230  02F6' 00                 	db	0
  1231  02F7' 00                 	db	0
  1232  02F8' 00                 	db	0
  1233  02F9' 00                 	db	0
  1234  02FA' 00                 	db	0
  1235  02FB' 00                 	db	0
  1236  02FC' 00                 	db	0
  1237  02FD' 00                 	db	0
  1238  02FE' 00                 	db	0
  1239  02FF' 00                 	db	0
  1240  0300' 00                 	db	0
  1241  0301' 00                 	db	0
  1242  0302' 00                 	db	0
  1243  0303' 00                 	db	0
  1244  0304' 00                 	db	0
  1245  0305' 00                 	db	0
  1246  0306' 00                 	db	0
  1247  0307' 00                 	db	0
  1248  0308' 00                 	db	0
  1249  0309'                    __end_of_font8x8_basic:
  1250                           	opt callstack 0
  1251  0309'                    _out_freq_table:
  1252                           	opt callstack 0
  1253  0309' 0003               	dw	3
  1254  030B' 0015               	dw	21
  1255  030D' 001C               	dw	28
  1256  030F' 001D               	dw	29
  1257  0311' 0032               	dw	50
  1258  0313' 0046               	dw	70
  1259  0315' 0090               	dw	144
  1260  0317' 0091               	dw	145
  1261  0319' 01B3               	dw	435
  1262  031B' 01B7               	dw	439
  1263  031D'                    __end_of_out_freq_table:
  1264                           	opt callstack 0
  1265  031D'                    _PIN_LED2:
  1266                           	opt callstack 0
  1267  031D' 00'                	db	low _PIN_LED2_DEF
  1268  031E' 00'                	db	high _PIN_LED2_DEF
  1269  031F'                    __end_of_PIN_LED2:
  1270                           	opt callstack 0
  1271  031F'                    _PIN_LED1:
  1272                           	opt callstack 0
  1273  031F' 00'                	db	low _PIN_LED1_DEF
  1274  0320' 00'                	db	high _PIN_LED1_DEF
  1275  0321'                    __end_of_PIN_LED1:
  1276                           	opt callstack 0
  1277  0321'                    _PIN_LED0:
  1278                           	opt callstack 0
  1279  0321' 00'                	db	low _PIN_LED0_DEF
  1280  0322' 00'                	db	high _PIN_LED0_DEF
  1281  0323'                    __end_of_PIN_LED0:
  1282                           	opt callstack 0
  1283  0323'                    _PIN_LED3:
  1284                           	opt callstack 0
  1285  0323' 00'                	db	low _PIN_LED3_DEF
  1286  0324' 00'                	db	high _PIN_LED3_DEF
  1287  0325'                    __end_of_PIN_LED3:
  1288                           	opt callstack 0
  1289  0325' 00'                	db	low _PIN_USART_RX_DEF
  1290  0326' 00'                	db	high _PIN_USART_RX_DEF
  1291  0327'                    __end_of_PIN_USART_RX:
  1292                           	opt callstack 0
  1293  0327' 00'                	db	low _PIN_USART_TX_DEF
  1294  0328' 00'                	db	high _PIN_USART_TX_DEF
  1295  0329'                    __end_of_PIN_USART_TX:
  1296                           	opt callstack 0
  1297  0329' 00'                	db	low _PIN_LNB_QRG1_DEF
  1298  032A' 00'                	db	high _PIN_LNB_QRG1_DEF
  1299  032B'                    __end_of_PIN_LNB_QRG1:
  1300                           	opt callstack 0
  1301  032B' 00'                	db	low _PIN_LNB_QRG2_DEF
  1302  032C' 00'                	db	high _PIN_LNB_QRG2_DEF
  1303  032D'                    __end_of_PIN_LNB_QRG2:
  1304                           	opt callstack 0
  1305  032D' 00'                	db	low _PIN_SJ6_DEF
  1306  032E' 00'                	db	high _PIN_SJ6_DEF
  1307  032F'                    __end_of_PIN_SJ6:
  1308                           	opt callstack 0
  1309  032F' 00'                	db	low _PIN_SJ5_DEF
  1310  0330' 00'                	db	high _PIN_SJ5_DEF
  1311  0331'                    __end_of_PIN_SJ5:
  1312                           	opt callstack 0
  1313  0331' 00'                	db	low _PIN_SJ4_DEF
  1314  0332' 00'                	db	high _PIN_SJ4_DEF
  1315  0333'                    __end_of_PIN_SJ4:
  1316                           	opt callstack 0
  1317  0333' 00'                	db	low _PIN_SJ3_DEF
  1318  0334' 00'                	db	high _PIN_SJ3_DEF
  1319  0335'                    __end_of_PIN_SJ3:
  1320                           	opt callstack 0
  1321  0335' 00'                	db	low _PIN_I2C_SDA_DEF
  1322  0336' 00'                	db	high _PIN_I2C_SDA_DEF
  1323  0337'                    __end_of_PIN_I2C_SDA:
  1324                           	opt callstack 0
  1325  0337' 00'                	db	low _PIN_I2C_SCL_DEF
  1326  0338' 00'                	db	high _PIN_I2C_SCL_DEF
  1327  0339'                    __end_of_PIN_I2C_SCL:
  1328                           	opt callstack 0
  1329  0339' 00'                	db	low _PIN_LED_CPU_OK_DEF
  1330  033A' 00'                	db	high _PIN_LED_CPU_OK_DEF
  1331  033B'                    __end_of_PIN_LED_CPU_OK:
  1332                           	opt callstack 0
  1333  033B' 00'                	db	low _PIN_SI5328_CS_CA_DEF
  1334  033C' 00'                	db	high _PIN_SI5328_CS_CA_DEF
  1335  033D'                    __end_of_PIN_SI5328_CS_CA:
  1336                           	opt callstack 0
  1337  033D' 00'                	db	low _PIN_LED_SI_LOCK_DEF
  1338  033E' 00'                	db	high _PIN_LED_SI_LOCK_DEF
  1339  033F'                    __end_of_PIN_LED_SI_LOCK:
  1340                           	opt callstack 0
  1341  033F' 00'                	db	low _PIN_SI5328_LOL_DEF
  1342  0340' 00'                	db	high _PIN_SI5328_LOL_DEF
  1343  0341'                    __end_of_PIN_SI5328_LOL:
  1344                           	opt callstack 0
  1345  0341' 00'                	db	low _PIN_LED_LNB_GOOD_DEF
  1346  0342' 00'                	db	high _PIN_LED_LNB_GOOD_DEF
  1347  0343'                    __end_of_PIN_LED_LNB_GOOD:
  1348                           	opt callstack 0
  1349  0343' 00'                	db	low _PIN_LNB_FAULT_DEF
  1350  0344' 00'                	db	high _PIN_LNB_FAULT_DEF
  1351  0345'                    __end_of_PIN_LNB_FAULT:
  1352                           	opt callstack 0
  1353  0345' 00'                	db	low _PIN_SIO_DATA_DEF
  1354  0346' 00'                	db	high _PIN_SIO_DATA_DEF
  1355  0347'                    __end_of_PIN_SIO_DATA:
  1356                           	opt callstack 0
  1357  0347' 00'                	db	low _PIN_SIO_CLK_DEF
  1358  0348' 00'                	db	high _PIN_SIO_CLK_DEF
  1359  0349'                    __end_of_PIN_SIO_CLK:
  1360                           	opt callstack 0
  1361  0349' 00'                	db	low _PIN_LED_ADF_LOCK_DEF
  1362  034A' 00'                	db	high _PIN_LED_ADF_LOCK_DEF
  1363  034B'                    __end_of_PIN_LED_ADF_LOCK:
  1364                           	opt callstack 0
  1365  034B' 00'                	db	low _PIN_ADF_LOCK_DEF
  1366  034C' 00'                	db	high _PIN_ADF_LOCK_DEF
  1367  034D'                    __end_of_PIN_ADF_LOCK:
  1368                           	opt callstack 0
  1369  034D' 00'                	db	low _PIN_ADF_CE_DEF
  1370  034E' 00'                	db	high _PIN_ADF_CE_DEF
  1371  034F'                    __end_of_PIN_ADF_CE:
  1372                           	opt callstack 0
  1373  034F' 00'                	db	low _PIN_ADF_LE_DEF
  1374  0350' 00'                	db	high _PIN_ADF_LE_DEF
  1375  0351'                    __end_of_PIN_ADF_LE:
  1376                           	opt callstack 0
  1377  0351'                    _freq_table_27_OPT:
  1378                           	opt callstack 0
  1379  0351' BF00               	dw	48896
  1380  0353' 0013               	dw	19
  1381  0355' 78B0               	dw	30896
  1382  0357' 0013               	dw	19
  1383  0359' 5D58               	dw	23896
  1384  035B' 0013               	dw	19
  1385  035D' 5970               	dw	22896
  1386  035F' 0013               	dw	19
  1387  0361' 0768               	dw	1896
  1388  0363' 0013               	dw	19
  1389  0365' B948               	dw	47432
  1390  0367' 0012               	dw	18
  1391  0369' 9838               	dw	38968
  1392  036B' 0011               	dw	17
  1393  036D' 9450               	dw	37968
  1394  036F' 0011               	dw	17
  1395  0371' 2780               	dw	10112
  1396  0373' 000D               	dw	13
  1397  0375' 17E0               	dw	6112
  1398  0377' 000D               	dw	13
  1399  0379'                    __end_of_freq_table_27_OPT:
  1400                           	opt callstack 0
  1401  0379'                    _freq_table_27_26:
  1402                           	opt callstack 0
  1403  0379' BD97               	dw	48535
  1404  037B' 0010               	dw	16
  1405  037D' 7747               	dw	30535
  1406  037F' 0010               	dw	16
  1407  0381' 5BEF               	dw	23535
  1408  0383' 0010               	dw	16
  1409  0385' 5807               	dw	22535
  1410  0387' 0010               	dw	16
  1411  0389' 05FF               	dw	1535
  1412  038B' 0010               	dw	16
  1413  038D' B7DF               	dw	47071
  1414  038F' 000F               	dw	15
  1415  0391' 96CF               	dw	38607
  1416  0393' 000E               	dw	14
  1417  0395' 92E7               	dw	37607
  1418  0397' 000E               	dw	14
  1419  0399' 2617               	dw	9751
  1420  039B' 000A               	dw	10
  1421  039D' 1677               	dw	5751
  1422  039F' 000A               	dw	10
  1423  03A1'                    __end_of_freq_table_27_26:
  1424                           	opt callstack 0
  1425  03A1'                    _freq_table_25_25:
  1426                           	opt callstack 0
  1427  03A1' 3B00               	dw	15104
  1428  03A3' 000B               	dw	11
  1429  03A5' F4B0               	dw	62640
  1430  03A7' 000A               	dw	10
  1431  03A9' D958               	dw	55640
  1432  03AB' 000A               	dw	10
  1433  03AD' D570               	dw	54640
  1434  03AF' 000A               	dw	10
  1435  03B1' 8368               	dw	33640
  1436  03B3' 000A               	dw	10
  1437  03B5' 3548               	dw	13640
  1438  03B7' 000A               	dw	10
  1439  03B9' 1438               	dw	5176
  1440  03BB' 0009               	dw	9
  1441  03BD' 1050               	dw	4176
  1442  03BF' 0009               	dw	9
  1443  03C1' A380               	dw	41856
  1444  03C3' 0004               	dw	4
  1445  03C5' 93E0               	dw	37856
  1446  03C7' 0004               	dw	4
  1447  03C9'                    __end_of_freq_table_25_25:
  1448                           	opt callstack 0
  1449  03C9'                    _freq_table_25_24:
  1450                           	opt callstack 0
  1451  03C9' 2E70               	dw	11888
  1452  03CB' 0011               	dw	17
  1453  03CD' E820               	dw	59424
  1454  03CF' 0010               	dw	16
  1455  03D1' CCC8               	dw	52424
  1456  03D3' 0010               	dw	16
  1457  03D5' C8E0               	dw	51424
  1458  03D7' 0010               	dw	16
  1459  03D9' 76D8               	dw	30424
  1460  03DB' 0010               	dw	16
  1461  03DD' 28B8               	dw	10424
  1462  03DF' 0010               	dw	16
  1463  03E1' 07A8               	dw	1960
  1464  03E3' 000F               	dw	15
  1465  03E5' 03C0               	dw	960
  1466  03E7' 000F               	dw	15
  1467  03E9' 96F0               	dw	38640
  1468  03EB' 000A               	dw	10
  1469  03ED' 8750               	dw	34640
  1470  03EF' 000A               	dw	10
  1471  03F1'                    __end_of_freq_table_25_24:
  1472                           	opt callstack 0
  1473  03F1'                    _reg_set_univ_CKIN1_GPS:
  1474                           	opt callstack 0
  1475  03F1' 00                 	db	0
  1476  03F2' 14                 	db	20
  1477  03F3' 01                 	db	1
  1478  03F4' E4                 	db	228
  1479  03F5' 02                 	db	2
  1480  03F6' F2                 	db	242
  1481  03F7' 03                 	db	3
  1482  03F8' 05                 	db	5
  1483  03F9' 04                 	db	4
  1484  03FA' 17                 	db	23
  1485  03FB' 06                 	db	6
  1486  03FC' 15                 	db	21
  1487  03FD' 09                 	db	9
  1488  03FE' C8                 	db	200
  1489  03FF' 13                 	db	19
  1490  0400' 29                 	db	41
  1491  0401' 14                 	db	20
  1492  0402' 3E                 	db	62
  1493  0403' 15                 	db	21
  1494  0404' FC                 	db	252
  1495  0405' 37                 	db	55
  1496  0406' 08                 	db	8
  1497  0407' 89                 	db	137
  1498  0408' 01                 	db	1
  1499  0409' 8B                 	db	139
  1500  040A' FC                 	db	252
  1501  040B'                    __end_of_reg_set_univ_CKIN1_GPS:
  1502                           	opt callstack 0
  1503  040B'                    _reg_set_univ_CKIN2_XAXB:
  1504                           	opt callstack 0
  1505  040B' 00                 	db	0
  1506  040C' 54                 	db	84
  1507  040D' 02                 	db	2
  1508  040E' F2                 	db	242
  1509  040F' 03                 	db	3
  1510  0410' 45                 	db	69
  1511  0411' 04                 	db	4
  1512  0412' 17                 	db	23
  1513  0413' 06                 	db	6
  1514  0414' 15                 	db	21
  1515  0415' 09                 	db	9
  1516  0416' C8                 	db	200
  1517  0417' 13                 	db	19
  1518  0418' 29                 	db	41
  1519  0419' 14                 	db	20
  1520  041A' 3E                 	db	62
  1521  041B' 15                 	db	21
  1522  041C' FC                 	db	252
  1523  041D' 37                 	db	55
  1524  041E' 08                 	db	8
  1525  041F' 89                 	db	137
  1526  0420' 01                 	db	1
  1527  0421' 8B                 	db	139
  1528  0422' FC                 	db	252
  1529  0423'                    __end_of_reg_set_univ_CKIN2_XAXB:
  1530                           	opt callstack 0
  1531  0423'                    _PIN_LNB_FAULT_DEF:
  1532                           	opt callstack 0
  1533  0423' 82                 	db	130
  1534  0424' 0F                 	db	15
  1535  0425' 94                 	db	148
  1536  0426' 0F                 	db	15
  1537  0427' 20                 	db	32
  1538  0428'                    __end_of_PIN_LNB_FAULT_DEF:
  1539                           	opt callstack 0
  1540  0428'                    _PIN_LNB_QRG1_DEF:
  1541                           	opt callstack 0
  1542  0428' 81                 	db	129
  1543  0429' 0F                 	db	15
  1544  042A' 93                 	db	147
  1545  042B' 0F                 	db	15
  1546  042C' 20                 	db	32
  1547  042D'                    __end_of_PIN_LNB_QRG1_DEF:
  1548                           	opt callstack 0
  1549  042D'                    _PIN_LNB_QRG2_DEF:
  1550                           	opt callstack 0
  1551  042D' 81                 	db	129
  1552  042E' 0F                 	db	15
  1553  042F' 93                 	db	147
  1554  0430' 0F                 	db	15
  1555  0431' 01                 	db	1
  1556  0432'                    __end_of_PIN_LNB_QRG2_DEF:
  1557                           	opt callstack 0
  1558  0432'                    _PIN_SJ6_DEF:
  1559                           	opt callstack 0
  1560  0432' 81                 	db	129
  1561  0433' 0F                 	db	15
  1562  0434' 93                 	db	147
  1563  0435' 0F                 	db	15
  1564  0436' 10                 	db	16
  1565  0437'                    __end_of_PIN_SJ6_DEF:
  1566                           	opt callstack 0
  1567  0437'                    _PIN_SJ5_DEF:
  1568                           	opt callstack 0
  1569  0437' 81                 	db	129
  1570  0438' 0F                 	db	15
  1571  0439' 93                 	db	147
  1572  043A' 0F                 	db	15
  1573  043B' 08                 	db	8
  1574  043C'                    __end_of_PIN_SJ5_DEF:
  1575                           	opt callstack 0
  1576  043C'                    _PIN_SJ4_DEF:
  1577                           	opt callstack 0
  1578  043C' 81                 	db	129
  1579  043D' 0F                 	db	15
  1580  043E' 93                 	db	147
  1581  043F' 0F                 	db	15
  1582  0440' 04                 	db	4
  1583  0441'                    __end_of_PIN_SJ4_DEF:
  1584                           	opt callstack 0
  1585  0441'                    _PIN_SJ3_DEF:
  1586                           	opt callstack 0
  1587  0441' 81                 	db	129
  1588  0442' 0F                 	db	15
  1589  0443' 93                 	db	147
  1590  0444' 0F                 	db	15
  1591  0445' 02                 	db	2
  1592  0446'                    __end_of_PIN_SJ3_DEF:
  1593                           	opt callstack 0
  1594  0446'                    _PIN_USART_RX_DEF:
  1595                           	opt callstack 0
  1596  0446' 82                 	db	130
  1597  0447' 0F                 	db	15
  1598  0448' 94                 	db	148
  1599  0449' 0F                 	db	15
  1600  044A' 80                 	db	128
  1601  044B'                    __end_of_PIN_USART_RX_DEF:
  1602                           	opt callstack 0
  1603  044B'                    _PIN_USART_TX_DEF:
  1604                           	opt callstack 0
  1605  044B' 82                 	db	130
  1606  044C' 0F                 	db	15
  1607  044D' 94                 	db	148
  1608  044E' 0F                 	db	15
  1609  044F' 40                 	db	64
  1610  0450'                    __end_of_PIN_USART_TX_DEF:
  1611                           	opt callstack 0
  1612  0450'                    _PIN_I2C_SDA_DEF:
  1613                           	opt callstack 0
  1614  0450' 82                 	db	130
  1615  0451' 0F                 	db	15
  1616  0452' 94                 	db	148
  1617  0453' 0F                 	db	15
  1618  0454' 10                 	db	16
  1619  0455'                    __end_of_PIN_I2C_SDA_DEF:
  1620                           	opt callstack 0
  1621  0455'                    _PIN_I2C_SCL_DEF:
  1622                           	opt callstack 0
  1623  0455' 82                 	db	130
  1624  0456' 0F                 	db	15
  1625  0457' 94                 	db	148
  1626  0458' 0F                 	db	15
  1627  0459' 08                 	db	8
  1628  045A'                    __end_of_PIN_I2C_SCL_DEF:
  1629                           	opt callstack 0
  1630  045A'                    _PIN_LED2_DEF:
  1631  045A' 82                 	db	130
  1632  045B' 0F                 	db	15
  1633  045C' 94                 	db	148
  1634  045D' 0F                 	db	15
  1635  045E' 04                 	db	4
  1636  045F'                    __end_of_PIN_LED2_DEF:
  1637                           	opt callstack 0
  1638  045F'                    _PIN_LED_LNB_GOOD_DEF:
  1639                           	opt callstack 0
  1640  045F' 82                 	db	130
  1641  0460' 0F                 	db	15
  1642  0461' 94                 	db	148
  1643  0462' 0F                 	db	15
  1644  0463' 04                 	db	4
  1645  0464'                    __end_of_PIN_LED_LNB_GOOD_DEF:
  1646                           	opt callstack 0
  1647  0464'                    _PIN_LED1_DEF:
  1648  0464' 82                 	db	130
  1649  0465' 0F                 	db	15
  1650  0466' 94                 	db	148
  1651  0467' 0F                 	db	15
  1652  0468' 02                 	db	2
  1653  0469'                    __end_of_PIN_LED1_DEF:
  1654                           	opt callstack 0
  1655  0469'                    _PIN_LED_ADF_LOCK_DEF:
  1656                           	opt callstack 0
  1657  0469' 82                 	db	130
  1658  046A' 0F                 	db	15
  1659  046B' 94                 	db	148
  1660  046C' 0F                 	db	15
  1661  046D' 02                 	db	2
  1662  046E'                    __end_of_PIN_LED_ADF_LOCK_DEF:
  1663                           	opt callstack 0
  1664  046E'                    _PIN_LED0_DEF:
  1665  046E' 82                 	db	130
  1666  046F' 0F                 	db	15
  1667  0470' 94                 	db	148
  1668  0471' 0F                 	db	15
  1669  0472' 01                 	db	1
  1670  0473'                    __end_of_PIN_LED0_DEF:
  1671                           	opt callstack 0
  1672  0473'                    _PIN_LED_CPU_OK_DEF:
  1673                           	opt callstack 0
  1674  0473' 82                 	db	130
  1675  0474' 0F                 	db	15
  1676  0475' 94                 	db	148
  1677  0476' 0F                 	db	15
  1678  0477' 01                 	db	1
  1679  0478'                    __end_of_PIN_LED_CPU_OK_DEF:
  1680                           	opt callstack 0
  1681  0478'                    _PIN_LED3_DEF:
  1682  0478' 80                 	db	128
  1683  0479' 0F                 	db	15
  1684  047A' 92                 	db	146
  1685  047B' 0F                 	db	15
  1686  047C' 40                 	db	64
  1687  047D'                    __end_of_PIN_LED3_DEF:
  1688                           	opt callstack 0
  1689  047D'                    _PIN_LED_SI_LOCK_DEF:
  1690                           	opt callstack 0
  1691  047D' 80                 	db	128
  1692  047E' 0F                 	db	15
  1693  047F' 92                 	db	146
  1694  0480' 0F                 	db	15
  1695  0481' 40                 	db	64
  1696  0482'                    __end_of_PIN_LED_SI_LOCK_DEF:
  1697                           	opt callstack 0
  1698  0482'                    _PIN_SI5328_CS_CA_DEF:
  1699                           	opt callstack 0
  1700  0482' 80                 	db	128
  1701  0483' 0F                 	db	15
  1702  0484' 92                 	db	146
  1703  0485' 0F                 	db	15
  1704  0486' 80                 	db	128
  1705  0487'                    __end_of_PIN_SI5328_CS_CA_DEF:
  1706                           	opt callstack 0
  1707  0487'                    _PIN_SI5328_LOL_DEF:
  1708                           	opt callstack 0
  1709  0487' 80                 	db	128
  1710  0488' 0F                 	db	15
  1711  0489' 92                 	db	146
  1712  048A' 0F                 	db	15
  1713  048B' 20                 	db	32
  1714  048C'                    __end_of_PIN_SI5328_LOL_DEF:
  1715                           	opt callstack 0
  1716  048C'                    _PIN_SIO_CLK_DEF:
  1717                           	opt callstack 0
  1718  048C' 80                 	db	128
  1719  048D' 0F                 	db	15
  1720  048E' 92                 	db	146
  1721  048F' 0F                 	db	15
  1722  0490' 10                 	db	16
  1723  0491'                    __end_of_PIN_SIO_CLK_DEF:
  1724                           	opt callstack 0
  1725  0491'                    _PIN_SIO_DATA_DEF:
  1726                           	opt callstack 0
  1727  0491' 80                 	db	128
  1728  0492' 0F                 	db	15
  1729  0493' 92                 	db	146
  1730  0494' 0F                 	db	15
  1731  0495' 08                 	db	8
  1732  0496'                    __end_of_PIN_SIO_DATA_DEF:
  1733                           	opt callstack 0
  1734  0496'                    _PIN_ADF_LE_DEF:
  1735                           	opt callstack 0
  1736  0496' 80                 	db	128
  1737  0497' 0F                 	db	15
  1738  0498' 92                 	db	146
  1739  0499' 0F                 	db	15
  1740  049A' 04                 	db	4
  1741  049B'                    __end_of_PIN_ADF_LE_DEF:
  1742                           	opt callstack 0
  1743  049B'                    _PIN_ADF_CE_DEF:
  1744                           	opt callstack 0
  1745  049B' 80                 	db	128
  1746  049C' 0F                 	db	15
  1747  049D' 92                 	db	146
  1748  049E' 0F                 	db	15
  1749  049F' 02                 	db	2
  1750  04A0'                    __end_of_PIN_ADF_CE_DEF:
  1751                           	opt callstack 0
  1752  04A0'                    _PIN_ADF_LOCK_DEF:
  1753                           	opt callstack 0
  1754  04A0' 80                 	db	128
  1755  04A1' 0F                 	db	15
  1756  04A2' 92                 	db	146
  1757  04A3' 0F                 	db	15
  1758  04A4' 01                 	db	1
  1759  04A5'                    __end_of_PIN_ADF_LOCK_DEF:
  1760                           	opt callstack 0
  1761  0000                     _WDTCON	set	4049
  1762  0000                     _RCONbits	set	4048
  1763  0000                     _PIE2	set	4000
  1764  0000                     _PIE1	set	3997
  1765  0000                     _OSCCONbits	set	4051
  1766  0000                     _OSCCON	set	4051
  1767  0000                     _OSCTUNE	set	3995
  1768  0000                     _INTCON2bits	set	4081
  1769  0000                     _ADCON1bits	set	4033
  1770  0000                     _INTCONbits	set	4082
  1771  0000                     _RCREG	set	4014
  1772  0000                     _TXREG	set	4013
  1773  0000                     _PIE1bits	set	3997
  1774  0000                     _SPBRG	set	4015
  1775  0000                     _SPBRGH	set	4016
  1776  0000                     _BAUDCONbits	set	4024
  1777  0000                     _RCSTAbits	set	4011
  1778  0000                     _TXSTAbits	set	4012
  1779  0000                     _SSPBUF	set	4041
  1780  0000                     _SSPCON2bits	set	4037
  1781  0000                     _PIR1bits	set	3998
  1782  0000                     _SSPADD	set	4040
  1783  0000                     _SSPSTATbits	set	4039
  1784  0000                     _SSPCON1bits	set	4038
  1785  0000                     _TRISB	set	3987
  1786  0000                     _PORTC	set	3970
  1787  0000                     _TRISA	set	3986
  1788  0000                     _PORTA	set	3968
  1789  0000                     _PORTB	set	3969
  1790  0000                     _TRISC	set	3988
  1791  04A5'                    STR_7:
  1792  04A5' 4C                 	db	76	;'L'
  1793  04A6' 4E                 	db	78	;'N'
  1794  04A7' 42                 	db	66	;'B'
  1795  04A8' 3A                 	db	58	;':'
  1796  04A9' 46                 	db	70	;'F'
  1797  04AA' 61                 	db	97	;'a'
  1798  04AB' 69                 	db	105	;'i'
  1799  04AC' 6C                 	db	108	;'l'
  1800  04AD' 65                 	db	101	;'e'
  1801  04AE' 64                 	db	100	;'d'
  1802  04AF' 20                 	db	32
  1803  04B0' 74                 	db	116	;'t'
  1804  04B1' 6F                 	db	111	;'o'
  1805  04B2' 20                 	db	32
  1806  04B3' 63                 	db	99	;'c'
  1807  04B4' 6F                 	db	111	;'o'
  1808  04B5' 6E                 	db	110	;'n'
  1809  04B6' 66                 	db	102	;'f'
  1810  04B7' 69                 	db	105	;'i'
  1811  04B8' 67                 	db	103	;'g'
  1812  04B9' 75                 	db	117	;'u'
  1813  04BA' 72                 	db	114	;'r'
  1814  04BB' 65                 	db	101	;'e'
  1815  04BC' 20                 	db	32
  1816  04BD' 4C                 	db	76	;'L'
  1817  04BE' 4E                 	db	78	;'N'
  1818  04BF' 42                 	db	66	;'B'
  1819  04C0' 20                 	db	32
  1820  04C1' 43                 	db	67	;'C'
  1821  04C2' 68                 	db	104	;'h'
  1822  04C3' 69                 	db	105	;'i'
  1823  04C4' 70                 	db	112	;'p'
  1824  04C5' 20                 	db	32
  1825  04C6' 28                 	db	40
  1826  04C7' 25                 	db	37
  1827  04C8' 69                 	db	105	;'i'
  1828  04C9' 29                 	db	41
  1829  04CA' 0A                 	db	10
  1830  04CB' 00                 	db	0
  1831  04CC'                    STR_18:
  1832  04CC' 73                 	db	115	;'s'
  1833  04CD' 69                 	db	105	;'i'
  1834  04CE' 3A                 	db	58	;':'
  1835  04CF' 47                 	db	71	;'G'
  1836  04D0' 50                 	db	80	;'P'
  1837  04D1' 53                 	db	83	;'S'
  1838  04D2' 20                 	db	32
  1839  04D3' 75                 	db	117	;'u'
  1840  04D4' 6E                 	db	110	;'n'
  1841  04D5' 6C                 	db	108	;'l'
  1842  04D6' 6F                 	db	111	;'o'
  1843  04D7' 63                 	db	99	;'c'
  1844  04D8' 6B                 	db	107	;'k'
  1845  04D9' 65                 	db	101	;'e'
  1846  04DA' 64                 	db	100	;'d'
  1847  04DB' 2C                 	db	44
  1848  04DC' 20                 	db	32
  1849  04DD' 54                 	db	84	;'T'
  1850  04DE' 43                 	db	67	;'C'
  1851  04DF' 58                 	db	88	;'X'
  1852  04E0' 4F                 	db	79	;'O'
  1853  04E1' 20                 	db	32
  1854  04E2' 33                 	db	51	;'3'
  1855  04E3' 38                 	db	56	;'8'
  1856  04E4' 2C                 	db	44
  1857  04E5' 34                 	db	52	;'4'
  1858  04E6' 20                 	db	32
  1859  04E7' 4D                 	db	77	;'M'
  1860  04E8' 48                 	db	72	;'H'
  1861  04E9' 7A                 	db	122	;'z'
  1862  04EA' 0A                 	db	10
  1863  04EB' 00                 	db	0
  1864  04EC'                    STR_13:
  1865  04EC' 73                 	db	115	;'s'
  1866  04ED' 69                 	db	105	;'i'
  1867  04EE' 3A                 	db	58	;':'
  1868  04EF' 47                 	db	71	;'G'
  1869  04F0' 50                 	db	80	;'P'
  1870  04F1' 53                 	db	83	;'S'
  1871  04F2' 20                 	db	32
  1872  04F3' 75                 	db	117	;'u'
  1873  04F4' 6E                 	db	110	;'n'
  1874  04F5' 6C                 	db	108	;'l'
  1875  04F6' 6F                 	db	111	;'o'
  1876  04F7' 63                 	db	99	;'c'
  1877  04F8' 6B                 	db	107	;'k'
  1878  04F9' 65                 	db	101	;'e'
  1879  04FA' 64                 	db	100	;'d'
  1880  04FB' 3A                 	db	58	;':'
  1881  04FC' 20                 	db	32
  1882  04FD' 54                 	db	84	;'T'
  1883  04FE' 43                 	db	67	;'C'
  1884  04FF' 58                 	db	88	;'X'
  1885  0500' 4F                 	db	79	;'O'
  1886  0501' 20                 	db	32
  1887  0502' 33                 	db	51	;'3'
  1888  0503' 38                 	db	56	;'8'
  1889  0504' 2C                 	db	44
  1890  0505' 34                 	db	52	;'4'
  1891  0506' 20                 	db	32
  1892  0507' 4D                 	db	77	;'M'
  1893  0508' 48                 	db	72	;'H'
  1894  0509' 7A                 	db	122	;'z'
  1895  050A' 0A                 	db	10
  1896  050B' 00                 	db	0
  1897  050C'                    STR_93:
  1898  050C' 41                 	db	65	;'A'
  1899  050D' 44                 	db	68	;'D'
  1900  050E' 46                 	db	70	;'F'
  1901  050F' 3A                 	db	58	;':'
  1902  0510' 4C                 	db	76	;'L'
  1903  0511' 4E                 	db	78	;'N'
  1904  0512' 42                 	db	66	;'B'
  1905  0513' 4C                 	db	76	;'L'
  1906  0514' 4F                 	db	79	;'O'
  1907  0515' 3A                 	db	58	;':'
  1908  0516' 25                 	db	37
  1909  0517' 64                 	db	100	;'d'
  1910  0518' 0A                 	db	10
  1911  0519' 41                 	db	65	;'A'
  1912  051A' 44                 	db	68	;'D'
  1913  051B' 46                 	db	70	;'F'
  1914  051C' 3A                 	db	58	;':'
  1915  051D' 73                 	db	115	;'s'
  1916  051E' 77                 	db	119	;'w'
  1917  051F' 3A                 	db	58	;':'
  1918  0520' 25                 	db	37
  1919  0521' 64                 	db	100	;'d'
  1920  0522' 3D                 	db	61	;'='
  1921  0523' 25                 	db	37
  1922  0524' 6C                 	db	108	;'l'
  1923  0525' 64                 	db	100	;'d'
  1924  0526' 6B                 	db	107	;'k'
  1925  0527' 48                 	db	72	;'H'
  1926  0528' 7A                 	db	122	;'z'
  1927  0529' 0A                 	db	10
  1928  052A' 00                 	db	0
  1929  052B'                    STR_35:
  1930  052B' 73                 	db	115	;'s'
  1931  052C' 69                 	db	105	;'i'
  1932  052D' 3A                 	db	58	;':'
  1933  052E' 77                 	db	119	;'w'
  1934  052F' 72                 	db	114	;'r'
  1935  0530' 69                 	db	105	;'i'
  1936  0531' 74                 	db	116	;'t'
  1937  0532' 65                 	db	101	;'e'
  1938  0533' 5F                 	db	95	;'_'
  1939  0534' 72                 	db	114	;'r'
  1940  0535' 65                 	db	101	;'e'
  1941  0536' 67                 	db	103	;'g'
  1942  0537' 73                 	db	115	;'s'
  1943  0538' 65                 	db	101	;'e'
  1944  0539' 74                 	db	116	;'t'
  1945  053A' 20                 	db	32
  1946  053B' 25                 	db	37
  1947  053C' 69                 	db	105	;'i'
  1948  053D' 20                 	db	32
  1949  053E' 65                 	db	101	;'e'
  1950  053F' 72                 	db	114	;'r'
  1951  0540' 72                 	db	114	;'r'
  1952  0541' 6F                 	db	111	;'o'
  1953  0542' 72                 	db	114	;'r'
  1954  0543' 73                 	db	115	;'s'
  1955  0544' 2E                 	db	46
  1956  0545' 0A                 	db	10
  1957  0546' 00                 	db	0
  1958  0547'                    STR_32:
  1959  0547' 47                 	db	71	;'G'
  1960  0548' 50                 	db	80	;'P'
  1961  0549' 53                 	db	83	;'S'
  1962  054A' 3A                 	db	58	;':'
  1963  054B' 6C                 	db	108	;'l'
  1964  054C' 6F                 	db	111	;'o'
  1965  054D' 63                 	db	99	;'c'
  1966  054E' 6B                 	db	107	;'k'
  1967  054F' 65                 	db	101	;'e'
  1968  0550' 64                 	db	100	;'d'
  1969  0551' 0A                 	db	10
  1970  0552' 73                 	db	115	;'s'
  1971  0553' 69                 	db	105	;'i'
  1972  0554' 3A                 	db	58	;':'
  1973  0555' 73                 	db	115	;'s'
  1974  0556' 79                 	db	121	;'y'
  1975  0557' 6E                 	db	110	;'n'
  1976  0558' 63                 	db	99	;'c'
  1977  0559' 69                 	db	105	;'i'
  1978  055A' 6E                 	db	110	;'n'
  1979  055B' 67                 	db	103	;'g'
  1980  055C' 20                 	db	32
  1981  055D' 47                 	db	71	;'G'
  1982  055E' 50                 	db	80	;'P'
  1983  055F' 53                 	db	83	;'S'
  1984  0560' 0A                 	db	10
  1985  0561' 00                 	db	0
  1986  0562'                    STR_91:
  1987  0562' 47                 	db	71	;'G'
  1988  0563' 50                 	db	80	;'P'
  1989  0564' 53                 	db	83	;'S'
  1990  0565' 3A                 	db	58	;':'
  1991  0566' 69                 	db	105	;'i'
  1992  0567' 6E                 	db	110	;'n'
  1993  0568' 69                 	db	105	;'i'
  1994  0569' 74                 	db	116	;'t'
  1995  056A' 20                 	db	32
  1996  056B' 55                 	db	85	;'U'
  1997  056C' 62                 	db	98	;'b'
  1998  056D' 6C                 	db	108	;'l'
  1999  056E' 6F                 	db	111	;'o'
  2000  056F' 78                 	db	120	;'x'
  2001  0570' 20                 	db	32
  2002  0571' 25                 	db	37
  2003  0572' 64                 	db	100	;'d'
  2004  0573' 20                 	db	32
  2005  0574' 6F                 	db	111	;'o'
  2006  0575' 66                 	db	102	;'f'
  2007  0576' 20                 	db	32
  2008  0577' 31                 	db	49	;'1'
  2009  0578' 30                 	db	48	;'0'
  2010  0579' 30                 	db	48	;'0'
  2011  057A' 0A                 	db	10
  2012  057B' 00                 	db	0
  2013  057C'                    STR_5:
  2014  057C' 4C                 	db	76	;'L'
  2015  057D' 4E                 	db	78	;'N'
  2016  057E' 42                 	db	66	;'B'
  2017  057F' 3A                 	db	58	;':'
  2018  0580' 4C                 	db	76	;'L'
  2019  0581' 4E                 	db	78	;'N'
  2020  0582' 42                 	db	66	;'B'
  2021  0583' 20                 	db	32
  2022  0584' 43                 	db	67	;'C'
  2023  0585' 68                 	db	104	;'h'
  2024  0586' 69                 	db	105	;'i'
  2025  0587' 70                 	db	112	;'p'
  2026  0588' 20                 	db	32
  2027  0589' 6E                 	db	110	;'n'
  2028  058A' 6F                 	db	111	;'o'
  2029  058B' 74                 	db	116	;'t'
  2030  058C' 20                 	db	32
  2031  058D' 66                 	db	102	;'f'
  2032  058E' 6F                 	db	111	;'o'
  2033  058F' 75                 	db	117	;'u'
  2034  0590' 6E                 	db	110	;'n'
  2035  0591' 64                 	db	100	;'d'
  2036  0592' 21                 	db	33
  2037  0593' 0A                 	db	10
  2038  0594' 00                 	db	0
  2039  0595'                    STR_6:
  2040  0595' 4C                 	db	76	;'L'
  2041  0596' 4E                 	db	78	;'N'
  2042  0597' 42                 	db	66	;'B'
  2043  0598' 3A                 	db	58	;':'
  2044  0599' 4C                 	db	76	;'L'
  2045  059A' 4E                 	db	78	;'N'
  2046  059B' 42                 	db	66	;'B'
  2047  059C' 20                 	db	32
  2048  059D' 43                 	db	67	;'C'
  2049  059E' 68                 	db	104	;'h'
  2050  059F' 69                 	db	105	;'i'
  2051  05A0' 70                 	db	112	;'p'
  2052  05A1' 20                 	db	32
  2053  05A2' 63                 	db	99	;'c'
  2054  05A3' 6F                 	db	111	;'o'
  2055  05A4' 6E                 	db	110	;'n'
  2056  05A5' 66                 	db	102	;'f'
  2057  05A6' 69                 	db	105	;'i'
  2058  05A7' 67                 	db	103	;'g'
  2059  05A8' 75                 	db	117	;'u'
  2060  05A9' 72                 	db	114	;'r'
  2061  05AA' 65                 	db	101	;'e'
  2062  05AB' 64                 	db	100	;'d'
  2063  05AC' 0A                 	db	10
  2064  05AD' 00                 	db	0
  2065  05AE'                    STR_1:
  2066  05AE' 41                 	db	65	;'A'
  2067  05AF' 44                 	db	68	;'D'
  2068  05B0' 46                 	db	70	;'F'
  2069  05B1' 3A                 	db	58	;':'
  2070  05B2' 25                 	db	37
  2071  05B3' 6C                 	db	108	;'l'
  2072  05B4' 64                 	db	100	;'d'
  2073  05B5' 20                 	db	32
  2074  05B6' 6B                 	db	107	;'k'
  2075  05B7' 48                 	db	72	;'H'
  2076  05B8' 7A                 	db	122	;'z'
  2077  05B9' 20                 	db	32
  2078  05BA' 28                 	db	40
  2079  05BB' 63                 	db	99	;'c'
  2080  05BC' 6F                 	db	111	;'o'
  2081  05BD' 72                 	db	114	;'r'
  2082  05BE' 72                 	db	114	;'r'
  2083  05BF' 3A                 	db	58	;':'
  2084  05C0' 25                 	db	37
  2085  05C1' 6C                 	db	108	;'l'
  2086  05C2' 64                 	db	100	;'d'
  2087  05C3' 29                 	db	41
  2088  05C4' 0A                 	db	10
  2089  05C5' 00                 	db	0
  2090  05C6'                    STR_36:
  2091  05C6' 4C                 	db	76	;'L'
  2092  05C7' 43                 	db	67	;'C'
  2093  05C8' 44                 	db	68	;'D'
  2094  05C9' 3A                 	db	58	;':'
  2095  05CA' 4F                 	db	79	;'O'
  2096  05CB' 4C                 	db	76	;'L'
  2097  05CC' 45                 	db	69	;'E'
  2098  05CD' 44                 	db	68	;'D'
  2099  05CE' 20                 	db	32
  2100  05CF' 6E                 	db	110	;'n'
  2101  05D0' 6F                 	db	111	;'o'
  2102  05D1' 74                 	db	116	;'t'
  2103  05D2' 20                 	db	32
  2104  05D3' 66                 	db	102	;'f'
  2105  05D4' 6F                 	db	111	;'o'
  2106  05D5' 75                 	db	117	;'u'
  2107  05D6' 6E                 	db	110	;'n'
  2108  05D7' 64                 	db	100	;'d'
  2109  05D8' 2E                 	db	46
  2110  05D9' 0A                 	db	10
  2111  05DA' 00                 	db	0
  2112  05DB'                    STR_10:
  2113  05DB' 73                 	db	115	;'s'
  2114  05DC' 69                 	db	105	;'i'
  2115  05DD' 3A                 	db	58	;':'
  2116  05DE' 65                 	db	101	;'e'
  2117  05DF' 78                 	db	120	;'x'
  2118  05E0' 74                 	db	116	;'t'
  2119  05E1' 2E                 	db	46
  2120  05E2' 20                 	db	32
  2121  05E3' 31                 	db	49	;'1'
  2122  05E4' 30                 	db	48	;'0'
  2123  05E5' 20                 	db	32
  2124  05E6' 4D                 	db	77	;'M'
  2125  05E7' 48                 	db	72	;'H'
  2126  05E8' 7A                 	db	122	;'z'
  2127  05E9' 20                 	db	32
  2128  05EA' 72                 	db	114	;'r'
  2129  05EB' 65                 	db	101	;'e'
  2130  05EC' 66                 	db	102	;'f'
  2131  05ED' 0A                 	db	10
  2132  05EE' 00                 	db	0
  2133  05EF'                    STR_31:
  2134  05EF' 73                 	db	115	;'s'
  2135  05F0' 69                 	db	105	;'i'
  2136  05F1' 3A                 	db	58	;':'
  2137  05F2' 47                 	db	71	;'G'
  2138  05F3' 50                 	db	80	;'P'
  2139  05F4' 53                 	db	83	;'S'
  2140  05F5' 20                 	db	32
  2141  05F6' 6F                 	db	111	;'o'
  2142  05F7' 6B                 	db	107	;'k'
  2143  05F8' 2C                 	db	44
  2144  05F9' 20                 	db	32
  2145  05FA' 6E                 	db	110	;'n'
  2146  05FB' 6F                 	db	111	;'o'
  2147  05FC' 20                 	db	32
  2148  05FD' 6C                 	db	108	;'l'
  2149  05FE' 6F                 	db	111	;'o'
  2150  05FF' 63                 	db	99	;'c'
  2151  0600' 6B                 	db	107	;'k'
  2152  0601' 0A                 	db	10
  2153  0602' 00                 	db	0
  2154  0603'                    STR_4:
  2155  0603' 4C                 	db	76	;'L'
  2156  0604' 4E                 	db	78	;'N'
  2157  0605' 42                 	db	66	;'B'
  2158  0606' 3A                 	db	58	;':'
  2159  0607' 4C                 	db	76	;'L'
  2160  0608' 4E                 	db	78	;'N'
  2161  0609' 42                 	db	66	;'B'
  2162  060A' 20                 	db	32
  2163  060B' 43                 	db	67	;'C'
  2164  060C' 68                 	db	104	;'h'
  2165  060D' 69                 	db	105	;'i'
  2166  060E' 70                 	db	112	;'p'
  2167  060F' 20                 	db	32
  2168  0610' 66                 	db	102	;'f'
  2169  0611' 6F                 	db	111	;'o'
  2170  0612' 75                 	db	117	;'u'
  2171  0613' 6E                 	db	110	;'n'
  2172  0614' 64                 	db	100	;'d'
  2173  0615' 0A                 	db	10
  2174  0616' 00                 	db	0
  2175  0617'                    STR_40:
  2176  0617' 4F                 	db	79	;'O'
  2177  0618' 4C                 	db	76	;'L'
  2178  0619' 44                 	db	68	;'D'
  2179  061A' 20                 	db	32
  2180  061B' 25                 	db	37
  2181  061C' 30                 	db	48	;'0'
  2182  061D' 32                 	db	50	;'2'
  2183  061E' 64                 	db	100	;'d'
  2184  061F' 20                 	db	32
  2185  0620' 25                 	db	37
  2186  0621' 30                 	db	48	;'0'
  2187  0622' 32                 	db	50	;'2'
  2188  0623' 64                 	db	100	;'d'
  2189  0624' 20                 	db	32
  2190  0625' 25                 	db	37
  2191  0626' 73                 	db	115	;'s'
  2192  0627' 0A                 	db	10
  2193  0628' 00                 	db	0
  2194  0629'                    STR_11:
  2195  0629' 73                 	db	115	;'s'
  2196  062A' 69                 	db	105	;'i'
  2197  062B' 3A                 	db	58	;':'
  2198  062C' 54                 	db	84	;'T'
  2199  062D' 43                 	db	67	;'C'
  2200  062E' 58                 	db	88	;'X'
  2201  062F' 4F                 	db	79	;'O'
  2202  0630' 20                 	db	32
  2203  0631' 33                 	db	51	;'3'
  2204  0632' 38                 	db	56	;'8'
  2205  0633' 2C                 	db	44
  2206  0634' 34                 	db	52	;'4'
  2207  0635' 20                 	db	32
  2208  0636' 4D                 	db	77	;'M'
  2209  0637' 48                 	db	72	;'H'
  2210  0638' 7A                 	db	122	;'z'
  2211  0639' 0A                 	db	10
  2212  063A' 00                 	db	0
  2213  063B'                    STR_9:
  2214  063B' 4C                 	db	76	;'L'
  2215  063C' 4E                 	db	78	;'N'
  2216  063D' 42                 	db	66	;'B'
  2217  063E' 3A                 	db	58	;':'
  2218  063F' 20                 	db	32
  2219  0640' 65                 	db	101	;'e'
  2220  0641' 72                 	db	114	;'r'
  2221  0642' 72                 	db	114	;'r'
  2222  0643' 6F                 	db	111	;'o'
  2223  0644' 72                 	db	114	;'r'
  2224  0645' 3A                 	db	58	;':'
  2225  0646' 20                 	db	32
  2226  0647' 25                 	db	37
  2227  0648' 30                 	db	48	;'0'
  2228  0649' 32                 	db	50	;'2'
  2229  064A' 58                 	db	88	;'X'
  2230  064B' 0A                 	db	10
  2231  064C' 00                 	db	0
  2232  064D'                    STR_37:
  2233  064D' 4C                 	db	76	;'L'
  2234  064E' 43                 	db	67	;'C'
  2235  064F' 44                 	db	68	;'D'
  2236  0650' 3A                 	db	58	;':'
  2237  0651' 4F                 	db	79	;'O'
  2238  0652' 4C                 	db	76	;'L'
  2239  0653' 45                 	db	69	;'E'
  2240  0654' 44                 	db	68	;'D'
  2241  0655' 20                 	db	32
  2242  0656' 66                 	db	102	;'f'
  2243  0657' 6F                 	db	111	;'o'
  2244  0658' 75                 	db	117	;'u'
  2245  0659' 6E                 	db	110	;'n'
  2246  065A' 64                 	db	100	;'d'
  2247  065B' 21                 	db	33
  2248  065C' 0A                 	db	10
  2249  065D' 00                 	db	0
  2250  065E'                    STR_59:
  2251  065E' 20                 	db	32
  2252  065F' 20                 	db	32
  2253  0660' 20                 	db	32
  2254  0661' 20                 	db	32
  2255  0662' 20                 	db	32
  2256  0663' 20                 	db	32
  2257  0664' 20                 	db	32
  2258  0665' 20                 	db	32
  2259  0666' 20                 	db	32
  2260  0667' 20                 	db	32
  2261  0668' 20                 	db	32
  2262  0669' 20                 	db	32
  2263  066A' 20                 	db	32
  2264  066B' 20                 	db	32
  2265  066C' 20                 	db	32
  2266  066D' 20                 	db	32
  2267  066E' 00                 	db	0
  2268  066F'                    STR_44:
  2269  066F' 6D                 	db	109	;'m'
  2270  0670' 6F                 	db	111	;'o'
  2271  0671' 64                 	db	100	;'d'
  2272  0672' 65                 	db	101	;'e'
  2273  0673' 3A                 	db	58	;':'
  2274  0674' 20                 	db	32
  2275  0675' 20                 	db	32
  2276  0676' 20                 	db	32
  2277  0677' 20                 	db	32
  2278  0678' 20                 	db	32
  2279  0679' 20                 	db	32
  2280  067A' 20                 	db	32
  2281  067B' 20                 	db	32
  2282  067C' 20                 	db	32
  2283  067D' 20                 	db	32
  2284  067E' 20                 	db	32
  2285  067F' 00                 	db	0
  2286  0680'                    STR_41:
  2287  0680' 46                 	db	70	;'F'
  2288  0681' 69                 	db	105	;'i'
  2289  0682' 72                 	db	114	;'r'
  2290  0683' 6D                 	db	109	;'m'
  2291  0684' 77                 	db	119	;'w'
  2292  0685' 61                 	db	97	;'a'
  2293  0686' 72                 	db	114	;'r'
  2294  0687' 65                 	db	101	;'e'
  2295  0688' 3A                 	db	58	;':'
  2296  0689' 20                 	db	32
  2297  068A' 20                 	db	32
  2298  068B' 20                 	db	32
  2299  068C' 20                 	db	32
  2300  068D' 20                 	db	32
  2301  068E' 20                 	db	32
  2302  068F' 20                 	db	32
  2303  0690' 00                 	db	0
  2304  0691'                    STR_54:
  2305  0691' 47                 	db	71	;'G'
  2306  0692' 50                 	db	80	;'P'
  2307  0693' 53                 	db	83	;'S'
  2308  0694' 20                 	db	32
  2309  0695' 53                 	db	83	;'S'
  2310  0696' 41                 	db	65	;'A'
  2311  0697' 54                 	db	84	;'T'
  2312  0698' 73                 	db	115	;'s'
  2313  0699' 3A                 	db	58	;':'
  2314  069A' 20                 	db	32
  2315  069B' 20                 	db	32
  2316  069C' 20                 	db	32
  2317  069D' 20                 	db	32
  2318  069E' 20                 	db	32
  2319  069F' 20                 	db	32
  2320  06A0' 20                 	db	32
  2321  06A1' 00                 	db	0
  2322  06A2'                    STR_47:
  2323  06A2' 53                 	db	83	;'S'
  2324  06A3' 79                 	db	121	;'y'
  2325  06A4' 73                 	db	115	;'s'
  2326  06A5' 63                 	db	99	;'c'
  2327  06A6' 6C                 	db	108	;'l'
  2328  06A7' 6F                 	db	111	;'o'
  2329  06A8' 63                 	db	99	;'c'
  2330  06A9' 6B                 	db	107	;'k'
  2331  06AA' 20                 	db	32
  2332  06AB' 3A                 	db	58	;':'
  2333  06AC' 20                 	db	32
  2334  06AD' 20                 	db	32
  2335  06AE' 20                 	db	32
  2336  06AF' 20                 	db	32
  2337  06B0' 20                 	db	32
  2338  06B1' 20                 	db	32
  2339  06B2' 00                 	db	0
  2340  06B3'                    STR_46:
  2341  06B3' 4C                 	db	76	;'L'
  2342  06B4' 4E                 	db	78	;'N'
  2343  06B5' 42                 	db	66	;'B'
  2344  06B6' 2D                 	db	45
  2345  06B7' 70                 	db	112	;'p'
  2346  06B8' 6F                 	db	111	;'o'
  2347  06B9' 77                 	db	119	;'w'
  2348  06BA' 65                 	db	101	;'e'
  2349  06BB' 72                 	db	114	;'r'
  2350  06BC' 3A                 	db	58	;':'
  2351  06BD' 20                 	db	32
  2352  06BE' 20                 	db	32
  2353  06BF' 20                 	db	32
  2354  06C0' 20                 	db	32
  2355  06C1' 20                 	db	32
  2356  06C2' 20                 	db	32
  2357  06C3' 00                 	db	0
  2358  06C4'                    STR_48:
  2359  06C4' 44                 	db	68	;'D'
  2360  06C5' 6F                 	db	111	;'o'
  2361  06C6' 77                 	db	119	;'w'
  2362  06C7' 6E                 	db	110	;'n'
  2363  06C8' 6D                 	db	109	;'m'
  2364  06C9' 69                 	db	105	;'i'
  2365  06CA' 78                 	db	120	;'x'
  2366  06CB' 65                 	db	101	;'e'
  2367  06CC' 72                 	db	114	;'r'
  2368  06CD' 3A                 	db	58	;':'
  2369  06CE' 20                 	db	32
  2370  06CF' 20                 	db	32
  2371  06D0' 20                 	db	32
  2372  06D1' 20                 	db	32
  2373  06D2' 20                 	db	32
  2374  06D3' 20                 	db	32
  2375  06D4' 00                 	db	0
  2376  06D5'                    STR_66:
  2377  06D5' 73                 	db	115	;'s'
  2378  06D6' 61                 	db	97	;'a'
  2379  06D7' 74                 	db	116	;'t'
  2380  06D8' 65                 	db	101	;'e'
  2381  06D9' 6C                 	db	108	;'l'
  2382  06DA' 6C                 	db	108	;'l'
  2383  06DB' 69                 	db	105	;'i'
  2384  06DC' 74                 	db	116	;'t'
  2385  06DD' 65                 	db	101	;'e'
  2386  06DE' 73                 	db	115	;'s'
  2387  06DF' 3A                 	db	58	;':'
  2388  06E0' 20                 	db	32
  2389  06E1' 20                 	db	32
  2390  06E2' 20                 	db	32
  2391  06E3' 20                 	db	32
  2392  06E4' 20                 	db	32
  2393  06E5' 00                 	db	0
  2394  06E6'                    STR_45:
  2395  06E6' 6E                 	db	110	;'n'
  2396  06E7' 6F                 	db	111	;'o'
  2397  06E8' 72                 	db	114	;'r'
  2398  06E9' 6D                 	db	109	;'m'
  2399  06EA' 61                 	db	97	;'a'
  2400  06EB' 6C                 	db	108	;'l'
  2401  06EC' 20                 	db	32
  2402  06ED' 6D                 	db	109	;'m'
  2403  06EE' 6F                 	db	111	;'o'
  2404  06EF' 64                 	db	100	;'d'
  2405  06F0' 65                 	db	101	;'e'
  2406  06F1' 20                 	db	32
  2407  06F2' 20                 	db	32
  2408  06F3' 20                 	db	32
  2409  06F4' 20                 	db	32
  2410  06F5' 20                 	db	32
  2411  06F6' 00                 	db	0
  2412  06F7'                    STR_60:
  2413  06F7' 53                 	db	83	;'S'
  2414  06F8' 79                 	db	121	;'y'
  2415  06F9' 73                 	db	115	;'s'
  2416  06FA' 74                 	db	116	;'t'
  2417  06FB' 65                 	db	101	;'e'
  2418  06FC' 6D                 	db	109	;'m'
  2419  06FD' 20                 	db	32
  2420  06FE' 72                 	db	114	;'r'
  2421  06FF' 65                 	db	101	;'e'
  2422  0700' 61                 	db	97	;'a'
  2423  0701' 64                 	db	100	;'d'
  2424  0702' 79                 	db	121	;'y'
  2425  0703' 20                 	db	32
  2426  0704' 20                 	db	32
  2427  0705' 20                 	db	32
  2428  0706' 20                 	db	32
  2429  0707' 00                 	db	0
  2430  0708'                    STR_65:
  2431  0708' 73                 	db	115	;'s'
  2432  0709' 65                 	db	101	;'e'
  2433  070A' 61                 	db	97	;'a'
  2434  070B' 72                 	db	114	;'r'
  2435  070C' 63                 	db	99	;'c'
  2436  070D' 68                 	db	104	;'h'
  2437  070E' 69                 	db	105	;'i'
  2438  070F' 6E                 	db	110	;'n'
  2439  0710' 67                 	db	103	;'g'
  2440  0711' 20                 	db	32
  2441  0712' 47                 	db	71	;'G'
  2442  0713' 50                 	db	80	;'P'
  2443  0714' 53                 	db	83	;'S'
  2444  0715' 20                 	db	32
  2445  0716' 20                 	db	32
  2446  0717' 20                 	db	32
  2447  0718' 00                 	db	0
  2448  0719'                    STR_43:
  2449  0719' 53                 	db	83	;'S'
  2450  071A' 79                 	db	121	;'y'
  2451  071B' 73                 	db	115	;'s'
  2452  071C' 74                 	db	116	;'t'
  2453  071D' 65                 	db	101	;'e'
  2454  071E' 6D                 	db	109	;'m'
  2455  071F' 20                 	db	32
  2456  0720' 53                 	db	83	;'S'
  2457  0721' 45                 	db	69	;'E'
  2458  0722' 54                 	db	84	;'T'
  2459  0723' 55                 	db	85	;'U'
  2460  0724' 50                 	db	80	;'P'
  2461  0725' 20                 	db	32
  2462  0726' 2E                 	db	46
  2463  0727' 2E                 	db	46
  2464  0728' 2E                 	db	46
  2465  0729' 00                 	db	0
  2466  072A' 41                 	db	65	;'A'
  2467  072B' 4D                 	db	77	;'M'
  2468  072C' 53                 	db	83	;'S'
  2469  072D' 41                 	db	65	;'A'
  2470  072E' 54                 	db	84	;'T'
  2471  072F' 2D                 	db	45
  2472  0730' 44                 	db	68	;'D'
  2473  0731' 4C                 	db	76	;'L'
  2474  0732' 20                 	db	32
  2475  0733' 20                 	db	32
  2476  0734' 51                 	db	81	;'Q'
  2477  0735' 4F                 	db	79	;'O'
  2478  0736' 2D                 	db	45
  2479  0737' 31                 	db	49	;'1'
  2480  0738' 30                 	db	48	;'0'
  2481  0739' 30                 	db	48	;'0'
  2482  073A' 00                 	db	0
  2483  073B'                    STR_39:
  2484  073B' 41                 	db	65	;'A'
  2485  073C' 4D                 	db	77	;'M'
  2486  073D' 53                 	db	83	;'S'
  2487  073E' 41                 	db	65	;'A'
  2488  073F' 54                 	db	84	;'T'
  2489  0740' 2D                 	db	45
  2490  0741' 44                 	db	68	;'D'
  2491  0742' 4C                 	db	76	;'L'
  2492  0743' 20                 	db	32
  2493  0744' 20                 	db	32
  2494  0745' 65                 	db	101	;'e'
  2495  0746' 78                 	db	120	;'x'
  2496  0747' 74                 	db	116	;'t'
  2497  0748' 31                 	db	49	;'1'
  2498  0749' 30                 	db	48	;'0'
  2499  074A' 4D                 	db	77	;'M'
  2500  074B' 00                 	db	0
  2501  074C'                    STR_38:
  2502  074C' 41                 	db	65	;'A'
  2503  074D' 4D                 	db	77	;'M'
  2504  074E' 53                 	db	83	;'S'
  2505  074F' 41                 	db	65	;'A'
  2506  0750' 54                 	db	84	;'T'
  2507  0751' 2D                 	db	45
  2508  0752' 44                 	db	68	;'D'
  2509  0753' 4C                 	db	76	;'L'
  2510  0754' 20                 	db	32
  2511  0755' 20                 	db	32
  2512  0756' 69                 	db	105	;'i'
  2513  0757' 6E                 	db	110	;'n'
  2514  0758' 74                 	db	116	;'t'
  2515  0759' 43                 	db	67	;'C'
  2516  075A' 6C                 	db	108	;'l'
  2517  075B' 6B                 	db	107	;'k'
  2518  075C' 00                 	db	0
  2519  075D'                    STR_12:
  2520  075D' 73                 	db	115	;'s'
  2521  075E' 69                 	db	105	;'i'
  2522  075F' 3A                 	db	58	;':'
  2523  0760' 34                 	db	52	;'4'
  2524  0761' 30                 	db	48	;'0'
  2525  0762' 20                 	db	32
  2526  0763' 4D                 	db	77	;'M'
  2527  0764' 48                 	db	72	;'H'
  2528  0765' 7A                 	db	122	;'z'
  2529  0766' 20                 	db	32
  2530  0767' 4F                 	db	79	;'O'
  2531  0768' 43                 	db	67	;'C'
  2532  0769' 58                 	db	88	;'X'
  2533  076A' 4F                 	db	79	;'O'
  2534  076B' 0A                 	db	10
  2535  076C' 00                 	db	0
  2536  076D'                    STR_15:
  2537  076D' 73                 	db	115	;'s'
  2538  076E' 69                 	db	105	;'i'
  2539  076F' 3A                 	db	58	;':'
  2540  0770' 65                 	db	101	;'e'
  2541  0771' 78                 	db	120	;'x'
  2542  0772' 74                 	db	116	;'t'
  2543  0773' 2E                 	db	46
  2544  0774' 20                 	db	32
  2545  0775' 31                 	db	49	;'1'
  2546  0776' 30                 	db	48	;'0'
  2547  0777' 20                 	db	32
  2548  0778' 4D                 	db	77	;'M'
  2549  0779' 48                 	db	72	;'H'
  2550  077A' 7A                 	db	122	;'z'
  2551  077B' 0A                 	db	10
  2552  077C' 00                 	db	0
  2553  077D'                    STR_90:
  2554  077D' 47                 	db	71	;'G'
  2555  077E' 50                 	db	80	;'P'
  2556  077F' 53                 	db	83	;'S'
  2557  0780' 3A                 	db	58	;':'
  2558  0781' 6E                 	db	110	;'n'
  2559  0782' 6F                 	db	111	;'o'
  2560  0783' 74                 	db	116	;'t'
  2561  0784' 20                 	db	32
  2562  0785' 66                 	db	102	;'f'
  2563  0786' 6F                 	db	111	;'o'
  2564  0787' 75                 	db	117	;'u'
  2565  0788' 6E                 	db	110	;'n'
  2566  0789' 64                 	db	100	;'d'
  2567  078A' 0A                 	db	10
  2568  078B' 00                 	db	0
  2569  078C'                    STR_27:
  2570  078C' 73                 	db	115	;'s'
  2571  078D' 69                 	db	105	;'i'
  2572  078E' 3A                 	db	58	;':'
  2573  078F' 6E                 	db	110	;'n'
  2574  0790' 6F                 	db	111	;'o'
  2575  0791' 74                 	db	116	;'t'
  2576  0792' 20                 	db	32
  2577  0793' 66                 	db	102	;'f'
  2578  0794' 6F                 	db	111	;'o'
  2579  0795' 75                 	db	117	;'u'
  2580  0796' 6E                 	db	110	;'n'
  2581  0797' 64                 	db	100	;'d'
  2582  0798' 21                 	db	33
  2583  0799' 0A                 	db	10
  2584  079A' 00                 	db	0
  2585  079B'                    STR_14:
  2586  079B' 73                 	db	115	;'s'
  2587  079C' 69                 	db	105	;'i'
  2588  079D' 3A                 	db	58	;':'
  2589  079E' 47                 	db	71	;'G'
  2590  079F' 50                 	db	80	;'P'
  2591  07A0' 53                 	db	83	;'S'
  2592  07A1' 20                 	db	32
  2593  07A2' 6C                 	db	108	;'l'
  2594  07A3' 6F                 	db	111	;'o'
  2595  07A4' 63                 	db	99	;'c'
  2596  07A5' 6B                 	db	107	;'k'
  2597  07A6' 65                 	db	101	;'e'
  2598  07A7' 64                 	db	100	;'d'
  2599  07A8' 0A                 	db	10
  2600  07A9' 00                 	db	0
  2601  07AA' 70                 	db	112	;'p'
  2602  07AB' 6F                 	db	111	;'o'
  2603  07AC' 77                 	db	119	;'w'
  2604  07AD' 65                 	db	101	;'e'
  2605  07AE' 72                 	db	114	;'r'
  2606  07AF' 20                 	db	32
  2607  07B0' 4F                 	db	79	;'O'
  2608  07B1' 46                 	db	70	;'F'
  2609  07B2' 46                 	db	70	;'F'
  2610  07B3' 20                 	db	32
  2611  07B4' 6E                 	db	110	;'n'
  2612  07B5' 6F                 	db	111	;'o'
  2613  07B6' 77                 	db	119	;'w'
  2614  07B7' 00                 	db	0
  2615  07B8'                    STR_2:
  2616  07B8' 41                 	db	65	;'A'
  2617  07B9' 44                 	db	68	;'D'
  2618  07BA' 46                 	db	70	;'F'
  2619  07BB' 3A                 	db	58	;':'
  2620  07BC' 75                 	db	117	;'u'
  2621  07BD' 6E                 	db	110	;'n'
  2622  07BE' 6C                 	db	108	;'l'
  2623  07BF' 6F                 	db	111	;'o'
  2624  07C0' 63                 	db	99	;'c'
  2625  07C1' 6B                 	db	107	;'k'
  2626  07C2' 65                 	db	101	;'e'
  2627  07C3' 64                 	db	100	;'d'
  2628  07C4' 0A                 	db	10
  2629  07C5' 00                 	db	0
  2630  07C6'                    STR_94:
  2631  07C6' 41                 	db	65	;'A'
  2632  07C7' 44                 	db	68	;'D'
  2633  07C8' 46                 	db	70	;'F'
  2634  07C9' 3A                 	db	58	;':'
  2635  07CA' 6C                 	db	108	;'l'
  2636  07CB' 6F                 	db	111	;'o'
  2637  07CC' 63                 	db	99	;'c'
  2638  07CD' 6B                 	db	107	;'k'
  2639  07CE' 20                 	db	32
  2640  07CF' 54                 	db	84	;'T'
  2641  07D0' 4F                 	db	79	;'O'
  2642  07D1' 0A                 	db	10
  2643  07D2' 00                 	db	0
  2644  07D3'                    STR_33:
  2645  07D3' 73                 	db	115	;'s'
  2646  07D4' 69                 	db	105	;'i'
  2647  07D5' 3A                 	db	58	;':'
  2648  07D6' 75                 	db	117	;'u'
  2649  07D7' 6E                 	db	110	;'n'
  2650  07D8' 6C                 	db	108	;'l'
  2651  07D9' 6F                 	db	111	;'o'
  2652  07DA' 63                 	db	99	;'c'
  2653  07DB' 6B                 	db	107	;'k'
  2654  07DC' 65                 	db	101	;'e'
  2655  07DD' 64                 	db	100	;'d'
  2656  07DE' 0A                 	db	10
  2657  07DF' 00                 	db	0
  2658  07E0'                    STR_30:
  2659  07E0' 73                 	db	115	;'s'
  2660  07E1' 69                 	db	105	;'i'
  2661  07E2' 3A                 	db	58	;':'
  2662  07E3' 49                 	db	73	;'I'
  2663  07E4' 32                 	db	50	;'2'
  2664  07E5' 43                 	db	67	;'C'
  2665  07E6' 20                 	db	32
  2666  07E7' 66                 	db	102	;'f'
  2667  07E8' 61                 	db	97	;'a'
  2668  07E9' 69                 	db	105	;'i'
  2669  07EA' 6C                 	db	108	;'l'
  2670  07EB' 0A                 	db	10
  2671  07EC' 00                 	db	0
  2672  07ED'                    STR_86:
  2673  07ED' 53                 	db	83	;'S'
  2674  07EE' 65                 	db	101	;'e'
  2675  07EF' 74                 	db	116	;'t'
  2676  07F0' 74                 	db	116	;'t'
  2677  07F1' 69                 	db	105	;'i'
  2678  07F2' 6E                 	db	110	;'n'
  2679  07F3' 67                 	db	103	;'g'
  2680  07F4' 73                 	db	115	;'s'
  2681  07F5' 20                 	db	32
  2682  07F6' 4F                 	db	79	;'O'
  2683  07F7' 4B                 	db	75	;'K'
  2684  07F8' 00                 	db	0
  2685  07F9'                    STR_28:
  2686  07F9' 73                 	db	115	;'s'
  2687  07FA' 69                 	db	105	;'i'
  2688  07FB' 3A                 	db	58	;':'
  2689  07FC' 4C                 	db	76	;'L'
  2690  07FD' 4E                 	db	78	;'N'
  2691  07FE' 42                 	db	66	;'B'
  2692  07FF' 3A                 	db	58	;':'
  2693  0800' 20                 	db	32
  2694  0801' 25                 	db	37
  2695  0802' 64                 	db	100	;'d'
  2696  0803' 0A                 	db	10
  2697  0804' 00                 	db	0
  2698  0805'                    STR_3:
  2699  0805' 41                 	db	65	;'A'
  2700  0806' 44                 	db	68	;'D'
  2701  0807' 46                 	db	70	;'F'
  2702  0808' 3A                 	db	58	;':'
  2703  0809' 6C                 	db	108	;'l'
  2704  080A' 6F                 	db	111	;'o'
  2705  080B' 63                 	db	99	;'c'
  2706  080C' 6B                 	db	107	;'k'
  2707  080D' 65                 	db	101	;'e'
  2708  080E' 64                 	db	100	;'d'
  2709  080F' 0A                 	db	10
  2710  0810' 00                 	db	0
  2711  0811'                    STR_25:
  2712  0811' 73                 	db	115	;'s'
  2713  0812' 69                 	db	105	;'i'
  2714  0813' 3A                 	db	58	;':'
  2715  0814' 66                 	db	102	;'f'
  2716  0815' 6F                 	db	111	;'o'
  2717  0816' 75                 	db	117	;'u'
  2718  0817' 6E                 	db	110	;'n'
  2719  0818' 64                 	db	100	;'d'
  2720  0819' 2E                 	db	46
  2721  081A' 0A                 	db	10
  2722  081B' 00                 	db	0
  2723  081C'                    STR_34:
  2724  081C' 73                 	db	115	;'s'
  2725  081D' 69                 	db	105	;'i'
  2726  081E' 3A                 	db	58	;':'
  2727  081F' 6C                 	db	108	;'l'
  2728  0820' 6F                 	db	111	;'o'
  2729  0821' 63                 	db	99	;'c'
  2730  0822' 6B                 	db	107	;'k'
  2731  0823' 65                 	db	101	;'e'
  2732  0824' 64                 	db	100	;'d'
  2733  0825' 0A                 	db	10
  2734  0826' 00                 	db	0
  2735  0827'                    STR_72:
  2736  0827' 4F                 	db	79	;'O'
  2737  0828' 55                 	db	85	;'U'
  2738  0829' 54                 	db	84	;'T'
  2739  082A' 3A                 	db	58	;':'
  2740  082B' 20                 	db	32
  2741  082C' 20                 	db	32
  2742  082D' 20                 	db	32
  2743  082E' 20                 	db	32
  2744  082F' 20                 	db	32
  2745  0830' 00                 	db	0
  2746  0831'                    STR_29:
  2747  0831' 73                 	db	115	;'s'
  2748  0832' 69                 	db	105	;'i'
  2749  0833' 3A                 	db	58	;':'
  2750  0834' 69                 	db	105	;'i'
  2751  0835' 63                 	db	99	;'c'
  2752  0836' 61                 	db	97	;'a'
  2753  0837' 6C                 	db	108	;'l'
  2754  0838' 0A                 	db	10
  2755  0839' 00                 	db	0
  2756  083A'                    STR_26:
  2757  083A' 73                 	db	115	;'s'
  2758  083B' 69                 	db	105	;'i'
  2759  083C' 3A                 	db	58	;':'
  2760  083D' 69                 	db	105	;'i'
  2761  083E' 6E                 	db	110	;'n'
  2762  083F' 69                 	db	105	;'i'
  2763  0840' 74                 	db	116	;'t'
  2764  0841' 0A                 	db	10
  2765  0842' 00                 	db	0
  2766  0843'                    STR_8:
  2767  0843' 4C                 	db	76	;'L'
  2768  0844' 4E                 	db	78	;'N'
  2769  0845' 42                 	db	66	;'B'
  2770  0846' 3A                 	db	58	;':'
  2771  0847' 4F                 	db	79	;'O'
  2772  0848' 4B                 	db	75	;'K'
  2773  0849' 0A                 	db	10
  2774  084A' 00                 	db	0
  2775  084B'                    STR_62:
  2776  084B' 20                 	db	32
  2777  084C' 47                 	db	71	;'G'
  2778  084D' 50                 	db	80	;'P'
  2779  084E' 53                 	db	83	;'S'
  2780  084F' 20                 	db	32
  2781  0850' 20                 	db	32
  2782  0851' 00                 	db	0
  2783  0852'                    STR_81:
  2784  0852' 6C                 	db	108	;'l'
  2785  0853' 6F                 	db	111	;'o'
  2786  0854' 63                 	db	99	;'c'
  2787  0855' 6B                 	db	107	;'k'
  2788  0856' 20                 	db	32
  2789  0857' 20                 	db	32
  2790  0858' 00                 	db	0
  2791  0859'                    STR_63:
  2792  0859' 20                 	db	32
  2793  085A' 4F                 	db	79	;'O'
  2794  085B' 43                 	db	67	;'C'
  2795  085C' 58                 	db	88	;'X'
  2796  085D' 4F                 	db	79	;'O'
  2797  085E' 20                 	db	32
  2798  085F' 00                 	db	0
  2799  0860'                    STR_57:
  2800  0860' 4F                 	db	79	;'O'
  2801  0861' 2F                 	db	47
  2802  0862' 54                 	db	84	;'T'
  2803  0863' 43                 	db	67	;'C'
  2804  0864' 58                 	db	88	;'X'
  2805  0865' 4F                 	db	79	;'O'
  2806  0866' 00                 	db	0
  2807  0867' 70                 	db	112	;'p'
  2808  0868' 6C                 	db	108	;'l'
  2809  0869' 65                 	db	101	;'e'
  2810  086A' 61                 	db	97	;'a'
  2811  086B' 73                 	db	115	;'s'
  2812  086C' 65                 	db	101	;'e'
  2813  086D' 00                 	db	0
  2814  086E'                    STR_82:
  2815  086E' 75                 	db	117	;'u'
  2816  086F' 6E                 	db	110	;'n'
  2817  0870' 6C                 	db	108	;'l'
  2818  0871' 6F                 	db	111	;'o'
  2819  0872' 63                 	db	99	;'c'
  2820  0873' 6B                 	db	107	;'k'
  2821  0874' 00                 	db	0
  2822  0875'                    STR_55:
  2823  0875' 4C                 	db	76	;'L'
  2824  0876' 4F                 	db	79	;'O'
  2825  0877' 43                 	db	67	;'C'
  2826  0878' 4B                 	db	75	;'K'
  2827  0879' 20                 	db	32
  2828  087A' 00                 	db	0
  2829  087B'                    STR_76:
  2830  087B' 32                 	db	50	;'2'
  2831  087C' 35                 	db	53	;'5'
  2832  087D' 2E                 	db	46
  2833  087E' 34                 	db	52	;'4'
  2834  087F' 35                 	db	53	;'5'
  2835  0880' 00                 	db	0
  2836  0881' 4D                 	db	77	;'M'
  2837  0882' 6F                 	db	111	;'o'
  2838  0883' 64                 	db	100	;'d'
  2839  0884' 65                 	db	101	;'e'
  2840  0885' 3A                 	db	58	;':'
  2841  0886' 00                 	db	0
  2842  0887'                    STR_56:
  2843  0887' 4E                 	db	78	;'N'
  2844  0888' 4F                 	db	79	;'O'
  2845  0889' 6C                 	db	108	;'l'
  2846  088A' 63                 	db	99	;'c'
  2847  088B' 6B                 	db	107	;'k'
  2848  088C' 00                 	db	0
  2849  088D'                    STR_75:
  2850  088D' 4C                 	db	76	;'L'
  2851  088E' 4E                 	db	78	;'N'
  2852  088F' 42                 	db	66	;'B'
  2853  0890' 3A                 	db	58	;':'
  2854  0891' 00                 	db	0
  2855  0892'                    STR_84:
  2856  0892' 4C                 	db	76	;'L'
  2857  0893' 4F                 	db	79	;'O'
  2858  0894' 4E                 	db	78	;'N'
  2859  0895' 3A                 	db	58	;':'
  2860  0896' 00                 	db	0
  2861  0897'                    STR_83:
  2862  0897' 4C                 	db	76	;'L'
  2863  0898' 41                 	db	65	;'A'
  2864  0899' 54                 	db	84	;'T'
  2865  089A' 3A                 	db	58	;':'
  2866  089B' 00                 	db	0
  2867  089C'                    STR_79:
  2868  089C' 53                 	db	83	;'S'
  2869  089D' 41                 	db	65	;'A'
  2870  089E' 54                 	db	84	;'T'
  2871  089F' 3A                 	db	58	;':'
  2872  08A0' 00                 	db	0
  2873  08A1'                    STR_50:
  2874  08A1' 4C                 	db	76	;'L'
  2875  08A2' 4F                 	db	79	;'O'
  2876  08A3' 43                 	db	67	;'C'
  2877  08A4' 4B                 	db	75	;'K'
  2878  08A5' 00                 	db	0
  2879  08A6'                    STR_51:
  2880  08A6' 77                 	db	119	;'w'
  2881  08A7' 61                 	db	97	;'a'
  2882  08A8' 69                 	db	105	;'i'
  2883  08A9' 74                 	db	116	;'t'
  2884  08AA' 00                 	db	0
  2885  08AB'                    STR_42:
  2886  08AB' 31                 	db	49	;'1'
  2887  08AC' 2E                 	db	46
  2888  08AD' 30                 	db	48	;'0'
  2889  08AE' 00                 	db	0
  2890  08AF'                    STR_77:
  2891  08AF' 2E                 	db	46
  2892  08B0' 30                 	db	48	;'0'
  2893  08B1' 30                 	db	48	;'0'
  2894  08B2' 00                 	db	0
  2895  08B3'                    STR_73:
  2896  08B3' 2E                 	db	46
  2897  08B4' 35                 	db	53	;'5'
  2898  08B5' 35                 	db	53	;'5'
  2899  08B6' 00                 	db	0
  2900  08B7'                    STR_74:
  2901  08B7' 4D                 	db	77	;'M'
  2902  08B8' 48                 	db	72	;'H'
  2903  08B9' 7A                 	db	122	;'z'
  2904  08BA' 00                 	db	0
  2905  08BB'                    STR_108:
  2906  08BB' 6C                 	db	108	;'l'
  2907  08BC' 58                 	db	88	;'X'
  2908  08BD' 00                 	db	0
  2909  08BE'                    STR_95:
  2910  08BE' 6C                 	db	108	;'l'
  2911  08BF' 64                 	db	100	;'d'
  2912  08C0' 00                 	db	0
  2913  08C1'                    STR_99:
  2914  08C1' 6C                 	db	108	;'l'
  2915  08C2' 69                 	db	105	;'i'
  2916  08C3' 00                 	db	0
  2917  08C4'                    STR_104:
  2918  08C4' 6C                 	db	108	;'l'
  2919  08C5' 78                 	db	120	;'x'
  2920  08C6' 00                 	db	0
  2921  0000                     
  2922                           ; #config settings
  2923  08C7' 00                 	db	0	; dummy byte at the end
  2924  0000                     
  2925                           	psect	cinit
  2926  0000'                    __pcinit:
  2927                           	opt callstack 0
  2928  0000'                    start_initialization:
  2929                           	opt callstack 0
  2930  0000'                    __initialization:
  2931                           	opt callstack 0
  2932                           
  2933                           ; Initialize objects allocated to BANK3 (27 bytes)
  2934                           ; load TBLPTR registers with __pidataBANK3
  2935  0000' 0E00'              	movlw	low __pidataBANK3
  2936  0002' 6EF6               	movwf	tblptrl,c
  2937  0004' 0E00'              	movlw	high __pidataBANK3
  2938  0006' 6EF7               	movwf	tblptrh,c
  2939  0008' 0E00'              	movlw	low (__pidataBANK3 shr (0+16))
  2940  000A' 6EF8               	movwf	tblptru,c
  2941  000C' EE00' F000'        	lfsr	0,__pdataBANK3
  2942  0010' EE10 F01B          	lfsr	1,27
  2943  0014'                    copy_data0:
  2944  0014' 0009               	tblrd		*+
  2945  0016' CFF5 FFEE          	movff	tablat,postinc0
  2946  001A' 50E5               	movf	postdec1,w,c
  2947  001C' 50E1               	movf	fsr1l,w,c
  2948  001E' E1FA               	bnz	copy_data0
  2949                           
  2950                           ; Initialize objects allocated to BANK2 (161 bytes)
  2951                           ; load TBLPTR registers with __pidataBANK2
  2952  0020' 0E00'              	movlw	low __pidataBANK2
  2953  0022' 6EF6               	movwf	tblptrl,c
  2954  0024' 0E00'              	movlw	high __pidataBANK2
  2955  0026' 6EF7               	movwf	tblptrh,c
  2956  0028' 0E00'              	movlw	low (__pidataBANK2 shr (0+16))
  2957  002A' 6EF8               	movwf	tblptru,c
  2958  002C' EE00' F000'        	lfsr	0,__pdataBANK2
  2959  0030' EE10 F0A1          	lfsr	1,161
  2960  0034'                    copy_data1:
  2961  0034' 0009               	tblrd		*+
  2962  0036' CFF5 FFEE          	movff	tablat,postinc0
  2963  003A' 50E5               	movf	postdec1,w,c
  2964  003C' 50E1               	movf	fsr1l,w,c
  2965  003E' E1FA               	bnz	copy_data1
  2966                           
  2967                           ; Initialize objects allocated to BANK1 (2 bytes)
  2968                           ; load TBLPTR registers with __pidataBANK1
  2969  0040' 0E00'              	movlw	low __pidataBANK1
  2970  0042' 6EF6               	movwf	tblptrl,c
  2971  0044' 0E00'              	movlw	high __pidataBANK1
  2972  0046' 6EF7               	movwf	tblptrh,c
  2973  0048' 0E00'              	movlw	low (__pidataBANK1 shr (0+16))
  2974  004A' 6EF8               	movwf	tblptru,c
  2975  004C' 0009               	tblrd		*+	;fetch initializer
  2976  004E' CFF5 F000'         	movff	tablat,__pdataBANK1
  2977  0052' 0009               	tblrd		*+	;fetch initializer
  2978  0054' CFF5 F001'         	movff	tablat,__pdataBANK1+1
  2979                           
  2980                           ; Initialize objects allocated to BANK0 (16 bytes)
  2981                           ; load TBLPTR registers with __pidataBANK0
  2982  0058' 0E00'              	movlw	low __pidataBANK0
  2983  005A' 6EF6               	movwf	tblptrl,c
  2984  005C' 0E00'              	movlw	high __pidataBANK0
  2985  005E' 6EF7               	movwf	tblptrh,c
  2986  0060' 0E00'              	movlw	low (__pidataBANK0 shr (0+16))
  2987  0062' 6EF8               	movwf	tblptru,c
  2988  0064' EE00' F000'        	lfsr	0,__pdataBANK0
  2989  0068' EE10 F010          	lfsr	1,16
  2990  006C'                    copy_data2:
  2991  006C' 0009               	tblrd		*+
  2992  006E' CFF5 FFEE          	movff	tablat,postinc0
  2993  0072' 50E5               	movf	postdec1,w,c
  2994  0074' 50E1               	movf	fsr1l,w,c
  2995  0076' E1FA               	bnz	copy_data2
  2996                           
  2997                           ; Initialize objects allocated to COMRAM (1 bytes)
  2998                           ; load TBLPTR registers with __pidataCOMRAM
  2999  0078' 0E00'              	movlw	low __pidataCOMRAM
  3000  007A' 6EF6               	movwf	tblptrl,c
  3001  007C' 0E00'              	movlw	high __pidataCOMRAM
  3002  007E' 6EF7               	movwf	tblptrh,c
  3003  0080' 0E00'              	movlw	low (__pidataCOMRAM shr (0+16))
  3004  0082' 6EF8               	movwf	tblptru,c
  3005  0084' 0009               	tblrd		*+	;fetch initializer
  3006  0086' CFF5 F000'         	movff	tablat,__pdataCOMRAM
  3007                           
  3008                           ; Clear objects allocated to BANK4 (128 bytes)
  3009  008A' EE00' F000'        	lfsr	0,__pbssBANK4
  3010  008E' 0E80               	movlw	128
  3011  0090'                    clear_0:
  3012  0090' 6AEE               	clrf	postinc0,c
  3013  0092' 06E8               	decf	wreg,f,c
  3014  0094' E1FD               	bnz	clear_0
  3015                           
  3016                           ; Clear objects allocated to BANK3 (190 bytes)
  3017  0096' EE00' F000'        	lfsr	0,__pbssBANK3
  3018  009A' 0EBE               	movlw	190
  3019  009C'                    clear_1:
  3020  009C' 6AEE               	clrf	postinc0,c
  3021  009E' 06E8               	decf	wreg,f,c
  3022  00A0' E1FD               	bnz	clear_1
  3023                           
  3024                           ; Clear objects allocated to BANK2 (82 bytes)
  3025  00A2' EE00' F000'        	lfsr	0,__pbssBANK2
  3026  00A6' 0E52               	movlw	82
  3027  00A8'                    clear_2:
  3028  00A8' 6AEE               	clrf	postinc0,c
  3029  00AA' 06E8               	decf	wreg,f,c
  3030  00AC' E1FD               	bnz	clear_2
  3031                           
  3032                           ; Clear objects allocated to BANK1 (6 bytes)
  3033  00AE' 0101               	movlb	1
  3034  00B0' 6B00'              	clrf	(__pbssBANK1+5)& (0+255),b
  3035  00B2' 6B00'              	clrf	(__pbssBANK1+4)& (0+255),b
  3036  00B4' 6B00'              	clrf	(__pbssBANK1+3)& (0+255),b
  3037  00B6' 6B00'              	clrf	(__pbssBANK1+2)& (0+255),b
  3038  00B8' 6B00'              	clrf	(__pbssBANK1+1)& (0+255),b
  3039  00BA' 6B00'              	clrf	__pbssBANK1& (0+255),b
  3040                           
  3041                           ; Clear objects allocated to BANK0 (14 bytes)
  3042  00BC' EE00' F000'        	lfsr	0,__pbssBANK0
  3043  00C0' 0E0E               	movlw	14
  3044  00C2'                    clear_3:
  3045  00C2' 6AEE               	clrf	postinc0,c
  3046  00C4' 06E8               	decf	wreg,f,c
  3047  00C6' E1FD               	bnz	clear_3
  3048                           
  3049                           ; Clear objects allocated to COMRAM (12 bytes)
  3050  00C8' EE00' F000'        	lfsr	0,__pbssCOMRAM
  3051  00CC' 0E0C               	movlw	12
  3052  00CE'                    clear_4:
  3053  00CE' 6AEE               	clrf	postinc0,c
  3054  00D0' 06E8               	decf	wreg,f,c
  3055  00D2' E1FD               	bnz	clear_4
  3056  00D4'                    end_of_initialization:
  3057                           	opt callstack 0
  3058  00D4'                    __end_of__initialization:
  3059                           	opt callstack 0
  3060  00D4' 9000'              	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3061  00D6' 9200'              	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3062  00D8' 0E00'              	movlw	low (__Lmediumconst shr (0+16))
  3063  00DA' 6EF8               	movwf	tblptru,c
  3064  00DC' 0100               	movlb	0
  3065  00DE' EF00' F000'        	goto	_main	;jump to C main() function
  3066                           
  3067                           	psect	bssCOMRAM
  3068  0000'                    __pbssCOMRAM:
  3069                           	opt callstack 0
  3070  0000'                    _prec:
  3071                           	opt callstack 0
  3072  0000'                    	ds	2
  3073  0002'                    _flags:
  3074                           	opt callstack 0
  3075  0002'                    	ds	2
  3076  0004'                    _g_usart_wpos:
  3077                           	opt callstack 0
  3078  0004'                    	ds	2
  3079  0006'                    _g_usart_rpos:
  3080                           	opt callstack 0
  3081  0006'                    	ds	2
  3082  0008'                    _lcd_available:
  3083                           	opt callstack 0
  3084  0008'                    	ds	1
  3085  0009'                    _lcd_addr:
  3086                           	opt callstack 0
  3087  0009'                    	ds	1
  3088  000A'                    _currentLO:
  3089                           	opt callstack 0
  3090  000A'                    	ds	1
  3091  000B'                    _ubx_ack:
  3092                           	opt callstack 0
  3093  000B'                    	ds	1
  3094                           
  3095                           	psect	dataCOMRAM
  3096  0000'                    __pdataCOMRAM:
  3097                           	opt callstack 0
  3098  0000'                    _gpsbufidx:
  3099                           	opt callstack 0
  3100  0000'                    	ds	1
  3101                           
  3102                           	psect	bssBANK0
  3103  0000'                    __pbssBANK0:
  3104                           	opt callstack 0
  3105  0000'                    _width:
  3106                           	opt callstack 0
  3107  0000'                    	ds	2
  3108  0002'                    main@old_GPS_lock:
  3109                           	opt callstack 0
  3110  0002'                    	ds	1
  3111  0003'                    send_UBX_string@giveup:
  3112                           	opt callstack 0
  3113  0003'                    	ds	1
  3114  0004'                    _booting:
  3115                           	opt callstack 0
  3116  0004'                    	ds	1
  3117  0005'                    _GPS_sat:
  3118                           	opt callstack 0
  3119  0005'                    	ds	1
  3120  0006'                    si5328_checkGPS@old_ubx_ack:
  3121                           	opt callstack 0
  3122  0006'                    	ds	1
  3123  0007'                    si5328_checkGPS@old_GPS_lock:
  3124                           	opt callstack 0
  3125  0007'                    	ds	1
  3126  0008'                    _si5328locked:
  3127                           	opt callstack 0
  3128  0008'                    	ds	1
  3129  0009'                    _GPS_fix:
  3130                           	opt callstack 0
  3131  0009'                    	ds	1
  3132  000A'                    _adf4351_lockstat:
  3133                           	opt callstack 0
  3134  000A'                    	ds	1
  3135  000B'                    _ext10MHzReference:
  3136                           	opt callstack 0
  3137  000B'                    	ds	1
  3138  000C'                    _GPS_lock:
  3139                           	opt callstack 0
  3140  000C'                    	ds	1
  3141  000D'                    _LNB_error:
  3142                           	opt callstack 0
  3143  000D'                    	ds	1
  3144                           
  3145                           	psect	dataBANK0
  3146  0000'                    __pdataBANK0:
  3147                           	opt callstack 0
  3148  0000'                    _N2L_reg4142:
  3149                           	opt callstack 0
  3150  0000'                    	ds	2
  3151  0002'                    _N31_reg4445:
  3152                           	opt callstack 0
  3153  0002'                    	ds	2
  3154  0004'                    show_display@old_adf4351_lockstat:
  3155                           	opt callstack 0
  3156  0004'                    	ds	1
  3157  0005'                    show_display@old_si5328locked:
  3158                           	opt callstack 0
  3159  0005'                    	ds	1
  3160  0006'                    show_display@old_LNB_laststat:
  3161                           	opt callstack 0
  3162  0006'                    	ds	1
  3163  0007'                    show_display@old_GPS_sat:
  3164                           	opt callstack 0
  3165  0007'                    	ds	1
  3166  0008'                    show_display@old_lnbqrg:
  3167                           	opt callstack 0
  3168  0008'                    	ds	1
  3169  0009'                    show_display@old_ubx_ack:
  3170                           	opt callstack 0
  3171  0009'                    	ds	1
  3172  000A'                    show_display@old_GPS_fix:
  3173                           	opt callstack 0
  3174  000A'                    	ds	1
  3175  000B'                    show_display@old_GPS_lock:
  3176                           	opt callstack 0
  3177  000B'                    	ds	1
  3178  000C'                    _actualADFswitch:
  3179                           	opt callstack 0
  3180  000C'                    	ds	1
  3181  000D'                    check_si5328_status@lastinput:
  3182                           	opt callstack 0
  3183  000D'                    	ds	1
  3184  000E'                    check_si5328_status@lastlock:
  3185                           	opt callstack 0
  3186  000E'                    	ds	1
  3187  000F'                    _LNB_laststat:
  3188                           	opt callstack 0
  3189  000F'                    	ds	1
  3190                           
  3191                           	psect	bssBANK1
  3192  0000'                    __pbssBANK1:
  3193                           	opt callstack 0
  3194  0000'                    _ubx_len:
  3195                           	opt callstack 0
  3196  0000'                    	ds	2
  3197  0002'                    _lcd_i2c:
  3198                           	opt callstack 0
  3199  0002'                    	ds	2
  3200  0004'                    rx_gps@stat:
  3201                           	opt callstack 0
  3202  0004'                    	ds	1
  3203  0005'                    _ubx_class:
  3204                           	opt callstack 0
  3205  0005'                    	ds	1
  3206                           
  3207                           	psect	dataBANK1
  3208  0000'                    __pdataBANK1:
  3209                           	opt callstack 0
  3210  0000'                    _NC1_LS_reg3233:
  3211                           	opt callstack 0
  3212  0000'                    	ds	2
  3213                           
  3214                           	psect	bssBANK2
  3215  0000'                    __pbssBANK2:
  3216                           	opt callstack 0
  3217  0000'                    _g_irq_handler_info:
  3218                           	opt callstack 0
  3219  0000'                    	ds	8
  3220  0008'                    _g_freq:
  3221                           	opt callstack 0
  3222  0008'                    	ds	4
  3223  000C'                    _errno:
  3224                           	opt callstack 0
  3225  000C'                    	ds	2
  3226  000E'                    _nout:
  3227                           	opt callstack 0
  3228  000E'                    	ds	2
  3229  0010'                    rx_gps@len_lsb:
  3230                           	opt callstack 0
  3231  0010'                    	ds	2
  3232  0012'                    _p_len:
  3233                           	opt callstack 0
  3234  0012'                    	ds	2
  3235  0014'                    show_display@old_outqrg:
  3236                           	opt callstack 0
  3237  0014'                    	ds	2
  3238  0016'                    _ubx_id:
  3239                           	opt callstack 0
  3240  0016'                    	ds	1
  3241  0017'                    _dbuf:
  3242                           	opt callstack 0
  3243  0017'                    	ds	32
  3244  0037'                    itoa@buffer:
  3245                           	opt callstack 0
  3246  0037'                    	ds	12
  3247  0043'                    _g_i2c_bus:
  3248                           	opt callstack 0
  3249  0043'                    	ds	8
  3250  004B'                    CalculateGridSquare@grid:
  3251                           	opt callstack 0
  3252  004B'                    	ds	7
  3253                           
  3254                           	psect	dataBANK2
  3255  0000'                    __pdataBANK2:
  3256                           	opt callstack 0
  3257  0000'                    stoa@F1139:
  3258                           	opt callstack 0
  3259  0000'                    	ds	7
  3260  0007'                    	ds	4
  3261  000B'                    ssd1306_setpos@F3137:
  3262                           	opt callstack 0
  3263  000B'                    	ds	3
  3264  000E'                    	ds	2
  3265  0010'                    	ds	2
  3266  0012'                    _NC2_LS_reg3536:
  3267                           	opt callstack 0
  3268  0012'                    	ds	2
  3269  0014'                    _N1HS_reg25:
  3270                           	opt callstack 0
  3271  0014'                    	ds	2
  3272  0016'                    _N2HS_reg40:
  3273                           	opt callstack 0
  3274  0016'                    	ds	2
  3275  0018'                    _N32_reg4748:
  3276                           	opt callstack 0
  3277  0018'                    	ds	2
  3278  001A'                    _use_GPS:
  3279                           	opt callstack 0
  3280  001A'                    	ds	1
  3281  001B'                    _gps_config_data:
  3282                           	opt callstack 0
  3283  001B'                    	ds	32
  3284  003B'                    _reg_set_LNB_LO:
  3285                           	opt callstack 0
  3286  003B'                    	ds	24
  3287  0053'                    show_display@old_GPS_lon:
  3288                           	opt callstack 0
  3289  0053'                    	ds	15
  3290  0062'                    show_display@old_GPS_lat:
  3291                           	opt callstack 0
  3292  0062'                    	ds	15
  3293  0071'                    _GPS_lon:
  3294                           	opt callstack 0
  3295  0071'                    	ds	15
  3296  0080'                    _GPS_lat:
  3297                           	opt callstack 0
  3298  0080'                    	ds	15
  3299  008F'                    show_display@old_GPS_time:
  3300                           	opt callstack 0
  3301  008F'                    	ds	9
  3302  0098'                    _GPS_time:
  3303                           	opt callstack 0
  3304  0098'                    	ds	9
  3305                           
  3306                           	psect	bssBANK3
  3307  0000'                    __pbssBANK3:
  3308                           	opt callstack 0
  3309  0000'                    _payload:
  3310                           	opt callstack 0
  3311  0000'                    	ds	50
  3312  0032'                    _gpsbuf:
  3313                           	opt callstack 0
  3314  0032'                    	ds	85
  3315  0087'                    _g_adf4351:
  3316                           	opt callstack 0
  3317  0087'                    	ds	55
  3318                           
  3319                           	psect	dataBANK3
  3320  0000'                    __pdataBANK3:
  3321                           	opt callstack 0
  3322  0000'                    _ssd1306_init_commands:
  3323                           	opt callstack 0
  3324  0000'                    	ds	27
  3325                           
  3326                           	psect	bssBANK4
  3327  0000'                    __pbssBANK4:
  3328                           	opt callstack 0
  3329  0000'                    _g_usart_buf:
  3330                           	opt callstack 0
  3331  0000'                    	ds	128
  3332                           
  3333                           	psect	cstackBANK1
  3334  0000'                    __pcstackBANK1:
  3335                           	opt callstack 0
  3336  0000'                    send_UBX_string@txbuf:
  3337                           	opt callstack 0
  3338  0000'                    lcd_clear_screen@buf:
  3339                           	opt callstack 0
  3340  0000'                    eval_gps@elem:
  3341                           	opt callstack 0
  3342                           
  3343                           ; 240 bytes @ 0x0
  3344  0000'                    	ds	50
  3345  0032'                    send_UBX_string@class:
  3346                           	opt callstack 0
  3347                           
  3348                           ; 1 bytes @ 0x32
  3349  0032'                    	ds	1
  3350  0033'                    send_UBX_string@i:
  3351                           	opt callstack 0
  3352                           
  3353                           ; 2 bytes @ 0x33
  3354  0033'                    	ds	2
  3355  0035'                    send_UBX_string@i_2074:
  3356                           	opt callstack 0
  3357                           
  3358                           ; 2 bytes @ 0x35
  3359  0035'                    	ds	2
  3360  0037'                    send_UBX_string@i_2075:
  3361                           	opt callstack 0
  3362                           
  3363                           ; 2 bytes @ 0x37
  3364  0037'                    	ds	2
  3365  0039'                    send_UBX_string@CK_B:
  3366                           	opt callstack 0
  3367                           
  3368                           ; 1 bytes @ 0x39
  3369  0039'                    	ds	1
  3370  003A'                    send_UBX_string@CK_A:
  3371                           	opt callstack 0
  3372                           
  3373                           ; 1 bytes @ 0x3A
  3374  003A'                    	ds	1
  3375  003B'                    send_UBX_string@idx:
  3376                           	opt callstack 0
  3377                           
  3378                           ; 2 bytes @ 0x3B
  3379  003B'                    	ds	69
  3380  0080'                    lcd_clear_screen@ystart:
  3381                           	opt callstack 0
  3382                           
  3383                           ; 1 bytes @ 0x80
  3384  0080'                    	ds	1
  3385  0081'                    lcd_clear_screen@row:
  3386                           	opt callstack 0
  3387                           
  3388                           ; 1 bytes @ 0x81
  3389  0081'                    	ds	111
  3390  00F0'                    eval_gps@chksumgps:
  3391                           	opt callstack 0
  3392                           
  3393                           ; 1 bytes @ 0xF0
  3394  00F0'                    	ds	1
  3395  00F1'                    eval_gps@chksum:
  3396                           	opt callstack 0
  3397                           
  3398                           ; 1 bytes @ 0xF1
  3399  00F1'                    	ds	1
  3400  00F2'                    eval_gps@i:
  3401                           	opt callstack 0
  3402                           
  3403                           ; 1 bytes @ 0xF2
  3404  00F2'                    	ds	1
  3405  00F3'                    eval_gps@pe:
  3406                           	opt callstack 0
  3407                           
  3408                           ; 2 bytes @ 0xF3
  3409  00F3'                    	ds	2
  3410  00F5'                    eval_gps@eidx:
  3411                           	opt callstack 0
  3412                           
  3413                           ; 1 bytes @ 0xF5
  3414  00F5'                    	ds	1
  3415  00F6'                    eval_gps@ps:
  3416                           	opt callstack 0
  3417                           
  3418                           ; 2 bytes @ 0xF6
  3419  00F6'                    	ds	2
  3420                           
  3421                           	psect	cstackBANK0
  3422  0000'                    __pcstackBANK0:
  3423                           	opt callstack 0
  3424  0000'                    smbus8_write_byte@tmp:
  3425                           	opt callstack 0
  3426  0000'                    vfpfcnvrt@cp:
  3427                           	opt callstack 0
  3428  0000'                    smbus8_write_data@msg:
  3429                           	opt callstack 0
  3430  0000'                    smbus8_read_byte@msg:
  3431                           	opt callstack 0
  3432                           
  3433                           ; 14 bytes @ 0x0
  3434  0000'                    	ds	2
  3435  0002'                    vfpfcnvrt@done:
  3436                           	opt callstack 0
  3437  0002'                    smbus8_write_byte@msg:
  3438                           	opt callstack 0
  3439                           
  3440                           ; 7 bytes @ 0x2
  3441  0002'                    	ds	2
  3442  0004'                    _vfpfcnvrt$2949:
  3443                           	opt callstack 0
  3444                           
  3445                           ; 2 bytes @ 0x4
  3446  0004'                    	ds	2
  3447  0006'                    vfpfcnvrt@ll:
  3448                           	opt callstack 0
  3449                           
  3450                           ; 8 bytes @ 0x6
  3451  0006'                    	ds	8
  3452  000E'                    ssd1306_setpos@y:
  3453                           	opt callstack 0
  3454  000E'                    vfpfcnvrt@llu:
  3455                           	opt callstack 0
  3456                           
  3457                           ; 8 bytes @ 0xE
  3458  000E'                    	ds	1
  3459  000F'                    ssd1306_setpos@data:
  3460                           	opt callstack 0
  3461                           
  3462                           ; 3 bytes @ 0xF
  3463  000F'                    	ds	3
  3464  0012'                    ssd1306_setpos@x:
  3465                           	opt callstack 0
  3466                           
  3467                           ; 1 bytes @ 0x12
  3468  0012'                    	ds	1
  3469  0013'                    lcd_draw8x8@buffer:
  3470                           	opt callstack 0
  3471                           
  3472                           ; 2 bytes @ 0x13
  3473  0013'                    	ds	2
  3474  0015'                    lcd_draw8x8@x:
  3475                           	opt callstack 0
  3476                           
  3477                           ; 1 bytes @ 0x15
  3478  0015'                    	ds	1
  3479  0016'                    lcd_draw8x8@y:
  3480                           	opt callstack 0
  3481  0016'                    vfpfcnvrt@c:
  3482                           	opt callstack 0
  3483                           
  3484                           ; 1 bytes @ 0x16
  3485  0016'                    	ds	1
  3486  0017'                    ?_vfprintf:
  3487                           	opt callstack 0
  3488  0017'                    print_char@xpos:
  3489                           	opt callstack 0
  3490  0017'                    vfprintf@fp:
  3491                           	opt callstack 0
  3492                           
  3493                           ; 2 bytes @ 0x17
  3494  0017'                    	ds	1
  3495  0018'                    print_char@ypos:
  3496                           	opt callstack 0
  3497                           
  3498                           ; 1 bytes @ 0x18
  3499  0018'                    	ds	1
  3500  0019'                    print_char@underline:
  3501                           	opt callstack 0
  3502  0019'                    vfprintf@fmt:
  3503                           	opt callstack 0
  3504                           
  3505                           ; 2 bytes @ 0x19
  3506  0019'                    	ds	1
  3507  001A'                    ??_print_char:
  3508                           
  3509                           ; 1 bytes @ 0x1A
  3510  001A'                    	ds	1
  3511  001B'                    vfprintf@ap:
  3512                           	opt callstack 0
  3513                           
  3514                           ; 2 bytes @ 0x1B
  3515  001B'                    	ds	2
  3516  001D'                    ?_printf:
  3517                           	opt callstack 0
  3518  001D'                    printf@fmt:
  3519                           	opt callstack 0
  3520                           
  3521                           ; 2 bytes @ 0x1D
  3522  001D'                    	ds	12
  3523  0029'                    printf@ap:
  3524                           	opt callstack 0
  3525                           
  3526                           ; 2 bytes @ 0x29
  3527  0029'                    	ds	1
  3528  002A'                    print_char@map:
  3529                           	opt callstack 0
  3530                           
  3531                           ; 8 bytes @ 0x2A
  3532  002A'                    	ds	1
  3533  002B'                    send_UBX_string@id:
  3534                           	opt callstack 0
  3535  002B'                    adf4351_set_freq@ctx:
  3536                           	opt callstack 0
  3537  002B'                    check_ADF5341_status@ctx:
  3538                           	opt callstack 0
  3539  002B'                    lnb_do_configure@i2c:
  3540                           	opt callstack 0
  3541  002B'                    check_LNB_status@i2c:
  3542                           	opt callstack 0
  3543  002B'                    si5328_perform_ical@i2c:
  3544                           	opt callstack 0
  3545  002B'                    check_si5328_status@i2c:
  3546                           	opt callstack 0
  3547  002B'                    write_regset@i2c:
  3548                           	opt callstack 0
  3549                           
  3550                           ; 2 bytes @ 0x2B
  3551  002B'                    	ds	1
  3552  002C'                    send_UBX_string@len:
  3553                           	opt callstack 0
  3554                           
  3555                           ; 2 bytes @ 0x2C
  3556  002C'                    	ds	1
  3557  002D'                    check_ADF5341_status@stat:
  3558                           	opt callstack 0
  3559  002D'                    lnb_do_configure@addr:
  3560                           	opt callstack 0
  3561  002D'                    check_LNB_status@addr:
  3562                           	opt callstack 0
  3563  002D'                    si5328_perform_ical@addr:
  3564                           	opt callstack 0
  3565  002D'                    check_si5328_status@addr:
  3566                           	opt callstack 0
  3567  002D'                    write_regset@addr:
  3568                           	opt callstack 0
  3569  002D'                    adf4351_set_freq@freq:
  3570                           	opt callstack 0
  3571                           
  3572                           ; 4 bytes @ 0x2D
  3573  002D'                    	ds	1
  3574  002E'                    ??_check_si5328_status:
  3575  002E'                    check_LNB_status@stat:
  3576                           	opt callstack 0
  3577  002E'                    write_regset@set:
  3578                           	opt callstack 0
  3579  002E'                    send_UBX_string@payload:
  3580                           	opt callstack 0
  3581                           
  3582                           ; 2 bytes @ 0x2E
  3583  002E'                    	ds	1
  3584  002F'                    lnb_configure@i2c:
  3585                           	opt callstack 0
  3586                           
  3587                           ; 2 bytes @ 0x2F
  3588  002F'                    	ds	1
  3589  0030'                    write_regset@len:
  3590                           	opt callstack 0
  3591                           
  3592                           ; 2 bytes @ 0x30
  3593  0030'                    	ds	1
  3594  0031'                    ??_adf4351_set_freq:
  3595  0031'                    lnb_configure@addr:
  3596                           	opt callstack 0
  3597  0031'                    check_si5328_status@ret:
  3598                           	opt callstack 0
  3599                           
  3600                           ; 1 bytes @ 0x31
  3601  0031'                    	ds	1
  3602  0032'                    ??_lnb_configure:
  3603  0032'                    check_si5328_status@lock:
  3604                           	opt callstack 0
  3605  0032'                    print_char@c:
  3606                           	opt callstack 0
  3607  0032'                    write_regset@errors:
  3608                           	opt callstack 0
  3609                           
  3610                           ; 2 bytes @ 0x32
  3611  0032'                    	ds	1
  3612  0033'                    check_si5328_status@res:
  3613                           	opt callstack 0
  3614  0033'                    print_char@b:
  3615                           	opt callstack 0
  3616                           
  3617                           ; 1 bytes @ 0x33
  3618  0033'                    	ds	1
  3619  0034'                    print_char@idx:
  3620                           	opt callstack 0
  3621  0034'                    lnb_configure@res:
  3622                           	opt callstack 0
  3623  0034'                    si5328_set_freq@i2c:
  3624                           	opt callstack 0
  3625                           
  3626                           ; 2 bytes @ 0x34
  3627  0034'                    	ds	1
  3628  0035'                    print_char@x:
  3629                           	opt callstack 0
  3630  0035'                    _adf4351_set_freq$3878:
  3631                           	opt callstack 0
  3632                           
  3633                           ; 4 bytes @ 0x35
  3634  0035'                    	ds	1
  3635  0036'                    si5328_set_freq@addr:
  3636                           	opt callstack 0
  3637  0036'                    print_char@y:
  3638                           	opt callstack 0
  3639                           
  3640                           ; 1 bytes @ 0x36
  3641  0036'                    	ds	1
  3642  0037'                    si5328_set_freq@freq_MHz:
  3643                           	opt callstack 0
  3644  0037'                    print_string@s:
  3645                           	opt callstack 0
  3646                           
  3647                           ; 2 bytes @ 0x37
  3648  0037'                    	ds	1
  3649  0038'                    ??_setQRG:
  3650                           
  3651                           ; 1 bytes @ 0x38
  3652  0038'                    	ds	1
  3653  0039'                    print_string@x:
  3654                           	opt callstack 0
  3655  0039'                    adf4351_set_freq@fcorr:
  3656                           	opt callstack 0
  3657                           
  3658                           ; 4 bytes @ 0x39
  3659  0039'                    	ds	1
  3660  003A'                    print_string@y:
  3661                           	opt callstack 0
  3662                           
  3663                           ; 1 bytes @ 0x3A
  3664  003A'                    	ds	1
  3665  003B'                    print_string@underline:
  3666                           	opt callstack 0
  3667  003B'                    setQRG@sw:
  3668                           	opt callstack 0
  3669                           
  3670                           ; 1 bytes @ 0x3B
  3671  003B'                    	ds	1
  3672  003C'                    ??_print_string:
  3673  003C'                    setQRG@newLO:
  3674                           	opt callstack 0
  3675                           
  3676                           ; 1 bytes @ 0x3C
  3677  003C'                    	ds	1
  3678  003D'                    setADF4351frequency@force:
  3679                           	opt callstack 0
  3680  003D'                    si5328_init@i2c:
  3681                           	opt callstack 0
  3682  003D'                    si5328_checkGPS@i2c:
  3683                           	opt callstack 0
  3684                           
  3685                           ; 2 bytes @ 0x3D
  3686  003D'                    	ds	1
  3687  003E'                    ??_show_display:
  3688  003E'                    lcd_init@i2c:
  3689                           	opt callstack 0
  3690  003E'                    setADF4351frequency@timeout:
  3691                           	opt callstack 0
  3692                           
  3693                           ; 2 bytes @ 0x3E
  3694  003E'                    	ds	1
  3695  003F'                    si5328_init@addr:
  3696                           	opt callstack 0
  3697  003F'                    si5328_checkGPS@addr:
  3698                           	opt callstack 0
  3699  003F'                    show_display@xpos:
  3700                           	opt callstack 0
  3701                           
  3702                           ; 1 bytes @ 0x3F
  3703  003F'                    	ds	1
  3704  0040'                    ??_si5328_init:
  3705  0040'                    lcd_init@addr:
  3706                           	opt callstack 0
  3707  0040'                    show_display@outqrg:
  3708                           	opt callstack 0
  3709  0040'                    setADF4351frequency@p:
  3710                           	opt callstack 0
  3711                           
  3712                           ; 2 bytes @ 0x40
  3713  0040'                    	ds	1
  3714  0041'                    lcd_init@res:
  3715                           	opt callstack 0
  3716                           
  3717                           ; 2 bytes @ 0x41
  3718  0041'                    	ds	1
  3719  0042'                    setADF4351frequency@sw:
  3720                           	opt callstack 0
  3721  0042'                    si5328_init@res:
  3722                           	opt callstack 0
  3723  0042'                    show_display@p:
  3724                           	opt callstack 0
  3725                           
  3726                           ; 2 bytes @ 0x42
  3727  0042'                    	ds	2
  3728  0044'                    ??_main:
  3729                           
  3730                           ; 1 bytes @ 0x44
  3731  0044'                    	ds	3
  3732  0047'                    main@lock:
  3733                           	opt callstack 0
  3734                           
  3735                           ; 1 bytes @ 0x47
  3736  0047'                    	ds	1
  3737                           
  3738                           	psect	cstackCOMRAM
  3739  0000'                    __pcstackCOMRAM:
  3740                           	opt callstack 0
  3741  0000'                    usart_rx_irq_handler@udata:
  3742                           	opt callstack 0
  3743                           
  3744                           ; 2 bytes @ 0x0
  3745  0000'                    	ds	2
  3746  0002'                    ??_usart_rx_irq_handler:
  3747                           
  3748                           ; 1 bytes @ 0x2
  3749  0002'                    	ds	2
  3750  0004'                    usart_rx_irq_handler@c:
  3751                           	opt callstack 0
  3752                           
  3753                           ; 1 bytes @ 0x4
  3754  0004'                    	ds	1
  3755  0005'                    usart_rx_irq_handler@wposn:
  3756                           	opt callstack 0
  3757                           
  3758                           ; 2 bytes @ 0x5
  3759  0005'                    	ds	2
  3760  0007'                    ??_global_irq_handler:
  3761                           
  3762                           ; 1 bytes @ 0x7
  3763  0007'                    	ds	4
  3764  000B'                    global_irq_handler@dummy:
  3765                           	opt callstack 0
  3766                           
  3767                           ; 1 bytes @ 0xB
  3768  000B'                    	ds	1
  3769  000C'                    global_irq_handler@dummy_1626:
  3770                           	opt callstack 0
  3771                           
  3772                           ; 1 bytes @ 0xC
  3773  000C'                    	ds	1
  3774  000D'                    ??_check_RXTX:
  3775  000D'                    ??_set_reg:
  3776  000D'                    ??_read_switch:
  3777  000D'                    ?_strlen:
  3778                           	opt callstack 0
  3779  000D'                    ?_memcmp:
  3780                           	opt callstack 0
  3781  000D'                    ?_strchr:
  3782                           	opt callstack 0
  3783  000D'                    ?_isupper:
  3784                           	opt callstack 0
  3785  000D'                    ?_isalpha:
  3786                           	opt callstack 0
  3787  000D'                    ?_isdigit:
  3788                           	opt callstack 0
  3789  000D'                    ?_strncmp:
  3790                           	opt callstack 0
  3791  000D'                    ?_isspace:
  3792                           	opt callstack 0
  3793  000D'                    ?_islower:
  3794                           	opt callstack 0
  3795  000D'                    ?_adf4351_get_lock:
  3796                           	opt callstack 0
  3797  000D'                    ?_i2c_wait_int:
  3798                           	opt callstack 0
  3799  000D'                    ?_usart_getc:
  3800                           	opt callstack 0
  3801  000D'                    ?___awdiv:
  3802                           	opt callstack 0
  3803  000D'                    ?___awmod:
  3804                           	opt callstack 0
  3805  000D'                    ?___lwdiv:
  3806                           	opt callstack 0
  3807  000D'                    ?_getGPSfrequency:
  3808                           	opt callstack 0
  3809  000D'                    ?___lmul:
  3810                           	opt callstack 0
  3811  000D'                    ?___aldiv:
  3812                           	opt callstack 0
  3813  000D'                    ?___omul:
  3814                           	opt callstack 0
  3815  000D'                    ?___aodiv:
  3816                           	opt callstack 0
  3817  000D'                    ?___aomod:
  3818                           	opt callstack 0
  3819  000D'                    usart_putc@c:
  3820                           	opt callstack 0
  3821  000D'                    adf4351_get_lock@ctx:
  3822                           	opt callstack 0
  3823  000D'                    adf4351_set_tune@ctx:
  3824                           	opt callstack 0
  3825  000D'                    adf4351_default@ctx:
  3826                           	opt callstack 0
  3827  000D'                    irq_set_handler@handler:
  3828                           	opt callstack 0
  3829  000D'                    ___awdiv@dividend:
  3830                           	opt callstack 0
  3831  000D'                    ___awmod@dividend:
  3832                           	opt callstack 0
  3833  000D'                    ___lwdiv@dividend:
  3834                           	opt callstack 0
  3835  000D'                    isalpha@c:
  3836                           	opt callstack 0
  3837  000D'                    isdigit@c:
  3838                           	opt callstack 0
  3839  000D'                    isspace@c:
  3840                           	opt callstack 0
  3841  000D'                    isupper@c:
  3842                           	opt callstack 0
  3843  000D'                    memcmp@vl:
  3844                           	opt callstack 0
  3845  000D'                    memcpy@d1:
  3846                           	opt callstack 0
  3847  000D'                    memset@dest:
  3848                           	opt callstack 0
  3849  000D'                    strchr@s:
  3850                           	opt callstack 0
  3851  000D'                    strlen@s:
  3852                           	opt callstack 0
  3853  000D'                    strncmp@_l:
  3854                           	opt callstack 0
  3855  000D'                    islower@c:
  3856                           	opt callstack 0
  3857  000D'                    adf4351_write_latch@value:
  3858                           	opt callstack 0
  3859  000D'                    i2c_wait_int@timeout:
  3860                           	opt callstack 0
  3861  000D'                    ___lmul@multiplier:
  3862                           	opt callstack 0
  3863  000D'                    ___aldiv@dividend:
  3864                           	opt callstack 0
  3865  000D'                    ___omul@multiplier:
  3866                           	opt callstack 0
  3867  000D'                    ___aodiv@dividend:
  3868                           	opt callstack 0
  3869  000D'                    ___aomod@dividend:
  3870                           	opt callstack 0
  3871                           
  3872                           ; 8 bytes @ 0xD
  3873  000D'                    	ds	1
  3874  000E'                    putgps@c:
  3875                           	opt callstack 0
  3876  000E'                    fputc@c:
  3877                           	opt callstack 0
  3878                           
  3879                           ; 2 bytes @ 0xE
  3880  000E'                    	ds	1
  3881  000F'                    ??_isupper:
  3882  000F'                    ??_isalpha:
  3883  000F'                    ??_isdigit:
  3884  000F'                    ??_isspace:
  3885  000F'                    ??_islower:
  3886  000F'                    ??_adf4351_get_lock:
  3887  000F'                    ??_usart_getc:
  3888  000F'                    adf4351_set_tune@icp:
  3889                           	opt callstack 0
  3890  000F'                    irq_set_handler@udata:
  3891                           	opt callstack 0
  3892  000F'                    ___awdiv@divisor:
  3893                           	opt callstack 0
  3894  000F'                    ___awmod@divisor:
  3895                           	opt callstack 0
  3896  000F'                    ___lwdiv@divisor:
  3897                           	opt callstack 0
  3898  000F'                    memcmp@vr:
  3899                           	opt callstack 0
  3900  000F'                    memcpy@s1:
  3901                           	opt callstack 0
  3902  000F'                    memset@c:
  3903                           	opt callstack 0
  3904  000F'                    strchr@c:
  3905                           	opt callstack 0
  3906  000F'                    strlen@a:
  3907                           	opt callstack 0
  3908  000F'                    strncmp@_r:
  3909                           	opt callstack 0
  3910                           
  3911                           ; 2 bytes @ 0xF
  3912  000F'                    	ds	1
  3913  0010'                    adf4351_set_tune@pout:
  3914                           	opt callstack 0
  3915  0010'                    read_switch@rb1:
  3916                           	opt callstack 0
  3917  0010'                    fputc@fp:
  3918                           	opt callstack 0
  3919  0010'                    check_RXTX@i:
  3920                           	opt callstack 0
  3921                           
  3922                           ; 2 bytes @ 0x10
  3923  0010'                    	ds	1
  3924  0011'                    ??_adf4351_write_latch:
  3925  0011'                    ?_i2c_start:
  3926                           	opt callstack 0
  3927  0011'                    ?_i2c_read:
  3928                           	opt callstack 0
  3929  0011'                    ?_i2c_write:
  3930                           	opt callstack 0
  3931  0011'                    irq_set_handler@id:
  3932                           	opt callstack 0
  3933  0011'                    read_switch@rb2:
  3934                           	opt callstack 0
  3935  0011'                    ___awdiv@counter:
  3936                           	opt callstack 0
  3937  0011'                    ___awmod@counter:
  3938                           	opt callstack 0
  3939  0011'                    adf4351_set_tune@lownoise:
  3940                           	opt callstack 0
  3941  0011'                    i2c_start@read:
  3942                           	opt callstack 0
  3943  0011'                    i2c_read@data:
  3944                           	opt callstack 0
  3945  0011'                    i2c_write@wantack:
  3946                           	opt callstack 0
  3947  0011'                    usart_getc@res:
  3948                           	opt callstack 0
  3949  0011'                    set_reg@p:
  3950                           	opt callstack 0
  3951  0011'                    ___lwdiv@quotient:
  3952                           	opt callstack 0
  3953  0011'                    memcmp@n:
  3954                           	opt callstack 0
  3955  0011'                    memcpy@n:
  3956                           	opt callstack 0
  3957  0011'                    memset@n:
  3958                           	opt callstack 0
  3959  0011'                    strncmp@n:
  3960                           	opt callstack 0
  3961  0011'                    getGPSfrequency@gf:
  3962                           	opt callstack 0
  3963  0011'                    ___lmul@multiplicand:
  3964                           	opt callstack 0
  3965  0011'                    ___aldiv@divisor:
  3966                           	opt callstack 0
  3967                           
  3968                           ; 4 bytes @ 0x11
  3969  0011'                    	ds	1
  3970  0012'                    ??_init_gpios:
  3971  0012'                    ?_stoa:
  3972                           	opt callstack 0
  3973  0012'                    read_switch@rb3:
  3974                           	opt callstack 0
  3975  0012'                    ___awdiv@sign:
  3976                           	opt callstack 0
  3977  0012'                    ___awmod@sign:
  3978                           	opt callstack 0
  3979  0012'                    stoa@fp:
  3980                           	opt callstack 0
  3981  0012'                    fputs@s:
  3982                           	opt callstack 0
  3983                           
  3984                           ; 2 bytes @ 0x12
  3985  0012'                    	ds	1
  3986  0013'                    ??_memset:
  3987  0013'                    ??_memcmp:
  3988  0013'                    ??_strncmp:
  3989  0013'                    ?_toupper:
  3990                           	opt callstack 0
  3991  0013'                    i2c_write@data:
  3992                           	opt callstack 0
  3993  0013'                    set_reg@idx:
  3994                           	opt callstack 0
  3995  0013'                    read_switch@rb4:
  3996                           	opt callstack 0
  3997  0013'                    ___lwdiv@counter:
  3998                           	opt callstack 0
  3999  0013'                    _isspace$3453:
  4000                           	opt callstack 0
  4001  0013'                    _adf4351_set_tune$505:
  4002                           	opt callstack 0
  4003  0013'                    i2c_start@rep:
  4004                           	opt callstack 0
  4005  0013'                    i2c_read@ack:
  4006                           	opt callstack 0
  4007  0013'                    ___awdiv@quotient:
  4008                           	opt callstack 0
  4009  0013'                    memcpy@d:
  4010                           	opt callstack 0
  4011  0013'                    toupper@c:
  4012                           	opt callstack 0
  4013                           
  4014                           ; 2 bytes @ 0x13
  4015  0013'                    	ds	1
  4016  0014'                    ?___wmul:
  4017                           	opt callstack 0
  4018  0014'                    i2c_write@res:
  4019                           	opt callstack 0
  4020  0014'                    stoa@s:
  4021                           	opt callstack 0
  4022  0014'                    ___wmul@multiplier:
  4023                           	opt callstack 0
  4024  0014'                    fputs@fp:
  4025                           	opt callstack 0
  4026  0014'                    strncmp@l:
  4027                           	opt callstack 0
  4028                           
  4029                           ; 2 bytes @ 0x14
  4030  0014'                    	ds	1
  4031  0015'                    ??_toupper:
  4032  0015'                    ??_i2c_read:
  4033  0015'                    ___aldiv@counter:
  4034                           	opt callstack 0
  4035  0015'                    i2c_start@wantack:
  4036                           	opt callstack 0
  4037  0015'                    memcmp@l:
  4038                           	opt callstack 0
  4039  0015'                    memcpy@s:
  4040                           	opt callstack 0
  4041  0015'                    memset@k:
  4042                           	opt callstack 0
  4043  0015'                    adf4351_write_latch@mask:
  4044                           	opt callstack 0
  4045  0015'                    ___lmul@product:
  4046                           	opt callstack 0
  4047  0015'                    ___omul@multiplicand:
  4048                           	opt callstack 0
  4049  0015'                    ___aodiv@divisor:
  4050                           	opt callstack 0
  4051  0015'                    ___aomod@divisor:
  4052                           	opt callstack 0
  4053                           
  4054                           ; 8 bytes @ 0x15
  4055  0015'                    	ds	1
  4056  0016'                    ??_stoa:
  4057  0016'                    ___aldiv@sign:
  4058                           	opt callstack 0
  4059  0016'                    fputs@c:
  4060                           	opt callstack 0
  4061  0016'                    i2c_read@res:
  4062                           	opt callstack 0
  4063  0016'                    ___wmul@multiplicand:
  4064                           	opt callstack 0
  4065  0016'                    strncmp@r:
  4066                           	opt callstack 0
  4067                           
  4068                           ; 2 bytes @ 0x16
  4069  0016'                    	ds	1
  4070  0017'                    i2c_start@addr:
  4071                           	opt callstack 0
  4072  0017'                    memcpy@tmp:
  4073                           	opt callstack 0
  4074  0017'                    memcmp@r:
  4075                           	opt callstack 0
  4076  0017'                    memset@s:
  4077                           	opt callstack 0
  4078  0017'                    fputs@i:
  4079                           	opt callstack 0
  4080  0017'                    ___aldiv@quotient:
  4081                           	opt callstack 0
  4082  0017'                    stoa@nuls:
  4083                           	opt callstack 0
  4084                           
  4085                           ; 7 bytes @ 0x17
  4086  0017'                    	ds	1
  4087  0018'                    i2c_start@res:
  4088                           	opt callstack 0
  4089  0018'                    ___wmul@product:
  4090                           	opt callstack 0
  4091                           
  4092                           ; 2 bytes @ 0x18
  4093  0018'                    	ds	1
  4094  0019'                    ?_itoa:
  4095                           	opt callstack 0
  4096  0019'                    ?_pad:
  4097                           	opt callstack 0
  4098  0019'                    ?___lldiv:
  4099                           	opt callstack 0
  4100  0019'                    adf4351_init@ctx:
  4101                           	opt callstack 0
  4102  0019'                    adf4351_write_reg0@ctx:
  4103                           	opt callstack 0
  4104  0019'                    adf4351_write_reg1@ctx:
  4105                           	opt callstack 0
  4106  0019'                    adf4351_write_reg2@ctx:
  4107                           	opt callstack 0
  4108  0019'                    adf4351_write_reg3@ctx:
  4109                           	opt callstack 0
  4110  0019'                    adf4351_write_reg4@ctx:
  4111                           	opt callstack 0
  4112  0019'                    adf4351_write_reg5@ctx:
  4113                           	opt callstack 0
  4114  0019'                    itoa@value:
  4115                           	opt callstack 0
  4116  0019'                    pad@fp:
  4117                           	opt callstack 0
  4118  0019'                    _toupper$3548:
  4119                           	opt callstack 0
  4120  0019'                    ___lldiv@dividend:
  4121                           	opt callstack 0
  4122                           
  4123                           ; 4 bytes @ 0x19
  4124  0019'                    	ds	1
  4125  001A'                    ?_atoi:
  4126                           	opt callstack 0
  4127  001A'                    atoi@s:
  4128                           	opt callstack 0
  4129                           
  4130                           ; 2 bytes @ 0x1A
  4131  001A'                    	ds	1
  4132  001B'                    ??_adf4351_write_reg4:
  4133  001B'                    ??_adf4351_write_reg2:
  4134  001B'                    ??_adf4351_write_reg5:
  4135  001B'                    ??_adf4351_write_reg3:
  4136  001B'                    ??_adf4351_write_reg1:
  4137  001B'                    ??_adf4351_write_reg0:
  4138  001B'                    ??_adf4351_init:
  4139  001B'                    ?___strtoxl:
  4140                           	opt callstack 0
  4141  001B'                    itoa@c:
  4142                           	opt callstack 0
  4143  001B'                    pad@buf:
  4144                           	opt callstack 0
  4145  001B'                    ___strtoxl@s:
  4146                           	opt callstack 0
  4147                           
  4148                           ; 2 bytes @ 0x1B
  4149  001B'                    	ds	1
  4150  001C'                    ??_atoi:
  4151                           
  4152                           ; 1 bytes @ 0x1C
  4153  001C'                    	ds	1
  4154  001D'                    ___aodiv@counter:
  4155                           	opt callstack 0
  4156  001D'                    ___aomod@counter:
  4157                           	opt callstack 0
  4158  001D'                    pad@p:
  4159                           	opt callstack 0
  4160  001D'                    ___strtoxl@endptr:
  4161                           	opt callstack 0
  4162  001D'                    ___lldiv@divisor:
  4163                           	opt callstack 0
  4164  001D'                    ___omul@product:
  4165                           	opt callstack 0
  4166                           
  4167                           ; 8 bytes @ 0x1D
  4168  001D'                    	ds	1
  4169  001E'                    ___aodiv@sign:
  4170                           	opt callstack 0
  4171  001E'                    ___aomod@sign:
  4172                           	opt callstack 0
  4173  001E'                    stoa@i:
  4174                           	opt callstack 0
  4175                           
  4176                           ; 2 bytes @ 0x1E
  4177  001E'                    	ds	1
  4178  001F'                    ??_pad:
  4179  001F'                    ?_abs:
  4180                           	opt callstack 0
  4181  001F'                    abs@a:
  4182                           	opt callstack 0
  4183  001F'                    ___strtoxl@base:
  4184                           	opt callstack 0
  4185  001F'                    ___aodiv@quotient:
  4186                           	opt callstack 0
  4187                           
  4188                           ; 8 bytes @ 0x1F
  4189  001F'                    	ds	1
  4190  0020'                    pad@i:
  4191                           	opt callstack 0
  4192  0020'                    stoa@w:
  4193                           	opt callstack 0
  4194  0020'                    atoi@neg:
  4195                           	opt callstack 0
  4196  0020'                    adf4351_write_reg4@data:
  4197                           	opt callstack 0
  4198  0020'                    adf4351_write_reg5@data:
  4199                           	opt callstack 0
  4200                           
  4201                           ; 4 bytes @ 0x20
  4202  0020'                    	ds	1
  4203  0021'                    ??_abs:
  4204  0021'                    ___strtoxl@is_signed:
  4205                           	opt callstack 0
  4206  0021'                    adf4351_write_reg0@data:
  4207                           	opt callstack 0
  4208  0021'                    adf4351_write_reg1@data:
  4209                           	opt callstack 0
  4210  0021'                    adf4351_write_reg2@data:
  4211                           	opt callstack 0
  4212  0021'                    adf4351_write_reg3@data:
  4213                           	opt callstack 0
  4214  0021'                    ___lldiv@quotient:
  4215                           	opt callstack 0
  4216                           
  4217                           ; 4 bytes @ 0x21
  4218  0021'                    	ds	1
  4219  0022'                    ??___strtoxl:
  4220  0022'                    pad@w:
  4221                           	opt callstack 0
  4222  0022'                    stoa@cp:
  4223                           	opt callstack 0
  4224  0022'                    _atoi$3426:
  4225                           	opt callstack 0
  4226                           
  4227                           ; 2 bytes @ 0x22
  4228  0022'                    	ds	2
  4229  0024'                    ?_xtoa:
  4230                           	opt callstack 0
  4231  0024'                    stoa@p:
  4232                           	opt callstack 0
  4233  0024'                    xtoa@fp:
  4234                           	opt callstack 0
  4235  0024'                    _atoi$3428:
  4236                           	opt callstack 0
  4237                           
  4238                           ; 2 bytes @ 0x24
  4239  0024'                    	ds	1
  4240  0025'                    ?___lodiv:
  4241                           	opt callstack 0
  4242  0025'                    ___lldiv@counter:
  4243                           	opt callstack 0
  4244  0025'                    adf4351_setup@ctx:
  4245                           	opt callstack 0
  4246  0025'                    ___lodiv@dividend:
  4247                           	opt callstack 0
  4248                           
  4249                           ; 8 bytes @ 0x25
  4250  0025'                    	ds	1
  4251  0026'                    ?_CalculateGridSquare:
  4252                           	opt callstack 0
  4253  0026'                    _atoi$3427:
  4254                           	opt callstack 0
  4255  0026'                    i2c_reset@ctx:
  4256                           	opt callstack 0
  4257  0026'                    stoa@l:
  4258                           	opt callstack 0
  4259  0026'                    usart_init@baud:
  4260                           	opt callstack 0
  4261  0026'                    ___strtoxl@prev_a:
  4262                           	opt callstack 0
  4263  0026'                    xtoa@d:
  4264                           	opt callstack 0
  4265                           
  4266                           ; 8 bytes @ 0x26
  4267  0026'                    	ds	1
  4268  0027'                    ?_dtoa:
  4269                           	opt callstack 0
  4270  0027'                    ?_calc_mixer_corr_value:
  4271                           	opt callstack 0
  4272  0027'                    adf4351_set_mode@ctx:
  4273                           	opt callstack 0
  4274  0027'                    dtoa@fp:
  4275                           	opt callstack 0
  4276  0027'                    atoi@n:
  4277                           	opt callstack 0
  4278                           
  4279                           ; 2 bytes @ 0x27
  4280  0027'                    	ds	1
  4281  0028'                    ??_i2c_reset:
  4282  0028'                    ??_CalculateGridSquare:
  4283                           
  4284                           ; 1 bytes @ 0x28
  4285  0028'                    	ds	1
  4286  0029'                    adf4351_set_mode@enable:
  4287                           	opt callstack 0
  4288  0029'                    dtoa@d:
  4289                           	opt callstack 0
  4290                           
  4291                           ; 8 bytes @ 0x29
  4292  0029'                    	ds	1
  4293  002A'                    usart_init@spbrg_value:
  4294                           	opt callstack 0
  4295  002A'                    ___strtoxl$3570:
  4296                           	opt callstack 0
  4297                           
  4298                           ; 2 bytes @ 0x2A
  4299  002A'                    	ds	1
  4300  002B'                    ??_calc_mixer_corr_value:
  4301  002B'                    
  4302                           ; 1 bytes @ 0x2B
  4303  002B'                    	ds	1
  4304  002C'                    ___strtoxl$3572:
  4305                           	opt callstack 0
  4306  002C'                    _i2c_reset$1141:
  4307                           	opt callstack 0
  4308  002C'                    CalculateGridSquare@lonm:
  4309                           	opt callstack 0
  4310                           
  4311                           ; 4 bytes @ 0x2C
  4312  002C'                    	ds	1
  4313  002D'                    ___lodiv@divisor:
  4314                           	opt callstack 0
  4315                           
  4316                           ; 8 bytes @ 0x2D
  4317  002D'                    	ds	1
  4318  002E'                    xtoa@x:
  4319                           	opt callstack 0
  4320  002E'                    ___strtoxl$3573:
  4321                           	opt callstack 0
  4322                           
  4323                           ; 2 bytes @ 0x2E
  4324  002E'                    	ds	1
  4325  002F'                    ??_xtoa:
  4326                           
  4327                           ; 1 bytes @ 0x2F
  4328  002F'                    	ds	1
  4329  0030'                    ___strtoxl$3571:
  4330                           	opt callstack 0
  4331  0030'                    i2c_reset@reg:
  4332                           	opt callstack 0
  4333  0030'                    CalculateGridSquare@longf:
  4334                           	opt callstack 0
  4335                           
  4336                           ; 4 bytes @ 0x30
  4337  0030'                    	ds	1
  4338  0031'                    ??_dtoa:
  4339  0031'                    ___strtoxl@conv_done:
  4340                           	opt callstack 0
  4341                           
  4342                           ; 1 bytes @ 0x31
  4343  0031'                    	ds	1
  4344  0032'                    ___strtoxl@limit:
  4345                           	opt callstack 0
  4346                           
  4347                           ; 4 bytes @ 0x32
  4348  0032'                    	ds	1
  4349  0033'                    calc_mixer_corr_value@curLO:
  4350                           	opt callstack 0
  4351                           
  4352                           ; 8 bytes @ 0x33
  4353  0033'                    	ds	1
  4354  0034'                    i2c_native_init@ctx:
  4355                           	opt callstack 0
  4356  0034'                    i2c_stop@ctx:
  4357                           	opt callstack 0
  4358  0034'                    CalculateGridSquare@lonrest1:
  4359                           	opt callstack 0
  4360                           
  4361                           ; 4 bytes @ 0x34
  4362  0034'                    	ds	1
  4363  0035'                    ___lodiv@quotient:
  4364                           	opt callstack 0
  4365                           
  4366                           ; 8 bytes @ 0x35
  4367  0035'                    	ds	1
  4368  0036'                    ?_i2c_transfer_native:
  4369                           	opt callstack 0
  4370  0036'                    ___strtoxl@sign:
  4371                           	opt callstack 0
  4372  0036'                    i2c_transfer_native@dev:
  4373                           	opt callstack 0
  4374  0036'                    i2c_native_init@baud:
  4375                           	opt callstack 0
  4376                           
  4377                           ; 4 bytes @ 0x36
  4378  0036'                    	ds	1
  4379  0037'                    ___strtoxl@skip:
  4380                           	opt callstack 0
  4381  0037'                    _xtoa$2934:
  4382                           	opt callstack 0
  4383                           
  4384                           ; 2 bytes @ 0x37
  4385  0037'                    	ds	1
  4386  0038'                    i2c_transfer_native@msg:
  4387                           	opt callstack 0
  4388  0038'                    CalculateGridSquare@lonmid:
  4389                           	opt callstack 0
  4390  0038'                    ___strtoxl@a:
  4391                           	opt callstack 0
  4392                           
  4393                           ; 4 bytes @ 0x38
  4394  0038'                    	ds	1
  4395  0039'                    _dtoa$2913:
  4396                           	opt callstack 0
  4397  0039'                    _xtoa$2935:
  4398                           	opt callstack 0
  4399                           
  4400                           ; 2 bytes @ 0x39
  4401  0039'                    	ds	1
  4402  003A'                    i2c_transfer_native@num:
  4403                           	opt callstack 0
  4404                           
  4405                           ; 2 bytes @ 0x3A
  4406  003A'                    	ds	1
  4407  003B'                    dtoa@p:
  4408                           	opt callstack 0
  4409  003B'                    xtoa@p:
  4410                           	opt callstack 0
  4411  003B'                    calc_mixer_corr_value@v:
  4412                           	opt callstack 0
  4413                           
  4414                           ; 4 bytes @ 0x3B
  4415  003B'                    	ds	1
  4416  003C'                    ??_i2c_transfer_native:
  4417  003C'                    ___strtoxl@cp:
  4418                           	opt callstack 0
  4419  003C'                    CalculateGridSquare@latm:
  4420                           	opt callstack 0
  4421                           
  4422                           ; 4 bytes @ 0x3C
  4423  003C'                    	ds	1
  4424  003D'                    ___lodiv@counter:
  4425                           	opt callstack 0
  4426  003D'                    i2c_transfer_native@ack:
  4427                           	opt callstack 0
  4428  003D'                    dtoa@w:
  4429                           	opt callstack 0
  4430  003D'                    xtoa@w:
  4431                           	opt callstack 0
  4432                           
  4433                           ; 2 bytes @ 0x3D
  4434  003D'                    	ds	1
  4435  003E'                    ___strtoxl@c:
  4436                           	opt callstack 0
  4437  003E'                    adf4351_calc_counters@ctx:
  4438                           	opt callstack 0
  4439                           
  4440                           ; 2 bytes @ 0x3E
  4441  003E'                    	ds	1
  4442  003F'                    ?_strtol:
  4443                           	opt callstack 0
  4444  003F'                    i2c_transfer_native@inmsg:
  4445                           	opt callstack 0
  4446  003F'                    dtoa@s:
  4447                           	opt callstack 0
  4448  003F'                    strtol@s:
  4449                           	opt callstack 0
  4450  003F'                    calc_mixer_corr_value@fgps:
  4451                           	opt callstack 0
  4452  003F'                    xtoa@n:
  4453                           	opt callstack 0
  4454                           
  4455                           ; 8 bytes @ 0x3F
  4456  003F'                    	ds	1
  4457  0040'                    ??_adf4351_calc_counters:
  4458  0040'                    CalculateGridSquare@latgf:
  4459                           	opt callstack 0
  4460                           
  4461                           ; 4 bytes @ 0x40
  4462  0040'                    	ds	1
  4463  0041'                    i2c_transfer_native@read:
  4464                           	opt callstack 0
  4465  0041'                    strtol@endptr:
  4466                           	opt callstack 0
  4467  0041'                    dtoa@n:
  4468                           	opt callstack 0
  4469                           
  4470                           ; 8 bytes @ 0x41
  4471  0041'                    	ds	2
  4472  0043'                    i2c_transfer_native@wantack:
  4473                           	opt callstack 0
  4474  0043'                    strtol@base:
  4475                           	opt callstack 0
  4476                           
  4477                           ; 2 bytes @ 0x43
  4478  0043'                    	ds	1
  4479  0044'                    CalculateGridSquare@latrest1:
  4480                           	opt callstack 0
  4481                           
  4482                           ; 4 bytes @ 0x44
  4483  0044'                    	ds	1
  4484  0045'                    i2c_transfer_native@i:
  4485                           	opt callstack 0
  4486  0045'                    eval_gps@gpsbuf:
  4487                           	opt callstack 0
  4488                           
  4489                           ; 2 bytes @ 0x45
  4490  0045'                    	ds	2
  4491  0047'                    ??_eval_gps:
  4492  0047'                    i2c_transfer_native@bdata:
  4493                           	opt callstack 0
  4494  0047'                    xtoa@i:
  4495                           	opt callstack 0
  4496                           
  4497                           ; 2 bytes @ 0x47
  4498  0047'                    	ds	1
  4499  0048'                    adf4351_calc_counters@INT:
  4500                           	opt callstack 0
  4501  0048'                    CalculateGridSquare@latmid:
  4502                           	opt callstack 0
  4503                           
  4504                           ; 4 bytes @ 0x48
  4505  0048'                    	ds	1
  4506  0049'                    i2c_transfer_native@ctx:
  4507                           	opt callstack 0
  4508  0049'                    dtoa@i:
  4509                           	opt callstack 0
  4510  0049'                    xtoa@c:
  4511                           	opt callstack 0
  4512                           
  4513                           ; 2 bytes @ 0x49
  4514  0049'                    	ds	2
  4515  004B'                    ?_vfpfcnvrt:
  4516                           	opt callstack 0
  4517  004B'                    i2c_transfer_native@left:
  4518                           	opt callstack 0
  4519  004B'                    rx_gps@c:
  4520                           	opt callstack 0
  4521  004B'                    vfpfcnvrt@fp:
  4522                           	opt callstack 0
  4523                           
  4524                           ; 2 bytes @ 0x4B
  4525  004B'                    	ds	1
  4526  004C'                    adf4351_calc_counters@rest:
  4527                           	opt callstack 0
  4528  004C'                    CalculateGridSquare@lon:
  4529                           	opt callstack 0
  4530                           
  4531                           ; 4 bytes @ 0x4C
  4532  004C'                    	ds	1
  4533  004D'                    ??_rx_gps:
  4534  004D'                    i2c_transfer_native@res:
  4535                           	opt callstack 0
  4536  004D'                    vfpfcnvrt@fmt:
  4537                           	opt callstack 0
  4538                           
  4539                           ; 2 bytes @ 0x4D
  4540  004D'                    	ds	2
  4541  004F'                    i2c_transfer_native@pmsg:
  4542                           	opt callstack 0
  4543  004F'                    rx_usart@c:
  4544                           	opt callstack 0
  4545  004F'                    vfpfcnvrt@ap:
  4546                           	opt callstack 0
  4547                           
  4548                           ; 2 bytes @ 0x4F
  4549  004F'                    	ds	1
  4550  0050'                    _adf4351_calc_counters$3879:
  4551                           	opt callstack 0
  4552  0050'                    CalculateGridSquare@lon_min:
  4553                           	opt callstack 0
  4554                           
  4555                           ; 4 bytes @ 0x50
  4556  0050'                    	ds	1
  4557  0051'                    ??_vfpfcnvrt:
  4558  0051'                    ?_i2c_transfer:
  4559                           	opt callstack 0
  4560  0051'                    i2c_transfer@dev:
  4561                           	opt callstack 0
  4562                           
  4563                           ; 2 bytes @ 0x51
  4564  0051'                    	ds	1
  4565  0052'                    adf4351_calc_counters@vfoout:
  4566                           	opt callstack 0
  4567                           
  4568                           ; 8 bytes @ 0x52
  4569  0052'                    	ds	1
  4570  0053'                    i2c_transfer@msg:
  4571                           	opt callstack 0
  4572                           
  4573                           ; 2 bytes @ 0x53
  4574  0053'                    	ds	1
  4575  0054'                    CalculateGridSquare@lat:
  4576                           	opt callstack 0
  4577                           
  4578                           ; 4 bytes @ 0x54
  4579  0054'                    	ds	1
  4580  0055'                    i2c_transfer@num:
  4581                           	opt callstack 0
  4582                           
  4583                           ; 2 bytes @ 0x55
  4584  0055'                    	ds	2
  4585  0057'                    ?_i2c_probe_addr:
  4586                           	opt callstack 0
  4587  0057'                    ?_smbus8_write_byte:
  4588                           	opt callstack 0
  4589  0057'                    ?_smbus8_read_byte:
  4590                           	opt callstack 0
  4591  0057'                    i2c_probe_addr@dev:
  4592                           	opt callstack 0
  4593  0057'                    smbus8_write_byte@dev:
  4594                           	opt callstack 0
  4595  0057'                    smbus8_write_data@dev:
  4596                           	opt callstack 0
  4597  0057'                    smbus8_read_byte@dev:
  4598                           	opt callstack 0
  4599                           
  4600                           ; 2 bytes @ 0x57
  4601  0057'                    	ds	1
  4602  0058'                    CalculateGridSquare@lat_min:
  4603                           	opt callstack 0
  4604                           
  4605                           ; 4 bytes @ 0x58
  4606  0058'                    	ds	1
  4607  0059'                    i2c_probe_addr@addr:
  4608                           	opt callstack 0
  4609  0059'                    smbus8_write_byte@addr:
  4610                           	opt callstack 0
  4611  0059'                    smbus8_write_data@addr:
  4612                           	opt callstack 0
  4613  0059'                    smbus8_read_byte@addr:
  4614                           	opt callstack 0
  4615                           
  4616                           ; 1 bytes @ 0x59
  4617  0059'                    	ds	1
  4618  005A'                    smbus8_write_byte@reg:
  4619                           	opt callstack 0
  4620  005A'                    smbus8_write_data@reg:
  4621                           	opt callstack 0
  4622  005A'                    smbus8_read_byte@reg:
  4623                           	opt callstack 0
  4624  005A'                    i2c_probe_addr@msg:
  4625                           	opt callstack 0
  4626  005A'                    adf4351_calc_counters@Nmal10000:
  4627                           	opt callstack 0
  4628                           
  4629                           ; 8 bytes @ 0x5A
  4630  005A'                    	ds	1
  4631  005B'                    smbus8_write_byte@data:
  4632                           	opt callstack 0
  4633  005B'                    smbus8_write_data@data:
  4634                           	opt callstack 0
  4635  005B'                    smbus8_read_byte@data:
  4636                           	opt callstack 0
  4637                           
  4638                           ; 2 bytes @ 0x5B
  4639  005B'                    	ds	1
  4640  005C'                    ssd1306_commandbyte@cmd:
  4641                           	opt callstack 0
  4642                           
  4643                           ; 1 bytes @ 0x5C
  4644  005C'                    	ds	1
  4645  005D'                    smbus8_write_data@len:
  4646                           	opt callstack 0
  4647  005D'                    read_reg@i2c:
  4648                           	opt callstack 0
  4649                           
  4650                           ; 2 bytes @ 0x5D
  4651  005D'                    	ds	2
  4652  005F'                    read_reg@addr:
  4653                           	opt callstack 0
  4654  005F'                    ssd1306_command@cmd:
  4655                           	opt callstack 0
  4656  005F'                    ssd1306_data@data:
  4657                           	opt callstack 0
  4658  005F'                    vfprintf@cfmt:
  4659                           	opt callstack 0
  4660                           
  4661                           ; 2 bytes @ 0x5F
  4662  005F'                    	ds	1
  4663  0060'                    read_reg@reg:
  4664                           	opt callstack 0
  4665                           
  4666                           ; 1 bytes @ 0x60
  4667  0060'                    	ds	1
  4668  0061'                    ??_check_LNB_status:
  4669  0061'                    ??_write_regset:
  4670  0061'                    ??_send_UBX_string:
  4671  0061'                    ??_check_ADF5341_status:
  4672  0061'                    lnb_do_configure@value:
  4673                           	opt callstack 0
  4674  0061'                    ssd1306_command@len:
  4675                           	opt callstack 0
  4676  0061'                    ssd1306_data@len:
  4677                           	opt callstack 0
  4678                           
  4679                           ; 2 bytes @ 0x61
  4680  0061'                    	ds	1
  4681  0062'                    ??_setADF4351frequency:
  4682  0062'                    lnb_do_configure@res:
  4683                           	opt callstack 0
  4684                           
  4685                           ; 2 bytes @ 0x62
  4686  0062'                    	ds	1
  4687  0063'                    read_reg@val:
  4688                           	opt callstack 0
  4689  0063'                    print_string@i:
  4690                           	opt callstack 0
  4691                           
  4692                           ; 1 bytes @ 0x63
  4693  0063'                    	ds	1
  4694  0064'                    
  4695                           ; 1 bytes @ 0x64
  4696 ;;
  4697 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  4698 ;;
  4699 ;; *************** function _main *****************
  4700 ;; Defined at:
  4701 ;;		line 51 in file "src/main.c"
  4702 ;; Parameters:    Size  Location     Type
  4703 ;;		None
  4704 ;; Auto vars:     Size  Location     Type
  4705 ;;  lock            1   71[BANK0 ] unsigned char 
  4706 ;; Return value:  Size  Location     Type
  4707 ;;                  1    wreg      void 
  4708 ;; Registers used:
  4709 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  4710 ;; Tracked objects:
  4711 ;;		On entry : 0/0
  4712 ;;		On exit  : 0/0
  4713 ;;		Unchanged: 0/0
  4714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4715 ;;      Params:         0       0       0       0       0       0       0
  4716 ;;      Locals:         0       1       0       0       0       0       0
  4717 ;;      Temps:          0       3       0       0       0       0       0
  4718 ;;      Totals:         0       4       0       0       0       0       0
  4719 ;;Total ram usage:        4 bytes
  4720 ;; Hardware stack levels required when called:   14
  4721 ;; This function calls:
  4722 ;;		_adf4351_init
  4723 ;;		_adf4351_set_mode
  4724 ;;		_adf4351_set_tune
  4725 ;;		_check_ADF5341_status
  4726 ;;		_check_LNB_status
  4727 ;;		_check_si5328_status
  4728 ;;		_i2c_native_init
  4729 ;;		_init_gpios
  4730 ;;		_init_gps
  4731 ;;		_init_timer
  4732 ;;		_lcd_init
  4733 ;;		_lnb_configure
  4734 ;;		_rx_usart
  4735 ;;		_secret_settings
  4736 ;;		_setADF4351frequency
  4737 ;;		_setQRG
  4738 ;;		_show_display
  4739 ;;		_si5328_checkGPS
  4740 ;;		_si5328_init
  4741 ;;		_usart_init
  4742 ;; This function is called by:
  4743 ;;		Startup code after reset
  4744 ;; This function uses a non-reentrant model
  4745 ;;
  4746                           
  4747                           	psect	text0
  4748  0000'                    __ptext0:
  4749                           	opt callstack 0
  4750  0000'                    _main:
  4751                           	opt callstack 17
  4752  0000'                    
  4753                           ;src/main.c: 53:  static u8 old_GPS_lock = 0;;src/main.c: 55:     OSCTUNE = 0x80;
  4754  0000' 0E80               	movlw	128
  4755  0002' 6E9B               	movwf	155,c	;volatile
  4756                           
  4757                           ;src/main.c: 56:     OSCCON = 0xF2;
  4758  0004' 0EF2               	movlw	242
  4759  0006' 6ED3               	movwf	211,c	;volatile
  4760  0008'                    l1067:
  4761  0008' A4D3               	btfss	211,2,c	;volatile
  4762  000A' EF00' F000'        	goto	u13991
  4763  000E' EF00' F000'        	goto	u13990
  4764  0012'                    u13991:
  4765  0012' EF00' F000'        	goto	l1067
  4766  0016'                    u13990:
  4767  0016'                    
  4768                           ;src/main.c: 62:     PIE1 = 0;
  4769  0016' 0E00               	movlw	0
  4770  0018' 6E9D               	movwf	157,c	;volatile
  4771                           
  4772                           ;src/main.c: 63:     PIE2 = 0;
  4773  001A' 0E00               	movlw	0
  4774  001C' 6EA0               	movwf	160,c	;volatile
  4775  001E'                    
  4776                           ;src/main.c: 66:     init_gpios();
  4777  001E' EC00' F000'        	call	_init_gpios	;wreg free
  4778  0022'                    
  4779                           ;src/main.c: 69:     usart_init(9600);
  4780  0022' 0E80               	movlw	128
  4781  0024' 6E00'              	movwf	usart_init@baud^0,c
  4782  0026' 0E25               	movlw	37
  4783  0028' 6E00'              	movwf	(usart_init@baud+1)^0,c
  4784  002A' 0E00               	movlw	0
  4785  002C' 6E00'              	movwf	(usart_init@baud+2)^0,c
  4786  002E' 0E00               	movlw	0
  4787  0030' 6E00'              	movwf	(usart_init@baud+3)^0,c
  4788  0032' EC00' F000'        	call	_usart_init	;wreg free
  4789  0036'                    
  4790                           ;src/main.c: 73:     i2c_native_init(&g_i2c_bus, 100000);
  4791  0036' 0E00'              	movlw	low _g_i2c_bus
  4792  0038' 6E00'              	movwf	i2c_native_init@ctx^0,c
  4793  003A' 0E00'              	movlw	high _g_i2c_bus
  4794  003C' 6E00'              	movwf	(i2c_native_init@ctx+1)^0,c
  4795  003E' 0EA0               	movlw	160
  4796  0040' 6E00'              	movwf	i2c_native_init@baud^0,c
  4797  0042' 0E86               	movlw	134
  4798  0044' 6E00'              	movwf	(i2c_native_init@baud+1)^0,c
  4799  0046' 0E01               	movlw	1
  4800  0048' 6E00'              	movwf	(i2c_native_init@baud+2)^0,c
  4801  004A' 0E00               	movlw	0
  4802  004C' 6E00'              	movwf	(i2c_native_init@baud+3)^0,c
  4803  004E' EC00' F000'        	call	_i2c_native_init	;wreg free
  4804  0052'                    
  4805                           ;src/main.c: 76:  lcd_init(&g_i2c_bus,0x3c);
  4806  0052' 0E00'              	movlw	low _g_i2c_bus
  4807  0054' 0100               	movlb	0	; () banked
  4808  0056' 6F00'              	movwf	lcd_init@i2c& (0+255),b
  4809  0058' 0E00'              	movlw	high _g_i2c_bus
  4810  005A' 6F00'              	movwf	(lcd_init@i2c+1)& (0+255),b
  4811  005C' 0E3C               	movlw	60
  4812  005E' 6F00'              	movwf	lcd_init@addr& (0+255),b
  4813  0060' EC00' F000'        	call	_lcd_init	;wreg free
  4814  0064'                    
  4815                           ;src/main.c: 80:  secret_settings();
  4816  0064' EC00' F000'        	call	_secret_settings	;wreg free
  4817  0068'                    
  4818                           ;src/main.c: 83:  lnb_configure(&g_i2c_bus, 0x08);
  4819  0068' 0E00'              	movlw	low _g_i2c_bus
  4820  006A' 0100               	movlb	0	; () banked
  4821  006C' 6F00'              	movwf	lnb_configure@i2c& (0+255),b
  4822  006E' 0E00'              	movlw	high _g_i2c_bus
  4823  0070' 6F00'              	movwf	(lnb_configure@i2c+1)& (0+255),b
  4824  0072' 0E08               	movlw	8
  4825  0074' 6F00'              	movwf	lnb_configure@addr& (0+255),b
  4826  0076' EC00' F000'        	call	_lnb_configure	;wreg free
  4827  007A'                    
  4828                           ;src/main.c: 88:     si5328_init(&g_i2c_bus, 0x68);
  4829  007A' 0E00'              	movlw	low _g_i2c_bus
  4830  007C' 0100               	movlb	0	; () banked
  4831  007E' 6F00'              	movwf	si5328_init@i2c& (0+255),b
  4832  0080' 0E00'              	movlw	high _g_i2c_bus
  4833  0082' 6F00'              	movwf	(si5328_init@i2c+1)& (0+255),b
  4834  0084' 0E68               	movlw	104
  4835  0086' 6F00'              	movwf	si5328_init@addr& (0+255),b
  4836  0088' EC00' F000'        	call	_si5328_init	;wreg free
  4837  008C'                    
  4838                           ;src/main.c: 92:     adf4351_init(&g_adf4351);
  4839  008C' 0E00'              	movlw	low _g_adf4351
  4840  008E' 6E00'              	movwf	adf4351_init@ctx^0,c
  4841  0090' 0E00'              	movlw	high _g_adf4351
  4842  0092' 6E00'              	movwf	(adf4351_init@ctx+1)^0,c
  4843  0094' EC00' F000'        	call	_adf4351_init	;wreg free
  4844  0098'                    
  4845                           ;src/main.c: 96:     adf4351_set_tune(&g_adf4351, g_ipc, g_pout, 1);
  4846  0098' 0E00'              	movlw	low _g_adf4351
  4847  009A' 6E00'              	movwf	adf4351_set_tune@ctx^0,c
  4848  009C' 0E00'              	movlw	high _g_adf4351
  4849  009E' 6E00'              	movwf	(adf4351_set_tune@ctx+1)^0,c
  4850  00A0' 0E05               	movlw	5
  4851  00A2' 6E00'              	movwf	adf4351_set_tune@icp^0,c
  4852  00A4' 0E01               	movlw	1
  4853  00A6' 6E00'              	movwf	adf4351_set_tune@pout^0,c
  4854  00A8' 0E00               	movlw	0
  4855  00AA' 6E00'              	movwf	(adf4351_set_tune@lownoise+1)^0,c
  4856  00AC' 0E01               	movlw	1
  4857  00AE' 6E00'              	movwf	adf4351_set_tune@lownoise^0,c
  4858  00B0' EC00' F000'        	call	_adf4351_set_tune	;wreg free
  4859  00B4'                    
  4860                           ;src/main.c: 99:     adf4351_set_mode(&g_adf4351, 1);
  4861  00B4' 0E00'              	movlw	low _g_adf4351
  4862  00B6' 6E00'              	movwf	adf4351_set_mode@ctx^0,c
  4863  00B8' 0E00'              	movlw	high _g_adf4351
  4864  00BA' 6E00'              	movwf	(adf4351_set_mode@ctx+1)^0,c
  4865  00BC' 0E00               	movlw	0
  4866  00BE' 6E00'              	movwf	(adf4351_set_mode@enable+1)^0,c
  4867  00C0' 0E01               	movlw	1
  4868  00C2' 6E00'              	movwf	adf4351_set_mode@enable^0,c
  4869  00C4' EC00' F000'        	call	_adf4351_set_mode	;wreg free
  4870  00C8'                    
  4871                           ;src/main.c: 101:  init_timer();
  4872  00C8' EC00' F000'        	call	_init_timer	;wreg free
  4873  00CC'                    
  4874                           ;src/main.c: 104:     RCONbits.IPEN = 0;
  4875  00CC' 9ED0               	bcf	208,7,c	;volatile
  4876  00CE'                    
  4877                           ;src/main.c: 106:     INTCONbits.PEIE = 1;
  4878  00CE' 8CF2               	bsf	242,6,c	;volatile
  4879  00D0'                    
  4880                           ;src/main.c: 108:     INTCONbits.GIE = 1;
  4881  00D0' 8EF2               	bsf	242,7,c	;volatile
  4882  00D2'                    
  4883                           ;src/main.c: 112:  WDTCON=1;
  4884  00D2' 0E01               	movlw	1
  4885  00D4' 6ED1               	movwf	209,c	;volatile
  4886  00D6'                    l1070:
  4887  00D6' 0004               	clrwdt		;# 
  4888  00D8'                    
  4889                           ;src/main.c: 123:         setQRG();
  4890  00D8' EC00' F000'        	call	_setQRG	;wreg free
  4891  00DC'                    
  4892                           ;src/main.c: 126:   si5328_checkGPS(&g_i2c_bus, 0x68);
  4893  00DC' 0E00'              	movlw	low _g_i2c_bus
  4894  00DE' 0100               	movlb	0	; () banked
  4895  00E0' 6F00'              	movwf	si5328_checkGPS@i2c& (0+255),b
  4896  00E2' 0E00'              	movlw	high _g_i2c_bus
  4897  00E4' 6F00'              	movwf	(si5328_checkGPS@i2c+1)& (0+255),b
  4898  00E6' 0E68               	movlw	104
  4899  00E8' 6F00'              	movwf	si5328_checkGPS@addr& (0+255),b
  4900  00EA' EC00' F000'        	call	_si5328_checkGPS	;wreg free
  4901  00EE'                    
  4902                           ;src/main.c: 129:   u8 lock = check_si5328_status(&g_i2c_bus, 0x68);
  4903  00EE' 0E00'              	movlw	low _g_i2c_bus
  4904  00F0' 0100               	movlb	0	; () banked
  4905  00F2' 6F00'              	movwf	check_si5328_status@i2c& (0+255),b
  4906  00F4' 0E00'              	movlw	high _g_i2c_bus
  4907  00F6' 6F00'              	movwf	(check_si5328_status@i2c+1)& (0+255),b
  4908  00F8' 0E68               	movlw	104
  4909  00FA' 6F00'              	movwf	check_si5328_status@addr& (0+255),b
  4910  00FC' EC00' F000'        	call	_check_si5328_status	;wreg free
  4911  0100' 0100               	movlb	0	; () banked
  4912  0102' 6F00'              	movwf	main@lock& (0+255),b
  4913  0104'                    
  4914                           ; BSR set to: 0
  4915                           ;src/main.c: 132:   if(GPS_lock == 1 && GPS_lock != old_GPS_lock)
  4916  0104' 0500'              	decf	_GPS_lock& (0+255),w,b
  4917  0106' A4D8               	btfss	status,2,c
  4918  0108' EF00' F000'        	goto	u14001
  4919  010C' EF00' F000'        	goto	u14000
  4920  0110'                    u14001:
  4921  0110' EF00' F000'        	goto	l11191
  4922  0114'                    u14000:
  4923  0114'                    
  4924                           ; BSR set to: 0
  4925  0114' 5100'              	movf	main@old_GPS_lock& (0+255),w,b
  4926  0116' 1900'              	xorwf	_GPS_lock& (0+255),w,b
  4927  0118' B4D8               	btfsc	status,2,c
  4928  011A' EF00' F000'        	goto	u14011
  4929  011E' EF00' F000'        	goto	u14010
  4930  0122'                    u14011:
  4931  0122' EF00' F000'        	goto	l11191
  4932  0126'                    u14010:
  4933  0126'                    
  4934                           ; BSR set to: 0
  4935                           ;src/main.c: 133:   {;src/main.c: 134:    lock = 1;
  4936  0126' 0E01               	movlw	1
  4937  0128' 6F00'              	movwf	main@lock& (0+255),b
  4938  012A'                    
  4939                           ; BSR set to: 0
  4940                           ;src/main.c: 135:    old_GPS_lock = GPS_lock;
  4941  012A' C00C' F002'        	movff	_GPS_lock,main@old_GPS_lock
  4942  012E'                    l11191:
  4943                           
  4944                           ; BSR set to: 0
  4945                           ;src/main.c: 140:         setADF4351frequency(lock);
  4946  012E' 5100'              	movf	main@lock& (0+255),w,b
  4947  0130' EC00' F000'        	call	_setADF4351frequency
  4948  0134'                    
  4949                           ;src/main.c: 143:   check_ADF5341_status(&g_adf4351);
  4950  0134' 0E00'              	movlw	low _g_adf4351
  4951  0136' 0100               	movlb	0	; () banked
  4952  0138' 6F00'              	movwf	check_ADF5341_status@ctx& (0+255),b
  4953  013A' 0E00'              	movlw	high _g_adf4351
  4954  013C' 6F00'              	movwf	(check_ADF5341_status@ctx+1)& (0+255),b
  4955  013E' EC00' F000'        	call	_check_ADF5341_status	;wreg free
  4956  0142'                    
  4957                           ;src/main.c: 146:   check_LNB_status(&g_i2c_bus, 0x08);
  4958  0142' 0E00'              	movlw	low _g_i2c_bus
  4959  0144' 0100               	movlb	0	; () banked
  4960  0146' 6F00'              	movwf	check_LNB_status@i2c& (0+255),b
  4961  0148' 0E00'              	movlw	high _g_i2c_bus
  4962  014A' 6F00'              	movwf	(check_LNB_status@i2c+1)& (0+255),b
  4963  014C' 0E08               	movlw	8
  4964  014E' 6F00'              	movwf	check_LNB_status@addr& (0+255),b
  4965  0150' EC00' F000'        	call	_check_LNB_status	;wreg free
  4966  0154'                    
  4967                           ;src/main.c: 149:         rx_usart();
  4968  0154' EC00' F000'        	call	_rx_usart	;wreg free
  4969  0158'                    
  4970                           ;src/main.c: 152:   show_display();
  4971  0158' EC00' F000'        	call	_show_display	;wreg free
  4972  015C'                    
  4973                           ;src/main.c: 155:   if(ext10MHzReference == 0)
  4974  015C' 0100               	movlb	0	; () banked
  4975  015E' 5100'              	movf	_ext10MHzReference& (0+255),w,b
  4976  0160' A4D8               	btfss	status,2,c
  4977  0162' EF00' F000'        	goto	u14021
  4978  0166' EF00' F000'        	goto	u14020
  4979  016A'                    u14021:
  4980  016A' EF00' F000'        	goto	l11205
  4981  016E'                    u14020:
  4982  016E'                    
  4983                           ; BSR set to: 0
  4984                           ;src/main.c: 156:    init_gps();
  4985  016E' EC00' F000'        	call	_init_gps	;wreg free
  4986  0172'                    l11205:
  4987                           
  4988                           ;src/main.c: 159:   if(cpu_blink_timer)
  4989  0172' EE20' F000'        	lfsr	2,_cpu_blink_timer
  4990  0176' 50DF               	movf	indf2,w,c
  4991  0178' B4D8               	btfsc	status,2,c
  4992  017A' EF00' F000'        	goto	u14031
  4993  017E' EF00' F000'        	goto	u14030
  4994  0182'                    u14031:
  4995  0182' EF00' F000'        	goto	l11209
  4996  0186'                    u14030:
  4997  0186'                    
  4998                           ;src/main.c: 160:    *((PIN_LED_CPU_OK)->pPORT) &= ~(PIN_LED_CPU_OK)->mask;
  4999  0186' 0E00'              	movlw	low (_PIN_LED_CPU_OK_DEF+4)
  5000  0188' 6EF6               	movwf	tblptrl,c
  5001  018A' 0E00'              	movlw	high (_PIN_LED_CPU_OK_DEF+4)
  5002  018C' 6EF7               	movwf	tblptrh,c
  5003  018E'                    	if	0	;tblptru may be non-zero
  5004  018E'                    	endif
  5005  018E'                    	if	0	;tblptru may be non-zero
  5006  018E'                    	endif
  5007  018E' 0008               	tblrd		*
  5008  0190' 50F5               	movf	tablat,w,c
  5009  0192' 0AFF               	xorlw	255
  5010  0194' 0100               	movlb	0	; () banked
  5011  0196' 6F00'              	movwf	??_main& (0+255),b
  5012  0198' 0E00'              	movlw	low _PIN_LED_CPU_OK_DEF
  5013  019A' 6EF6               	movwf	tblptrl,c
  5014  019C'                    	if	1	;There is more than 1 active tblptr byte
  5015  019C' 0E00'              	movlw	high _PIN_LED_CPU_OK_DEF
  5016  019E' 6EF7               	movwf	tblptrh,c
  5017  01A0'                    	endif
  5018  01A0'                    	if	0	;There are less than 3 active tblptr bytes
  5019  01A0'                    	endif
  5020  01A0' 0009               	tblrd		*+
  5021  01A2' CFF5 F045'         	movff	tablat,??_main+1
  5022  01A6' 0009               	tblrd		*+
  5023  01A8' CFF5 F046'         	movff	tablat,??_main+2
  5024  01AC' C045' FFD9         	movff	??_main+1,fsr2l
  5025  01B0' C046' FFDA         	movff	??_main+2,fsr2h
  5026  01B4' 5100'              	movf	??_main& (0+255),w,b
  5027  01B6' 16DF               	andwf	indf2,f,c
  5028  01B8' EF00' F000'        	goto	l1070
  5029  01BC'                    l11209:
  5030                           
  5031                           ;src/main.c: 162:    *((PIN_LED_CPU_OK)->pPORT) |= (PIN_LED_CPU_OK)->mask;
  5032  01BC' 0E00'              	movlw	low (_PIN_LED_CPU_OK_DEF+4)
  5033  01BE' 6EF6               	movwf	tblptrl,c
  5034  01C0' 0E00'              	movlw	high (_PIN_LED_CPU_OK_DEF+4)
  5035  01C2' 6EF7               	movwf	tblptrh,c
  5036  01C4'                    	if	0	;tblptru may be non-zero
  5037  01C4'                    	endif
  5038  01C4'                    	if	0	;tblptru may be non-zero
  5039  01C4'                    	endif
  5040  01C4' 0008               	tblrd		*
  5041  01C6' CFF5 F044'         	movff	tablat,??_main
  5042  01CA' 0E00'              	movlw	low _PIN_LED_CPU_OK_DEF
  5043  01CC' 6EF6               	movwf	tblptrl,c
  5044  01CE'                    	if	1	;There is more than 1 active tblptr byte
  5045  01CE' 0E00'              	movlw	high _PIN_LED_CPU_OK_DEF
  5046  01D0' 6EF7               	movwf	tblptrh,c
  5047  01D2'                    	endif
  5048  01D2'                    	if	0	;There are less than 3 active tblptr bytes
  5049  01D2'                    	endif
  5050  01D2' 0009               	tblrd		*+
  5051  01D4' CFF5 F045'         	movff	tablat,??_main+1
  5052  01D8' 0009               	tblrd		*+
  5053  01DA' CFF5 F046'         	movff	tablat,??_main+2
  5054  01DE' C045' FFD9         	movff	??_main+1,fsr2l
  5055  01E2' C046' FFDA         	movff	??_main+2,fsr2h
  5056  01E6' 0100               	movlb	0	; () banked
  5057  01E8' 5100'              	movf	??_main& (0+255),w,b
  5058  01EA' 12DF               	iorwf	indf2,f,c
  5059  01EC' EF00' F000'        	goto	l1070
  5060  01F0' EF00' F000'        	goto	start
  5061  01F4'                    __end_of_main:
  5062                           	opt callstack 0
  5063                           
  5064 ;; *************** function _usart_init *****************
  5065 ;; Defined at:
  5066 ;;		line 15 in file "src/driver/usart.c"
  5067 ;; Parameters:    Size  Location     Type
  5068 ;;  baud            4   38[COMRAM] unsigned long 
  5069 ;; Auto vars:     Size  Location     Type
  5070 ;;  spbrg_value     2   42[COMRAM] unsigned short 
  5071 ;; Return value:  Size  Location     Type
  5072 ;;                  1    wreg      void 
  5073 ;; Registers used:
  5074 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5075 ;; Tracked objects:
  5076 ;;		On entry : 0/0
  5077 ;;		On exit  : 0/0
  5078 ;;		Unchanged: 0/0
  5079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5080 ;;      Params:         4       0       0       0       0       0       0
  5081 ;;      Locals:         2       0       0       0       0       0       0
  5082 ;;      Temps:          0       0       0       0       0       0       0
  5083 ;;      Totals:         6       0       0       0       0       0       0
  5084 ;;Total ram usage:        6 bytes
  5085 ;; Hardware stack levels used:    1
  5086 ;; Hardware stack levels required when called:    3
  5087 ;; This function calls:
  5088 ;;		___lldiv
  5089 ;;		_irq_set_handler
  5090 ;; This function is called by:
  5091 ;;		_main
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           
  5095                           	psect	text1
  5096  0000'                    __ptext1:
  5097                           	opt callstack 0
  5098  0000'                    _usart_init:
  5099                           	opt callstack 27
  5100  0000'                    
  5101                           ;src/driver/usart.c: 15: void usart_init(u32 baud);src/driver/usart.c: 16: {;src/driver/
      +                          usart.c: 17:     irq_set_handler(IRQ_HANDLER_ID_USART, usart_rx_irq_handler, ((void*)0))
      +                          ;
  5102  0000' 0E00'              	movlw	low _usart_rx_irq_handler
  5103  0002' 6E00'              	movwf	irq_set_handler@handler^0,c
  5104  0004' 0E00'              	movlw	high _usart_rx_irq_handler
  5105  0006' 6E00'              	movwf	(irq_set_handler@handler+1)^0,c
  5106  0008' 0E00               	movlw	0
  5107  000A' 6E00'              	movwf	irq_set_handler@udata^0,c
  5108  000C' 0E00               	movlw	0
  5109  000E' 6E00'              	movwf	(irq_set_handler@udata+1)^0,c
  5110  0010' 0E00               	movlw	0
  5111  0012' EC00' F000'        	call	_irq_set_handler
  5112  0016'                    
  5113                           ;src/driver/usart.c: 18:     TXSTAbits.TX9 = 0;
  5114  0016' 9CAC               	bcf	172,6,c	;volatile
  5115  0018'                    
  5116                           ;src/driver/usart.c: 19:     TXSTAbits.SENDB = 0;
  5117  0018' 96AC               	bcf	172,3,c	;volatile
  5118  001A'                    
  5119                           ;src/driver/usart.c: 20:     TXSTAbits.BRGH = 1;
  5120  001A' 84AC               	bsf	172,2,c	;volatile
  5121  001C'                    
  5122                           ;src/driver/usart.c: 21:     TXSTAbits.TXEN = 1;
  5123  001C' 8AAC               	bsf	172,5,c	;volatile
  5124  001E'                    
  5125                           ;src/driver/usart.c: 24:     RCSTAbits.RX9 = 0;
  5126  001E' 9CAB               	bcf	171,6,c	;volatile
  5127  0020'                    
  5128                           ;src/driver/usart.c: 25:     RCSTAbits.CREN = 1;
  5129  0020' 88AB               	bsf	171,4,c	;volatile
  5130  0022'                    
  5131                           ;src/driver/usart.c: 26:     RCSTAbits.ADDEN = 0;
  5132  0022' 96AB               	bcf	171,3,c	;volatile
  5133  0024'                    
  5134                           ;src/driver/usart.c: 28:     BAUDCONbits.BRG16 = 1;
  5135  0024' 86B8               	bsf	184,3,c	;volatile
  5136  0026'                    
  5137                           ;src/driver/usart.c: 29:     BAUDCONbits.ABDEN = 0;
  5138  0026' 90B8               	bcf	184,0,c	;volatile
  5139  0028'                    
  5140                           ;src/driver/usart.c: 31:     u16 spbrg_value = ((8000000/4) / baud) - 1;
  5141  0028' 0E80               	movlw	128
  5142  002A' 6E00'              	movwf	___lldiv@dividend^0,c
  5143  002C' 0E84               	movlw	132
  5144  002E' 6E00'              	movwf	(___lldiv@dividend+1)^0,c
  5145  0030' 0E1E               	movlw	30
  5146  0032' 6E00'              	movwf	(___lldiv@dividend+2)^0,c
  5147  0034' 0E00               	movlw	0
  5148  0036' 6E00'              	movwf	(___lldiv@dividend+3)^0,c
  5149  0038' C026' F01D'        	movff	usart_init@baud,___lldiv@divisor
  5150  003C' C027' F01E'        	movff	usart_init@baud+1,___lldiv@divisor+1
  5151  0040' C028' F01F'        	movff	usart_init@baud+2,___lldiv@divisor+2
  5152  0044' C029' F020'        	movff	usart_init@baud+3,___lldiv@divisor+3
  5153  0048' EC00' F000'        	call	___lldiv	;wreg free
  5154  004C' 0EFF               	movlw	255
  5155  004E' 2400'              	addwf	?___lldiv^0,w,c
  5156  0050' 6E00'              	movwf	usart_init@spbrg_value^0,c
  5157  0052' 0EFF               	movlw	255
  5158  0054' 2000'              	addwfc	(?___lldiv+1)^0,w,c
  5159  0056' 6E00'              	movwf	(usart_init@spbrg_value+1)^0,c
  5160  0058'                    
  5161                           ;src/driver/usart.c: 33:     SPBRGH = (spbrg_value>>8)&0xFF;
  5162  0058' 5000'              	movf	(usart_init@spbrg_value+1)^0,w,c
  5163  005A' 6EB0               	movwf	176,c	;volatile
  5164  005C'                    
  5165                           ;src/driver/usart.c: 34:     SPBRG = (spbrg_value>>0)&0xFF;
  5166  005C' C02A' FFAF         	movff	usart_init@spbrg_value,4015	;volatile
  5167  0060'                    
  5168                           ;src/driver/usart.c: 36:     TXSTAbits.SYNC = 0;
  5169  0060' 98AC               	bcf	172,4,c	;volatile
  5170  0062'                    
  5171                           ;src/driver/usart.c: 37:     RCSTAbits.SPEN = 1;
  5172  0062' 8EAB               	bsf	171,7,c	;volatile
  5173  0064'                    
  5174                           ;src/driver/usart.c: 39:     PIE1bits.RCIE = 1;
  5175  0064' 8A9D               	bsf	157,5,c	;volatile
  5176  0066' 0012               	return		;funcret
  5177  0068'                    __end_of_usart_init:
  5178                           	opt callstack 0
  5179                           
  5180 ;; *************** function _irq_set_handler *****************
  5181 ;; Defined at:
  5182 ;;		line 9 in file "src/driver/irq.c"
  5183 ;; Parameters:    Size  Location     Type
  5184 ;;  id              1    wreg     enum E2251
  5185 ;;  handler         2   13[COMRAM] PTR FTN(PTR void ,)void 
  5186 ;;		 -> usart_rx_irq_handler(1), 
  5187 ;;  udata           2   15[COMRAM] PTR void 
  5188 ;;		 -> NULL(0), 
  5189 ;; Auto vars:     Size  Location     Type
  5190 ;;  id              1   17[COMRAM] enum E2251
  5191 ;; Return value:  Size  Location     Type
  5192 ;;                  1    wreg      void 
  5193 ;; Registers used:
  5194 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5195 ;; Tracked objects:
  5196 ;;		On entry : 0/0
  5197 ;;		On exit  : 0/0
  5198 ;;		Unchanged: 0/0
  5199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5200 ;;      Params:         4       0       0       0       0       0       0
  5201 ;;      Locals:         1       0       0       0       0       0       0
  5202 ;;      Temps:          0       0       0       0       0       0       0
  5203 ;;      Totals:         5       0       0       0       0       0       0
  5204 ;;Total ram usage:        5 bytes
  5205 ;; Hardware stack levels used:    1
  5206 ;; Hardware stack levels required when called:    2
  5207 ;; This function calls:
  5208 ;;		Nothing
  5209 ;; This function is called by:
  5210 ;;		_usart_init
  5211 ;; This function uses a non-reentrant model
  5212 ;;
  5213                           
  5214                           	psect	text2
  5215  0000'                    __ptext2:
  5216                           	opt callstack 0
  5217  0000'                    _irq_set_handler:
  5218                           	opt callstack 27
  5219                           
  5220                           ;incstack = 0
  5221                           ;irq_set_handler@id stored from wreg
  5222  0000' 6E00'              	movwf	irq_set_handler@id^0,c
  5223  0002'                    
  5224                           ;src/driver/irq.c: 9: void irq_set_handler(IRQ_HANDLER_ID id, irq_handler_func handler, 
      +                          void *udata);src/driver/irq.c: 10: {;src/driver/irq.c: 11:     if(id < IRQ_HANDLER_ID_CN
      +                          T) {
  5225  0002' 0E02               	movlw	2
  5226  0004' 6000'              	cpfslt	irq_set_handler@id^0,c
  5227  0006' EF00' F000'        	goto	u8451
  5228  000A' EF00' F000'        	goto	u8450
  5229  000E'                    u8451:
  5230  000E' EF00' F000'        	goto	l356
  5231  0012'                    u8450:
  5232  0012'                    
  5233                           ;src/driver/irq.c: 12:         g_irq_handler_info[id].udata = udata;
  5234  0012' 5000'              	movf	irq_set_handler@id^0,w,c
  5235  0014' 0D04               	mullw	4
  5236  0016' 0E00'              	movlw	low (_g_irq_handler_info+2)
  5237  0018' 24F3               	addwf	243,w,c
  5238  001A' 6ED9               	movwf	fsr2l,c
  5239  001C' 0E00'              	movlw	high (_g_irq_handler_info+2)
  5240  001E' 20F4               	addwfc	prodh,w,c
  5241  0020' 6EDA               	movwf	fsr2h,c
  5242  0022' C00F' FFDE         	movff	irq_set_handler@udata,postinc2
  5243  0026' C010' FFDD         	movff	irq_set_handler@udata+1,postdec2
  5244                           
  5245                           ;src/driver/irq.c: 13:         g_irq_handler_info[id].handler = handler;
  5246  002A' 5000'              	movf	irq_set_handler@id^0,w,c
  5247  002C' 0D04               	mullw	4
  5248  002E' 0E00'              	movlw	low _g_irq_handler_info
  5249  0030' 24F3               	addwf	243,w,c
  5250  0032' 6ED9               	movwf	fsr2l,c
  5251  0034' 0E00'              	movlw	high _g_irq_handler_info
  5252  0036' 20F4               	addwfc	prodh,w,c
  5253  0038' 6EDA               	movwf	fsr2h,c
  5254  003A' C00D' FFDE         	movff	irq_set_handler@handler,postinc2
  5255  003E' C00E' FFDD         	movff	irq_set_handler@handler+1,postdec2
  5256  0042'                    l356:
  5257  0042' 0012               	return		;funcret
  5258  0044'                    __end_of_irq_set_handler:
  5259                           	opt callstack 0
  5260                           
  5261 ;; *************** function _si5328_init *****************
  5262 ;; Defined at:
  5263 ;;		line 408 in file "src/driver/si5328.c"
  5264 ;; Parameters:    Size  Location     Type
  5265 ;;  i2c             2   61[BANK0 ] PTR struct i2c_dev__
  5266 ;;		 -> g_i2c_bus(8), 
  5267 ;;  addr            1   63[BANK0 ] unsigned char 
  5268 ;; Auto vars:     Size  Location     Type
  5269 ;;  res             2   66[BANK0 ] int 
  5270 ;; Return value:  Size  Location     Type
  5271 ;;                  2   61[BANK0 ] int 
  5272 ;; Registers used:
  5273 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5274 ;; Tracked objects:
  5275 ;;		On entry : 0/0
  5276 ;;		On exit  : 0/0
  5277 ;;		Unchanged: 0/0
  5278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5279 ;;      Params:         0       3       0       0       0       0       0
  5280 ;;      Locals:         0       2       0       0       0       0       0
  5281 ;;      Temps:          0       2       0       0       0       0       0
  5282 ;;      Totals:         0       7       0       0       0       0       0
  5283 ;;Total ram usage:        7 bytes
  5284 ;; Hardware stack levels used:    1
  5285 ;; Hardware stack levels required when called:   13
  5286 ;; This function calls:
  5287 ;;		_i2c_probe_addr
  5288 ;;		_printf
  5289 ;;		_setQRG
  5290 ;;		_smbus8_write_byte
  5291 ;;		_write_regset
  5292 ;; This function is called by:
  5293 ;;		_main
  5294 ;; This function uses a non-reentrant model
  5295 ;;
  5296                           
  5297                           	psect	text3
  5298  0000'                    __ptext3:
  5299                           	opt callstack 0
  5300  0000'                    _si5328_init:
  5301                           	opt callstack 17
  5302  0000'                    
  5303                           ;src/driver/si5328.c: 408: int si5328_init(i2c_dev i2c, u8 addr);src/driver/si5328.c: 40
      +                          9: {;src/driver/si5328.c: 410:     int res = i2c_probe_addr(i2c, addr);
  5304  0000' C03D' F057'        	movff	si5328_init@i2c,i2c_probe_addr@dev
  5305  0004' C03E' F058'        	movff	si5328_init@i2c+1,i2c_probe_addr@dev+1
  5306  0008' C03F' F059'        	movff	si5328_init@addr,i2c_probe_addr@addr
  5307  000C' EC00' F000'        	call	_i2c_probe_addr	;wreg free
  5308  0010' C057' F042'        	movff	?_i2c_probe_addr,si5328_init@res
  5309  0014' C058' F043'        	movff	?_i2c_probe_addr+1,si5328_init@res+1
  5310  0018'                    
  5311                           ;src/driver/si5328.c: 411:     if(res == 0)
  5312  0018' 0100               	movlb	0	; () banked
  5313  001A' 5100'              	movf	si5328_init@res& (0+255),w,b
  5314  001C' 1100'              	iorwf	(si5328_init@res+1)& (0+255),w,b
  5315  001E' A4D8               	btfss	status,2,c
  5316  0020' EF00' F000'        	goto	u13271
  5317  0024' EF00' F000'        	goto	u13270
  5318  0028'                    u13271:
  5319  0028' EF00' F000'        	goto	l10731
  5320  002C'                    u13270:
  5321  002C'                    
  5322                           ; BSR set to: 0
  5323                           ;src/driver/si5328.c: 412:  {;src/driver/si5328.c: 413:         printf("si:found.\n");
  5324  002C' 0E00'              	movlw	low STR_25
  5325  002E' 6F00'              	movwf	printf@fmt& (0+255),b
  5326  0030' 0E00'              	movlw	high STR_25
  5327  0032' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  5328  0034' EC00' F000'        	call	_printf	;wreg free
  5329  0038'                    
  5330                           ;src/driver/si5328.c: 414:   smbus8_write_byte(i2c, addr, 136, 0x80);
  5331  0038' C03D' F057'        	movff	si5328_init@i2c,smbus8_write_byte@dev
  5332  003C' C03E' F058'        	movff	si5328_init@i2c+1,smbus8_write_byte@dev+1
  5333  0040' C03F' F059'        	movff	si5328_init@addr,smbus8_write_byte@addr
  5334  0044' 0E88               	movlw	136
  5335  0046' 6E00'              	movwf	smbus8_write_byte@reg^0,c
  5336  0048' 0E80               	movlw	128
  5337  004A' 6E00'              	movwf	smbus8_write_byte@data^0,c
  5338  004C' EC00' F000'        	call	_smbus8_write_byte	;wreg free
  5339  0050'                    
  5340                           ;src/driver/si5328.c: 415:   _delaywdt((unsigned long)((100)*(8000000/4000.0)));
  5341  0050' 0E01               	movlw	1
  5342  0052' 0100               	movlb	0	; () banked
  5343  0054' 6F00'              	movwf	(??_si5328_init+1)& (0+255),b
  5344  0056' 0EC3               	movlw	195
  5345  0058' 6F00'              	movwf	??_si5328_init& (0+255),b
  5346  005A' 0EEC               	movlw	236
  5347  005C'                    u14047:
  5348  005C' 0004               	clrwdt	
  5349  005E' 2EE8               	decfsz	wreg,f,c
  5350  0060' D7FD               	bra	u14047
  5351  0062' 2F00'              	decfsz	??_si5328_init& (0+255),f,b
  5352  0064' D7FB               	bra	u14047
  5353  0066' 2F00'              	decfsz	(??_si5328_init+1)& (0+255),f,b
  5354  0068' D7F9               	bra	u14047
  5355  006A' 0004               	clrwdt	
  5356  006C' F000               	nop	
  5357  006E' 0004               	clrwdt	
  5358  0070'                    
  5359                           ;src/driver/si5328.c: 417:   printf("si:init\n");
  5360  0070' 0E00'              	movlw	low STR_26
  5361  0072' 0100               	movlb	0	; () banked
  5362  0074' 6F00'              	movwf	printf@fmt& (0+255),b
  5363  0076' 0E00'              	movlw	high STR_26
  5364  0078' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  5365  007A' EC00' F000'        	call	_printf	;wreg free
  5366  007E'                    
  5367                           ;src/driver/si5328.c: 418:   if(ext10MHzReference == 0)
  5368  007E' 0100               	movlb	0	; () banked
  5369  0080' 5100'              	movf	_ext10MHzReference& (0+255),w,b
  5370  0082' A4D8               	btfss	status,2,c
  5371  0084' EF00' F000'        	goto	u13281
  5372  0088' EF00' F000'        	goto	u13280
  5373  008C'                    u13281:
  5374  008C' EF00' F000'        	goto	l10729
  5375  0090'                    u13280:
  5376  0090'                    
  5377                           ; BSR set to: 0
  5378                           ;src/driver/si5328.c: 419:   {;src/driver/si5328.c: 421:    write_regset(i2c, addr, reg_
      +                          set_univ_CKIN2_XAXB, (sizeof(reg_set_univ_CKIN2_XAXB)/sizeof(reg_set_univ_CKIN2_XAXB[0])
      +                          ));
  5379  0090' C03D' F02B'        	movff	si5328_init@i2c,write_regset@i2c
  5380  0094' C03E' F02C'        	movff	si5328_init@i2c+1,write_regset@i2c+1
  5381  0098' C03F' F02D'        	movff	si5328_init@addr,write_regset@addr
  5382  009C' 0E00'              	movlw	low _reg_set_univ_CKIN2_XAXB
  5383  009E' 6F00'              	movwf	write_regset@set& (0+255),b
  5384  00A0' 0E00'              	movlw	high _reg_set_univ_CKIN2_XAXB
  5385  00A2' 6F00'              	movwf	(write_regset@set+1)& (0+255),b
  5386  00A4' 0E00               	movlw	0
  5387  00A6' 6F00'              	movwf	(write_regset@len+1)& (0+255),b
  5388  00A8' 0E0C               	movlw	12
  5389  00AA' 6F00'              	movwf	write_regset@len& (0+255),b
  5390  00AC' EC00' F000'        	call	_write_regset	;wreg free
  5391                           
  5392                           ;src/driver/si5328.c: 422:   }
  5393  00B0' EF00' F000'        	goto	l486
  5394  00B4'                    l10729:
  5395                           
  5396                           ; BSR set to: 0
  5397                           ;src/driver/si5328.c: 424:   {;src/driver/si5328.c: 426:    write_regset(i2c, addr, reg_
      +                          set_univ_CKIN1_GPS, (sizeof(reg_set_univ_CKIN1_GPS)/sizeof(reg_set_univ_CKIN1_GPS[0])));
  5398  00B4' C03D' F02B'        	movff	si5328_init@i2c,write_regset@i2c
  5399  00B8' C03E' F02C'        	movff	si5328_init@i2c+1,write_regset@i2c+1
  5400  00BC' C03F' F02D'        	movff	si5328_init@addr,write_regset@addr
  5401  00C0' 0E00'              	movlw	low _reg_set_univ_CKIN1_GPS
  5402  00C2' 6F00'              	movwf	write_regset@set& (0+255),b
  5403  00C4' 0E00'              	movlw	high _reg_set_univ_CKIN1_GPS
  5404  00C6' 6F00'              	movwf	(write_regset@set+1)& (0+255),b
  5405  00C8' 0E00               	movlw	0
  5406  00CA' 6F00'              	movwf	(write_regset@len+1)& (0+255),b
  5407  00CC' 0E0D               	movlw	13
  5408  00CE' 6F00'              	movwf	write_regset@len& (0+255),b
  5409  00D0' EC00' F000'        	call	_write_regset	;wreg free
  5410  00D4'                    l486:
  5411                           
  5412                           ;src/driver/si5328.c: 429:   setQRG();
  5413  00D4' EC00' F000'        	call	_setQRG	;wreg free
  5414                           
  5415                           ;src/driver/si5328.c: 430:     }
  5416  00D8' EF00' F000'        	goto	l488
  5417  00DC'                    l10731:
  5418                           
  5419                           ; BSR set to: 0
  5420                           ;src/driver/si5328.c: 432:  {;src/driver/si5328.c: 433:         printf("si:not found!\n"
      +                          );
  5421  00DC' 0E00'              	movlw	low STR_27
  5422  00DE' 6F00'              	movwf	printf@fmt& (0+255),b
  5423  00E0' 0E00'              	movlw	high STR_27
  5424  00E2' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  5425  00E4' EC00' F000'        	call	_printf	;wreg free
  5426  00E8'                    l488:
  5427  00E8' 0012               	return		;funcret
  5428  00EA'                    __end_of_si5328_init:
  5429                           	opt callstack 0
  5430                           
  5431 ;; *************** function _si5328_checkGPS *****************
  5432 ;; Defined at:
  5433 ;;		line 468 in file "src/driver/si5328.c"
  5434 ;; Parameters:    Size  Location     Type
  5435 ;;  i2c             2   61[BANK0 ] PTR struct i2c_dev__
  5436 ;;		 -> g_i2c_bus(8), 
  5437 ;;  addr            1   63[BANK0 ] unsigned char 
  5438 ;; Auto vars:     Size  Location     Type
  5439 ;;		None
  5440 ;; Return value:  Size  Location     Type
  5441 ;;                  1    wreg      void 
  5442 ;; Registers used:
  5443 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5444 ;; Tracked objects:
  5445 ;;		On entry : 0/0
  5446 ;;		On exit  : 0/0
  5447 ;;		Unchanged: 0/0
  5448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5449 ;;      Params:         0       3       0       0       0       0       0
  5450 ;;      Locals:         0       0       0       0       0       0       0
  5451 ;;      Temps:          0       0       0       0       0       0       0
  5452 ;;      Totals:         0       3       0       0       0       0       0
  5453 ;;Total ram usage:        3 bytes
  5454 ;; Hardware stack levels used:    1
  5455 ;; Hardware stack levels required when called:   13
  5456 ;; This function calls:
  5457 ;;		_printf
  5458 ;;		_setQRG
  5459 ;;		_write_regset
  5460 ;; This function is called by:
  5461 ;;		_main
  5462 ;; This function uses a non-reentrant model
  5463 ;;
  5464                           
  5465                           	psect	text4
  5466  0000'                    __ptext4:
  5467                           	opt callstack 0
  5468  0000'                    _si5328_checkGPS:
  5469                           	opt callstack 17
  5470  0000'                    
  5471                           ;src/driver/si5328.c: 468: void si5328_checkGPS(i2c_dev i2c, u8 addr);src/driver/si5328.
      +                          c: 469: {;src/driver/si5328.c: 470: static u8 old_GPS_lock = 0;;src/driver/si5328.c: 471
      +                          : static u8 old_ubx_ack = 0;;src/driver/si5328.c: 473:  if(old_ubx_ack == 0 && ubx_ack =
      +                          = 1 && GPS_lock == 0)
  5472  0000' 0100               	movlb	0	; () banked
  5473  0002' 5100'              	movf	si5328_checkGPS@old_ubx_ack& (0+255),w,b
  5474  0004' A4D8               	btfss	status,2,c
  5475  0006' EF00' F000'        	goto	u13291
  5476  000A' EF00' F000'        	goto	u13290
  5477  000E'                    u13291:
  5478  000E' EF00' F000'        	goto	l10751
  5479  0012'                    u13290:
  5480  0012'                    
  5481                           ; BSR set to: 0
  5482  0012' 0400'              	decf	_ubx_ack^0,w,c
  5483  0014' A4D8               	btfss	status,2,c
  5484  0016' EF00' F000'        	goto	u13301
  5485  001A' EF00' F000'        	goto	u13300
  5486  001E'                    u13301:
  5487  001E' EF00' F000'        	goto	l10751
  5488  0022'                    u13300:
  5489  0022'                    
  5490                           ; BSR set to: 0
  5491  0022' 5100'              	movf	_GPS_lock& (0+255),w,b
  5492  0024' A4D8               	btfss	status,2,c
  5493  0026' EF00' F000'        	goto	u13311
  5494  002A' EF00' F000'        	goto	u13310
  5495  002E'                    u13311:
  5496  002E' EF00' F000'        	goto	l10751
  5497  0032'                    u13310:
  5498  0032'                    
  5499                           ; BSR set to: 0
  5500                           ;src/driver/si5328.c: 474:  {;src/driver/si5328.c: 475:   old_ubx_ack = ubx_ack;
  5501  0032' C00B' F006'        	movff	_ubx_ack,si5328_checkGPS@old_ubx_ack
  5502  0036'                    
  5503                           ; BSR set to: 0
  5504                           ;src/driver/si5328.c: 479:   printf("si:GPS ok, no lock\n");
  5505  0036' 0E00'              	movlw	low STR_31
  5506  0038' 6F00'              	movwf	printf@fmt& (0+255),b
  5507  003A' 0E00'              	movlw	high STR_31
  5508  003C' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  5509  003E' EC00' F000'        	call	_printf	;wreg free
  5510  0042'                    
  5511                           ;src/driver/si5328.c: 480:         write_regset(i2c, addr, reg_set_univ_CKIN2_XAXB, (siz
      +                          eof(reg_set_univ_CKIN2_XAXB)/sizeof(reg_set_univ_CKIN2_XAXB[0])));
  5512  0042' C03D' F02B'        	movff	si5328_checkGPS@i2c,write_regset@i2c
  5513  0046' C03E' F02C'        	movff	si5328_checkGPS@i2c+1,write_regset@i2c+1
  5514  004A' C03F' F02D'        	movff	si5328_checkGPS@addr,write_regset@addr
  5515  004E' 0E00'              	movlw	low _reg_set_univ_CKIN2_XAXB
  5516  0050' 0100               	movlb	0	; () banked
  5517  0052' 6F00'              	movwf	write_regset@set& (0+255),b
  5518  0054' 0E00'              	movlw	high _reg_set_univ_CKIN2_XAXB
  5519  0056' 6F00'              	movwf	(write_regset@set+1)& (0+255),b
  5520  0058' 0E00               	movlw	0
  5521  005A' 6F00'              	movwf	(write_regset@len+1)& (0+255),b
  5522  005C' 0E0C               	movlw	12
  5523  005E' 6F00'              	movwf	write_regset@len& (0+255),b
  5524  0060' EC00' F000'        	call	_write_regset	;wreg free
  5525  0064'                    
  5526                           ;src/driver/si5328.c: 482:   currentLO = 0xff;
  5527  0064' 6800'              	setf	_currentLO^0,c
  5528  0066'                    
  5529                           ;src/driver/si5328.c: 483:   setQRG();
  5530  0066' EC00' F000'        	call	_setQRG	;wreg free
  5531  006A'                    l10751:
  5532                           
  5533                           ;src/driver/si5328.c: 486:  if(old_GPS_lock == 0 && GPS_lock == 1 && use_GPS == 1)
  5534  006A' 0100               	movlb	0	; () banked
  5535  006C' 5100'              	movf	si5328_checkGPS@old_GPS_lock& (0+255),w,b
  5536  006E' A4D8               	btfss	status,2,c
  5537  0070' EF00' F000'        	goto	u13321
  5538  0074' EF00' F000'        	goto	u13320
  5539  0078'                    u13321:
  5540  0078' EF00' F000'        	goto	l508
  5541  007C'                    u13320:
  5542  007C'                    
  5543                           ; BSR set to: 0
  5544  007C' 0500'              	decf	_GPS_lock& (0+255),w,b
  5545  007E' A4D8               	btfss	status,2,c
  5546  0080' EF00' F000'        	goto	u13331
  5547  0084' EF00' F000'        	goto	u13330
  5548  0088'                    u13331:
  5549  0088' EF00' F000'        	goto	l508
  5550  008C'                    u13330:
  5551  008C'                    
  5552                           ; BSR set to: 0
  5553                           ;src/driver/si5328.c: 487:  {;src/driver/si5328.c: 488:   old_GPS_lock = 1;
  5554  008C' 0E01               	movlw	1
  5555  008E' 6F00'              	movwf	si5328_checkGPS@old_GPS_lock& (0+255),b
  5556  0090'                    
  5557                           ; BSR set to: 0
  5558                           ;src/driver/si5328.c: 491:   printf("GPS:locked\nsi:syncing GPS\n");
  5559  0090' 0E00'              	movlw	low STR_32
  5560  0092' 6F00'              	movwf	printf@fmt& (0+255),b
  5561  0094' 0E00'              	movlw	high STR_32
  5562  0096' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  5563  0098' EC00' F000'        	call	_printf	;wreg free
  5564  009C'                    
  5565                           ;src/driver/si5328.c: 492:         write_regset(i2c, addr, reg_set_univ_CKIN1_GPS, (size
      +                          of(reg_set_univ_CKIN1_GPS)/sizeof(reg_set_univ_CKIN1_GPS[0])));
  5566  009C' C03D' F02B'        	movff	si5328_checkGPS@i2c,write_regset@i2c
  5567  00A0' C03E' F02C'        	movff	si5328_checkGPS@i2c+1,write_regset@i2c+1
  5568  00A4' C03F' F02D'        	movff	si5328_checkGPS@addr,write_regset@addr
  5569  00A8' 0E00'              	movlw	low _reg_set_univ_CKIN1_GPS
  5570  00AA' 0100               	movlb	0	; () banked
  5571  00AC' 6F00'              	movwf	write_regset@set& (0+255),b
  5572  00AE' 0E00'              	movlw	high _reg_set_univ_CKIN1_GPS
  5573  00B0' 6F00'              	movwf	(write_regset@set+1)& (0+255),b
  5574  00B2' 0E00               	movlw	0
  5575  00B4' 6F00'              	movwf	(write_regset@len+1)& (0+255),b
  5576  00B6' 0E0D               	movlw	13
  5577  00B8' 6F00'              	movwf	write_regset@len& (0+255),b
  5578  00BA' EC00' F000'        	call	_write_regset	;wreg free
  5579  00BE'                    
  5580                           ;src/driver/si5328.c: 494:   currentLO = 0xff;
  5581  00BE' 6800'              	setf	_currentLO^0,c
  5582  00C0'                    
  5583                           ;src/driver/si5328.c: 495:   setQRG();
  5584  00C0' EC00' F000'        	call	_setQRG	;wreg free
  5585  00C4'                    l508:
  5586  00C4' 0012               	return		;funcret
  5587  00C6'                    __end_of_si5328_checkGPS:
  5588                           	opt callstack 0
  5589                           
  5590 ;; *************** function _setQRG *****************
  5591 ;; Defined at:
  5592 ;;		line 238 in file "src/main.c"
  5593 ;; Parameters:    Size  Location     Type
  5594 ;;		None
  5595 ;; Auto vars:     Size  Location     Type
  5596 ;;  newLO           1   60[BANK0 ] unsigned char 
  5597 ;;  sw              1   59[BANK0 ] unsigned char 
  5598 ;; Return value:  Size  Location     Type
  5599 ;;                  1    wreg      void 
  5600 ;; Registers used:
  5601 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5602 ;; Tracked objects:
  5603 ;;		On entry : 0/0
  5604 ;;		On exit  : 0/0
  5605 ;;		Unchanged: 0/0
  5606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5607 ;;      Params:         0       0       0       0       0       0       0
  5608 ;;      Locals:         0       2       0       0       0       0       0
  5609 ;;      Temps:          0       3       0       0       0       0       0
  5610 ;;      Totals:         0       5       0       0       0       0       0
  5611 ;;Total ram usage:        5 bytes
  5612 ;; Hardware stack levels used:    1
  5613 ;; Hardware stack levels required when called:   12
  5614 ;; This function calls:
  5615 ;;		_si5328_set_freq
  5616 ;; This function is called by:
  5617 ;;		_si5328_init
  5618 ;;		_si5328_checkGPS
  5619 ;;		_main
  5620 ;; This function uses a non-reentrant model
  5621 ;;
  5622                           
  5623                           	psect	text5
  5624  0000'                    __ptext5:
  5625                           	opt callstack 0
  5626  0000'                    _setQRG:
  5627                           	opt callstack 17
  5628  0000'                    
  5629                           ;src/main.c: 240:  u8 sw;;src/main.c: 241:  u8 newLO;;src/main.c: 244:     sw = ((*((PIN
      +                          _LNB_QRG2)->pPORT) & (PIN_LNB_QRG2)->mask) != 0)?1:0;
  5630  0000' 0E00'              	movlw	low (_PIN_LNB_QRG2_DEF+4)
  5631  0002' 6EF6               	movwf	tblptrl,c
  5632  0004' 0E00'              	movlw	high (_PIN_LNB_QRG2_DEF+4)
  5633  0006' 6EF7               	movwf	tblptrh,c
  5634  0008'                    	if	0	;tblptru may be non-zero
  5635  0008'                    	endif
  5636  0008'                    	if	0	;tblptru may be non-zero
  5637  0008'                    	endif
  5638  0008' 0008               	tblrd		*
  5639  000A' CFF5 F038'         	movff	tablat,??_setQRG
  5640  000E' 0E00'              	movlw	low _PIN_LNB_QRG2_DEF
  5641  0010' 6EF6               	movwf	tblptrl,c
  5642  0012'                    	if	1	;There is more than 1 active tblptr byte
  5643  0012' 0E00'              	movlw	high _PIN_LNB_QRG2_DEF
  5644  0014' 6EF7               	movwf	tblptrh,c
  5645  0016'                    	endif
  5646  0016'                    	if	0	;There are less than 3 active tblptr bytes
  5647  0016'                    	endif
  5648  0016' 0009               	tblrd		*+
  5649  0018' CFF5 F039'         	movff	tablat,??_setQRG+1
  5650  001C' 0009               	tblrd		*+
  5651  001E' CFF5 F03A'         	movff	tablat,??_setQRG+2
  5652  0022' C039' FFD9         	movff	??_setQRG+1,fsr2l
  5653  0026' C03A' FFDA         	movff	??_setQRG+2,fsr2h
  5654  002A' 50DF               	movf	indf2,w,c
  5655  002C' 0100               	movlb	0	; () banked
  5656  002E' 1500'              	andwf	??_setQRG& (0+255),w,b
  5657  0030' 0900               	iorlw	0
  5658  0032' A4D8               	btfss	status,2,c
  5659  0034' EF00' F000'        	goto	u13021
  5660  0038' EF00' F000'        	goto	u13020
  5661  003C'                    u13021:
  5662  003C' 0E01               	movlw	1
  5663  003E' EF00' F000'        	goto	u13030
  5664  0042'                    u13020:
  5665  0042' 0E00               	movlw	0
  5666  0044'                    u13030:
  5667  0044' 6F00'              	movwf	setQRG@sw& (0+255),b
  5668  0046'                    
  5669                           ; BSR set to: 0
  5670                           ;src/main.c: 245:  sw <<= 1;
  5671  0046' 90D8               	bcf	status,0,c
  5672  0048' 3700'              	rlcf	setQRG@sw& (0+255),f,b
  5673  004A'                    
  5674                           ; BSR set to: 0
  5675                           ;src/main.c: 246:     sw |= ((*((PIN_LNB_QRG1)->pPORT) & (PIN_LNB_QRG1)->mask) != 0)?1:0
      +                          ;
  5676  004A' 0E00'              	movlw	low (_PIN_LNB_QRG1_DEF+4)
  5677  004C' 6EF6               	movwf	tblptrl,c
  5678  004E' 0E00'              	movlw	high (_PIN_LNB_QRG1_DEF+4)
  5679  0050' 6EF7               	movwf	tblptrh,c
  5680  0052'                    	if	0	;tblptru may be non-zero
  5681  0052'                    	endif
  5682  0052'                    	if	0	;tblptru may be non-zero
  5683  0052'                    	endif
  5684  0052' 0008               	tblrd		*
  5685  0054' CFF5 F038'         	movff	tablat,??_setQRG
  5686  0058' 0E00'              	movlw	low _PIN_LNB_QRG1_DEF
  5687  005A' 6EF6               	movwf	tblptrl,c
  5688  005C'                    	if	1	;There is more than 1 active tblptr byte
  5689  005C' 0E00'              	movlw	high _PIN_LNB_QRG1_DEF
  5690  005E' 6EF7               	movwf	tblptrh,c
  5691  0060'                    	endif
  5692  0060'                    	if	0	;There are less than 3 active tblptr bytes
  5693  0060'                    	endif
  5694  0060' 0009               	tblrd		*+
  5695  0062' CFF5 F039'         	movff	tablat,??_setQRG+1
  5696  0066' 0009               	tblrd		*+
  5697  0068' CFF5 F03A'         	movff	tablat,??_setQRG+2
  5698  006C' C039' FFD9         	movff	??_setQRG+1,fsr2l
  5699  0070' C03A' FFDA         	movff	??_setQRG+2,fsr2h
  5700  0074' 50DF               	movf	indf2,w,c
  5701  0076' 1500'              	andwf	??_setQRG& (0+255),w,b
  5702  0078' 0900               	iorlw	0
  5703  007A' A4D8               	btfss	status,2,c
  5704  007C' EF00' F000'        	goto	u13041
  5705  0080' EF00' F000'        	goto	u13040
  5706  0084'                    u13041:
  5707  0084' 0E01               	movlw	1
  5708  0086' EF00' F000'        	goto	u13050
  5709  008A'                    u13040:
  5710  008A' 0E00               	movlw	0
  5711  008C'                    u13050:
  5712  008C' 1300'              	iorwf	setQRG@sw& (0+255),f,b
  5713                           
  5714                           ;src/main.c: 252:  newLO = 27 - sw;
  5715  008E' 5100'              	movf	setQRG@sw& (0+255),w,b
  5716  0090' 081B               	sublw	27
  5717  0092' 6F00'              	movwf	setQRG@newLO& (0+255),b
  5718                           
  5719                           ;src/main.c: 254:  if(newLO != currentLO)
  5720  0094' 5000'              	movf	_currentLO^0,w,c
  5721  0096' 1900'              	xorwf	setQRG@newLO& (0+255),w,b
  5722  0098' B4D8               	btfsc	status,2,c
  5723  009A' EF00' F000'        	goto	u13061
  5724  009E' EF00' F000'        	goto	u13060
  5725  00A2'                    u13061:
  5726  00A2' EF00' F000'        	goto	l1102
  5727  00A6'                    u13060:
  5728  00A6'                    
  5729                           ; BSR set to: 0
  5730                           ;src/main.c: 255:  {;src/main.c: 257:   currentLO = newLO;
  5731  00A6' C03C' F00A'        	movff	setQRG@newLO,_currentLO
  5732  00AA'                    
  5733                           ; BSR set to: 0
  5734                           ;src/main.c: 258:   si5328_set_freq(&g_i2c_bus, 0x68, currentLO);
  5735  00AA' 0E00'              	movlw	low _g_i2c_bus
  5736  00AC' 6F00'              	movwf	si5328_set_freq@i2c& (0+255),b
  5737  00AE' 0E00'              	movlw	high _g_i2c_bus
  5738  00B0' 6F00'              	movwf	(si5328_set_freq@i2c+1)& (0+255),b
  5739  00B2' 0E68               	movlw	104
  5740  00B4' 6F00'              	movwf	si5328_set_freq@addr& (0+255),b
  5741  00B6' C00A' F037'        	movff	_currentLO,si5328_set_freq@freq_MHz
  5742  00BA' EC00' F000'        	call	_si5328_set_freq	;wreg free
  5743  00BE'                    
  5744                           ;src/main.c: 261:   actualADFswitch = 0xff;
  5745  00BE' 0100               	movlb	0	; () banked
  5746  00C0' 6900'              	setf	_actualADFswitch& (0+255),b
  5747  00C2'                    l1102:
  5748                           
  5749                           ; BSR set to: 0
  5750  00C2' 0012               	return		;funcret
  5751  00C4'                    __end_of_setQRG:
  5752                           	opt callstack 0
  5753                           
  5754 ;; *************** function _si5328_set_freq *****************
  5755 ;; Defined at:
  5756 ;;		line 439 in file "src/driver/si5328.c"
  5757 ;; Parameters:    Size  Location     Type
  5758 ;;  i2c             2   52[BANK0 ] PTR struct i2c_dev__
  5759 ;;		 -> g_i2c_bus(8), 
  5760 ;;  addr            1   54[BANK0 ] unsigned char 
  5761 ;;  freq_MHz        1   55[BANK0 ] unsigned char 
  5762 ;; Auto vars:     Size  Location     Type
  5763 ;;		None
  5764 ;; Return value:  Size  Location     Type
  5765 ;;                  1    wreg      void 
  5766 ;; Registers used:
  5767 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5768 ;; Tracked objects:
  5769 ;;		On entry : 0/0
  5770 ;;		On exit  : 0/0
  5771 ;;		Unchanged: 0/0
  5772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5773 ;;      Params:         0       4       0       0       0       0       0
  5774 ;;      Locals:         0       0       0       0       0       0       0
  5775 ;;      Temps:          0       0       0       0       0       0       0
  5776 ;;      Totals:         0       4       0       0       0       0       0
  5777 ;;Total ram usage:        4 bytes
  5778 ;; Hardware stack levels used:    1
  5779 ;; Hardware stack levels required when called:   11
  5780 ;; This function calls:
  5781 ;;		_printf
  5782 ;;		_set_reg24
  5783 ;;		_set_reg25
  5784 ;;		_set_reg26
  5785 ;;		_set_reg27
  5786 ;;		_si5328_perform_ical
  5787 ;;		_write_regset
  5788 ;; This function is called by:
  5789 ;;		_setQRG
  5790 ;; This function uses a non-reentrant model
  5791 ;;
  5792                           
  5793                           	psect	text6
  5794  0000'                    __ptext6:
  5795                           	opt callstack 0
  5796  0000'                    _si5328_set_freq:
  5797                           	opt callstack 17
  5798  0000'                    
  5799                           ;src/driver/si5328.c: 439: void si5328_set_freq(i2c_dev i2c, u8 addr, u8 freq_MHz);src/d
      +                          river/si5328.c: 440: {;src/driver/si5328.c: 441:  if(freq_MHz == 24)
  5800  0000' 0E18               	movlw	24
  5801  0002' 0100               	movlb	0	; () banked
  5802  0004' 1900'              	xorwf	si5328_set_freq@freq_MHz& (0+255),w,b
  5803  0006' A4D8               	btfss	status,2,c
  5804  0008' EF00' F000'        	goto	u12311
  5805  000C' EF00' F000'        	goto	u12310
  5806  0010'                    u12311:
  5807  0010' EF00' F000'        	goto	l10031
  5808  0014'                    u12310:
  5809  0014'                    
  5810                           ; BSR set to: 0
  5811                           ;src/driver/si5328.c: 442:   set_reg24();
  5812  0014' EC00' F000'        	call	_set_reg24	;wreg free
  5813  0018'                    l10031:
  5814                           
  5815                           ;src/driver/si5328.c: 444:  if(freq_MHz == 25)
  5816  0018' 0E19               	movlw	25
  5817  001A' 0100               	movlb	0	; () banked
  5818  001C' 1900'              	xorwf	si5328_set_freq@freq_MHz& (0+255),w,b
  5819  001E' A4D8               	btfss	status,2,c
  5820  0020' EF00' F000'        	goto	u12321
  5821  0024' EF00' F000'        	goto	u12320
  5822  0028'                    u12321:
  5823  0028' EF00' F000'        	goto	l10035
  5824  002C'                    u12320:
  5825  002C'                    
  5826                           ; BSR set to: 0
  5827                           ;src/driver/si5328.c: 445:   set_reg25();
  5828  002C' EC00' F000'        	call	_set_reg25	;wreg free
  5829  0030'                    l10035:
  5830                           
  5831                           ;src/driver/si5328.c: 447:  if(freq_MHz == 26)
  5832  0030' 0E1A               	movlw	26
  5833  0032' 0100               	movlb	0	; () banked
  5834  0034' 1900'              	xorwf	si5328_set_freq@freq_MHz& (0+255),w,b
  5835  0036' A4D8               	btfss	status,2,c
  5836  0038' EF00' F000'        	goto	u12331
  5837  003C' EF00' F000'        	goto	u12330
  5838  0040'                    u12331:
  5839  0040' EF00' F000'        	goto	l10039
  5840  0044'                    u12330:
  5841  0044'                    
  5842                           ; BSR set to: 0
  5843                           ;src/driver/si5328.c: 448:   set_reg26();
  5844  0044' EC00' F000'        	call	_set_reg26	;wreg free
  5845  0048'                    l10039:
  5846                           
  5847                           ;src/driver/si5328.c: 450:  if(freq_MHz == 27)
  5848  0048' 0E1B               	movlw	27
  5849  004A' 0100               	movlb	0	; () banked
  5850  004C' 1900'              	xorwf	si5328_set_freq@freq_MHz& (0+255),w,b
  5851  004E' A4D8               	btfss	status,2,c
  5852  0050' EF00' F000'        	goto	u12341
  5853  0054' EF00' F000'        	goto	u12340
  5854  0058'                    u12341:
  5855  0058' EF00' F000'        	goto	l10043
  5856  005C'                    u12340:
  5857  005C'                    
  5858                           ; BSR set to: 0
  5859                           ;src/driver/si5328.c: 451:   set_reg27();
  5860  005C' EC00' F000'        	call	_set_reg27	;wreg free
  5861  0060'                    l10043:
  5862                           
  5863                           ;src/driver/si5328.c: 453:  write_regset(i2c, addr, reg_set_LNB_LO, (sizeof(reg_set_LNB_
      +                          LO)/sizeof(reg_set_LNB_LO[0])));
  5864  0060' C034' F02B'        	movff	si5328_set_freq@i2c,write_regset@i2c
  5865  0064' C035' F02C'        	movff	si5328_set_freq@i2c+1,write_regset@i2c+1
  5866  0068' C036' F02D'        	movff	si5328_set_freq@addr,write_regset@addr
  5867  006C' 0E00'              	movlw	low _reg_set_LNB_LO
  5868  006E' 0100               	movlb	0	; () banked
  5869  0070' 6F00'              	movwf	write_regset@set& (0+255),b
  5870  0072' 0E00'              	movlw	high _reg_set_LNB_LO
  5871  0074' 6F00'              	movwf	(write_regset@set+1)& (0+255),b
  5872  0076' 0E00               	movlw	0
  5873  0078' 6F00'              	movwf	(write_regset@len+1)& (0+255),b
  5874  007A' 0E0C               	movlw	12
  5875  007C' 6F00'              	movwf	write_regset@len& (0+255),b
  5876  007E' EC00' F000'        	call	_write_regset	;wreg free
  5877  0082'                    
  5878                           ;src/driver/si5328.c: 454:  printf("si:LNB: %d\n",freq_MHz);
  5879  0082' 0E00'              	movlw	low STR_28
  5880  0084' 0100               	movlb	0	; () banked
  5881  0086' 6F00'              	movwf	printf@fmt& (0+255),b
  5882  0088' 0E00'              	movlw	high STR_28
  5883  008A' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  5884  008C' C037' F01F'        	movff	si5328_set_freq@freq_MHz,?_printf+2
  5885  0090' 6B00'              	clrf	(?_printf+3)& (0+255),b
  5886  0092' EC00' F000'        	call	_printf	;wreg free
  5887  0096'                    
  5888                           ;src/driver/si5328.c: 455:  si5328_perform_ical(i2c, addr);
  5889  0096' C034' F02B'        	movff	si5328_set_freq@i2c,si5328_perform_ical@i2c
  5890  009A' C035' F02C'        	movff	si5328_set_freq@i2c+1,si5328_perform_ical@i2c+1
  5891  009E' C036' F02D'        	movff	si5328_set_freq@addr,si5328_perform_ical@addr
  5892  00A2' EC00' F000'        	call	_si5328_perform_ical	;wreg free
  5893  00A6' 0012               	return		;funcret
  5894  00A8'                    __end_of_si5328_set_freq:
  5895                           	opt callstack 0
  5896                           
  5897 ;; *************** function _write_regset *****************
  5898 ;; Defined at:
  5899 ;;		line 574 in file "src/driver/si5328.c"
  5900 ;; Parameters:    Size  Location     Type
  5901 ;;  i2c             2   43[BANK0 ] PTR struct i2c_dev__
  5902 ;;		 -> g_i2c_bus(8), 
  5903 ;;  addr            1   45[BANK0 ] unsigned char 
  5904 ;;  set             2   46[BANK0 ] PTR const struct .
  5905 ;;		 -> reg_set_LNB_LO(24), reg_set_univ_CKIN2_XAXB(24), reg_set_univ_CKIN1_GPS(26), 
  5906 ;;  len             2   48[BANK0 ] unsigned short 
  5907 ;; Auto vars:     Size  Location     Type
  5908 ;;  errors          2   50[BANK0 ] int 
  5909 ;; Return value:  Size  Location     Type
  5910 ;;                  1    wreg      void 
  5911 ;; Registers used:
  5912 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5913 ;; Tracked objects:
  5914 ;;		On entry : 0/0
  5915 ;;		On exit  : 0/0
  5916 ;;		Unchanged: 0/0
  5917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5918 ;;      Params:         0       7       0       0       0       0       0
  5919 ;;      Locals:         0       2       0       0       0       0       0
  5920 ;;      Temps:          2       0       0       0       0       0       0
  5921 ;;      Totals:         2       9       0       0       0       0       0
  5922 ;;Total ram usage:       11 bytes
  5923 ;; Hardware stack levels used:    1
  5924 ;; Hardware stack levels required when called:   10
  5925 ;; This function calls:
  5926 ;;		_printf
  5927 ;;		_smbus8_write_byte
  5928 ;; This function is called by:
  5929 ;;		_si5328_init
  5930 ;;		_si5328_set_freq
  5931 ;;		_si5328_checkGPS
  5932 ;; This function uses a non-reentrant model
  5933 ;;
  5934                           
  5935                           	psect	text7
  5936  0000'                    __ptext7:
  5937                           	opt callstack 0
  5938  0000'                    _write_regset:
  5939                           	opt callstack 19
  5940  0000'                    
  5941                           ;src/driver/si5328.c: 574: static void write_regset(i2c_dev i2c, u8 addr, const reg_set 
      +                          *set, u16 len);src/driver/si5328.c: 575: {;src/driver/si5328.c: 576:     int errors = 0;
  5942  0000' 0E00               	movlw	0
  5943  0002' 0100               	movlb	0	; () banked
  5944  0004' 6F00'              	movwf	(write_regset@errors+1)& (0+255),b
  5945  0006' 0E00               	movlw	0
  5946  0008' 6F00'              	movwf	write_regset@errors& (0+255),b
  5947                           
  5948                           ;src/driver/si5328.c: 578:     while(len--) {
  5949  000A' EF00' F000'        	goto	l9933
  5950  000E'                    l9927:
  5951                           
  5952                           ; BSR set to: 0
  5953                           ;src/driver/si5328.c: 579:         if (0 != smbus8_write_byte(i2c, addr, set->addr, set-
      +                          >value)) errors++;
  5954  000E' C02B' F057'        	movff	write_regset@i2c,smbus8_write_byte@dev
  5955  0012' C02C' F058'        	movff	write_regset@i2c+1,smbus8_write_byte@dev+1
  5956  0016' C02D' F059'        	movff	write_regset@addr,smbus8_write_byte@addr
  5957  001A' C02E' FFF6         	movff	write_regset@set,tblptrl
  5958  001E' C02F' FFF7         	movff	write_regset@set+1,tblptrh
  5959  0022' 6AF8               	clrf	tblptru,c
  5960  0024' 0EFF'              	movlw	(high __ramtop+-1)
  5961  0026' 64F7               	cpfsgt	tblptrh,c
  5962  0028' D003               	bra	u12207
  5963  002A' 0008               	tblrd		*
  5964  002C' 50F5               	movf	tablat,w,c
  5965  002E' D005               	bra	u12200
  5966  0030'                    u12207:
  5967  0030' CFF6 FFE9          	movff	tblptrl,fsr0l
  5968  0034' CFF7 FFEA          	movff	tblptrh,fsr0h
  5969  0038' 50EF               	movf	indf0,w,c
  5970  003A'                    u12200:
  5971  003A' 6E00'              	movwf	smbus8_write_byte@reg^0,c
  5972  003C' 0E01               	movlw	1
  5973  003E' 0100               	movlb	0	; () banked
  5974  0040' 2500'              	addwf	write_regset@set& (0+255),w,b
  5975  0042' 6E00'              	movwf	??_write_regset^0,c
  5976  0044' 0E00               	movlw	0
  5977  0046' 2100'              	addwfc	(write_regset@set+1)& (0+255),w,b
  5978  0048' 6E00'              	movwf	(??_write_regset+1)^0,c
  5979  004A' C061' FFF6         	movff	??_write_regset,tblptrl
  5980  004E' C062' FFF7         	movff	??_write_regset+1,tblptrh
  5981  0052' 6AF8               	clrf	tblptru,c
  5982  0054' 0EFF'              	movlw	(high __ramtop+-1)
  5983  0056' 64F7               	cpfsgt	tblptrh,c
  5984  0058' D003               	bra	u12217
  5985  005A' 0008               	tblrd		*
  5986  005C' 50F5               	movf	tablat,w,c
  5987  005E' D005               	bra	u12210
  5988  0060'                    u12217:
  5989  0060' CFF6 FFE9          	movff	tblptrl,fsr0l
  5990  0064' CFF7 FFEA          	movff	tblptrh,fsr0h
  5991  0068' 50EF               	movf	indf0,w,c
  5992  006A'                    u12210:
  5993  006A' 6E00'              	movwf	smbus8_write_byte@data^0,c
  5994  006C' EC00' F000'        	call	_smbus8_write_byte	;wreg free
  5995  0070' 5000'              	movf	?_smbus8_write_byte^0,w,c
  5996  0072' 1000'              	iorwf	(?_smbus8_write_byte+1)^0,w,c
  5997  0074' B4D8               	btfsc	status,2,c
  5998  0076' EF00' F000'        	goto	u12221
  5999  007A' EF00' F000'        	goto	u12220
  6000  007E'                    u12221:
  6001  007E' EF00' F000'        	goto	l9931
  6002  0082'                    u12220:
  6003  0082' 0100               	movlb	0	; () banked
  6004  0084' 4B00'              	infsnz	write_regset@errors& (0+255),f,b
  6005  0086' 2B00'              	incf	(write_regset@errors+1)& (0+255),f,b
  6006  0088'                    l9931:
  6007                           
  6008                           ;src/driver/si5328.c: 580:         set++;
  6009  0088' 0E02               	movlw	2
  6010  008A' 0100               	movlb	0	; () banked
  6011  008C' 2700'              	addwf	write_regset@set& (0+255),f,b
  6012  008E' 0E00               	movlw	0
  6013  0090' 2300'              	addwfc	(write_regset@set+1)& (0+255),f,b
  6014  0092'                    l9933:
  6015                           
  6016                           ; BSR set to: 0
  6017                           ;src/driver/si5328.c: 578:     while(len--) {
  6018  0092' 0700'              	decf	write_regset@len& (0+255),f,b
  6019  0094' A0D8               	btfss	status,0,c
  6020  0096' 0700'              	decf	(write_regset@len+1)& (0+255),f,b
  6021  0098' 2900'              	incf	write_regset@len& (0+255),w,b
  6022  009A' E106               	bnz	u12231
  6023  009C' 2900'              	incf	(write_regset@len+1)& (0+255),w,b
  6024  009E' A4D8               	btfss	status,2,c
  6025  00A0' EF00' F000'        	goto	u12231
  6026  00A4' EF00' F000'        	goto	u12230
  6027  00A8'                    u12231:
  6028  00A8' EF00' F000'        	goto	l9927
  6029  00AC'                    u12230:
  6030  00AC'                    
  6031                           ; BSR set to: 0
  6032                           ;src/driver/si5328.c: 583:   if(errors > 0)
  6033  00AC' BF00'              	btfsc	(write_regset@errors+1)& (0+255),7,b
  6034  00AE' EF00' F000'        	goto	u12241
  6035  00B2' 5100'              	movf	(write_regset@errors+1)& (0+255),w,b
  6036  00B4' E108               	bnz	u12240
  6037  00B6' 0500'              	decf	write_regset@errors& (0+255),w,b
  6038  00B8' A0D8               	btfss	status,0,c
  6039  00BA' EF00' F000'        	goto	u12241
  6040  00BE' EF00' F000'        	goto	u12240
  6041  00C2'                    u12241:
  6042  00C2' EF00' F000'        	goto	l529
  6043  00C6'                    u12240:
  6044  00C6'                    
  6045                           ; BSR set to: 0
  6046                           ;src/driver/si5328.c: 584:  {;src/driver/si5328.c: 585:   printf("si:write_regset %i err
      +                          ors.\n", errors);
  6047  00C6' 0E00'              	movlw	low STR_35
  6048  00C8' 6F00'              	movwf	printf@fmt& (0+255),b
  6049  00CA' 0E00'              	movlw	high STR_35
  6050  00CC' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  6051  00CE' C032' F01F'        	movff	write_regset@errors,?_printf+2
  6052  00D2' C033' F020'        	movff	write_regset@errors+1,?_printf+3
  6053  00D6' EC00' F000'        	call	_printf	;wreg free
  6054  00DA'                    l529:
  6055  00DA' 0012               	return		;funcret
  6056  00DC'                    __end_of_write_regset:
  6057                           	opt callstack 0
  6058                           
  6059 ;; *************** function _si5328_perform_ical *****************
  6060 ;; Defined at:
  6061 ;;		line 458 in file "src/driver/si5328.c"
  6062 ;; Parameters:    Size  Location     Type
  6063 ;;  i2c             2   43[BANK0 ] PTR struct i2c_dev__
  6064 ;;		 -> g_i2c_bus(8), 
  6065 ;;  addr            1   45[BANK0 ] unsigned char 
  6066 ;; Auto vars:     Size  Location     Type
  6067 ;;		None
  6068 ;; Return value:  Size  Location     Type
  6069 ;;                  1    wreg      void 
  6070 ;; Registers used:
  6071 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  6072 ;; Tracked objects:
  6073 ;;		On entry : 0/0
  6074 ;;		On exit  : 0/0
  6075 ;;		Unchanged: 0/0
  6076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6077 ;;      Params:         0       3       0       0       0       0       0
  6078 ;;      Locals:         0       0       0       0       0       0       0
  6079 ;;      Temps:          0       0       0       0       0       0       0
  6080 ;;      Totals:         0       3       0       0       0       0       0
  6081 ;;Total ram usage:        3 bytes
  6082 ;; Hardware stack levels used:    1
  6083 ;; Hardware stack levels required when called:   10
  6084 ;; This function calls:
  6085 ;;		_printf
  6086 ;;		_smbus8_write_byte
  6087 ;; This function is called by:
  6088 ;;		_si5328_set_freq
  6089 ;; This function uses a non-reentrant model
  6090 ;;
  6091                           
  6092                           	psect	text8
  6093  0000'                    __ptext8:
  6094                           	opt callstack 0
  6095  0000'                    _si5328_perform_ical:
  6096                           	opt callstack 17
  6097  0000'                    
  6098                           ;src/driver/si5328.c: 458: static void si5328_perform_ical(i2c_dev i2c, u8 addr);src/dri
      +                          ver/si5328.c: 459: {;src/driver/si5328.c: 460:  printf("si:ical\n");
  6099  0000' 0E00'              	movlw	low STR_29
  6100  0002' 0100               	movlb	0	; () banked
  6101  0004' 6F00'              	movwf	printf@fmt& (0+255),b
  6102  0006' 0E00'              	movlw	high STR_29
  6103  0008' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  6104  000A' EC00' F000'        	call	_printf	;wreg free
  6105  000E'                    
  6106                           ;src/driver/si5328.c: 461:  if (smbus8_write_byte(i2c, addr, 136, 0x40) != 0)
  6107  000E' C02B' F057'        	movff	si5328_perform_ical@i2c,smbus8_write_byte@dev
  6108  0012' C02C' F058'        	movff	si5328_perform_ical@i2c+1,smbus8_write_byte@dev+1
  6109  0016' C02D' F059'        	movff	si5328_perform_ical@addr,smbus8_write_byte@addr
  6110  001A' 0E88               	movlw	136
  6111  001C' 6E00'              	movwf	smbus8_write_byte@reg^0,c
  6112  001E' 0E40               	movlw	64
  6113  0020' 6E00'              	movwf	smbus8_write_byte@data^0,c
  6114  0022' EC00' F000'        	call	_smbus8_write_byte	;wreg free
  6115  0026' 5000'              	movf	?_smbus8_write_byte^0,w,c
  6116  0028' 1000'              	iorwf	(?_smbus8_write_byte+1)^0,w,c
  6117  002A' B4D8               	btfsc	status,2,c
  6118  002C' EF00' F000'        	goto	u12251
  6119  0030' EF00' F000'        	goto	u12250
  6120  0034'                    u12251:
  6121  0034' EF00' F000'        	goto	l499
  6122  0038'                    u12250:
  6123  0038'                    
  6124                           ;src/driver/si5328.c: 462:  {;src/driver/si5328.c: 463:   printf("si:I2C fail\n");
  6125  0038' 0E00'              	movlw	low STR_30
  6126  003A' 0100               	movlb	0	; () banked
  6127  003C' 6F00'              	movwf	printf@fmt& (0+255),b
  6128  003E' 0E00'              	movlw	high STR_30
  6129  0040' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  6130  0042' EC00' F000'        	call	_printf	;wreg free
  6131  0046'                    l499:
  6132  0046' 0012               	return		;funcret
  6133  0048'                    __end_of_si5328_perform_ical:
  6134                           	opt callstack 0
  6135                           
  6136 ;; *************** function _set_reg27 *****************
  6137 ;; Defined at:
  6138 ;;		line 390 in file "src/driver/si5328.c"
  6139 ;; Parameters:    Size  Location     Type
  6140 ;;		None
  6141 ;; Auto vars:     Size  Location     Type
  6142 ;;		None
  6143 ;; Return value:  Size  Location     Type
  6144 ;;                  1    wreg      void 
  6145 ;; Registers used:
  6146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6147 ;; Tracked objects:
  6148 ;;		On entry : 0/0
  6149 ;;		On exit  : 0/0
  6150 ;;		Unchanged: 0/0
  6151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6152 ;;      Params:         0       0       0       0       0       0       0
  6153 ;;      Locals:         0       0       0       0       0       0       0
  6154 ;;      Temps:          0       0       0       0       0       0       0
  6155 ;;      Totals:         0       0       0       0       0       0       0
  6156 ;;Total ram usage:        0 bytes
  6157 ;; Hardware stack levels used:    1
  6158 ;; Hardware stack levels required when called:    3
  6159 ;; This function calls:
  6160 ;;		_set_reg
  6161 ;; This function is called by:
  6162 ;;		_si5328_set_freq
  6163 ;; This function uses a non-reentrant model
  6164 ;;
  6165                           
  6166                           	psect	text9
  6167  0000'                    __ptext9:
  6168                           	opt callstack 0
  6169  0000'                    _set_reg27:
  6170                           	opt callstack 24
  6171  0000'                    
  6172                           ;src/driver/si5328.c: 392:  N31_reg4445 = 133;
  6173  0000' 0E00               	movlw	0
  6174  0002' 0100               	movlb	0	; () banked
  6175  0004' 6F00'              	movwf	(_N31_reg4445+1)& (0+255),b
  6176  0006' 0E85               	movlw	133
  6177  0008' 6F00'              	movwf	_N31_reg4445& (0+255),b
  6178                           
  6179                           ;src/driver/si5328.c: 393:  N2HS_reg40 = 8;
  6180  000A' 0E00               	movlw	0
  6181  000C' 0102               	movlb	2	; () banked
  6182  000E' 6F00'              	movwf	(_N2HS_reg40+1)& (0+255),b
  6183  0010' 0E08               	movlw	8
  6184  0012' 6F00'              	movwf	_N2HS_reg40& (0+255),b
  6185                           
  6186                           ;src/driver/si5328.c: 394:  N2L_reg4142 = 4760;
  6187  0014' 0E12               	movlw	18
  6188  0016' 0100               	movlb	0	; () banked
  6189  0018' 6F00'              	movwf	(_N2L_reg4142+1)& (0+255),b
  6190  001A' 0E98               	movlw	152
  6191  001C' 6F00'              	movwf	_N2L_reg4142& (0+255),b
  6192                           
  6193                           ;src/driver/si5328.c: 395:  N1HS_reg25 = 4;
  6194  001E' 0E00               	movlw	0
  6195  0020' 0102               	movlb	2	; () banked
  6196  0022' 6F00'              	movwf	(_N1HS_reg25+1)& (0+255),b
  6197  0024' 0E04               	movlw	4
  6198  0026' 6F00'              	movwf	_N1HS_reg25& (0+255),b
  6199                           
  6200                           ;src/driver/si5328.c: 396:  NC1_LS_reg3233 = 50;
  6201  0028' 0E00               	movlw	0
  6202  002A' 0101               	movlb	1	; () banked
  6203  002C' 6F00'              	movwf	(_NC1_LS_reg3233+1)& (0+255),b
  6204  002E' 0E32               	movlw	50
  6205  0030' 6F00'              	movwf	_NC1_LS_reg3233& (0+255),b
  6206                           
  6207                           ;src/driver/si5328.c: 397:  NC2_LS_reg3536 = 34;
  6208  0032' 0E00               	movlw	0
  6209  0034' 0102               	movlb	2	; () banked
  6210  0036' 6F00'              	movwf	(_NC2_LS_reg3536+1)& (0+255),b
  6211  0038' 0E22               	movlw	34
  6212  003A' 6F00'              	movwf	_NC2_LS_reg3536& (0+255),b
  6213  003C'                    
  6214                           ; BSR set to: 2
  6215                           ;src/driver/si5328.c: 399:  set_reg();
  6216  003C' EC00' F000'        	call	_set_reg	;wreg free
  6217  0040' 0012               	return		;funcret
  6218  0042'                    __end_of_set_reg27:
  6219                           	opt callstack 0
  6220                           
  6221 ;; *************** function _set_reg26 *****************
  6222 ;; Defined at:
  6223 ;;		line 336 in file "src/driver/si5328.c"
  6224 ;; Parameters:    Size  Location     Type
  6225 ;;		None
  6226 ;; Auto vars:     Size  Location     Type
  6227 ;;		None
  6228 ;; Return value:  Size  Location     Type
  6229 ;;                  1    wreg      void 
  6230 ;; Registers used:
  6231 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6232 ;; Tracked objects:
  6233 ;;		On entry : 0/0
  6234 ;;		On exit  : 0/0
  6235 ;;		Unchanged: 0/0
  6236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6237 ;;      Params:         0       0       0       0       0       0       0
  6238 ;;      Locals:         0       0       0       0       0       0       0
  6239 ;;      Temps:          0       0       0       0       0       0       0
  6240 ;;      Totals:         0       0       0       0       0       0       0
  6241 ;;Total ram usage:        0 bytes
  6242 ;; Hardware stack levels used:    1
  6243 ;; Hardware stack levels required when called:   10
  6244 ;; This function calls:
  6245 ;;		_printf
  6246 ;;		_set_reg
  6247 ;; This function is called by:
  6248 ;;		_si5328_set_freq
  6249 ;; This function uses a non-reentrant model
  6250 ;;
  6251                           
  6252                           	psect	text10
  6253  0000'                    __ptext10:
  6254                           	opt callstack 0
  6255  0000'                    _set_reg26:
  6256                           	opt callstack 17
  6257  0000'                    
  6258                           ;src/driver/si5328.c: 338:  if(ext10MHzReference == 0)
  6259  0000' 0100               	movlb	0	; () banked
  6260  0002' 5100'              	movf	_ext10MHzReference& (0+255),w,b
  6261  0004' A4D8               	btfss	status,2,c
  6262  0006' EF00' F000'        	goto	u12141
  6263  000A' EF00' F000'        	goto	u12140
  6264  000E'                    u12141:
  6265  000E' EF00' F000'        	goto	l9867
  6266  0012'                    u12140:
  6267  0012'                    
  6268                           ; BSR set to: 0
  6269                           ;src/driver/si5328.c: 339:   N31_reg4445 = 19;
  6270  0012' 0E00               	movlw	0
  6271  0014' 6F00'              	movwf	(_N31_reg4445+1)& (0+255),b
  6272  0016' 0E13               	movlw	19
  6273  0018' 6F00'              	movwf	_N31_reg4445& (0+255),b
  6274  001A' EF00' F000'        	goto	l9869
  6275  001E'                    l9867:
  6276                           
  6277                           ; BSR set to: 0
  6278                           ;src/driver/si5328.c: 341:   N31_reg4445 =10;
  6279  001E' 0E00               	movlw	0
  6280  0020' 6F00'              	movwf	(_N31_reg4445+1)& (0+255),b
  6281  0022' 0E0A               	movlw	10
  6282  0024' 6F00'              	movwf	_N31_reg4445& (0+255),b
  6283  0026'                    l9869:
  6284                           
  6285                           ; BSR set to: 0
  6286                           ;src/driver/si5328.c: 343:  if(ext10MHzReference == 1)
  6287  0026' 0500'              	decf	_ext10MHzReference& (0+255),w,b
  6288  0028' A4D8               	btfss	status,2,c
  6289  002A' EF00' F000'        	goto	u12151
  6290  002E' EF00' F000'        	goto	u12150
  6291  0032'                    u12151:
  6292  0032' EF00' F000'        	goto	l9877
  6293  0036'                    u12150:
  6294  0036'                    
  6295                           ; BSR set to: 0
  6296                           ;src/driver/si5328.c: 344:  {;src/driver/si5328.c: 346:   printf("si:ext. 10 MHz\n");
  6297  0036' 0E00'              	movlw	low STR_15
  6298  0038' 6F00'              	movwf	printf@fmt& (0+255),b
  6299  003A' 0E00'              	movlw	high STR_15
  6300  003C' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  6301  003E' EC00' F000'        	call	_printf	;wreg free
  6302  0042'                    
  6303                           ;src/driver/si5328.c: 347:   N2HS_reg40 = 10;
  6304  0042' 0E00               	movlw	0
  6305  0044' 0102               	movlb	2	; () banked
  6306  0046' 6F00'              	movwf	(_N2HS_reg40+1)& (0+255),b
  6307  0048' 0E0A               	movlw	10
  6308  004A' 6F00'              	movwf	_N2HS_reg40& (0+255),b
  6309  004C'                    
  6310                           ; BSR set to: 2
  6311                           ;src/driver/si5328.c: 348:   N2L_reg4142 = 528;
  6312  004C' 0E02               	movlw	2
  6313  004E' 0100               	movlb	0	; () banked
  6314  0050' 6F00'              	movwf	(_N2L_reg4142+1)& (0+255),b
  6315  0052' 0E10               	movlw	16
  6316  0054' 6F00'              	movwf	_N2L_reg4142& (0+255),b
  6317                           
  6318                           ;src/driver/si5328.c: 349:  }
  6319  0056' EF00' F000'        	goto	l9917
  6320  005A'                    l9877:
  6321                           
  6322                           ; BSR set to: 0
  6323  005A' C000' FFE8         	movff	_tcxo_no_GPS,wreg
  6324  005E' 0A01               	xorlw	1
  6325  0060' A4D8               	btfss	status,2,c
  6326  0062' EF00' F000'        	goto	u12161
  6327  0066' EF00' F000'        	goto	u12160
  6328  006A'                    u12161:
  6329  006A' EF00' F000'        	goto	l9889
  6330  006E'                    u12160:
  6331  006E'                    
  6332                           ; BSR set to: 0
  6333  006E' 5000'              	movf	_ubx_ack^0,w,c
  6334  0070' A4D8               	btfss	status,2,c
  6335  0072' EF00' F000'        	goto	u12171
  6336  0076' EF00' F000'        	goto	u12170
  6337  007A'                    u12171:
  6338  007A' EF00' F000'        	goto	l9889
  6339  007E'                    u12170:
  6340  007E'                    
  6341                           ; BSR set to: 0
  6342                           ;src/driver/si5328.c: 351:  {;src/driver/si5328.c: 353:   printf("si:TCXO 38,4 MHz\n");
  6343  007E' 0E00'              	movlw	low STR_11
  6344  0080' 6F00'              	movwf	printf@fmt& (0+255),b
  6345  0082' 0E00'              	movlw	high STR_11
  6346  0084' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  6347  0086' EC00' F000'        	call	_printf	;wreg free
  6348  008A'                    l9883:
  6349                           
  6350                           ;src/driver/si5328.c: 354:   N32_reg4748 = 24;
  6351  008A' 0E00               	movlw	0
  6352  008C' 0102               	movlb	2	; () banked
  6353  008E' 6F00'              	movwf	(_N32_reg4748+1)& (0+255),b
  6354  0090' 0E18               	movlw	24
  6355  0092' 6F00'              	movwf	_N32_reg4748& (0+255),b
  6356  0094'                    
  6357                           ; BSR set to: 2
  6358                           ;src/driver/si5328.c: 355:   N2HS_reg40 = 5;
  6359  0094' 0E00               	movlw	0
  6360  0096' 6F00'              	movwf	(_N2HS_reg40+1)& (0+255),b
  6361  0098' 0E05               	movlw	5
  6362  009A' 6F00'              	movwf	_N2HS_reg40& (0+255),b
  6363  009C'                    
  6364                           ; BSR set to: 2
  6365                           ;src/driver/si5328.c: 356:   N2L_reg4142 = 650;
  6366  009C' 0E02               	movlw	2
  6367  009E' 0100               	movlb	0	; () banked
  6368  00A0' 6F00'              	movwf	(_N2L_reg4142+1)& (0+255),b
  6369  00A2' 0E8A               	movlw	138
  6370  00A4' 6F00'              	movwf	_N2L_reg4142& (0+255),b
  6371                           
  6372                           ;src/driver/si5328.c: 357:  }
  6373  00A6' EF00' F000'        	goto	l9917
  6374  00AA'                    l9889:
  6375                           
  6376                           ; BSR set to: 0
  6377  00AA' 5000'              	movf	_ubx_ack^0,w,c
  6378  00AC' B4D8               	btfsc	status,2,c
  6379  00AE' EF00' F000'        	goto	u12181
  6380  00B2' EF00' F000'        	goto	u12180
  6381  00B6'                    u12181:
  6382  00B6' EF00' F000'        	goto	l9893
  6383  00BA'                    u12180:
  6384  00BA' EF00' F000'        	goto	l9901
  6385  00BE'                    l9893:
  6386                           
  6387                           ; BSR set to: 0
  6388                           ;src/driver/si5328.c: 359:  {;src/driver/si5328.c: 362:   printf("si:40 MHz OCXO\n");
  6389  00BE' 0E00'              	movlw	low STR_12
  6390  00C0' 6F00'              	movwf	printf@fmt& (0+255),b
  6391  00C2' 0E00'              	movlw	high STR_12
  6392  00C4' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  6393  00C6' EC00' F000'        	call	_printf	;wreg free
  6394  00CA'                    
  6395                           ;src/driver/si5328.c: 363:   N32_reg4748 = 40;
  6396  00CA' 0E00               	movlw	0
  6397  00CC' 0102               	movlb	2	; () banked
  6398  00CE' 6F00'              	movwf	(_N32_reg4748+1)& (0+255),b
  6399  00D0' 0E28               	movlw	40
  6400  00D2' 6F00'              	movwf	_N32_reg4748& (0+255),b
  6401  00D4'                    l9897:
  6402                           
  6403                           ;src/driver/si5328.c: 364:   N2HS_reg40 = 5;
  6404  00D4' 0E00               	movlw	0
  6405  00D6' 0102               	movlb	2	; () banked
  6406  00D8' 6F00'              	movwf	(_N2HS_reg40+1)& (0+255),b
  6407  00DA' 0E05               	movlw	5
  6408  00DC' 6F00'              	movwf	_N2HS_reg40& (0+255),b
  6409  00DE'                    
  6410                           ; BSR set to: 2
  6411                           ;src/driver/si5328.c: 365:   N2L_reg4142 = 1040;
  6412  00DE' 0E04               	movlw	4
  6413  00E0' 0100               	movlb	0	; () banked
  6414  00E2' 6F00'              	movwf	(_N2L_reg4142+1)& (0+255),b
  6415  00E4' 0E10               	movlw	16
  6416  00E6' 6F00'              	movwf	_N2L_reg4142& (0+255),b
  6417                           
  6418                           ;src/driver/si5328.c: 366:  }
  6419  00E8' EF00' F000'        	goto	l9917
  6420  00EC'                    l9901:
  6421                           
  6422                           ; BSR set to: 0
  6423  00EC' 5100'              	movf	_GPS_lock& (0+255),w,b
  6424  00EE' A4D8               	btfss	status,2,c
  6425  00F0' EF00' F000'        	goto	u12191
  6426  00F4' EF00' F000'        	goto	u12190
  6427  00F8'                    u12191:
  6428  00F8' EF00' F000'        	goto	l9911
  6429  00FC'                    u12190:
  6430  00FC'                    
  6431                           ; BSR set to: 0
  6432                           ;src/driver/si5328.c: 368:  {;src/driver/si5328.c: 370:   printf("si:GPS unlocked, TCXO 
      +                          38,4 MHz\n");
  6433  00FC' 0E00'              	movlw	low STR_18
  6434  00FE' 6F00'              	movwf	printf@fmt& (0+255),b
  6435  0100' 0E00'              	movlw	high STR_18
  6436  0102' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  6437  0104' EC00' F000'        	call	_printf	;wreg free
  6438  0108' EF00' F000'        	goto	l9883
  6439  010C'                    l9911:
  6440                           
  6441                           ; BSR set to: 0
  6442                           ;src/driver/si5328.c: 376:  {;src/driver/si5328.c: 378:   printf("si:GPS locked\n");
  6443  010C' 0E00'              	movlw	low STR_14
  6444  010E' 6F00'              	movwf	printf@fmt& (0+255),b
  6445  0110' 0E00'              	movlw	high STR_14
  6446  0112' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  6447  0114' EC00' F000'        	call	_printf	;wreg free
  6448  0118' EF00' F000'        	goto	l9897
  6449  011C'                    l9917:
  6450                           
  6451                           ; BSR set to: 0
  6452                           ;src/driver/si5328.c: 383:  N1HS_reg25 = 5;
  6453  011C' 0E00               	movlw	0
  6454  011E' 0102               	movlb	2	; () banked
  6455  0120' 6F00'              	movwf	(_N1HS_reg25+1)& (0+255),b
  6456  0122' 0E05               	movlw	5
  6457  0124' 6F00'              	movwf	_N1HS_reg25& (0+255),b
  6458  0126'                    
  6459                           ; BSR set to: 2
  6460                           ;src/driver/si5328.c: 384:  NC1_LS_reg3233 = 40;
  6461  0126' 0E00               	movlw	0
  6462  0128' 0101               	movlb	1	; () banked
  6463  012A' 6F00'              	movwf	(_NC1_LS_reg3233+1)& (0+255),b
  6464  012C' 0E28               	movlw	40
  6465  012E' 6F00'              	movwf	_NC1_LS_reg3233& (0+255),b
  6466  0130'                    
  6467                           ; BSR set to: 1
  6468                           ;src/driver/si5328.c: 385:  NC2_LS_reg3536 = 26;
  6469  0130' 0E00               	movlw	0
  6470  0132' 0102               	movlb	2	; () banked
  6471  0134' 6F00'              	movwf	(_NC2_LS_reg3536+1)& (0+255),b
  6472  0136' 0E1A               	movlw	26
  6473  0138' 6F00'              	movwf	_NC2_LS_reg3536& (0+255),b
  6474  013A'                    
  6475                           ; BSR set to: 2
  6476                           ;src/driver/si5328.c: 387:  set_reg();
  6477  013A' EC00' F000'        	call	_set_reg	;wreg free
  6478  013E' 0012               	return		;funcret
  6479  0140'                    __end_of_set_reg26:
  6480                           	opt callstack 0
  6481                           
  6482 ;; *************** function _set_reg25 *****************
  6483 ;; Defined at:
  6484 ;;		line 282 in file "src/driver/si5328.c"
  6485 ;; Parameters:    Size  Location     Type
  6486 ;;		None
  6487 ;; Auto vars:     Size  Location     Type
  6488 ;;		None
  6489 ;; Return value:  Size  Location     Type
  6490 ;;                  1    wreg      void 
  6491 ;; Registers used:
  6492 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6493 ;; Tracked objects:
  6494 ;;		On entry : 0/0
  6495 ;;		On exit  : 0/0
  6496 ;;		Unchanged: 0/0
  6497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6498 ;;      Params:         0       0       0       0       0       0       0
  6499 ;;      Locals:         0       0       0       0       0       0       0
  6500 ;;      Temps:          0       0       0       0       0       0       0
  6501 ;;      Totals:         0       0       0       0       0       0       0
  6502 ;;Total ram usage:        0 bytes
  6503 ;; Hardware stack levels used:    1
  6504 ;; Hardware stack levels required when called:   10
  6505 ;; This function calls:
  6506 ;;		_printf
  6507 ;;		_set_reg
  6508 ;; This function is called by:
  6509 ;;		_si5328_set_freq
  6510 ;; This function uses a non-reentrant model
  6511 ;;
  6512                           
  6513                           	psect	text11
  6514  0000'                    __ptext11:
  6515                           	opt callstack 0
  6516  0000'                    _set_reg25:
  6517                           	opt callstack 17
  6518  0000'                    
  6519                           ;src/driver/si5328.c: 284:  if(ext10MHzReference == 0)
  6520  0000' 0100               	movlb	0	; () banked
  6521  0002' 5100'              	movf	_ext10MHzReference& (0+255),w,b
  6522  0004' A4D8               	btfss	status,2,c
  6523  0006' EF00' F000'        	goto	u12081
  6524  000A' EF00' F000'        	goto	u12080
  6525  000E'                    u12081:
  6526  000E' EF00' F000'        	goto	l9805
  6527  0012'                    u12080:
  6528  0012'                    
  6529                           ; BSR set to: 0
  6530                           ;src/driver/si5328.c: 285:   N31_reg4445 = 19;
  6531  0012' 0E00               	movlw	0
  6532  0014' 6F00'              	movwf	(_N31_reg4445+1)& (0+255),b
  6533  0016' 0E13               	movlw	19
  6534  0018' 6F00'              	movwf	_N31_reg4445& (0+255),b
  6535  001A' EF00' F000'        	goto	l9807
  6536  001E'                    l9805:
  6537                           
  6538                           ; BSR set to: 0
  6539                           ;src/driver/si5328.c: 287:   N31_reg4445 =10;
  6540  001E' 0E00               	movlw	0
  6541  0020' 6F00'              	movwf	(_N31_reg4445+1)& (0+255),b
  6542  0022' 0E0A               	movlw	10
  6543  0024' 6F00'              	movwf	_N31_reg4445& (0+255),b
  6544  0026'                    l9807:
  6545                           
  6546                           ; BSR set to: 0
  6547                           ;src/driver/si5328.c: 289:  if(ext10MHzReference == 1)
  6548  0026' 0500'              	decf	_ext10MHzReference& (0+255),w,b
  6549  0028' A4D8               	btfss	status,2,c
  6550  002A' EF00' F000'        	goto	u12091
  6551  002E' EF00' F000'        	goto	u12090
  6552  0032'                    u12091:
  6553  0032' EF00' F000'        	goto	l9815
  6554  0036'                    u12090:
  6555  0036'                    
  6556                           ; BSR set to: 0
  6557                           ;src/driver/si5328.c: 290:  {;src/driver/si5328.c: 292:   printf("si:ext. 10 MHz\n");
  6558  0036' 0E00'              	movlw	low STR_15
  6559  0038' 6F00'              	movwf	printf@fmt& (0+255),b
  6560  003A' 0E00'              	movlw	high STR_15
  6561  003C' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  6562  003E' EC00' F000'        	call	_printf	;wreg free
  6563  0042'                    
  6564                           ;src/driver/si5328.c: 293:   N2HS_reg40 = 10;
  6565  0042' 0E00               	movlw	0
  6566  0044' 0102               	movlb	2	; () banked
  6567  0046' 6F00'              	movwf	(_N2HS_reg40+1)& (0+255),b
  6568  0048' 0E0A               	movlw	10
  6569  004A' 6F00'              	movwf	_N2HS_reg40& (0+255),b
  6570  004C'                    
  6571                           ; BSR set to: 2
  6572                           ;src/driver/si5328.c: 294:   N2L_reg4142 = 528;
  6573  004C' 0E02               	movlw	2
  6574  004E' 0100               	movlb	0	; () banked
  6575  0050' 6F00'              	movwf	(_N2L_reg4142+1)& (0+255),b
  6576  0052' 0E10               	movlw	16
  6577  0054' 6F00'              	movwf	_N2L_reg4142& (0+255),b
  6578                           
  6579                           ;src/driver/si5328.c: 295:  }
  6580  0056' EF00' F000'        	goto	l9855
  6581  005A'                    l9815:
  6582                           
  6583                           ; BSR set to: 0
  6584  005A' C000' FFE8         	movff	_tcxo_no_GPS,wreg
  6585  005E' 0A01               	xorlw	1
  6586  0060' A4D8               	btfss	status,2,c
  6587  0062' EF00' F000'        	goto	u12101
  6588  0066' EF00' F000'        	goto	u12100
  6589  006A'                    u12101:
  6590  006A' EF00' F000'        	goto	l9827
  6591  006E'                    u12100:
  6592  006E'                    
  6593                           ; BSR set to: 0
  6594  006E' 5000'              	movf	_ubx_ack^0,w,c
  6595  0070' A4D8               	btfss	status,2,c
  6596  0072' EF00' F000'        	goto	u12111
  6597  0076' EF00' F000'        	goto	u12110
  6598  007A'                    u12111:
  6599  007A' EF00' F000'        	goto	l9827
  6600  007E'                    u12110:
  6601  007E'                    
  6602                           ; BSR set to: 0
  6603                           ;src/driver/si5328.c: 297:  {;src/driver/si5328.c: 299:   printf("si:TCXO 38,4 MHz\n");
  6604  007E' 0E00'              	movlw	low STR_11
  6605  0080' 6F00'              	movwf	printf@fmt& (0+255),b
  6606  0082' 0E00'              	movlw	high STR_11
  6607  0084' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  6608  0086' EC00' F000'        	call	_printf	;wreg free
  6609  008A'                    l9821:
  6610                           
  6611                           ;src/driver/si5328.c: 300:   N32_reg4748 = 24;
  6612  008A' 0E00               	movlw	0
  6613  008C' 0102               	movlb	2	; () banked
  6614  008E' 6F00'              	movwf	(_N32_reg4748+1)& (0+255),b
  6615  0090' 0E18               	movlw	24
  6616  0092' 6F00'              	movwf	_N32_reg4748& (0+255),b
  6617  0094'                    
  6618                           ; BSR set to: 2
  6619                           ;src/driver/si5328.c: 301:   N2HS_reg40 = 5;
  6620  0094' 0E00               	movlw	0
  6621  0096' 6F00'              	movwf	(_N2HS_reg40+1)& (0+255),b
  6622  0098' 0E05               	movlw	5
  6623  009A' 6F00'              	movwf	_N2HS_reg40& (0+255),b
  6624  009C'                    
  6625                           ; BSR set to: 2
  6626                           ;src/driver/si5328.c: 302:   N2L_reg4142 = 700;
  6627  009C' 0E02               	movlw	2
  6628  009E' 0100               	movlb	0	; () banked
  6629  00A0' 6F00'              	movwf	(_N2L_reg4142+1)& (0+255),b
  6630  00A2' 0EBC               	movlw	188
  6631  00A4' 6F00'              	movwf	_N2L_reg4142& (0+255),b
  6632                           
  6633                           ;src/driver/si5328.c: 303:  }
  6634  00A6' EF00' F000'        	goto	l9855
  6635  00AA'                    l9827:
  6636                           
  6637                           ; BSR set to: 0
  6638  00AA' 5000'              	movf	_ubx_ack^0,w,c
  6639  00AC' B4D8               	btfsc	status,2,c
  6640  00AE' EF00' F000'        	goto	u12121
  6641  00B2' EF00' F000'        	goto	u12120
  6642  00B6'                    u12121:
  6643  00B6' EF00' F000'        	goto	l9831
  6644  00BA'                    u12120:
  6645  00BA' EF00' F000'        	goto	l9839
  6646  00BE'                    l9831:
  6647                           
  6648                           ; BSR set to: 0
  6649                           ;src/driver/si5328.c: 305:  {;src/driver/si5328.c: 308:   printf("si:40 MHz OCXO\n");
  6650  00BE' 0E00'              	movlw	low STR_12
  6651  00C0' 6F00'              	movwf	printf@fmt& (0+255),b
  6652  00C2' 0E00'              	movlw	high STR_12
  6653  00C4' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  6654  00C6' EC00' F000'        	call	_printf	;wreg free
  6655  00CA'                    
  6656                           ;src/driver/si5328.c: 309:   N32_reg4748 = 40;
  6657  00CA' 0E00               	movlw	0
  6658  00CC' 0102               	movlb	2	; () banked
  6659  00CE' 6F00'              	movwf	(_N32_reg4748+1)& (0+255),b
  6660  00D0' 0E28               	movlw	40
  6661  00D2' 6F00'              	movwf	_N32_reg4748& (0+255),b
  6662  00D4'                    l9835:
  6663                           
  6664                           ;src/driver/si5328.c: 310:   N2HS_reg40 = 5;
  6665  00D4' 0E00               	movlw	0
  6666  00D6' 0102               	movlb	2	; () banked
  6667  00D8' 6F00'              	movwf	(_N2HS_reg40+1)& (0+255),b
  6668  00DA' 0E05               	movlw	5
  6669  00DC' 6F00'              	movwf	_N2HS_reg40& (0+255),b
  6670  00DE'                    
  6671                           ; BSR set to: 2
  6672                           ;src/driver/si5328.c: 311:   N2L_reg4142 = 1120;
  6673  00DE' 0E04               	movlw	4
  6674  00E0' 0100               	movlb	0	; () banked
  6675  00E2' 6F00'              	movwf	(_N2L_reg4142+1)& (0+255),b
  6676  00E4' 0E60               	movlw	96
  6677  00E6' 6F00'              	movwf	_N2L_reg4142& (0+255),b
  6678                           
  6679                           ;src/driver/si5328.c: 312:  }
  6680  00E8' EF00' F000'        	goto	l9855
  6681  00EC'                    l9839:
  6682                           
  6683                           ; BSR set to: 0
  6684  00EC' 5100'              	movf	_GPS_lock& (0+255),w,b
  6685  00EE' A4D8               	btfss	status,2,c
  6686  00F0' EF00' F000'        	goto	u12131
  6687  00F4' EF00' F000'        	goto	u12130
  6688  00F8'                    u12131:
  6689  00F8' EF00' F000'        	goto	l9849
  6690  00FC'                    u12130:
  6691  00FC'                    
  6692                           ; BSR set to: 0
  6693                           ;src/driver/si5328.c: 314:  {;src/driver/si5328.c: 316:   printf("si:GPS unlocked, TCXO 
      +                          38,4 MHz\n");
  6694  00FC' 0E00'              	movlw	low STR_18
  6695  00FE' 6F00'              	movwf	printf@fmt& (0+255),b
  6696  0100' 0E00'              	movlw	high STR_18
  6697  0102' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  6698  0104' EC00' F000'        	call	_printf	;wreg free
  6699  0108' EF00' F000'        	goto	l9821
  6700  010C'                    l9849:
  6701                           
  6702                           ; BSR set to: 0
  6703                           ;src/driver/si5328.c: 322:  {;src/driver/si5328.c: 324:   printf("si:GPS locked\n");
  6704  010C' 0E00'              	movlw	low STR_14
  6705  010E' 6F00'              	movwf	printf@fmt& (0+255),b
  6706  0110' 0E00'              	movlw	high STR_14
  6707  0112' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  6708  0114' EC00' F000'        	call	_printf	;wreg free
  6709  0118' EF00' F000'        	goto	l9835
  6710  011C'                    l9855:
  6711                           
  6712                           ; BSR set to: 0
  6713                           ;src/driver/si5328.c: 329:  N1HS_reg25 = 7;
  6714  011C' 0E00               	movlw	0
  6715  011E' 0102               	movlb	2	; () banked
  6716  0120' 6F00'              	movwf	(_N1HS_reg25+1)& (0+255),b
  6717  0122' 0E07               	movlw	7
  6718  0124' 6F00'              	movwf	_N1HS_reg25& (0+255),b
  6719  0126'                    
  6720                           ; BSR set to: 2
  6721                           ;src/driver/si5328.c: 330:  NC1_LS_reg3233 = 32;
  6722  0126' 0E00               	movlw	0
  6723  0128' 0101               	movlb	1	; () banked
  6724  012A' 6F00'              	movwf	(_NC1_LS_reg3233+1)& (0+255),b
  6725  012C' 0E20               	movlw	32
  6726  012E' 6F00'              	movwf	_NC1_LS_reg3233& (0+255),b
  6727  0130'                    
  6728                           ; BSR set to: 1
  6729                           ;src/driver/si5328.c: 331:  NC2_LS_reg3536 = 20;
  6730  0130' 0E00               	movlw	0
  6731  0132' 0102               	movlb	2	; () banked
  6732  0134' 6F00'              	movwf	(_NC2_LS_reg3536+1)& (0+255),b
  6733  0136' 0E14               	movlw	20
  6734  0138' 6F00'              	movwf	_NC2_LS_reg3536& (0+255),b
  6735  013A'                    
  6736                           ; BSR set to: 2
  6737                           ;src/driver/si5328.c: 333:  set_reg();
  6738  013A' EC00' F000'        	call	_set_reg	;wreg free
  6739  013E' 0012               	return		;funcret
  6740  0140'                    __end_of_set_reg25:
  6741                           	opt callstack 0
  6742                           
  6743 ;; *************** function _set_reg24 *****************
  6744 ;; Defined at:
  6745 ;;		line 228 in file "src/driver/si5328.c"
  6746 ;; Parameters:    Size  Location     Type
  6747 ;;		None
  6748 ;; Auto vars:     Size  Location     Type
  6749 ;;		None
  6750 ;; Return value:  Size  Location     Type
  6751 ;;                  1    wreg      void 
  6752 ;; Registers used:
  6753 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6754 ;; Tracked objects:
  6755 ;;		On entry : 0/0
  6756 ;;		On exit  : 0/0
  6757 ;;		Unchanged: 0/0
  6758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6759 ;;      Params:         0       0       0       0       0       0       0
  6760 ;;      Locals:         0       0       0       0       0       0       0
  6761 ;;      Temps:          0       0       0       0       0       0       0
  6762 ;;      Totals:         0       0       0       0       0       0       0
  6763 ;;Total ram usage:        0 bytes
  6764 ;; Hardware stack levels used:    1
  6765 ;; Hardware stack levels required when called:   10
  6766 ;; This function calls:
  6767 ;;		_printf
  6768 ;;		_set_reg
  6769 ;; This function is called by:
  6770 ;;		_si5328_set_freq
  6771 ;; This function uses a non-reentrant model
  6772 ;;
  6773                           
  6774                           	psect	text12
  6775  0000'                    __ptext12:
  6776                           	opt callstack 0
  6777  0000'                    _set_reg24:
  6778                           	opt callstack 17
  6779  0000'                    
  6780                           ;src/driver/si5328.c: 230:  if(ext10MHzReference == 0)
  6781  0000' 0100               	movlb	0	; () banked
  6782  0002' 5100'              	movf	_ext10MHzReference& (0+255),w,b
  6783  0004' A4D8               	btfss	status,2,c
  6784  0006' EF00' F000'        	goto	u12021
  6785  000A' EF00' F000'        	goto	u12020
  6786  000E'                    u12021:
  6787  000E' EF00' F000'        	goto	l9743
  6788  0012'                    u12020:
  6789  0012'                    
  6790                           ; BSR set to: 0
  6791                           ;src/driver/si5328.c: 231:   N31_reg4445 = 19;
  6792  0012' 0E00               	movlw	0
  6793  0014' 6F00'              	movwf	(_N31_reg4445+1)& (0+255),b
  6794  0016' 0E13               	movlw	19
  6795  0018' 6F00'              	movwf	_N31_reg4445& (0+255),b
  6796  001A' EF00' F000'        	goto	l9745
  6797  001E'                    l9743:
  6798                           
  6799                           ; BSR set to: 0
  6800                           ;src/driver/si5328.c: 233:   N31_reg4445 =10;
  6801  001E' 0E00               	movlw	0
  6802  0020' 6F00'              	movwf	(_N31_reg4445+1)& (0+255),b
  6803  0022' 0E0A               	movlw	10
  6804  0024' 6F00'              	movwf	_N31_reg4445& (0+255),b
  6805  0026'                    l9745:
  6806                           
  6807                           ; BSR set to: 0
  6808                           ;src/driver/si5328.c: 235:  if(ext10MHzReference == 1)
  6809  0026' 0500'              	decf	_ext10MHzReference& (0+255),w,b
  6810  0028' A4D8               	btfss	status,2,c
  6811  002A' EF00' F000'        	goto	u12031
  6812  002E' EF00' F000'        	goto	u12030
  6813  0032'                    u12031:
  6814  0032' EF00' F000'        	goto	l9753
  6815  0036'                    u12030:
  6816  0036'                    
  6817                           ; BSR set to: 0
  6818                           ;src/driver/si5328.c: 236:  {;src/driver/si5328.c: 238:   printf("si:ext. 10 MHz ref\n")
      +                          ;
  6819  0036' 0E00'              	movlw	low STR_10
  6820  0038' 6F00'              	movwf	printf@fmt& (0+255),b
  6821  003A' 0E00'              	movlw	high STR_10
  6822  003C' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  6823  003E' EC00' F000'        	call	_printf	;wreg free
  6824  0042'                    l9749:
  6825                           
  6826                           ;src/driver/si5328.c: 239:   N2HS_reg40 = 10;
  6827  0042' 0E00               	movlw	0
  6828  0044' 0102               	movlb	2	; () banked
  6829  0046' 6F00'              	movwf	(_N2HS_reg40+1)& (0+255),b
  6830  0048' 0E0A               	movlw	10
  6831  004A' 6F00'              	movwf	_N2HS_reg40& (0+255),b
  6832  004C'                    
  6833                           ; BSR set to: 2
  6834                           ;src/driver/si5328.c: 240:   N2L_reg4142 = 528;
  6835  004C' 0E02               	movlw	2
  6836  004E' 0100               	movlb	0	; () banked
  6837  0050' 6F00'              	movwf	(_N2L_reg4142+1)& (0+255),b
  6838  0052' 0E10               	movlw	16
  6839  0054' 6F00'              	movwf	_N2L_reg4142& (0+255),b
  6840                           
  6841                           ;src/driver/si5328.c: 241:  }
  6842  0056' EF00' F000'        	goto	l9793
  6843  005A'                    l9753:
  6844                           
  6845                           ; BSR set to: 0
  6846  005A' C000' FFE8         	movff	_tcxo_no_GPS,wreg
  6847  005E' 0A01               	xorlw	1
  6848  0060' A4D8               	btfss	status,2,c
  6849  0062' EF00' F000'        	goto	u12041
  6850  0066' EF00' F000'        	goto	u12040
  6851  006A'                    u12041:
  6852  006A' EF00' F000'        	goto	l9765
  6853  006E'                    u12040:
  6854  006E'                    
  6855                           ; BSR set to: 0
  6856  006E' 5000'              	movf	_ubx_ack^0,w,c
  6857  0070' A4D8               	btfss	status,2,c
  6858  0072' EF00' F000'        	goto	u12051
  6859  0076' EF00' F000'        	goto	u12050
  6860  007A'                    u12051:
  6861  007A' EF00' F000'        	goto	l9765
  6862  007E'                    u12050:
  6863  007E'                    
  6864                           ; BSR set to: 0
  6865                           ;src/driver/si5328.c: 243:  {;src/driver/si5328.c: 245:   printf("si:TCXO 38,4 MHz\n");
  6866  007E' 0E00'              	movlw	low STR_11
  6867  0080' 6F00'              	movwf	printf@fmt& (0+255),b
  6868  0082' 0E00'              	movlw	high STR_11
  6869  0084' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  6870  0086' EC00' F000'        	call	_printf	;wreg free
  6871  008A'                    l9759:
  6872                           
  6873                           ;src/driver/si5328.c: 246:   N32_reg4748 = 20;
  6874  008A' 0E00               	movlw	0
  6875  008C' 0102               	movlb	2	; () banked
  6876  008E' 6F00'              	movwf	(_N32_reg4748+1)& (0+255),b
  6877  0090' 0E14               	movlw	20
  6878  0092' 6F00'              	movwf	_N32_reg4748& (0+255),b
  6879  0094'                    
  6880                           ; BSR set to: 2
  6881                           ;src/driver/si5328.c: 247:   N2HS_reg40 = 5;
  6882  0094' 0E00               	movlw	0
  6883  0096' 6F00'              	movwf	(_N2HS_reg40+1)& (0+255),b
  6884  0098' 0E05               	movlw	5
  6885  009A' 6F00'              	movwf	_N2HS_reg40& (0+255),b
  6886  009C'                    
  6887                           ; BSR set to: 2
  6888                           ;src/driver/si5328.c: 248:   N2L_reg4142 = 550;
  6889  009C' 0E02               	movlw	2
  6890  009E' 0100               	movlb	0	; () banked
  6891  00A0' 6F00'              	movwf	(_N2L_reg4142+1)& (0+255),b
  6892  00A2' 0E26               	movlw	38
  6893  00A4' 6F00'              	movwf	_N2L_reg4142& (0+255),b
  6894                           
  6895                           ;src/driver/si5328.c: 249:  }
  6896  00A6' EF00' F000'        	goto	l9793
  6897  00AA'                    l9765:
  6898                           
  6899                           ; BSR set to: 0
  6900  00AA' 5000'              	movf	_ubx_ack^0,w,c
  6901  00AC' B4D8               	btfsc	status,2,c
  6902  00AE' EF00' F000'        	goto	u12061
  6903  00B2' EF00' F000'        	goto	u12060
  6904  00B6'                    u12061:
  6905  00B6' EF00' F000'        	goto	l9769
  6906  00BA'                    u12060:
  6907  00BA' EF00' F000'        	goto	l9777
  6908  00BE'                    l9769:
  6909                           
  6910                           ; BSR set to: 0
  6911                           ;src/driver/si5328.c: 251:  {;src/driver/si5328.c: 254:   printf("si:40 MHz OCXO\n");
  6912  00BE' 0E00'              	movlw	low STR_12
  6913  00C0' 6F00'              	movwf	printf@fmt& (0+255),b
  6914  00C2' 0E00'              	movlw	high STR_12
  6915  00C4' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  6916  00C6' EC00' F000'        	call	_printf	;wreg free
  6917  00CA'                    
  6918                           ;src/driver/si5328.c: 255:   N32_reg4748 = 40;
  6919  00CA' 0E00               	movlw	0
  6920  00CC' 0102               	movlb	2	; () banked
  6921  00CE' 6F00'              	movwf	(_N32_reg4748+1)& (0+255),b
  6922  00D0' 0E28               	movlw	40
  6923  00D2' 6F00'              	movwf	_N32_reg4748& (0+255),b
  6924  00D4' EF00' F000'        	goto	l9749
  6925  00D8'                    l9777:
  6926                           
  6927                           ; BSR set to: 0
  6928  00D8' 5100'              	movf	_GPS_lock& (0+255),w,b
  6929  00DA' A4D8               	btfss	status,2,c
  6930  00DC' EF00' F000'        	goto	u12071
  6931  00E0' EF00' F000'        	goto	u12070
  6932  00E4'                    u12071:
  6933  00E4' EF00' F000'        	goto	l9787
  6934  00E8'                    u12070:
  6935  00E8'                    
  6936                           ; BSR set to: 0
  6937                           ;src/driver/si5328.c: 260:  {;src/driver/si5328.c: 262:   printf("si:GPS unlocked: TCXO 
      +                          38,4 MHz\n");
  6938  00E8' 0E00'              	movlw	low STR_13
  6939  00EA' 6F00'              	movwf	printf@fmt& (0+255),b
  6940  00EC' 0E00'              	movlw	high STR_13
  6941  00EE' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  6942  00F0' EC00' F000'        	call	_printf	;wreg free
  6943  00F4' EF00' F000'        	goto	l9759
  6944  00F8'                    l9787:
  6945                           
  6946                           ; BSR set to: 0
  6947                           ;src/driver/si5328.c: 268:  {;src/driver/si5328.c: 270:   printf("si:GPS locked\n");
  6948  00F8' 0E00'              	movlw	low STR_14
  6949  00FA' 6F00'              	movwf	printf@fmt& (0+255),b
  6950  00FC' 0E00'              	movlw	high STR_14
  6951  00FE' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  6952  0100' EC00' F000'        	call	_printf	;wreg free
  6953  0104' EF00' F000'        	goto	l9749
  6954  0108'                    l9793:
  6955                           
  6956                           ; BSR set to: 0
  6957                           ;src/driver/si5328.c: 275:  N1HS_reg25 = 11;
  6958  0108' 0E00               	movlw	0
  6959  010A' 0102               	movlb	2	; () banked
  6960  010C' 6F00'              	movwf	(_N1HS_reg25+1)& (0+255),b
  6961  010E' 0E0B               	movlw	11
  6962  0110' 6F00'              	movwf	_N1HS_reg25& (0+255),b
  6963  0112'                    
  6964                           ; BSR set to: 2
  6965                           ;src/driver/si5328.c: 276:  NC1_LS_reg3233 = 20;
  6966  0112' 0E00               	movlw	0
  6967  0114' 0101               	movlb	1	; () banked
  6968  0116' 6F00'              	movwf	(_NC1_LS_reg3233+1)& (0+255),b
  6969  0118' 0E14               	movlw	20
  6970  011A' 6F00'              	movwf	_NC1_LS_reg3233& (0+255),b
  6971  011C'                    
  6972                           ; BSR set to: 1
  6973                           ;src/driver/si5328.c: 277:  NC2_LS_reg3536 = 12;
  6974  011C' 0E00               	movlw	0
  6975  011E' 0102               	movlb	2	; () banked
  6976  0120' 6F00'              	movwf	(_NC2_LS_reg3536+1)& (0+255),b
  6977  0122' 0E0C               	movlw	12
  6978  0124' 6F00'              	movwf	_NC2_LS_reg3536& (0+255),b
  6979  0126'                    
  6980                           ; BSR set to: 2
  6981                           ;src/driver/si5328.c: 279:  set_reg();
  6982  0126' EC00' F000'        	call	_set_reg	;wreg free
  6983  012A' 0012               	return		;funcret
  6984  012C'                    __end_of_set_reg24:
  6985                           	opt callstack 0
  6986                           
  6987 ;; *************** function _set_reg *****************
  6988 ;; Defined at:
  6989 ;;		line 197 in file "src/driver/si5328.c"
  6990 ;; Parameters:    Size  Location     Type
  6991 ;;		None
  6992 ;; Auto vars:     Size  Location     Type
  6993 ;;  p               2   17[COMRAM] PTR unsigned char 
  6994 ;;		 -> reg_set_LNB_LO(24), 
  6995 ;;  idx             1   19[COMRAM] unsigned char 
  6996 ;; Return value:  Size  Location     Type
  6997 ;;                  1    wreg      void 
  6998 ;; Registers used:
  6999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7000 ;; Tracked objects:
  7001 ;;		On entry : 0/0
  7002 ;;		On exit  : 0/0
  7003 ;;		Unchanged: 0/0
  7004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7005 ;;      Params:         0       0       0       0       0       0       0
  7006 ;;      Locals:         3       0       0       0       0       0       0
  7007 ;;      Temps:          4       0       0       0       0       0       0
  7008 ;;      Totals:         7       0       0       0       0       0       0
  7009 ;;Total ram usage:        7 bytes
  7010 ;; Hardware stack levels used:    1
  7011 ;; Hardware stack levels required when called:    2
  7012 ;; This function calls:
  7013 ;;		Nothing
  7014 ;; This function is called by:
  7015 ;;		_set_reg24
  7016 ;;		_set_reg25
  7017 ;;		_set_reg26
  7018 ;;		_set_reg27
  7019 ;; This function uses a non-reentrant model
  7020 ;;
  7021                           
  7022                           	psect	text13
  7023  0000'                    __ptext13:
  7024                           	opt callstack 0
  7025  0000'                    _set_reg:
  7026                           	opt callstack 24
  7027  0000'                    
  7028                           ;src/driver/si5328.c: 199:  u8 idx = 1;
  7029  0000' 0E01               	movlw	1
  7030  0002' 6E00'              	movwf	set_reg@idx^0,c
  7031  0004'                    
  7032                           ;src/driver/si5328.c: 200:  u8 *p = (u8 *)reg_set_LNB_LO;
  7033  0004' 0E00'              	movlw	low _reg_set_LNB_LO
  7034  0006' 6E00'              	movwf	set_reg@p^0,c
  7035  0008' 0E00'              	movlw	high _reg_set_LNB_LO
  7036  000A' 6E00'              	movwf	(set_reg@p+1)^0,c
  7037  000C'                    
  7038                           ;src/driver/si5328.c: 202:  p[idx] = ((((N31_reg4445 - 1) >> 8)));
  7039  000C' EE20 F001          	lfsr	2,1
  7040  0010' 5000'              	movf	set_reg@p^0,w,c
  7041  0012' 26D9               	addwf	fsr2l,f,c
  7042  0014' 5000'              	movf	(set_reg@p+1)^0,w,c
  7043  0016' 22DA               	addwfc	fsr2h,f,c
  7044  0018' 0EFF               	movlw	255
  7045  001A' 6E00'              	movwf	??_set_reg^0,c
  7046  001C' 0EFF               	movlw	255
  7047  001E' 6E00'              	movwf	(??_set_reg+1)^0,c
  7048  0020' C002' F00F'        	movff	_N31_reg4445,??_set_reg+2
  7049  0024' C003' F010'        	movff	_N31_reg4445+1,??_set_reg+3
  7050  0028' 5000'              	movf	??_set_reg^0,w,c
  7051  002A' 2600'              	addwf	(??_set_reg+2)^0,f,c
  7052  002C' 5000'              	movf	(??_set_reg+1)^0,w,c
  7053  002E' 2200'              	addwfc	(??_set_reg+3)^0,f,c
  7054  0030' C010' F00F'        	movff	??_set_reg+3,??_set_reg+2
  7055  0034' 6A00'              	clrf	(??_set_reg+3)^0,c
  7056  0036' 5000'              	movf	(??_set_reg+2)^0,w,c
  7057  0038' 6EDF               	movwf	indf2,c
  7058  003A'                    
  7059                           ;src/driver/si5328.c: 203:  idx += 2;
  7060  003A' 0E02               	movlw	2
  7061  003C' 2600'              	addwf	set_reg@idx^0,f,c
  7062  003E'                    
  7063                           ;src/driver/si5328.c: 204:  p[idx] = (N31_reg4445 - 1 & 0xff);
  7064  003E' 5000'              	movf	set_reg@idx^0,w,c
  7065  0040' 2400'              	addwf	set_reg@p^0,w,c
  7066  0042' 6ED9               	movwf	fsr2l,c
  7067  0044' 0E00               	movlw	0
  7068  0046' 2000'              	addwfc	(set_reg@p+1)^0,w,c
  7069  0048' 6EDA               	movwf	fsr2h,c
  7070  004A' 0100               	movlb	0	; () banked
  7071  004C' 0500'              	decf	_N31_reg4445& (0+255),w,b
  7072  004E' 6EDF               	movwf	indf2,c
  7073  0050'                    
  7074                           ; BSR set to: 0
  7075                           ;src/driver/si5328.c: 205:  idx += 2;
  7076  0050' 0E02               	movlw	2
  7077  0052' 2600'              	addwf	set_reg@idx^0,f,c
  7078  0054'                    
  7079                           ; BSR set to: 0
  7080                           ;src/driver/si5328.c: 206:  p[idx] = ((((N32_reg4748 - 1) >> 8)));
  7081  0054' 5000'              	movf	set_reg@idx^0,w,c
  7082  0056' 2400'              	addwf	set_reg@p^0,w,c
  7083  0058' 6ED9               	movwf	fsr2l,c
  7084  005A' 0E00               	movlw	0
  7085  005C' 2000'              	addwfc	(set_reg@p+1)^0,w,c
  7086  005E' 6EDA               	movwf	fsr2h,c
  7087  0060' 0EFF               	movlw	255
  7088  0062' 6E00'              	movwf	??_set_reg^0,c
  7089  0064' 0EFF               	movlw	255
  7090  0066' 6E00'              	movwf	(??_set_reg+1)^0,c
  7091  0068' C018' F00F'        	movff	_N32_reg4748,??_set_reg+2
  7092  006C' C019' F010'        	movff	_N32_reg4748+1,??_set_reg+3
  7093  0070' 5000'              	movf	??_set_reg^0,w,c
  7094  0072' 2600'              	addwf	(??_set_reg+2)^0,f,c
  7095  0074' 5000'              	movf	(??_set_reg+1)^0,w,c
  7096  0076' 2200'              	addwfc	(??_set_reg+3)^0,f,c
  7097  0078' C010' F00F'        	movff	??_set_reg+3,??_set_reg+2
  7098  007C' 6A00'              	clrf	(??_set_reg+3)^0,c
  7099  007E' 5000'              	movf	(??_set_reg+2)^0,w,c
  7100  0080' 6EDF               	movwf	indf2,c
  7101  0082'                    
  7102                           ; BSR set to: 0
  7103                           ;src/driver/si5328.c: 207:  idx += 2;
  7104  0082' 0E02               	movlw	2
  7105  0084' 2600'              	addwf	set_reg@idx^0,f,c
  7106  0086'                    
  7107                           ; BSR set to: 0
  7108                           ;src/driver/si5328.c: 208:  p[idx] = (N32_reg4748 - 1 & 0xff);
  7109  0086' 5000'              	movf	set_reg@idx^0,w,c
  7110  0088' 2400'              	addwf	set_reg@p^0,w,c
  7111  008A' 6ED9               	movwf	fsr2l,c
  7112  008C' 0E00               	movlw	0
  7113  008E' 2000'              	addwfc	(set_reg@p+1)^0,w,c
  7114  0090' 6EDA               	movwf	fsr2h,c
  7115  0092' 0102               	movlb	2	; () banked
  7116  0094' 0500'              	decf	_N32_reg4748& (0+255),w,b
  7117  0096' 6EDF               	movwf	indf2,c
  7118  0098'                    
  7119                           ; BSR set to: 2
  7120                           ;src/driver/si5328.c: 209:  idx += 2;
  7121  0098' 0E02               	movlw	2
  7122  009A' 2600'              	addwf	set_reg@idx^0,f,c
  7123  009C'                    
  7124                           ; BSR set to: 2
  7125                           ;src/driver/si5328.c: 210:  p[idx] = ((N2HS_reg40-4)<<5);
  7126  009C' 5000'              	movf	set_reg@idx^0,w,c
  7127  009E' 2400'              	addwf	set_reg@p^0,w,c
  7128  00A0' 6ED9               	movwf	fsr2l,c
  7129  00A2' 0E00               	movlw	0
  7130  00A4' 2000'              	addwfc	(set_reg@p+1)^0,w,c
  7131  00A6' 6EDA               	movwf	fsr2h,c
  7132  00A8' 5100'              	movf	_N2HS_reg40& (0+255),w,b
  7133  00AA' 0D20               	mullw	32
  7134  00AC' 50F3               	movf	243,w,c
  7135  00AE' 0F80               	addlw	128
  7136  00B0' 6EDF               	movwf	indf2,c
  7137  00B2'                    
  7138                           ; BSR set to: 2
  7139                           ;src/driver/si5328.c: 211:  idx += 2;
  7140  00B2' 0E02               	movlw	2
  7141  00B4' 2600'              	addwf	set_reg@idx^0,f,c
  7142  00B6'                    
  7143                           ; BSR set to: 2
  7144                           ;src/driver/si5328.c: 212:  p[idx] = ((((N2L_reg4142 - 1) >> 8)));
  7145  00B6' 5000'              	movf	set_reg@idx^0,w,c
  7146  00B8' 2400'              	addwf	set_reg@p^0,w,c
  7147  00BA' 6ED9               	movwf	fsr2l,c
  7148  00BC' 0E00               	movlw	0
  7149  00BE' 2000'              	addwfc	(set_reg@p+1)^0,w,c
  7150  00C0' 6EDA               	movwf	fsr2h,c
  7151  00C2' 0EFF               	movlw	255
  7152  00C4' 6E00'              	movwf	??_set_reg^0,c
  7153  00C6' 0EFF               	movlw	255
  7154  00C8' 6E00'              	movwf	(??_set_reg+1)^0,c
  7155  00CA' C000' F00F'        	movff	_N2L_reg4142,??_set_reg+2
  7156  00CE' C001' F010'        	movff	_N2L_reg4142+1,??_set_reg+3
  7157  00D2' 5000'              	movf	??_set_reg^0,w,c
  7158  00D4' 2600'              	addwf	(??_set_reg+2)^0,f,c
  7159  00D6' 5000'              	movf	(??_set_reg+1)^0,w,c
  7160  00D8' 2200'              	addwfc	(??_set_reg+3)^0,f,c
  7161  00DA' C010' F00F'        	movff	??_set_reg+3,??_set_reg+2
  7162  00DE' 6A00'              	clrf	(??_set_reg+3)^0,c
  7163  00E0' 5000'              	movf	(??_set_reg+2)^0,w,c
  7164  00E2' 6EDF               	movwf	indf2,c
  7165  00E4'                    
  7166                           ; BSR set to: 2
  7167                           ;src/driver/si5328.c: 213:  idx += 2;
  7168  00E4' 0E02               	movlw	2
  7169  00E6' 2600'              	addwf	set_reg@idx^0,f,c
  7170  00E8'                    
  7171                           ; BSR set to: 2
  7172                           ;src/driver/si5328.c: 214:  p[idx] = (N2L_reg4142 - 1 & 0xff);
  7173  00E8' 5000'              	movf	set_reg@idx^0,w,c
  7174  00EA' 2400'              	addwf	set_reg@p^0,w,c
  7175  00EC' 6ED9               	movwf	fsr2l,c
  7176  00EE' 0E00               	movlw	0
  7177  00F0' 2000'              	addwfc	(set_reg@p+1)^0,w,c
  7178  00F2' 6EDA               	movwf	fsr2h,c
  7179  00F4' 0100               	movlb	0	; () banked
  7180  00F6' 0500'              	decf	_N2L_reg4142& (0+255),w,b
  7181  00F8' 6EDF               	movwf	indf2,c
  7182  00FA'                    
  7183                           ; BSR set to: 0
  7184                           ;src/driver/si5328.c: 215:  idx += 2;
  7185  00FA' 0E02               	movlw	2
  7186  00FC' 2600'              	addwf	set_reg@idx^0,f,c
  7187  00FE'                    
  7188                           ; BSR set to: 0
  7189                           ;src/driver/si5328.c: 216:  p[idx] = ((N1HS_reg25-4)<<5);
  7190  00FE' 5000'              	movf	set_reg@idx^0,w,c
  7191  0100' 2400'              	addwf	set_reg@p^0,w,c
  7192  0102' 6ED9               	movwf	fsr2l,c
  7193  0104' 0E00               	movlw	0
  7194  0106' 2000'              	addwfc	(set_reg@p+1)^0,w,c
  7195  0108' 6EDA               	movwf	fsr2h,c
  7196  010A' 0102               	movlb	2	; () banked
  7197  010C' 5100'              	movf	_N1HS_reg25& (0+255),w,b
  7198  010E' 0D20               	mullw	32
  7199  0110' 50F3               	movf	243,w,c
  7200  0112' 0F80               	addlw	128
  7201  0114' 6EDF               	movwf	indf2,c
  7202  0116'                    
  7203                           ; BSR set to: 2
  7204                           ;src/driver/si5328.c: 217:  idx += 2;
  7205  0116' 0E02               	movlw	2
  7206  0118' 2600'              	addwf	set_reg@idx^0,f,c
  7207  011A'                    
  7208                           ; BSR set to: 2
  7209                           ;src/driver/si5328.c: 218:  p[idx] = ((((NC1_LS_reg3233 - 1) >> 8)));
  7210  011A' 5000'              	movf	set_reg@idx^0,w,c
  7211  011C' 2400'              	addwf	set_reg@p^0,w,c
  7212  011E' 6ED9               	movwf	fsr2l,c
  7213  0120' 0E00               	movlw	0
  7214  0122' 2000'              	addwfc	(set_reg@p+1)^0,w,c
  7215  0124' 6EDA               	movwf	fsr2h,c
  7216  0126' 0EFF               	movlw	255
  7217  0128' 6E00'              	movwf	??_set_reg^0,c
  7218  012A' 0EFF               	movlw	255
  7219  012C' 6E00'              	movwf	(??_set_reg+1)^0,c
  7220  012E' C000' F00F'        	movff	_NC1_LS_reg3233,??_set_reg+2
  7221  0132' C001' F010'        	movff	_NC1_LS_reg3233+1,??_set_reg+3
  7222  0136' 5000'              	movf	??_set_reg^0,w,c
  7223  0138' 2600'              	addwf	(??_set_reg+2)^0,f,c
  7224  013A' 5000'              	movf	(??_set_reg+1)^0,w,c
  7225  013C' 2200'              	addwfc	(??_set_reg+3)^0,f,c
  7226  013E' C010' F00F'        	movff	??_set_reg+3,??_set_reg+2
  7227  0142' 6A00'              	clrf	(??_set_reg+3)^0,c
  7228  0144' 5000'              	movf	(??_set_reg+2)^0,w,c
  7229  0146' 6EDF               	movwf	indf2,c
  7230  0148'                    
  7231                           ; BSR set to: 2
  7232                           ;src/driver/si5328.c: 219:  idx += 2;
  7233  0148' 0E02               	movlw	2
  7234  014A' 2600'              	addwf	set_reg@idx^0,f,c
  7235  014C'                    
  7236                           ; BSR set to: 2
  7237                           ;src/driver/si5328.c: 220:  p[idx] = (NC1_LS_reg3233 - 1 & 0xff);
  7238  014C' 5000'              	movf	set_reg@idx^0,w,c
  7239  014E' 2400'              	addwf	set_reg@p^0,w,c
  7240  0150' 6ED9               	movwf	fsr2l,c
  7241  0152' 0E00               	movlw	0
  7242  0154' 2000'              	addwfc	(set_reg@p+1)^0,w,c
  7243  0156' 6EDA               	movwf	fsr2h,c
  7244  0158' 0101               	movlb	1	; () banked
  7245  015A' 0500'              	decf	_NC1_LS_reg3233& (0+255),w,b
  7246  015C' 6EDF               	movwf	indf2,c
  7247  015E'                    
  7248                           ; BSR set to: 1
  7249                           ;src/driver/si5328.c: 221:  idx += 2;
  7250  015E' 0E02               	movlw	2
  7251  0160' 2600'              	addwf	set_reg@idx^0,f,c
  7252  0162'                    
  7253                           ; BSR set to: 1
  7254                           ;src/driver/si5328.c: 222:  p[idx] = ((((NC2_LS_reg3536 - 1) >> 8)));
  7255  0162' 5000'              	movf	set_reg@idx^0,w,c
  7256  0164' 2400'              	addwf	set_reg@p^0,w,c
  7257  0166' 6ED9               	movwf	fsr2l,c
  7258  0168' 0E00               	movlw	0
  7259  016A' 2000'              	addwfc	(set_reg@p+1)^0,w,c
  7260  016C' 6EDA               	movwf	fsr2h,c
  7261  016E' 0EFF               	movlw	255
  7262  0170' 6E00'              	movwf	??_set_reg^0,c
  7263  0172' 0EFF               	movlw	255
  7264  0174' 6E00'              	movwf	(??_set_reg+1)^0,c
  7265  0176' C012' F00F'        	movff	_NC2_LS_reg3536,??_set_reg+2
  7266  017A' C013' F010'        	movff	_NC2_LS_reg3536+1,??_set_reg+3
  7267  017E' 5000'              	movf	??_set_reg^0,w,c
  7268  0180' 2600'              	addwf	(??_set_reg+2)^0,f,c
  7269  0182' 5000'              	movf	(??_set_reg+1)^0,w,c
  7270  0184' 2200'              	addwfc	(??_set_reg+3)^0,f,c
  7271  0186' C010' F00F'        	movff	??_set_reg+3,??_set_reg+2
  7272  018A' 6A00'              	clrf	(??_set_reg+3)^0,c
  7273  018C' 5000'              	movf	(??_set_reg+2)^0,w,c
  7274  018E' 6EDF               	movwf	indf2,c
  7275  0190'                    
  7276                           ; BSR set to: 1
  7277                           ;src/driver/si5328.c: 223:  idx += 2;
  7278  0190' 0E02               	movlw	2
  7279  0192' 2600'              	addwf	set_reg@idx^0,f,c
  7280  0194'                    
  7281                           ; BSR set to: 1
  7282                           ;src/driver/si5328.c: 224:  p[idx] = (NC2_LS_reg3536 - 1 & 0xff);
  7283  0194' 5000'              	movf	set_reg@idx^0,w,c
  7284  0196' 2400'              	addwf	set_reg@p^0,w,c
  7285  0198' 6ED9               	movwf	fsr2l,c
  7286  019A' 0E00               	movlw	0
  7287  019C' 2000'              	addwfc	(set_reg@p+1)^0,w,c
  7288  019E' 6EDA               	movwf	fsr2h,c
  7289  01A0' 0102               	movlb	2	; () banked
  7290  01A2' 0500'              	decf	_NC2_LS_reg3536& (0+255),w,b
  7291  01A4' 6EDF               	movwf	indf2,c
  7292  01A6'                    
  7293                           ; BSR set to: 2
  7294                           ;src/driver/si5328.c: 225:  idx += 2;
  7295  01A6' 0E02               	movlw	2
  7296  01A8' 2600'              	addwf	set_reg@idx^0,f,c
  7297  01AA'                    
  7298                           ; BSR set to: 2
  7299  01AA' 0012               	return		;funcret
  7300  01AC'                    __end_of_set_reg:
  7301                           	opt callstack 0
  7302                           
  7303 ;; *************** function _show_display *****************
  7304 ;; Defined at:
  7305 ;;		line 223 in file "src/driver/lcd.c"
  7306 ;; Parameters:    Size  Location     Type
  7307 ;;		None
  7308 ;; Auto vars:     Size  Location     Type
  7309 ;;  p               2   66[BANK0 ] PTR unsigned char 
  7310 ;;		 -> itoa@buffer(12), 
  7311 ;;  outqrg          2   64[BANK0 ] unsigned short 
  7312 ;;  xpos            1   63[BANK0 ] unsigned char 
  7313 ;; Return value:  Size  Location     Type
  7314 ;;                  1    wreg      void 
  7315 ;; Registers used:
  7316 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  7317 ;; Tracked objects:
  7318 ;;		On entry : 0/0
  7319 ;;		On exit  : 0/0
  7320 ;;		Unchanged: 0/0
  7321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7322 ;;      Params:         0       0       0       0       0       0       0
  7323 ;;      Locals:         0       5       0       0       0       0       0
  7324 ;;      Temps:          0       1       0       0       0       0       0
  7325 ;;      Totals:         0       6       0       0       0       0       0
  7326 ;;Total ram usage:        6 bytes
  7327 ;; Hardware stack levels used:    1
  7328 ;; Hardware stack levels required when called:   13
  7329 ;; This function calls:
  7330 ;;		_CalculateGridSquare
  7331 ;;		_itoa
  7332 ;;		_lcd_clear_screen
  7333 ;;		_memcmp
  7334 ;;		_memcpy
  7335 ;;		_print_string
  7336 ;;		_strlen
  7337 ;; This function is called by:
  7338 ;;		_main
  7339 ;; This function uses a non-reentrant model
  7340 ;;
  7341                           
  7342                           	psect	text14
  7343  0000'                    __ptext14:
  7344                           	opt callstack 0
  7345  0000'                    _show_display:
  7346                           	opt callstack 17
  7347  0000'                    
  7348                           ;src/driver/lcd.c: 227:  static u8 old_GPS_lock = 0xff;;src/driver/lcd.c: 228:  static u
      +                          8 old_GPS_fix = 0xff;;src/driver/lcd.c: 229:  static u8 old_ubx_ack = 0xff;;src/driver/l
      +                          cd.c: 230:  static u16 old_outqrg = 0;;src/driver/lcd.c: 231:  static u8 old_lnbqrg = 0x
      +                          ff;;src/driver/lcd.c: 232:  static u8 old_GPS_sat = 0xff;;src/driver/lcd.c: 233:  static
      +                           char old_GPS_lat[15] = {"             "};;src/driver/lcd.c: 234:  static char old_GPS_l
      +                          on[15] = {"             "};;src/driver/lcd.c: 235:  static char old_GPS_time[9] = {"x"};
  7349  0000' 0E02               	movlw	2
  7350  0002' 0100               	movlb	0	; () banked
  7351  0004' 1900'              	xorwf	_booting& (0+255),w,b
  7352  0006' A4D8               	btfss	status,2,c
  7353  0008' EF00' F000'        	goto	u13431
  7354  000C' EF00' F000'        	goto	u13430
  7355  0010'                    u13431:
  7356  0010' EF00' F000'        	goto	l683
  7357  0014'                    u13430:
  7358  0014'                    
  7359                           ; BSR set to: 0
  7360  0014' 5100'              	movf	_adf4351_lockstat& (0+255),w,b
  7361  0016' B4D8               	btfsc	status,2,c
  7362  0018' EF00' F000'        	goto	u13441
  7363  001C' EF00' F000'        	goto	u13440
  7364  0020'                    u13441:
  7365  0020' EF00' F000'        	goto	l10843
  7366  0024'                    u13440:
  7367  0024'                    
  7368                           ; BSR set to: 0
  7369  0024' 5100'              	movf	_si5328locked& (0+255),w,b
  7370  0026' B4D8               	btfsc	status,2,c
  7371  0028' EF00' F000'        	goto	u13451
  7372  002C' EF00' F000'        	goto	u13450
  7373  0030'                    u13451:
  7374  0030' EF00' F000'        	goto	l10843
  7375  0034'                    u13450:
  7376  0034'                    
  7377                           ; BSR set to: 0
  7378  0034' 5100'              	movf	_LNB_laststat& (0+255),w,b
  7379  0036' A4D8               	btfss	status,2,c
  7380  0038' EF00' F000'        	goto	u13461
  7381  003C' EF00' F000'        	goto	u13460
  7382  0040'                    u13461:
  7383  0040' EF00' F000'        	goto	l683
  7384  0044'                    u13460:
  7385  0044'                    l10843:
  7386                           
  7387                           ; BSR set to: 0
  7388                           ;src/driver/lcd.c: 242:   booting = 0;
  7389  0044' 0E00               	movlw	0
  7390  0046' 6F00'              	movwf	_booting& (0+255),b
  7391  0048'                    l683:
  7392                           
  7393                           ; BSR set to: 0
  7394                           ;src/driver/lcd.c: 244:  if(booting == 0)
  7395  0048' 5100'              	movf	_booting& (0+255),w,b
  7396  004A' A4D8               	btfss	status,2,c
  7397  004C' EF00' F000'        	goto	u13471
  7398  0050' EF00' F000'        	goto	u13470
  7399  0054'                    u13471:
  7400  0054' EF00' F000'        	goto	l10871
  7401  0058'                    u13470:
  7402  0058'                    
  7403                           ; BSR set to: 0
  7404                           ;src/driver/lcd.c: 245:  {;src/driver/lcd.c: 247:   lcd_clear_screen(1);
  7405  0058' 0E01               	movlw	1
  7406  005A' EC00' F000'        	call	_lcd_clear_screen
  7407  005E'                    
  7408                           ;src/driver/lcd.c: 248:   print_string("Firmware:       ",0,1,0);
  7409  005E' 0E00'              	movlw	low STR_41
  7410  0060' 0100               	movlb	0	; () banked
  7411  0062' 6F00'              	movwf	print_string@s& (0+255),b
  7412  0064' 0E00'              	movlw	high STR_41
  7413  0066' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  7414  0068' 0E00               	movlw	0
  7415  006A' 6F00'              	movwf	print_string@x& (0+255),b
  7416  006C' 0E01               	movlw	1
  7417  006E' 6F00'              	movwf	print_string@y& (0+255),b
  7418  0070' 0E00               	movlw	0
  7419  0072' 6F00'              	movwf	print_string@underline& (0+255),b
  7420  0074' EC00' F000'        	call	_print_string	;wreg free
  7421  0078'                    
  7422                           ;src/driver/lcd.c: 249:   print_string("1.0",10*8,1,0);
  7423  0078' 0E00'              	movlw	low STR_42
  7424  007A' 0100               	movlb	0	; () banked
  7425  007C' 6F00'              	movwf	print_string@s& (0+255),b
  7426  007E' 0E00'              	movlw	high STR_42
  7427  0080' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  7428  0082' 0E50               	movlw	80
  7429  0084' 6F00'              	movwf	print_string@x& (0+255),b
  7430  0086' 0E01               	movlw	1
  7431  0088' 6F00'              	movwf	print_string@y& (0+255),b
  7432  008A' 0E00               	movlw	0
  7433  008C' 6F00'              	movwf	print_string@underline& (0+255),b
  7434  008E' EC00' F000'        	call	_print_string	;wreg free
  7435  0092'                    
  7436                           ;src/driver/lcd.c: 250:   print_string("System SETUP ...",0,2,0);
  7437  0092' 0E00'              	movlw	low STR_43
  7438  0094' 0100               	movlb	0	; () banked
  7439  0096' 6F00'              	movwf	print_string@s& (0+255),b
  7440  0098' 0E00'              	movlw	high STR_43
  7441  009A' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  7442  009C' 0E00               	movlw	0
  7443  009E' 6F00'              	movwf	print_string@x& (0+255),b
  7444  00A0' 0E02               	movlw	2
  7445  00A2' 6F00'              	movwf	print_string@y& (0+255),b
  7446  00A4' 0E00               	movlw	0
  7447  00A6' 6F00'              	movwf	print_string@underline& (0+255),b
  7448  00A8' EC00' F000'        	call	_print_string	;wreg free
  7449  00AC'                    
  7450                           ;src/driver/lcd.c: 251:   if(special_cfg != 0 && special_cfg != 255)
  7451  00AC' EE20' F000'        	lfsr	2,_special_cfg
  7452  00B0' 50DF               	movf	indf2,w,c
  7453  00B2' B4D8               	btfsc	status,2,c
  7454  00B4' EF00' F000'        	goto	u13481
  7455  00B8' EF00' F000'        	goto	u13480
  7456  00BC'                    u13481:
  7457  00BC' EF00' F000'        	goto	l10859
  7458  00C0'                    u13480:
  7459  00C0' C000' FFE8         	movff	_special_cfg,wreg
  7460  00C4' 0AFF               	xorlw	255
  7461  00C6' B4D8               	btfsc	status,2,c
  7462  00C8' EF00' F000'        	goto	u13491
  7463  00CC' EF00' F000'        	goto	u13490
  7464  00D0'                    u13491:
  7465  00D0' EF00' F000'        	goto	l10859
  7466  00D4'                    u13490:
  7467  00D4'                    
  7468                           ;src/driver/lcd.c: 252:   {;src/driver/lcd.c: 253:    print_string("mode:           ",0,
      +                          3,0);
  7469  00D4' 0E00'              	movlw	low STR_44
  7470  00D6' 0100               	movlb	0	; () banked
  7471  00D8' 6F00'              	movwf	print_string@s& (0+255),b
  7472  00DA' 0E00'              	movlw	high STR_44
  7473  00DC' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  7474  00DE' 0E00               	movlw	0
  7475  00E0' 6F00'              	movwf	print_string@x& (0+255),b
  7476  00E2' 0E03               	movlw	3
  7477  00E4' 6F00'              	movwf	print_string@y& (0+255),b
  7478  00E6' 0E00               	movlw	0
  7479  00E8' 6F00'              	movwf	print_string@underline& (0+255),b
  7480  00EA' EC00' F000'        	call	_print_string	;wreg free
  7481                           
  7482                           ;src/driver/lcd.c: 254:    print_string(itoa(special_cfg),8*6,3,0);
  7483  00EE' C000' F03E'        	movff	_special_cfg,??_show_display
  7484  00F2' 0100               	movlb	0	; () banked
  7485  00F4' 5100'              	movf	??_show_display& (0+255),w,b
  7486  00F6' 6E00'              	movwf	itoa@value^0,c
  7487  00F8' 6A00'              	clrf	(itoa@value+1)^0,c
  7488  00FA' EC00' F000'        	call	_itoa	;wreg free
  7489  00FE' C019' F037'        	movff	?_itoa,print_string@s
  7490  0102' C01A' F038'        	movff	?_itoa+1,print_string@s+1
  7491  0106' 0E30               	movlw	48
  7492  0108' 0100               	movlb	0	; () banked
  7493  010A' 6F00'              	movwf	print_string@x& (0+255),b
  7494  010C' 0E03               	movlw	3
  7495  010E' 6F00'              	movwf	print_string@y& (0+255),b
  7496  0110' 0E00               	movlw	0
  7497  0112' 6F00'              	movwf	print_string@underline& (0+255),b
  7498  0114' EC00' F000'        	call	_print_string	;wreg free
  7499                           
  7500                           ;src/driver/lcd.c: 255:   }
  7501  0118' EF00' F000'        	goto	l688
  7502  011C'                    l10859:
  7503                           
  7504                           ;src/driver/lcd.c: 257:    print_string("normal mode     ",0,3,0);
  7505  011C' 0E00'              	movlw	low STR_45
  7506  011E' 0100               	movlb	0	; () banked
  7507  0120' 6F00'              	movwf	print_string@s& (0+255),b
  7508  0122' 0E00'              	movlw	high STR_45
  7509  0124' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  7510  0126' 0E00               	movlw	0
  7511  0128' 6F00'              	movwf	print_string@x& (0+255),b
  7512  012A' 0E03               	movlw	3
  7513  012C' 6F00'              	movwf	print_string@y& (0+255),b
  7514  012E' 0E00               	movlw	0
  7515  0130' 6F00'              	movwf	print_string@underline& (0+255),b
  7516  0132' EC00' F000'        	call	_print_string	;wreg free
  7517  0136'                    l688:
  7518                           
  7519                           ;src/driver/lcd.c: 258:   print_string("LNB-power:      ",0,4,0);
  7520  0136' 0E00'              	movlw	low STR_46
  7521  0138' 0100               	movlb	0	; () banked
  7522  013A' 6F00'              	movwf	print_string@s& (0+255),b
  7523  013C' 0E00'              	movlw	high STR_46
  7524  013E' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  7525  0140' 0E00               	movlw	0
  7526  0142' 6F00'              	movwf	print_string@x& (0+255),b
  7527  0144' 0E04               	movlw	4
  7528  0146' 6F00'              	movwf	print_string@y& (0+255),b
  7529  0148' 0E00               	movlw	0
  7530  014A' 6F00'              	movwf	print_string@underline& (0+255),b
  7531  014C' EC00' F000'        	call	_print_string	;wreg free
  7532                           
  7533                           ;src/driver/lcd.c: 259:   print_string("Sysclock :      ",0,5,0);
  7534  0150' 0E00'              	movlw	low STR_47
  7535  0152' 0100               	movlb	0	; () banked
  7536  0154' 6F00'              	movwf	print_string@s& (0+255),b
  7537  0156' 0E00'              	movlw	high STR_47
  7538  0158' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  7539  015A' 0E00               	movlw	0
  7540  015C' 6F00'              	movwf	print_string@x& (0+255),b
  7541  015E' 0E05               	movlw	5
  7542  0160' 6F00'              	movwf	print_string@y& (0+255),b
  7543  0162' 0E00               	movlw	0
  7544  0164' 6F00'              	movwf	print_string@underline& (0+255),b
  7545  0166' EC00' F000'        	call	_print_string	;wreg free
  7546                           
  7547                           ;src/driver/lcd.c: 260:   print_string("Downmixer:      ",0,6,0);
  7548  016A' 0E00'              	movlw	low STR_48
  7549  016C' 0100               	movlb	0	; () banked
  7550  016E' 6F00'              	movwf	print_string@s& (0+255),b
  7551  0170' 0E00'              	movlw	high STR_48
  7552  0172' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  7553  0174' 0E00               	movlw	0
  7554  0176' 6F00'              	movwf	print_string@x& (0+255),b
  7555  0178' 0E06               	movlw	6
  7556  017A' 6F00'              	movwf	print_string@y& (0+255),b
  7557  017C' 0E00               	movlw	0
  7558  017E' 6F00'              	movwf	print_string@underline& (0+255),b
  7559  0180' EC00' F000'        	call	_print_string	;wreg free
  7560  0184'                    
  7561                           ;src/driver/lcd.c: 261:   booting = 1;
  7562  0184' 0E01               	movlw	1
  7563  0186' 0100               	movlb	0	; () banked
  7564  0188' 6F00'              	movwf	_booting& (0+255),b
  7565  018A'                    
  7566                           ; BSR set to: 0
  7567                           ;src/driver/lcd.c: 262:   old_LNB_laststat = 255;
  7568  018A' 6900'              	setf	show_display@old_LNB_laststat& (0+255),b
  7569  018C'                    
  7570                           ; BSR set to: 0
  7571                           ;src/driver/lcd.c: 263:   old_si5328locked = 255;
  7572  018C' 6900'              	setf	show_display@old_si5328locked& (0+255),b
  7573  018E'                    
  7574                           ; BSR set to: 0
  7575                           ;src/driver/lcd.c: 264:   old_adf4351_lockstat = 255;
  7576  018E' 6900'              	setf	show_display@old_adf4351_lockstat& (0+255),b
  7577  0190' EF00' F000'        	goto	l689
  7578  0194'                    l10871:
  7579                           
  7580                           ; BSR set to: 0
  7581                           ;src/driver/lcd.c: 268:  if(booting == 1 && (!adf4351_lockstat || !si5328locked || !LNB_
      +                          laststat))
  7582  0194' 0500'              	decf	_booting& (0+255),w,b
  7583  0196' A4D8               	btfss	status,2,c
  7584  0198' EF00' F000'        	goto	u13501
  7585  019C' EF00' F000'        	goto	u13500
  7586  01A0'                    u13501:
  7587  01A0' EF00' F000'        	goto	l10927
  7588  01A4'                    u13500:
  7589  01A4'                    
  7590                           ; BSR set to: 0
  7591  01A4' 5100'              	movf	_adf4351_lockstat& (0+255),w,b
  7592  01A6' B4D8               	btfsc	status,2,c
  7593  01A8' EF00' F000'        	goto	u13511
  7594  01AC' EF00' F000'        	goto	u13510
  7595  01B0'                    u13511:
  7596  01B0' EF00' F000'        	goto	l10879
  7597  01B4'                    u13510:
  7598  01B4'                    
  7599                           ; BSR set to: 0
  7600  01B4' 5100'              	movf	_si5328locked& (0+255),w,b
  7601  01B6' B4D8               	btfsc	status,2,c
  7602  01B8' EF00' F000'        	goto	u13521
  7603  01BC' EF00' F000'        	goto	u13520
  7604  01C0'                    u13521:
  7605  01C0' EF00' F000'        	goto	l10879
  7606  01C4'                    u13520:
  7607  01C4'                    
  7608                           ; BSR set to: 0
  7609  01C4' 5100'              	movf	_LNB_laststat& (0+255),w,b
  7610  01C6' A4D8               	btfss	status,2,c
  7611  01C8' EF00' F000'        	goto	u13531
  7612  01CC' EF00' F000'        	goto	u13530
  7613  01D0'                    u13531:
  7614  01D0' EF00' F000'        	goto	l10927
  7615  01D4'                    u13530:
  7616  01D4'                    l10879:
  7617                           
  7618                           ; BSR set to: 0
  7619                           ;src/driver/lcd.c: 269:  {;src/driver/lcd.c: 271:   if(LNB_laststat != old_LNB_laststat)
  7620  01D4' 5100'              	movf	show_display@old_LNB_laststat& (0+255),w,b
  7621  01D6' 1900'              	xorwf	_LNB_laststat& (0+255),w,b
  7622  01D8' B4D8               	btfsc	status,2,c
  7623  01DA' EF00' F000'        	goto	u13541
  7624  01DE' EF00' F000'        	goto	u13540
  7625  01E2'                    u13541:
  7626  01E2' EF00' F000'        	goto	l10889
  7627  01E6'                    u13540:
  7628  01E6'                    
  7629                           ; BSR set to: 0
  7630                           ;src/driver/lcd.c: 272:   {;src/driver/lcd.c: 273:    if(LNB_laststat)
  7631  01E6' 5100'              	movf	_LNB_laststat& (0+255),w,b
  7632  01E8' B4D8               	btfsc	status,2,c
  7633  01EA' EF00' F000'        	goto	u13551
  7634  01EE' EF00' F000'        	goto	u13550
  7635  01F2'                    u13551:
  7636  01F2' EF00' F000'        	goto	l10885
  7637  01F6'                    u13550:
  7638  01F6'                    
  7639                           ; BSR set to: 0
  7640                           ;src/driver/lcd.c: 274:     print_string("OK",11*8,4,0);
  7641  01F6' 0E00'              	movlw	low (STR_86+9)
  7642  01F8' 6F00'              	movwf	print_string@s& (0+255),b
  7643  01FA' 0E00'              	movlw	high (STR_86+9)
  7644  01FC' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  7645  01FE' 0E58               	movlw	88
  7646  0200' 6F00'              	movwf	print_string@x& (0+255),b
  7647  0202' 0E04               	movlw	4
  7648  0204' 6F00'              	movwf	print_string@y& (0+255),b
  7649  0206' 0E00               	movlw	0
  7650  0208' 6F00'              	movwf	print_string@underline& (0+255),b
  7651  020A' EC00' F000'        	call	_print_string	;wreg free
  7652  020E' EF00' F000'        	goto	l10887
  7653  0212'                    l10885:
  7654                           
  7655                           ; BSR set to: 0
  7656                           ;src/driver/lcd.c: 276:     print_string(itoa(LNB_error),11*8,4,0);
  7657  0212' C00D' F019'        	movff	_LNB_error,itoa@value
  7658  0216' 6A00'              	clrf	(itoa@value+1)^0,c
  7659  0218' EC00' F000'        	call	_itoa	;wreg free
  7660  021C' C019' F037'        	movff	?_itoa,print_string@s
  7661  0220' C01A' F038'        	movff	?_itoa+1,print_string@s+1
  7662  0224' 0E58               	movlw	88
  7663  0226' 0100               	movlb	0	; () banked
  7664  0228' 6F00'              	movwf	print_string@x& (0+255),b
  7665  022A' 0E04               	movlw	4
  7666  022C' 6F00'              	movwf	print_string@y& (0+255),b
  7667  022E' 0E00               	movlw	0
  7668  0230' 6F00'              	movwf	print_string@underline& (0+255),b
  7669  0232' EC00' F000'        	call	_print_string	;wreg free
  7670  0236'                    l10887:
  7671                           
  7672                           ;src/driver/lcd.c: 278:    old_LNB_laststat = LNB_laststat;
  7673  0236' C00F' F006'        	movff	_LNB_laststat,show_display@old_LNB_laststat
  7674  023A'                    l10889:
  7675                           
  7676                           ;src/driver/lcd.c: 281:   if(si5328locked != old_si5328locked)
  7677  023A' 0100               	movlb	0	; () banked
  7678  023C' 5100'              	movf	show_display@old_si5328locked& (0+255),w,b
  7679  023E' 1900'              	xorwf	_si5328locked& (0+255),w,b
  7680  0240' B4D8               	btfsc	status,2,c
  7681  0242' EF00' F000'        	goto	u13561
  7682  0246' EF00' F000'        	goto	u13560
  7683  024A'                    u13561:
  7684  024A' EF00' F000'        	goto	l10899
  7685  024E'                    u13560:
  7686  024E'                    
  7687                           ; BSR set to: 0
  7688                           ;src/driver/lcd.c: 282:   {;src/driver/lcd.c: 283:    if(si5328locked) print_string("LOC
      +                          K",11*8,5,0); else print_string("wait",11*8,5,0);
  7689  024E' 5100'              	movf	_si5328locked& (0+255),w,b
  7690  0250' B4D8               	btfsc	status,2,c
  7691  0252' EF00' F000'        	goto	u13571
  7692  0256' EF00' F000'        	goto	u13570
  7693  025A'                    u13571:
  7694  025A' EF00' F000'        	goto	l10895
  7695  025E'                    u13570:
  7696  025E'                    
  7697                           ; BSR set to: 0
  7698  025E' 0E00'              	movlw	low STR_50
  7699  0260' 6F00'              	movwf	print_string@s& (0+255),b
  7700  0262' 0E00'              	movlw	high STR_50
  7701  0264' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  7702  0266' 0E58               	movlw	88
  7703  0268' 6F00'              	movwf	print_string@x& (0+255),b
  7704  026A' 0E05               	movlw	5
  7705  026C' 6F00'              	movwf	print_string@y& (0+255),b
  7706  026E' 0E00               	movlw	0
  7707  0270' 6F00'              	movwf	print_string@underline& (0+255),b
  7708  0272' EC00' F000'        	call	_print_string	;wreg free
  7709  0276' EF00' F000'        	goto	l10897
  7710  027A'                    l10895:
  7711                           
  7712                           ; BSR set to: 0
  7713  027A' 0E00'              	movlw	low STR_51
  7714  027C' 6F00'              	movwf	print_string@s& (0+255),b
  7715  027E' 0E00'              	movlw	high STR_51
  7716  0280' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  7717  0282' 0E58               	movlw	88
  7718  0284' 6F00'              	movwf	print_string@x& (0+255),b
  7719  0286' 0E05               	movlw	5
  7720  0288' 6F00'              	movwf	print_string@y& (0+255),b
  7721  028A' 0E00               	movlw	0
  7722  028C' 6F00'              	movwf	print_string@underline& (0+255),b
  7723  028E' EC00' F000'        	call	_print_string	;wreg free
  7724  0292'                    l10897:
  7725                           
  7726                           ;src/driver/lcd.c: 284:    old_si5328locked = si5328locked;
  7727  0292' C008' F005'        	movff	_si5328locked,show_display@old_si5328locked
  7728  0296'                    l10899:
  7729                           
  7730                           ;src/driver/lcd.c: 287:   if(adf4351_lockstat != old_adf4351_lockstat)
  7731  0296' 0100               	movlb	0	; () banked
  7732  0298' 5100'              	movf	show_display@old_adf4351_lockstat& (0+255),w,b
  7733  029A' 1900'              	xorwf	_adf4351_lockstat& (0+255),w,b
  7734  029C' B4D8               	btfsc	status,2,c
  7735  029E' EF00' F000'        	goto	u13581
  7736  02A2' EF00' F000'        	goto	u13580
  7737  02A6'                    u13581:
  7738  02A6' EF00' F000'        	goto	l10909
  7739  02AA'                    u13580:
  7740  02AA'                    
  7741                           ; BSR set to: 0
  7742                           ;src/driver/lcd.c: 288:   {;src/driver/lcd.c: 289:    if(adf4351_lockstat) print_string(
      +                          "LOCK",11*8,6,0); else print_string("wait",11*8,6,0);
  7743  02AA' 5100'              	movf	_adf4351_lockstat& (0+255),w,b
  7744  02AC' B4D8               	btfsc	status,2,c
  7745  02AE' EF00' F000'        	goto	u13591
  7746  02B2' EF00' F000'        	goto	u13590
  7747  02B6'                    u13591:
  7748  02B6' EF00' F000'        	goto	l10905
  7749  02BA'                    u13590:
  7750  02BA'                    
  7751                           ; BSR set to: 0
  7752  02BA' 0E00'              	movlw	low STR_50
  7753  02BC' 6F00'              	movwf	print_string@s& (0+255),b
  7754  02BE' 0E00'              	movlw	high STR_50
  7755  02C0' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  7756  02C2' 0E58               	movlw	88
  7757  02C4' 6F00'              	movwf	print_string@x& (0+255),b
  7758  02C6' 0E06               	movlw	6
  7759  02C8' 6F00'              	movwf	print_string@y& (0+255),b
  7760  02CA' 0E00               	movlw	0
  7761  02CC' 6F00'              	movwf	print_string@underline& (0+255),b
  7762  02CE' EC00' F000'        	call	_print_string	;wreg free
  7763  02D2' EF00' F000'        	goto	l10907
  7764  02D6'                    l10905:
  7765                           
  7766                           ; BSR set to: 0
  7767  02D6' 0E00'              	movlw	low STR_51
  7768  02D8' 6F00'              	movwf	print_string@s& (0+255),b
  7769  02DA' 0E00'              	movlw	high STR_51
  7770  02DC' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  7771  02DE' 0E58               	movlw	88
  7772  02E0' 6F00'              	movwf	print_string@x& (0+255),b
  7773  02E2' 0E06               	movlw	6
  7774  02E4' 6F00'              	movwf	print_string@y& (0+255),b
  7775  02E6' 0E00               	movlw	0
  7776  02E8' 6F00'              	movwf	print_string@underline& (0+255),b
  7777  02EA' EC00' F000'        	call	_print_string	;wreg free
  7778  02EE'                    l10907:
  7779                           
  7780                           ;src/driver/lcd.c: 290:    old_adf4351_lockstat = adf4351_lockstat;
  7781  02EE' C00A' F004'        	movff	_adf4351_lockstat,show_display@old_adf4351_lockstat
  7782  02F2'                    l10909:
  7783                           
  7784                           ;src/driver/lcd.c: 293:   if(ubx_ack && old_GPS_sat != GPS_sat)
  7785  02F2' 5000'              	movf	_ubx_ack^0,w,c
  7786  02F4' B4D8               	btfsc	status,2,c
  7787  02F6' EF00' F000'        	goto	u13601
  7788  02FA' EF00' F000'        	goto	u13600
  7789  02FE'                    u13601:
  7790  02FE' EF00' F000'        	goto	l689
  7791  0302'                    u13600:
  7792  0302' 0100               	movlb	0	; () banked
  7793  0304' 5100'              	movf	_GPS_sat& (0+255),w,b
  7794  0306' 1900'              	xorwf	show_display@old_GPS_sat& (0+255),w,b
  7795  0308' B4D8               	btfsc	status,2,c
  7796  030A' EF00' F000'        	goto	u13611
  7797  030E' EF00' F000'        	goto	u13610
  7798  0312'                    u13611:
  7799  0312' EF00' F000'        	goto	l689
  7800  0316'                    u13610:
  7801  0316'                    
  7802                           ; BSR set to: 0
  7803                           ;src/driver/lcd.c: 294:   {;src/driver/lcd.c: 295:    print_string("GPS SATs:       ",0,
      +                          7,0);
  7804  0316' 0E00'              	movlw	low STR_54
  7805  0318' 6F00'              	movwf	print_string@s& (0+255),b
  7806  031A' 0E00'              	movlw	high STR_54
  7807  031C' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  7808  031E' 0E00               	movlw	0
  7809  0320' 6F00'              	movwf	print_string@x& (0+255),b
  7810  0322' 0E07               	movlw	7
  7811  0324' 6F00'              	movwf	print_string@y& (0+255),b
  7812  0326' 0E00               	movlw	0
  7813  0328' 6F00'              	movwf	print_string@underline& (0+255),b
  7814  032A' EC00' F000'        	call	_print_string	;wreg free
  7815                           
  7816                           ;src/driver/lcd.c: 296:    print_string(itoa(GPS_sat),9*8,7,0);
  7817  032E' C005' F019'        	movff	_GPS_sat,itoa@value
  7818  0332' 6A00'              	clrf	(itoa@value+1)^0,c
  7819  0334' EC00' F000'        	call	_itoa	;wreg free
  7820  0338' C019' F037'        	movff	?_itoa,print_string@s
  7821  033C' C01A' F038'        	movff	?_itoa+1,print_string@s+1
  7822  0340' 0E48               	movlw	72
  7823  0342' 0100               	movlb	0	; () banked
  7824  0344' 6F00'              	movwf	print_string@x& (0+255),b
  7825  0346' 0E07               	movlw	7
  7826  0348' 6F00'              	movwf	print_string@y& (0+255),b
  7827  034A' 0E00               	movlw	0
  7828  034C' 6F00'              	movwf	print_string@underline& (0+255),b
  7829  034E' EC00' F000'        	call	_print_string	;wreg free
  7830  0352'                    
  7831                           ;src/driver/lcd.c: 297:    if(GPS_lock == 1)
  7832  0352' 0100               	movlb	0	; () banked
  7833  0354' 0500'              	decf	_GPS_lock& (0+255),w,b
  7834  0356' A4D8               	btfss	status,2,c
  7835  0358' EF00' F000'        	goto	u13621
  7836  035C' EF00' F000'        	goto	u13620
  7837  0360'                    u13621:
  7838  0360' EF00' F000'        	goto	l10919
  7839  0364'                    u13620:
  7840  0364'                    
  7841                           ; BSR set to: 0
  7842                           ;src/driver/lcd.c: 298:     print_string("LOCK ",11*8,7,0);
  7843  0364' 0E00'              	movlw	low STR_55
  7844  0366' 6F00'              	movwf	print_string@s& (0+255),b
  7845  0368' 0E00'              	movlw	high STR_55
  7846  036A' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  7847  036C' 0E58               	movlw	88
  7848  036E' 6F00'              	movwf	print_string@x& (0+255),b
  7849  0370' 0E07               	movlw	7
  7850  0372' 6F00'              	movwf	print_string@y& (0+255),b
  7851  0374' 0E00               	movlw	0
  7852  0376' 6F00'              	movwf	print_string@underline& (0+255),b
  7853  0378' EC00' F000'        	call	_print_string	;wreg free
  7854  037C' EF00' F000'        	goto	l10921
  7855  0380'                    l10919:
  7856                           
  7857                           ; BSR set to: 0
  7858                           ;src/driver/lcd.c: 300:     print_string("NOlck",11*8,7,0);
  7859  0380' 0E00'              	movlw	low STR_56
  7860  0382' 6F00'              	movwf	print_string@s& (0+255),b
  7861  0384' 0E00'              	movlw	high STR_56
  7862  0386' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  7863  0388' 0E58               	movlw	88
  7864  038A' 6F00'              	movwf	print_string@x& (0+255),b
  7865  038C' 0E07               	movlw	7
  7866  038E' 6F00'              	movwf	print_string@y& (0+255),b
  7867  0390' 0E00               	movlw	0
  7868  0392' 6F00'              	movwf	print_string@underline& (0+255),b
  7869  0394' EC00' F000'        	call	_print_string	;wreg free
  7870  0398'                    l10921:
  7871                           
  7872                           ;src/driver/lcd.c: 301:    old_GPS_sat = GPS_sat;
  7873  0398' C005' F007'        	movff	_GPS_sat,show_display@old_GPS_sat
  7874  039C' EF00' F000'        	goto	l689
  7875  03A0'                    l10927:
  7876                           
  7877                           ; BSR set to: 0
  7878                           ;src/driver/lcd.c: 306:  {;src/driver/lcd.c: 307:   if(booting != 2)
  7879  03A0' 0E02               	movlw	2
  7880  03A2' 1900'              	xorwf	_booting& (0+255),w,b
  7881  03A4' B4D8               	btfsc	status,2,c
  7882  03A6' EF00' F000'        	goto	u13631
  7883  03AA' EF00' F000'        	goto	u13630
  7884  03AE'                    u13631:
  7885  03AE' EF00' F000'        	goto	l10947
  7886  03B2'                    u13630:
  7887  03B2'                    
  7888                           ; BSR set to: 0
  7889                           ;src/driver/lcd.c: 308:   {;src/driver/lcd.c: 310:    lcd_clear_screen(1);
  7890  03B2' 0E01               	movlw	1
  7891  03B4' EC00' F000'        	call	_lcd_clear_screen
  7892  03B8'                    
  7893                           ;src/driver/lcd.c: 311:    booting = 2;
  7894  03B8' 0E02               	movlw	2
  7895  03BA' 0100               	movlb	0	; () banked
  7896  03BC' 6F00'              	movwf	_booting& (0+255),b
  7897  03BE'                    
  7898                           ; BSR set to: 0
  7899                           ;src/driver/lcd.c: 312:    old_GPS_lock = 0xff;
  7900  03BE' 6900'              	setf	show_display@old_GPS_lock& (0+255),b
  7901  03C0'                    
  7902                           ; BSR set to: 0
  7903                           ;src/driver/lcd.c: 313:    old_outqrg = 0;
  7904  03C0' 0E00               	movlw	0
  7905  03C2' 0102               	movlb	2	; () banked
  7906  03C4' 6F00'              	movwf	(show_display@old_outqrg+1)& (0+255),b
  7907  03C6' 0E00               	movlw	0
  7908  03C8' 6F00'              	movwf	show_display@old_outqrg& (0+255),b
  7909  03CA'                    
  7910                           ; BSR set to: 2
  7911                           ;src/driver/lcd.c: 314:    old_lnbqrg = 0xff;
  7912  03CA' 0100               	movlb	0	; () banked
  7913  03CC' 6900'              	setf	show_display@old_lnbqrg& (0+255),b
  7914  03CE'                    
  7915                           ; BSR set to: 0
  7916                           ;src/driver/lcd.c: 315:    old_GPS_sat = 0xff;
  7917  03CE' 6900'              	setf	show_display@old_GPS_sat& (0+255),b
  7918  03D0'                    
  7919                           ; BSR set to: 0
  7920                           ;src/driver/lcd.c: 316:    old_GPS_fix = 0xff;
  7921  03D0' 6900'              	setf	show_display@old_GPS_fix& (0+255),b
  7922  03D2'                    
  7923                           ; BSR set to: 0
  7924                           ;src/driver/lcd.c: 317:    *old_GPS_lat = 0;
  7925  03D2' 0E00               	movlw	0
  7926  03D4' 0102               	movlb	2	; () banked
  7927  03D6' 6F00'              	movwf	show_display@old_GPS_lat& (0+255),b
  7928  03D8'                    
  7929                           ; BSR set to: 2
  7930                           ;src/driver/lcd.c: 318:    *old_GPS_lon = 0;
  7931  03D8' 0E00               	movlw	0
  7932  03DA' 6F00'              	movwf	show_display@old_GPS_lon& (0+255),b
  7933  03DC'                    l10947:
  7934                           
  7935                           ;src/driver/lcd.c: 324:  char *p;;src/driver/lcd.c: 325:  u8 xpos;;src/driver/lcd.c: 327
      +                          :  u16 outqrg = out_freq_table[actualADFswitch];
  7936  03DC' 0100               	movlb	0	; () banked
  7937  03DE' 5100'              	movf	_actualADFswitch& (0+255),w,b
  7938  03E0' 0D02               	mullw	2
  7939  03E2' 0E00'              	movlw	low _out_freq_table
  7940  03E4' 24F3               	addwf	243,w,c
  7941  03E6' 6EF6               	movwf	tblptrl,c
  7942  03E8' 0E00'              	movlw	high _out_freq_table
  7943  03EA' 20F4               	addwfc	244,w,c
  7944  03EC' 6EF7               	movwf	tblptrh,c
  7945  03EE'                    	if	0	;There are less than 3 active tblptr bytes
  7946  03EE'                    	endif
  7947  03EE' 0009               	tblrd		*+
  7948  03F0' CFF5 F040'         	movff	tablat,show_display@outqrg
  7949  03F4' 000A               	tblrd		*-
  7950  03F6' CFF5 F041'         	movff	tablat,show_display@outqrg+1
  7951  03FA'                    
  7952                           ; BSR set to: 0
  7953                           ;src/driver/lcd.c: 329:  if(old_GPS_lock != GPS_lock || old_ubx_ack != ubx_ack)
  7954  03FA' 5100'              	movf	_GPS_lock& (0+255),w,b
  7955  03FC' 1900'              	xorwf	show_display@old_GPS_lock& (0+255),w,b
  7956  03FE' A4D8               	btfss	status,2,c
  7957  0400' EF00' F000'        	goto	u13641
  7958  0404' EF00' F000'        	goto	u13640
  7959  0408'                    u13641:
  7960  0408' EF00' F000'        	goto	l10953
  7961  040C'                    u13640:
  7962  040C'                    
  7963                           ; BSR set to: 0
  7964  040C' 5000'              	movf	_ubx_ack^0,w,c
  7965  040E' 1900'              	xorwf	show_display@old_ubx_ack& (0+255),w,b
  7966  0410' B4D8               	btfsc	status,2,c
  7967  0412' EF00' F000'        	goto	u13651
  7968  0416' EF00' F000'        	goto	u13650
  7969  041A'                    u13651:
  7970  041A' EF00' F000'        	goto	l10989
  7971  041E'                    u13650:
  7972  041E'                    l10953:
  7973                           
  7974                           ; BSR set to: 0
  7975                           ;src/driver/lcd.c: 330:  {;src/driver/lcd.c: 331:   if(!GPS_lock && !ubx_ack)
  7976  041E' 5100'              	movf	_GPS_lock& (0+255),w,b
  7977  0420' A4D8               	btfss	status,2,c
  7978  0422' EF00' F000'        	goto	u13661
  7979  0426' EF00' F000'        	goto	u13660
  7980  042A'                    u13661:
  7981  042A' EF00' F000'        	goto	l10963
  7982  042E'                    u13660:
  7983  042E'                    
  7984                           ; BSR set to: 0
  7985  042E' 5000'              	movf	_ubx_ack^0,w,c
  7986  0430' A4D8               	btfss	status,2,c
  7987  0432' EF00' F000'        	goto	u13671
  7988  0436' EF00' F000'        	goto	u13670
  7989  043A'                    u13671:
  7990  043A' EF00' F000'        	goto	l10963
  7991  043E'                    u13670:
  7992  043E'                    
  7993                           ; BSR set to: 0
  7994                           ;src/driver/lcd.c: 332:   {;src/driver/lcd.c: 333:    if(ext10MHzReference == 0)
  7995  043E' 5100'              	movf	_ext10MHzReference& (0+255),w,b
  7996  0440' A4D8               	btfss	status,2,c
  7997  0442' EF00' F000'        	goto	u13681
  7998  0446' EF00' F000'        	goto	u13680
  7999  044A'                    u13681:
  8000  044A' EF00' F000'        	goto	l10961
  8001  044E'                    u13680:
  8002  044E'                    
  8003                           ; BSR set to: 0
  8004                           ;src/driver/lcd.c: 334:     print_string("O/TCXO",10*8,0,0);
  8005  044E' 0E00'              	movlw	low STR_57
  8006  0450' 6F00'              	movwf	print_string@s& (0+255),b
  8007  0452' 0E00'              	movlw	high STR_57
  8008  0454' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  8009  0456' 0E50               	movlw	80
  8010  0458' 6F00'              	movwf	print_string@x& (0+255),b
  8011  045A' 0E00               	movlw	0
  8012  045C' 6F00'              	movwf	print_string@y& (0+255),b
  8013  045E' 0E00               	movlw	0
  8014  0460' 6F00'              	movwf	print_string@underline& (0+255),b
  8015  0462' EC00' F000'        	call	_print_string	;wreg free
  8016  0466' EF00' F000'        	goto	l712
  8017  046A'                    l10961:
  8018                           
  8019                           ; BSR set to: 0
  8020                           ;src/driver/lcd.c: 336:     print_string("ext10M",10*8,0,0);
  8021  046A' 0E00'              	movlw	low (STR_39+10)
  8022  046C' 6F00'              	movwf	print_string@s& (0+255),b
  8023  046E' 0E00'              	movlw	high (STR_39+10)
  8024  0470' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  8025  0472' 0E50               	movlw	80
  8026  0474' 6F00'              	movwf	print_string@x& (0+255),b
  8027  0476' 0E00               	movlw	0
  8028  0478' 6F00'              	movwf	print_string@y& (0+255),b
  8029  047A' 0E00               	movlw	0
  8030  047C' 6F00'              	movwf	print_string@underline& (0+255),b
  8031  047E' EC00' F000'        	call	_print_string	;wreg free
  8032  0482'                    l712:
  8033                           
  8034                           ;src/driver/lcd.c: 338:    print_string("                ",0,5,0);
  8035  0482' 0E00'              	movlw	low STR_59
  8036  0484' 0100               	movlb	0	; () banked
  8037  0486' 6F00'              	movwf	print_string@s& (0+255),b
  8038  0488' 0E00'              	movlw	high STR_59
  8039  048A' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  8040  048C' 0E00               	movlw	0
  8041  048E' 6F00'              	movwf	print_string@x& (0+255),b
  8042  0490' 0E05               	movlw	5
  8043  0492' 6F00'              	movwf	print_string@y& (0+255),b
  8044  0494' 0E00               	movlw	0
  8045  0496' 6F00'              	movwf	print_string@underline& (0+255),b
  8046  0498' EC00' F000'        	call	_print_string	;wreg free
  8047                           
  8048                           ;src/driver/lcd.c: 339:    print_string("System ready    ",0,6,0);
  8049  049C' 0E00'              	movlw	low STR_60
  8050  049E' 0100               	movlb	0	; () banked
  8051  04A0' 6F00'              	movwf	print_string@s& (0+255),b
  8052  04A2' 0E00'              	movlw	high STR_60
  8053  04A4' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  8054  04A6' 0E00               	movlw	0
  8055  04A8' 6F00'              	movwf	print_string@x& (0+255),b
  8056  04AA' 0E06               	movlw	6
  8057  04AC' 6F00'              	movwf	print_string@y& (0+255),b
  8058  04AE' 0E00               	movlw	0
  8059  04B0' 6F00'              	movwf	print_string@underline& (0+255),b
  8060  04B2' EC00' F000'        	call	_print_string	;wreg free
  8061                           
  8062                           ;src/driver/lcd.c: 340:    print_string("                ",0,7,0);
  8063  04B6' 0E00'              	movlw	low STR_59
  8064  04B8' 0100               	movlb	0	; () banked
  8065  04BA' 6F00'              	movwf	print_string@s& (0+255),b
  8066  04BC' 0E00'              	movlw	high STR_59
  8067  04BE' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  8068  04C0' 0E00               	movlw	0
  8069  04C2' 6F00'              	movwf	print_string@x& (0+255),b
  8070  04C4' 0E07               	movlw	7
  8071  04C6' 6F00'              	movwf	print_string@y& (0+255),b
  8072  04C8' 0E00               	movlw	0
  8073  04CA' 6F00'              	movwf	print_string@underline& (0+255),b
  8074  04CC' EC00' F000'        	call	_print_string	;wreg free
  8075                           
  8076                           ;src/driver/lcd.c: 341:   }
  8077  04D0' EF00' F000'        	goto	l10983
  8078  04D4'                    l10963:
  8079                           
  8080                           ; BSR set to: 0
  8081  04D4' 5000'              	movf	_ubx_ack^0,w,c
  8082  04D6' B4D8               	btfsc	status,2,c
  8083  04D8' EF00' F000'        	goto	u13691
  8084  04DC' EF00' F000'        	goto	u13690
  8085  04E0'                    u13691:
  8086  04E0' EF00' F000'        	goto	l10971
  8087  04E4'                    u13690:
  8088  04E4'                    
  8089                           ; BSR set to: 0
  8090  04E4' 5100'              	movf	_GPS_lock& (0+255),w,b
  8091  04E6' A4D8               	btfss	status,2,c
  8092  04E8' EF00' F000'        	goto	u13701
  8093  04EC' EF00' F000'        	goto	u13700
  8094  04F0'                    u13701:
  8095  04F0' EF00' F000'        	goto	l10971
  8096  04F4'                    u13700:
  8097  04F4'                    
  8098                           ; BSR set to: 0
  8099                           ;src/driver/lcd.c: 345:     print_string(" GPS  ",10*8,0,0);
  8100  04F4' 0E00'              	movlw	low STR_62
  8101  04F6' 6F00'              	movwf	print_string@s& (0+255),b
  8102  04F8' 0E00'              	movlw	high STR_62
  8103  04FA' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  8104  04FC' 0E50               	movlw	80
  8105  04FE' 6F00'              	movwf	print_string@x& (0+255),b
  8106  0500' 0E00               	movlw	0
  8107  0502' 6F00'              	movwf	print_string@y& (0+255),b
  8108  0504' 0E00               	movlw	0
  8109  0506' 6F00'              	movwf	print_string@underline& (0+255),b
  8110  0508' EC00' F000'        	call	_print_string	;wreg free
  8111  050C'                    
  8112                           ;src/driver/lcd.c: 348:    print_string("                ",0,5,0);
  8113  050C' 0E00'              	movlw	low STR_59
  8114  050E' 0100               	movlb	0	; () banked
  8115  0510' 6F00'              	movwf	print_string@s& (0+255),b
  8116  0512' 0E00'              	movlw	high STR_59
  8117  0514' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  8118  0516' 0E00               	movlw	0
  8119  0518' 6F00'              	movwf	print_string@x& (0+255),b
  8120  051A' 0E05               	movlw	5
  8121  051C' 6F00'              	movwf	print_string@y& (0+255),b
  8122  051E' 0E00               	movlw	0
  8123  0520' 6F00'              	movwf	print_string@underline& (0+255),b
  8124  0522' EC00' F000'        	call	_print_string	;wreg free
  8125                           
  8126                           ;src/driver/lcd.c: 349:    print_string("searching GPS   ",0,6,0);
  8127  0526' 0E00'              	movlw	low STR_65
  8128  0528' 0100               	movlb	0	; () banked
  8129  052A' 6F00'              	movwf	print_string@s& (0+255),b
  8130  052C' 0E00'              	movlw	high STR_65
  8131  052E' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  8132  0530' 0E00               	movlw	0
  8133  0532' 6F00'              	movwf	print_string@x& (0+255),b
  8134  0534' 0E06               	movlw	6
  8135  0536' 6F00'              	movwf	print_string@y& (0+255),b
  8136  0538' 0E00               	movlw	0
  8137  053A' 6F00'              	movwf	print_string@underline& (0+255),b
  8138  053C' EC00' F000'        	call	_print_string	;wreg free
  8139                           
  8140                           ;src/driver/lcd.c: 350:    print_string("satellites:     ",0,7,0);
  8141  0540' 0E00'              	movlw	low STR_66
  8142  0542' 0100               	movlb	0	; () banked
  8143  0544' 6F00'              	movwf	print_string@s& (0+255),b
  8144  0546' 0E00'              	movlw	high STR_66
  8145  0548' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  8146  054A' 0E00               	movlw	0
  8147  054C' 6F00'              	movwf	print_string@x& (0+255),b
  8148  054E' 0E07               	movlw	7
  8149  0550' 6F00'              	movwf	print_string@y& (0+255),b
  8150  0552' 0E00               	movlw	0
  8151  0554' 6F00'              	movwf	print_string@underline& (0+255),b
  8152  0556' EC00' F000'        	call	_print_string	;wreg free
  8153                           
  8154                           ;src/driver/lcd.c: 351:    print_string(itoa(GPS_sat),12*8,7,0);
  8155  055A' C005' F019'        	movff	_GPS_sat,itoa@value
  8156  055E' 6A00'              	clrf	(itoa@value+1)^0,c
  8157  0560' EC00' F000'        	call	_itoa	;wreg free
  8158  0564' C019' F037'        	movff	?_itoa,print_string@s
  8159  0568' C01A' F038'        	movff	?_itoa+1,print_string@s+1
  8160  056C' 0E60               	movlw	96
  8161  056E' 0100               	movlb	0	; () banked
  8162  0570' 6F00'              	movwf	print_string@x& (0+255),b
  8163  0572' 0E07               	movlw	7
  8164  0574' 6F00'              	movwf	print_string@y& (0+255),b
  8165  0576' 0E00               	movlw	0
  8166  0578' 6F00'              	movwf	print_string@underline& (0+255),b
  8167  057A' EC00' F000'        	call	_print_string	;wreg free
  8168                           
  8169                           ;src/driver/lcd.c: 352:   }
  8170  057E' EF00' F000'        	goto	l10983
  8171  0582'                    l10971:
  8172                           
  8173                           ; BSR set to: 0
  8174                           ;src/driver/lcd.c: 356:     print_string(" GPS  ",10*8,0,0);
  8175  0582' 0E00'              	movlw	low STR_62
  8176  0584' 6F00'              	movwf	print_string@s& (0+255),b
  8177  0586' 0E00'              	movlw	high STR_62
  8178  0588' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  8179  058A' 0E50               	movlw	80
  8180  058C' 6F00'              	movwf	print_string@x& (0+255),b
  8181  058E' 0E00               	movlw	0
  8182  0590' 6F00'              	movwf	print_string@y& (0+255),b
  8183  0592' 0E00               	movlw	0
  8184  0594' 6F00'              	movwf	print_string@underline& (0+255),b
  8185  0596' EC00' F000'        	call	_print_string	;wreg free
  8186  059A'                    
  8187                           ;src/driver/lcd.c: 359:    print_string("                ",0,5,0);
  8188  059A' 0E00'              	movlw	low STR_59
  8189  059C' 0100               	movlb	0	; () banked
  8190  059E' 6F00'              	movwf	print_string@s& (0+255),b
  8191  05A0' 0E00'              	movlw	high STR_59
  8192  05A2' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  8193  05A4' 0E00               	movlw	0
  8194  05A6' 6F00'              	movwf	print_string@x& (0+255),b
  8195  05A8' 0E05               	movlw	5
  8196  05AA' 6F00'              	movwf	print_string@y& (0+255),b
  8197  05AC' 0E00               	movlw	0
  8198  05AE' 6F00'              	movwf	print_string@underline& (0+255),b
  8199  05B0' EC00' F000'        	call	_print_string	;wreg free
  8200                           
  8201                           ;src/driver/lcd.c: 360:    print_string("                ",0,6,0);
  8202  05B4' 0E00'              	movlw	low STR_59
  8203  05B6' 0100               	movlb	0	; () banked
  8204  05B8' 6F00'              	movwf	print_string@s& (0+255),b
  8205  05BA' 0E00'              	movlw	high STR_59
  8206  05BC' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  8207  05BE' 0E00               	movlw	0
  8208  05C0' 6F00'              	movwf	print_string@x& (0+255),b
  8209  05C2' 0E06               	movlw	6
  8210  05C4' 6F00'              	movwf	print_string@y& (0+255),b
  8211  05C6' 0E00               	movlw	0
  8212  05C8' 6F00'              	movwf	print_string@underline& (0+255),b
  8213  05CA' EC00' F000'        	call	_print_string	;wreg free
  8214                           
  8215                           ;src/driver/lcd.c: 361:    print_string("                ",0,7,0);
  8216  05CE' 0E00'              	movlw	low STR_59
  8217  05D0' 0100               	movlb	0	; () banked
  8218  05D2' 6F00'              	movwf	print_string@s& (0+255),b
  8219  05D4' 0E00'              	movlw	high STR_59
  8220  05D6' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  8221  05D8' 0E00               	movlw	0
  8222  05DA' 6F00'              	movwf	print_string@x& (0+255),b
  8223  05DC' 0E07               	movlw	7
  8224  05DE' 6F00'              	movwf	print_string@y& (0+255),b
  8225  05E0' 0E00               	movlw	0
  8226  05E2' 6F00'              	movwf	print_string@underline& (0+255),b
  8227  05E4' EC00' F000'        	call	_print_string	;wreg free
  8228  05E8'                    
  8229                           ;src/driver/lcd.c: 362:    old_GPS_sat = 0xff;
  8230  05E8' 0100               	movlb	0	; () banked
  8231  05EA' 6900'              	setf	show_display@old_GPS_sat& (0+255),b
  8232  05EC'                    
  8233                           ; BSR set to: 0
  8234                           ;src/driver/lcd.c: 363:    old_GPS_fix = 0xff;
  8235  05EC' 6900'              	setf	show_display@old_GPS_fix& (0+255),b
  8236  05EE'                    
  8237                           ; BSR set to: 0
  8238                           ;src/driver/lcd.c: 364:    *old_GPS_lat = 0;
  8239  05EE' 0E00               	movlw	0
  8240  05F0' 0102               	movlb	2	; () banked
  8241  05F2' 6F00'              	movwf	show_display@old_GPS_lat& (0+255),b
  8242  05F4'                    
  8243                           ; BSR set to: 2
  8244                           ;src/driver/lcd.c: 365:    *old_GPS_lon = 0;
  8245  05F4' 0E00               	movlw	0
  8246  05F6' 6F00'              	movwf	show_display@old_GPS_lon& (0+255),b
  8247  05F8'                    l10983:
  8248                           
  8249                           ;src/driver/lcd.c: 368:   old_GPS_lock = GPS_lock;
  8250  05F8' C00C' F00B'        	movff	_GPS_lock,show_display@old_GPS_lock
  8251  05FC'                    
  8252                           ;src/driver/lcd.c: 370:   if(old_ubx_ack != ubx_ack)
  8253  05FC' 5000'              	movf	_ubx_ack^0,w,c
  8254  05FE' 0100               	movlb	0	; () banked
  8255  0600' 1900'              	xorwf	show_display@old_ubx_ack& (0+255),w,b
  8256  0602' B4D8               	btfsc	status,2,c
  8257  0604' EF00' F000'        	goto	u13711
  8258  0608' EF00' F000'        	goto	u13710
  8259  060C'                    u13711:
  8260  060C' EF00' F000'        	goto	l10989
  8261  0610'                    u13710:
  8262  0610'                    
  8263                           ; BSR set to: 0
  8264                           ;src/driver/lcd.c: 371:    old_ubx_ack = ubx_ack;
  8265  0610' C00B' F009'        	movff	_ubx_ack,show_display@old_ubx_ack
  8266  0614'                    l10989:
  8267                           
  8268                           ; BSR set to: 0
  8269                           ;src/driver/lcd.c: 374:  if(GPS_time[0] != ' ' && memcmp(GPS_time,old_GPS_time,9))
  8270  0614' 0E20               	movlw	32
  8271  0616' 0102               	movlb	2	; () banked
  8272  0618' 1900'              	xorwf	_GPS_time& (0+255),w,b
  8273  061A' B4D8               	btfsc	status,2,c
  8274  061C' EF00' F000'        	goto	u13721
  8275  0620' EF00' F000'        	goto	u13720
  8276  0624'                    u13721:
  8277  0624' EF00' F000'        	goto	l10997
  8278  0628'                    u13720:
  8279  0628'                    
  8280                           ; BSR set to: 2
  8281  0628' 0E00'              	movlw	low _GPS_time
  8282  062A' 6E00'              	movwf	memcmp@vl^0,c
  8283  062C' 0E00'              	movlw	high _GPS_time
  8284  062E' 6E00'              	movwf	(memcmp@vl+1)^0,c
  8285  0630' 0E00'              	movlw	low show_display@old_GPS_time
  8286  0632' 6E00'              	movwf	memcmp@vr^0,c
  8287  0634' 0E00'              	movlw	high show_display@old_GPS_time
  8288  0636' 6E00'              	movwf	(memcmp@vr+1)^0,c
  8289  0638' 0E00               	movlw	0
  8290  063A' 6E00'              	movwf	(memcmp@n+1)^0,c
  8291  063C' 0E09               	movlw	9
  8292  063E' 6E00'              	movwf	memcmp@n^0,c
  8293  0640' EC00' F000'        	call	_memcmp	;wreg free
  8294  0644' 5000'              	movf	?_memcmp^0,w,c
  8295  0646' 1000'              	iorwf	(?_memcmp+1)^0,w,c
  8296  0648' B4D8               	btfsc	status,2,c
  8297  064A' EF00' F000'        	goto	u13731
  8298  064E' EF00' F000'        	goto	u13730
  8299  0652'                    u13731:
  8300  0652' EF00' F000'        	goto	l10997
  8301  0656'                    u13730:
  8302  0656'                    
  8303                           ;src/driver/lcd.c: 375:  {;src/driver/lcd.c: 376:   print_string(GPS_time,0,1,0);
  8304  0656' 0E00'              	movlw	low _GPS_time
  8305  0658' 0100               	movlb	0	; () banked
  8306  065A' 6F00'              	movwf	print_string@s& (0+255),b
  8307  065C' 0E00'              	movlw	high _GPS_time
  8308  065E' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  8309  0660' 0E00               	movlw	0
  8310  0662' 6F00'              	movwf	print_string@x& (0+255),b
  8311  0664' 0E01               	movlw	1
  8312  0666' 6F00'              	movwf	print_string@y& (0+255),b
  8313  0668' 0E00               	movlw	0
  8314  066A' 6F00'              	movwf	print_string@underline& (0+255),b
  8315  066C' EC00' F000'        	call	_print_string	;wreg free
  8316  0670'                    
  8317                           ;src/driver/lcd.c: 377:   memcpy(old_GPS_time,GPS_time,9);
  8318  0670' 0E00'              	movlw	low show_display@old_GPS_time
  8319  0672' 6E00'              	movwf	memcpy@d1^0,c
  8320  0674' 0E00'              	movlw	high show_display@old_GPS_time
  8321  0676' 6E00'              	movwf	(memcpy@d1+1)^0,c
  8322  0678' 0E00'              	movlw	low _GPS_time
  8323  067A' 6E00'              	movwf	memcpy@s1^0,c
  8324  067C' 0E00'              	movlw	high _GPS_time
  8325  067E' 6E00'              	movwf	(memcpy@s1+1)^0,c
  8326  0680' 0E00               	movlw	0
  8327  0682' 6E00'              	movwf	(memcpy@n+1)^0,c
  8328  0684' 0E09               	movlw	9
  8329  0686' 6E00'              	movwf	memcpy@n^0,c
  8330  0688' EC00' F000'        	call	_memcpy	;wreg free
  8331  068C'                    l10997:
  8332                           
  8333                           ;src/driver/lcd.c: 380:  if(old_outqrg != outqrg)
  8334  068C' 0100               	movlb	0	; () banked
  8335  068E' 5100'              	movf	show_display@outqrg& (0+255),w,b
  8336  0690' 0102               	movlb	2	; () banked
  8337  0692' 1900'              	xorwf	show_display@old_outqrg& (0+255),w,b
  8338  0694' E10B               	bnz	u13740
  8339  0696' 0100               	movlb	0	; () banked
  8340  0698' 5100'              	movf	(show_display@outqrg+1)& (0+255),w,b
  8341  069A' 0102               	movlb	2	; () banked
  8342  069C' 1900'              	xorwf	(show_display@old_outqrg+1)& (0+255),w,b
  8343  069E' B4D8               	btfsc	status,2,c
  8344  06A0' EF00' F000'        	goto	u13741
  8345  06A4' EF00' F000'        	goto	u13740
  8346  06A8'                    u13741:
  8347  06A8' EF00' F000'        	goto	l11013
  8348  06AC'                    u13740:
  8349  06AC'                    
  8350                           ; BSR set to: 2
  8351                           ;src/driver/lcd.c: 381:  {;src/driver/lcd.c: 382:   print_string("OUT:     ",0,3,0);
  8352  06AC' 0E00'              	movlw	low STR_72
  8353  06AE' 0100               	movlb	0	; () banked
  8354  06B0' 6F00'              	movwf	print_string@s& (0+255),b
  8355  06B2' 0E00'              	movlw	high STR_72
  8356  06B4' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  8357  06B6' 0E00               	movlw	0
  8358  06B8' 6F00'              	movwf	print_string@x& (0+255),b
  8359  06BA' 0E03               	movlw	3
  8360  06BC' 6F00'              	movwf	print_string@y& (0+255),b
  8361  06BE' 0E00               	movlw	0
  8362  06C0' 6F00'              	movwf	print_string@underline& (0+255),b
  8363  06C2' EC00' F000'        	call	_print_string	;wreg free
  8364  06C6'                    
  8365                           ;src/driver/lcd.c: 383:   p = itoa(outqrg);
  8366  06C6' C040' F019'        	movff	show_display@outqrg,itoa@value
  8367  06CA' C041' F01A'        	movff	show_display@outqrg+1,itoa@value+1
  8368  06CE' EC00' F000'        	call	_itoa	;wreg free
  8369  06D2' C019' F042'        	movff	?_itoa,show_display@p
  8370  06D6' C01A' F043'        	movff	?_itoa+1,show_display@p+1
  8371  06DA'                    
  8372                           ;src/driver/lcd.c: 384:   xpos = 8-strlen(p);
  8373  06DA' C042' F00D'        	movff	show_display@p,strlen@s
  8374  06DE' C043' F00E'        	movff	show_display@p+1,strlen@s+1
  8375  06E2' EC00' F000'        	call	_strlen	;wreg free
  8376  06E6' 5000'              	movf	?_strlen^0,w,c
  8377  06E8' 0808               	sublw	8
  8378  06EA' 0100               	movlb	0	; () banked
  8379  06EC' 6F00'              	movwf	show_display@xpos& (0+255),b
  8380  06EE'                    
  8381                           ; BSR set to: 0
  8382                           ;src/driver/lcd.c: 385:   print_string(p, xpos*8, 3, 0);
  8383  06EE' C042' F037'        	movff	show_display@p,print_string@s
  8384  06F2' C043' F038'        	movff	show_display@p+1,print_string@s+1
  8385  06F6' 5100'              	movf	show_display@xpos& (0+255),w,b
  8386  06F8' 0D08               	mullw	8
  8387  06FA' CFF3 F039'         	movff	prodl,print_string@x
  8388  06FE' 0E03               	movlw	3
  8389  0700' 6F00'              	movwf	print_string@y& (0+255),b
  8390  0702' 0E00               	movlw	0
  8391  0704' 6F00'              	movwf	print_string@underline& (0+255),b
  8392  0706' EC00' F000'        	call	_print_string	;wreg free
  8393  070A'                    
  8394                           ;src/driver/lcd.c: 386:   print_string(".55", 8*8, 3, 0);
  8395  070A' 0E00'              	movlw	low STR_73
  8396  070C' 0100               	movlb	0	; () banked
  8397  070E' 6F00'              	movwf	print_string@s& (0+255),b
  8398  0710' 0E00'              	movlw	high STR_73
  8399  0712' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  8400  0714' 0E40               	movlw	64
  8401  0716' 6F00'              	movwf	print_string@x& (0+255),b
  8402  0718' 0E03               	movlw	3
  8403  071A' 6F00'              	movwf	print_string@y& (0+255),b
  8404  071C' 0E00               	movlw	0
  8405  071E' 6F00'              	movwf	print_string@underline& (0+255),b
  8406  0720' EC00' F000'        	call	_print_string	;wreg free
  8407  0724'                    
  8408                           ;src/driver/lcd.c: 387:   print_string("MHz",12*8,3,0);
  8409  0724' 0E00'              	movlw	low STR_74
  8410  0726' 0100               	movlb	0	; () banked
  8411  0728' 6F00'              	movwf	print_string@s& (0+255),b
  8412  072A' 0E00'              	movlw	high STR_74
  8413  072C' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  8414  072E' 0E60               	movlw	96
  8415  0730' 6F00'              	movwf	print_string@x& (0+255),b
  8416  0732' 0E03               	movlw	3
  8417  0734' 6F00'              	movwf	print_string@y& (0+255),b
  8418  0736' 0E00               	movlw	0
  8419  0738' 6F00'              	movwf	print_string@underline& (0+255),b
  8420  073A' EC00' F000'        	call	_print_string	;wreg free
  8421  073E'                    
  8422                           ;src/driver/lcd.c: 389:   old_outqrg = outqrg;
  8423  073E' C040' F014'        	movff	show_display@outqrg,show_display@old_outqrg
  8424  0742' C041' F015'        	movff	show_display@outqrg+1,show_display@old_outqrg+1
  8425  0746'                    l11013:
  8426                           
  8427                           ;src/driver/lcd.c: 392:  if(old_lnbqrg != currentLO)
  8428  0746' 5000'              	movf	_currentLO^0,w,c
  8429  0748' 0100               	movlb	0	; () banked
  8430  074A' 1900'              	xorwf	show_display@old_lnbqrg& (0+255),w,b
  8431  074C' B4D8               	btfsc	status,2,c
  8432  074E' EF00' F000'        	goto	u13751
  8433  0752' EF00' F000'        	goto	u13750
  8434  0756'                    u13751:
  8435  0756' EF00' F000'        	goto	l11025
  8436  075A'                    u13750:
  8437  075A'                    
  8438                           ; BSR set to: 0
  8439                           ;src/driver/lcd.c: 393:  {;src/driver/lcd.c: 394:   print_string("LNB:",0,4,0);
  8440  075A' 0E00'              	movlw	low STR_75
  8441  075C' 6F00'              	movwf	print_string@s& (0+255),b
  8442  075E' 0E00'              	movlw	high STR_75
  8443  0760' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  8444  0762' 0E00               	movlw	0
  8445  0764' 6F00'              	movwf	print_string@x& (0+255),b
  8446  0766' 0E04               	movlw	4
  8447  0768' 6F00'              	movwf	print_string@y& (0+255),b
  8448  076A' 0E00               	movlw	0
  8449  076C' 6F00'              	movwf	print_string@underline& (0+255),b
  8450  076E' EC00' F000'        	call	_print_string	;wreg free
  8451  0772'                    
  8452                           ;src/driver/lcd.c: 395:   if(currentLO == 27)
  8453  0772' 0E1B               	movlw	27
  8454  0774' 1800'              	xorwf	_currentLO^0,w,c
  8455  0776' A4D8               	btfss	status,2,c
  8456  0778' EF00' F000'        	goto	u13761
  8457  077C' EF00' F000'        	goto	u13760
  8458  0780'                    u13761:
  8459  0780' EF00' F000'        	goto	l11021
  8460  0784'                    u13760:
  8461  0784'                    
  8462                           ;src/driver/lcd.c: 396:    print_string("25.45", 6*8, 4, 0);
  8463  0784' 0E00'              	movlw	low STR_76
  8464  0786' 0100               	movlb	0	; () banked
  8465  0788' 6F00'              	movwf	print_string@s& (0+255),b
  8466  078A' 0E00'              	movlw	high STR_76
  8467  078C' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  8468  078E' 0E30               	movlw	48
  8469  0790' 6F00'              	movwf	print_string@x& (0+255),b
  8470  0792' 0E04               	movlw	4
  8471  0794' 6F00'              	movwf	print_string@y& (0+255),b
  8472  0796' 0E00               	movlw	0
  8473  0798' 6F00'              	movwf	print_string@underline& (0+255),b
  8474  079A' EC00' F000'        	call	_print_string	;wreg free
  8475  079E' EF00' F000'        	goto	l725
  8476  07A2'                    l11021:
  8477                           
  8478                           ;src/driver/lcd.c: 398:   {;src/driver/lcd.c: 399:    print_string(itoa(currentLO), 6*8,
      +                           4, 0);
  8479  07A2' C00A' F019'        	movff	_currentLO,itoa@value
  8480  07A6' 6A00'              	clrf	(itoa@value+1)^0,c
  8481  07A8' EC00' F000'        	call	_itoa	;wreg free
  8482  07AC' C019' F037'        	movff	?_itoa,print_string@s
  8483  07B0' C01A' F038'        	movff	?_itoa+1,print_string@s+1
  8484  07B4' 0E30               	movlw	48
  8485  07B6' 0100               	movlb	0	; () banked
  8486  07B8' 6F00'              	movwf	print_string@x& (0+255),b
  8487  07BA' 0E04               	movlw	4
  8488  07BC' 6F00'              	movwf	print_string@y& (0+255),b
  8489  07BE' 0E00               	movlw	0
  8490  07C0' 6F00'              	movwf	print_string@underline& (0+255),b
  8491  07C2' EC00' F000'        	call	_print_string	;wreg free
  8492                           
  8493                           ;src/driver/lcd.c: 400:    print_string(".00", 8*8, 4, 0);
  8494  07C6' 0E00'              	movlw	low STR_77
  8495  07C8' 0100               	movlb	0	; () banked
  8496  07CA' 6F00'              	movwf	print_string@s& (0+255),b
  8497  07CC' 0E00'              	movlw	high STR_77
  8498  07CE' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  8499  07D0' 0E40               	movlw	64
  8500  07D2' 6F00'              	movwf	print_string@x& (0+255),b
  8501  07D4' 0E04               	movlw	4
  8502  07D6' 6F00'              	movwf	print_string@y& (0+255),b
  8503  07D8' 0E00               	movlw	0
  8504  07DA' 6F00'              	movwf	print_string@underline& (0+255),b
  8505  07DC' EC00' F000'        	call	_print_string	;wreg free
  8506  07E0'                    l725:
  8507                           
  8508                           ;src/driver/lcd.c: 402:   print_string("MHz",12*8,4,0);
  8509  07E0' 0E00'              	movlw	low STR_74
  8510  07E2' 0100               	movlb	0	; () banked
  8511  07E4' 6F00'              	movwf	print_string@s& (0+255),b
  8512  07E6' 0E00'              	movlw	high STR_74
  8513  07E8' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  8514  07EA' 0E60               	movlw	96
  8515  07EC' 6F00'              	movwf	print_string@x& (0+255),b
  8516  07EE' 0E04               	movlw	4
  8517  07F0' 6F00'              	movwf	print_string@y& (0+255),b
  8518  07F2' 0E00               	movlw	0
  8519  07F4' 6F00'              	movwf	print_string@underline& (0+255),b
  8520  07F6' EC00' F000'        	call	_print_string	;wreg free
  8521  07FA'                    
  8522                           ;src/driver/lcd.c: 404:   old_lnbqrg = currentLO;
  8523  07FA' C00A' F008'        	movff	_currentLO,show_display@old_lnbqrg
  8524  07FE'                    l11025:
  8525                           
  8526                           ;src/driver/lcd.c: 407:  if(GPS_lock)
  8527  07FE' 0100               	movlb	0	; () banked
  8528  0800' 5100'              	movf	_GPS_lock& (0+255),w,b
  8529  0802' B4D8               	btfsc	status,2,c
  8530  0804' EF00' F000'        	goto	u13771
  8531  0808' EF00' F000'        	goto	u13770
  8532  080C'                    u13771:
  8533  080C' EF00' F000'        	goto	l689
  8534  0810'                    u13770:
  8535  0810'                    
  8536                           ; BSR set to: 0
  8537                           ;src/driver/lcd.c: 408:  {;src/driver/lcd.c: 409:   if( old_GPS_sat != GPS_sat ||
  8538  0810' 5100'              	movf	_GPS_sat& (0+255),w,b
  8539  0812' 1900'              	xorwf	show_display@old_GPS_sat& (0+255),w,b
  8540  0814' A4D8               	btfss	status,2,c
  8541  0816' EF00' F000'        	goto	u13781
  8542  081A' EF00' F000'        	goto	u13780
  8543  081E'                    u13781:
  8544  081E' EF00' F000'        	goto	l11037
  8545  0822'                    u13780:
  8546  0822'                    
  8547                           ; BSR set to: 0
  8548  0822' 5100'              	movf	_GPS_fix& (0+255),w,b
  8549  0824' 1900'              	xorwf	show_display@old_GPS_fix& (0+255),w,b
  8550  0826' B4D8               	btfsc	status,2,c
  8551  0828' EF00' F000'        	goto	u13791
  8552  082C' EF00' F000'        	goto	u13790
  8553  0830'                    u13791:
  8554  0830' EF00' F000'        	goto	l11033
  8555  0834'                    u13790:
  8556  0834' EF00' F000'        	goto	l11037
  8557  0838'                    l11033:
  8558                           
  8559                           ; BSR set to: 0
  8560  0838' 0E00'              	movlw	low show_display@old_GPS_lat
  8561  083A' 6E00'              	movwf	memcmp@vl^0,c
  8562  083C' 0E00'              	movlw	high show_display@old_GPS_lat
  8563  083E' 6E00'              	movwf	(memcmp@vl+1)^0,c
  8564  0840' 0E00'              	movlw	low _GPS_lat
  8565  0842' 6E00'              	movwf	memcmp@vr^0,c
  8566  0844' 0E00'              	movlw	high _GPS_lat
  8567  0846' 6E00'              	movwf	(memcmp@vr+1)^0,c
  8568  0848' 0E00               	movlw	0
  8569  084A' 6E00'              	movwf	(memcmp@n+1)^0,c
  8570  084C' 0E0F               	movlw	15
  8571  084E' 6E00'              	movwf	memcmp@n^0,c
  8572  0850' EC00' F000'        	call	_memcmp	;wreg free
  8573  0854' 5000'              	movf	?_memcmp^0,w,c
  8574  0856' 1000'              	iorwf	(?_memcmp+1)^0,w,c
  8575  0858' A4D8               	btfss	status,2,c
  8576  085A' EF00' F000'        	goto	u13801
  8577  085E' EF00' F000'        	goto	u13800
  8578  0862'                    u13801:
  8579  0862' EF00' F000'        	goto	l11037
  8580  0866'                    u13800:
  8581  0866' 0E00'              	movlw	low show_display@old_GPS_lon
  8582  0868' 6E00'              	movwf	memcmp@vl^0,c
  8583  086A' 0E00'              	movlw	high show_display@old_GPS_lon
  8584  086C' 6E00'              	movwf	(memcmp@vl+1)^0,c
  8585  086E' 0E00'              	movlw	low _GPS_lon
  8586  0870' 6E00'              	movwf	memcmp@vr^0,c
  8587  0872' 0E00'              	movlw	high _GPS_lon
  8588  0874' 6E00'              	movwf	(memcmp@vr+1)^0,c
  8589  0876' 0E00               	movlw	0
  8590  0878' 6E00'              	movwf	(memcmp@n+1)^0,c
  8591  087A' 0E0F               	movlw	15
  8592  087C' 6E00'              	movwf	memcmp@n^0,c
  8593  087E' EC00' F000'        	call	_memcmp	;wreg free
  8594  0882' 5000'              	movf	?_memcmp^0,w,c
  8595  0884' 1000'              	iorwf	(?_memcmp+1)^0,w,c
  8596  0886' B4D8               	btfsc	status,2,c
  8597  0888' EF00' F000'        	goto	u13811
  8598  088C' EF00' F000'        	goto	u13810
  8599  0890'                    u13811:
  8600  0890' EF00' F000'        	goto	l689
  8601  0894'                    u13810:
  8602  0894'                    l11037:
  8603                           
  8604                           ;src/driver/lcd.c: 413:   {;src/driver/lcd.c: 414:    print_string("SAT:",0,5,0);
  8605  0894' 0E00'              	movlw	low STR_79
  8606  0896' 0100               	movlb	0	; () banked
  8607  0898' 6F00'              	movwf	print_string@s& (0+255),b
  8608  089A' 0E00'              	movlw	high STR_79
  8609  089C' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  8610  089E' 0E00               	movlw	0
  8611  08A0' 6F00'              	movwf	print_string@x& (0+255),b
  8612  08A2' 0E05               	movlw	5
  8613  08A4' 6F00'              	movwf	print_string@y& (0+255),b
  8614  08A6' 0E00               	movlw	0
  8615  08A8' 6F00'              	movwf	print_string@underline& (0+255),b
  8616  08AA' EC00' F000'        	call	_print_string	;wreg free
  8617  08AE'                    
  8618                           ;src/driver/lcd.c: 415:    p = itoa(GPS_sat);
  8619  08AE' C005' F019'        	movff	_GPS_sat,itoa@value
  8620  08B2' 6A00'              	clrf	(itoa@value+1)^0,c
  8621  08B4' EC00' F000'        	call	_itoa	;wreg free
  8622  08B8' C019' F042'        	movff	?_itoa,show_display@p
  8623  08BC' C01A' F043'        	movff	?_itoa+1,show_display@p+1
  8624  08C0'                    
  8625                           ;src/driver/lcd.c: 416:    xpos = 8-strlen(p);
  8626  08C0' C042' F00D'        	movff	show_display@p,strlen@s
  8627  08C4' C043' F00E'        	movff	show_display@p+1,strlen@s+1
  8628  08C8' EC00' F000'        	call	_strlen	;wreg free
  8629  08CC' 5000'              	movf	?_strlen^0,w,c
  8630  08CE' 0808               	sublw	8
  8631  08D0' 0100               	movlb	0	; () banked
  8632  08D2' 6F00'              	movwf	show_display@xpos& (0+255),b
  8633  08D4'                    
  8634                           ; BSR set to: 0
  8635                           ;src/driver/lcd.c: 417:    print_string("       ",4*8,5,0);
  8636  08D4' 0E00'              	movlw	low (STR_59+9)
  8637  08D6' 6F00'              	movwf	print_string@s& (0+255),b
  8638  08D8' 0E00'              	movlw	high (STR_59+9)
  8639  08DA' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  8640  08DC' 0E20               	movlw	32
  8641  08DE' 6F00'              	movwf	print_string@x& (0+255),b
  8642  08E0' 0E05               	movlw	5
  8643  08E2' 6F00'              	movwf	print_string@y& (0+255),b
  8644  08E4' 0E00               	movlw	0
  8645  08E6' 6F00'              	movwf	print_string@underline& (0+255),b
  8646  08E8' EC00' F000'        	call	_print_string	;wreg free
  8647  08EC'                    
  8648                           ;src/driver/lcd.c: 418:    print_string(itoa(GPS_sat),xpos*8,5,0);
  8649  08EC' C005' F019'        	movff	_GPS_sat,itoa@value
  8650  08F0' 6A00'              	clrf	(itoa@value+1)^0,c
  8651  08F2' EC00' F000'        	call	_itoa	;wreg free
  8652  08F6' C019' F037'        	movff	?_itoa,print_string@s
  8653  08FA' C01A' F038'        	movff	?_itoa+1,print_string@s+1
  8654  08FE' 0100               	movlb	0	; () banked
  8655  0900' 5100'              	movf	show_display@xpos& (0+255),w,b
  8656  0902' 0D08               	mullw	8
  8657  0904' CFF3 F039'         	movff	prodl,print_string@x
  8658  0908' 0E05               	movlw	5
  8659  090A' 6F00'              	movwf	print_string@y& (0+255),b
  8660  090C' 0E00               	movlw	0
  8661  090E' 6F00'              	movwf	print_string@underline& (0+255),b
  8662  0910' EC00' F000'        	call	_print_string	;wreg free
  8663  0914'                    
  8664                           ;src/driver/lcd.c: 420:    if(GPS_fix)
  8665  0914' 0100               	movlb	0	; () banked
  8666  0916' 5100'              	movf	_GPS_fix& (0+255),w,b
  8667  0918' B4D8               	btfsc	status,2,c
  8668  091A' EF00' F000'        	goto	u13821
  8669  091E' EF00' F000'        	goto	u13820
  8670  0922'                    u13821:
  8671  0922' EF00' F000'        	goto	l11051
  8672  0926'                    u13820:
  8673  0926'                    
  8674                           ; BSR set to: 0
  8675                           ;src/driver/lcd.c: 421:     print_string("lock  ",10*8,5,0);
  8676  0926' 0E00'              	movlw	low STR_81
  8677  0928' 6F00'              	movwf	print_string@s& (0+255),b
  8678  092A' 0E00'              	movlw	high STR_81
  8679  092C' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  8680  092E' 0E50               	movlw	80
  8681  0930' 6F00'              	movwf	print_string@x& (0+255),b
  8682  0932' 0E05               	movlw	5
  8683  0934' 6F00'              	movwf	print_string@y& (0+255),b
  8684  0936' 0E00               	movlw	0
  8685  0938' 6F00'              	movwf	print_string@underline& (0+255),b
  8686  093A' EC00' F000'        	call	_print_string	;wreg free
  8687  093E' EF00' F000'        	goto	l733
  8688  0942'                    l11051:
  8689                           
  8690                           ; BSR set to: 0
  8691                           ;src/driver/lcd.c: 423:     print_string("unlock",10*8,5,0);
  8692  0942' 0E00'              	movlw	low STR_82
  8693  0944' 6F00'              	movwf	print_string@s& (0+255),b
  8694  0946' 0E00'              	movlw	high STR_82
  8695  0948' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  8696  094A' 0E50               	movlw	80
  8697  094C' 6F00'              	movwf	print_string@x& (0+255),b
  8698  094E' 0E05               	movlw	5
  8699  0950' 6F00'              	movwf	print_string@y& (0+255),b
  8700  0952' 0E00               	movlw	0
  8701  0954' 6F00'              	movwf	print_string@underline& (0+255),b
  8702  0956' EC00' F000'        	call	_print_string	;wreg free
  8703  095A'                    l733:
  8704                           
  8705                           ;src/driver/lcd.c: 425:    print_string("LAT:",0,6,0);
  8706  095A' 0E00'              	movlw	low STR_83
  8707  095C' 0100               	movlb	0	; () banked
  8708  095E' 6F00'              	movwf	print_string@s& (0+255),b
  8709  0960' 0E00'              	movlw	high STR_83
  8710  0962' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  8711  0964' 0E00               	movlw	0
  8712  0966' 6F00'              	movwf	print_string@x& (0+255),b
  8713  0968' 0E06               	movlw	6
  8714  096A' 6F00'              	movwf	print_string@y& (0+255),b
  8715  096C' 0E00               	movlw	0
  8716  096E' 6F00'              	movwf	print_string@underline& (0+255),b
  8717  0970' EC00' F000'        	call	_print_string	;wreg free
  8718                           
  8719                           ;src/driver/lcd.c: 426:    print_string(GPS_lat,8*6,6,0);
  8720  0974' 0E00'              	movlw	low _GPS_lat
  8721  0976' 0100               	movlb	0	; () banked
  8722  0978' 6F00'              	movwf	print_string@s& (0+255),b
  8723  097A' 0E00'              	movlw	high _GPS_lat
  8724  097C' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  8725  097E' 0E30               	movlw	48
  8726  0980' 6F00'              	movwf	print_string@x& (0+255),b
  8727  0982' 0E06               	movlw	6
  8728  0984' 6F00'              	movwf	print_string@y& (0+255),b
  8729  0986' 0E00               	movlw	0
  8730  0988' 6F00'              	movwf	print_string@underline& (0+255),b
  8731  098A' EC00' F000'        	call	_print_string	;wreg free
  8732                           
  8733                           ;src/driver/lcd.c: 428:    print_string("LON:",0,7,0);
  8734  098E' 0E00'              	movlw	low STR_84
  8735  0990' 0100               	movlb	0	; () banked
  8736  0992' 6F00'              	movwf	print_string@s& (0+255),b
  8737  0994' 0E00'              	movlw	high STR_84
  8738  0996' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  8739  0998' 0E00               	movlw	0
  8740  099A' 6F00'              	movwf	print_string@x& (0+255),b
  8741  099C' 0E07               	movlw	7
  8742  099E' 6F00'              	movwf	print_string@y& (0+255),b
  8743  09A0' 0E00               	movlw	0
  8744  09A2' 6F00'              	movwf	print_string@underline& (0+255),b
  8745  09A4' EC00' F000'        	call	_print_string	;wreg free
  8746                           
  8747                           ;src/driver/lcd.c: 429:    print_string(GPS_lon,8*5,7,0);
  8748  09A8' 0E00'              	movlw	low _GPS_lon
  8749  09AA' 0100               	movlb	0	; () banked
  8750  09AC' 6F00'              	movwf	print_string@s& (0+255),b
  8751  09AE' 0E00'              	movlw	high _GPS_lon
  8752  09B0' 6F00'              	movwf	(print_string@s+1)& (0+255),b
  8753  09B2' 0E28               	movlw	40
  8754  09B4' 6F00'              	movwf	print_string@x& (0+255),b
  8755  09B6' 0E07               	movlw	7
  8756  09B8' 6F00'              	movwf	print_string@y& (0+255),b
  8757  09BA' 0E00               	movlw	0
  8758  09BC' 6F00'              	movwf	print_string@underline& (0+255),b
  8759  09BE' EC00' F000'        	call	_print_string	;wreg free
  8760  09C2'                    
  8761                           ;src/driver/lcd.c: 431:    if(GPS_lon[0] != ' ' && GPS_lat[0] != ' ')
  8762  09C2' 0E20               	movlw	32
  8763  09C4' 0102               	movlb	2	; () banked
  8764  09C6' 1900'              	xorwf	_GPS_lon& (0+255),w,b
  8765  09C8' B4D8               	btfsc	status,2,c
  8766  09CA' EF00' F000'        	goto	u13831
  8767  09CE' EF00' F000'        	goto	u13830
  8768  09D2'                    u13831:
  8769  09D2' EF00' F000'        	goto	l11059
  8770  09D6'                    u13830:
  8771  09D6'                    
  8772                           ; BSR set to: 2
  8773  09D6' 0E20               	movlw	32
  8774  09D8' 1900'              	xorwf	_GPS_lat& (0+255),w,b
  8775  09DA' B4D8               	btfsc	status,2,c
  8776  09DC' EF00' F000'        	goto	u13841
  8777  09E0' EF00' F000'        	goto	u13840
  8778  09E4'                    u13841:
  8779  09E4' EF00' F000'        	goto	l11059
  8780  09E8'                    u13840:
  8781  09E8'                    
  8782                           ; BSR set to: 2
  8783                           ;src/driver/lcd.c: 432:     print_string(CalculateGridSquare(),8*9,1,0);
  8784  09E8' EC00' F000'        	call	_CalculateGridSquare	;wreg free
  8785  09EC' C026' F037'        	movff	?_CalculateGridSquare,print_string@s
  8786  09F0' C027' F038'        	movff	?_CalculateGridSquare+1,print_string@s+1
  8787  09F4' 0E48               	movlw	72
  8788  09F6' 0100               	movlb	0	; () banked
  8789  09F8' 6F00'              	movwf	print_string@x& (0+255),b
  8790  09FA' 0E01               	movlw	1
  8791  09FC' 6F00'              	movwf	print_string@y& (0+255),b
  8792  09FE' 0E00               	movlw	0
  8793  0A00' 6F00'              	movwf	print_string@underline& (0+255),b
  8794  0A02' EC00' F000'        	call	_print_string	;wreg free
  8795  0A06'                    l11059:
  8796                           
  8797                           ;src/driver/lcd.c: 434:    old_GPS_sat = GPS_sat;
  8798  0A06' C005' F007'        	movff	_GPS_sat,show_display@old_GPS_sat
  8799  0A0A'                    
  8800                           ;src/driver/lcd.c: 435:    old_GPS_fix = GPS_fix;
  8801  0A0A' C009' F00A'        	movff	_GPS_fix,show_display@old_GPS_fix
  8802  0A0E'                    
  8803                           ;src/driver/lcd.c: 436:    memcpy(old_GPS_lat,GPS_lat,15);
  8804  0A0E' 0E00'              	movlw	low show_display@old_GPS_lat
  8805  0A10' 6E00'              	movwf	memcpy@d1^0,c
  8806  0A12' 0E00'              	movlw	high show_display@old_GPS_lat
  8807  0A14' 6E00'              	movwf	(memcpy@d1+1)^0,c
  8808  0A16' 0E00'              	movlw	low _GPS_lat
  8809  0A18' 6E00'              	movwf	memcpy@s1^0,c
  8810  0A1A' 0E00'              	movlw	high _GPS_lat
  8811  0A1C' 6E00'              	movwf	(memcpy@s1+1)^0,c
  8812  0A1E' 0E00               	movlw	0
  8813  0A20' 6E00'              	movwf	(memcpy@n+1)^0,c
  8814  0A22' 0E0F               	movlw	15
  8815  0A24' 6E00'              	movwf	memcpy@n^0,c
  8816  0A26' EC00' F000'        	call	_memcpy	;wreg free
  8817  0A2A'                    
  8818                           ;src/driver/lcd.c: 437:    memcpy(old_GPS_lon,GPS_lon,15);
  8819  0A2A' 0E00'              	movlw	low show_display@old_GPS_lon
  8820  0A2C' 6E00'              	movwf	memcpy@d1^0,c
  8821  0A2E' 0E00'              	movlw	high show_display@old_GPS_lon
  8822  0A30' 6E00'              	movwf	(memcpy@d1+1)^0,c
  8823  0A32' 0E00'              	movlw	low _GPS_lon
  8824  0A34' 6E00'              	movwf	memcpy@s1^0,c
  8825  0A36' 0E00'              	movlw	high _GPS_lon
  8826  0A38' 6E00'              	movwf	(memcpy@s1+1)^0,c
  8827  0A3A' 0E00               	movlw	0
  8828  0A3C' 6E00'              	movwf	(memcpy@n+1)^0,c
  8829  0A3E' 0E0F               	movlw	15
  8830  0A40' 6E00'              	movwf	memcpy@n^0,c
  8831  0A42' EC00' F000'        	call	_memcpy	;wreg free
  8832  0A46'                    l689:
  8833  0A46' 0012               	return		;funcret
  8834  0A48'                    __end_of_show_display:
  8835                           	opt callstack 0
  8836                           
  8837 ;; *************** function _memcmp *****************
  8838 ;; Defined at:
  8839 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memcmp.c"
  8840 ;; Parameters:    Size  Location     Type
  8841 ;;  vl              2   13[COMRAM] PTR const void 
  8842 ;;		 -> GPS_time(9), show_display@old_GPS_lon(15), show_display@old_GPS_lat(15), 
  8843 ;;  vr              2   15[COMRAM] PTR const void 
  8844 ;;		 -> GPS_lon(15), GPS_lat(15), show_display@old_GPS_time(9), 
  8845 ;;  n               2   17[COMRAM] unsigned int 
  8846 ;; Auto vars:     Size  Location     Type
  8847 ;;  r               2   23[COMRAM] PTR const unsigned char 
  8848 ;;		 -> GPS_lon(15), GPS_lat(15), show_display@old_GPS_time(9), 
  8849 ;;  l               2   21[COMRAM] PTR const unsigned char 
  8850 ;;		 -> GPS_time(9), show_display@old_GPS_lon(15), show_display@old_GPS_lat(15), 
  8851 ;; Return value:  Size  Location     Type
  8852 ;;                  2   13[COMRAM] int 
  8853 ;; Registers used:
  8854 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8855 ;; Tracked objects:
  8856 ;;		On entry : 0/0
  8857 ;;		On exit  : 0/0
  8858 ;;		Unchanged: 0/0
  8859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8860 ;;      Params:         6       0       0       0       0       0       0
  8861 ;;      Locals:         4       0       0       0       0       0       0
  8862 ;;      Temps:          2       0       0       0       0       0       0
  8863 ;;      Totals:        12       0       0       0       0       0       0
  8864 ;;Total ram usage:       12 bytes
  8865 ;; Hardware stack levels used:    1
  8866 ;; Hardware stack levels required when called:    2
  8867 ;; This function calls:
  8868 ;;		Nothing
  8869 ;; This function is called by:
  8870 ;;		_show_display
  8871 ;; This function uses a non-reentrant model
  8872 ;;
  8873                           
  8874                           	psect	text15
  8875  0000'                    __ptext15:
  8876                           	opt callstack 0
  8877  0000'                    _memcmp:
  8878                           	opt callstack 27
  8879  0000' C00D' F015'        	movff	memcmp@vl,memcmp@l
  8880  0004' C00E' F016'        	movff	memcmp@vl+1,memcmp@l+1
  8881  0008' C00F' F017'        	movff	memcmp@vr,memcmp@r
  8882  000C' C010' F018'        	movff	memcmp@vr+1,memcmp@r+1
  8883  0010' EF00' F000'        	goto	l7685
  8884  0014'                    l7683:
  8885  0014' 0600'              	decf	memcmp@n^0,f,c
  8886  0016' A0D8               	btfss	status,0,c
  8887  0018' 0600'              	decf	(memcmp@n+1)^0,f,c
  8888  001A' 4A00'              	infsnz	memcmp@l^0,f,c
  8889  001C' 2A00'              	incf	(memcmp@l+1)^0,f,c
  8890  001E' 4A00'              	infsnz	memcmp@r^0,f,c
  8891  0020' 2A00'              	incf	(memcmp@r+1)^0,f,c
  8892  0022'                    l7685:
  8893  0022' 5000'              	movf	memcmp@n^0,w,c
  8894  0024' 1000'              	iorwf	(memcmp@n+1)^0,w,c
  8895  0026' B4D8               	btfsc	status,2,c
  8896  0028' EF00' F000'        	goto	u8861
  8897  002C' EF00' F000'        	goto	u8860
  8898  0030'                    u8861:
  8899  0030' EF00' F000'        	goto	l7689
  8900  0034'                    u8860:
  8901  0034' C017' FFD9         	movff	memcmp@r,fsr2l
  8902  0038' C018' FFDA         	movff	memcmp@r+1,fsr2h
  8903  003C' C015' FFE1         	movff	memcmp@l,fsr1l
  8904  0040' C016' FFE2         	movff	memcmp@l+1,fsr1h
  8905  0044' 50DE               	movf	postinc2,w,c
  8906  0046' 18E6               	xorwf	postinc1,w,c
  8907  0048' B4D8               	btfsc	status,2,c
  8908  004A' EF00' F000'        	goto	u8871
  8909  004E' EF00' F000'        	goto	u8870
  8910  0052'                    u8871:
  8911  0052' EF00' F000'        	goto	l7683
  8912  0056'                    u8870:
  8913  0056'                    l7689:
  8914  0056' 5000'              	movf	memcmp@n^0,w,c
  8915  0058' 1000'              	iorwf	(memcmp@n+1)^0,w,c
  8916  005A' A4D8               	btfss	status,2,c
  8917  005C' EF00' F000'        	goto	u8881
  8918  0060' EF00' F000'        	goto	u8880
  8919  0064'                    u8881:
  8920  0064' EF00' F000'        	goto	l7693
  8921  0068'                    u8880:
  8922  0068' 0E00               	movlw	0
  8923  006A' 6E00'              	movwf	(?_memcmp+1)^0,c
  8924  006C' 0E00               	movlw	0
  8925  006E' 6E00'              	movwf	?_memcmp^0,c
  8926  0070' EF00' F000'        	goto	l2145
  8927  0074'                    l7693:
  8928  0074' C015' FFD9         	movff	memcmp@l,fsr2l
  8929  0078' C016' FFDA         	movff	memcmp@l+1,fsr2h
  8930  007C' 50DF               	movf	indf2,w,c
  8931  007E' 6E00'              	movwf	??_memcmp^0,c
  8932  0080' C017' FFD9         	movff	memcmp@r,fsr2l
  8933  0084' C018' FFDA         	movff	memcmp@r+1,fsr2h
  8934  0088' 50DF               	movf	indf2,w,c
  8935  008A' 6E00'              	movwf	(??_memcmp+1)^0,c
  8936  008C' 5000'              	movf	(??_memcmp+1)^0,w,c
  8937  008E' 5C00'              	subwf	??_memcmp^0,w,c
  8938  0090' 6E00'              	movwf	?_memcmp^0,c
  8939  0092' 6A00'              	clrf	(?_memcmp+1)^0,c
  8940  0094' A0D8               	btfss	status,0,c
  8941  0096' 0600'              	decf	(?_memcmp+1)^0,f,c
  8942  0098'                    l2145:
  8943  0098' 0012               	return		;funcret
  8944  009A'                    __end_of_memcmp:
  8945                           	opt callstack 0
  8946                           
  8947 ;; *************** function _itoa *****************
  8948 ;; Defined at:
  8949 ;;		line 492 in file "src/driver/lcd.c"
  8950 ;; Parameters:    Size  Location     Type
  8951 ;;  value           2   25[COMRAM] int 
  8952 ;; Auto vars:     Size  Location     Type
  8953 ;;  c               1   27[COMRAM] unsigned char 
  8954 ;; Return value:  Size  Location     Type
  8955 ;;                  2   25[COMRAM] PTR unsigned char 
  8956 ;; Registers used:
  8957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8958 ;; Tracked objects:
  8959 ;;		On entry : 0/0
  8960 ;;		On exit  : 0/0
  8961 ;;		Unchanged: 0/0
  8962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8963 ;;      Params:         2       0       0       0       0       0       0
  8964 ;;      Locals:         1       0       0       0       0       0       0
  8965 ;;      Temps:          0       0       0       0       0       0       0
  8966 ;;      Totals:         3       0       0       0       0       0       0
  8967 ;;Total ram usage:        3 bytes
  8968 ;; Hardware stack levels used:    1
  8969 ;; Hardware stack levels required when called:    3
  8970 ;; This function calls:
  8971 ;;		___awdiv
  8972 ;;		___awmod
  8973 ;;		_memset
  8974 ;; This function is called by:
  8975 ;;		_show_display
  8976 ;;		_lcd_settingsOK
  8977 ;; This function uses a non-reentrant model
  8978 ;;
  8979                           
  8980                           	psect	text16
  8981  0000'                    __ptext16:
  8982                           	opt callstack 0
  8983  0000'                    _itoa:
  8984                           	opt callstack 26
  8985  0000'                    
  8986                           ;src/driver/lcd.c: 492: char *itoa(int value);src/driver/lcd.c: 493: {;src/driver/lcd.c:
      +                           494:  static char buffer[12];;src/driver/lcd.c: 495:  u8 c = sizeof(buffer)-1;
  8987  0000' 0E0B               	movlw	11
  8988  0002' 6E00'              	movwf	itoa@c^0,c
  8989  0004'                    
  8990                           ;src/driver/lcd.c: 497:  memset(buffer,0,sizeof(buffer));
  8991  0004' 0E00'              	movlw	low itoa@buffer
  8992  0006' 6E00'              	movwf	memset@dest^0,c
  8993  0008' 0E00'              	movlw	high itoa@buffer
  8994  000A' 6E00'              	movwf	(memset@dest+1)^0,c
  8995  000C' 0E00               	movlw	0
  8996  000E' 6E00'              	movwf	(memset@c+1)^0,c
  8997  0010' 0E00               	movlw	0
  8998  0012' 6E00'              	movwf	memset@c^0,c
  8999  0014' 0E00               	movlw	0
  9000  0016' 6E00'              	movwf	(memset@n+1)^0,c
  9001  0018' 0E0C               	movlw	12
  9002  001A' 6E00'              	movwf	memset@n^0,c
  9003  001C' EC00' F000'        	call	_memset	;wreg free
  9004  0020'                    l10469:
  9005                           
  9006                           ;src/driver/lcd.c: 500:  {;src/driver/lcd.c: 501:   buffer[--c] = (value % 10) + '0';
  9007  0020' 0600'              	decf	itoa@c^0,f,c
  9008  0022' 0E00'              	movlw	low itoa@buffer
  9009  0024' 2400'              	addwf	itoa@c^0,w,c
  9010  0026' 6ED9               	movwf	fsr2l,c
  9011  0028' 6ADA               	clrf	fsr2h,c
  9012  002A' 0E00'              	movlw	high itoa@buffer
  9013  002C' 22DA               	addwfc	fsr2h,f,c
  9014  002E' C019' F00D'        	movff	itoa@value,___awmod@dividend
  9015  0032' C01A' F00E'        	movff	itoa@value+1,___awmod@dividend+1
  9016  0036' 0E00               	movlw	0
  9017  0038' 6E00'              	movwf	(___awmod@divisor+1)^0,c
  9018  003A' 0E0A               	movlw	10
  9019  003C' 6E00'              	movwf	___awmod@divisor^0,c
  9020  003E' EC00' F000'        	call	___awmod	;wreg free
  9021  0042' 5000'              	movf	?___awmod^0,w,c
  9022  0044' 0F30               	addlw	48
  9023  0046' 6EDF               	movwf	indf2,c
  9024  0048'                    
  9025                           ;src/driver/lcd.c: 502:   value /= 10;
  9026  0048' C019' F00D'        	movff	itoa@value,___awdiv@dividend
  9027  004C' C01A' F00E'        	movff	itoa@value+1,___awdiv@dividend+1
  9028  0050' 0E00               	movlw	0
  9029  0052' 6E00'              	movwf	(___awdiv@divisor+1)^0,c
  9030  0054' 0E0A               	movlw	10
  9031  0056' 6E00'              	movwf	___awdiv@divisor^0,c
  9032  0058' EC00' F000'        	call	___awdiv	;wreg free
  9033  005C' C00D' F019'        	movff	?___awdiv,itoa@value
  9034  0060' C00E' F01A'        	movff	?___awdiv+1,itoa@value+1
  9035  0064'                    
  9036                           ;src/driver/lcd.c: 503:  } while (value);
  9037  0064' 5000'              	movf	itoa@value^0,w,c
  9038  0066' 1000'              	iorwf	(itoa@value+1)^0,w,c
  9039  0068' A4D8               	btfss	status,2,c
  9040  006A' EF00' F000'        	goto	u13111
  9041  006E' EF00' F000'        	goto	u13110
  9042  0072'                    u13111:
  9043  0072' EF00' F000'        	goto	l10469
  9044  0076'                    u13110:
  9045  0076'                    
  9046                           ;src/driver/lcd.c: 505:  return &buffer[c];
  9047  0076' 0E00'              	movlw	low itoa@buffer
  9048  0078' 2400'              	addwf	itoa@c^0,w,c
  9049  007A' 6E00'              	movwf	?_itoa^0,c
  9050  007C' 6A00'              	clrf	(?_itoa+1)^0,c
  9051  007E' 0E00'              	movlw	high itoa@buffer
  9052  0080' 2200'              	addwfc	(?_itoa+1)^0,f,c
  9053  0082' 0012               	return		;funcret
  9054  0084'                    __end_of_itoa:
  9055                           	opt callstack 0
  9056                           
  9057 ;; *************** function ___awmod *****************
  9058 ;; Defined at:
  9059 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
  9060 ;; Parameters:    Size  Location     Type
  9061 ;;  dividend        2   13[COMRAM] int 
  9062 ;;  divisor         2   15[COMRAM] int 
  9063 ;; Auto vars:     Size  Location     Type
  9064 ;;  sign            1   18[COMRAM] unsigned char 
  9065 ;;  counter         1   17[COMRAM] unsigned char 
  9066 ;; Return value:  Size  Location     Type
  9067 ;;                  2   13[COMRAM] int 
  9068 ;; Registers used:
  9069 ;;		wreg, status,2, status,0
  9070 ;; Tracked objects:
  9071 ;;		On entry : 0/0
  9072 ;;		On exit  : 0/0
  9073 ;;		Unchanged: 0/0
  9074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9075 ;;      Params:         4       0       0       0       0       0       0
  9076 ;;      Locals:         2       0       0       0       0       0       0
  9077 ;;      Temps:          0       0       0       0       0       0       0
  9078 ;;      Totals:         6       0       0       0       0       0       0
  9079 ;;Total ram usage:        6 bytes
  9080 ;; Hardware stack levels used:    1
  9081 ;; Hardware stack levels required when called:    2
  9082 ;; This function calls:
  9083 ;;		Nothing
  9084 ;; This function is called by:
  9085 ;;		_itoa
  9086 ;; This function uses a non-reentrant model
  9087 ;;
  9088                           
  9089                           	psect	text17
  9090  0000'                    __ptext17:
  9091                           	opt callstack 0
  9092  0000'                    ___awmod:
  9093                           	opt callstack 26
  9094  0000' 0E00               	movlw	0
  9095  0002' 6E00'              	movwf	___awmod@sign^0,c
  9096  0004' BE00'              	btfsc	(___awmod@dividend+1)^0,7,c
  9097  0006' EF00' F000'        	goto	u8200
  9098  000A' EF00' F000'        	goto	u8201
  9099  000E'                    u8201:
  9100  000E' EF00' F000'        	goto	l7327
  9101  0012'                    u8200:
  9102  0012' 6C00'              	negf	___awmod@dividend^0,c
  9103  0014' 1E00'              	comf	(___awmod@dividend+1)^0,f,c
  9104  0016' B0D8               	btfsc	status,0,c
  9105  0018' 2A00'              	incf	(___awmod@dividend+1)^0,f,c
  9106  001A' 0E01               	movlw	1
  9107  001C' 6E00'              	movwf	___awmod@sign^0,c
  9108  001E'                    l7327:
  9109  001E' BE00'              	btfsc	(___awmod@divisor+1)^0,7,c
  9110  0020' EF00' F000'        	goto	u8210
  9111  0024' EF00' F000'        	goto	u8211
  9112  0028'                    u8211:
  9113  0028' EF00' F000'        	goto	l7331
  9114  002C'                    u8210:
  9115  002C' 6C00'              	negf	___awmod@divisor^0,c
  9116  002E' 1E00'              	comf	(___awmod@divisor+1)^0,f,c
  9117  0030' B0D8               	btfsc	status,0,c
  9118  0032' 2A00'              	incf	(___awmod@divisor+1)^0,f,c
  9119  0034'                    l7331:
  9120  0034' 5000'              	movf	___awmod@divisor^0,w,c
  9121  0036' 1000'              	iorwf	(___awmod@divisor+1)^0,w,c
  9122  0038' B4D8               	btfsc	status,2,c
  9123  003A' EF00' F000'        	goto	u8221
  9124  003E' EF00' F000'        	goto	u8220
  9125  0042'                    u8221:
  9126  0042' EF00' F000'        	goto	l7347
  9127  0046'                    u8220:
  9128  0046' 0E01               	movlw	1
  9129  0048' 6E00'              	movwf	___awmod@counter^0,c
  9130  004A' EF00' F000'        	goto	l7337
  9131  004E'                    l7335:
  9132  004E' 90D8               	bcf	status,0,c
  9133  0050' 3600'              	rlcf	___awmod@divisor^0,f,c
  9134  0052' 3600'              	rlcf	(___awmod@divisor+1)^0,f,c
  9135  0054' 2A00'              	incf	___awmod@counter^0,f,c
  9136  0056'                    l7337:
  9137  0056' AE00'              	btfss	(___awmod@divisor+1)^0,7,c
  9138  0058' EF00' F000'        	goto	u8231
  9139  005C' EF00' F000'        	goto	u8230
  9140  0060'                    u8231:
  9141  0060' EF00' F000'        	goto	l7335
  9142  0064'                    u8230:
  9143  0064'                    l7339:
  9144  0064' 5000'              	movf	___awmod@divisor^0,w,c
  9145  0066' 5C00'              	subwf	___awmod@dividend^0,w,c
  9146  0068' 5000'              	movf	(___awmod@divisor+1)^0,w,c
  9147  006A' 5800'              	subwfb	(___awmod@dividend+1)^0,w,c
  9148  006C' A0D8               	btfss	status,0,c
  9149  006E' EF00' F000'        	goto	u8241
  9150  0072' EF00' F000'        	goto	u8240
  9151  0076'                    u8241:
  9152  0076' EF00' F000'        	goto	l7343
  9153  007A'                    u8240:
  9154  007A' 5000'              	movf	___awmod@divisor^0,w,c
  9155  007C' 5E00'              	subwf	___awmod@dividend^0,f,c
  9156  007E' 5000'              	movf	(___awmod@divisor+1)^0,w,c
  9157  0080' 5A00'              	subwfb	(___awmod@dividend+1)^0,f,c
  9158  0082'                    l7343:
  9159  0082' 90D8               	bcf	status,0,c
  9160  0084' 3200'              	rrcf	(___awmod@divisor+1)^0,f,c
  9161  0086' 3200'              	rrcf	___awmod@divisor^0,f,c
  9162  0088' 2E00'              	decfsz	___awmod@counter^0,f,c
  9163  008A' EF00' F000'        	goto	l7339
  9164  008E'                    l7347:
  9165  008E' 5000'              	movf	___awmod@sign^0,w,c
  9166  0090' B4D8               	btfsc	status,2,c
  9167  0092' EF00' F000'        	goto	u8251
  9168  0096' EF00' F000'        	goto	u8250
  9169  009A'                    u8251:
  9170  009A' EF00' F000'        	goto	l7351
  9171  009E'                    u8250:
  9172  009E' 6C00'              	negf	___awmod@dividend^0,c
  9173  00A0' 1E00'              	comf	(___awmod@dividend+1)^0,f,c
  9174  00A2' B0D8               	btfsc	status,0,c
  9175  00A4' 2A00'              	incf	(___awmod@dividend+1)^0,f,c
  9176  00A6'                    l7351:
  9177  00A6' C00D' F00D'        	movff	___awmod@dividend,?___awmod
  9178  00AA' C00E' F00E'        	movff	___awmod@dividend+1,?___awmod+1
  9179  00AE' 0012               	return		;funcret
  9180  00B0'                    __end_of___awmod:
  9181                           	opt callstack 0
  9182                           
  9183 ;; *************** function ___awdiv *****************
  9184 ;; Defined at:
  9185 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
  9186 ;; Parameters:    Size  Location     Type
  9187 ;;  dividend        2   13[COMRAM] int 
  9188 ;;  divisor         2   15[COMRAM] int 
  9189 ;; Auto vars:     Size  Location     Type
  9190 ;;  quotient        2   19[COMRAM] int 
  9191 ;;  sign            1   18[COMRAM] unsigned char 
  9192 ;;  counter         1   17[COMRAM] unsigned char 
  9193 ;; Return value:  Size  Location     Type
  9194 ;;                  2   13[COMRAM] int 
  9195 ;; Registers used:
  9196 ;;		wreg, status,2, status,0
  9197 ;; Tracked objects:
  9198 ;;		On entry : 0/0
  9199 ;;		On exit  : 0/0
  9200 ;;		Unchanged: 0/0
  9201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9202 ;;      Params:         4       0       0       0       0       0       0
  9203 ;;      Locals:         4       0       0       0       0       0       0
  9204 ;;      Temps:          0       0       0       0       0       0       0
  9205 ;;      Totals:         8       0       0       0       0       0       0
  9206 ;;Total ram usage:        8 bytes
  9207 ;; Hardware stack levels used:    1
  9208 ;; Hardware stack levels required when called:    2
  9209 ;; This function calls:
  9210 ;;		Nothing
  9211 ;; This function is called by:
  9212 ;;		_itoa
  9213 ;; This function uses a non-reentrant model
  9214 ;;
  9215                           
  9216                           	psect	text18
  9217  0000'                    __ptext18:
  9218                           	opt callstack 0
  9219  0000'                    ___awdiv:
  9220                           	opt callstack 26
  9221  0000' 0E00               	movlw	0
  9222  0002' 6E00'              	movwf	___awdiv@sign^0,c
  9223  0004' BE00'              	btfsc	(___awdiv@divisor+1)^0,7,c
  9224  0006' EF00' F000'        	goto	u8140
  9225  000A' EF00' F000'        	goto	u8141
  9226  000E'                    u8141:
  9227  000E' EF00' F000'        	goto	l7283
  9228  0012'                    u8140:
  9229  0012' 6C00'              	negf	___awdiv@divisor^0,c
  9230  0014' 1E00'              	comf	(___awdiv@divisor+1)^0,f,c
  9231  0016' B0D8               	btfsc	status,0,c
  9232  0018' 2A00'              	incf	(___awdiv@divisor+1)^0,f,c
  9233  001A' 0E01               	movlw	1
  9234  001C' 6E00'              	movwf	___awdiv@sign^0,c
  9235  001E'                    l7283:
  9236  001E' BE00'              	btfsc	(___awdiv@dividend+1)^0,7,c
  9237  0020' EF00' F000'        	goto	u8150
  9238  0024' EF00' F000'        	goto	u8151
  9239  0028'                    u8151:
  9240  0028' EF00' F000'        	goto	l7289
  9241  002C'                    u8150:
  9242  002C' 6C00'              	negf	___awdiv@dividend^0,c
  9243  002E' 1E00'              	comf	(___awdiv@dividend+1)^0,f,c
  9244  0030' B0D8               	btfsc	status,0,c
  9245  0032' 2A00'              	incf	(___awdiv@dividend+1)^0,f,c
  9246  0034' 0E01               	movlw	1
  9247  0036' 1A00'              	xorwf	___awdiv@sign^0,f,c
  9248  0038'                    l7289:
  9249  0038' 0E00               	movlw	0
  9250  003A' 6E00'              	movwf	(___awdiv@quotient+1)^0,c
  9251  003C' 0E00               	movlw	0
  9252  003E' 6E00'              	movwf	___awdiv@quotient^0,c
  9253  0040' 5000'              	movf	___awdiv@divisor^0,w,c
  9254  0042' 1000'              	iorwf	(___awdiv@divisor+1)^0,w,c
  9255  0044' B4D8               	btfsc	status,2,c
  9256  0046' EF00' F000'        	goto	u8161
  9257  004A' EF00' F000'        	goto	u8160
  9258  004E'                    u8161:
  9259  004E' EF00' F000'        	goto	l7311
  9260  0052'                    u8160:
  9261  0052' 0E01               	movlw	1
  9262  0054' 6E00'              	movwf	___awdiv@counter^0,c
  9263  0056' EF00' F000'        	goto	l7297
  9264  005A'                    l7295:
  9265  005A' 90D8               	bcf	status,0,c
  9266  005C' 3600'              	rlcf	___awdiv@divisor^0,f,c
  9267  005E' 3600'              	rlcf	(___awdiv@divisor+1)^0,f,c
  9268  0060' 2A00'              	incf	___awdiv@counter^0,f,c
  9269  0062'                    l7297:
  9270  0062' AE00'              	btfss	(___awdiv@divisor+1)^0,7,c
  9271  0064' EF00' F000'        	goto	u8171
  9272  0068' EF00' F000'        	goto	u8170
  9273  006C'                    u8171:
  9274  006C' EF00' F000'        	goto	l7295
  9275  0070'                    u8170:
  9276  0070'                    l7299:
  9277  0070' 90D8               	bcf	status,0,c
  9278  0072' 3600'              	rlcf	___awdiv@quotient^0,f,c
  9279  0074' 3600'              	rlcf	(___awdiv@quotient+1)^0,f,c
  9280  0076' 5000'              	movf	___awdiv@divisor^0,w,c
  9281  0078' 5C00'              	subwf	___awdiv@dividend^0,w,c
  9282  007A' 5000'              	movf	(___awdiv@divisor+1)^0,w,c
  9283  007C' 5800'              	subwfb	(___awdiv@dividend+1)^0,w,c
  9284  007E' A0D8               	btfss	status,0,c
  9285  0080' EF00' F000'        	goto	u8181
  9286  0084' EF00' F000'        	goto	u8180
  9287  0088'                    u8181:
  9288  0088' EF00' F000'        	goto	l7307
  9289  008C'                    u8180:
  9290  008C' 5000'              	movf	___awdiv@divisor^0,w,c
  9291  008E' 5E00'              	subwf	___awdiv@dividend^0,f,c
  9292  0090' 5000'              	movf	(___awdiv@divisor+1)^0,w,c
  9293  0092' 5A00'              	subwfb	(___awdiv@dividend+1)^0,f,c
  9294  0094' 8000'              	bsf	___awdiv@quotient^0,0,c
  9295  0096'                    l7307:
  9296  0096' 90D8               	bcf	status,0,c
  9297  0098' 3200'              	rrcf	(___awdiv@divisor+1)^0,f,c
  9298  009A' 3200'              	rrcf	___awdiv@divisor^0,f,c
  9299  009C' 2E00'              	decfsz	___awdiv@counter^0,f,c
  9300  009E' EF00' F000'        	goto	l7299
  9301  00A2'                    l7311:
  9302  00A2' 5000'              	movf	___awdiv@sign^0,w,c
  9303  00A4' B4D8               	btfsc	status,2,c
  9304  00A6' EF00' F000'        	goto	u8191
  9305  00AA' EF00' F000'        	goto	u8190
  9306  00AE'                    u8191:
  9307  00AE' EF00' F000'        	goto	l7315
  9308  00B2'                    u8190:
  9309  00B2' 6C00'              	negf	___awdiv@quotient^0,c
  9310  00B4' 1E00'              	comf	(___awdiv@quotient+1)^0,f,c
  9311  00B6' B0D8               	btfsc	status,0,c
  9312  00B8' 2A00'              	incf	(___awdiv@quotient+1)^0,f,c
  9313  00BA'                    l7315:
  9314  00BA' C013' F00D'        	movff	___awdiv@quotient,?___awdiv
  9315  00BE' C014' F00E'        	movff	___awdiv@quotient+1,?___awdiv+1
  9316  00C2' 0012               	return		;funcret
  9317  00C4'                    __end_of___awdiv:
  9318                           	opt callstack 0
  9319                           
  9320 ;; *************** function _CalculateGridSquare *****************
  9321 ;; Defined at:
  9322 ;;		line 382 in file "src/gps.c"
  9323 ;; Parameters:    Size  Location     Type
  9324 ;;		None
  9325 ;; Auto vars:     Size  Location     Type
  9326 ;;  lat_min         4   88[COMRAM] unsigned long 
  9327 ;;  lat             4   84[COMRAM] unsigned long 
  9328 ;;  lon_min         4   80[COMRAM] unsigned long 
  9329 ;;  lon             4   76[COMRAM] unsigned long 
  9330 ;;  latmid          4   72[COMRAM] unsigned long 
  9331 ;;  latrest1        4   68[COMRAM] unsigned long 
  9332 ;;  latgf           4   64[COMRAM] unsigned long 
  9333 ;;  latm            4   60[COMRAM] unsigned long 
  9334 ;;  lonmid          4   56[COMRAM] unsigned long 
  9335 ;;  lonrest1        4   52[COMRAM] unsigned long 
  9336 ;;  longf           4   48[COMRAM] unsigned long 
  9337 ;;  lonm            4   44[COMRAM] unsigned long 
  9338 ;; Return value:  Size  Location     Type
  9339 ;;                  2   38[COMRAM] PTR unsigned char 
  9340 ;; Registers used:
  9341 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9342 ;; Tracked objects:
  9343 ;;		On entry : 0/0
  9344 ;;		On exit  : 0/0
  9345 ;;		Unchanged: 0/0
  9346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9347 ;;      Params:         2       0       0       0       0       0       0
  9348 ;;      Locals:        48       0       0       0       0       0       0
  9349 ;;      Temps:          4       0       0       0       0       0       0
  9350 ;;      Totals:        54       0       0       0       0       0       0
  9351 ;;Total ram usage:       54 bytes
  9352 ;; Hardware stack levels used:    1
  9353 ;; Hardware stack levels required when called:    3
  9354 ;; This function calls:
  9355 ;;		___lldiv
  9356 ;;		___lmul
  9357 ;; This function is called by:
  9358 ;;		_show_display
  9359 ;; This function uses a non-reentrant model
  9360 ;;
  9361                           
  9362                           	psect	text19
  9363  0000'                    __ptext19:
  9364                           	opt callstack 0
  9365  0000'                    _CalculateGridSquare:
  9366                           	opt callstack 26
  9367  0000'                    
  9368                           ;src/gps.c: 384: static char grid[7];;src/gps.c: 387:  u32 lon = ((GPS_lon[0]-'0')*100) 
      +                          + ((GPS_lon[1]-'0')*10) + ((GPS_lon[2]-'0')*1);
  9369  0000' 0E30               	movlw	48
  9370  0002' 6E00'              	movwf	??_CalculateGridSquare^0,c
  9371  0004' 0EEB               	movlw	235
  9372  0006' 6E00'              	movwf	(??_CalculateGridSquare+1)^0,c
  9373  0008' 0102               	movlb	2	; () banked
  9374  000A' 5100'              	movf	_GPS_lon& (0+255),w,b
  9375  000C' 0D64               	mullw	100
  9376  000E' CFF3 F02A'         	movff	prodl,??_CalculateGridSquare+2
  9377  0012' CFF4 F02B'         	movff	prodh,??_CalculateGridSquare+3
  9378  0016' 5100'              	movf	(_GPS_lon+1)& (0+255),w,b
  9379  0018' 0D0A               	mullw	10
  9380  001A' 50F3               	movf	243,w,c
  9381  001C' 2600'              	addwf	(??_CalculateGridSquare+2)^0,f,c
  9382  001E' 50F4               	movf	244,w,c
  9383  0020' 2200'              	addwfc	(??_CalculateGridSquare+3)^0,f,c
  9384  0022' 5100'              	movf	(_GPS_lon+2)& (0+255),w,b
  9385  0024' 2600'              	addwf	(??_CalculateGridSquare+2)^0,f,c
  9386  0026' 0E00               	movlw	0
  9387  0028' 2200'              	addwfc	(??_CalculateGridSquare+3)^0,f,c
  9388  002A' 5000'              	movf	??_CalculateGridSquare^0,w,c
  9389  002C' 2600'              	addwf	(??_CalculateGridSquare+2)^0,f,c
  9390  002E' 5000'              	movf	(??_CalculateGridSquare+1)^0,w,c
  9391  0030' 2200'              	addwfc	(??_CalculateGridSquare+3)^0,f,c
  9392  0032' C02A' F04C'        	movff	??_CalculateGridSquare+2,CalculateGridSquare@lon
  9393  0036' C02B' F04D'        	movff	??_CalculateGridSquare+3,CalculateGridSquare@lon+1
  9394  003A' 6A00'              	clrf	(CalculateGridSquare@lon+2)^0,c
  9395  003C' 6A00'              	clrf	(CalculateGridSquare@lon+3)^0,c
  9396                           
  9397                           ;src/gps.c: 388:  u32 lon_min = ((GPS_lon[4]-'0')*10) + ((GPS_lon[5]-'0')*1);
  9398  003E' 0EF0               	movlw	240
  9399  0040' 6E00'              	movwf	??_CalculateGridSquare^0,c
  9400  0042' 0EFD               	movlw	253
  9401  0044' 6E00'              	movwf	(??_CalculateGridSquare+1)^0,c
  9402  0046' 5100'              	movf	(_GPS_lon+4)& (0+255),w,b
  9403  0048' 0D0A               	mullw	10
  9404  004A' CFF3 F02A'         	movff	prodl,??_CalculateGridSquare+2
  9405  004E' CFF4 F02B'         	movff	prodh,??_CalculateGridSquare+3
  9406  0052' 5100'              	movf	(_GPS_lon+5)& (0+255),w,b
  9407  0054' 2600'              	addwf	(??_CalculateGridSquare+2)^0,f,c
  9408  0056' 0E00               	movlw	0
  9409  0058' 2200'              	addwfc	(??_CalculateGridSquare+3)^0,f,c
  9410  005A' 5000'              	movf	??_CalculateGridSquare^0,w,c
  9411  005C' 2600'              	addwf	(??_CalculateGridSquare+2)^0,f,c
  9412  005E' 5000'              	movf	(??_CalculateGridSquare+1)^0,w,c
  9413  0060' 2200'              	addwfc	(??_CalculateGridSquare+3)^0,f,c
  9414  0062' C02A' F050'        	movff	??_CalculateGridSquare+2,CalculateGridSquare@lon_min
  9415  0066' C02B' F051'        	movff	??_CalculateGridSquare+3,CalculateGridSquare@lon_min+1
  9416  006A' 6A00'              	clrf	(CalculateGridSquare@lon_min+2)^0,c
  9417  006C' 6A00'              	clrf	(CalculateGridSquare@lon_min+3)^0,c
  9418  006E'                    
  9419                           ; BSR set to: 2
  9420                           ;src/gps.c: 389:  lon_min *= 100;
  9421  006E' C050' F00D'        	movff	CalculateGridSquare@lon_min,___lmul@multiplier
  9422  0072' C051' F00E'        	movff	CalculateGridSquare@lon_min+1,___lmul@multiplier+1
  9423  0076' C052' F00F'        	movff	CalculateGridSquare@lon_min+2,___lmul@multiplier+2
  9424  007A' C053' F010'        	movff	CalculateGridSquare@lon_min+3,___lmul@multiplier+3
  9425  007E' 0E64               	movlw	100
  9426  0080' 6E00'              	movwf	___lmul@multiplicand^0,c
  9427  0082' 0E00               	movlw	0
  9428  0084' 6E00'              	movwf	(___lmul@multiplicand+1)^0,c
  9429  0086' 0E00               	movlw	0
  9430  0088' 6E00'              	movwf	(___lmul@multiplicand+2)^0,c
  9431  008A' 0E00               	movlw	0
  9432  008C' 6E00'              	movwf	(___lmul@multiplicand+3)^0,c
  9433  008E' EC00' F000'        	call	___lmul	;wreg free
  9434  0092' C00D' F050'        	movff	?___lmul,CalculateGridSquare@lon_min
  9435  0096' C00E' F051'        	movff	?___lmul+1,CalculateGridSquare@lon_min+1
  9436  009A' C00F' F052'        	movff	?___lmul+2,CalculateGridSquare@lon_min+2
  9437  009E' C010' F053'        	movff	?___lmul+3,CalculateGridSquare@lon_min+3
  9438  00A2'                    
  9439                           ;src/gps.c: 390:  lon_min += (((GPS_lon[7]-'0')*10) + ((GPS_lon[8]-'0')*1));
  9440  00A2' 0EF0               	movlw	240
  9441  00A4' 6E00'              	movwf	??_CalculateGridSquare^0,c
  9442  00A6' 0EFD               	movlw	253
  9443  00A8' 6E00'              	movwf	(??_CalculateGridSquare+1)^0,c
  9444  00AA' 0102               	movlb	2	; () banked
  9445  00AC' 5100'              	movf	(_GPS_lon+7)& (0+255),w,b
  9446  00AE' 0D0A               	mullw	10
  9447  00B0' CFF3 F02A'         	movff	prodl,??_CalculateGridSquare+2
  9448  00B4' CFF4 F02B'         	movff	prodh,??_CalculateGridSquare+3
  9449  00B8' 5100'              	movf	(_GPS_lon+8)& (0+255),w,b
  9450  00BA' 2600'              	addwf	(??_CalculateGridSquare+2)^0,f,c
  9451  00BC' 0E00               	movlw	0
  9452  00BE' 2200'              	addwfc	(??_CalculateGridSquare+3)^0,f,c
  9453  00C0' 5000'              	movf	??_CalculateGridSquare^0,w,c
  9454  00C2' 2600'              	addwf	(??_CalculateGridSquare+2)^0,f,c
  9455  00C4' 5000'              	movf	(??_CalculateGridSquare+1)^0,w,c
  9456  00C6' 2200'              	addwfc	(??_CalculateGridSquare+3)^0,f,c
  9457  00C8' 5000'              	movf	(??_CalculateGridSquare+2)^0,w,c
  9458  00CA' 2600'              	addwf	CalculateGridSquare@lon_min^0,f,c
  9459  00CC' 5000'              	movf	(??_CalculateGridSquare+3)^0,w,c
  9460  00CE' 2200'              	addwfc	(CalculateGridSquare@lon_min+1)^0,f,c
  9461  00D0' 0E00               	movlw	0
  9462  00D2' 2200'              	addwfc	(CalculateGridSquare@lon_min+2)^0,f,c
  9463  00D4' 0E00               	movlw	0
  9464  00D6' 2200'              	addwfc	(CalculateGridSquare@lon_min+3)^0,f,c
  9465                           
  9466                           ;src/gps.c: 391:  lon_min = (lon_min * 100) / 60;
  9467  00D8' C050' F00D'        	movff	CalculateGridSquare@lon_min,___lmul@multiplier
  9468  00DC' C051' F00E'        	movff	CalculateGridSquare@lon_min+1,___lmul@multiplier+1
  9469  00E0' C052' F00F'        	movff	CalculateGridSquare@lon_min+2,___lmul@multiplier+2
  9470  00E4' C053' F010'        	movff	CalculateGridSquare@lon_min+3,___lmul@multiplier+3
  9471  00E8' 0E64               	movlw	100
  9472  00EA' 6E00'              	movwf	___lmul@multiplicand^0,c
  9473  00EC' 0E00               	movlw	0
  9474  00EE' 6E00'              	movwf	(___lmul@multiplicand+1)^0,c
  9475  00F0' 0E00               	movlw	0
  9476  00F2' 6E00'              	movwf	(___lmul@multiplicand+2)^0,c
  9477  00F4' 0E00               	movlw	0
  9478  00F6' 6E00'              	movwf	(___lmul@multiplicand+3)^0,c
  9479  00F8' EC00' F000'        	call	___lmul	;wreg free
  9480  00FC' C00D' F019'        	movff	?___lmul,___lldiv@dividend
  9481  0100' C00E' F01A'        	movff	?___lmul+1,___lldiv@dividend+1
  9482  0104' C00F' F01B'        	movff	?___lmul+2,___lldiv@dividend+2
  9483  0108' C010' F01C'        	movff	?___lmul+3,___lldiv@dividend+3
  9484  010C' 0E3C               	movlw	60
  9485  010E' 6E00'              	movwf	___lldiv@divisor^0,c
  9486  0110' 0E00               	movlw	0
  9487  0112' 6E00'              	movwf	(___lldiv@divisor+1)^0,c
  9488  0114' 0E00               	movlw	0
  9489  0116' 6E00'              	movwf	(___lldiv@divisor+2)^0,c
  9490  0118' 0E00               	movlw	0
  9491  011A' 6E00'              	movwf	(___lldiv@divisor+3)^0,c
  9492  011C' EC00' F000'        	call	___lldiv	;wreg free
  9493  0120' C019' F050'        	movff	?___lldiv,CalculateGridSquare@lon_min
  9494  0124' C01A' F051'        	movff	?___lldiv+1,CalculateGridSquare@lon_min+1
  9495  0128' C01B' F052'        	movff	?___lldiv+2,CalculateGridSquare@lon_min+2
  9496  012C' C01C' F053'        	movff	?___lldiv+3,CalculateGridSquare@lon_min+3
  9497                           
  9498                           ;src/gps.c: 392:  lon = lon*10000 + lon_min;
  9499  0130' C04C' F00D'        	movff	CalculateGridSquare@lon,___lmul@multiplier
  9500  0134' C04D' F00E'        	movff	CalculateGridSquare@lon+1,___lmul@multiplier+1
  9501  0138' C04E' F00F'        	movff	CalculateGridSquare@lon+2,___lmul@multiplier+2
  9502  013C' C04F' F010'        	movff	CalculateGridSquare@lon+3,___lmul@multiplier+3
  9503  0140' 0E10               	movlw	16
  9504  0142' 6E00'              	movwf	___lmul@multiplicand^0,c
  9505  0144' 0E27               	movlw	39
  9506  0146' 6E00'              	movwf	(___lmul@multiplicand+1)^0,c
  9507  0148' 0E00               	movlw	0
  9508  014A' 6E00'              	movwf	(___lmul@multiplicand+2)^0,c
  9509  014C' 0E00               	movlw	0
  9510  014E' 6E00'              	movwf	(___lmul@multiplicand+3)^0,c
  9511  0150' EC00' F000'        	call	___lmul	;wreg free
  9512  0154' 5000'              	movf	CalculateGridSquare@lon_min^0,w,c
  9513  0156' 2400'              	addwf	?___lmul^0,w,c
  9514  0158' 6E00'              	movwf	CalculateGridSquare@lon^0,c
  9515  015A' 5000'              	movf	(CalculateGridSquare@lon_min+1)^0,w,c
  9516  015C' 2000'              	addwfc	(?___lmul+1)^0,w,c
  9517  015E' 6E00'              	movwf	(CalculateGridSquare@lon+1)^0,c
  9518  0160' 5000'              	movf	(CalculateGridSquare@lon_min+2)^0,w,c
  9519  0162' 2000'              	addwfc	(?___lmul+2)^0,w,c
  9520  0164' 6E00'              	movwf	(CalculateGridSquare@lon+2)^0,c
  9521  0166' 5000'              	movf	(CalculateGridSquare@lon_min+3)^0,w,c
  9522  0168' 2000'              	addwfc	(?___lmul+3)^0,w,c
  9523  016A' 6E00'              	movwf	(CalculateGridSquare@lon+3)^0,c
  9524  016C'                    
  9525                           ;src/gps.c: 395:     if(GPS_lon[9] == 'W') lon = -lon;
  9526  016C' 0E57               	movlw	87
  9527  016E' 0102               	movlb	2	; () banked
  9528  0170' 1900'              	xorwf	(_GPS_lon+9)& (0+255),w,b
  9529  0172' A4D8               	btfss	status,2,c
  9530  0174' EF00' F000'        	goto	u13121
  9531  0178' EF00' F000'        	goto	u13120
  9532  017C'                    u13121:
  9533  017C' EF00' F000'        	goto	l10489
  9534  0180'                    u13120:
  9535  0180'                    
  9536                           ; BSR set to: 2
  9537  0180' 1E00'              	comf	(CalculateGridSquare@lon+3)^0,f,c
  9538  0182' 1E00'              	comf	(CalculateGridSquare@lon+2)^0,f,c
  9539  0184' 1E00'              	comf	(CalculateGridSquare@lon+1)^0,f,c
  9540  0186' 6C00'              	negf	CalculateGridSquare@lon^0,c
  9541  0188' 0E00               	movlw	0
  9542  018A' 2200'              	addwfc	(CalculateGridSquare@lon+1)^0,f,c
  9543  018C' 2200'              	addwfc	(CalculateGridSquare@lon+2)^0,f,c
  9544  018E' 2200'              	addwfc	(CalculateGridSquare@lon+3)^0,f,c
  9545  0190'                    l10489:
  9546                           
  9547                           ; BSR set to: 2
  9548                           ;src/gps.c: 397:     lon += 1800000;
  9549  0190' 0E40               	movlw	64
  9550  0192' 2600'              	addwf	CalculateGridSquare@lon^0,f,c
  9551  0194' 0E77               	movlw	119
  9552  0196' 2200'              	addwfc	(CalculateGridSquare@lon+1)^0,f,c
  9553  0198' 0E1B               	movlw	27
  9554  019A' 2200'              	addwfc	(CalculateGridSquare@lon+2)^0,f,c
  9555  019C' 0E00               	movlw	0
  9556  019E' 2200'              	addwfc	(CalculateGridSquare@lon+3)^0,f,c
  9557  01A0'                    
  9558                           ; BSR set to: 2
  9559                           ;src/gps.c: 400:  u32 lat = ((GPS_lat[0]-'0')*10) + ((GPS_lat[1]-'0')*1);
  9560  01A0' 0EF0               	movlw	240
  9561  01A2' 6E00'              	movwf	??_CalculateGridSquare^0,c
  9562  01A4' 0EFD               	movlw	253
  9563  01A6' 6E00'              	movwf	(??_CalculateGridSquare+1)^0,c
  9564  01A8' 5100'              	movf	_GPS_lat& (0+255),w,b
  9565  01AA' 0D0A               	mullw	10
  9566  01AC' CFF3 F02A'         	movff	prodl,??_CalculateGridSquare+2
  9567  01B0' CFF4 F02B'         	movff	prodh,??_CalculateGridSquare+3
  9568  01B4' 5100'              	movf	(_GPS_lat+1)& (0+255),w,b
  9569  01B6' 2600'              	addwf	(??_CalculateGridSquare+2)^0,f,c
  9570  01B8' 0E00               	movlw	0
  9571  01BA' 2200'              	addwfc	(??_CalculateGridSquare+3)^0,f,c
  9572  01BC' 5000'              	movf	??_CalculateGridSquare^0,w,c
  9573  01BE' 2600'              	addwf	(??_CalculateGridSquare+2)^0,f,c
  9574  01C0' 5000'              	movf	(??_CalculateGridSquare+1)^0,w,c
  9575  01C2' 2200'              	addwfc	(??_CalculateGridSquare+3)^0,f,c
  9576  01C4' C02A' F054'        	movff	??_CalculateGridSquare+2,CalculateGridSquare@lat
  9577  01C8' C02B' F055'        	movff	??_CalculateGridSquare+3,CalculateGridSquare@lat+1
  9578  01CC' 6A00'              	clrf	(CalculateGridSquare@lat+2)^0,c
  9579  01CE' 6A00'              	clrf	(CalculateGridSquare@lat+3)^0,c
  9580  01D0'                    
  9581                           ; BSR set to: 2
  9582                           ;src/gps.c: 401:  u32 lat_min = ((GPS_lat[3]-'0')*10) + ((GPS_lat[4]-'0')*1);
  9583  01D0' 0EF0               	movlw	240
  9584  01D2' 6E00'              	movwf	??_CalculateGridSquare^0,c
  9585  01D4' 0EFD               	movlw	253
  9586  01D6' 6E00'              	movwf	(??_CalculateGridSquare+1)^0,c
  9587  01D8' 5100'              	movf	(_GPS_lat+3)& (0+255),w,b
  9588  01DA' 0D0A               	mullw	10
  9589  01DC' CFF3 F02A'         	movff	prodl,??_CalculateGridSquare+2
  9590  01E0' CFF4 F02B'         	movff	prodh,??_CalculateGridSquare+3
  9591  01E4' 5100'              	movf	(_GPS_lat+4)& (0+255),w,b
  9592  01E6' 2600'              	addwf	(??_CalculateGridSquare+2)^0,f,c
  9593  01E8' 0E00               	movlw	0
  9594  01EA' 2200'              	addwfc	(??_CalculateGridSquare+3)^0,f,c
  9595  01EC' 5000'              	movf	??_CalculateGridSquare^0,w,c
  9596  01EE' 2600'              	addwf	(??_CalculateGridSquare+2)^0,f,c
  9597  01F0' 5000'              	movf	(??_CalculateGridSquare+1)^0,w,c
  9598  01F2' 2200'              	addwfc	(??_CalculateGridSquare+3)^0,f,c
  9599  01F4' C02A' F058'        	movff	??_CalculateGridSquare+2,CalculateGridSquare@lat_min
  9600  01F8' C02B' F059'        	movff	??_CalculateGridSquare+3,CalculateGridSquare@lat_min+1
  9601  01FC' 6A00'              	clrf	(CalculateGridSquare@lat_min+2)^0,c
  9602  01FE' 6A00'              	clrf	(CalculateGridSquare@lat_min+3)^0,c
  9603  0200'                    
  9604                           ; BSR set to: 2
  9605                           ;src/gps.c: 402:  lat_min *= 100;
  9606  0200' C058' F00D'        	movff	CalculateGridSquare@lat_min,___lmul@multiplier
  9607  0204' C059' F00E'        	movff	CalculateGridSquare@lat_min+1,___lmul@multiplier+1
  9608  0208' C05A' F00F'        	movff	CalculateGridSquare@lat_min+2,___lmul@multiplier+2
  9609  020C' C05B' F010'        	movff	CalculateGridSquare@lat_min+3,___lmul@multiplier+3
  9610  0210' 0E64               	movlw	100
  9611  0212' 6E00'              	movwf	___lmul@multiplicand^0,c
  9612  0214' 0E00               	movlw	0
  9613  0216' 6E00'              	movwf	(___lmul@multiplicand+1)^0,c
  9614  0218' 0E00               	movlw	0
  9615  021A' 6E00'              	movwf	(___lmul@multiplicand+2)^0,c
  9616  021C' 0E00               	movlw	0
  9617  021E' 6E00'              	movwf	(___lmul@multiplicand+3)^0,c
  9618  0220' EC00' F000'        	call	___lmul	;wreg free
  9619  0224' C00D' F058'        	movff	?___lmul,CalculateGridSquare@lat_min
  9620  0228' C00E' F059'        	movff	?___lmul+1,CalculateGridSquare@lat_min+1
  9621  022C' C00F' F05A'        	movff	?___lmul+2,CalculateGridSquare@lat_min+2
  9622  0230' C010' F05B'        	movff	?___lmul+3,CalculateGridSquare@lat_min+3
  9623  0234'                    
  9624                           ;src/gps.c: 403:  lat_min += (((GPS_lat[6]-'0')*10) + ((GPS_lat[7]-'0')*1));
  9625  0234' 0EF0               	movlw	240
  9626  0236' 6E00'              	movwf	??_CalculateGridSquare^0,c
  9627  0238' 0EFD               	movlw	253
  9628  023A' 6E00'              	movwf	(??_CalculateGridSquare+1)^0,c
  9629  023C' 0102               	movlb	2	; () banked
  9630  023E' 5100'              	movf	(_GPS_lat+6)& (0+255),w,b
  9631  0240' 0D0A               	mullw	10
  9632  0242' CFF3 F02A'         	movff	prodl,??_CalculateGridSquare+2
  9633  0246' CFF4 F02B'         	movff	prodh,??_CalculateGridSquare+3
  9634  024A' 5100'              	movf	(_GPS_lat+7)& (0+255),w,b
  9635  024C' 2600'              	addwf	(??_CalculateGridSquare+2)^0,f,c
  9636  024E' 0E00               	movlw	0
  9637  0250' 2200'              	addwfc	(??_CalculateGridSquare+3)^0,f,c
  9638  0252' 5000'              	movf	??_CalculateGridSquare^0,w,c
  9639  0254' 2600'              	addwf	(??_CalculateGridSquare+2)^0,f,c
  9640  0256' 5000'              	movf	(??_CalculateGridSquare+1)^0,w,c
  9641  0258' 2200'              	addwfc	(??_CalculateGridSquare+3)^0,f,c
  9642  025A' 5000'              	movf	(??_CalculateGridSquare+2)^0,w,c
  9643  025C' 2600'              	addwf	CalculateGridSquare@lat_min^0,f,c
  9644  025E' 5000'              	movf	(??_CalculateGridSquare+3)^0,w,c
  9645  0260' 2200'              	addwfc	(CalculateGridSquare@lat_min+1)^0,f,c
  9646  0262' 0E00               	movlw	0
  9647  0264' 2200'              	addwfc	(CalculateGridSquare@lat_min+2)^0,f,c
  9648  0266' 0E00               	movlw	0
  9649  0268' 2200'              	addwfc	(CalculateGridSquare@lat_min+3)^0,f,c
  9650  026A'                    
  9651                           ; BSR set to: 2
  9652                           ;src/gps.c: 404:  lat_min = (lat_min * 100) / 60;
  9653  026A' C058' F00D'        	movff	CalculateGridSquare@lat_min,___lmul@multiplier
  9654  026E' C059' F00E'        	movff	CalculateGridSquare@lat_min+1,___lmul@multiplier+1
  9655  0272' C05A' F00F'        	movff	CalculateGridSquare@lat_min+2,___lmul@multiplier+2
  9656  0276' C05B' F010'        	movff	CalculateGridSquare@lat_min+3,___lmul@multiplier+3
  9657  027A' 0E64               	movlw	100
  9658  027C' 6E00'              	movwf	___lmul@multiplicand^0,c
  9659  027E' 0E00               	movlw	0
  9660  0280' 6E00'              	movwf	(___lmul@multiplicand+1)^0,c
  9661  0282' 0E00               	movlw	0
  9662  0284' 6E00'              	movwf	(___lmul@multiplicand+2)^0,c
  9663  0286' 0E00               	movlw	0
  9664  0288' 6E00'              	movwf	(___lmul@multiplicand+3)^0,c
  9665  028A' EC00' F000'        	call	___lmul	;wreg free
  9666  028E' C00D' F019'        	movff	?___lmul,___lldiv@dividend
  9667  0292' C00E' F01A'        	movff	?___lmul+1,___lldiv@dividend+1
  9668  0296' C00F' F01B'        	movff	?___lmul+2,___lldiv@dividend+2
  9669  029A' C010' F01C'        	movff	?___lmul+3,___lldiv@dividend+3
  9670  029E' 0E3C               	movlw	60
  9671  02A0' 6E00'              	movwf	___lldiv@divisor^0,c
  9672  02A2' 0E00               	movlw	0
  9673  02A4' 6E00'              	movwf	(___lldiv@divisor+1)^0,c
  9674  02A6' 0E00               	movlw	0
  9675  02A8' 6E00'              	movwf	(___lldiv@divisor+2)^0,c
  9676  02AA' 0E00               	movlw	0
  9677  02AC' 6E00'              	movwf	(___lldiv@divisor+3)^0,c
  9678  02AE' EC00' F000'        	call	___lldiv	;wreg free
  9679  02B2' C019' F058'        	movff	?___lldiv,CalculateGridSquare@lat_min
  9680  02B6' C01A' F059'        	movff	?___lldiv+1,CalculateGridSquare@lat_min+1
  9681  02BA' C01B' F05A'        	movff	?___lldiv+2,CalculateGridSquare@lat_min+2
  9682  02BE' C01C' F05B'        	movff	?___lldiv+3,CalculateGridSquare@lat_min+3
  9683  02C2'                    
  9684                           ;src/gps.c: 405:  lat = lat*10000 + lat_min;
  9685  02C2' C054' F00D'        	movff	CalculateGridSquare@lat,___lmul@multiplier
  9686  02C6' C055' F00E'        	movff	CalculateGridSquare@lat+1,___lmul@multiplier+1
  9687  02CA' C056' F00F'        	movff	CalculateGridSquare@lat+2,___lmul@multiplier+2
  9688  02CE' C057' F010'        	movff	CalculateGridSquare@lat+3,___lmul@multiplier+3
  9689  02D2' 0E10               	movlw	16
  9690  02D4' 6E00'              	movwf	___lmul@multiplicand^0,c
  9691  02D6' 0E27               	movlw	39
  9692  02D8' 6E00'              	movwf	(___lmul@multiplicand+1)^0,c
  9693  02DA' 0E00               	movlw	0
  9694  02DC' 6E00'              	movwf	(___lmul@multiplicand+2)^0,c
  9695  02DE' 0E00               	movlw	0
  9696  02E0' 6E00'              	movwf	(___lmul@multiplicand+3)^0,c
  9697  02E2' EC00' F000'        	call	___lmul	;wreg free
  9698  02E6' 5000'              	movf	CalculateGridSquare@lat_min^0,w,c
  9699  02E8' 2400'              	addwf	?___lmul^0,w,c
  9700  02EA' 6E00'              	movwf	CalculateGridSquare@lat^0,c
  9701  02EC' 5000'              	movf	(CalculateGridSquare@lat_min+1)^0,w,c
  9702  02EE' 2000'              	addwfc	(?___lmul+1)^0,w,c
  9703  02F0' 6E00'              	movwf	(CalculateGridSquare@lat+1)^0,c
  9704  02F2' 5000'              	movf	(CalculateGridSquare@lat_min+2)^0,w,c
  9705  02F4' 2000'              	addwfc	(?___lmul+2)^0,w,c
  9706  02F6' 6E00'              	movwf	(CalculateGridSquare@lat+2)^0,c
  9707  02F8' 5000'              	movf	(CalculateGridSquare@lat_min+3)^0,w,c
  9708  02FA' 2000'              	addwfc	(?___lmul+3)^0,w,c
  9709  02FC' 6E00'              	movwf	(CalculateGridSquare@lat+3)^0,c
  9710  02FE'                    
  9711                           ;src/gps.c: 409:     if(GPS_lat[8] == 'S') lat = -lat;
  9712  02FE' 0E53               	movlw	83
  9713  0300' 0102               	movlb	2	; () banked
  9714  0302' 1900'              	xorwf	(_GPS_lat+8)& (0+255),w,b
  9715  0304' A4D8               	btfss	status,2,c
  9716  0306' EF00' F000'        	goto	u13131
  9717  030A' EF00' F000'        	goto	u13130
  9718  030E'                    u13131:
  9719  030E' EF00' F000'        	goto	l10507
  9720  0312'                    u13130:
  9721  0312'                    
  9722                           ; BSR set to: 2
  9723  0312' 1E00'              	comf	(CalculateGridSquare@lat+3)^0,f,c
  9724  0314' 1E00'              	comf	(CalculateGridSquare@lat+2)^0,f,c
  9725  0316' 1E00'              	comf	(CalculateGridSquare@lat+1)^0,f,c
  9726  0318' 6C00'              	negf	CalculateGridSquare@lat^0,c
  9727  031A' 0E00               	movlw	0
  9728  031C' 2200'              	addwfc	(CalculateGridSquare@lat+1)^0,f,c
  9729  031E' 2200'              	addwfc	(CalculateGridSquare@lat+2)^0,f,c
  9730  0320' 2200'              	addwfc	(CalculateGridSquare@lat+3)^0,f,c
  9731  0322'                    l10507:
  9732                           
  9733                           ; BSR set to: 2
  9734                           ;src/gps.c: 411:     lat += 900000;
  9735  0322' 0EA0               	movlw	160
  9736  0324' 2600'              	addwf	CalculateGridSquare@lat^0,f,c
  9737  0326' 0EBB               	movlw	187
  9738  0328' 2200'              	addwfc	(CalculateGridSquare@lat+1)^0,f,c
  9739  032A' 0E0D               	movlw	13
  9740  032C' 2200'              	addwfc	(CalculateGridSquare@lat+2)^0,f,c
  9741  032E' 0E00               	movlw	0
  9742  0330' 2200'              	addwfc	(CalculateGridSquare@lat+3)^0,f,c
  9743  0332'                    
  9744                           ; BSR set to: 2
  9745                           ;src/gps.c: 413:     u32 lonm = lon * 60L;
  9746  0332' C04C' F00D'        	movff	CalculateGridSquare@lon,___lmul@multiplier
  9747  0336' C04D' F00E'        	movff	CalculateGridSquare@lon+1,___lmul@multiplier+1
  9748  033A' C04E' F00F'        	movff	CalculateGridSquare@lon+2,___lmul@multiplier+2
  9749  033E' C04F' F010'        	movff	CalculateGridSquare@lon+3,___lmul@multiplier+3
  9750  0342' 0E3C               	movlw	60
  9751  0344' 6E00'              	movwf	___lmul@multiplicand^0,c
  9752  0346' 0E00               	movlw	0
  9753  0348' 6E00'              	movwf	(___lmul@multiplicand+1)^0,c
  9754  034A' 0E00               	movlw	0
  9755  034C' 6E00'              	movwf	(___lmul@multiplicand+2)^0,c
  9756  034E' 0E00               	movlw	0
  9757  0350' 6E00'              	movwf	(___lmul@multiplicand+3)^0,c
  9758  0352' EC00' F000'        	call	___lmul	;wreg free
  9759  0356' C00D' F02C'        	movff	?___lmul,CalculateGridSquare@lonm
  9760  035A' C00E' F02D'        	movff	?___lmul+1,CalculateGridSquare@lonm+1
  9761  035E' C00F' F02E'        	movff	?___lmul+2,CalculateGridSquare@lonm+2
  9762  0362' C010' F02F'        	movff	?___lmul+3,CalculateGridSquare@lonm+3
  9763  0366'                    
  9764                           ;src/gps.c: 414:     u32 longf = lonm / (20L*60L*10000L);
  9765  0366' C02C' F019'        	movff	CalculateGridSquare@lonm,___lldiv@dividend
  9766  036A' C02D' F01A'        	movff	CalculateGridSquare@lonm+1,___lldiv@dividend+1
  9767  036E' C02E' F01B'        	movff	CalculateGridSquare@lonm+2,___lldiv@dividend+2
  9768  0372' C02F' F01C'        	movff	CalculateGridSquare@lonm+3,___lldiv@dividend+3
  9769  0376' 0E00               	movlw	0
  9770  0378' 6E00'              	movwf	___lldiv@divisor^0,c
  9771  037A' 0E1B               	movlw	27
  9772  037C' 6E00'              	movwf	(___lldiv@divisor+1)^0,c
  9773  037E' 0EB7               	movlw	183
  9774  0380' 6E00'              	movwf	(___lldiv@divisor+2)^0,c
  9775  0382' 0E00               	movlw	0
  9776  0384' 6E00'              	movwf	(___lldiv@divisor+3)^0,c
  9777  0386' EC00' F000'        	call	___lldiv	;wreg free
  9778  038A' C019' F030'        	movff	?___lldiv,CalculateGridSquare@longf
  9779  038E' C01A' F031'        	movff	?___lldiv+1,CalculateGridSquare@longf+1
  9780  0392' C01B' F032'        	movff	?___lldiv+2,CalculateGridSquare@longf+2
  9781  0396' C01C' F033'        	movff	?___lldiv+3,CalculateGridSquare@longf+3
  9782  039A'                    
  9783                           ;src/gps.c: 415:     u32 lonrest1 = lonm - longf*(20L*60L*10000L);
  9784  039A' C030' F00D'        	movff	CalculateGridSquare@longf,___lmul@multiplier
  9785  039E' C031' F00E'        	movff	CalculateGridSquare@longf+1,___lmul@multiplier+1
  9786  03A2' C032' F00F'        	movff	CalculateGridSquare@longf+2,___lmul@multiplier+2
  9787  03A6' C033' F010'        	movff	CalculateGridSquare@longf+3,___lmul@multiplier+3
  9788  03AA' 0E00               	movlw	0
  9789  03AC' 6E00'              	movwf	___lmul@multiplicand^0,c
  9790  03AE' 0EE5               	movlw	229
  9791  03B0' 6E00'              	movwf	(___lmul@multiplicand+1)^0,c
  9792  03B2' 0E48               	movlw	72
  9793  03B4' 6E00'              	movwf	(___lmul@multiplicand+2)^0,c
  9794  03B6' 0EFF               	movlw	255
  9795  03B8' 6E00'              	movwf	(___lmul@multiplicand+3)^0,c
  9796  03BA' EC00' F000'        	call	___lmul	;wreg free
  9797  03BE' 5000'              	movf	CalculateGridSquare@lonm^0,w,c
  9798  03C0' 2400'              	addwf	?___lmul^0,w,c
  9799  03C2' 6E00'              	movwf	CalculateGridSquare@lonrest1^0,c
  9800  03C4' 5000'              	movf	(CalculateGridSquare@lonm+1)^0,w,c
  9801  03C6' 2000'              	addwfc	(?___lmul+1)^0,w,c
  9802  03C8' 6E00'              	movwf	(CalculateGridSquare@lonrest1+1)^0,c
  9803  03CA' 5000'              	movf	(CalculateGridSquare@lonm+2)^0,w,c
  9804  03CC' 2000'              	addwfc	(?___lmul+2)^0,w,c
  9805  03CE' 6E00'              	movwf	(CalculateGridSquare@lonrest1+2)^0,c
  9806  03D0' 5000'              	movf	(CalculateGridSquare@lonm+3)^0,w,c
  9807  03D2' 2000'              	addwfc	(?___lmul+3)^0,w,c
  9808  03D4' 6E00'              	movwf	(CalculateGridSquare@lonrest1+3)^0,c
  9809  03D6'                    
  9810                           ;src/gps.c: 416:     u32 lonmid = lonrest1 / (2L*60L*10000L);
  9811  03D6' C034' F019'        	movff	CalculateGridSquare@lonrest1,___lldiv@dividend
  9812  03DA' C035' F01A'        	movff	CalculateGridSquare@lonrest1+1,___lldiv@dividend+1
  9813  03DE' C036' F01B'        	movff	CalculateGridSquare@lonrest1+2,___lldiv@dividend+2
  9814  03E2' C037' F01C'        	movff	CalculateGridSquare@lonrest1+3,___lldiv@dividend+3
  9815  03E6' 0E80               	movlw	128
  9816  03E8' 6E00'              	movwf	___lldiv@divisor^0,c
  9817  03EA' 0E4F               	movlw	79
  9818  03EC' 6E00'              	movwf	(___lldiv@divisor+1)^0,c
  9819  03EE' 0E12               	movlw	18
  9820  03F0' 6E00'              	movwf	(___lldiv@divisor+2)^0,c
  9821  03F2' 0E00               	movlw	0
  9822  03F4' 6E00'              	movwf	(___lldiv@divisor+3)^0,c
  9823  03F6' EC00' F000'        	call	___lldiv	;wreg free
  9824  03FA' C019' F038'        	movff	?___lldiv,CalculateGridSquare@lonmid
  9825  03FE' C01A' F039'        	movff	?___lldiv+1,CalculateGridSquare@lonmid+1
  9826  0402' C01B' F03A'        	movff	?___lldiv+2,CalculateGridSquare@lonmid+2
  9827  0406' C01C' F03B'        	movff	?___lldiv+3,CalculateGridSquare@lonmid+3
  9828  040A'                    
  9829                           ;src/gps.c: 418:     u32 latm = lat * 60L;
  9830  040A' C054' F00D'        	movff	CalculateGridSquare@lat,___lmul@multiplier
  9831  040E' C055' F00E'        	movff	CalculateGridSquare@lat+1,___lmul@multiplier+1
  9832  0412' C056' F00F'        	movff	CalculateGridSquare@lat+2,___lmul@multiplier+2
  9833  0416' C057' F010'        	movff	CalculateGridSquare@lat+3,___lmul@multiplier+3
  9834  041A' 0E3C               	movlw	60
  9835  041C' 6E00'              	movwf	___lmul@multiplicand^0,c
  9836  041E' 0E00               	movlw	0
  9837  0420' 6E00'              	movwf	(___lmul@multiplicand+1)^0,c
  9838  0422' 0E00               	movlw	0
  9839  0424' 6E00'              	movwf	(___lmul@multiplicand+2)^0,c
  9840  0426' 0E00               	movlw	0
  9841  0428' 6E00'              	movwf	(___lmul@multiplicand+3)^0,c
  9842  042A' EC00' F000'        	call	___lmul	;wreg free
  9843  042E' C00D' F03C'        	movff	?___lmul,CalculateGridSquare@latm
  9844  0432' C00E' F03D'        	movff	?___lmul+1,CalculateGridSquare@latm+1
  9845  0436' C00F' F03E'        	movff	?___lmul+2,CalculateGridSquare@latm+2
  9846  043A' C010' F03F'        	movff	?___lmul+3,CalculateGridSquare@latm+3
  9847  043E'                    
  9848                           ;src/gps.c: 419:     u32 latgf = latm / (10L*60L*10000L);
  9849  043E' C03C' F019'        	movff	CalculateGridSquare@latm,___lldiv@dividend
  9850  0442' C03D' F01A'        	movff	CalculateGridSquare@latm+1,___lldiv@dividend+1
  9851  0446' C03E' F01B'        	movff	CalculateGridSquare@latm+2,___lldiv@dividend+2
  9852  044A' C03F' F01C'        	movff	CalculateGridSquare@latm+3,___lldiv@dividend+3
  9853  044E' 0E80               	movlw	128
  9854  0450' 6E00'              	movwf	___lldiv@divisor^0,c
  9855  0452' 0E8D               	movlw	141
  9856  0454' 6E00'              	movwf	(___lldiv@divisor+1)^0,c
  9857  0456' 0E5B               	movlw	91
  9858  0458' 6E00'              	movwf	(___lldiv@divisor+2)^0,c
  9859  045A' 0E00               	movlw	0
  9860  045C' 6E00'              	movwf	(___lldiv@divisor+3)^0,c
  9861  045E' EC00' F000'        	call	___lldiv	;wreg free
  9862  0462' C019' F040'        	movff	?___lldiv,CalculateGridSquare@latgf
  9863  0466' C01A' F041'        	movff	?___lldiv+1,CalculateGridSquare@latgf+1
  9864  046A' C01B' F042'        	movff	?___lldiv+2,CalculateGridSquare@latgf+2
  9865  046E' C01C' F043'        	movff	?___lldiv+3,CalculateGridSquare@latgf+3
  9866  0472'                    
  9867                           ;src/gps.c: 420:     u32 latrest1 = latm - latgf*(10L*60L*10000L);
  9868  0472' C040' F00D'        	movff	CalculateGridSquare@latgf,___lmul@multiplier
  9869  0476' C041' F00E'        	movff	CalculateGridSquare@latgf+1,___lmul@multiplier+1
  9870  047A' C042' F00F'        	movff	CalculateGridSquare@latgf+2,___lmul@multiplier+2
  9871  047E' C043' F010'        	movff	CalculateGridSquare@latgf+3,___lmul@multiplier+3
  9872  0482' 0E80               	movlw	128
  9873  0484' 6E00'              	movwf	___lmul@multiplicand^0,c
  9874  0486' 0E72               	movlw	114
  9875  0488' 6E00'              	movwf	(___lmul@multiplicand+1)^0,c
  9876  048A' 0EA4               	movlw	164
  9877  048C' 6E00'              	movwf	(___lmul@multiplicand+2)^0,c
  9878  048E' 0EFF               	movlw	255
  9879  0490' 6E00'              	movwf	(___lmul@multiplicand+3)^0,c
  9880  0492' EC00' F000'        	call	___lmul	;wreg free
  9881  0496' 5000'              	movf	CalculateGridSquare@latm^0,w,c
  9882  0498' 2400'              	addwf	?___lmul^0,w,c
  9883  049A' 6E00'              	movwf	CalculateGridSquare@latrest1^0,c
  9884  049C' 5000'              	movf	(CalculateGridSquare@latm+1)^0,w,c
  9885  049E' 2000'              	addwfc	(?___lmul+1)^0,w,c
  9886  04A0' 6E00'              	movwf	(CalculateGridSquare@latrest1+1)^0,c
  9887  04A2' 5000'              	movf	(CalculateGridSquare@latm+2)^0,w,c
  9888  04A4' 2000'              	addwfc	(?___lmul+2)^0,w,c
  9889  04A6' 6E00'              	movwf	(CalculateGridSquare@latrest1+2)^0,c
  9890  04A8' 5000'              	movf	(CalculateGridSquare@latm+3)^0,w,c
  9891  04AA' 2000'              	addwfc	(?___lmul+3)^0,w,c
  9892  04AC' 6E00'              	movwf	(CalculateGridSquare@latrest1+3)^0,c
  9893  04AE'                    
  9894                           ;src/gps.c: 421:     u32 latmid = latrest1 / (1L*60L*10000L);
  9895  04AE' C044' F019'        	movff	CalculateGridSquare@latrest1,___lldiv@dividend
  9896  04B2' C045' F01A'        	movff	CalculateGridSquare@latrest1+1,___lldiv@dividend+1
  9897  04B6' C046' F01B'        	movff	CalculateGridSquare@latrest1+2,___lldiv@dividend+2
  9898  04BA' C047' F01C'        	movff	CalculateGridSquare@latrest1+3,___lldiv@dividend+3
  9899  04BE' 0EC0               	movlw	192
  9900  04C0' 6E00'              	movwf	___lldiv@divisor^0,c
  9901  04C2' 0E27               	movlw	39
  9902  04C4' 6E00'              	movwf	(___lldiv@divisor+1)^0,c
  9903  04C6' 0E09               	movlw	9
  9904  04C8' 6E00'              	movwf	(___lldiv@divisor+2)^0,c
  9905  04CA' 0E00               	movlw	0
  9906  04CC' 6E00'              	movwf	(___lldiv@divisor+3)^0,c
  9907  04CE' EC00' F000'        	call	___lldiv	;wreg free
  9908  04D2' C019' F048'        	movff	?___lldiv,CalculateGridSquare@latmid
  9909  04D6' C01A' F049'        	movff	?___lldiv+1,CalculateGridSquare@latmid+1
  9910  04DA' C01B' F04A'        	movff	?___lldiv+2,CalculateGridSquare@latmid+2
  9911  04DE' C01C' F04B'        	movff	?___lldiv+3,CalculateGridSquare@latmid+3
  9912  04E2'                    
  9913                           ;src/gps.c: 423:     grid[0] = 'A' + longf;
  9914  04E2' 5000'              	movf	CalculateGridSquare@longf^0,w,c
  9915  04E4' 0F41               	addlw	65
  9916  04E6' 0102               	movlb	2	; () banked
  9917  04E8' 6F00'              	movwf	CalculateGridSquare@grid& (0+255),b
  9918  04EA'                    
  9919                           ; BSR set to: 2
  9920                           ;src/gps.c: 424:     grid[2] = '0' + lonmid;
  9921  04EA' 5000'              	movf	CalculateGridSquare@lonmid^0,w,c
  9922  04EC' 0F30               	addlw	48
  9923  04EE' 6F00'              	movwf	(CalculateGridSquare@grid+2)& (0+255),b
  9924  04F0'                    
  9925                           ; BSR set to: 2
  9926                           ;src/gps.c: 425:     grid[4] = 'A' + ((lonrest1 - lonmid*(2L*60L*10000L)) / (5L*10000L))
      +                          ;
  9927  04F0' C038' F00D'        	movff	CalculateGridSquare@lonmid,___lmul@multiplier
  9928  04F4' C039' F00E'        	movff	CalculateGridSquare@lonmid+1,___lmul@multiplier+1
  9929  04F8' C03A' F00F'        	movff	CalculateGridSquare@lonmid+2,___lmul@multiplier+2
  9930  04FC' C03B' F010'        	movff	CalculateGridSquare@lonmid+3,___lmul@multiplier+3
  9931  0500' 0E80               	movlw	128
  9932  0502' 6E00'              	movwf	___lmul@multiplicand^0,c
  9933  0504' 0EB0               	movlw	176
  9934  0506' 6E00'              	movwf	(___lmul@multiplicand+1)^0,c
  9935  0508' 0EED               	movlw	237
  9936  050A' 6E00'              	movwf	(___lmul@multiplicand+2)^0,c
  9937  050C' 0EFF               	movlw	255
  9938  050E' 6E00'              	movwf	(___lmul@multiplicand+3)^0,c
  9939  0510' EC00' F000'        	call	___lmul	;wreg free
  9940  0514' 5000'              	movf	CalculateGridSquare@lonrest1^0,w,c
  9941  0516' 2400'              	addwf	?___lmul^0,w,c
  9942  0518' 6E00'              	movwf	___lldiv@dividend^0,c
  9943  051A' 5000'              	movf	(CalculateGridSquare@lonrest1+1)^0,w,c
  9944  051C' 2000'              	addwfc	(?___lmul+1)^0,w,c
  9945  051E' 6E00'              	movwf	(___lldiv@dividend+1)^0,c
  9946  0520' 5000'              	movf	(CalculateGridSquare@lonrest1+2)^0,w,c
  9947  0522' 2000'              	addwfc	(?___lmul+2)^0,w,c
  9948  0524' 6E00'              	movwf	(___lldiv@dividend+2)^0,c
  9949  0526' 5000'              	movf	(CalculateGridSquare@lonrest1+3)^0,w,c
  9950  0528' 2000'              	addwfc	(?___lmul+3)^0,w,c
  9951  052A' 6E00'              	movwf	(___lldiv@dividend+3)^0,c
  9952  052C' 0E50               	movlw	80
  9953  052E' 6E00'              	movwf	___lldiv@divisor^0,c
  9954  0530' 0EC3               	movlw	195
  9955  0532' 6E00'              	movwf	(___lldiv@divisor+1)^0,c
  9956  0534' 0E00               	movlw	0
  9957  0536' 6E00'              	movwf	(___lldiv@divisor+2)^0,c
  9958  0538' 0E00               	movlw	0
  9959  053A' 6E00'              	movwf	(___lldiv@divisor+3)^0,c
  9960  053C' EC00' F000'        	call	___lldiv	;wreg free
  9961  0540' 5000'              	movf	?___lldiv^0,w,c
  9962  0542' 0F41               	addlw	65
  9963  0544' 0102               	movlb	2	; () banked
  9964  0546' 6F00'              	movwf	(CalculateGridSquare@grid+4)& (0+255),b
  9965  0548'                    
  9966                           ; BSR set to: 2
  9967                           ;src/gps.c: 427:     grid[1] = 'A' + latgf;
  9968  0548' 5000'              	movf	CalculateGridSquare@latgf^0,w,c
  9969  054A' 0F41               	addlw	65
  9970  054C' 6F00'              	movwf	(CalculateGridSquare@grid+1)& (0+255),b
  9971  054E'                    
  9972                           ; BSR set to: 2
  9973                           ;src/gps.c: 428:     grid[3] = '0' + latmid;
  9974  054E' 5000'              	movf	CalculateGridSquare@latmid^0,w,c
  9975  0550' 0F30               	addlw	48
  9976  0552' 6F00'              	movwf	(CalculateGridSquare@grid+3)& (0+255),b
  9977  0554'                    
  9978                           ; BSR set to: 2
  9979                           ;src/gps.c: 429:     grid[5] = 'A' + ((latrest1 - latmid*(1L*60L*10000L)) / (25L*1000L))
      +                          ;
  9980  0554' C048' F00D'        	movff	CalculateGridSquare@latmid,___lmul@multiplier
  9981  0558' C049' F00E'        	movff	CalculateGridSquare@latmid+1,___lmul@multiplier+1
  9982  055C' C04A' F00F'        	movff	CalculateGridSquare@latmid+2,___lmul@multiplier+2
  9983  0560' C04B' F010'        	movff	CalculateGridSquare@latmid+3,___lmul@multiplier+3
  9984  0564' 0E40               	movlw	64
  9985  0566' 6E00'              	movwf	___lmul@multiplicand^0,c
  9986  0568' 0ED8               	movlw	216
  9987  056A' 6E00'              	movwf	(___lmul@multiplicand+1)^0,c
  9988  056C' 0EF6               	movlw	246
  9989  056E' 6E00'              	movwf	(___lmul@multiplicand+2)^0,c
  9990  0570' 0EFF               	movlw	255
  9991  0572' 6E00'              	movwf	(___lmul@multiplicand+3)^0,c
  9992  0574' EC00' F000'        	call	___lmul	;wreg free
  9993  0578' 5000'              	movf	CalculateGridSquare@latrest1^0,w,c
  9994  057A' 2400'              	addwf	?___lmul^0,w,c
  9995  057C' 6E00'              	movwf	___lldiv@dividend^0,c
  9996  057E' 5000'              	movf	(CalculateGridSquare@latrest1+1)^0,w,c
  9997  0580' 2000'              	addwfc	(?___lmul+1)^0,w,c
  9998  0582' 6E00'              	movwf	(___lldiv@dividend+1)^0,c
  9999  0584' 5000'              	movf	(CalculateGridSquare@latrest1+2)^0,w,c
 10000  0586' 2000'              	addwfc	(?___lmul+2)^0,w,c
 10001  0588' 6E00'              	movwf	(___lldiv@dividend+2)^0,c
 10002  058A' 5000'              	movf	(CalculateGridSquare@latrest1+3)^0,w,c
 10003  058C' 2000'              	addwfc	(?___lmul+3)^0,w,c
 10004  058E' 6E00'              	movwf	(___lldiv@dividend+3)^0,c
 10005  0590' 0EA8               	movlw	168
 10006  0592' 6E00'              	movwf	___lldiv@divisor^0,c
 10007  0594' 0E61               	movlw	97
 10008  0596' 6E00'              	movwf	(___lldiv@divisor+1)^0,c
 10009  0598' 0E00               	movlw	0
 10010  059A' 6E00'              	movwf	(___lldiv@divisor+2)^0,c
 10011  059C' 0E00               	movlw	0
 10012  059E' 6E00'              	movwf	(___lldiv@divisor+3)^0,c
 10013  05A0' EC00' F000'        	call	___lldiv	;wreg free
 10014  05A4' 5000'              	movf	?___lldiv^0,w,c
 10015  05A6' 0F41               	addlw	65
 10016  05A8' 0102               	movlb	2	; () banked
 10017  05AA' 6F00'              	movwf	(CalculateGridSquare@grid+5)& (0+255),b
 10018  05AC'                    
 10019                           ; BSR set to: 2
 10020                           ;src/gps.c: 431:     grid[6] = 0;
 10021  05AC' 0E00               	movlw	0
 10022  05AE' 6F00'              	movwf	(CalculateGridSquare@grid+6)& (0+255),b
 10023  05B0'                    
 10024                           ; BSR set to: 2
 10025                           ;src/gps.c: 433:  return grid;
 10026  05B0' 0E00'              	movlw	low CalculateGridSquare@grid
 10027  05B2' 6E00'              	movwf	?_CalculateGridSquare^0,c
 10028  05B4' 0E00'              	movlw	high CalculateGridSquare@grid
 10029  05B6' 6E00'              	movwf	(?_CalculateGridSquare+1)^0,c
 10030  05B8'                    
 10031                           ; BSR set to: 2
 10032  05B8' 0012               	return		;funcret
 10033  05BA'                    __end_of_CalculateGridSquare:
 10034                           	opt callstack 0
 10035                           
 10036 ;; *************** function _setADF4351frequency *****************
 10037 ;; Defined at:
 10038 ;;		line 191 in file "src/main.c"
 10039 ;; Parameters:    Size  Location     Type
 10040 ;;  force           1    wreg     unsigned char 
 10041 ;; Auto vars:     Size  Location     Type
 10042 ;;  force           1   61[BANK0 ] unsigned char 
 10043 ;;  timeout         2   62[BANK0 ] int 
 10044 ;;  p               2   64[BANK0 ] PTR const unsigned long 
 10045 ;;		 -> freq_table_27_OPT(40), freq_table_27_26(40), freq_table_25_25(40), freq_table_25_24(40), 
 10046 ;;  sw              1   66[BANK0 ] unsigned char 
 10047 ;; Return value:  Size  Location     Type
 10048 ;;                  1    wreg      void 
 10049 ;; Registers used:
 10050 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10051 ;; Tracked objects:
 10052 ;;		On entry : 0/0
 10053 ;;		On exit  : 0/0
 10054 ;;		Unchanged: 0/0
 10055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10056 ;;      Params:         0       0       0       0       0       0       0
 10057 ;;      Locals:         0       6       0       0       0       0       0
 10058 ;;      Temps:          2       0       0       0       0       0       0
 10059 ;;      Totals:         2       6       0       0       0       0       0
 10060 ;;Total ram usage:        8 bytes
 10061 ;; Hardware stack levels used:    1
 10062 ;; Hardware stack levels required when called:   11
 10063 ;; This function calls:
 10064 ;;		_adf4351_get_lock
 10065 ;;		_adf4351_set_freq
 10066 ;;		_printf
 10067 ;;		_read_switch
 10068 ;; This function is called by:
 10069 ;;		_main
 10070 ;; This function uses a non-reentrant model
 10071 ;;
 10072                           
 10073                           	psect	text20
 10074  0000'                    __ptext20:
 10075                           	opt callstack 0
 10076  0000'                    _setADF4351frequency:
 10077                           	opt callstack 19
 10078                           
 10079                           ; BSR set to: 2
 10080                           ;incstack = 0
 10081                           ;setADF4351frequency@force stored from wreg
 10082  0000' 0100               	movlb	0	; () banked
 10083  0002' 6F00'              	movwf	setADF4351frequency@force& (0+255),b
 10084  0004'                    
 10085                           ;src/main.c: 191: static void setADF4351frequency(u8 force);src/main.c: 192: {;src/main.
      +                          c: 193:  const u32 *p = freq_table_25_24;
 10086  0004' 0E00'              	movlw	low _freq_table_25_24
 10087  0006' 0100               	movlb	0	; () banked
 10088  0008' 6F00'              	movwf	setADF4351frequency@p& (0+255),b
 10089  000A' 0E00'              	movlw	high _freq_table_25_24
 10090  000C' 6F00'              	movwf	(setADF4351frequency@p+1)& (0+255),b
 10091  000E'                    
 10092                           ; BSR set to: 0
 10093                           ;src/main.c: 194:  if(currentLO == 25) p = freq_table_25_25;
 10094  000E' 0E19               	movlw	25
 10095  0010' 1800'              	xorwf	_currentLO^0,w,c
 10096  0012' A4D8               	btfss	status,2,c
 10097  0014' EF00' F000'        	goto	u13871
 10098  0018' EF00' F000'        	goto	u13870
 10099  001C'                    u13871:
 10100  001C' EF00' F000'        	goto	l1083
 10101  0020'                    u13870:
 10102  0020'                    
 10103                           ; BSR set to: 0
 10104  0020' 0E00'              	movlw	low _freq_table_25_25
 10105  0022' 6F00'              	movwf	setADF4351frequency@p& (0+255),b
 10106  0024' 0E00'              	movlw	high _freq_table_25_25
 10107  0026' 6F00'              	movwf	(setADF4351frequency@p+1)& (0+255),b
 10108  0028'                    l1083:
 10109                           
 10110                           ; BSR set to: 0
 10111                           ;src/main.c: 195:  if(currentLO == 26) p = freq_table_27_26;
 10112  0028' 0E1A               	movlw	26
 10113  002A' 1800'              	xorwf	_currentLO^0,w,c
 10114  002C' A4D8               	btfss	status,2,c
 10115  002E' EF00' F000'        	goto	u13881
 10116  0032' EF00' F000'        	goto	u13880
 10117  0036'                    u13881:
 10118  0036' EF00' F000'        	goto	l1084
 10119  003A'                    u13880:
 10120  003A'                    
 10121                           ; BSR set to: 0
 10122  003A' 0E00'              	movlw	low _freq_table_27_26
 10123  003C' 6F00'              	movwf	setADF4351frequency@p& (0+255),b
 10124  003E' 0E00'              	movlw	high _freq_table_27_26
 10125  0040' 6F00'              	movwf	(setADF4351frequency@p+1)& (0+255),b
 10126  0042'                    l1084:
 10127                           
 10128                           ; BSR set to: 0
 10129                           ;src/main.c: 196:  if(currentLO == 27) p = freq_table_27_OPT;
 10130  0042' 0E1B               	movlw	27
 10131  0044' 1800'              	xorwf	_currentLO^0,w,c
 10132  0046' A4D8               	btfss	status,2,c
 10133  0048' EF00' F000'        	goto	u13891
 10134  004C' EF00' F000'        	goto	u13890
 10135  0050'                    u13891:
 10136  0050' EF00' F000'        	goto	l11085
 10137  0054'                    u13890:
 10138  0054'                    
 10139                           ; BSR set to: 0
 10140  0054' 0E00'              	movlw	low _freq_table_27_OPT
 10141  0056' 6F00'              	movwf	setADF4351frequency@p& (0+255),b
 10142  0058' 0E00'              	movlw	high _freq_table_27_OPT
 10143  005A' 6F00'              	movwf	(setADF4351frequency@p+1)& (0+255),b
 10144  005C'                    l11085:
 10145                           
 10146                           ; BSR set to: 0
 10147                           ;src/main.c: 200:  if(force)
 10148  005C' 5100'              	movf	setADF4351frequency@force& (0+255),w,b
 10149  005E' B4D8               	btfsc	status,2,c
 10150  0060' EF00' F000'        	goto	u13901
 10151  0064' EF00' F000'        	goto	u13900
 10152  0068'                    u13901:
 10153  0068' EF00' F000'        	goto	l11089
 10154  006C'                    u13900:
 10155  006C'                    
 10156                           ; BSR set to: 0
 10157                           ;src/main.c: 201:  {;src/main.c: 202:   adf4351_set_qrg = 1;
 10158  006C' 0E01               	movlw	1
 10159  006E' CFE8 F000'         	movff	wreg,_adf4351_set_qrg
 10160  0072'                    l11089:
 10161                           
 10162                           ; BSR set to: 0
 10163                           ;src/main.c: 206:  u8 sw = read_switch();
 10164  0072' EC00' F000'        	call	_read_switch	;wreg free
 10165  0076' 0100               	movlb	0	; () banked
 10166  0078' 6F00'              	movwf	setADF4351frequency@sw& (0+255),b
 10167  007A'                    
 10168                           ; BSR set to: 0
 10169                           ;src/main.c: 207:  if(sw > 9) return;
 10170  007A' 0E09               	movlw	9
 10171  007C' 6500'              	cpfsgt	setADF4351frequency@sw& (0+255),b
 10172  007E' EF00' F000'        	goto	u13911
 10173  0082' EF00' F000'        	goto	u13910
 10174  0086'                    u13911:
 10175  0086' EF00' F000'        	goto	l11095
 10176  008A'                    u13910:
 10177  008A' EF00' F000'        	goto	l1088
 10178  008E'                    l11095:
 10179                           
 10180                           ; BSR set to: 0
 10181                           ;src/main.c: 209:  if(sw != actualADFswitch || force || adf4351_set_qrg == 3)
 10182  008E' 5100'              	movf	_actualADFswitch& (0+255),w,b
 10183  0090' 1900'              	xorwf	setADF4351frequency@sw& (0+255),w,b
 10184  0092' A4D8               	btfss	status,2,c
 10185  0094' EF00' F000'        	goto	u13921
 10186  0098' EF00' F000'        	goto	u13920
 10187  009C'                    u13921:
 10188  009C' EF00' F000'        	goto	l11101
 10189  00A0'                    u13920:
 10190  00A0'                    
 10191                           ; BSR set to: 0
 10192  00A0' 5100'              	movf	setADF4351frequency@force& (0+255),w,b
 10193  00A2' A4D8               	btfss	status,2,c
 10194  00A4' EF00' F000'        	goto	u13931
 10195  00A8' EF00' F000'        	goto	u13930
 10196  00AC'                    u13931:
 10197  00AC' EF00' F000'        	goto	l11101
 10198  00B0'                    u13930:
 10199  00B0'                    
 10200                           ; BSR set to: 0
 10201  00B0' C000' FFE8         	movff	_adf4351_set_qrg,wreg
 10202  00B4' 0A03               	xorlw	3
 10203  00B6' A4D8               	btfss	status,2,c
 10204  00B8' EF00' F000'        	goto	u13941
 10205  00BC' EF00' F000'        	goto	u13940
 10206  00C0'                    u13941:
 10207  00C0' EF00' F000'        	goto	l1088
 10208  00C4'                    u13940:
 10209  00C4'                    l11101:
 10210                           
 10211                           ; BSR set to: 0
 10212                           ;src/main.c: 210:  {;src/main.c: 211:   if(adf4351_set_qrg == 3)
 10213  00C4' C000' FFE8         	movff	_adf4351_set_qrg,wreg
 10214  00C8' 0A03               	xorlw	3
 10215  00CA' A4D8               	btfss	status,2,c
 10216  00CC' EF00' F000'        	goto	u13951
 10217  00D0' EF00' F000'        	goto	u13950
 10218  00D4'                    u13951:
 10219  00D4' EF00' F000'        	goto	l11105
 10220  00D8'                    u13950:
 10221  00D8'                    
 10222                           ; BSR set to: 0
 10223                           ;src/main.c: 212:    adf4351_set_qrg = 0;
 10224  00D8' 0E00               	movlw	0
 10225  00DA' CFE8 F000'         	movff	wreg,_adf4351_set_qrg
 10226  00DE'                    l11105:
 10227                           
 10228                           ; BSR set to: 0
 10229                           ;src/main.c: 214:   printf("ADF:LNBLO:%d\nADF:sw:%d=%ldkHz\n",currentLO,sw,p[sw]);
 10230  00DE' 0E00'              	movlw	low STR_93
 10231  00E0' 6F00'              	movwf	printf@fmt& (0+255),b
 10232  00E2' 0E00'              	movlw	high STR_93
 10233  00E4' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
 10234  00E6' C00A' F01F'        	movff	_currentLO,?_printf+2
 10235  00EA' 6B00'              	clrf	(?_printf+3)& (0+255),b
 10236  00EC' C042' F021'        	movff	setADF4351frequency@sw,?_printf+4
 10237  00F0' 6B00'              	clrf	(?_printf+5)& (0+255),b
 10238  00F2' 5100'              	movf	setADF4351frequency@sw& (0+255),w,b
 10239  00F4' 0D04               	mullw	4
 10240  00F6' C040' F062'        	movff	setADF4351frequency@p,??_setADF4351frequency
 10241  00FA' C041' F063'        	movff	setADF4351frequency@p+1,??_setADF4351frequency+1
 10242  00FE' 50F3               	movf	243,w,c
 10243  0100' 2600'              	addwf	??_setADF4351frequency^0,f,c
 10244  0102' 50F4               	movf	244,w,c
 10245  0104' 2200'              	addwfc	(??_setADF4351frequency+1)^0,f,c
 10246  0106' C062' FFF6         	movff	??_setADF4351frequency,tblptrl
 10247  010A' C063' FFF7         	movff	??_setADF4351frequency+1,tblptrh
 10248  010E'                    	if	0	;tblptru may be non-zero
 10249  010E'                    	endif
 10250  010E'                    	if	0	;tblptru may be non-zero
 10251  010E'                    	endif
 10252  010E' 0009               	tblrd		*+
 10253  0110' CFF5 F023'         	movff	tablat,?_printf+6
 10254  0114' 0009               	tblrd		*+
 10255  0116' CFF5 F024'         	movff	tablat,?_printf+7
 10256  011A' 0009               	tblrd		*+
 10257  011C' CFF5 F025'         	movff	tablat,?_printf+8
 10258  0120' 000A               	tblrd		*-
 10259  0122' CFF5 F026'         	movff	tablat,?_printf+9
 10260  0126' EC00' F000'        	call	_printf	;wreg free
 10261  012A'                    
 10262                           ;src/main.c: 215:   actualADFswitch = sw;
 10263  012A' C042' F00C'        	movff	setADF4351frequency@sw,_actualADFswitch
 10264  012E'                    
 10265                           ;src/main.c: 217:   int timeout = 1000;
 10266  012E' 0E03               	movlw	3
 10267  0130' 0100               	movlb	0	; () banked
 10268  0132' 6F00'              	movwf	(setADF4351frequency@timeout+1)& (0+255),b
 10269  0134' 0EE8               	movlw	232
 10270  0136' 6F00'              	movwf	setADF4351frequency@timeout& (0+255),b
 10271  0138'                    
 10272                           ; BSR set to: 0
 10273                           ;src/main.c: 222:   adf4351_set_freq(&g_adf4351, 700000);
 10274  0138' 0E00'              	movlw	low _g_adf4351
 10275  013A' 6F00'              	movwf	adf4351_set_freq@ctx& (0+255),b
 10276  013C' 0E00'              	movlw	high _g_adf4351
 10277  013E' 6F00'              	movwf	(adf4351_set_freq@ctx+1)& (0+255),b
 10278  0140' 0E60               	movlw	96
 10279  0142' 6F00'              	movwf	adf4351_set_freq@freq& (0+255),b
 10280  0144' 0EAE               	movlw	174
 10281  0146' 6F00'              	movwf	(adf4351_set_freq@freq+1)& (0+255),b
 10282  0148' 0E0A               	movlw	10
 10283  014A' 6F00'              	movwf	(adf4351_set_freq@freq+2)& (0+255),b
 10284  014C' 0E00               	movlw	0
 10285  014E' 6F00'              	movwf	(adf4351_set_freq@freq+3)& (0+255),b
 10286  0150' EC00' F000'        	call	_adf4351_set_freq	;wreg free
 10287  0154'                    
 10288                           ;src/main.c: 223:   _delaywdt((unsigned long)((250)*(8000000/4000.0)));
 10289  0154' 0E02               	movlw	2
 10290  0156' 6E00'              	movwf	(??_setADF4351frequency+1)^0,c
 10291  0158' 0EE8               	movlw	232
 10292  015A' 6E00'              	movwf	??_setADF4351frequency^0,c
 10293  015C' 0E52               	movlw	82
 10294  015E'                    u14057:
 10295  015E' 0004               	clrwdt	
 10296  0160' 2EE8               	decfsz	wreg,f,c
 10297  0162' D7FD               	bra	u14057
 10298  0164' 2E00'              	decfsz	??_setADF4351frequency^0,f,c
 10299  0166' D7FB               	bra	u14057
 10300  0168' 2E00'              	decfsz	(??_setADF4351frequency+1)^0,f,c
 10301  016A' D7F9               	bra	u14057
 10302  016C'                    
 10303                           ;src/main.c: 225:   adf4351_set_freq(&g_adf4351, p[sw]);
 10304  016C' 0E00'              	movlw	low _g_adf4351
 10305  016E' 0100               	movlb	0	; () banked
 10306  0170' 6F00'              	movwf	adf4351_set_freq@ctx& (0+255),b
 10307  0172' 0E00'              	movlw	high _g_adf4351
 10308  0174' 6F00'              	movwf	(adf4351_set_freq@ctx+1)& (0+255),b
 10309  0176' 5100'              	movf	setADF4351frequency@sw& (0+255),w,b
 10310  0178' 0D04               	mullw	4
 10311  017A' C040' F062'        	movff	setADF4351frequency@p,??_setADF4351frequency
 10312  017E' C041' F063'        	movff	setADF4351frequency@p+1,??_setADF4351frequency+1
 10313  0182' 50F3               	movf	243,w,c
 10314  0184' 2600'              	addwf	??_setADF4351frequency^0,f,c
 10315  0186' 50F4               	movf	244,w,c
 10316  0188' 2200'              	addwfc	(??_setADF4351frequency+1)^0,f,c
 10317  018A' C062' FFF6         	movff	??_setADF4351frequency,tblptrl
 10318  018E' C063' FFF7         	movff	??_setADF4351frequency+1,tblptrh
 10319  0192'                    	if	0	;tblptru may be non-zero
 10320  0192'                    	endif
 10321  0192'                    	if	0	;tblptru may be non-zero
 10322  0192'                    	endif
 10323  0192' 0009               	tblrd		*+
 10324  0194' CFF5 F02D'         	movff	tablat,adf4351_set_freq@freq
 10325  0198' 0009               	tblrd		*+
 10326  019A' CFF5 F02E'         	movff	tablat,adf4351_set_freq@freq+1
 10327  019E' 0009               	tblrd		*+
 10328  01A0' CFF5 F02F'         	movff	tablat,adf4351_set_freq@freq+2
 10329  01A4' 000A               	tblrd		*-
 10330  01A6' CFF5 F030'         	movff	tablat,adf4351_set_freq@freq+3
 10331  01AA' EC00' F000'        	call	_adf4351_set_freq	;wreg free
 10332                           
 10333                           ;src/main.c: 227:         while((adf4351_get_lock(&g_adf4351) == 0) && timeout)
 10334  01AE' EF00' F000'        	goto	l11121
 10335  01B2'                    l11117:
 10336                           
 10337                           ; BSR set to: 0
 10338                           ;src/main.c: 228:   {;src/main.c: 229:             timeout--;
 10339  01B2' 0700'              	decf	setADF4351frequency@timeout& (0+255),f,b
 10340  01B4' A0D8               	btfss	status,0,c
 10341  01B6' 0700'              	decf	(setADF4351frequency@timeout+1)& (0+255),f,b
 10342  01B8'                    
 10343                           ; BSR set to: 0
 10344                           ;src/main.c: 230:             _delaywdt((unsigned long)((1)*(8000000/4000.0)));
 10345  01B8' 0E02               	movlw	2
 10346  01BA' 6E00'              	movwf	??_setADF4351frequency^0,c
 10347  01BC' 0EF2               	movlw	242
 10348  01BE'                    u14067:
 10349  01BE' 0004               	clrwdt	
 10350  01C0' 2EE8               	decfsz	wreg,f,c
 10351  01C2' D7FD               	bra	u14067
 10352  01C4' 2E00'              	decfsz	??_setADF4351frequency^0,f,c
 10353  01C6' D7FB               	bra	u14067
 10354  01C8' 0004               	clrwdt	
 10355  01CA' F000               	nop	
 10356  01CC'                    l11121:
 10357                           
 10358                           ;src/main.c: 227:         while((adf4351_get_lock(&g_adf4351) == 0) && timeout)
 10359  01CC' 0E00'              	movlw	low _g_adf4351
 10360  01CE' 6E00'              	movwf	adf4351_get_lock@ctx^0,c
 10361  01D0' 0E00'              	movlw	high _g_adf4351
 10362  01D2' 6E00'              	movwf	(adf4351_get_lock@ctx+1)^0,c
 10363  01D4' EC00' F000'        	call	_adf4351_get_lock	;wreg free
 10364  01D8' 5000'              	movf	?_adf4351_get_lock^0,w,c
 10365  01DA' 1000'              	iorwf	(?_adf4351_get_lock+1)^0,w,c
 10366  01DC' A4D8               	btfss	status,2,c
 10367  01DE' EF00' F000'        	goto	u13961
 10368  01E2' EF00' F000'        	goto	u13960
 10369  01E6'                    u13961:
 10370  01E6' EF00' F000'        	goto	l11125
 10371  01EA'                    u13960:
 10372  01EA' 0100               	movlb	0	; () banked
 10373  01EC' 5100'              	movf	setADF4351frequency@timeout& (0+255),w,b
 10374  01EE' 1100'              	iorwf	(setADF4351frequency@timeout+1)& (0+255),w,b
 10375  01F0' A4D8               	btfss	status,2,c
 10376  01F2' EF00' F000'        	goto	u13971
 10377  01F6' EF00' F000'        	goto	u13970
 10378  01FA'                    u13971:
 10379  01FA' EF00' F000'        	goto	l11117
 10380  01FE'                    u13970:
 10381  01FE'                    l11125:
 10382                           
 10383                           ;src/main.c: 232:         if(timeout <= 0)
 10384  01FE' 0100               	movlb	0	; () banked
 10385  0200' BF00'              	btfsc	(setADF4351frequency@timeout+1)& (0+255),7,b
 10386  0202' EF00' F000'        	goto	u13980
 10387  0206' 5100'              	movf	(setADF4351frequency@timeout+1)& (0+255),w,b
 10388  0208' E106               	bnz	u13981
 10389  020A' 0500'              	decf	setADF4351frequency@timeout& (0+255),w,b
 10390  020C' B0D8               	btfsc	status,0,c
 10391  020E' EF00' F000'        	goto	u13981
 10392  0212' EF00' F000'        	goto	u13980
 10393  0216'                    u13981:
 10394  0216' EF00' F000'        	goto	l1088
 10395  021A'                    u13980:
 10396  021A'                    
 10397                           ; BSR set to: 0
 10398                           ;src/main.c: 233:             printf("ADF:lock TO\n");
 10399  021A' 0E00'              	movlw	low STR_94
 10400  021C' 6F00'              	movwf	printf@fmt& (0+255),b
 10401  021E' 0E00'              	movlw	high STR_94
 10402  0220' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
 10403  0222' EC00' F000'        	call	_printf	;wreg free
 10404  0226'                    l1088:
 10405  0226' 0012               	return		;funcret
 10406  0228'                    __end_of_setADF4351frequency:
 10407                           	opt callstack 0
 10408                           
 10409 ;; *************** function _read_switch *****************
 10410 ;; Defined at:
 10411 ;;		line 178 in file "src/main.c"
 10412 ;; Parameters:    Size  Location     Type
 10413 ;;		None
 10414 ;; Auto vars:     Size  Location     Type
 10415 ;;  rb4             1   19[COMRAM] unsigned char 
 10416 ;;  rb3             1   18[COMRAM] unsigned char 
 10417 ;;  rb2             1   17[COMRAM] unsigned char 
 10418 ;;  rb1             1   16[COMRAM] unsigned char 
 10419 ;; Return value:  Size  Location     Type
 10420 ;;                  1    wreg      unsigned char 
 10421 ;; Registers used:
 10422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10423 ;; Tracked objects:
 10424 ;;		On entry : 0/0
 10425 ;;		On exit  : 0/0
 10426 ;;		Unchanged: 0/0
 10427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10428 ;;      Params:         0       0       0       0       0       0       0
 10429 ;;      Locals:         4       0       0       0       0       0       0
 10430 ;;      Temps:          3       0       0       0       0       0       0
 10431 ;;      Totals:         7       0       0       0       0       0       0
 10432 ;;Total ram usage:        7 bytes
 10433 ;; Hardware stack levels used:    1
 10434 ;; Hardware stack levels required when called:    2
 10435 ;; This function calls:
 10436 ;;		Nothing
 10437 ;; This function is called by:
 10438 ;;		_setADF4351frequency
 10439 ;; This function uses a non-reentrant model
 10440 ;;
 10441                           
 10442                           	psect	text21
 10443  0000'                    __ptext21:
 10444                           	opt callstack 0
 10445  0000'                    _read_switch:
 10446                           	opt callstack 27
 10447  0000'                    
 10448                           ;src/main.c: 180:     u8 rb1, rb2, rb3, rb4;;src/main.c: 183:     rb1 = ((*((PIN_SJ3)->p
      +                          PORT) & (PIN_SJ3)->mask) != 0)?0:1;
 10449  0000' 0E00'              	movlw	low (_PIN_SJ3_DEF+4)
 10450  0002' 6EF6               	movwf	tblptrl,c
 10451  0004' 0E00'              	movlw	high (_PIN_SJ3_DEF+4)
 10452  0006' 6EF7               	movwf	tblptrh,c
 10453  0008'                    	if	0	;tblptru may be non-zero
 10454  0008'                    	endif
 10455  0008'                    	if	0	;tblptru may be non-zero
 10456  0008'                    	endif
 10457  0008' 0008               	tblrd		*
 10458  000A' CFF5 F00D'         	movff	tablat,??_read_switch
 10459  000E' 0E00'              	movlw	low _PIN_SJ3_DEF
 10460  0010' 6EF6               	movwf	tblptrl,c
 10461  0012'                    	if	1	;There is more than 1 active tblptr byte
 10462  0012' 0E00'              	movlw	high _PIN_SJ3_DEF
 10463  0014' 6EF7               	movwf	tblptrh,c
 10464  0016'                    	endif
 10465  0016'                    	if	0	;There are less than 3 active tblptr bytes
 10466  0016'                    	endif
 10467  0016' 0009               	tblrd		*+
 10468  0018' CFF5 F00E'         	movff	tablat,??_read_switch+1
 10469  001C' 0009               	tblrd		*+
 10470  001E' CFF5 F00F'         	movff	tablat,??_read_switch+2
 10471  0022' C00E' FFD9         	movff	??_read_switch+1,fsr2l
 10472  0026' C00F' FFDA         	movff	??_read_switch+2,fsr2h
 10473  002A' 50DF               	movf	indf2,w,c
 10474  002C' 1400'              	andwf	??_read_switch^0,w,c
 10475  002E' 0900               	iorlw	0
 10476  0030' B4D8               	btfsc	status,2,c
 10477  0032' EF00' F000'        	goto	u9001
 10478  0036' EF00' F000'        	goto	u9000
 10479  003A'                    u9001:
 10480  003A' 0E01               	movlw	1
 10481  003C' EF00' F000'        	goto	u9010
 10482  0040'                    u9000:
 10483  0040' 0E00               	movlw	0
 10484  0042'                    u9010:
 10485  0042' 6E00'              	movwf	read_switch@rb1^0,c
 10486                           
 10487                           ;src/main.c: 184:     rb2 = ((*((PIN_SJ4)->pPORT) & (PIN_SJ4)->mask) != 0)?0:1;
 10488  0044' 0E00'              	movlw	low (_PIN_SJ4_DEF+4)
 10489  0046' 6EF6               	movwf	tblptrl,c
 10490  0048' 0E00'              	movlw	high (_PIN_SJ4_DEF+4)
 10491  004A' 6EF7               	movwf	tblptrh,c
 10492  004C'                    	if	0	;tblptru may be non-zero
 10493  004C'                    	endif
 10494  004C'                    	if	0	;tblptru may be non-zero
 10495  004C'                    	endif
 10496  004C' 0008               	tblrd		*
 10497  004E' CFF5 F00D'         	movff	tablat,??_read_switch
 10498  0052' 0E00'              	movlw	low _PIN_SJ4_DEF
 10499  0054' 6EF6               	movwf	tblptrl,c
 10500  0056'                    	if	1	;There is more than 1 active tblptr byte
 10501  0056' 0E00'              	movlw	high _PIN_SJ4_DEF
 10502  0058' 6EF7               	movwf	tblptrh,c
 10503  005A'                    	endif
 10504  005A'                    	if	0	;There are less than 3 active tblptr bytes
 10505  005A'                    	endif
 10506  005A' 0009               	tblrd		*+
 10507  005C' CFF5 F00E'         	movff	tablat,??_read_switch+1
 10508  0060' 0009               	tblrd		*+
 10509  0062' CFF5 F00F'         	movff	tablat,??_read_switch+2
 10510  0066' C00E' FFD9         	movff	??_read_switch+1,fsr2l
 10511  006A' C00F' FFDA         	movff	??_read_switch+2,fsr2h
 10512  006E' 50DF               	movf	indf2,w,c
 10513  0070' 1400'              	andwf	??_read_switch^0,w,c
 10514  0072' 0900               	iorlw	0
 10515  0074' B4D8               	btfsc	status,2,c
 10516  0076' EF00' F000'        	goto	u9021
 10517  007A' EF00' F000'        	goto	u9020
 10518  007E'                    u9021:
 10519  007E' 0E01               	movlw	1
 10520  0080' EF00' F000'        	goto	u9030
 10521  0084'                    u9020:
 10522  0084' 0E00               	movlw	0
 10523  0086'                    u9030:
 10524  0086' 6E00'              	movwf	read_switch@rb2^0,c
 10525                           
 10526                           ;src/main.c: 185:     rb3 = ((*((PIN_SJ5)->pPORT) & (PIN_SJ5)->mask) != 0)?0:1;
 10527  0088' 0E00'              	movlw	low (_PIN_SJ5_DEF+4)
 10528  008A' 6EF6               	movwf	tblptrl,c
 10529  008C' 0E00'              	movlw	high (_PIN_SJ5_DEF+4)
 10530  008E' 6EF7               	movwf	tblptrh,c
 10531  0090'                    	if	0	;tblptru may be non-zero
 10532  0090'                    	endif
 10533  0090'                    	if	0	;tblptru may be non-zero
 10534  0090'                    	endif
 10535  0090' 0008               	tblrd		*
 10536  0092' CFF5 F00D'         	movff	tablat,??_read_switch
 10537  0096' 0E00'              	movlw	low _PIN_SJ5_DEF
 10538  0098' 6EF6               	movwf	tblptrl,c
 10539  009A'                    	if	1	;There is more than 1 active tblptr byte
 10540  009A' 0E00'              	movlw	high _PIN_SJ5_DEF
 10541  009C' 6EF7               	movwf	tblptrh,c
 10542  009E'                    	endif
 10543  009E'                    	if	0	;There are less than 3 active tblptr bytes
 10544  009E'                    	endif
 10545  009E' 0009               	tblrd		*+
 10546  00A0' CFF5 F00E'         	movff	tablat,??_read_switch+1
 10547  00A4' 0009               	tblrd		*+
 10548  00A6' CFF5 F00F'         	movff	tablat,??_read_switch+2
 10549  00AA' C00E' FFD9         	movff	??_read_switch+1,fsr2l
 10550  00AE' C00F' FFDA         	movff	??_read_switch+2,fsr2h
 10551  00B2' 50DF               	movf	indf2,w,c
 10552  00B4' 1400'              	andwf	??_read_switch^0,w,c
 10553  00B6' 0900               	iorlw	0
 10554  00B8' B4D8               	btfsc	status,2,c
 10555  00BA' EF00' F000'        	goto	u9041
 10556  00BE' EF00' F000'        	goto	u9040
 10557  00C2'                    u9041:
 10558  00C2' 0E01               	movlw	1
 10559  00C4' EF00' F000'        	goto	u9050
 10560  00C8'                    u9040:
 10561  00C8' 0E00               	movlw	0
 10562  00CA'                    u9050:
 10563  00CA' 6E00'              	movwf	read_switch@rb3^0,c
 10564                           
 10565                           ;src/main.c: 186:     rb4 = ((*((PIN_SJ6)->pPORT) & (PIN_SJ6)->mask) != 0)?0:1;
 10566  00CC' 0E00'              	movlw	low (_PIN_SJ6_DEF+4)
 10567  00CE' 6EF6               	movwf	tblptrl,c
 10568  00D0' 0E00'              	movlw	high (_PIN_SJ6_DEF+4)
 10569  00D2' 6EF7               	movwf	tblptrh,c
 10570  00D4'                    	if	0	;tblptru may be non-zero
 10571  00D4'                    	endif
 10572  00D4'                    	if	0	;tblptru may be non-zero
 10573  00D4'                    	endif
 10574  00D4' 0008               	tblrd		*
 10575  00D6' CFF5 F00D'         	movff	tablat,??_read_switch
 10576  00DA' 0E00'              	movlw	low _PIN_SJ6_DEF
 10577  00DC' 6EF6               	movwf	tblptrl,c
 10578  00DE'                    	if	1	;There is more than 1 active tblptr byte
 10579  00DE' 0E00'              	movlw	high _PIN_SJ6_DEF
 10580  00E0' 6EF7               	movwf	tblptrh,c
 10581  00E2'                    	endif
 10582  00E2'                    	if	0	;There are less than 3 active tblptr bytes
 10583  00E2'                    	endif
 10584  00E2' 0009               	tblrd		*+
 10585  00E4' CFF5 F00E'         	movff	tablat,??_read_switch+1
 10586  00E8' 0009               	tblrd		*+
 10587  00EA' CFF5 F00F'         	movff	tablat,??_read_switch+2
 10588  00EE' C00E' FFD9         	movff	??_read_switch+1,fsr2l
 10589  00F2' C00F' FFDA         	movff	??_read_switch+2,fsr2h
 10590  00F6' 50DF               	movf	indf2,w,c
 10591  00F8' 1400'              	andwf	??_read_switch^0,w,c
 10592  00FA' 0900               	iorlw	0
 10593  00FC' B4D8               	btfsc	status,2,c
 10594  00FE' EF00' F000'        	goto	u9061
 10595  0102' EF00' F000'        	goto	u9060
 10596  0106'                    u9061:
 10597  0106' 0E01               	movlw	1
 10598  0108' EF00' F000'        	goto	u9070
 10599  010C'                    u9060:
 10600  010C' 0E00               	movlw	0
 10601  010E'                    u9070:
 10602  010E' 6E00'              	movwf	read_switch@rb4^0,c
 10603  0110'                    
 10604                           ;src/main.c: 188:     return (rb4<<0) | (rb3<<1) | (rb2<<2) | (rb1<<3);
 10605  0110' C010' F00D'        	movff	read_switch@rb1,??_read_switch
 10606  0114' 90D8               	bcf	status,0,c
 10607  0116' 3600'              	rlcf	??_read_switch^0,f,c
 10608  0118' 90D8               	bcf	status,0,c
 10609  011A' 3600'              	rlcf	??_read_switch^0,f,c
 10610  011C' 90D8               	bcf	status,0,c
 10611  011E' 3600'              	rlcf	??_read_switch^0,f,c
 10612  0120' C011' F00E'        	movff	read_switch@rb2,??_read_switch+1
 10613  0124' 90D8               	bcf	status,0,c
 10614  0126' 3600'              	rlcf	(??_read_switch+1)^0,f,c
 10615  0128' 90D8               	bcf	status,0,c
 10616  012A' 3600'              	rlcf	(??_read_switch+1)^0,f,c
 10617  012C' 5000'              	movf	read_switch@rb3^0,w,c
 10618  012E' 2400'              	addwf	read_switch@rb3^0,w,c
 10619  0130' 1000'              	iorwf	(??_read_switch+1)^0,w,c
 10620  0132' 1000'              	iorwf	??_read_switch^0,w,c
 10621  0134' 1000'              	iorwf	read_switch@rb4^0,w,c
 10622  0136' 0012               	return		;funcret
 10623  0138'                    __end_of_read_switch:
 10624                           	opt callstack 0
 10625                           
 10626 ;; *************** function _adf4351_set_freq *****************
 10627 ;; Defined at:
 10628 ;;		line 72 in file "src/driver/adf4351.c"
 10629 ;; Parameters:    Size  Location     Type
 10630 ;;  ctx             2   43[BANK0 ] PTR struct adf4351_ctx
 10631 ;;		 -> g_adf4351(55), 
 10632 ;;  freq            4   45[BANK0 ] unsigned long 
 10633 ;; Auto vars:     Size  Location     Type
 10634 ;;  fcorr           4   57[BANK0 ] long 
 10635 ;; Return value:  Size  Location     Type
 10636 ;;                  2   43[BANK0 ] int 
 10637 ;; Registers used:
 10638 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10639 ;; Tracked objects:
 10640 ;;		On entry : 0/0
 10641 ;;		On exit  : 0/0
 10642 ;;		Unchanged: 0/0
 10643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10644 ;;      Params:         0       6       0       0       0       0       0
 10645 ;;      Locals:         0       8       0       0       0       0       0
 10646 ;;      Temps:          0       4       0       0       0       0       0
 10647 ;;      Totals:         0      18       0       0       0       0       0
 10648 ;;Total ram usage:       18 bytes
 10649 ;; Hardware stack levels used:    1
 10650 ;; Hardware stack levels required when called:   10
 10651 ;; This function calls:
 10652 ;;		___aldiv
 10653 ;;		___lldiv
 10654 ;;		_adf4351_calc_counters
 10655 ;;		_adf4351_setup
 10656 ;;		_calc_mixer_corr_value
 10657 ;;		_printf
 10658 ;; This function is called by:
 10659 ;;		_setADF4351frequency
 10660 ;; This function uses a non-reentrant model
 10661 ;;
 10662                           
 10663                           	psect	text22
 10664  0000'                    __ptext22:
 10665                           	opt callstack 0
 10666  0000'                    _adf4351_set_freq:
 10667                           	opt callstack 19
 10668  0000'                    
 10669                           ;src/driver/adf4351.c: 72: int adf4351_set_freq(adf4351_ctx* ctx, u32 freq);src/driver/a
      +                          df4351.c: 73: {;src/driver/adf4351.c: 75:  if(!ctx->init) return -3;
 10670  0000' C02B' FFD9         	movff	adf4351_set_freq@ctx,fsr2l
 10671  0004' C02C' FFDA         	movff	adf4351_set_freq@ctx+1,fsr2h
 10672  0008' 50DE               	movf	postinc2,w,c
 10673  000A' 10DE               	iorwf	postinc2,w,c
 10674  000C' A4D8               	btfss	status,2,c
 10675  000E' EF00' F000'        	goto	u12561
 10676  0012' EF00' F000'        	goto	u12560
 10677  0016'                    u12561:
 10678  0016' EF00' F000'        	goto	l10193
 10679  001A'                    u12560:
 10680  001A' EF00' F000'        	goto	l71
 10681  001E'                    l10193:
 10682                           
 10683                           ;src/driver/adf4351.c: 78:  s32 fcorr = 0;
 10684  001E' 0E00               	movlw	0
 10685  0020' 0100               	movlb	0	; () banked
 10686  0022' 6F00'              	movwf	adf4351_set_freq@fcorr& (0+255),b
 10687  0024' 0E00               	movlw	0
 10688  0026' 6F00'              	movwf	(adf4351_set_freq@fcorr+1)& (0+255),b
 10689  0028' 0E00               	movlw	0
 10690  002A' 6F00'              	movwf	(adf4351_set_freq@fcorr+2)& (0+255),b
 10691  002C' 0E00               	movlw	0
 10692  002E' 6F00'              	movwf	(adf4351_set_freq@fcorr+3)& (0+255),b
 10693  0030'                    
 10694                           ; BSR set to: 0
 10695                           ;src/driver/adf4351.c: 79:  if(GPS_lock == 1 && ext10MHzReference == 0 && use_GPS == 1)
 10696  0030' 0500'              	decf	_GPS_lock& (0+255),w,b
 10697  0032' A4D8               	btfss	status,2,c
 10698  0034' EF00' F000'        	goto	u12571
 10699  0038' EF00' F000'        	goto	u12570
 10700  003C'                    u12571:
 10701  003C' EF00' F000'        	goto	l10203
 10702  0040'                    u12570:
 10703  0040'                    
 10704                           ; BSR set to: 0
 10705  0040' 5100'              	movf	_ext10MHzReference& (0+255),w,b
 10706  0042' A4D8               	btfss	status,2,c
 10707  0044' EF00' F000'        	goto	u12581
 10708  0048' EF00' F000'        	goto	u12580
 10709  004C'                    u12581:
 10710  004C' EF00' F000'        	goto	l10203
 10711  0050'                    u12580:
 10712  0050'                    
 10713                           ; BSR set to: 0
 10714                           ;src/driver/adf4351.c: 80:  {;src/driver/adf4351.c: 81:   fcorr = calc_mixer_corr_value(
      +                          );
 10715  0050' EC00' F000'        	call	_calc_mixer_corr_value	;wreg free
 10716  0054' C027' F039'        	movff	?_calc_mixer_corr_value,adf4351_set_freq@fcorr
 10717  0058' C028' F03A'        	movff	?_calc_mixer_corr_value+1,adf4351_set_freq@fcorr+1
 10718  005C' C029' F03B'        	movff	?_calc_mixer_corr_value+2,adf4351_set_freq@fcorr+2
 10719  0060' C02A' F03C'        	movff	?_calc_mixer_corr_value+3,adf4351_set_freq@fcorr+3
 10720  0064'                    
 10721                           ;src/driver/adf4351.c: 82:   freq -= fcorr;
 10722  0064' 0100               	movlb	0	; () banked
 10723  0066' 5100'              	movf	adf4351_set_freq@fcorr& (0+255),w,b
 10724  0068' 5F00'              	subwf	adf4351_set_freq@freq& (0+255),f,b
 10725  006A' 5100'              	movf	(adf4351_set_freq@fcorr+1)& (0+255),w,b
 10726  006C' 5B00'              	subwfb	(adf4351_set_freq@freq+1)& (0+255),f,b
 10727  006E' 5100'              	movf	(adf4351_set_freq@fcorr+2)& (0+255),w,b
 10728  0070' 5B00'              	subwfb	(adf4351_set_freq@freq+2)& (0+255),f,b
 10729  0072' 5100'              	movf	(adf4351_set_freq@fcorr+3)& (0+255),w,b
 10730  0074' 5B00'              	subwfb	(adf4351_set_freq@freq+3)& (0+255),f,b
 10731  0076'                    l10203:
 10732                           
 10733                           ; BSR set to: 0
 10734                           ;src/driver/adf4351.c: 85:  if(freq < 699980 || freq > 700020)
 10735  0076' 5100'              	movf	(adf4351_set_freq@freq+3)& (0+255),w,b
 10736  0078' E10D               	bnz	u12590
 10737  007A' 0E4C               	movlw	76
 10738  007C' 5D00'              	subwf	adf4351_set_freq@freq& (0+255),w,b
 10739  007E' 0EAE               	movlw	174
 10740  0080' 5900'              	subwfb	(adf4351_set_freq@freq+1)& (0+255),w,b
 10741  0082' 0E0A               	movlw	10
 10742  0084' 5900'              	subwfb	(adf4351_set_freq@freq+2)& (0+255),w,b
 10743  0086' A0D8               	btfss	status,0,c
 10744  0088' EF00' F000'        	goto	u12591
 10745  008C' EF00' F000'        	goto	u12590
 10746  0090'                    u12591:
 10747  0090' EF00' F000'        	goto	l10207
 10748  0094'                    u12590:
 10749  0094'                    
 10750                           ; BSR set to: 0
 10751  0094' 5100'              	movf	(adf4351_set_freq@freq+3)& (0+255),w,b
 10752  0096' E10D               	bnz	u12600
 10753  0098' 0E75               	movlw	117
 10754  009A' 5D00'              	subwf	adf4351_set_freq@freq& (0+255),w,b
 10755  009C' 0EAE               	movlw	174
 10756  009E' 5900'              	subwfb	(adf4351_set_freq@freq+1)& (0+255),w,b
 10757  00A0' 0E0A               	movlw	10
 10758  00A2' 5900'              	subwfb	(adf4351_set_freq@freq+2)& (0+255),w,b
 10759  00A4' A0D8               	btfss	status,0,c
 10760  00A6' EF00' F000'        	goto	u12601
 10761  00AA' EF00' F000'        	goto	u12600
 10762  00AE'                    u12601:
 10763  00AE' EF00' F000'        	goto	l10209
 10764  00B2'                    u12600:
 10765  00B2'                    l10207:
 10766                           
 10767                           ; BSR set to: 0
 10768                           ;src/driver/adf4351.c: 86:   printf("ADF:%ld kHz (corr:%ld)\n",freq,fcorr);
 10769  00B2' 0E00'              	movlw	low STR_1
 10770  00B4' 6F00'              	movwf	printf@fmt& (0+255),b
 10771  00B6' 0E00'              	movlw	high STR_1
 10772  00B8' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
 10773  00BA' C02D' F01F'        	movff	adf4351_set_freq@freq,?_printf+2
 10774  00BE' C02E' F020'        	movff	adf4351_set_freq@freq+1,?_printf+3
 10775  00C2' C02F' F021'        	movff	adf4351_set_freq@freq+2,?_printf+4
 10776  00C6' C030' F022'        	movff	adf4351_set_freq@freq+3,?_printf+5
 10777  00CA' C039' F023'        	movff	adf4351_set_freq@fcorr,?_printf+6
 10778  00CE' C03A' F024'        	movff	adf4351_set_freq@fcorr+1,?_printf+7
 10779  00D2' C03B' F025'        	movff	adf4351_set_freq@fcorr+2,?_printf+8
 10780  00D6' C03C' F026'        	movff	adf4351_set_freq@fcorr+3,?_printf+9
 10781  00DA' EC00' F000'        	call	_printf	;wreg free
 10782  00DE'                    l10209:
 10783                           
 10784                           ;src/driver/adf4351.c: 88:     g_freq = freq;
 10785  00DE' C02D' F008'        	movff	adf4351_set_freq@freq,_g_freq
 10786  00E2' C02E' F009'        	movff	adf4351_set_freq@freq+1,_g_freq+1
 10787  00E6' C02F' F00A'        	movff	adf4351_set_freq@freq+2,_g_freq+2
 10788  00EA' C030' F00B'        	movff	adf4351_set_freq@freq+3,_g_freq+3
 10789  00EE'                    
 10790                           ;src/driver/adf4351.c: 90:  ctx->ref = 40000;
 10791  00EE' 0100               	movlb	0	; () banked
 10792  00F0' EE20 F02B          	lfsr	2,43
 10793  00F4' 5100'              	movf	adf4351_set_freq@ctx& (0+255),w,b
 10794  00F6' 26D9               	addwf	fsr2l,f,c
 10795  00F8' 5100'              	movf	(adf4351_set_freq@ctx+1)& (0+255),w,b
 10796  00FA' 22DA               	addwfc	fsr2h,f,c
 10797  00FC' 0E40               	movlw	64
 10798  00FE' 6EDE               	movwf	postinc2,c
 10799  0100' 0E9C               	movlw	156
 10800  0102' 6EDE               	movwf	postinc2,c
 10801  0104' 0E00               	movlw	0
 10802  0106' 6EDE               	movwf	postinc2,c
 10803  0108' 0E00               	movlw	0
 10804  010A' 6EDD               	movwf	postdec2,c
 10805  010C'                    
 10806                           ; BSR set to: 0
 10807                           ;src/driver/adf4351.c: 91:  ctx->vco_freq = freq;
 10808  010C' EE20 F033          	lfsr	2,51
 10809  0110' 5100'              	movf	adf4351_set_freq@ctx& (0+255),w,b
 10810  0112' 26D9               	addwf	fsr2l,f,c
 10811  0114' 5100'              	movf	(adf4351_set_freq@ctx+1)& (0+255),w,b
 10812  0116' 22DA               	addwfc	fsr2h,f,c
 10813  0118' C02D' FFDE         	movff	adf4351_set_freq@freq,postinc2
 10814  011C' C02E' FFDE         	movff	adf4351_set_freq@freq+1,postinc2
 10815  0120' C02F' FFDE         	movff	adf4351_set_freq@freq+2,postinc2
 10816  0124' C030' FFDE         	movff	adf4351_set_freq@freq+3,postinc2
 10817  0128'                    
 10818                           ; BSR set to: 0
 10819                           ;src/driver/adf4351.c: 92:     ctx->reg1.prescaler = 1;
 10820  0128' EE20 F006          	lfsr	2,6
 10821  012C' 5100'              	movf	adf4351_set_freq@ctx& (0+255),w,b
 10822  012E' 26D9               	addwf	fsr2l,f,c
 10823  0130' 5100'              	movf	(adf4351_set_freq@ctx+1)& (0+255),w,b
 10824  0132' 22DA               	addwfc	fsr2h,f,c
 10825  0134' 0E01               	movlw	1
 10826  0136' 6EDF               	movwf	indf2,c
 10827  0138'                    
 10828                           ; BSR set to: 0
 10829                           ;src/driver/adf4351.c: 95:  if(ctx->vco_freq < 550000)
 10830  0138' EE20 F033          	lfsr	2,51
 10831  013C' 5100'              	movf	adf4351_set_freq@ctx& (0+255),w,b
 10832  013E' 26D9               	addwf	fsr2l,f,c
 10833  0140' 5100'              	movf	(adf4351_set_freq@ctx+1)& (0+255),w,b
 10834  0142' 22DA               	addwfc	fsr2h,f,c
 10835  0144' 0E03               	movlw	3
 10836  0146' 50DB               	movf	plusw2,w,c
 10837  0148' E10B               	bnz	u12611
 10838  014A' 0E70               	movlw	112
 10839  014C' 5CDE               	subwf	postinc2,w,c
 10840  014E' 0E64               	movlw	100
 10841  0150' 58DE               	subwfb	postinc2,w,c
 10842  0152' 0E08               	movlw	8
 10843  0154' 58DE               	subwfb	postinc2,w,c
 10844  0156' B0D8               	btfsc	status,0,c
 10845  0158' EF00' F000'        	goto	u12611
 10846  015C' EF00' F000'        	goto	u12610
 10847  0160'                    u12611:
 10848  0160' EF00' F000'        	goto	l10221
 10849  0164'                    u12610:
 10850  0164'                    
 10851                           ; BSR set to: 0
 10852                           ;src/driver/adf4351.c: 96:   ctx->reg4.divsel = 3;
 10853  0164' EE20 F021          	lfsr	2,33
 10854  0168' 5100'              	movf	adf4351_set_freq@ctx& (0+255),w,b
 10855  016A' 26D9               	addwf	fsr2l,f,c
 10856  016C' 5100'              	movf	(adf4351_set_freq@ctx+1)& (0+255),w,b
 10857  016E' 22DA               	addwfc	fsr2h,f,c
 10858  0170' 0E03               	movlw	3
 10859  0172' 6EDF               	movwf	indf2,c
 10860  0174' EF00' F000'        	goto	l77
 10861  0178'                    l10221:
 10862                           
 10863                           ; BSR set to: 0
 10864  0178' EE20 F033          	lfsr	2,51
 10865  017C' 5100'              	movf	adf4351_set_freq@ctx& (0+255),w,b
 10866  017E' 26D9               	addwf	fsr2l,f,c
 10867  0180' 5100'              	movf	(adf4351_set_freq@ctx+1)& (0+255),w,b
 10868  0182' 22DA               	addwfc	fsr2h,f,c
 10869  0184' 0E03               	movlw	3
 10870  0186' 50DB               	movf	plusw2,w,c
 10871  0188' E10B               	bnz	u12621
 10872  018A' 0EE0               	movlw	224
 10873  018C' 5CDE               	subwf	postinc2,w,c
 10874  018E' 0EC8               	movlw	200
 10875  0190' 58DE               	subwfb	postinc2,w,c
 10876  0192' 0E10               	movlw	16
 10877  0194' 58DE               	subwfb	postinc2,w,c
 10878  0196' B0D8               	btfsc	status,0,c
 10879  0198' EF00' F000'        	goto	u12621
 10880  019C' EF00' F000'        	goto	u12620
 10881  01A0'                    u12621:
 10882  01A0' EF00' F000'        	goto	l10225
 10883  01A4'                    u12620:
 10884  01A4'                    
 10885                           ; BSR set to: 0
 10886                           ;src/driver/adf4351.c: 98:   ctx->reg4.divsel = 2;
 10887  01A4' EE20 F021          	lfsr	2,33
 10888  01A8' 5100'              	movf	adf4351_set_freq@ctx& (0+255),w,b
 10889  01AA' 26D9               	addwf	fsr2l,f,c
 10890  01AC' 5100'              	movf	(adf4351_set_freq@ctx+1)& (0+255),w,b
 10891  01AE' 22DA               	addwfc	fsr2h,f,c
 10892  01B0' 0E02               	movlw	2
 10893  01B2' 6EDF               	movwf	indf2,c
 10894  01B4' EF00' F000'        	goto	l77
 10895  01B8'                    l10225:
 10896                           
 10897                           ; BSR set to: 0
 10898                           ;src/driver/adf4351.c: 100:   ctx->reg4.divsel = 1;
 10899  01B8' EE20 F021          	lfsr	2,33
 10900  01BC' 5100'              	movf	adf4351_set_freq@ctx& (0+255),w,b
 10901  01BE' 26D9               	addwf	fsr2l,f,c
 10902  01C0' 5100'              	movf	(adf4351_set_freq@ctx+1)& (0+255),w,b
 10903  01C2' 22DA               	addwfc	fsr2h,f,c
 10904  01C4' 0E01               	movlw	1
 10905  01C6' 6EDF               	movwf	indf2,c
 10906  01C8'                    l77:
 10907                           
 10908                           ; BSR set to: 0
 10909                           ;src/driver/adf4351.c: 102:  ctx->reg2.rcnt = 5;
 10910  01C8' EE20 F00F          	lfsr	2,15
 10911  01CC' 5100'              	movf	adf4351_set_freq@ctx& (0+255),w,b
 10912  01CE' 26D9               	addwf	fsr2l,f,c
 10913  01D0' 5100'              	movf	(adf4351_set_freq@ctx+1)& (0+255),w,b
 10914  01D2' 22DA               	addwfc	fsr2h,f,c
 10915  01D4' 0E05               	movlw	5
 10916  01D6' 6EDE               	movwf	postinc2,c
 10917  01D8' 0E00               	movlw	0
 10918  01DA' 6EDD               	movwf	postdec2,c
 10919  01DC'                    
 10920                           ; BSR set to: 0
 10921                           ;src/driver/adf4351.c: 103:  ctx->pfd = ctx->ref / ctx->reg2.rcnt;
 10922  01DC' EE20 F02B          	lfsr	2,43
 10923  01E0' 5100'              	movf	adf4351_set_freq@ctx& (0+255),w,b
 10924  01E2' 26D9               	addwf	fsr2l,f,c
 10925  01E4' 5100'              	movf	(adf4351_set_freq@ctx+1)& (0+255),w,b
 10926  01E6' 22DA               	addwfc	fsr2h,f,c
 10927  01E8' CFDE F019'         	movff	postinc2,___lldiv@dividend
 10928  01EC' CFDE F01A'         	movff	postinc2,___lldiv@dividend+1
 10929  01F0' CFDE F01B'         	movff	postinc2,___lldiv@dividend+2
 10930  01F4' CFDE F01C'         	movff	postinc2,___lldiv@dividend+3
 10931  01F8' EE20 F00F          	lfsr	2,15
 10932  01FC' 5100'              	movf	adf4351_set_freq@ctx& (0+255),w,b
 10933  01FE' 26D9               	addwf	fsr2l,f,c
 10934  0200' 5100'              	movf	(adf4351_set_freq@ctx+1)& (0+255),w,b
 10935  0202' 22DA               	addwfc	fsr2h,f,c
 10936  0204' CFDE F031'         	movff	postinc2,??_adf4351_set_freq
 10937  0208' CFDD F032'         	movff	postdec2,??_adf4351_set_freq+1
 10938  020C' C031' F01D'        	movff	??_adf4351_set_freq,___lldiv@divisor
 10939  0210' C032' F01E'        	movff	??_adf4351_set_freq+1,___lldiv@divisor+1
 10940  0214' 6A00'              	clrf	(___lldiv@divisor+2)^0,c
 10941  0216' 6A00'              	clrf	(___lldiv@divisor+3)^0,c
 10942  0218' EC00' F000'        	call	___lldiv	;wreg free
 10943  021C' 0100               	movlb	0	; () banked
 10944  021E' EE20 F02F          	lfsr	2,47
 10945  0222' 5100'              	movf	adf4351_set_freq@ctx& (0+255),w,b
 10946  0224' 26D9               	addwf	fsr2l,f,c
 10947  0226' 5100'              	movf	(adf4351_set_freq@ctx+1)& (0+255),w,b
 10948  0228' 22DA               	addwfc	fsr2h,f,c
 10949  022A' C019' FFDE         	movff	?___lldiv,postinc2
 10950  022E' C01A' FFDE         	movff	?___lldiv+1,postinc2
 10951  0232' C01B' FFDE         	movff	?___lldiv+2,postinc2
 10952  0236' C01C' FFDE         	movff	?___lldiv+3,postinc2
 10953  023A'                    
 10954                           ; BSR set to: 0
 10955                           ;src/driver/adf4351.c: 104:  ctx->reg2.refdiv = 0;
 10956  023A' EE20 F00E          	lfsr	2,14
 10957  023E' 5100'              	movf	adf4351_set_freq@ctx& (0+255),w,b
 10958  0240' 26D9               	addwf	fsr2l,f,c
 10959  0242' 5100'              	movf	(adf4351_set_freq@ctx+1)& (0+255),w,b
 10960  0244' 22DA               	addwfc	fsr2h,f,c
 10961  0246' 0E00               	movlw	0
 10962  0248' 6EDF               	movwf	indf2,c
 10963  024A'                    
 10964                           ; BSR set to: 0
 10965                           ;src/driver/adf4351.c: 105:  ctx->reg2.refdbl = 0;
 10966  024A' EE20 F00D          	lfsr	2,13
 10967  024E' 5100'              	movf	adf4351_set_freq@ctx& (0+255),w,b
 10968  0250' 26D9               	addwf	fsr2l,f,c
 10969  0252' 5100'              	movf	(adf4351_set_freq@ctx+1)& (0+255),w,b
 10970  0254' 22DA               	addwfc	fsr2h,f,c
 10971  0256' 0E00               	movlw	0
 10972  0258' 6EDF               	movwf	indf2,c
 10973  025A'                    
 10974                           ; BSR set to: 0
 10975                           ;src/driver/adf4351.c: 106:  ctx->reg3.bscm = 0;
 10976  025A' EE20 F019          	lfsr	2,25
 10977  025E' 5100'              	movf	adf4351_set_freq@ctx& (0+255),w,b
 10978  0260' 26D9               	addwf	fsr2l,f,c
 10979  0262' 5100'              	movf	(adf4351_set_freq@ctx+1)& (0+255),w,b
 10980  0264' 22DA               	addwfc	fsr2h,f,c
 10981  0266' 0E00               	movlw	0
 10982  0268' 6EDF               	movwf	indf2,c
 10983                           
 10984                           ;src/driver/adf4351.c: 107:  ctx->reg4.bsclkdiv = (40000/ctx->reg2.rcnt)/125+1;
 10985  026A' EE20 F00F          	lfsr	2,15
 10986  026E' 5100'              	movf	adf4351_set_freq@ctx& (0+255),w,b
 10987  0270' 26D9               	addwf	fsr2l,f,c
 10988  0272' 5100'              	movf	(adf4351_set_freq@ctx+1)& (0+255),w,b
 10989  0274' 22DA               	addwfc	fsr2h,f,c
 10990  0276' CFDE F031'         	movff	postinc2,??_adf4351_set_freq
 10991  027A' CFDD F032'         	movff	postdec2,??_adf4351_set_freq+1
 10992  027E' C031' F011'        	movff	??_adf4351_set_freq,___aldiv@divisor
 10993  0282' C032' F012'        	movff	??_adf4351_set_freq+1,___aldiv@divisor+1
 10994  0286' 6A00'              	clrf	(___aldiv@divisor+2)^0,c
 10995  0288' 6A00'              	clrf	(___aldiv@divisor+3)^0,c
 10996  028A' 0E40               	movlw	64
 10997  028C' 6E00'              	movwf	___aldiv@dividend^0,c
 10998  028E' 0E9C               	movlw	156
 10999  0290' 6E00'              	movwf	(___aldiv@dividend+1)^0,c
 11000  0292' 0E00               	movlw	0
 11001  0294' 6E00'              	movwf	(___aldiv@dividend+2)^0,c
 11002  0296' 0E00               	movlw	0
 11003  0298' 6E00'              	movwf	(___aldiv@dividend+3)^0,c
 11004  029A' EC00' F000'        	call	___aldiv	;wreg free
 11005  029E' C00D' F035'        	movff	?___aldiv,_adf4351_set_freq$3878
 11006  02A2' C00E' F036'        	movff	?___aldiv+1,_adf4351_set_freq$3878+1
 11007  02A6' C00F' F037'        	movff	?___aldiv+2,_adf4351_set_freq$3878+2
 11008  02AA' C010' F038'        	movff	?___aldiv+3,_adf4351_set_freq$3878+3
 11009                           
 11010                           ;src/driver/adf4351.c: 107:  ctx->reg4.bsclkdiv = (40000/ctx->reg2.rcnt)/125+1;
 11011  02AE' 0100               	movlb	0	; () banked
 11012  02B0' EE20 F022          	lfsr	2,34
 11013  02B4' 5100'              	movf	adf4351_set_freq@ctx& (0+255),w,b
 11014  02B6' 26D9               	addwf	fsr2l,f,c
 11015  02B8' 5100'              	movf	(adf4351_set_freq@ctx+1)& (0+255),w,b
 11016  02BA' 22DA               	addwfc	fsr2h,f,c
 11017  02BC' C035' F00D'        	movff	_adf4351_set_freq$3878,___aldiv@dividend
 11018  02C0' C036' F00E'        	movff	_adf4351_set_freq$3878+1,___aldiv@dividend+1
 11019  02C4' C037' F00F'        	movff	_adf4351_set_freq$3878+2,___aldiv@dividend+2
 11020  02C8' C038' F010'        	movff	_adf4351_set_freq$3878+3,___aldiv@dividend+3
 11021  02CC' 0E7D               	movlw	125
 11022  02CE' 6E00'              	movwf	___aldiv@divisor^0,c
 11023  02D0' 0E00               	movlw	0
 11024  02D2' 6E00'              	movwf	(___aldiv@divisor+1)^0,c
 11025  02D4' 0E00               	movlw	0
 11026  02D6' 6E00'              	movwf	(___aldiv@divisor+2)^0,c
 11027  02D8' 0E00               	movlw	0
 11028  02DA' 6E00'              	movwf	(___aldiv@divisor+3)^0,c
 11029  02DC' EC00' F000'        	call	___aldiv	;wreg free
 11030  02E0' 2800'              	incf	?___aldiv^0,w,c
 11031  02E2' 6EDF               	movwf	indf2,c
 11032  02E4'                    
 11033                           ;src/driver/adf4351.c: 110:  adf4351_calc_counters(ctx);
 11034  02E4' C02B' F03E'        	movff	adf4351_set_freq@ctx,adf4351_calc_counters@ctx
 11035  02E8' C02C' F03F'        	movff	adf4351_set_freq@ctx+1,adf4351_calc_counters@ctx+1
 11036  02EC' EC00' F000'        	call	_adf4351_calc_counters	;wreg free
 11037  02F0'                    
 11038                           ;src/driver/adf4351.c: 112:  if(ctx->reg4.vcopd == 0) {
 11039  02F0' 0100               	movlb	0	; () banked
 11040  02F2' EE20 F023          	lfsr	2,35
 11041  02F6' 5100'              	movf	adf4351_set_freq@ctx& (0+255),w,b
 11042  02F8' 26D9               	addwf	fsr2l,f,c
 11043  02FA' 5100'              	movf	(adf4351_set_freq@ctx+1)& (0+255),w,b
 11044  02FC' 22DA               	addwfc	fsr2h,f,c
 11045  02FE' 50DF               	movf	indf2,w,c
 11046  0300' A4D8               	btfss	status,2,c
 11047  0302' EF00' F000'        	goto	u12631
 11048  0306' EF00' F000'        	goto	u12630
 11049  030A'                    u12631:
 11050  030A' EF00' F000'        	goto	l71
 11051  030E'                    u12630:
 11052  030E'                    
 11053                           ; BSR set to: 0
 11054                           ;src/driver/adf4351.c: 113:   adf4351_setup(ctx);
 11055  030E' C02B' F025'        	movff	adf4351_set_freq@ctx,adf4351_setup@ctx
 11056  0312' C02C' F026'        	movff	adf4351_set_freq@ctx+1,adf4351_setup@ctx+1
 11057  0316' EC00' F000'        	call	_adf4351_setup	;wreg free
 11058  031A'                    l71:
 11059  031A' 0012               	return		;funcret
 11060  031C'                    __end_of_adf4351_set_freq:
 11061                           	opt callstack 0
 11062                           
 11063 ;; *************** function _calc_mixer_corr_value *****************
 11064 ;; Defined at:
 11065 ;;		line 154 in file "src/driver/si5328.c"
 11066 ;; Parameters:    Size  Location     Type
 11067 ;;		None
 11068 ;; Auto vars:     Size  Location     Type
 11069 ;;  fgps            8   63[COMRAM] long long 
 11070 ;;  curLO           8   51[COMRAM] long long 
 11071 ;;  v               4   59[COMRAM] long 
 11072 ;; Return value:  Size  Location     Type
 11073 ;;                  4   39[COMRAM] long 
 11074 ;; Registers used:
 11075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11076 ;; Tracked objects:
 11077 ;;		On entry : 0/0
 11078 ;;		On exit  : 0/0
 11079 ;;		Unchanged: 0/0
 11080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11081 ;;      Params:         4       0       0       0       0       0       0
 11082 ;;      Locals:        20       0       0       0       0       0       0
 11083 ;;      Temps:          8       0       0       0       0       0       0
 11084 ;;      Totals:        32       0       0       0       0       0       0
 11085 ;;Total ram usage:       32 bytes
 11086 ;; Hardware stack levels used:    1
 11087 ;; Hardware stack levels required when called:    3
 11088 ;; This function calls:
 11089 ;;		___aodiv
 11090 ;;		___omul
 11091 ;;		_getGPSfrequency
 11092 ;; This function is called by:
 11093 ;;		_adf4351_set_freq
 11094 ;; This function uses a non-reentrant model
 11095 ;;
 11096                           
 11097                           	psect	text23
 11098  0000'                    __ptext23:
 11099                           	opt callstack 0
 11100  0000'                    _calc_mixer_corr_value:
 11101                           	opt callstack 25
 11102  0000'                    
 11103                           ;src/driver/si5328.c: 156:  s64 fgps = getGPSfrequency();
 11104  0000' EC00' F000'        	call	_getGPSfrequency	;wreg free
 11105  0004' 5000'              	movf	?_getGPSfrequency^0,w,c
 11106  0006' 6E00'              	movwf	calc_mixer_corr_value@fgps^0,c
 11107  0008' 5000'              	movf	(?_getGPSfrequency+1)^0,w,c
 11108  000A' 6E00'              	movwf	(calc_mixer_corr_value@fgps+1)^0,c
 11109  000C' 5000'              	movf	(?_getGPSfrequency+2)^0,w,c
 11110  000E' 6E00'              	movwf	(calc_mixer_corr_value@fgps+2)^0,c
 11111  0010' 5000'              	movf	(?_getGPSfrequency+3)^0,w,c
 11112  0012' 6E00'              	movwf	(calc_mixer_corr_value@fgps+3)^0,c
 11113  0014' 6A00'              	clrf	(calc_mixer_corr_value@fgps+4)^0,c
 11114  0016' 6A00'              	clrf	(calc_mixer_corr_value@fgps+5)^0,c
 11115  0018' 6A00'              	clrf	(calc_mixer_corr_value@fgps+6)^0,c
 11116  001A' 6A00'              	clrf	(calc_mixer_corr_value@fgps+7)^0,c
 11117  001C'                    
 11118                           ;src/driver/si5328.c: 157:  fgps *= 1000;
 11119  001C' C03F' F00D'        	movff	calc_mixer_corr_value@fgps,___omul@multiplier
 11120  0020' C040' F00E'        	movff	calc_mixer_corr_value@fgps+1,___omul@multiplier+1
 11121  0024' C041' F00F'        	movff	calc_mixer_corr_value@fgps+2,___omul@multiplier+2
 11122  0028' C042' F010'        	movff	calc_mixer_corr_value@fgps+3,___omul@multiplier+3
 11123  002C' C043' F011'        	movff	calc_mixer_corr_value@fgps+4,___omul@multiplier+4
 11124  0030' C044' F012'        	movff	calc_mixer_corr_value@fgps+5,___omul@multiplier+5
 11125  0034' C045' F013'        	movff	calc_mixer_corr_value@fgps+6,___omul@multiplier+6
 11126  0038' C046' F014'        	movff	calc_mixer_corr_value@fgps+7,___omul@multiplier+7
 11127  003C' 0EE8               	movlw	232
 11128  003E' 6E00'              	movwf	___omul@multiplicand^0,c
 11129  0040' 0E03               	movlw	3
 11130  0042' 6E00'              	movwf	(___omul@multiplicand+1)^0,c
 11131  0044' 0E00               	movlw	0
 11132  0046' 6E00'              	movwf	(___omul@multiplicand+2)^0,c
 11133  0048' 0E00               	movlw	0
 11134  004A' 6E00'              	movwf	(___omul@multiplicand+3)^0,c
 11135  004C' 0E00               	movlw	0
 11136  004E' 6E00'              	movwf	(___omul@multiplicand+4)^0,c
 11137  0050' 0E00               	movlw	0
 11138  0052' 6E00'              	movwf	(___omul@multiplicand+5)^0,c
 11139  0054' 0E00               	movlw	0
 11140  0056' 6E00'              	movwf	(___omul@multiplicand+6)^0,c
 11141  0058' 0E00               	movlw	0
 11142  005A' 6E00'              	movwf	(___omul@multiplicand+7)^0,c
 11143  005C' EC00' F000'        	call	___omul	;wreg free
 11144  0060' C00D' F03F'        	movff	?___omul,calc_mixer_corr_value@fgps
 11145  0064' C00E' F040'        	movff	?___omul+1,calc_mixer_corr_value@fgps+1
 11146  0068' C00F' F041'        	movff	?___omul+2,calc_mixer_corr_value@fgps+2
 11147  006C' C010' F042'        	movff	?___omul+3,calc_mixer_corr_value@fgps+3
 11148  0070' C011' F043'        	movff	?___omul+4,calc_mixer_corr_value@fgps+4
 11149  0074' C012' F044'        	movff	?___omul+5,calc_mixer_corr_value@fgps+5
 11150  0078' C013' F045'        	movff	?___omul+6,calc_mixer_corr_value@fgps+6
 11151  007C' C014' F046'        	movff	?___omul+7,calc_mixer_corr_value@fgps+7
 11152  0080'                    
 11153                           ;src/driver/si5328.c: 158:  fgps /= N31_reg4445;
 11154  0080' C03F' F00D'        	movff	calc_mixer_corr_value@fgps,___aodiv@dividend
 11155  0084' C040' F00E'        	movff	calc_mixer_corr_value@fgps+1,___aodiv@dividend+1
 11156  0088' C041' F00F'        	movff	calc_mixer_corr_value@fgps+2,___aodiv@dividend+2
 11157  008C' C042' F010'        	movff	calc_mixer_corr_value@fgps+3,___aodiv@dividend+3
 11158  0090' C043' F011'        	movff	calc_mixer_corr_value@fgps+4,___aodiv@dividend+4
 11159  0094' C044' F012'        	movff	calc_mixer_corr_value@fgps+5,___aodiv@dividend+5
 11160  0098' C045' F013'        	movff	calc_mixer_corr_value@fgps+6,___aodiv@dividend+6
 11161  009C' C046' F014'        	movff	calc_mixer_corr_value@fgps+7,___aodiv@dividend+7
 11162  00A0' C002' F015'        	movff	_N31_reg4445,___aodiv@divisor
 11163  00A4' C003' F016'        	movff	_N31_reg4445+1,___aodiv@divisor+1
 11164  00A8' 6A00'              	clrf	(___aodiv@divisor+2)^0,c
 11165  00AA' 6A00'              	clrf	(___aodiv@divisor+3)^0,c
 11166  00AC' 6A00'              	clrf	(___aodiv@divisor+4)^0,c
 11167  00AE' 6A00'              	clrf	(___aodiv@divisor+5)^0,c
 11168  00B0' 6A00'              	clrf	(___aodiv@divisor+6)^0,c
 11169  00B2' 6A00'              	clrf	(___aodiv@divisor+7)^0,c
 11170  00B4' EC00' F000'        	call	___aodiv	;wreg free
 11171  00B8' C00D' F03F'        	movff	?___aodiv,calc_mixer_corr_value@fgps
 11172  00BC' C00E' F040'        	movff	?___aodiv+1,calc_mixer_corr_value@fgps+1
 11173  00C0' C00F' F041'        	movff	?___aodiv+2,calc_mixer_corr_value@fgps+2
 11174  00C4' C010' F042'        	movff	?___aodiv+3,calc_mixer_corr_value@fgps+3
 11175  00C8' C011' F043'        	movff	?___aodiv+4,calc_mixer_corr_value@fgps+4
 11176  00CC' C012' F044'        	movff	?___aodiv+5,calc_mixer_corr_value@fgps+5
 11177  00D0' C013' F045'        	movff	?___aodiv+6,calc_mixer_corr_value@fgps+6
 11178  00D4' C014' F046'        	movff	?___aodiv+7,calc_mixer_corr_value@fgps+7
 11179  00D8'                    
 11180                           ;src/driver/si5328.c: 159:  fgps *= N2HS_reg40;
 11181  00D8' C03F' F00D'        	movff	calc_mixer_corr_value@fgps,___omul@multiplier
 11182  00DC' C040' F00E'        	movff	calc_mixer_corr_value@fgps+1,___omul@multiplier+1
 11183  00E0' C041' F00F'        	movff	calc_mixer_corr_value@fgps+2,___omul@multiplier+2
 11184  00E4' C042' F010'        	movff	calc_mixer_corr_value@fgps+3,___omul@multiplier+3
 11185  00E8' C043' F011'        	movff	calc_mixer_corr_value@fgps+4,___omul@multiplier+4
 11186  00EC' C044' F012'        	movff	calc_mixer_corr_value@fgps+5,___omul@multiplier+5
 11187  00F0' C045' F013'        	movff	calc_mixer_corr_value@fgps+6,___omul@multiplier+6
 11188  00F4' C046' F014'        	movff	calc_mixer_corr_value@fgps+7,___omul@multiplier+7
 11189  00F8' C016' F015'        	movff	_N2HS_reg40,___omul@multiplicand
 11190  00FC' C017' F016'        	movff	_N2HS_reg40+1,___omul@multiplicand+1
 11191  0100' 6A00'              	clrf	(___omul@multiplicand+2)^0,c
 11192  0102' 6A00'              	clrf	(___omul@multiplicand+3)^0,c
 11193  0104' 6A00'              	clrf	(___omul@multiplicand+4)^0,c
 11194  0106' 6A00'              	clrf	(___omul@multiplicand+5)^0,c
 11195  0108' 6A00'              	clrf	(___omul@multiplicand+6)^0,c
 11196  010A' 6A00'              	clrf	(___omul@multiplicand+7)^0,c
 11197  010C' EC00' F000'        	call	___omul	;wreg free
 11198  0110' C00D' F03F'        	movff	?___omul,calc_mixer_corr_value@fgps
 11199  0114' C00E' F040'        	movff	?___omul+1,calc_mixer_corr_value@fgps+1
 11200  0118' C00F' F041'        	movff	?___omul+2,calc_mixer_corr_value@fgps+2
 11201  011C' C010' F042'        	movff	?___omul+3,calc_mixer_corr_value@fgps+3
 11202  0120' C011' F043'        	movff	?___omul+4,calc_mixer_corr_value@fgps+4
 11203  0124' C012' F044'        	movff	?___omul+5,calc_mixer_corr_value@fgps+5
 11204  0128' C013' F045'        	movff	?___omul+6,calc_mixer_corr_value@fgps+6
 11205  012C' C014' F046'        	movff	?___omul+7,calc_mixer_corr_value@fgps+7
 11206  0130'                    
 11207                           ;src/driver/si5328.c: 160:  fgps *= N2L_reg4142;
 11208  0130' C03F' F00D'        	movff	calc_mixer_corr_value@fgps,___omul@multiplier
 11209  0134' C040' F00E'        	movff	calc_mixer_corr_value@fgps+1,___omul@multiplier+1
 11210  0138' C041' F00F'        	movff	calc_mixer_corr_value@fgps+2,___omul@multiplier+2
 11211  013C' C042' F010'        	movff	calc_mixer_corr_value@fgps+3,___omul@multiplier+3
 11212  0140' C043' F011'        	movff	calc_mixer_corr_value@fgps+4,___omul@multiplier+4
 11213  0144' C044' F012'        	movff	calc_mixer_corr_value@fgps+5,___omul@multiplier+5
 11214  0148' C045' F013'        	movff	calc_mixer_corr_value@fgps+6,___omul@multiplier+6
 11215  014C' C046' F014'        	movff	calc_mixer_corr_value@fgps+7,___omul@multiplier+7
 11216  0150' C000' F015'        	movff	_N2L_reg4142,___omul@multiplicand
 11217  0154' C001' F016'        	movff	_N2L_reg4142+1,___omul@multiplicand+1
 11218  0158' 6A00'              	clrf	(___omul@multiplicand+2)^0,c
 11219  015A' 6A00'              	clrf	(___omul@multiplicand+3)^0,c
 11220  015C' 6A00'              	clrf	(___omul@multiplicand+4)^0,c
 11221  015E' 6A00'              	clrf	(___omul@multiplicand+5)^0,c
 11222  0160' 6A00'              	clrf	(___omul@multiplicand+6)^0,c
 11223  0162' 6A00'              	clrf	(___omul@multiplicand+7)^0,c
 11224  0164' EC00' F000'        	call	___omul	;wreg free
 11225  0168' C00D' F03F'        	movff	?___omul,calc_mixer_corr_value@fgps
 11226  016C' C00E' F040'        	movff	?___omul+1,calc_mixer_corr_value@fgps+1
 11227  0170' C00F' F041'        	movff	?___omul+2,calc_mixer_corr_value@fgps+2
 11228  0174' C010' F042'        	movff	?___omul+3,calc_mixer_corr_value@fgps+3
 11229  0178' C011' F043'        	movff	?___omul+4,calc_mixer_corr_value@fgps+4
 11230  017C' C012' F044'        	movff	?___omul+5,calc_mixer_corr_value@fgps+5
 11231  0180' C013' F045'        	movff	?___omul+6,calc_mixer_corr_value@fgps+6
 11232  0184' C014' F046'        	movff	?___omul+7,calc_mixer_corr_value@fgps+7
 11233  0188'                    
 11234                           ;src/driver/si5328.c: 161:  fgps /= N1HS_reg25;
 11235  0188' C03F' F00D'        	movff	calc_mixer_corr_value@fgps,___aodiv@dividend
 11236  018C' C040' F00E'        	movff	calc_mixer_corr_value@fgps+1,___aodiv@dividend+1
 11237  0190' C041' F00F'        	movff	calc_mixer_corr_value@fgps+2,___aodiv@dividend+2
 11238  0194' C042' F010'        	movff	calc_mixer_corr_value@fgps+3,___aodiv@dividend+3
 11239  0198' C043' F011'        	movff	calc_mixer_corr_value@fgps+4,___aodiv@dividend+4
 11240  019C' C044' F012'        	movff	calc_mixer_corr_value@fgps+5,___aodiv@dividend+5
 11241  01A0' C045' F013'        	movff	calc_mixer_corr_value@fgps+6,___aodiv@dividend+6
 11242  01A4' C046' F014'        	movff	calc_mixer_corr_value@fgps+7,___aodiv@dividend+7
 11243  01A8' C014' F015'        	movff	_N1HS_reg25,___aodiv@divisor
 11244  01AC' C015' F016'        	movff	_N1HS_reg25+1,___aodiv@divisor+1
 11245  01B0' 6A00'              	clrf	(___aodiv@divisor+2)^0,c
 11246  01B2' 6A00'              	clrf	(___aodiv@divisor+3)^0,c
 11247  01B4' 6A00'              	clrf	(___aodiv@divisor+4)^0,c
 11248  01B6' 6A00'              	clrf	(___aodiv@divisor+5)^0,c
 11249  01B8' 6A00'              	clrf	(___aodiv@divisor+6)^0,c
 11250  01BA' 6A00'              	clrf	(___aodiv@divisor+7)^0,c
 11251  01BC' EC00' F000'        	call	___aodiv	;wreg free
 11252  01C0' C00D' F03F'        	movff	?___aodiv,calc_mixer_corr_value@fgps
 11253  01C4' C00E' F040'        	movff	?___aodiv+1,calc_mixer_corr_value@fgps+1
 11254  01C8' C00F' F041'        	movff	?___aodiv+2,calc_mixer_corr_value@fgps+2
 11255  01CC' C010' F042'        	movff	?___aodiv+3,calc_mixer_corr_value@fgps+3
 11256  01D0' C011' F043'        	movff	?___aodiv+4,calc_mixer_corr_value@fgps+4
 11257  01D4' C012' F044'        	movff	?___aodiv+5,calc_mixer_corr_value@fgps+5
 11258  01D8' C013' F045'        	movff	?___aodiv+6,calc_mixer_corr_value@fgps+6
 11259  01DC' C014' F046'        	movff	?___aodiv+7,calc_mixer_corr_value@fgps+7
 11260  01E0'                    
 11261                           ;src/driver/si5328.c: 162:  fgps /= NC1_LS_reg3233;
 11262  01E0' C03F' F00D'        	movff	calc_mixer_corr_value@fgps,___aodiv@dividend
 11263  01E4' C040' F00E'        	movff	calc_mixer_corr_value@fgps+1,___aodiv@dividend+1
 11264  01E8' C041' F00F'        	movff	calc_mixer_corr_value@fgps+2,___aodiv@dividend+2
 11265  01EC' C042' F010'        	movff	calc_mixer_corr_value@fgps+3,___aodiv@dividend+3
 11266  01F0' C043' F011'        	movff	calc_mixer_corr_value@fgps+4,___aodiv@dividend+4
 11267  01F4' C044' F012'        	movff	calc_mixer_corr_value@fgps+5,___aodiv@dividend+5
 11268  01F8' C045' F013'        	movff	calc_mixer_corr_value@fgps+6,___aodiv@dividend+6
 11269  01FC' C046' F014'        	movff	calc_mixer_corr_value@fgps+7,___aodiv@dividend+7
 11270  0200' C000' F015'        	movff	_NC1_LS_reg3233,___aodiv@divisor
 11271  0204' C001' F016'        	movff	_NC1_LS_reg3233+1,___aodiv@divisor+1
 11272  0208' 6A00'              	clrf	(___aodiv@divisor+2)^0,c
 11273  020A' 6A00'              	clrf	(___aodiv@divisor+3)^0,c
 11274  020C' 6A00'              	clrf	(___aodiv@divisor+4)^0,c
 11275  020E' 6A00'              	clrf	(___aodiv@divisor+5)^0,c
 11276  0210' 6A00'              	clrf	(___aodiv@divisor+6)^0,c
 11277  0212' 6A00'              	clrf	(___aodiv@divisor+7)^0,c
 11278  0214' EC00' F000'        	call	___aodiv	;wreg free
 11279  0218' C00D' F03F'        	movff	?___aodiv,calc_mixer_corr_value@fgps
 11280  021C' C00E' F040'        	movff	?___aodiv+1,calc_mixer_corr_value@fgps+1
 11281  0220' C00F' F041'        	movff	?___aodiv+2,calc_mixer_corr_value@fgps+2
 11282  0224' C010' F042'        	movff	?___aodiv+3,calc_mixer_corr_value@fgps+3
 11283  0228' C011' F043'        	movff	?___aodiv+4,calc_mixer_corr_value@fgps+4
 11284  022C' C012' F044'        	movff	?___aodiv+5,calc_mixer_corr_value@fgps+5
 11285  0230' C013' F045'        	movff	?___aodiv+6,calc_mixer_corr_value@fgps+6
 11286  0234' C014' F046'        	movff	?___aodiv+7,calc_mixer_corr_value@fgps+7
 11287  0238'                    
 11288                           ;src/driver/si5328.c: 163:  s64 curLO = (s64)currentLO * 1000000000;
 11289  0238' 5000'              	movf	_currentLO^0,w,c
 11290  023A' 6E00'              	movwf	___omul@multiplier^0,c
 11291  023C' 6A00'              	clrf	(___omul@multiplier+1)^0,c
 11292  023E' 6A00'              	clrf	(___omul@multiplier+2)^0,c
 11293  0240' 6A00'              	clrf	(___omul@multiplier+3)^0,c
 11294  0242' 6A00'              	clrf	(___omul@multiplier+4)^0,c
 11295  0244' 6A00'              	clrf	(___omul@multiplier+5)^0,c
 11296  0246' 6A00'              	clrf	(___omul@multiplier+6)^0,c
 11297  0248' 6A00'              	clrf	(___omul@multiplier+7)^0,c
 11298  024A' 0E00               	movlw	0
 11299  024C' 6E00'              	movwf	___omul@multiplicand^0,c
 11300  024E' 0ECA               	movlw	202
 11301  0250' 6E00'              	movwf	(___omul@multiplicand+1)^0,c
 11302  0252' 0E9A               	movlw	154
 11303  0254' 6E00'              	movwf	(___omul@multiplicand+2)^0,c
 11304  0256' 0E3B               	movlw	59
 11305  0258' 6E00'              	movwf	(___omul@multiplicand+3)^0,c
 11306  025A' 0E00               	movlw	0
 11307  025C' 6E00'              	movwf	(___omul@multiplicand+4)^0,c
 11308  025E' 0E00               	movlw	0
 11309  0260' 6E00'              	movwf	(___omul@multiplicand+5)^0,c
 11310  0262' 0E00               	movlw	0
 11311  0264' 6E00'              	movwf	(___omul@multiplicand+6)^0,c
 11312  0266' 0E00               	movlw	0
 11313  0268' 6E00'              	movwf	(___omul@multiplicand+7)^0,c
 11314  026A' EC00' F000'        	call	___omul	;wreg free
 11315  026E' C00D' F033'        	movff	?___omul,calc_mixer_corr_value@curLO
 11316  0272' C00E' F034'        	movff	?___omul+1,calc_mixer_corr_value@curLO+1
 11317  0276' C00F' F035'        	movff	?___omul+2,calc_mixer_corr_value@curLO+2
 11318  027A' C010' F036'        	movff	?___omul+3,calc_mixer_corr_value@curLO+3
 11319  027E' C011' F037'        	movff	?___omul+4,calc_mixer_corr_value@curLO+4
 11320  0282' C012' F038'        	movff	?___omul+5,calc_mixer_corr_value@curLO+5
 11321  0286' C013' F039'        	movff	?___omul+6,calc_mixer_corr_value@curLO+6
 11322  028A' C014' F03A'        	movff	?___omul+7,calc_mixer_corr_value@curLO+7
 11323  028E'                    
 11324                           ;src/driver/si5328.c: 164:  fgps -= curLO;
 11325  028E' 5000'              	movf	calc_mixer_corr_value@curLO^0,w,c
 11326  0290' 5E00'              	subwf	calc_mixer_corr_value@fgps^0,f,c
 11327  0292' 5000'              	movf	(calc_mixer_corr_value@curLO+1)^0,w,c
 11328  0294' 5A00'              	subwfb	(calc_mixer_corr_value@fgps+1)^0,f,c
 11329  0296' 5000'              	movf	(calc_mixer_corr_value@curLO+2)^0,w,c
 11330  0298' 5A00'              	subwfb	(calc_mixer_corr_value@fgps+2)^0,f,c
 11331  029A' 5000'              	movf	(calc_mixer_corr_value@curLO+3)^0,w,c
 11332  029C' 5A00'              	subwfb	(calc_mixer_corr_value@fgps+3)^0,f,c
 11333  029E' 5000'              	movf	(calc_mixer_corr_value@curLO+4)^0,w,c
 11334  02A0' 5A00'              	subwfb	(calc_mixer_corr_value@fgps+4)^0,f,c
 11335  02A2' 5000'              	movf	(calc_mixer_corr_value@curLO+5)^0,w,c
 11336  02A4' 5A00'              	subwfb	(calc_mixer_corr_value@fgps+5)^0,f,c
 11337  02A6' 5000'              	movf	(calc_mixer_corr_value@curLO+6)^0,w,c
 11338  02A8' 5A00'              	subwfb	(calc_mixer_corr_value@fgps+6)^0,f,c
 11339  02AA' 5000'              	movf	(calc_mixer_corr_value@curLO+7)^0,w,c
 11340  02AC' 5A00'              	subwfb	(calc_mixer_corr_value@fgps+7)^0,f,c
 11341  02AE'                    
 11342                           ;src/driver/si5328.c: 165:  fgps /= 1000;
 11343  02AE' C03F' F00D'        	movff	calc_mixer_corr_value@fgps,___aodiv@dividend
 11344  02B2' C040' F00E'        	movff	calc_mixer_corr_value@fgps+1,___aodiv@dividend+1
 11345  02B6' C041' F00F'        	movff	calc_mixer_corr_value@fgps+2,___aodiv@dividend+2
 11346  02BA' C042' F010'        	movff	calc_mixer_corr_value@fgps+3,___aodiv@dividend+3
 11347  02BE' C043' F011'        	movff	calc_mixer_corr_value@fgps+4,___aodiv@dividend+4
 11348  02C2' C044' F012'        	movff	calc_mixer_corr_value@fgps+5,___aodiv@dividend+5
 11349  02C6' C045' F013'        	movff	calc_mixer_corr_value@fgps+6,___aodiv@dividend+6
 11350  02CA' C046' F014'        	movff	calc_mixer_corr_value@fgps+7,___aodiv@dividend+7
 11351  02CE' 0EE8               	movlw	232
 11352  02D0' 6E00'              	movwf	___aodiv@divisor^0,c
 11353  02D2' 0E03               	movlw	3
 11354  02D4' 6E00'              	movwf	(___aodiv@divisor+1)^0,c
 11355  02D6' 0E00               	movlw	0
 11356  02D8' 6E00'              	movwf	(___aodiv@divisor+2)^0,c
 11357  02DA' 0E00               	movlw	0
 11358  02DC' 6E00'              	movwf	(___aodiv@divisor+3)^0,c
 11359  02DE' 0E00               	movlw	0
 11360  02E0' 6E00'              	movwf	(___aodiv@divisor+4)^0,c
 11361  02E2' 0E00               	movlw	0
 11362  02E4' 6E00'              	movwf	(___aodiv@divisor+5)^0,c
 11363  02E6' 0E00               	movlw	0
 11364  02E8' 6E00'              	movwf	(___aodiv@divisor+6)^0,c
 11365  02EA' 0E00               	movlw	0
 11366  02EC' 6E00'              	movwf	(___aodiv@divisor+7)^0,c
 11367  02EE' EC00' F000'        	call	___aodiv	;wreg free
 11368  02F2' C00D' F03F'        	movff	?___aodiv,calc_mixer_corr_value@fgps
 11369  02F6' C00E' F040'        	movff	?___aodiv+1,calc_mixer_corr_value@fgps+1
 11370  02FA' C00F' F041'        	movff	?___aodiv+2,calc_mixer_corr_value@fgps+2
 11371  02FE' C010' F042'        	movff	?___aodiv+3,calc_mixer_corr_value@fgps+3
 11372  0302' C011' F043'        	movff	?___aodiv+4,calc_mixer_corr_value@fgps+4
 11373  0306' C012' F044'        	movff	?___aodiv+5,calc_mixer_corr_value@fgps+5
 11374  030A' C013' F045'        	movff	?___aodiv+6,calc_mixer_corr_value@fgps+6
 11375  030E' C014' F046'        	movff	?___aodiv+7,calc_mixer_corr_value@fgps+7
 11376  0312'                    
 11377                           ;src/driver/si5328.c: 166:  fgps *= 390;
 11378  0312' C03F' F00D'        	movff	calc_mixer_corr_value@fgps,___omul@multiplier
 11379  0316' C040' F00E'        	movff	calc_mixer_corr_value@fgps+1,___omul@multiplier+1
 11380  031A' C041' F00F'        	movff	calc_mixer_corr_value@fgps+2,___omul@multiplier+2
 11381  031E' C042' F010'        	movff	calc_mixer_corr_value@fgps+3,___omul@multiplier+3
 11382  0322' C043' F011'        	movff	calc_mixer_corr_value@fgps+4,___omul@multiplier+4
 11383  0326' C044' F012'        	movff	calc_mixer_corr_value@fgps+5,___omul@multiplier+5
 11384  032A' C045' F013'        	movff	calc_mixer_corr_value@fgps+6,___omul@multiplier+6
 11385  032E' C046' F014'        	movff	calc_mixer_corr_value@fgps+7,___omul@multiplier+7
 11386  0332' 0E86               	movlw	134
 11387  0334' 6E00'              	movwf	___omul@multiplicand^0,c
 11388  0336' 0E01               	movlw	1
 11389  0338' 6E00'              	movwf	(___omul@multiplicand+1)^0,c
 11390  033A' 0E00               	movlw	0
 11391  033C' 6E00'              	movwf	(___omul@multiplicand+2)^0,c
 11392  033E' 0E00               	movlw	0
 11393  0340' 6E00'              	movwf	(___omul@multiplicand+3)^0,c
 11394  0342' 0E00               	movlw	0
 11395  0344' 6E00'              	movwf	(___omul@multiplicand+4)^0,c
 11396  0346' 0E00               	movlw	0
 11397  0348' 6E00'              	movwf	(___omul@multiplicand+5)^0,c
 11398  034A' 0E00               	movlw	0
 11399  034C' 6E00'              	movwf	(___omul@multiplicand+6)^0,c
 11400  034E' 0E00               	movlw	0
 11401  0350' 6E00'              	movwf	(___omul@multiplicand+7)^0,c
 11402  0352' EC00' F000'        	call	___omul	;wreg free
 11403  0356' C00D' F03F'        	movff	?___omul,calc_mixer_corr_value@fgps
 11404  035A' C00E' F040'        	movff	?___omul+1,calc_mixer_corr_value@fgps+1
 11405  035E' C00F' F041'        	movff	?___omul+2,calc_mixer_corr_value@fgps+2
 11406  0362' C010' F042'        	movff	?___omul+3,calc_mixer_corr_value@fgps+3
 11407  0366' C011' F043'        	movff	?___omul+4,calc_mixer_corr_value@fgps+4
 11408  036A' C012' F044'        	movff	?___omul+5,calc_mixer_corr_value@fgps+5
 11409  036E' C013' F045'        	movff	?___omul+6,calc_mixer_corr_value@fgps+6
 11410  0372' C014' F046'        	movff	?___omul+7,calc_mixer_corr_value@fgps+7
 11411  0376'                    
 11412                           ;src/driver/si5328.c: 167:  if(fgps > 0)
 11413  0376' BE00'              	btfsc	(calc_mixer_corr_value@fgps+7)^0,7,c
 11414  0378' EF00' F000'        	goto	u12261
 11415  037C' 5000'              	movf	(calc_mixer_corr_value@fgps+7)^0,w,c
 11416  037E' 1000'              	iorwf	(calc_mixer_corr_value@fgps+6)^0,w,c
 11417  0380' 1000'              	iorwf	(calc_mixer_corr_value@fgps+5)^0,w,c
 11418  0382' 1000'              	iorwf	(calc_mixer_corr_value@fgps+4)^0,w,c
 11419  0384' 1000'              	iorwf	(calc_mixer_corr_value@fgps+3)^0,w,c
 11420  0386' 1000'              	iorwf	(calc_mixer_corr_value@fgps+2)^0,w,c
 11421  0388' 1000'              	iorwf	(calc_mixer_corr_value@fgps+1)^0,w,c
 11422  038A' E108               	bnz	u12260
 11423  038C' 0400'              	decf	calc_mixer_corr_value@fgps^0,w,c
 11424  038E' A0D8               	btfss	status,0,c
 11425  0390' EF00' F000'        	goto	u12261
 11426  0394' EF00' F000'        	goto	u12260
 11427  0398'                    u12261:
 11428  0398' EF00' F000'        	goto	l9995
 11429  039C'                    u12260:
 11430  039C'                    
 11431                           ;src/driver/si5328.c: 168:   fgps += 500;
 11432  039C' 0EF4               	movlw	244
 11433  039E' 2600'              	addwf	calc_mixer_corr_value@fgps^0,f,c
 11434  03A0' 0E01               	movlw	1
 11435  03A2' 2200'              	addwfc	(calc_mixer_corr_value@fgps+1)^0,f,c
 11436  03A4' 0E00               	movlw	0
 11437  03A6' 2200'              	addwfc	(calc_mixer_corr_value@fgps+2)^0,f,c
 11438  03A8' 0E00               	movlw	0
 11439  03AA' 2200'              	addwfc	(calc_mixer_corr_value@fgps+3)^0,f,c
 11440  03AC' 0E00               	movlw	0
 11441  03AE' 2200'              	addwfc	(calc_mixer_corr_value@fgps+4)^0,f,c
 11442  03B0' 0E00               	movlw	0
 11443  03B2' 2200'              	addwfc	(calc_mixer_corr_value@fgps+5)^0,f,c
 11444  03B4' 0E00               	movlw	0
 11445  03B6' 2200'              	addwfc	(calc_mixer_corr_value@fgps+6)^0,f,c
 11446  03B8' 0E00               	movlw	0
 11447  03BA' 2200'              	addwfc	(calc_mixer_corr_value@fgps+7)^0,f,c
 11448  03BC' EF00' F000'        	goto	l9997
 11449  03C0'                    l9995:
 11450                           
 11451                           ;src/driver/si5328.c: 170:   fgps -= 500;
 11452  03C0' 0E0C               	movlw	12
 11453  03C2' 2600'              	addwf	calc_mixer_corr_value@fgps^0,f,c
 11454  03C4' 0EFE               	movlw	254
 11455  03C6' 2200'              	addwfc	(calc_mixer_corr_value@fgps+1)^0,f,c
 11456  03C8' 0EFF               	movlw	255
 11457  03CA' 2200'              	addwfc	(calc_mixer_corr_value@fgps+2)^0,f,c
 11458  03CC' 0EFF               	movlw	255
 11459  03CE' 2200'              	addwfc	(calc_mixer_corr_value@fgps+3)^0,f,c
 11460  03D0' 0EFF               	movlw	255
 11461  03D2' 2200'              	addwfc	(calc_mixer_corr_value@fgps+4)^0,f,c
 11462  03D4' 0EFF               	movlw	255
 11463  03D6' 2200'              	addwfc	(calc_mixer_corr_value@fgps+5)^0,f,c
 11464  03D8' 0EFF               	movlw	255
 11465  03DA' 2200'              	addwfc	(calc_mixer_corr_value@fgps+6)^0,f,c
 11466  03DC' 0EFF               	movlw	255
 11467  03DE' 2200'              	addwfc	(calc_mixer_corr_value@fgps+7)^0,f,c
 11468  03E0'                    l9997:
 11469                           
 11470                           ;src/driver/si5328.c: 172:  s32 v = (s32)(fgps / 1000)+1;
 11471  03E0' C03F' F00D'        	movff	calc_mixer_corr_value@fgps,___aodiv@dividend
 11472  03E4' C040' F00E'        	movff	calc_mixer_corr_value@fgps+1,___aodiv@dividend+1
 11473  03E8' C041' F00F'        	movff	calc_mixer_corr_value@fgps+2,___aodiv@dividend+2
 11474  03EC' C042' F010'        	movff	calc_mixer_corr_value@fgps+3,___aodiv@dividend+3
 11475  03F0' C043' F011'        	movff	calc_mixer_corr_value@fgps+4,___aodiv@dividend+4
 11476  03F4' C044' F012'        	movff	calc_mixer_corr_value@fgps+5,___aodiv@dividend+5
 11477  03F8' C045' F013'        	movff	calc_mixer_corr_value@fgps+6,___aodiv@dividend+6
 11478  03FC' C046' F014'        	movff	calc_mixer_corr_value@fgps+7,___aodiv@dividend+7
 11479  0400' 0EE8               	movlw	232
 11480  0402' 6E00'              	movwf	___aodiv@divisor^0,c
 11481  0404' 0E03               	movlw	3
 11482  0406' 6E00'              	movwf	(___aodiv@divisor+1)^0,c
 11483  0408' 0E00               	movlw	0
 11484  040A' 6E00'              	movwf	(___aodiv@divisor+2)^0,c
 11485  040C' 0E00               	movlw	0
 11486  040E' 6E00'              	movwf	(___aodiv@divisor+3)^0,c
 11487  0410' 0E00               	movlw	0
 11488  0412' 6E00'              	movwf	(___aodiv@divisor+4)^0,c
 11489  0414' 0E00               	movlw	0
 11490  0416' 6E00'              	movwf	(___aodiv@divisor+5)^0,c
 11491  0418' 0E00               	movlw	0
 11492  041A' 6E00'              	movwf	(___aodiv@divisor+6)^0,c
 11493  041C' 0E00               	movlw	0
 11494  041E' 6E00'              	movwf	(___aodiv@divisor+7)^0,c
 11495  0420' EC00' F000'        	call	___aodiv	;wreg free
 11496  0424' C00D' F02B'        	movff	?___aodiv,??_calc_mixer_corr_value
 11497  0428' C00E' F02C'        	movff	?___aodiv+1,??_calc_mixer_corr_value+1
 11498  042C' C00F' F02D'        	movff	?___aodiv+2,??_calc_mixer_corr_value+2
 11499  0430' C010' F02E'        	movff	?___aodiv+3,??_calc_mixer_corr_value+3
 11500  0434' C011' F02F'        	movff	?___aodiv+4,??_calc_mixer_corr_value+4
 11501  0438' C012' F030'        	movff	?___aodiv+5,??_calc_mixer_corr_value+5
 11502  043C' C013' F031'        	movff	?___aodiv+6,??_calc_mixer_corr_value+6
 11503  0440' C014' F032'        	movff	?___aodiv+7,??_calc_mixer_corr_value+7
 11504  0444' 0E01               	movlw	1
 11505  0446' 2400'              	addwf	??_calc_mixer_corr_value^0,w,c
 11506  0448' 6E00'              	movwf	calc_mixer_corr_value@v^0,c
 11507  044A' 0E00               	movlw	0
 11508  044C' 2000'              	addwfc	(??_calc_mixer_corr_value+1)^0,w,c
 11509  044E' 6E00'              	movwf	(calc_mixer_corr_value@v+1)^0,c
 11510  0450' 0E00               	movlw	0
 11511  0452' 2000'              	addwfc	(??_calc_mixer_corr_value+2)^0,w,c
 11512  0454' 6E00'              	movwf	(calc_mixer_corr_value@v+2)^0,c
 11513  0456' 0E00               	movlw	0
 11514  0458' 2000'              	addwfc	(??_calc_mixer_corr_value+3)^0,w,c
 11515  045A' 6E00'              	movwf	(calc_mixer_corr_value@v+3)^0,c
 11516  045C'                    
 11517                           ;src/driver/si5328.c: 174:  return v;
 11518  045C' C03B' F027'        	movff	calc_mixer_corr_value@v,?_calc_mixer_corr_value
 11519  0460' C03C' F028'        	movff	calc_mixer_corr_value@v+1,?_calc_mixer_corr_value+1
 11520  0464' C03D' F029'        	movff	calc_mixer_corr_value@v+2,?_calc_mixer_corr_value+2
 11521  0468' C03E' F02A'        	movff	calc_mixer_corr_value@v+3,?_calc_mixer_corr_value+3
 11522  046C' 0012               	return		;funcret
 11523  046E'                    __end_of_calc_mixer_corr_value:
 11524                           	opt callstack 0
 11525                           
 11526 ;; *************** function _getGPSfrequency *****************
 11527 ;; Defined at:
 11528 ;;		line 294 in file "src/gps.c"
 11529 ;; Parameters:    Size  Location     Type
 11530 ;;		None
 11531 ;; Auto vars:     Size  Location     Type
 11532 ;;  gf              4   17[COMRAM] unsigned long 
 11533 ;; Return value:  Size  Location     Type
 11534 ;;                  4   13[COMRAM] unsigned long 
 11535 ;; Registers used:
 11536 ;;		wreg, status,2, status,0
 11537 ;; Tracked objects:
 11538 ;;		On entry : 0/0
 11539 ;;		On exit  : 0/0
 11540 ;;		Unchanged: 0/0
 11541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11542 ;;      Params:         4       0       0       0       0       0       0
 11543 ;;      Locals:         4       0       0       0       0       0       0
 11544 ;;      Temps:          0       0       0       0       0       0       0
 11545 ;;      Totals:         8       0       0       0       0       0       0
 11546 ;;Total ram usage:        8 bytes
 11547 ;; Hardware stack levels used:    1
 11548 ;; Hardware stack levels required when called:    2
 11549 ;; This function calls:
 11550 ;;		Nothing
 11551 ;; This function is called by:
 11552 ;;		_calc_mixer_corr_value
 11553 ;; This function uses a non-reentrant model
 11554 ;;
 11555                           
 11556                           	psect	text24
 11557  0000'                    __ptext24:
 11558                           	opt callstack 0
 11559  0000'                    _getGPSfrequency:
 11560                           	opt callstack 25
 11561  0000'                    
 11562                           ;src/gps.c: 296:  u32 gf = gps_config_data[15];
 11563  0000' 0102               	movlb	2	; () banked
 11564  0002' 5100'              	movf	(_gps_config_data+15)& (0+255),w,b
 11565  0004' 6E00'              	movwf	getGPSfrequency@gf^0,c
 11566  0006' 6A00'              	clrf	(getGPSfrequency@gf+1)^0,c
 11567  0008' 6A00'              	clrf	(getGPSfrequency@gf+2)^0,c
 11568  000A' 6A00'              	clrf	(getGPSfrequency@gf+3)^0,c
 11569  000C'                    
 11570                           ; BSR set to: 2
 11571                           ;src/gps.c: 297:  gf <<= 8;
 11572  000C' C013' F014'        	movff	getGPSfrequency@gf+2,getGPSfrequency@gf+3
 11573  0010' C012' F013'        	movff	getGPSfrequency@gf+1,getGPSfrequency@gf+2
 11574  0014' C011' F012'        	movff	getGPSfrequency@gf,getGPSfrequency@gf+1
 11575  0018' 6A00'              	clrf	getGPSfrequency@gf^0,c
 11576  001A'                    
 11577                           ; BSR set to: 2
 11578                           ;src/gps.c: 298:  gf |= gps_config_data[14];
 11579  001A' 5100'              	movf	(_gps_config_data+14)& (0+255),w,b
 11580  001C' 1200'              	iorwf	getGPSfrequency@gf^0,f,c
 11581  001E'                    
 11582                           ; BSR set to: 2
 11583                           ;src/gps.c: 299:  gf <<= 8;
 11584  001E' C013' F014'        	movff	getGPSfrequency@gf+2,getGPSfrequency@gf+3
 11585  0022' C012' F013'        	movff	getGPSfrequency@gf+1,getGPSfrequency@gf+2
 11586  0026' C011' F012'        	movff	getGPSfrequency@gf,getGPSfrequency@gf+1
 11587  002A' 6A00'              	clrf	getGPSfrequency@gf^0,c
 11588  002C'                    
 11589                           ; BSR set to: 2
 11590                           ;src/gps.c: 300:  gf |= gps_config_data[13];
 11591  002C' 5100'              	movf	(_gps_config_data+13)& (0+255),w,b
 11592  002E' 1200'              	iorwf	getGPSfrequency@gf^0,f,c
 11593  0030'                    
 11594                           ; BSR set to: 2
 11595                           ;src/gps.c: 301:  gf <<= 8;
 11596  0030' C013' F014'        	movff	getGPSfrequency@gf+2,getGPSfrequency@gf+3
 11597  0034' C012' F013'        	movff	getGPSfrequency@gf+1,getGPSfrequency@gf+2
 11598  0038' C011' F012'        	movff	getGPSfrequency@gf,getGPSfrequency@gf+1
 11599  003C' 6A00'              	clrf	getGPSfrequency@gf^0,c
 11600  003E'                    
 11601                           ; BSR set to: 2
 11602                           ;src/gps.c: 302:  gf |= gps_config_data[12];
 11603  003E' 5100'              	movf	(_gps_config_data+12)& (0+255),w,b
 11604  0040' 1200'              	iorwf	getGPSfrequency@gf^0,f,c
 11605  0042'                    
 11606                           ; BSR set to: 2
 11607                           ;src/gps.c: 306:  return gf;
 11608  0042' C011' F00D'        	movff	getGPSfrequency@gf,?_getGPSfrequency
 11609  0046' C012' F00E'        	movff	getGPSfrequency@gf+1,?_getGPSfrequency+1
 11610  004A' C013' F00F'        	movff	getGPSfrequency@gf+2,?_getGPSfrequency+2
 11611  004E' C014' F010'        	movff	getGPSfrequency@gf+3,?_getGPSfrequency+3
 11612  0052'                    
 11613                           ; BSR set to: 2
 11614  0052' 0012               	return		;funcret
 11615  0054'                    __end_of_getGPSfrequency:
 11616                           	opt callstack 0
 11617                           
 11618 ;; *************** function _adf4351_calc_counters *****************
 11619 ;; Defined at:
 11620 ;;		line 120 in file "src/driver/adf4351.c"
 11621 ;; Parameters:    Size  Location     Type
 11622 ;;  ctx             2   62[COMRAM] PTR struct adf4351_ctx
 11623 ;;		 -> g_adf4351(55), 
 11624 ;; Auto vars:     Size  Location     Type
 11625 ;;  Nmal10000       8   90[COMRAM] unsigned long long 
 11626 ;;  vfoout          8   82[COMRAM] unsigned long long 
 11627 ;;  rest            4   76[COMRAM] unsigned long 
 11628 ;;  INT             4   72[COMRAM] unsigned long 
 11629 ;; Return value:  Size  Location     Type
 11630 ;;                  2   62[COMRAM] int 
 11631 ;; Registers used:
 11632 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11633 ;; Tracked objects:
 11634 ;;		On entry : 0/0
 11635 ;;		On exit  : 0/0
 11636 ;;		Unchanged: 0/0
 11637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11638 ;;      Params:         2       0       0       0       0       0       0
 11639 ;;      Locals:        26       0       0       0       0       0       0
 11640 ;;      Temps:          8       0       0       0       0       0       0
 11641 ;;      Totals:        36       0       0       0       0       0       0
 11642 ;;Total ram usage:       36 bytes
 11643 ;; Hardware stack levels used:    1
 11644 ;; Hardware stack levels required when called:    3
 11645 ;; This function calls:
 11646 ;;		___lmul
 11647 ;;		___lodiv
 11648 ;;		___lwdiv
 11649 ;;		___omul
 11650 ;;		___wmul
 11651 ;; This function is called by:
 11652 ;;		_adf4351_set_freq
 11653 ;; This function uses a non-reentrant model
 11654 ;;
 11655                           
 11656                           	psect	text25
 11657  0000'                    __ptext25:
 11658                           	opt callstack 0
 11659  0000'                    _adf4351_calc_counters:
 11660                           	opt callstack 25
 11661  0000'                    
 11662                           ;src/driver/adf4351.c: 120: static int adf4351_calc_counters(adf4351_ctx* ctx);src/drive
      +                          r/adf4351.c: 121: {;src/driver/adf4351.c: 122:     ctx->reg2.ldf = 0;
 11663  0000' EE20 F013          	lfsr	2,19
 11664  0004' 5000'              	movf	adf4351_calc_counters@ctx^0,w,c
 11665  0006' 26D9               	addwf	fsr2l,f,c
 11666  0008' 5000'              	movf	(adf4351_calc_counters@ctx+1)^0,w,c
 11667  000A' 22DA               	addwfc	fsr2h,f,c
 11668  000C' 0E00               	movlw	0
 11669  000E' 6EDF               	movwf	indf2,c
 11670                           
 11671                           ;src/driver/adf4351.c: 124:  ctx->reg1.mod = 4000;
 11672  0010' EE20 F009          	lfsr	2,9
 11673  0014' 5000'              	movf	adf4351_calc_counters@ctx^0,w,c
 11674  0016' 26D9               	addwf	fsr2l,f,c
 11675  0018' 5000'              	movf	(adf4351_calc_counters@ctx+1)^0,w,c
 11676  001A' 22DA               	addwfc	fsr2h,f,c
 11677  001C' 0EA0               	movlw	160
 11678  001E' 6EDE               	movwf	postinc2,c
 11679  0020' 0E0F               	movlw	15
 11680  0022' 6EDD               	movwf	postdec2,c
 11681                           
 11682                           ;src/driver/adf4351.c: 128:  if(ctx->vco_freq < 550000)
 11683  0024' EE20 F033          	lfsr	2,51
 11684  0028' 5000'              	movf	adf4351_calc_counters@ctx^0,w,c
 11685  002A' 26D9               	addwf	fsr2l,f,c
 11686  002C' 5000'              	movf	(adf4351_calc_counters@ctx+1)^0,w,c
 11687  002E' 22DA               	addwfc	fsr2h,f,c
 11688  0030' 0E03               	movlw	3
 11689  0032' 50DB               	movf	plusw2,w,c
 11690  0034' E10B               	bnz	u12271
 11691  0036' 0E70               	movlw	112
 11692  0038' 5CDE               	subwf	postinc2,w,c
 11693  003A' 0E64               	movlw	100
 11694  003C' 58DE               	subwfb	postinc2,w,c
 11695  003E' 0E08               	movlw	8
 11696  0040' 58DE               	subwfb	postinc2,w,c
 11697  0042' B0D8               	btfsc	status,0,c
 11698  0044' EF00' F000'        	goto	u12271
 11699  0048' EF00' F000'        	goto	u12270
 11700  004C'                    u12271:
 11701  004C' EF00' F000'        	goto	l10007
 11702  0050'                    u12270:
 11703  0050'                    
 11704                           ;src/driver/adf4351.c: 129:   vfoout = ctx->vco_freq * 8L;
 11705  0050' EE20 F033          	lfsr	2,51
 11706  0054' 5000'              	movf	adf4351_calc_counters@ctx^0,w,c
 11707  0056' 26D9               	addwf	fsr2l,f,c
 11708  0058' 5000'              	movf	(adf4351_calc_counters@ctx+1)^0,w,c
 11709  005A' 22DA               	addwfc	fsr2h,f,c
 11710  005C' CFDE F040'         	movff	postinc2,??_adf4351_calc_counters
 11711  0060' CFDE F041'         	movff	postinc2,??_adf4351_calc_counters+1
 11712  0064' CFDE F042'         	movff	postinc2,??_adf4351_calc_counters+2
 11713  0068' CFDE F043'         	movff	postinc2,??_adf4351_calc_counters+3
 11714  006C' 0E03               	movlw	3
 11715  006E'                    u12285:
 11716  006E' 90D8               	bcf	status,0,c
 11717  0070' 3600'              	rlcf	??_adf4351_calc_counters^0,f,c
 11718  0072' 3600'              	rlcf	(??_adf4351_calc_counters+1)^0,f,c
 11719  0074' 3600'              	rlcf	(??_adf4351_calc_counters+2)^0,f,c
 11720  0076' 3600'              	rlcf	(??_adf4351_calc_counters+3)^0,f,c
 11721  0078' 2EE8               	decfsz	wreg,f,c
 11722  007A' EF00' F000'        	goto	u12285
 11723  007E' 5000'              	movf	??_adf4351_calc_counters^0,w,c
 11724  0080' 6E00'              	movwf	adf4351_calc_counters@vfoout^0,c
 11725  0082' 5000'              	movf	(??_adf4351_calc_counters+1)^0,w,c
 11726  0084' 6E00'              	movwf	(adf4351_calc_counters@vfoout+1)^0,c
 11727  0086' 5000'              	movf	(??_adf4351_calc_counters+2)^0,w,c
 11728  0088' 6E00'              	movwf	(adf4351_calc_counters@vfoout+2)^0,c
 11729  008A' 5000'              	movf	(??_adf4351_calc_counters+3)^0,w,c
 11730  008C' 6E00'              	movwf	(adf4351_calc_counters@vfoout+3)^0,c
 11731  008E' 6A00'              	clrf	(adf4351_calc_counters@vfoout+4)^0,c
 11732  0090' 6A00'              	clrf	(adf4351_calc_counters@vfoout+5)^0,c
 11733  0092' 6A00'              	clrf	(adf4351_calc_counters@vfoout+6)^0,c
 11734  0094' 6A00'              	clrf	(adf4351_calc_counters@vfoout+7)^0,c
 11735  0096' EF00' F000'        	goto	l10013
 11736  009A'                    l10007:
 11737  009A' EE20 F033          	lfsr	2,51
 11738  009E' 5000'              	movf	adf4351_calc_counters@ctx^0,w,c
 11739  00A0' 26D9               	addwf	fsr2l,f,c
 11740  00A2' 5000'              	movf	(adf4351_calc_counters@ctx+1)^0,w,c
 11741  00A4' 22DA               	addwfc	fsr2h,f,c
 11742  00A6' 0E03               	movlw	3
 11743  00A8' 50DB               	movf	plusw2,w,c
 11744  00AA' E10B               	bnz	u12291
 11745  00AC' 0EE0               	movlw	224
 11746  00AE' 5CDE               	subwf	postinc2,w,c
 11747  00B0' 0EC8               	movlw	200
 11748  00B2' 58DE               	subwfb	postinc2,w,c
 11749  00B4' 0E10               	movlw	16
 11750  00B6' 58DE               	subwfb	postinc2,w,c
 11751  00B8' B0D8               	btfsc	status,0,c
 11752  00BA' EF00' F000'        	goto	u12291
 11753  00BE' EF00' F000'        	goto	u12290
 11754  00C2'                    u12291:
 11755  00C2' EF00' F000'        	goto	l10011
 11756  00C6'                    u12290:
 11757  00C6'                    
 11758                           ;src/driver/adf4351.c: 131:   vfoout = ctx->vco_freq * 4L;
 11759  00C6' EE20 F033          	lfsr	2,51
 11760  00CA' 5000'              	movf	adf4351_calc_counters@ctx^0,w,c
 11761  00CC' 26D9               	addwf	fsr2l,f,c
 11762  00CE' 5000'              	movf	(adf4351_calc_counters@ctx+1)^0,w,c
 11763  00D0' 22DA               	addwfc	fsr2h,f,c
 11764  00D2' CFDE F040'         	movff	postinc2,??_adf4351_calc_counters
 11765  00D6' CFDE F041'         	movff	postinc2,??_adf4351_calc_counters+1
 11766  00DA' CFDE F042'         	movff	postinc2,??_adf4351_calc_counters+2
 11767  00DE' CFDE F043'         	movff	postinc2,??_adf4351_calc_counters+3
 11768  00E2' 0E02               	movlw	2
 11769  00E4'                    u12305:
 11770  00E4' 90D8               	bcf	status,0,c
 11771  00E6' 3600'              	rlcf	??_adf4351_calc_counters^0,f,c
 11772  00E8' 3600'              	rlcf	(??_adf4351_calc_counters+1)^0,f,c
 11773  00EA' 3600'              	rlcf	(??_adf4351_calc_counters+2)^0,f,c
 11774  00EC' 3600'              	rlcf	(??_adf4351_calc_counters+3)^0,f,c
 11775  00EE' 2EE8               	decfsz	wreg,f,c
 11776  00F0' EF00' F000'        	goto	u12305
 11777  00F4' 5000'              	movf	??_adf4351_calc_counters^0,w,c
 11778  00F6' 6E00'              	movwf	adf4351_calc_counters@vfoout^0,c
 11779  00F8' 5000'              	movf	(??_adf4351_calc_counters+1)^0,w,c
 11780  00FA' 6E00'              	movwf	(adf4351_calc_counters@vfoout+1)^0,c
 11781  00FC' 5000'              	movf	(??_adf4351_calc_counters+2)^0,w,c
 11782  00FE' 6E00'              	movwf	(adf4351_calc_counters@vfoout+2)^0,c
 11783  0100' 5000'              	movf	(??_adf4351_calc_counters+3)^0,w,c
 11784  0102' 6E00'              	movwf	(adf4351_calc_counters@vfoout+3)^0,c
 11785  0104' 6A00'              	clrf	(adf4351_calc_counters@vfoout+4)^0,c
 11786  0106' 6A00'              	clrf	(adf4351_calc_counters@vfoout+5)^0,c
 11787  0108' 6A00'              	clrf	(adf4351_calc_counters@vfoout+6)^0,c
 11788  010A' 6A00'              	clrf	(adf4351_calc_counters@vfoout+7)^0,c
 11789  010C' EF00' F000'        	goto	l10013
 11790  0110'                    l10011:
 11791                           
 11792                           ;src/driver/adf4351.c: 133:   vfoout = ctx->vco_freq * 2L;
 11793  0110' EE20 F033          	lfsr	2,51
 11794  0114' 5000'              	movf	adf4351_calc_counters@ctx^0,w,c
 11795  0116' 26D9               	addwf	fsr2l,f,c
 11796  0118' 5000'              	movf	(adf4351_calc_counters@ctx+1)^0,w,c
 11797  011A' 22DA               	addwfc	fsr2h,f,c
 11798  011C' CFDE F040'         	movff	postinc2,??_adf4351_calc_counters
 11799  0120' CFDE F041'         	movff	postinc2,??_adf4351_calc_counters+1
 11800  0124' CFDE F042'         	movff	postinc2,??_adf4351_calc_counters+2
 11801  0128' CFDE F043'         	movff	postinc2,??_adf4351_calc_counters+3
 11802  012C' 90D8               	bcf	status,0,c
 11803  012E' 3400'              	rlcf	??_adf4351_calc_counters^0,w,c
 11804  0130' 6E00'              	movwf	adf4351_calc_counters@vfoout^0,c
 11805  0132' 3400'              	rlcf	(??_adf4351_calc_counters+1)^0,w,c
 11806  0134' 6E00'              	movwf	(adf4351_calc_counters@vfoout+1)^0,c
 11807  0136' 3400'              	rlcf	(??_adf4351_calc_counters+2)^0,w,c
 11808  0138' 6E00'              	movwf	(adf4351_calc_counters@vfoout+2)^0,c
 11809  013A' 3400'              	rlcf	(??_adf4351_calc_counters+3)^0,w,c
 11810  013C' 6E00'              	movwf	(adf4351_calc_counters@vfoout+3)^0,c
 11811  013E' 6A00'              	clrf	(adf4351_calc_counters@vfoout+4)^0,c
 11812  0140' 6A00'              	clrf	(adf4351_calc_counters@vfoout+5)^0,c
 11813  0142' 6A00'              	clrf	(adf4351_calc_counters@vfoout+6)^0,c
 11814  0144' 6A00'              	clrf	(adf4351_calc_counters@vfoout+7)^0,c
 11815  0146'                    l10013:
 11816                           
 11817                           ;src/driver/adf4351.c: 138:  u64 Nmal10000 = (vfoout*10000L) / (u64)ctx->pfd;
 11818  0146' 0E10               	movlw	16
 11819  0148' 6E00'              	movwf	___omul@multiplicand^0,c
 11820  014A' 0E27               	movlw	39
 11821  014C' 6E00'              	movwf	(___omul@multiplicand+1)^0,c
 11822  014E' 0E00               	movlw	0
 11823  0150' 6E00'              	movwf	(___omul@multiplicand+2)^0,c
 11824  0152' 0E00               	movlw	0
 11825  0154' 6E00'              	movwf	(___omul@multiplicand+3)^0,c
 11826  0156' 0E00               	movlw	0
 11827  0158' 6E00'              	movwf	(___omul@multiplicand+4)^0,c
 11828  015A' 0E00               	movlw	0
 11829  015C' 6E00'              	movwf	(___omul@multiplicand+5)^0,c
 11830  015E' 0E00               	movlw	0
 11831  0160' 6E00'              	movwf	(___omul@multiplicand+6)^0,c
 11832  0162' 0E00               	movlw	0
 11833  0164' 6E00'              	movwf	(___omul@multiplicand+7)^0,c
 11834  0166' C052' F00D'        	movff	adf4351_calc_counters@vfoout,___omul@multiplier
 11835  016A' C053' F00E'        	movff	adf4351_calc_counters@vfoout+1,___omul@multiplier+1
 11836  016E' C054' F00F'        	movff	adf4351_calc_counters@vfoout+2,___omul@multiplier+2
 11837  0172' C055' F010'        	movff	adf4351_calc_counters@vfoout+3,___omul@multiplier+3
 11838  0176' C056' F011'        	movff	adf4351_calc_counters@vfoout+4,___omul@multiplier+4
 11839  017A' C057' F012'        	movff	adf4351_calc_counters@vfoout+5,___omul@multiplier+5
 11840  017E' C058' F013'        	movff	adf4351_calc_counters@vfoout+6,___omul@multiplier+6
 11841  0182' C059' F014'        	movff	adf4351_calc_counters@vfoout+7,___omul@multiplier+7
 11842  0186' EC00' F000'        	call	___omul	;wreg free
 11843  018A' C00D' F025'        	movff	?___omul,___lodiv@dividend
 11844  018E' C00E' F026'        	movff	?___omul+1,___lodiv@dividend+1
 11845  0192' C00F' F027'        	movff	?___omul+2,___lodiv@dividend+2
 11846  0196' C010' F028'        	movff	?___omul+3,___lodiv@dividend+3
 11847  019A' C011' F029'        	movff	?___omul+4,___lodiv@dividend+4
 11848  019E' C012' F02A'        	movff	?___omul+5,___lodiv@dividend+5
 11849  01A2' C013' F02B'        	movff	?___omul+6,___lodiv@dividend+6
 11850  01A6' C014' F02C'        	movff	?___omul+7,___lodiv@dividend+7
 11851  01AA' EE20 F02F          	lfsr	2,47
 11852  01AE' 5000'              	movf	adf4351_calc_counters@ctx^0,w,c
 11853  01B0' 26D9               	addwf	fsr2l,f,c
 11854  01B2' 5000'              	movf	(adf4351_calc_counters@ctx+1)^0,w,c
 11855  01B4' 22DA               	addwfc	fsr2h,f,c
 11856  01B6' CFDE F040'         	movff	postinc2,??_adf4351_calc_counters
 11857  01BA' CFDE F041'         	movff	postinc2,??_adf4351_calc_counters+1
 11858  01BE' CFDE F042'         	movff	postinc2,??_adf4351_calc_counters+2
 11859  01C2' CFDE F043'         	movff	postinc2,??_adf4351_calc_counters+3
 11860  01C6' 5000'              	movf	??_adf4351_calc_counters^0,w,c
 11861  01C8' 6E00'              	movwf	___lodiv@divisor^0,c
 11862  01CA' 5000'              	movf	(??_adf4351_calc_counters+1)^0,w,c
 11863  01CC' 6E00'              	movwf	(___lodiv@divisor+1)^0,c
 11864  01CE' 5000'              	movf	(??_adf4351_calc_counters+2)^0,w,c
 11865  01D0' 6E00'              	movwf	(___lodiv@divisor+2)^0,c
 11866  01D2' 5000'              	movf	(??_adf4351_calc_counters+3)^0,w,c
 11867  01D4' 6E00'              	movwf	(___lodiv@divisor+3)^0,c
 11868  01D6' 6A00'              	clrf	(___lodiv@divisor+4)^0,c
 11869  01D8' 6A00'              	clrf	(___lodiv@divisor+5)^0,c
 11870  01DA' 6A00'              	clrf	(___lodiv@divisor+6)^0,c
 11871  01DC' 6A00'              	clrf	(___lodiv@divisor+7)^0,c
 11872  01DE' EC00' F000'        	call	___lodiv	;wreg free
 11873  01E2' C025' F05A'        	movff	?___lodiv,adf4351_calc_counters@Nmal10000
 11874  01E6' C026' F05B'        	movff	?___lodiv+1,adf4351_calc_counters@Nmal10000+1
 11875  01EA' C027' F05C'        	movff	?___lodiv+2,adf4351_calc_counters@Nmal10000+2
 11876  01EE' C028' F05D'        	movff	?___lodiv+3,adf4351_calc_counters@Nmal10000+3
 11877  01F2' C029' F05E'        	movff	?___lodiv+4,adf4351_calc_counters@Nmal10000+4
 11878  01F6' C02A' F05F'        	movff	?___lodiv+5,adf4351_calc_counters@Nmal10000+5
 11879  01FA' C02B' F060'        	movff	?___lodiv+6,adf4351_calc_counters@Nmal10000+6
 11880  01FE' C02C' F061'        	movff	?___lodiv+7,adf4351_calc_counters@Nmal10000+7
 11881  0202'                    
 11882                           ;src/driver/adf4351.c: 139:  u32 INT = (u32)(Nmal10000/10000);
 11883  0202' C05A' F025'        	movff	adf4351_calc_counters@Nmal10000,___lodiv@dividend
 11884  0206' C05B' F026'        	movff	adf4351_calc_counters@Nmal10000+1,___lodiv@dividend+1
 11885  020A' C05C' F027'        	movff	adf4351_calc_counters@Nmal10000+2,___lodiv@dividend+2
 11886  020E' C05D' F028'        	movff	adf4351_calc_counters@Nmal10000+3,___lodiv@dividend+3
 11887  0212' C05E' F029'        	movff	adf4351_calc_counters@Nmal10000+4,___lodiv@dividend+4
 11888  0216' C05F' F02A'        	movff	adf4351_calc_counters@Nmal10000+5,___lodiv@dividend+5
 11889  021A' C060' F02B'        	movff	adf4351_calc_counters@Nmal10000+6,___lodiv@dividend+6
 11890  021E' C061' F02C'        	movff	adf4351_calc_counters@Nmal10000+7,___lodiv@dividend+7
 11891  0222' 0E10               	movlw	16
 11892  0224' 6E00'              	movwf	___lodiv@divisor^0,c
 11893  0226' 0E27               	movlw	39
 11894  0228' 6E00'              	movwf	(___lodiv@divisor+1)^0,c
 11895  022A' 0E00               	movlw	0
 11896  022C' 6E00'              	movwf	(___lodiv@divisor+2)^0,c
 11897  022E' 0E00               	movlw	0
 11898  0230' 6E00'              	movwf	(___lodiv@divisor+3)^0,c
 11899  0232' 0E00               	movlw	0
 11900  0234' 6E00'              	movwf	(___lodiv@divisor+4)^0,c
 11901  0236' 0E00               	movlw	0
 11902  0238' 6E00'              	movwf	(___lodiv@divisor+5)^0,c
 11903  023A' 0E00               	movlw	0
 11904  023C' 6E00'              	movwf	(___lodiv@divisor+6)^0,c
 11905  023E' 0E00               	movlw	0
 11906  0240' 6E00'              	movwf	(___lodiv@divisor+7)^0,c
 11907  0242' EC00' F000'        	call	___lodiv	;wreg free
 11908  0246' C025' F040'        	movff	?___lodiv,??_adf4351_calc_counters
 11909  024A' C026' F041'        	movff	?___lodiv+1,??_adf4351_calc_counters+1
 11910  024E' C027' F042'        	movff	?___lodiv+2,??_adf4351_calc_counters+2
 11911  0252' C028' F043'        	movff	?___lodiv+3,??_adf4351_calc_counters+3
 11912  0256' C029' F044'        	movff	?___lodiv+4,??_adf4351_calc_counters+4
 11913  025A' C02A' F045'        	movff	?___lodiv+5,??_adf4351_calc_counters+5
 11914  025E' C02B' F046'        	movff	?___lodiv+6,??_adf4351_calc_counters+6
 11915  0262' C02C' F047'        	movff	?___lodiv+7,??_adf4351_calc_counters+7
 11916  0266' C040' F048'        	movff	??_adf4351_calc_counters,adf4351_calc_counters@INT
 11917  026A' C041' F049'        	movff	??_adf4351_calc_counters+1,adf4351_calc_counters@INT+1
 11918  026E' C042' F04A'        	movff	??_adf4351_calc_counters+2,adf4351_calc_counters@INT+2
 11919  0272' C043' F04B'        	movff	??_adf4351_calc_counters+3,adf4351_calc_counters@INT+3
 11920                           
 11921                           ;src/driver/adf4351.c: 140:  ctx->reg0.integer = (u16)(INT);
 11922  0276' EE20 F002          	lfsr	2,2
 11923  027A' 5000'              	movf	adf4351_calc_counters@ctx^0,w,c
 11924  027C' 26D9               	addwf	fsr2l,f,c
 11925  027E' 5000'              	movf	(adf4351_calc_counters@ctx+1)^0,w,c
 11926  0280' 22DA               	addwfc	fsr2h,f,c
 11927  0282' C048' FFDE         	movff	adf4351_calc_counters@INT,postinc2
 11928  0286' C049' FFDD         	movff	adf4351_calc_counters@INT+1,postdec2
 11929  028A'                    
 11930                           ;src/driver/adf4351.c: 141:  u32 rest = Nmal10000 - (u32)ctx->reg0.integer * 10000L;
 11931  028A' EE20 F002          	lfsr	2,2
 11932  028E' 5000'              	movf	adf4351_calc_counters@ctx^0,w,c
 11933  0290' 26D9               	addwf	fsr2l,f,c
 11934  0292' 5000'              	movf	(adf4351_calc_counters@ctx+1)^0,w,c
 11935  0294' 22DA               	addwfc	fsr2h,f,c
 11936  0296' CFDE F040'         	movff	postinc2,??_adf4351_calc_counters
 11937  029A' CFDD F041'         	movff	postdec2,??_adf4351_calc_counters+1
 11938  029E' C040' F00D'        	movff	??_adf4351_calc_counters,___lmul@multiplier
 11939  02A2' C041' F00E'        	movff	??_adf4351_calc_counters+1,___lmul@multiplier+1
 11940  02A6' 6A00'              	clrf	(___lmul@multiplier+2)^0,c
 11941  02A8' 6A00'              	clrf	(___lmul@multiplier+3)^0,c
 11942  02AA' 0EF0               	movlw	240
 11943  02AC' 6E00'              	movwf	___lmul@multiplicand^0,c
 11944  02AE' 0ED8               	movlw	216
 11945  02B0' 6E00'              	movwf	(___lmul@multiplicand+1)^0,c
 11946  02B2' 0EFF               	movlw	255
 11947  02B4' 6E00'              	movwf	(___lmul@multiplicand+2)^0,c
 11948  02B6' 0EFF               	movlw	255
 11949  02B8' 6E00'              	movwf	(___lmul@multiplicand+3)^0,c
 11950  02BA' EC00' F000'        	call	___lmul	;wreg free
 11951  02BE' 5000'              	movf	adf4351_calc_counters@Nmal10000^0,w,c
 11952  02C0' 2400'              	addwf	?___lmul^0,w,c
 11953  02C2' 6E00'              	movwf	adf4351_calc_counters@rest^0,c
 11954  02C4' 5000'              	movf	(adf4351_calc_counters@Nmal10000+1)^0,w,c
 11955  02C6' 2000'              	addwfc	(?___lmul+1)^0,w,c
 11956  02C8' 6E00'              	movwf	(adf4351_calc_counters@rest+1)^0,c
 11957  02CA' 5000'              	movf	(adf4351_calc_counters@Nmal10000+2)^0,w,c
 11958  02CC' 2000'              	addwfc	(?___lmul+2)^0,w,c
 11959  02CE' 6E00'              	movwf	(adf4351_calc_counters@rest+2)^0,c
 11960  02D0' 5000'              	movf	(adf4351_calc_counters@Nmal10000+3)^0,w,c
 11961  02D2' 2000'              	addwfc	(?___lmul+3)^0,w,c
 11962  02D4' 6E00'              	movwf	(adf4351_calc_counters@rest+3)^0,c
 11963  02D6'                    
 11964                           ;src/driver/adf4351.c: 142:  ctx->reg0.frac = (u16)((u32)(ctx->reg1.mod/1000) * rest) / 
      +                          10;
 11965  02D6' 0E03               	movlw	3
 11966  02D8' 6E00'              	movwf	(___lwdiv@divisor+1)^0,c
 11967  02DA' 0EE8               	movlw	232
 11968  02DC' 6E00'              	movwf	___lwdiv@divisor^0,c
 11969  02DE' EE20 F009          	lfsr	2,9
 11970  02E2' 5000'              	movf	adf4351_calc_counters@ctx^0,w,c
 11971  02E4' 26D9               	addwf	fsr2l,f,c
 11972  02E6' 5000'              	movf	(adf4351_calc_counters@ctx+1)^0,w,c
 11973  02E8' 22DA               	addwfc	fsr2h,f,c
 11974  02EA' CFDE F00D'         	movff	postinc2,___lwdiv@dividend
 11975  02EE' CFDD F00E'         	movff	postdec2,___lwdiv@dividend+1
 11976  02F2' EC00' F000'        	call	___lwdiv	;wreg free
 11977  02F6' C00D' F014'        	movff	?___lwdiv,___wmul@multiplier
 11978  02FA' C00E' F015'        	movff	?___lwdiv+1,___wmul@multiplier+1
 11979  02FE' C04C' F016'        	movff	adf4351_calc_counters@rest,___wmul@multiplicand
 11980  0302' C04D' F017'        	movff	adf4351_calc_counters@rest+1,___wmul@multiplicand+1
 11981  0306' EC00' F000'        	call	___wmul	;wreg free
 11982  030A' C014' F050'        	movff	?___wmul,_adf4351_calc_counters$3879
 11983  030E' C015' F051'        	movff	?___wmul+1,_adf4351_calc_counters$3879+1
 11984  0312'                    
 11985                           ;src/driver/adf4351.c: 142:  ctx->reg0.frac = (u16)((u32)(ctx->reg1.mod/1000) * rest) / 
      +                          10;
 11986  0312' C050' F00D'        	movff	_adf4351_calc_counters$3879,___lwdiv@dividend
 11987  0316' C051' F00E'        	movff	_adf4351_calc_counters$3879+1,___lwdiv@dividend+1
 11988  031A' 0E00               	movlw	0
 11989  031C' 6E00'              	movwf	(___lwdiv@divisor+1)^0,c
 11990  031E' 0E0A               	movlw	10
 11991  0320' 6E00'              	movwf	___lwdiv@divisor^0,c
 11992  0322' EC00' F000'        	call	___lwdiv	;wreg free
 11993  0326' EE20 F004          	lfsr	2,4
 11994  032A' 5000'              	movf	adf4351_calc_counters@ctx^0,w,c
 11995  032C' 26D9               	addwf	fsr2l,f,c
 11996  032E' 5000'              	movf	(adf4351_calc_counters@ctx+1)^0,w,c
 11997  0330' 22DA               	addwfc	fsr2h,f,c
 11998  0332' C00D' FFDE         	movff	?___lwdiv,postinc2
 11999  0336' C00E' FFDD         	movff	?___lwdiv+1,postdec2
 12000  033A' 0012               	return		;funcret
 12001  033C'                    __end_of_adf4351_calc_counters:
 12002                           	opt callstack 0
 12003                           
 12004 ;; *************** function ___omul *****************
 12005 ;; Defined at:
 12006 ;;		line 91 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul64.c"
 12007 ;; Parameters:    Size  Location     Type
 12008 ;;  multiplier      8   13[COMRAM] unsigned long long 
 12009 ;;  multiplicand    8   21[COMRAM] unsigned long long 
 12010 ;; Auto vars:     Size  Location     Type
 12011 ;;  product         8   29[COMRAM] unsigned long long 
 12012 ;; Return value:  Size  Location     Type
 12013 ;;                  8   13[COMRAM] unsigned long long 
 12014 ;; Registers used:
 12015 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12016 ;; Tracked objects:
 12017 ;;		On entry : 0/0
 12018 ;;		On exit  : 0/0
 12019 ;;		Unchanged: 0/0
 12020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12021 ;;      Params:        16       0       0       0       0       0       0
 12022 ;;      Locals:         8       0       0       0       0       0       0
 12023 ;;      Temps:          0       0       0       0       0       0       0
 12024 ;;      Totals:        24       0       0       0       0       0       0
 12025 ;;Total ram usage:       24 bytes
 12026 ;; Hardware stack levels used:    1
 12027 ;; Hardware stack levels required when called:    2
 12028 ;; This function calls:
 12029 ;;		Nothing
 12030 ;; This function is called by:
 12031 ;;		_adf4351_calc_counters
 12032 ;;		_calc_mixer_corr_value
 12033 ;; This function uses a non-reentrant model
 12034 ;;
 12035                           
 12036                           	psect	text26
 12037  0000'                    __ptext26:
 12038                           	opt callstack 0
 12039  0000'                    ___omul:
 12040                           	opt callstack 25
 12041  0000' EE20' F000'        	lfsr	2,___omul@product
 12042  0004' 0E07               	movlw	7
 12043  0006'                    u7681:
 12044  0006' 6ADE               	clrf	postinc2,c
 12045  0008' 06E8               	decf	wreg,f,c
 12046  000A' E2FD               	bc	u7681
 12047  000C'                    l6949:
 12048  000C' A000'              	btfss	___omul@multiplier^0,0,c
 12049  000E' EF00' F000'        	goto	u7691
 12050  0012' EF00' F000'        	goto	u7690
 12051  0016'                    u7691:
 12052  0016' EF00' F000'        	goto	l6953
 12053  001A'                    u7690:
 12054  001A' 5000'              	movf	___omul@multiplicand^0,w,c
 12055  001C' 2600'              	addwf	___omul@product^0,f,c
 12056  001E' 5000'              	movf	(___omul@multiplicand+1)^0,w,c
 12057  0020' 2200'              	addwfc	(___omul@product+1)^0,f,c
 12058  0022' 5000'              	movf	(___omul@multiplicand+2)^0,w,c
 12059  0024' 2200'              	addwfc	(___omul@product+2)^0,f,c
 12060  0026' 5000'              	movf	(___omul@multiplicand+3)^0,w,c
 12061  0028' 2200'              	addwfc	(___omul@product+3)^0,f,c
 12062  002A' 5000'              	movf	(___omul@multiplicand+4)^0,w,c
 12063  002C' 2200'              	addwfc	(___omul@product+4)^0,f,c
 12064  002E' 5000'              	movf	(___omul@multiplicand+5)^0,w,c
 12065  0030' 2200'              	addwfc	(___omul@product+5)^0,f,c
 12066  0032' 5000'              	movf	(___omul@multiplicand+6)^0,w,c
 12067  0034' 2200'              	addwfc	(___omul@product+6)^0,f,c
 12068  0036' 5000'              	movf	(___omul@multiplicand+7)^0,w,c
 12069  0038' 2200'              	addwfc	(___omul@product+7)^0,f,c
 12070  003A'                    l6953:
 12071  003A' 90D8               	bcf	status,0,c
 12072  003C' 3600'              	rlcf	___omul@multiplicand^0,f,c
 12073  003E' 3600'              	rlcf	(___omul@multiplicand+1)^0,f,c
 12074  0040' 3600'              	rlcf	(___omul@multiplicand+2)^0,f,c
 12075  0042' 3600'              	rlcf	(___omul@multiplicand+3)^0,f,c
 12076  0044' 3600'              	rlcf	(___omul@multiplicand+4)^0,f,c
 12077  0046' 3600'              	rlcf	(___omul@multiplicand+5)^0,f,c
 12078  0048' 3600'              	rlcf	(___omul@multiplicand+6)^0,f,c
 12079  004A' 3600'              	rlcf	(___omul@multiplicand+7)^0,f,c
 12080  004C' 90D8               	bcf	status,0,c
 12081  004E' 3200'              	rrcf	(___omul@multiplier+7)^0,f,c
 12082  0050' 3200'              	rrcf	(___omul@multiplier+6)^0,f,c
 12083  0052' 3200'              	rrcf	(___omul@multiplier+5)^0,f,c
 12084  0054' 3200'              	rrcf	(___omul@multiplier+4)^0,f,c
 12085  0056' 3200'              	rrcf	(___omul@multiplier+3)^0,f,c
 12086  0058' 3200'              	rrcf	(___omul@multiplier+2)^0,f,c
 12087  005A' 3200'              	rrcf	(___omul@multiplier+1)^0,f,c
 12088  005C' 3200'              	rrcf	___omul@multiplier^0,f,c
 12089  005E' 5000'              	movf	___omul@multiplier^0,w,c
 12090  0060' 1000'              	iorwf	(___omul@multiplier+1)^0,w,c
 12091  0062' 1000'              	iorwf	(___omul@multiplier+2)^0,w,c
 12092  0064' 1000'              	iorwf	(___omul@multiplier+3)^0,w,c
 12093  0066' 1000'              	iorwf	(___omul@multiplier+4)^0,w,c
 12094  0068' 1000'              	iorwf	(___omul@multiplier+5)^0,w,c
 12095  006A' 1000'              	iorwf	(___omul@multiplier+6)^0,w,c
 12096  006C' 1000'              	iorwf	(___omul@multiplier+7)^0,w,c
 12097  006E' A4D8               	btfss	status,2,c
 12098  0070' EF00' F000'        	goto	u7701
 12099  0074' EF00' F000'        	goto	u7700
 12100  0078'                    u7701:
 12101  0078' EF00' F000'        	goto	l6949
 12102  007C'                    u7700:
 12103  007C' C01D' F00D'        	movff	___omul@product,?___omul
 12104  0080' C01E' F00E'        	movff	___omul@product+1,?___omul+1
 12105  0084' C01F' F00F'        	movff	___omul@product+2,?___omul+2
 12106  0088' C020' F010'        	movff	___omul@product+3,?___omul+3
 12107  008C' C021' F011'        	movff	___omul@product+4,?___omul+4
 12108  0090' C022' F012'        	movff	___omul@product+5,?___omul+5
 12109  0094' C023' F013'        	movff	___omul@product+6,?___omul+6
 12110  0098' C024' F014'        	movff	___omul@product+7,?___omul+7
 12111  009C' 0012               	return		;funcret
 12112  009E'                    __end_of___omul:
 12113                           	opt callstack 0
 12114                           
 12115 ;; *************** function ___lwdiv *****************
 12116 ;; Defined at:
 12117 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lwdiv.c"
 12118 ;; Parameters:    Size  Location     Type
 12119 ;;  dividend        2   13[COMRAM] unsigned int 
 12120 ;;  divisor         2   15[COMRAM] unsigned int 
 12121 ;; Auto vars:     Size  Location     Type
 12122 ;;  quotient        2   17[COMRAM] unsigned int 
 12123 ;;  counter         1   19[COMRAM] unsigned char 
 12124 ;; Return value:  Size  Location     Type
 12125 ;;                  2   13[COMRAM] unsigned int 
 12126 ;; Registers used:
 12127 ;;		wreg, status,2, status,0
 12128 ;; Tracked objects:
 12129 ;;		On entry : 0/0
 12130 ;;		On exit  : 0/0
 12131 ;;		Unchanged: 0/0
 12132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12133 ;;      Params:         4       0       0       0       0       0       0
 12134 ;;      Locals:         3       0       0       0       0       0       0
 12135 ;;      Temps:          0       0       0       0       0       0       0
 12136 ;;      Totals:         7       0       0       0       0       0       0
 12137 ;;Total ram usage:        7 bytes
 12138 ;; Hardware stack levels used:    1
 12139 ;; Hardware stack levels required when called:    2
 12140 ;; This function calls:
 12141 ;;		Nothing
 12142 ;; This function is called by:
 12143 ;;		_adf4351_calc_counters
 12144 ;; This function uses a non-reentrant model
 12145 ;;
 12146                           
 12147                           	psect	text27
 12148  0000'                    __ptext27:
 12149                           	opt callstack 0
 12150  0000'                    ___lwdiv:
 12151                           	opt callstack 25
 12152  0000' 0E00               	movlw	0
 12153  0002' 6E00'              	movwf	(___lwdiv@quotient+1)^0,c
 12154  0004' 0E00               	movlw	0
 12155  0006' 6E00'              	movwf	___lwdiv@quotient^0,c
 12156  0008' 5000'              	movf	___lwdiv@divisor^0,w,c
 12157  000A' 1000'              	iorwf	(___lwdiv@divisor+1)^0,w,c
 12158  000C' B4D8               	btfsc	status,2,c
 12159  000E' EF00' F000'        	goto	u7751
 12160  0012' EF00' F000'        	goto	u7750
 12161  0016'                    u7751:
 12162  0016' EF00' F000'        	goto	l1889
 12163  001A'                    u7750:
 12164  001A' 0E01               	movlw	1
 12165  001C' 6E00'              	movwf	___lwdiv@counter^0,c
 12166  001E' EF00' F000'        	goto	l6987
 12167  0022'                    l6985:
 12168  0022' 90D8               	bcf	status,0,c
 12169  0024' 3600'              	rlcf	___lwdiv@divisor^0,f,c
 12170  0026' 3600'              	rlcf	(___lwdiv@divisor+1)^0,f,c
 12171  0028' 2A00'              	incf	___lwdiv@counter^0,f,c
 12172  002A'                    l6987:
 12173  002A' AE00'              	btfss	(___lwdiv@divisor+1)^0,7,c
 12174  002C' EF00' F000'        	goto	u7761
 12175  0030' EF00' F000'        	goto	u7760
 12176  0034'                    u7761:
 12177  0034' EF00' F000'        	goto	l6985
 12178  0038'                    u7760:
 12179  0038'                    l6989:
 12180  0038' 90D8               	bcf	status,0,c
 12181  003A' 3600'              	rlcf	___lwdiv@quotient^0,f,c
 12182  003C' 3600'              	rlcf	(___lwdiv@quotient+1)^0,f,c
 12183  003E' 5000'              	movf	___lwdiv@divisor^0,w,c
 12184  0040' 5C00'              	subwf	___lwdiv@dividend^0,w,c
 12185  0042' 5000'              	movf	(___lwdiv@divisor+1)^0,w,c
 12186  0044' 5800'              	subwfb	(___lwdiv@dividend+1)^0,w,c
 12187  0046' A0D8               	btfss	status,0,c
 12188  0048' EF00' F000'        	goto	u7771
 12189  004C' EF00' F000'        	goto	u7770
 12190  0050'                    u7771:
 12191  0050' EF00' F000'        	goto	l6997
 12192  0054'                    u7770:
 12193  0054' 5000'              	movf	___lwdiv@divisor^0,w,c
 12194  0056' 5E00'              	subwf	___lwdiv@dividend^0,f,c
 12195  0058' 5000'              	movf	(___lwdiv@divisor+1)^0,w,c
 12196  005A' 5A00'              	subwfb	(___lwdiv@dividend+1)^0,f,c
 12197  005C' 8000'              	bsf	___lwdiv@quotient^0,0,c
 12198  005E'                    l6997:
 12199  005E' 90D8               	bcf	status,0,c
 12200  0060' 3200'              	rrcf	(___lwdiv@divisor+1)^0,f,c
 12201  0062' 3200'              	rrcf	___lwdiv@divisor^0,f,c
 12202  0064' 2E00'              	decfsz	___lwdiv@counter^0,f,c
 12203  0066' EF00' F000'        	goto	l6989
 12204  006A'                    l1889:
 12205  006A' C011' F00D'        	movff	___lwdiv@quotient,?___lwdiv
 12206  006E' C012' F00E'        	movff	___lwdiv@quotient+1,?___lwdiv+1
 12207  0072' 0012               	return		;funcret
 12208  0074'                    __end_of___lwdiv:
 12209                           	opt callstack 0
 12210                           
 12211 ;; *************** function ___lodiv *****************
 12212 ;; Defined at:
 12213 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 12214 ;; Parameters:    Size  Location     Type
 12215 ;;  dividend        8   37[COMRAM] unsigned long long 
 12216 ;;  divisor         8   45[COMRAM] unsigned long long 
 12217 ;; Auto vars:     Size  Location     Type
 12218 ;;  quotient        8   53[COMRAM] unsigned long long 
 12219 ;;  counter         1   61[COMRAM] unsigned char 
 12220 ;; Return value:  Size  Location     Type
 12221 ;;                  8   37[COMRAM] unsigned long long 
 12222 ;; Registers used:
 12223 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12224 ;; Tracked objects:
 12225 ;;		On entry : 0/0
 12226 ;;		On exit  : 0/0
 12227 ;;		Unchanged: 0/0
 12228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12229 ;;      Params:        16       0       0       0       0       0       0
 12230 ;;      Locals:         9       0       0       0       0       0       0
 12231 ;;      Temps:          0       0       0       0       0       0       0
 12232 ;;      Totals:        25       0       0       0       0       0       0
 12233 ;;Total ram usage:       25 bytes
 12234 ;; Hardware stack levels used:    1
 12235 ;; Hardware stack levels required when called:    2
 12236 ;; This function calls:
 12237 ;;		Nothing
 12238 ;; This function is called by:
 12239 ;;		_adf4351_calc_counters
 12240 ;; This function uses a non-reentrant model
 12241 ;;
 12242                           
 12243                           	psect	text28
 12244  0000'                    __ptext28:
 12245                           	opt callstack 0
 12246  0000'                    ___lodiv:
 12247                           	opt callstack 25
 12248  0000' EE20' F000'        	lfsr	2,___lodiv@quotient
 12249  0004' 0E07               	movlw	7
 12250  0006'                    u7711:
 12251  0006' 6ADE               	clrf	postinc2,c
 12252  0008' 06E8               	decf	wreg,f,c
 12253  000A' E2FD               	bc	u7711
 12254  000C' 5000'              	movf	___lodiv@divisor^0,w,c
 12255  000E' 1000'              	iorwf	(___lodiv@divisor+1)^0,w,c
 12256  0010' 1000'              	iorwf	(___lodiv@divisor+2)^0,w,c
 12257  0012' 1000'              	iorwf	(___lodiv@divisor+3)^0,w,c
 12258  0014' 1000'              	iorwf	(___lodiv@divisor+4)^0,w,c
 12259  0016' 1000'              	iorwf	(___lodiv@divisor+5)^0,w,c
 12260  0018' 1000'              	iorwf	(___lodiv@divisor+6)^0,w,c
 12261  001A' 1000'              	iorwf	(___lodiv@divisor+7)^0,w,c
 12262  001C' B4D8               	btfsc	status,2,c
 12263  001E' EF00' F000'        	goto	u7721
 12264  0022' EF00' F000'        	goto	u7720
 12265  0026'                    u7721:
 12266  0026' EF00' F000'        	goto	l1836
 12267  002A'                    u7720:
 12268  002A' 0E01               	movlw	1
 12269  002C' 6E00'              	movwf	___lodiv@counter^0,c
 12270  002E' EF00' F000'        	goto	l6965
 12271  0032'                    l6963:
 12272  0032' 90D8               	bcf	status,0,c
 12273  0034' 3600'              	rlcf	___lodiv@divisor^0,f,c
 12274  0036' 3600'              	rlcf	(___lodiv@divisor+1)^0,f,c
 12275  0038' 3600'              	rlcf	(___lodiv@divisor+2)^0,f,c
 12276  003A' 3600'              	rlcf	(___lodiv@divisor+3)^0,f,c
 12277  003C' 3600'              	rlcf	(___lodiv@divisor+4)^0,f,c
 12278  003E' 3600'              	rlcf	(___lodiv@divisor+5)^0,f,c
 12279  0040' 3600'              	rlcf	(___lodiv@divisor+6)^0,f,c
 12280  0042' 3600'              	rlcf	(___lodiv@divisor+7)^0,f,c
 12281  0044' 2A00'              	incf	___lodiv@counter^0,f,c
 12282  0046'                    l6965:
 12283  0046' AE00'              	btfss	(___lodiv@divisor+7)^0,7,c
 12284  0048' EF00' F000'        	goto	u7731
 12285  004C' EF00' F000'        	goto	u7730
 12286  0050'                    u7731:
 12287  0050' EF00' F000'        	goto	l6963
 12288  0054'                    u7730:
 12289  0054'                    l6967:
 12290  0054' 90D8               	bcf	status,0,c
 12291  0056' 3600'              	rlcf	___lodiv@quotient^0,f,c
 12292  0058' 3600'              	rlcf	(___lodiv@quotient+1)^0,f,c
 12293  005A' 3600'              	rlcf	(___lodiv@quotient+2)^0,f,c
 12294  005C' 3600'              	rlcf	(___lodiv@quotient+3)^0,f,c
 12295  005E' 3600'              	rlcf	(___lodiv@quotient+4)^0,f,c
 12296  0060' 3600'              	rlcf	(___lodiv@quotient+5)^0,f,c
 12297  0062' 3600'              	rlcf	(___lodiv@quotient+6)^0,f,c
 12298  0064' 3600'              	rlcf	(___lodiv@quotient+7)^0,f,c
 12299  0066' 5000'              	movf	___lodiv@divisor^0,w,c
 12300  0068' 5C00'              	subwf	___lodiv@dividend^0,w,c
 12301  006A' 5000'              	movf	(___lodiv@divisor+1)^0,w,c
 12302  006C' 5800'              	subwfb	(___lodiv@dividend+1)^0,w,c
 12303  006E' 5000'              	movf	(___lodiv@divisor+2)^0,w,c
 12304  0070' 5800'              	subwfb	(___lodiv@dividend+2)^0,w,c
 12305  0072' 5000'              	movf	(___lodiv@divisor+3)^0,w,c
 12306  0074' 5800'              	subwfb	(___lodiv@dividend+3)^0,w,c
 12307  0076' 5000'              	movf	(___lodiv@divisor+4)^0,w,c
 12308  0078' 5800'              	subwfb	(___lodiv@dividend+4)^0,w,c
 12309  007A' 5000'              	movf	(___lodiv@divisor+5)^0,w,c
 12310  007C' 5800'              	subwfb	(___lodiv@dividend+5)^0,w,c
 12311  007E' 5000'              	movf	(___lodiv@divisor+6)^0,w,c
 12312  0080' 5800'              	subwfb	(___lodiv@dividend+6)^0,w,c
 12313  0082' 5000'              	movf	(___lodiv@divisor+7)^0,w,c
 12314  0084' 5800'              	subwfb	(___lodiv@dividend+7)^0,w,c
 12315  0086' A0D8               	btfss	status,0,c
 12316  0088' EF00' F000'        	goto	u7741
 12317  008C' EF00' F000'        	goto	u7740
 12318  0090'                    u7741:
 12319  0090' EF00' F000'        	goto	l6975
 12320  0094'                    u7740:
 12321  0094' 5000'              	movf	___lodiv@divisor^0,w,c
 12322  0096' 5E00'              	subwf	___lodiv@dividend^0,f,c
 12323  0098' 5000'              	movf	(___lodiv@divisor+1)^0,w,c
 12324  009A' 5A00'              	subwfb	(___lodiv@dividend+1)^0,f,c
 12325  009C' 5000'              	movf	(___lodiv@divisor+2)^0,w,c
 12326  009E' 5A00'              	subwfb	(___lodiv@dividend+2)^0,f,c
 12327  00A0' 5000'              	movf	(___lodiv@divisor+3)^0,w,c
 12328  00A2' 5A00'              	subwfb	(___lodiv@dividend+3)^0,f,c
 12329  00A4' 5000'              	movf	(___lodiv@divisor+4)^0,w,c
 12330  00A6' 5A00'              	subwfb	(___lodiv@dividend+4)^0,f,c
 12331  00A8' 5000'              	movf	(___lodiv@divisor+5)^0,w,c
 12332  00AA' 5A00'              	subwfb	(___lodiv@dividend+5)^0,f,c
 12333  00AC' 5000'              	movf	(___lodiv@divisor+6)^0,w,c
 12334  00AE' 5A00'              	subwfb	(___lodiv@dividend+6)^0,f,c
 12335  00B0' 5000'              	movf	(___lodiv@divisor+7)^0,w,c
 12336  00B2' 5A00'              	subwfb	(___lodiv@dividend+7)^0,f,c
 12337  00B4' 8000'              	bsf	___lodiv@quotient^0,0,c
 12338  00B6'                    l6975:
 12339  00B6' 90D8               	bcf	status,0,c
 12340  00B8' 3200'              	rrcf	(___lodiv@divisor+7)^0,f,c
 12341  00BA' 3200'              	rrcf	(___lodiv@divisor+6)^0,f,c
 12342  00BC' 3200'              	rrcf	(___lodiv@divisor+5)^0,f,c
 12343  00BE' 3200'              	rrcf	(___lodiv@divisor+4)^0,f,c
 12344  00C0' 3200'              	rrcf	(___lodiv@divisor+3)^0,f,c
 12345  00C2' 3200'              	rrcf	(___lodiv@divisor+2)^0,f,c
 12346  00C4' 3200'              	rrcf	(___lodiv@divisor+1)^0,f,c
 12347  00C6' 3200'              	rrcf	___lodiv@divisor^0,f,c
 12348  00C8' 2E00'              	decfsz	___lodiv@counter^0,f,c
 12349  00CA' EF00' F000'        	goto	l6967
 12350  00CE'                    l1836:
 12351  00CE' C035' F025'        	movff	___lodiv@quotient,?___lodiv
 12352  00D2' C036' F026'        	movff	___lodiv@quotient+1,?___lodiv+1
 12353  00D6' C037' F027'        	movff	___lodiv@quotient+2,?___lodiv+2
 12354  00DA' C038' F028'        	movff	___lodiv@quotient+3,?___lodiv+3
 12355  00DE' C039' F029'        	movff	___lodiv@quotient+4,?___lodiv+4
 12356  00E2' C03A' F02A'        	movff	___lodiv@quotient+5,?___lodiv+5
 12357  00E6' C03B' F02B'        	movff	___lodiv@quotient+6,?___lodiv+6
 12358  00EA' C03C' F02C'        	movff	___lodiv@quotient+7,?___lodiv+7
 12359  00EE' 0012               	return		;funcret
 12360  00F0'                    __end_of___lodiv:
 12361                           	opt callstack 0
 12362                           
 12363 ;; *************** function ___aldiv *****************
 12364 ;; Defined at:
 12365 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aldiv.c"
 12366 ;; Parameters:    Size  Location     Type
 12367 ;;  dividend        4   13[COMRAM] long 
 12368 ;;  divisor         4   17[COMRAM] long 
 12369 ;; Auto vars:     Size  Location     Type
 12370 ;;  quotient        4   23[COMRAM] long 
 12371 ;;  sign            1   22[COMRAM] unsigned char 
 12372 ;;  counter         1   21[COMRAM] unsigned char 
 12373 ;; Return value:  Size  Location     Type
 12374 ;;                  4   13[COMRAM] long 
 12375 ;; Registers used:
 12376 ;;		wreg, status,2, status,0
 12377 ;; Tracked objects:
 12378 ;;		On entry : 0/0
 12379 ;;		On exit  : 0/0
 12380 ;;		Unchanged: 0/0
 12381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12382 ;;      Params:         8       0       0       0       0       0       0
 12383 ;;      Locals:         6       0       0       0       0       0       0
 12384 ;;      Temps:          0       0       0       0       0       0       0
 12385 ;;      Totals:        14       0       0       0       0       0       0
 12386 ;;Total ram usage:       14 bytes
 12387 ;; Hardware stack levels used:    1
 12388 ;; Hardware stack levels required when called:    2
 12389 ;; This function calls:
 12390 ;;		Nothing
 12391 ;; This function is called by:
 12392 ;;		_adf4351_set_freq
 12393 ;; This function uses a non-reentrant model
 12394 ;;
 12395                           
 12396                           	psect	text29
 12397  0000'                    __ptext29:
 12398                           	opt callstack 0
 12399  0000'                    ___aldiv:
 12400                           	opt callstack 26
 12401  0000' 0E00               	movlw	0
 12402  0002' 6E00'              	movwf	___aldiv@sign^0,c
 12403  0004' BE00'              	btfsc	(___aldiv@divisor+3)^0,7,c
 12404  0006' EF00' F000'        	goto	u8080
 12405  000A' EF00' F000'        	goto	u8081
 12406  000E'                    u8081:
 12407  000E' EF00' F000'        	goto	l7239
 12408  0012'                    u8080:
 12409  0012' 1E00'              	comf	(___aldiv@divisor+3)^0,f,c
 12410  0014' 1E00'              	comf	(___aldiv@divisor+2)^0,f,c
 12411  0016' 1E00'              	comf	(___aldiv@divisor+1)^0,f,c
 12412  0018' 6C00'              	negf	___aldiv@divisor^0,c
 12413  001A' 0E00               	movlw	0
 12414  001C' 2200'              	addwfc	(___aldiv@divisor+1)^0,f,c
 12415  001E' 2200'              	addwfc	(___aldiv@divisor+2)^0,f,c
 12416  0020' 2200'              	addwfc	(___aldiv@divisor+3)^0,f,c
 12417  0022' 0E01               	movlw	1
 12418  0024' 6E00'              	movwf	___aldiv@sign^0,c
 12419  0026'                    l7239:
 12420  0026' BE00'              	btfsc	(___aldiv@dividend+3)^0,7,c
 12421  0028' EF00' F000'        	goto	u8090
 12422  002C' EF00' F000'        	goto	u8091
 12423  0030'                    u8091:
 12424  0030' EF00' F000'        	goto	l7245
 12425  0034'                    u8090:
 12426  0034' 1E00'              	comf	(___aldiv@dividend+3)^0,f,c
 12427  0036' 1E00'              	comf	(___aldiv@dividend+2)^0,f,c
 12428  0038' 1E00'              	comf	(___aldiv@dividend+1)^0,f,c
 12429  003A' 6C00'              	negf	___aldiv@dividend^0,c
 12430  003C' 0E00               	movlw	0
 12431  003E' 2200'              	addwfc	(___aldiv@dividend+1)^0,f,c
 12432  0040' 2200'              	addwfc	(___aldiv@dividend+2)^0,f,c
 12433  0042' 2200'              	addwfc	(___aldiv@dividend+3)^0,f,c
 12434  0044' 0E01               	movlw	1
 12435  0046' 1A00'              	xorwf	___aldiv@sign^0,f,c
 12436  0048'                    l7245:
 12437  0048' 0E00               	movlw	0
 12438  004A' 6E00'              	movwf	___aldiv@quotient^0,c
 12439  004C' 0E00               	movlw	0
 12440  004E' 6E00'              	movwf	(___aldiv@quotient+1)^0,c
 12441  0050' 0E00               	movlw	0
 12442  0052' 6E00'              	movwf	(___aldiv@quotient+2)^0,c
 12443  0054' 0E00               	movlw	0
 12444  0056' 6E00'              	movwf	(___aldiv@quotient+3)^0,c
 12445  0058' 5000'              	movf	___aldiv@divisor^0,w,c
 12446  005A' 1000'              	iorwf	(___aldiv@divisor+1)^0,w,c
 12447  005C' 1000'              	iorwf	(___aldiv@divisor+2)^0,w,c
 12448  005E' 1000'              	iorwf	(___aldiv@divisor+3)^0,w,c
 12449  0060' B4D8               	btfsc	status,2,c
 12450  0062' EF00' F000'        	goto	u8101
 12451  0066' EF00' F000'        	goto	u8100
 12452  006A'                    u8101:
 12453  006A' EF00' F000'        	goto	l7267
 12454  006E'                    u8100:
 12455  006E' 0E01               	movlw	1
 12456  0070' 6E00'              	movwf	___aldiv@counter^0,c
 12457  0072' EF00' F000'        	goto	l7253
 12458  0076'                    l7251:
 12459  0076' 90D8               	bcf	status,0,c
 12460  0078' 3600'              	rlcf	___aldiv@divisor^0,f,c
 12461  007A' 3600'              	rlcf	(___aldiv@divisor+1)^0,f,c
 12462  007C' 3600'              	rlcf	(___aldiv@divisor+2)^0,f,c
 12463  007E' 3600'              	rlcf	(___aldiv@divisor+3)^0,f,c
 12464  0080' 2A00'              	incf	___aldiv@counter^0,f,c
 12465  0082'                    l7253:
 12466  0082' AE00'              	btfss	(___aldiv@divisor+3)^0,7,c
 12467  0084' EF00' F000'        	goto	u8111
 12468  0088' EF00' F000'        	goto	u8110
 12469  008C'                    u8111:
 12470  008C' EF00' F000'        	goto	l7251
 12471  0090'                    u8110:
 12472  0090'                    l7255:
 12473  0090' 90D8               	bcf	status,0,c
 12474  0092' 3600'              	rlcf	___aldiv@quotient^0,f,c
 12475  0094' 3600'              	rlcf	(___aldiv@quotient+1)^0,f,c
 12476  0096' 3600'              	rlcf	(___aldiv@quotient+2)^0,f,c
 12477  0098' 3600'              	rlcf	(___aldiv@quotient+3)^0,f,c
 12478  009A' 5000'              	movf	___aldiv@divisor^0,w,c
 12479  009C' 5C00'              	subwf	___aldiv@dividend^0,w,c
 12480  009E' 5000'              	movf	(___aldiv@divisor+1)^0,w,c
 12481  00A0' 5800'              	subwfb	(___aldiv@dividend+1)^0,w,c
 12482  00A2' 5000'              	movf	(___aldiv@divisor+2)^0,w,c
 12483  00A4' 5800'              	subwfb	(___aldiv@dividend+2)^0,w,c
 12484  00A6' 5000'              	movf	(___aldiv@divisor+3)^0,w,c
 12485  00A8' 5800'              	subwfb	(___aldiv@dividend+3)^0,w,c
 12486  00AA' A0D8               	btfss	status,0,c
 12487  00AC' EF00' F000'        	goto	u8121
 12488  00B0' EF00' F000'        	goto	u8120
 12489  00B4'                    u8121:
 12490  00B4' EF00' F000'        	goto	l7263
 12491  00B8'                    u8120:
 12492  00B8' 5000'              	movf	___aldiv@divisor^0,w,c
 12493  00BA' 5E00'              	subwf	___aldiv@dividend^0,f,c
 12494  00BC' 5000'              	movf	(___aldiv@divisor+1)^0,w,c
 12495  00BE' 5A00'              	subwfb	(___aldiv@dividend+1)^0,f,c
 12496  00C0' 5000'              	movf	(___aldiv@divisor+2)^0,w,c
 12497  00C2' 5A00'              	subwfb	(___aldiv@dividend+2)^0,f,c
 12498  00C4' 5000'              	movf	(___aldiv@divisor+3)^0,w,c
 12499  00C6' 5A00'              	subwfb	(___aldiv@dividend+3)^0,f,c
 12500  00C8' 8000'              	bsf	___aldiv@quotient^0,0,c
 12501  00CA'                    l7263:
 12502  00CA' 90D8               	bcf	status,0,c
 12503  00CC' 3200'              	rrcf	(___aldiv@divisor+3)^0,f,c
 12504  00CE' 3200'              	rrcf	(___aldiv@divisor+2)^0,f,c
 12505  00D0' 3200'              	rrcf	(___aldiv@divisor+1)^0,f,c
 12506  00D2' 3200'              	rrcf	___aldiv@divisor^0,f,c
 12507  00D4' 2E00'              	decfsz	___aldiv@counter^0,f,c
 12508  00D6' EF00' F000'        	goto	l7255
 12509  00DA'                    l7267:
 12510  00DA' 5000'              	movf	___aldiv@sign^0,w,c
 12511  00DC' B4D8               	btfsc	status,2,c
 12512  00DE' EF00' F000'        	goto	u8131
 12513  00E2' EF00' F000'        	goto	u8130
 12514  00E6'                    u8131:
 12515  00E6' EF00' F000'        	goto	l7271
 12516  00EA'                    u8130:
 12517  00EA' 1E00'              	comf	(___aldiv@quotient+3)^0,f,c
 12518  00EC' 1E00'              	comf	(___aldiv@quotient+2)^0,f,c
 12519  00EE' 1E00'              	comf	(___aldiv@quotient+1)^0,f,c
 12520  00F0' 6C00'              	negf	___aldiv@quotient^0,c
 12521  00F2' 0E00               	movlw	0
 12522  00F4' 2200'              	addwfc	(___aldiv@quotient+1)^0,f,c
 12523  00F6' 2200'              	addwfc	(___aldiv@quotient+2)^0,f,c
 12524  00F8' 2200'              	addwfc	(___aldiv@quotient+3)^0,f,c
 12525  00FA'                    l7271:
 12526  00FA' C017' F00D'        	movff	___aldiv@quotient,?___aldiv
 12527  00FE' C018' F00E'        	movff	___aldiv@quotient+1,?___aldiv+1
 12528  0102' C019' F00F'        	movff	___aldiv@quotient+2,?___aldiv+2
 12529  0106' C01A' F010'        	movff	___aldiv@quotient+3,?___aldiv+3
 12530  010A' 0012               	return		;funcret
 12531  010C'                    __end_of___aldiv:
 12532                           	opt callstack 0
 12533                           
 12534 ;; *************** function _adf4351_get_lock *****************
 12535 ;; Defined at:
 12536 ;;		line 148 in file "src/driver/adf4351.c"
 12537 ;; Parameters:    Size  Location     Type
 12538 ;;  ctx             2   13[COMRAM] PTR struct adf4351_ctx
 12539 ;;		 -> g_adf4351(55), 
 12540 ;; Auto vars:     Size  Location     Type
 12541 ;;		None
 12542 ;; Return value:  Size  Location     Type
 12543 ;;                  2   13[COMRAM] int 
 12544 ;; Registers used:
 12545 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12546 ;; Tracked objects:
 12547 ;;		On entry : 0/0
 12548 ;;		On exit  : 0/0
 12549 ;;		Unchanged: 0/0
 12550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12551 ;;      Params:         2       0       0       0       0       0       0
 12552 ;;      Locals:         0       0       0       0       0       0       0
 12553 ;;      Temps:          3       0       0       0       0       0       0
 12554 ;;      Totals:         5       0       0       0       0       0       0
 12555 ;;Total ram usage:        5 bytes
 12556 ;; Hardware stack levels used:    1
 12557 ;; Hardware stack levels required when called:    2
 12558 ;; This function calls:
 12559 ;;		Nothing
 12560 ;; This function is called by:
 12561 ;;		_setADF4351frequency
 12562 ;; This function uses a non-reentrant model
 12563 ;;
 12564                           
 12565                           	psect	text30
 12566  0000'                    __ptext30:
 12567                           	opt callstack 0
 12568  0000'                    _adf4351_get_lock:
 12569                           	opt callstack 27
 12570  0000'                    
 12571                           ;src/driver/adf4351.c: 148: BOOL adf4351_get_lock(adf4351_ctx* ctx);src/driver/adf4351.c
      +                          : 149: {;src/driver/adf4351.c: 150:  return (((*((PIN_ADF_LOCK)->pPORT) & (PIN_ADF_LOCK)
      +                          ->mask) != 0)==0)?0:1;
 12572  0000' 0E00'              	movlw	low (_PIN_ADF_LOCK_DEF+4)
 12573  0002' 6EF6               	movwf	tblptrl,c
 12574  0004' 0E00'              	movlw	high (_PIN_ADF_LOCK_DEF+4)
 12575  0006' 6EF7               	movwf	tblptrh,c
 12576  0008'                    	if	0	;tblptru may be non-zero
 12577  0008'                    	endif
 12578  0008'                    	if	0	;tblptru may be non-zero
 12579  0008'                    	endif
 12580  0008' 0008               	tblrd		*
 12581  000A' CFF5 F00F'         	movff	tablat,??_adf4351_get_lock
 12582  000E' 0E00'              	movlw	low _PIN_ADF_LOCK_DEF
 12583  0010' 6EF6               	movwf	tblptrl,c
 12584  0012'                    	if	1	;There is more than 1 active tblptr byte
 12585  0012' 0E00'              	movlw	high _PIN_ADF_LOCK_DEF
 12586  0014' 6EF7               	movwf	tblptrh,c
 12587  0016'                    	endif
 12588  0016'                    	if	0	;There are less than 3 active tblptr bytes
 12589  0016'                    	endif
 12590  0016' 0009               	tblrd		*+
 12591  0018' CFF5 F010'         	movff	tablat,??_adf4351_get_lock+1
 12592  001C' 0009               	tblrd		*+
 12593  001E' CFF5 F011'         	movff	tablat,??_adf4351_get_lock+2
 12594  0022' C010' FFD9         	movff	??_adf4351_get_lock+1,fsr2l
 12595  0026' C011' FFDA         	movff	??_adf4351_get_lock+2,fsr2h
 12596  002A' 50DF               	movf	indf2,w,c
 12597  002C' 1400'              	andwf	??_adf4351_get_lock^0,w,c
 12598  002E' 0900               	iorlw	0
 12599  0030' A4D8               	btfss	status,2,c
 12600  0032' EF00' F000'        	goto	u8341
 12601  0036' EF00' F000'        	goto	u8340
 12602  003A'                    u8341:
 12603  003A' 0E01               	movlw	1
 12604  003C' EF00' F000'        	goto	u8350
 12605  0040'                    u8340:
 12606  0040' 0E00               	movlw	0
 12607  0042'                    u8350:
 12608  0042' 6E00'              	movwf	?_adf4351_get_lock^0,c
 12609  0044' 6A00'              	clrf	(?_adf4351_get_lock+1)^0,c
 12610  0046' 0012               	return		;funcret
 12611  0048'                    __end_of_adf4351_get_lock:
 12612                           	opt callstack 0
 12613                           
 12614 ;; *************** function _rx_usart *****************
 12615 ;; Defined at:
 12616 ;;		line 107 in file "src/driver/usart.c"
 12617 ;; Parameters:    Size  Location     Type
 12618 ;;		None
 12619 ;; Auto vars:     Size  Location     Type
 12620 ;;  c               2   79[COMRAM] int 
 12621 ;; Return value:  Size  Location     Type
 12622 ;;                  1    wreg      void 
 12623 ;; Registers used:
 12624 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12625 ;; Tracked objects:
 12626 ;;		On entry : 0/0
 12627 ;;		On exit  : 0/0
 12628 ;;		Unchanged: 0/0
 12629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12630 ;;      Params:         0       0       0       0       0       0       0
 12631 ;;      Locals:         2       0       0       0       0       0       0
 12632 ;;      Temps:          0       0       0       0       0       0       0
 12633 ;;      Totals:         2       0       0       0       0       0       0
 12634 ;;Total ram usage:        2 bytes
 12635 ;; Hardware stack levels used:    1
 12636 ;; Hardware stack levels required when called:    8
 12637 ;; This function calls:
 12638 ;;		_rx_gps
 12639 ;;		_usart_getc
 12640 ;; This function is called by:
 12641 ;;		_main
 12642 ;; This function uses a non-reentrant model
 12643 ;;
 12644                           
 12645                           	psect	text31
 12646  0000'                    __ptext31:
 12647                           	opt callstack 0
 12648  0000'                    _rx_usart:
 12649                           	opt callstack 22
 12650  0000'                    l333:
 12651  0000'                    
 12652                           ;src/driver/usart.c: 112:  {;src/driver/usart.c: 113:   c = usart_getc();
 12653  0000' EC00' F000'        	call	_usart_getc	;wreg free
 12654  0004' C00D' F04F'        	movff	?_usart_getc,rx_usart@c
 12655  0008' C00E' F050'        	movff	?_usart_getc+1,rx_usart@c+1
 12656  000C'                    
 12657                           ;src/driver/usart.c: 114:   if(c == -1) return;
 12658  000C' 2800'              	incf	rx_usart@c^0,w,c
 12659  000E' E106               	bnz	u13261
 12660  0010' 2800'              	incf	(rx_usart@c+1)^0,w,c
 12661  0012' A4D8               	btfss	status,2,c
 12662  0014' EF00' F000'        	goto	u13261
 12663  0018' EF00' F000'        	goto	u13260
 12664  001C'                    u13261:
 12665  001C' EF00' F000'        	goto	l10711
 12666  0020'                    u13260:
 12667  0020' EF00' F000'        	goto	l335
 12668  0024'                    l10711:
 12669                           
 12670                           ;src/driver/usart.c: 115:   rx_gps(c);
 12671  0024' C04F' F04B'        	movff	rx_usart@c,rx_gps@c
 12672  0028' C050' F04C'        	movff	rx_usart@c+1,rx_gps@c+1
 12673  002C' EC00' F000'        	call	_rx_gps	;wreg free
 12674  0030' EF00' F000'        	goto	l333
 12675  0034'                    l335:
 12676  0034' 0012               	return		;funcret
 12677  0036'                    __end_of_rx_usart:
 12678                           	opt callstack 0
 12679                           
 12680 ;; *************** function _usart_getc *****************
 12681 ;; Defined at:
 12682 ;;		line 54 in file "src/driver/usart.c"
 12683 ;; Parameters:    Size  Location     Type
 12684 ;;		None
 12685 ;; Auto vars:     Size  Location     Type
 12686 ;;  res             2   17[COMRAM] int 
 12687 ;; Return value:  Size  Location     Type
 12688 ;;                  2   13[COMRAM] int 
 12689 ;; Registers used:
 12690 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12691 ;; Tracked objects:
 12692 ;;		On entry : 0/0
 12693 ;;		On exit  : 0/0
 12694 ;;		Unchanged: 0/0
 12695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12696 ;;      Params:         2       0       0       0       0       0       0
 12697 ;;      Locals:         2       0       0       0       0       0       0
 12698 ;;      Temps:          2       0       0       0       0       0       0
 12699 ;;      Totals:         6       0       0       0       0       0       0
 12700 ;;Total ram usage:        6 bytes
 12701 ;; Hardware stack levels used:    1
 12702 ;; Hardware stack levels required when called:    2
 12703 ;; This function calls:
 12704 ;;		Nothing
 12705 ;; This function is called by:
 12706 ;;		_rx_usart
 12707 ;; This function uses a non-reentrant model
 12708 ;;
 12709                           
 12710                           	psect	text32
 12711  0000'                    __ptext32:
 12712                           	opt callstack 0
 12713  0000'                    _usart_getc:
 12714                           	opt callstack 27
 12715  0000' 0004               	clrwdt		;# 
 12716                           
 12717                           ;src/driver/usart.c: 60:  PIE1bits.RCIE = 0;
 12718  0002' 9A9D               	bcf	157,5,c	;volatile
 12719  0004'                    
 12720                           ;src/driver/usart.c: 62:  if(g_usart_wpos == g_usart_rpos)
 12721  0004' 5000'              	movf	_g_usart_rpos^0,w,c	;volatile
 12722  0006' 1800'              	xorwf	_g_usart_wpos^0,w,c	;volatile
 12723  0008' E107               	bnz	u8461
 12724  000A' 5000'              	movf	(_g_usart_rpos+1)^0,w,c	;volatile
 12725  000C' 1800'              	xorwf	(_g_usart_wpos+1)^0,w,c	;volatile
 12726  000E' A4D8               	btfss	status,2,c
 12727  0010' EF00' F000'        	goto	u8461
 12728  0014' EF00' F000'        	goto	u8460
 12729  0018'                    u8461:
 12730  0018' EF00' F000'        	goto	l7487
 12731  001C'                    u8460:
 12732  001C'                    
 12733                           ;src/driver/usart.c: 63:  {;src/driver/usart.c: 64:   PIE1bits.RCIE = 1;
 12734  001C' 8A9D               	bsf	157,5,c	;volatile
 12735                           
 12736                           ;src/driver/usart.c: 65:   return -1;
 12737  001E' 6800'              	setf	?_usart_getc^0,c
 12738  0020' 6800'              	setf	(?_usart_getc+1)^0,c
 12739  0022' EF00' F000'        	goto	l323
 12740  0026'                    l7487:
 12741                           
 12742                           ;src/driver/usart.c: 69:  res = g_usart_buf[g_usart_rpos];
 12743  0026' 0E00'              	movlw	low _g_usart_buf
 12744  0028' 2400'              	addwf	_g_usart_rpos^0,w,c	;volatile
 12745  002A' 6ED9               	movwf	fsr2l,c
 12746  002C' 0E00'              	movlw	high _g_usart_buf
 12747  002E' 2000'              	addwfc	(_g_usart_rpos+1)^0,w,c	;volatile
 12748  0030' 6EDA               	movwf	fsr2h,c
 12749  0032' 50DF               	movf	indf2,w,c
 12750  0034' 6E00'              	movwf	??_usart_getc^0,c
 12751  0036' 5000'              	movf	??_usart_getc^0,w,c
 12752  0038' 6E00'              	movwf	usart_getc@res^0,c
 12753  003A' 6A00'              	clrf	(usart_getc@res+1)^0,c
 12754  003C'                    
 12755                           ;src/driver/usart.c: 70:  g_usart_rpos = (g_usart_rpos+1) % sizeof(g_usart_buf);
 12756  003C' 0E01               	movlw	1
 12757  003E' 2400'              	addwf	_g_usart_rpos^0,w,c	;volatile
 12758  0040' 6E00'              	movwf	??_usart_getc^0,c
 12759  0042' 0E00               	movlw	0
 12760  0044' 2000'              	addwfc	(_g_usart_rpos+1)^0,w,c	;volatile
 12761  0046' 6E00'              	movwf	(??_usart_getc+1)^0,c
 12762  0048' 0E7F               	movlw	127
 12763  004A' 1400'              	andwf	??_usart_getc^0,w,c
 12764  004C' 6E00'              	movwf	_g_usart_rpos^0,c	;volatile
 12765  004E' 6A00'              	clrf	(_g_usart_rpos+1)^0,c	;volatile
 12766  0050'                    
 12767                           ;src/driver/usart.c: 72:  PIE1bits.RCIE = 1;
 12768  0050' 8A9D               	bsf	157,5,c	;volatile
 12769  0052'                    
 12770                           ;src/driver/usart.c: 73:  return res;
 12771  0052' C011' F00D'        	movff	usart_getc@res,?_usart_getc
 12772  0056' C012' F00E'        	movff	usart_getc@res+1,?_usart_getc+1
 12773  005A'                    l323:
 12774  005A' 0012               	return		;funcret
 12775  005C'                    __end_of_usart_getc:
 12776                           	opt callstack 0
 12777                           
 12778 ;; *************** function _rx_gps *****************
 12779 ;; Defined at:
 12780 ;;		line 116 in file "src/gps.c"
 12781 ;; Parameters:    Size  Location     Type
 12782 ;;  c               2   75[COMRAM] int 
 12783 ;; Auto vars:     Size  Location     Type
 12784 ;;		None
 12785 ;; Return value:  Size  Location     Type
 12786 ;;                  1    wreg      void 
 12787 ;; Registers used:
 12788 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12789 ;; Tracked objects:
 12790 ;;		On entry : 0/0
 12791 ;;		On exit  : 0/0
 12792 ;;		Unchanged: 0/0
 12793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12794 ;;      Params:         2       0       0       0       0       0       0
 12795 ;;      Locals:         0       0       0       0       0       0       0
 12796 ;;      Temps:          2       0       0       0       0       0       0
 12797 ;;      Totals:         4       0       0       0       0       0       0
 12798 ;;Total ram usage:        4 bytes
 12799 ;; Hardware stack levels used:    1
 12800 ;; Hardware stack levels required when called:    7
 12801 ;; This function calls:
 12802 ;;		_eval_gps
 12803 ;; This function is called by:
 12804 ;;		_rx_usart
 12805 ;; This function uses a non-reentrant model
 12806 ;;
 12807                           
 12808                           	psect	text33
 12809  0000'                    __ptext33:
 12810                           	opt callstack 0
 12811  0000'                    _rx_gps:
 12812                           	opt callstack 22
 12813  0000'                    
 12814                           ;src/gps.c: 116: void rx_gps(int c);src/gps.c: 117: {;src/gps.c: 118: static u8 stat = 0
      +                          ;;src/gps.c: 119: static u16 len_lsb;;src/gps.c: 121:  switch(stat)
 12815  0000' EF00' F000'        	goto	l10409
 12816  0004'                    l10297:
 12817                           
 12818                           ; BSR set to: 1
 12819                           ;src/gps.c: 124:   if(c == 0xb5)
 12820  0004' 0EB5               	movlw	181
 12821  0006' 1800'              	xorwf	rx_gps@c^0,w,c
 12822  0008' 1000'              	iorwf	(rx_gps@c+1)^0,w,c
 12823  000A' A4D8               	btfss	status,2,c
 12824  000C' EF00' F000'        	goto	u12731
 12825  0010' EF00' F000'        	goto	u12730
 12826  0014'                    u12731:
 12827  0014' EF00' F000'        	goto	l10301
 12828  0018'                    u12730:
 12829  0018'                    
 12830                           ; BSR set to: 1
 12831                           ;src/gps.c: 125:   {;src/gps.c: 126:    stat++;
 12832  0018' 2B00'              	incf	rx_gps@stat& (0+255),f,b
 12833  001A'                    l10301:
 12834                           
 12835                           ; BSR set to: 1
 12836                           ;src/gps.c: 128:   if(c == '$')
 12837  001A' 0E24               	movlw	36
 12838  001C' 1800'              	xorwf	rx_gps@c^0,w,c
 12839  001E' 1000'              	iorwf	(rx_gps@c+1)^0,w,c
 12840  0020' A4D8               	btfss	status,2,c
 12841  0022' EF00' F000'        	goto	u12741
 12842  0026' EF00' F000'        	goto	u12740
 12843  002A'                    u12741:
 12844  002A' EF00' F000'        	goto	l849
 12845  002E'                    u12740:
 12846  002E'                    
 12847                           ; BSR set to: 1
 12848                           ;src/gps.c: 129:   {;src/gps.c: 130:    gpsbufidx = 0;
 12849  002E' 0E00               	movlw	0
 12850  0030' 6E00'              	movwf	_gpsbufidx^0,c
 12851                           
 12852                           ;src/gps.c: 131:    stat = 100;
 12853  0032' 0E64               	movlw	100
 12854  0034' 6F00'              	movwf	rx_gps@stat& (0+255),b
 12855  0036' EF00' F000'        	goto	l849
 12856  003A'                    l10305:
 12857                           
 12858                           ; BSR set to: 1
 12859                           ;src/gps.c: 136:   if(c == 0x62)
 12860  003A' 0E62               	movlw	98
 12861  003C' 1800'              	xorwf	rx_gps@c^0,w,c
 12862  003E' 1000'              	iorwf	(rx_gps@c+1)^0,w,c
 12863  0040' A4D8               	btfss	status,2,c
 12864  0042' EF00' F000'        	goto	u12751
 12865  0046' EF00' F000'        	goto	u12750
 12866  004A'                    u12751:
 12867  004A' EF00' F000'        	goto	l10309
 12868  004E'                    u12750:
 12869  004E'                    l10307:
 12870                           
 12871                           ; BSR set to: 1
 12872                           ;src/gps.c: 137:    stat++;
 12873  004E' 2B00'              	incf	rx_gps@stat& (0+255),f,b
 12874  0050' EF00' F000'        	goto	l849
 12875  0054'                    l10309:
 12876                           
 12877                           ;src/gps.c: 139:    stat = 0;
 12878  0054' 0E00               	movlw	0
 12879  0056' 0101               	movlb	1	; () banked
 12880  0058' 6F00'              	movwf	rx_gps@stat& (0+255),b
 12881  005A' EF00' F000'        	goto	l849
 12882  005E'                    l825:
 12883                           
 12884                           ; BSR set to: 1
 12885                           ;src/gps.c: 143:   ubx_class = c;
 12886  005E' C04B' F005'        	movff	rx_gps@c,_ubx_class
 12887  0062'                    
 12888                           ; BSR set to: 1
 12889                           ;src/gps.c: 144:   if(c==1 || c==2 || c==4 || c==5 || c==6 || c==9 || c==0x0a || c==0x0b
      +                           || c==0x0d || c==0x10 || c==0x13 || c==0x21 || c==0x27 || c==0x28)
 12890  0062' 0400'              	decf	rx_gps@c^0,w,c
 12891  0064' 1000'              	iorwf	(rx_gps@c+1)^0,w,c
 12892  0066' B4D8               	btfsc	status,2,c
 12893  0068' EF00' F000'        	goto	u12761
 12894  006C' EF00' F000'        	goto	u12760
 12895  0070'                    u12761:
 12896  0070' EF00' F000'        	goto	l10307
 12897  0074'                    u12760:
 12898  0074'                    
 12899                           ; BSR set to: 1
 12900  0074' 0E02               	movlw	2
 12901  0076' 1800'              	xorwf	rx_gps@c^0,w,c
 12902  0078' 1000'              	iorwf	(rx_gps@c+1)^0,w,c
 12903  007A' B4D8               	btfsc	status,2,c
 12904  007C' EF00' F000'        	goto	u12771
 12905  0080' EF00' F000'        	goto	u12770
 12906  0084'                    u12771:
 12907  0084' EF00' F000'        	goto	l10307
 12908  0088'                    u12770:
 12909  0088'                    
 12910                           ; BSR set to: 1
 12911  0088' 0E04               	movlw	4
 12912  008A' 1800'              	xorwf	rx_gps@c^0,w,c
 12913  008C' 1000'              	iorwf	(rx_gps@c+1)^0,w,c
 12914  008E' B4D8               	btfsc	status,2,c
 12915  0090' EF00' F000'        	goto	u12781
 12916  0094' EF00' F000'        	goto	u12780
 12917  0098'                    u12781:
 12918  0098' EF00' F000'        	goto	l10307
 12919  009C'                    u12780:
 12920  009C'                    
 12921                           ; BSR set to: 1
 12922  009C' 0E05               	movlw	5
 12923  009E' 1800'              	xorwf	rx_gps@c^0,w,c
 12924  00A0' 1000'              	iorwf	(rx_gps@c+1)^0,w,c
 12925  00A2' B4D8               	btfsc	status,2,c
 12926  00A4' EF00' F000'        	goto	u12791
 12927  00A8' EF00' F000'        	goto	u12790
 12928  00AC'                    u12791:
 12929  00AC' EF00' F000'        	goto	l10307
 12930  00B0'                    u12790:
 12931  00B0'                    
 12932                           ; BSR set to: 1
 12933  00B0' 0E06               	movlw	6
 12934  00B2' 1800'              	xorwf	rx_gps@c^0,w,c
 12935  00B4' 1000'              	iorwf	(rx_gps@c+1)^0,w,c
 12936  00B6' B4D8               	btfsc	status,2,c
 12937  00B8' EF00' F000'        	goto	u12801
 12938  00BC' EF00' F000'        	goto	u12800
 12939  00C0'                    u12801:
 12940  00C0' EF00' F000'        	goto	l10307
 12941  00C4'                    u12800:
 12942  00C4'                    
 12943                           ; BSR set to: 1
 12944  00C4' 0E09               	movlw	9
 12945  00C6' 1800'              	xorwf	rx_gps@c^0,w,c
 12946  00C8' 1000'              	iorwf	(rx_gps@c+1)^0,w,c
 12947  00CA' B4D8               	btfsc	status,2,c
 12948  00CC' EF00' F000'        	goto	u12811
 12949  00D0' EF00' F000'        	goto	u12810
 12950  00D4'                    u12811:
 12951  00D4' EF00' F000'        	goto	l10307
 12952  00D8'                    u12810:
 12953  00D8'                    
 12954                           ; BSR set to: 1
 12955  00D8' 0E0A               	movlw	10
 12956  00DA' 1800'              	xorwf	rx_gps@c^0,w,c
 12957  00DC' 1000'              	iorwf	(rx_gps@c+1)^0,w,c
 12958  00DE' B4D8               	btfsc	status,2,c
 12959  00E0' EF00' F000'        	goto	u12821
 12960  00E4' EF00' F000'        	goto	u12820
 12961  00E8'                    u12821:
 12962  00E8' EF00' F000'        	goto	l10307
 12963  00EC'                    u12820:
 12964  00EC'                    
 12965                           ; BSR set to: 1
 12966  00EC' 0E0B               	movlw	11
 12967  00EE' 1800'              	xorwf	rx_gps@c^0,w,c
 12968  00F0' 1000'              	iorwf	(rx_gps@c+1)^0,w,c
 12969  00F2' B4D8               	btfsc	status,2,c
 12970  00F4' EF00' F000'        	goto	u12831
 12971  00F8' EF00' F000'        	goto	u12830
 12972  00FC'                    u12831:
 12973  00FC' EF00' F000'        	goto	l10307
 12974  0100'                    u12830:
 12975  0100'                    
 12976                           ; BSR set to: 1
 12977  0100' 0E0D               	movlw	13
 12978  0102' 1800'              	xorwf	rx_gps@c^0,w,c
 12979  0104' 1000'              	iorwf	(rx_gps@c+1)^0,w,c
 12980  0106' B4D8               	btfsc	status,2,c
 12981  0108' EF00' F000'        	goto	u12841
 12982  010C' EF00' F000'        	goto	u12840
 12983  0110'                    u12841:
 12984  0110' EF00' F000'        	goto	l10307
 12985  0114'                    u12840:
 12986  0114'                    
 12987                           ; BSR set to: 1
 12988  0114' 0E10               	movlw	16
 12989  0116' 1800'              	xorwf	rx_gps@c^0,w,c
 12990  0118' 1000'              	iorwf	(rx_gps@c+1)^0,w,c
 12991  011A' B4D8               	btfsc	status,2,c
 12992  011C' EF00' F000'        	goto	u12851
 12993  0120' EF00' F000'        	goto	u12850
 12994  0124'                    u12851:
 12995  0124' EF00' F000'        	goto	l10307
 12996  0128'                    u12850:
 12997  0128'                    
 12998                           ; BSR set to: 1
 12999  0128' 0E13               	movlw	19
 13000  012A' 1800'              	xorwf	rx_gps@c^0,w,c
 13001  012C' 1000'              	iorwf	(rx_gps@c+1)^0,w,c
 13002  012E' B4D8               	btfsc	status,2,c
 13003  0130' EF00' F000'        	goto	u12861
 13004  0134' EF00' F000'        	goto	u12860
 13005  0138'                    u12861:
 13006  0138' EF00' F000'        	goto	l10307
 13007  013C'                    u12860:
 13008  013C'                    
 13009                           ; BSR set to: 1
 13010  013C' 0E21               	movlw	33
 13011  013E' 1800'              	xorwf	rx_gps@c^0,w,c
 13012  0140' 1000'              	iorwf	(rx_gps@c+1)^0,w,c
 13013  0142' B4D8               	btfsc	status,2,c
 13014  0144' EF00' F000'        	goto	u12871
 13015  0148' EF00' F000'        	goto	u12870
 13016  014C'                    u12871:
 13017  014C' EF00' F000'        	goto	l10307
 13018  0150'                    u12870:
 13019  0150'                    
 13020                           ; BSR set to: 1
 13021  0150' 0E27               	movlw	39
 13022  0152' 1800'              	xorwf	rx_gps@c^0,w,c
 13023  0154' 1000'              	iorwf	(rx_gps@c+1)^0,w,c
 13024  0156' B4D8               	btfsc	status,2,c
 13025  0158' EF00' F000'        	goto	u12881
 13026  015C' EF00' F000'        	goto	u12880
 13027  0160'                    u12881:
 13028  0160' EF00' F000'        	goto	l10307
 13029  0164'                    u12880:
 13030  0164'                    
 13031                           ; BSR set to: 1
 13032  0164' 0E28               	movlw	40
 13033  0166' 1800'              	xorwf	rx_gps@c^0,w,c
 13034  0168' 1000'              	iorwf	(rx_gps@c+1)^0,w,c
 13035  016A' A4D8               	btfss	status,2,c
 13036  016C' EF00' F000'        	goto	u12891
 13037  0170' EF00' F000'        	goto	u12890
 13038  0174'                    u12891:
 13039  0174' EF00' F000'        	goto	l10309
 13040  0178'                    u12890:
 13041  0178' EF00' F000'        	goto	l10307
 13042  017C'                    l830:
 13043                           
 13044                           ; BSR set to: 1
 13045                           ;src/gps.c: 151:   ubx_id = c;
 13046  017C' C04B' F016'        	movff	rx_gps@c,_ubx_id
 13047  0180' EF00' F000'        	goto	l10307
 13048  0184'                    l831:
 13049                           
 13050                           ; BSR set to: 1
 13051                           ;src/gps.c: 157:   len_lsb = c;
 13052  0184' C04B' F010'        	movff	rx_gps@c,rx_gps@len_lsb
 13053  0188' C04C' F011'        	movff	rx_gps@c+1,rx_gps@len_lsb+1
 13054  018C' EF00' F000'        	goto	l10307
 13055  0190'                    l832:
 13056                           
 13057                           ; BSR set to: 1
 13058                           ;src/gps.c: 162:   ubx_len = c;
 13059  0190' C04B' F000'        	movff	rx_gps@c,_ubx_len
 13060  0194' C04C' F001'        	movff	rx_gps@c+1,_ubx_len+1
 13061  0198'                    
 13062                           ; BSR set to: 1
 13063                           ;src/gps.c: 163:   ubx_len <<= 8;
 13064  0198' 5100'              	movf	_ubx_len& (0+255),w,b
 13065  019A' 6F00'              	movwf	(_ubx_len+1)& (0+255),b
 13066  019C' 6B00'              	clrf	_ubx_len& (0+255),b
 13067  019E'                    
 13068                           ; BSR set to: 1
 13069                           ;src/gps.c: 164:   ubx_len |= len_lsb;
 13070  019E' 0102               	movlb	2	; () banked
 13071  01A0' 5100'              	movf	rx_gps@len_lsb& (0+255),w,b
 13072  01A2' 0101               	movlb	1	; () banked
 13073  01A4' 1300'              	iorwf	_ubx_len& (0+255),f,b
 13074  01A6' 0102               	movlb	2	; () banked
 13075  01A8' 5100'              	movf	(rx_gps@len_lsb+1)& (0+255),w,b
 13076  01AA' 0101               	movlb	1	; () banked
 13077  01AC' 1300'              	iorwf	(_ubx_len+1)& (0+255),f,b
 13078  01AE'                    
 13079                           ; BSR set to: 1
 13080                           ;src/gps.c: 166:   if(ubx_len == 0 || ubx_len >= sizeof(gpsbuf))
 13081  01AE' 5100'              	movf	_ubx_len& (0+255),w,b
 13082  01B0' 1100'              	iorwf	(_ubx_len+1)& (0+255),w,b
 13083  01B2' B4D8               	btfsc	status,2,c
 13084  01B4' EF00' F000'        	goto	u12901
 13085  01B8' EF00' F000'        	goto	u12900
 13086  01BC'                    u12901:
 13087  01BC' EF00' F000'        	goto	l10309
 13088  01C0'                    u12900:
 13089  01C0'                    
 13090                           ; BSR set to: 1
 13091  01C0' 5100'              	movf	(_ubx_len+1)& (0+255),w,b
 13092  01C2' E109               	bnz	u12910
 13093  01C4' 0E55               	movlw	85
 13094  01C6' 5D00'              	subwf	_ubx_len& (0+255),w,b
 13095  01C8' A0D8               	btfss	status,0,c
 13096  01CA' EF00' F000'        	goto	u12911
 13097  01CE' EF00' F000'        	goto	u12910
 13098  01D2'                    u12911:
 13099  01D2' EF00' F000'        	goto	l10357
 13100  01D6'                    u12910:
 13101  01D6' EF00' F000'        	goto	l10309
 13102  01DA'                    l10357:
 13103                           
 13104                           ; BSR set to: 1
 13105                           ;src/gps.c: 169:   {;src/gps.c: 170:    stat++;
 13106  01DA' 2B00'              	incf	rx_gps@stat& (0+255),f,b
 13107  01DC'                    
 13108                           ; BSR set to: 1
 13109                           ;src/gps.c: 171:    p_len = 0;
 13110  01DC' 0E00               	movlw	0
 13111  01DE' 0102               	movlb	2	; () banked
 13112  01E0' 6F00'              	movwf	(_p_len+1)& (0+255),b
 13113  01E2' 0E00               	movlw	0
 13114  01E4' 6F00'              	movwf	_p_len& (0+255),b
 13115  01E6' EF00' F000'        	goto	l849
 13116  01EA'                    l10361:
 13117                           
 13118                           ; BSR set to: 1
 13119                           ;src/gps.c: 176:   if(ubx_class == 5)
 13120  01EA' 0E05               	movlw	5
 13121  01EC' 1900'              	xorwf	_ubx_class& (0+255),w,b
 13122  01EE' A4D8               	btfss	status,2,c
 13123  01F0' EF00' F000'        	goto	u12921
 13124  01F4' EF00' F000'        	goto	u12920
 13125  01F8'                    u12921:
 13126  01F8' EF00' F000'        	goto	l10309
 13127  01FC'                    u12920:
 13128  01FC'                    
 13129                           ; BSR set to: 1
 13130                           ;src/gps.c: 177:   {;src/gps.c: 178:    gpsbuf[p_len++] = c;
 13131  01FC' 0E00'              	movlw	low _gpsbuf
 13132  01FE' 0102               	movlb	2	; () banked
 13133  0200' 2500'              	addwf	_p_len& (0+255),w,b
 13134  0202' 6ED9               	movwf	fsr2l,c
 13135  0204' 0E00'              	movlw	high _gpsbuf
 13136  0206' 2100'              	addwfc	(_p_len+1)& (0+255),w,b
 13137  0208' 6EDA               	movwf	fsr2h,c
 13138  020A' C04B' FFDF         	movff	rx_gps@c,indf2
 13139  020E'                    
 13140                           ; BSR set to: 2
 13141  020E' 4B00'              	infsnz	_p_len& (0+255),f,b
 13142  0210' 2B00'              	incf	(_p_len+1)& (0+255),f,b
 13143  0212'                    
 13144                           ; BSR set to: 2
 13145                           ;src/gps.c: 179:    if(p_len >= sizeof(gpsbuf) || p_len == ubx_len)
 13146  0212' 5100'              	movf	(_p_len+1)& (0+255),w,b
 13147  0214' E107               	bnz	u12931
 13148  0216' 0E55               	movlw	85
 13149  0218' 5D00'              	subwf	_p_len& (0+255),w,b
 13150  021A' B0D8               	btfsc	status,0,c
 13151  021C' EF00' F000'        	goto	u12931
 13152  0220' EF00' F000'        	goto	u12930
 13153  0224'                    u12931:
 13154  0224' EF00' F000'        	goto	l10371
 13155  0228'                    u12930:
 13156  0228'                    
 13157                           ; BSR set to: 2
 13158  0228' 0101               	movlb	1	; () banked
 13159  022A' 5100'              	movf	_ubx_len& (0+255),w,b
 13160  022C' 0102               	movlb	2	; () banked
 13161  022E' 1900'              	xorwf	_p_len& (0+255),w,b
 13162  0230' E109               	bnz	u12941
 13163  0232' 0101               	movlb	1	; () banked
 13164  0234' 5100'              	movf	(_ubx_len+1)& (0+255),w,b
 13165  0236' 0102               	movlb	2	; () banked
 13166  0238' 1900'              	xorwf	(_p_len+1)& (0+255),w,b
 13167  023A' A4D8               	btfss	status,2,c
 13168  023C' EF00' F000'        	goto	u12941
 13169  0240' EF00' F000'        	goto	u12940
 13170  0244'                    u12941:
 13171  0244' EF00' F000'        	goto	l849
 13172  0248'                    u12940:
 13173  0248'                    l10371:
 13174                           
 13175                           ; BSR set to: 2
 13176                           ;src/gps.c: 180:    {;src/gps.c: 181:     ubx_ack = 1;
 13177  0248' 0E01               	movlw	1
 13178  024A' 6E00'              	movwf	_ubx_ack^0,c
 13179                           
 13180                           ;src/gps.c: 184:     stat = 0;
 13181  024C' 0E00               	movlw	0
 13182  024E' 0101               	movlb	1	; () banked
 13183  0250' 6F00'              	movwf	rx_gps@stat& (0+255),b
 13184  0252' EF00' F000'        	goto	l849
 13185  0256'                    l10375:
 13186                           
 13187                           ; BSR set to: 1
 13188                           ;src/gps.c: 195:   if(c == '\n' || c == '\r')
 13189  0256' 0E0A               	movlw	10
 13190  0258' 1800'              	xorwf	rx_gps@c^0,w,c
 13191  025A' 1000'              	iorwf	(rx_gps@c+1)^0,w,c
 13192  025C' B4D8               	btfsc	status,2,c
 13193  025E' EF00' F000'        	goto	u12951
 13194  0262' EF00' F000'        	goto	u12950
 13195  0266'                    u12951:
 13196  0266' EF00' F000'        	goto	l10379
 13197  026A'                    u12950:
 13198  026A'                    
 13199                           ; BSR set to: 1
 13200  026A' 0E0D               	movlw	13
 13201  026C' 1800'              	xorwf	rx_gps@c^0,w,c
 13202  026E' 1000'              	iorwf	(rx_gps@c+1)^0,w,c
 13203  0270' A4D8               	btfss	status,2,c
 13204  0272' EF00' F000'        	goto	u12961
 13205  0276' EF00' F000'        	goto	u12960
 13206  027A'                    u12961:
 13207  027A' EF00' F000'        	goto	l10385
 13208  027E'                    u12960:
 13209  027E'                    l10379:
 13210                           
 13211                           ; BSR set to: 1
 13212                           ;src/gps.c: 196:   {;src/gps.c: 198:    gpsbuf[gpsbufidx] = 0;
 13213  027E' 0E00'              	movlw	low _gpsbuf
 13214  0280' 2400'              	addwf	_gpsbufidx^0,w,c
 13215  0282' 6ED9               	movwf	fsr2l,c
 13216  0284' 6ADA               	clrf	fsr2h,c
 13217  0286' 0E00'              	movlw	high _gpsbuf
 13218  0288' 22DA               	addwfc	fsr2h,f,c
 13219  028A' 0E00               	movlw	0
 13220  028C' 6EDF               	movwf	indf2,c
 13221  028E'                    
 13222                           ; BSR set to: 1
 13223                           ;src/gps.c: 199:    eval_gps(gpsbuf);
 13224  028E' 0E00'              	movlw	low _gpsbuf
 13225  0290' 6E00'              	movwf	eval_gps@gpsbuf^0,c
 13226  0292' 0E00'              	movlw	high _gpsbuf
 13227  0294' 6E00'              	movwf	(eval_gps@gpsbuf+1)^0,c
 13228  0296' EC00' F000'        	call	_eval_gps	;wreg free
 13229  029A' EF00' F000'        	goto	l10309
 13230  029E'                    l10385:
 13231                           
 13232                           ; BSR set to: 1
 13233                           ;src/gps.c: 203:   {;src/gps.c: 204:    if(gpsbufidx >= sizeof(gpsbuf))
 13234  029E' 0E54               	movlw	84
 13235  02A0' 6400'              	cpfsgt	_gpsbufidx^0,c
 13236  02A2' EF00' F000'        	goto	u12971
 13237  02A6' EF00' F000'        	goto	u12970
 13238  02AA'                    u12971:
 13239  02AA' EF00' F000'        	goto	l10391
 13240  02AE'                    u12970:
 13241  02AE' EF00' F000'        	goto	l10309
 13242  02B2'                    l10391:
 13243                           
 13244                           ; BSR set to: 1
 13245                           ;src/gps.c: 210:    gpsbuf[gpsbufidx++] = c;
 13246  02B2' 0E00'              	movlw	low _gpsbuf
 13247  02B4' 2400'              	addwf	_gpsbufidx^0,w,c
 13248  02B6' 6ED9               	movwf	fsr2l,c
 13249  02B8' 6ADA               	clrf	fsr2h,c
 13250  02BA' 0E00'              	movlw	high _gpsbuf
 13251  02BC' 22DA               	addwfc	fsr2h,f,c
 13252  02BE' C04B' FFDF         	movff	rx_gps@c,indf2
 13253  02C2'                    
 13254                           ; BSR set to: 1
 13255  02C2' 2A00'              	incf	_gpsbufidx^0,f,c
 13256  02C4'                    
 13257                           ; BSR set to: 1
 13258                           ;src/gps.c: 213:    if(gpsbufidx == 5 && (gpsbuf[2] != 'G' || gpsbuf[3] != 'G' || gpsbuf
      +                          [4] != 'A'))
 13259  02C4' 0E05               	movlw	5
 13260  02C6' 1800'              	xorwf	_gpsbufidx^0,w,c
 13261  02C8' A4D8               	btfss	status,2,c
 13262  02CA' EF00' F000'        	goto	u12981
 13263  02CE' EF00' F000'        	goto	u12980
 13264  02D2'                    u12981:
 13265  02D2' EF00' F000'        	goto	l849
 13266  02D6'                    u12980:
 13267  02D6'                    
 13268                           ; BSR set to: 1
 13269  02D6' 0E47               	movlw	71
 13270  02D8' 0103               	movlb	3	; () banked
 13271  02DA' 1900'              	xorwf	(_gpsbuf+2)& (0+255),w,b
 13272  02DC' A4D8               	btfss	status,2,c
 13273  02DE' EF00' F000'        	goto	u12991
 13274  02E2' EF00' F000'        	goto	u12990
 13275  02E6'                    u12991:
 13276  02E6' EF00' F000'        	goto	l10309
 13277  02EA'                    u12990:
 13278  02EA'                    
 13279                           ; BSR set to: 3
 13280  02EA' 0E47               	movlw	71
 13281  02EC' 1900'              	xorwf	(_gpsbuf+3)& (0+255),w,b
 13282  02EE' A4D8               	btfss	status,2,c
 13283  02F0' EF00' F000'        	goto	u13001
 13284  02F4' EF00' F000'        	goto	u13000
 13285  02F8'                    u13001:
 13286  02F8' EF00' F000'        	goto	l10309
 13287  02FC'                    u13000:
 13288  02FC'                    
 13289                           ; BSR set to: 3
 13290  02FC' 0E41               	movlw	65
 13291  02FE' 1900'              	xorwf	(_gpsbuf+4)& (0+255),w,b
 13292  0300' B4D8               	btfsc	status,2,c
 13293  0302' EF00' F000'        	goto	u13011
 13294  0306' EF00' F000'        	goto	u13010
 13295  030A'                    u13011:
 13296  030A' EF00' F000'        	goto	l849
 13297  030E'                    u13010:
 13298  030E' EF00' F000'        	goto	l10309
 13299  0312'                    l10409:
 13300  0312' 0101               	movlb	1	; () banked
 13301  0314' 5100'              	movf	rx_gps@stat& (0+255),w,b
 13302  0316' 6E00'              	movwf	??_rx_gps^0,c
 13303  0318' 6A00'              	clrf	(??_rx_gps+1)^0,c
 13304                           
 13305                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13306                           ; Switch size 1, requested type "simple"
 13307                           ; Number of cases is 1, Range of values is 0 to 0
 13308                           ; switch strategies available:
 13309                           ; Name         Instructions Cycles
 13310                           ; simple_byte            4     3 (average)
 13311                           ;	Chosen strategy is simple_byte
 13312  031A' 5000'              	movf	(??_rx_gps+1)^0,w,c
 13313  031C' 0A00               	xorlw	0	; case 0
 13314  031E' B4D8               	btfsc	status,2,c
 13315  0320' EF00' F000'        	goto	l11311
 13316  0324' EF00' F000'        	goto	l849
 13317  0328'                    l11311:
 13318                           
 13319                           ; BSR set to: 1
 13320                           ; Switch size 1, requested type "simple"
 13321                           ; Number of cases is 8, Range of values is 0 to 100
 13322                           ; switch strategies available:
 13323                           ; Name         Instructions Cycles
 13324                           ; simple_byte           25    13 (average)
 13325                           ;	Chosen strategy is simple_byte
 13326  0328' 5000'              	movf	??_rx_gps^0,w,c
 13327  032A' 0A00               	xorlw	0	; case 0
 13328  032C' B4D8               	btfsc	status,2,c
 13329  032E' EF00' F000'        	goto	l10297
 13330  0332' 0A01               	xorlw	1	; case 1
 13331  0334' B4D8               	btfsc	status,2,c
 13332  0336' EF00' F000'        	goto	l10305
 13333  033A' 0A03               	xorlw	3	; case 2
 13334  033C' B4D8               	btfsc	status,2,c
 13335  033E' EF00' F000'        	goto	l825
 13336  0342' 0A01               	xorlw	1	; case 3
 13337  0344' B4D8               	btfsc	status,2,c
 13338  0346' EF00' F000'        	goto	l830
 13339  034A' 0A07               	xorlw	7	; case 4
 13340  034C' B4D8               	btfsc	status,2,c
 13341  034E' EF00' F000'        	goto	l831
 13342  0352' 0A01               	xorlw	1	; case 5
 13343  0354' B4D8               	btfsc	status,2,c
 13344  0356' EF00' F000'        	goto	l832
 13345  035A' 0A03               	xorlw	3	; case 6
 13346  035C' B4D8               	btfsc	status,2,c
 13347  035E' EF00' F000'        	goto	l10361
 13348  0362' 0A62               	xorlw	98	; case 100
 13349  0364' B4D8               	btfsc	status,2,c
 13350  0366' EF00' F000'        	goto	l10375
 13351  036A' EF00' F000'        	goto	l849
 13352  036E'                    l849:
 13353  036E' 0012               	return		;funcret
 13354  0370'                    __end_of_rx_gps:
 13355                           	opt callstack 0
 13356                           
 13357 ;; *************** function _eval_gps *****************
 13358 ;; Defined at:
 13359 ;;		line 23 in file "src/gps.c"
 13360 ;; Parameters:    Size  Location     Type
 13361 ;;  gpsbuf          2   69[COMRAM] PTR unsigned char 
 13362 ;;		 -> gpsbuf(85), 
 13363 ;; Auto vars:     Size  Location     Type
 13364 ;;  pe              2  243[BANK1 ] PTR unsigned char 
 13365 ;;		 -> gpsbuf(85), NULL(0), 
 13366 ;;  ps              2  246[BANK1 ] PTR unsigned char 
 13367 ;;		 -> gpsbuf(85), NULL(0), 
 13368 ;;  i               1  242[BANK1 ] unsigned char 
 13369 ;;  elem          240    0[BANK1 ] unsigned char [16][15]
 13370 ;;  eidx            1  245[BANK1 ] unsigned char 
 13371 ;;  chksum          1  241[BANK1 ] unsigned char 
 13372 ;;  chksumgps       1  240[BANK1 ] unsigned char 
 13373 ;; Return value:  Size  Location     Type
 13374 ;;                  1    wreg      void 
 13375 ;; Registers used:
 13376 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13377 ;; Tracked objects:
 13378 ;;		On entry : 0/0
 13379 ;;		On exit  : 0/0
 13380 ;;		Unchanged: 0/0
 13381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13382 ;;      Params:         2       0       0       0       0       0       0
 13383 ;;      Locals:         0       0     248       0       0       0       0
 13384 ;;      Temps:          4       0       0       0       0       0       0
 13385 ;;      Totals:         6       0     248       0       0       0       0
 13386 ;;Total ram usage:      254 bytes
 13387 ;; Hardware stack levels used:    1
 13388 ;; Hardware stack levels required when called:    6
 13389 ;; This function calls:
 13390 ;;		_atoi
 13391 ;;		_memcpy
 13392 ;;		_memset
 13393 ;;		_strchr
 13394 ;;		_strlen
 13395 ;;		_strtol
 13396 ;; This function is called by:
 13397 ;;		_rx_gps
 13398 ;; This function uses a non-reentrant model
 13399 ;;
 13400                           
 13401                           	psect	text34
 13402  0000'                    __ptext34:
 13403                           	opt callstack 0
 13404  0000'                    _eval_gps:
 13405                           	opt callstack 22
 13406  0000'                    
 13407                           ;src/gps.c: 23: void eval_gps(char *gpsbuf);src/gps.c: 24: {;src/gps.c: 25: char elem[15
      +                          ][16];;src/gps.c: 26: u8 eidx=0;
 13408  0000' 0E00               	movlw	0
 13409  0002' 0101               	movlb	1	; () banked
 13410  0004' 6F00'              	movwf	eval_gps@eidx& (0+255),b
 13411  0006'                    
 13412                           ; BSR set to: 1
 13413                           ;src/gps.c: 30:  if(strlen(gpsbuf) < 20 || strlen(gpsbuf) > 100)
 13414  0006' C045' F00D'        	movff	eval_gps@gpsbuf,strlen@s
 13415  000A' C046' F00E'        	movff	eval_gps@gpsbuf+1,strlen@s+1
 13416  000E' EC00' F000'        	call	_strlen	;wreg free
 13417  0012' 5000'              	movf	(?_strlen+1)^0,w,c
 13418  0014' E109               	bnz	u12440
 13419  0016' 0E14               	movlw	20
 13420  0018' 5C00'              	subwf	?_strlen^0,w,c
 13421  001A' A0D8               	btfss	status,0,c
 13422  001C' EF00' F000'        	goto	u12441
 13423  0020' EF00' F000'        	goto	u12440
 13424  0024'                    u12441:
 13425  0024' EF00' F000'        	goto	l784
 13426  0028'                    u12440:
 13427  0028' C045' F00D'        	movff	eval_gps@gpsbuf,strlen@s
 13428  002C' C046' F00E'        	movff	eval_gps@gpsbuf+1,strlen@s+1
 13429  0030' EC00' F000'        	call	_strlen	;wreg free
 13430  0034' 5000'              	movf	(?_strlen+1)^0,w,c
 13431  0036' E109               	bnz	u12450
 13432  0038' 0E65               	movlw	101
 13433  003A' 5C00'              	subwf	?_strlen^0,w,c
 13434  003C' A0D8               	btfss	status,0,c
 13435  003E' EF00' F000'        	goto	u12451
 13436  0042' EF00' F000'        	goto	u12450
 13437  0046'                    u12451:
 13438  0046' EF00' F000'        	goto	l10093
 13439  004A'                    u12450:
 13440  004A' EF00' F000'        	goto	l784
 13441  004E'                    l10093:
 13442                           
 13443                           ;src/gps.c: 34:  u8 chksum = gpsbuf[0];
 13444  004E' C045' FFD9         	movff	eval_gps@gpsbuf,fsr2l
 13445  0052' C046' FFDA         	movff	eval_gps@gpsbuf+1,fsr2h
 13446  0056' 50DF               	movf	indf2,w,c
 13447  0058' 0101               	movlb	1	; () banked
 13448  005A' 6F00'              	movwf	eval_gps@chksum& (0+255),b
 13449  005C'                    
 13450                           ; BSR set to: 1
 13451                           ;src/gps.c: 35:  for(u8 i=1; i<strlen(gpsbuf)-3; i++)
 13452  005C' 0E01               	movlw	1
 13453  005E' 6F00'              	movwf	eval_gps@i& (0+255),b
 13454  0060' EF00' F000'        	goto	l10101
 13455  0064'                    l10097:
 13456                           
 13457                           ; BSR set to: 1
 13458                           ;src/gps.c: 36:   chksum ^= gpsbuf[i];
 13459  0064' 5100'              	movf	eval_gps@i& (0+255),w,b
 13460  0066' 2400'              	addwf	eval_gps@gpsbuf^0,w,c
 13461  0068' 6ED9               	movwf	fsr2l,c
 13462  006A' 0E00               	movlw	0
 13463  006C' 2000'              	addwfc	(eval_gps@gpsbuf+1)^0,w,c
 13464  006E' 6EDA               	movwf	fsr2h,c
 13465  0070' 50DF               	movf	indf2,w,c
 13466  0072' 1B00'              	xorwf	eval_gps@chksum& (0+255),f,b
 13467  0074'                    
 13468                           ; BSR set to: 1
 13469  0074' 2B00'              	incf	eval_gps@i& (0+255),f,b
 13470  0076'                    l10101:
 13471                           
 13472                           ; BSR set to: 1
 13473  0076' 0EFD               	movlw	253
 13474  0078' 6E00'              	movwf	??_eval_gps^0,c
 13475  007A' 0EFF               	movlw	255
 13476  007C' 6E00'              	movwf	(??_eval_gps+1)^0,c
 13477  007E' C045' F00D'        	movff	eval_gps@gpsbuf,strlen@s
 13478  0082' C046' F00E'        	movff	eval_gps@gpsbuf+1,strlen@s+1
 13479  0086' EC00' F000'        	call	_strlen	;wreg free
 13480  008A' 5000'              	movf	??_eval_gps^0,w,c
 13481  008C' 2600'              	addwf	?_strlen^0,f,c
 13482  008E' 5000'              	movf	(??_eval_gps+1)^0,w,c
 13483  0090' 2200'              	addwfc	(?_strlen+1)^0,f,c
 13484  0092' 0101               	movlb	1	; () banked
 13485  0094' 5100'              	movf	eval_gps@i& (0+255),w,b
 13486  0096' 6E00'              	movwf	(??_eval_gps+2)^0,c
 13487  0098' 6A00'              	clrf	(??_eval_gps+3)^0,c
 13488  009A' 5000'              	movf	?_strlen^0,w,c
 13489  009C' 5C00'              	subwf	(??_eval_gps+2)^0,w,c
 13490  009E' 5000'              	movf	(?_strlen+1)^0,w,c
 13491  00A0' 5800'              	subwfb	(??_eval_gps+3)^0,w,c
 13492  00A2' A0D8               	btfss	status,0,c
 13493  00A4' EF00' F000'        	goto	u12461
 13494  00A8' EF00' F000'        	goto	u12460
 13495  00AC'                    u12461:
 13496  00AC' EF00' F000'        	goto	l10097
 13497  00B0'                    u12460:
 13498  00B0'                    
 13499                           ; BSR set to: 1
 13500                           ;src/gps.c: 38:  u8 chksumgps = strtol(gpsbuf + (strlen(gpsbuf)-2),((void*)0),16);
 13501  00B0' C045' F00D'        	movff	eval_gps@gpsbuf,strlen@s
 13502  00B4' C046' F00E'        	movff	eval_gps@gpsbuf+1,strlen@s+1
 13503  00B8' EC00' F000'        	call	_strlen	;wreg free
 13504  00BC' C045' F047'        	movff	eval_gps@gpsbuf,??_eval_gps
 13505  00C0' C046' F048'        	movff	eval_gps@gpsbuf+1,??_eval_gps+1
 13506  00C4' 5000'              	movf	?_strlen^0,w,c
 13507  00C6' 2600'              	addwf	??_eval_gps^0,f,c
 13508  00C8' 5000'              	movf	(?_strlen+1)^0,w,c
 13509  00CA' 2200'              	addwfc	(??_eval_gps+1)^0,f,c
 13510  00CC' 0EFE               	movlw	254
 13511  00CE' 2400'              	addwf	??_eval_gps^0,w,c
 13512  00D0' 6E00'              	movwf	strtol@s^0,c
 13513  00D2' 0EFF               	movlw	255
 13514  00D4' 2000'              	addwfc	(??_eval_gps+1)^0,w,c
 13515  00D6' 6E00'              	movwf	(strtol@s+1)^0,c
 13516  00D8' 0E00               	movlw	0
 13517  00DA' 6E00'              	movwf	strtol@endptr^0,c
 13518  00DC' 0E00               	movlw	0
 13519  00DE' 6E00'              	movwf	(strtol@endptr+1)^0,c
 13520  00E0' 0E00               	movlw	0
 13521  00E2' 6E00'              	movwf	(strtol@base+1)^0,c
 13522  00E4' 0E10               	movlw	16
 13523  00E6' 6E00'              	movwf	strtol@base^0,c
 13524  00E8' EC00' F000'        	call	_strtol	;wreg free
 13525  00EC' 5000'              	movf	?_strtol^0,w,c
 13526  00EE' 0101               	movlb	1	; () banked
 13527  00F0' 6F00'              	movwf	eval_gps@chksumgps& (0+255),b
 13528  00F2'                    
 13529                           ; BSR set to: 1
 13530                           ;src/gps.c: 39:  if(chksumgps != chksum) return;
 13531  00F2' 5100'              	movf	eval_gps@chksum& (0+255),w,b
 13532  00F4' 1900'              	xorwf	eval_gps@chksumgps& (0+255),w,b
 13533  00F6' B4D8               	btfsc	status,2,c
 13534  00F8' EF00' F000'        	goto	u12471
 13535  00FC' EF00' F000'        	goto	u12470
 13536  0100'                    u12471:
 13537  0100' EF00' F000'        	goto	l10109
 13538  0104'                    u12470:
 13539  0104' EF00' F000'        	goto	l784
 13540  0108'                    l10109:
 13541                           
 13542                           ; BSR set to: 1
 13543                           ;src/gps.c: 42:  if(gpsbuf[2] == 'G' && gpsbuf[3] == 'G' && gpsbuf[4] == 'A')
 13544  0108' EE20 F002          	lfsr	2,2
 13545  010C' 5000'              	movf	eval_gps@gpsbuf^0,w,c
 13546  010E' 26D9               	addwf	fsr2l,f,c
 13547  0110' 5000'              	movf	(eval_gps@gpsbuf+1)^0,w,c
 13548  0112' 22DA               	addwfc	fsr2h,f,c
 13549  0114' 0E47               	movlw	71
 13550  0116' 18DE               	xorwf	postinc2,w,c
 13551  0118' A4D8               	btfss	status,2,c
 13552  011A' EF00' F000'        	goto	u12481
 13553  011E' EF00' F000'        	goto	u12480
 13554  0122'                    u12481:
 13555  0122' EF00' F000'        	goto	l784
 13556  0126'                    u12480:
 13557  0126'                    
 13558                           ; BSR set to: 1
 13559  0126' EE20 F003          	lfsr	2,3
 13560  012A' 5000'              	movf	eval_gps@gpsbuf^0,w,c
 13561  012C' 26D9               	addwf	fsr2l,f,c
 13562  012E' 5000'              	movf	(eval_gps@gpsbuf+1)^0,w,c
 13563  0130' 22DA               	addwfc	fsr2h,f,c
 13564  0132' 0E47               	movlw	71
 13565  0134' 18DE               	xorwf	postinc2,w,c
 13566  0136' A4D8               	btfss	status,2,c
 13567  0138' EF00' F000'        	goto	u12491
 13568  013C' EF00' F000'        	goto	u12490
 13569  0140'                    u12491:
 13570  0140' EF00' F000'        	goto	l784
 13571  0144'                    u12490:
 13572  0144'                    
 13573                           ; BSR set to: 1
 13574  0144' EE20 F004          	lfsr	2,4
 13575  0148' 5000'              	movf	eval_gps@gpsbuf^0,w,c
 13576  014A' 26D9               	addwf	fsr2l,f,c
 13577  014C' 5000'              	movf	(eval_gps@gpsbuf+1)^0,w,c
 13578  014E' 22DA               	addwfc	fsr2h,f,c
 13579  0150' 0E41               	movlw	65
 13580  0152' 18DE               	xorwf	postinc2,w,c
 13581  0154' A4D8               	btfss	status,2,c
 13582  0156' EF00' F000'        	goto	u12501
 13583  015A' EF00' F000'        	goto	u12500
 13584  015E'                    u12501:
 13585  015E' EF00' F000'        	goto	l784
 13586  0162'                    u12500:
 13587  0162'                    
 13588                           ; BSR set to: 1
 13589                           ;src/gps.c: 43:  {;src/gps.c: 48:   char *ps = gpsbuf;
 13590  0162' C045' F0F6'        	movff	eval_gps@gpsbuf,eval_gps@ps
 13591  0166' C046' F0F7'        	movff	eval_gps@gpsbuf+1,eval_gps@ps+1
 13592  016A'                    l10117:
 13593                           
 13594                           ;src/gps.c: 50:   {;src/gps.c: 51:    char *pe = strchr(ps,',');
 13595  016A' C0F6' F00D'        	movff	eval_gps@ps,strchr@s
 13596  016E' C0F7' F00E'        	movff	eval_gps@ps+1,strchr@s+1
 13597  0172' 0E00               	movlw	0
 13598  0174' 6E00'              	movwf	(strchr@c+1)^0,c
 13599  0176' 0E2C               	movlw	44
 13600  0178' 6E00'              	movwf	strchr@c^0,c
 13601  017A' EC00' F000'        	call	_strchr	;wreg free
 13602  017E' C00D' F0F3'        	movff	?_strchr,eval_gps@pe
 13603  0182' C00E' F0F4'        	movff	?_strchr+1,eval_gps@pe+1
 13604  0186'                    
 13605                           ;src/gps.c: 52:    if(pe == ((void*)0)) break;
 13606  0186' 0101               	movlb	1	; () banked
 13607  0188' 5100'              	movf	eval_gps@pe& (0+255),w,b
 13608  018A' 1100'              	iorwf	(eval_gps@pe+1)& (0+255),w,b
 13609  018C' A4D8               	btfss	status,2,c
 13610  018E' EF00' F000'        	goto	u12511
 13611  0192' EF00' F000'        	goto	u12510
 13612  0196'                    u12511:
 13613  0196' EF00' F000'        	goto	l10123
 13614  019A'                    u12510:
 13615  019A' EF00' F000'        	goto	l792
 13616  019E'                    l10123:
 13617                           
 13618                           ; BSR set to: 1
 13619                           ;src/gps.c: 53:    memset(elem[eidx],0,16);
 13620  019E' 5100'              	movf	eval_gps@eidx& (0+255),w,b
 13621  01A0' 0D10               	mullw	16
 13622  01A2' 0E00'              	movlw	low eval_gps@elem
 13623  01A4' 24F3               	addwf	243,w,c
 13624  01A6' 6E00'              	movwf	memset@dest^0,c
 13625  01A8' 0E00'              	movlw	high eval_gps@elem
 13626  01AA' 20F4               	addwfc	prodh,w,c
 13627  01AC' 6E00'              	movwf	(memset@dest+1)^0,c
 13628  01AE' 0E00               	movlw	0
 13629  01B0' 6E00'              	movwf	(memset@c+1)^0,c
 13630  01B2' 0E00               	movlw	0
 13631  01B4' 6E00'              	movwf	memset@c^0,c
 13632  01B6' 0E00               	movlw	0
 13633  01B8' 6E00'              	movwf	(memset@n+1)^0,c
 13634  01BA' 0E10               	movlw	16
 13635  01BC' 6E00'              	movwf	memset@n^0,c
 13636  01BE' EC00' F000'        	call	_memset	;wreg free
 13637                           
 13638                           ;src/gps.c: 54:    memcpy(elem[eidx++],ps,pe-ps);
 13639  01C2' 0101               	movlb	1	; () banked
 13640  01C4' 5100'              	movf	eval_gps@eidx& (0+255),w,b
 13641  01C6' 0D10               	mullw	16
 13642  01C8' 0E00'              	movlw	low eval_gps@elem
 13643  01CA' 24F3               	addwf	243,w,c
 13644  01CC' 6E00'              	movwf	memcpy@d1^0,c
 13645  01CE' 0E00'              	movlw	high eval_gps@elem
 13646  01D0' 20F4               	addwfc	prodh,w,c
 13647  01D2' 6E00'              	movwf	(memcpy@d1+1)^0,c
 13648  01D4' C0F6' F00F'        	movff	eval_gps@ps,memcpy@s1
 13649  01D8' C0F7' F010'        	movff	eval_gps@ps+1,memcpy@s1+1
 13650  01DC' 5100'              	movf	eval_gps@ps& (0+255),w,b
 13651  01DE' 5D00'              	subwf	eval_gps@pe& (0+255),w,b
 13652  01E0' 6E00'              	movwf	memcpy@n^0,c
 13653  01E2' 5100'              	movf	(eval_gps@ps+1)& (0+255),w,b
 13654  01E4' 5900'              	subwfb	(eval_gps@pe+1)& (0+255),w,b
 13655  01E6' 6E00'              	movwf	(memcpy@n+1)^0,c
 13656  01E8' EC00' F000'        	call	_memcpy	;wreg free
 13657  01EC' 0101               	movlb	1	; () banked
 13658  01EE' 2B00'              	incf	eval_gps@eidx& (0+255),f,b
 13659  01F0'                    
 13660                           ; BSR set to: 1
 13661                           ;src/gps.c: 55:    ps = pe+1;
 13662  01F0' 0E01               	movlw	1
 13663  01F2' 2500'              	addwf	eval_gps@pe& (0+255),w,b
 13664  01F4' 6F00'              	movwf	eval_gps@ps& (0+255),b
 13665  01F6' 0E00               	movlw	0
 13666  01F8' 2100'              	addwfc	(eval_gps@pe+1)& (0+255),w,b
 13667  01FA' 6F00'              	movwf	(eval_gps@ps+1)& (0+255),b
 13668  01FC'                    
 13669                           ; BSR set to: 1
 13670                           ;src/gps.c: 56:    if(ps >= (gpsbuf + strlen(gpsbuf))) break;
 13671  01FC' C045' F00D'        	movff	eval_gps@gpsbuf,strlen@s
 13672  0200' C046' F00E'        	movff	eval_gps@gpsbuf+1,strlen@s+1
 13673  0204' EC00' F000'        	call	_strlen	;wreg free
 13674  0208' C045' F047'        	movff	eval_gps@gpsbuf,??_eval_gps
 13675  020C' C046' F048'        	movff	eval_gps@gpsbuf+1,??_eval_gps+1
 13676  0210' 5000'              	movf	?_strlen^0,w,c
 13677  0212' 2600'              	addwf	??_eval_gps^0,f,c
 13678  0214' 5000'              	movf	(?_strlen+1)^0,w,c
 13679  0216' 2200'              	addwfc	(??_eval_gps+1)^0,f,c
 13680  0218' 5000'              	movf	??_eval_gps^0,w,c
 13681  021A' 0101               	movlb	1	; () banked
 13682  021C' 5D00'              	subwf	eval_gps@ps& (0+255),w,b
 13683  021E' 5000'              	movf	(??_eval_gps+1)^0,w,c
 13684  0220' 5900'              	subwfb	(eval_gps@ps+1)& (0+255),w,b
 13685  0222' A0D8               	btfss	status,0,c
 13686  0224' EF00' F000'        	goto	u12521
 13687  0228' EF00' F000'        	goto	u12520
 13688  022C'                    u12521:
 13689  022C' EF00' F000'        	goto	l10133
 13690  0230'                    u12520:
 13691  0230' EF00' F000'        	goto	l792
 13692  0234'                    l10133:
 13693                           
 13694                           ; BSR set to: 1
 13695                           ;src/gps.c: 57:    if(eidx >= 15) break;
 13696  0234' 0E0E               	movlw	14
 13697  0236' 6500'              	cpfsgt	eval_gps@eidx& (0+255),b
 13698  0238' EF00' F000'        	goto	u12531
 13699  023C' EF00' F000'        	goto	u12530
 13700  0240'                    u12531:
 13701  0240' EF00' F000'        	goto	l794
 13702  0244'                    u12530:
 13703  0244' EF00' F000'        	goto	l792
 13704  0248'                    l794:
 13705                           
 13706                           ; BSR set to: 1
 13707  0248' 0004               	clrwdt		;# 
 13708  024A' EF00' F000'        	goto	l10117
 13709  024E'                    l792:
 13710                           
 13711                           ; BSR set to: 1
 13712                           ;src/gps.c: 71:   GPS_time[0] = elem[1][0];
 13713  024E' C010' F098'        	movff	eval_gps@elem+16,_GPS_time
 13714                           
 13715                           ;src/gps.c: 72:   GPS_time[1] = elem[1][1];
 13716  0252' C011' F099'        	movff	eval_gps@elem+17,_GPS_time+1
 13717  0256'                    
 13718                           ; BSR set to: 1
 13719                           ;src/gps.c: 73:   GPS_time[2] = ':';
 13720  0256' 0E3A               	movlw	58
 13721  0258' 0102               	movlb	2	; () banked
 13722  025A' 6F00'              	movwf	(_GPS_time+2)& (0+255),b
 13723  025C'                    
 13724                           ; BSR set to: 2
 13725                           ;src/gps.c: 74:   GPS_time[3] = elem[1][2];
 13726  025C' C012' F09B'        	movff	eval_gps@elem+18,_GPS_time+3
 13727  0260'                    
 13728                           ; BSR set to: 2
 13729                           ;src/gps.c: 75:   GPS_time[4] = elem[1][3];
 13730  0260' C013' F09C'        	movff	eval_gps@elem+19,_GPS_time+4
 13731                           
 13732                           ;src/gps.c: 76:   GPS_time[5] = ':';
 13733  0264' 0E3A               	movlw	58
 13734  0266' 6F00'              	movwf	(_GPS_time+5)& (0+255),b
 13735  0268'                    
 13736                           ; BSR set to: 2
 13737                           ;src/gps.c: 77:   GPS_time[6] = elem[1][4];
 13738  0268' C014' F09E'        	movff	eval_gps@elem+20,_GPS_time+6
 13739  026C'                    
 13740                           ; BSR set to: 2
 13741                           ;src/gps.c: 78:   GPS_time[7] = elem[1][5];
 13742  026C' C015' F09F'        	movff	eval_gps@elem+21,_GPS_time+7
 13743                           
 13744                           ;src/gps.c: 79:   GPS_time[8] = 0;
 13745  0270' 0E00               	movlw	0
 13746  0272' 6F00'              	movwf	(_GPS_time+8)& (0+255),b
 13747  0274'                    
 13748                           ; BSR set to: 2
 13749                           ;src/gps.c: 81:   if(elem[6][0] != '1' && elem[6][0] != '2')
 13750  0274' 0E31               	movlw	49
 13751  0276' 0101               	movlb	1	; () banked
 13752  0278' 1900'              	xorwf	(eval_gps@elem+96)& (0+255),w,b
 13753  027A' B4D8               	btfsc	status,2,c
 13754  027C' EF00' F000'        	goto	u12541
 13755  0280' EF00' F000'        	goto	u12540
 13756  0284'                    u12541:
 13757  0284' EF00' F000'        	goto	l10155
 13758  0288'                    u12540:
 13759  0288'                    
 13760                           ; BSR set to: 1
 13761  0288' 0E32               	movlw	50
 13762  028A' 1900'              	xorwf	(eval_gps@elem+96)& (0+255),w,b
 13763  028C' B4D8               	btfsc	status,2,c
 13764  028E' EF00' F000'        	goto	u12551
 13765  0292' EF00' F000'        	goto	u12550
 13766  0296'                    u12551:
 13767  0296' EF00' F000'        	goto	l10155
 13768  029A'                    u12550:
 13769  029A'                    
 13770                           ; BSR set to: 1
 13771                           ;src/gps.c: 82:   {;src/gps.c: 84:    GPS_lock = 0;
 13772  029A' 0E00               	movlw	0
 13773  029C' 0100               	movlb	0	; () banked
 13774  029E' 6F00'              	movwf	_GPS_lock& (0+255),b
 13775                           
 13776                           ;src/gps.c: 85:    GPS_sat = 0;
 13777  02A0' 0E00               	movlw	0
 13778  02A2' 6F00'              	movwf	_GPS_sat& (0+255),b
 13779                           
 13780                           ;src/gps.c: 86:    *GPS_lat = 0;
 13781  02A4' 0E00               	movlw	0
 13782  02A6' 0102               	movlb	2	; () banked
 13783  02A8' 6F00'              	movwf	_GPS_lat& (0+255),b
 13784                           
 13785                           ;src/gps.c: 87:    *GPS_lon = 0;
 13786  02AA' 0E00               	movlw	0
 13787  02AC' 6F00'              	movwf	_GPS_lon& (0+255),b
 13788  02AE' EF00' F000'        	goto	l784
 13789  02B2'                    l10155:
 13790                           
 13791                           ; BSR set to: 1
 13792                           ;src/gps.c: 90:   GPS_lock = 1;
 13793  02B2' 0E01               	movlw	1
 13794  02B4' 0100               	movlb	0	; () banked
 13795  02B6' 6F00'              	movwf	_GPS_lock& (0+255),b
 13796  02B8'                    
 13797                           ; BSR set to: 0
 13798                           ;src/gps.c: 92:   GPS_sat = atoi(elem[7]);
 13799  02B8' 0E00'              	movlw	low (eval_gps@elem+112)
 13800  02BA' 6E00'              	movwf	atoi@s^0,c
 13801  02BC' 0E00'              	movlw	high (eval_gps@elem+112)
 13802  02BE' 6E00'              	movwf	(atoi@s+1)^0,c
 13803  02C0' EC00' F000'        	call	_atoi	;wreg free
 13804  02C4' 5000'              	movf	?_atoi^0,w,c
 13805  02C6' 0100               	movlb	0	; () banked
 13806  02C8' 6F00'              	movwf	_GPS_sat& (0+255),b
 13807  02CA'                    
 13808                           ; BSR set to: 0
 13809                           ;src/gps.c: 94:   memcpy(GPS_lat,elem[2],2);
 13810  02CA' 0E00'              	movlw	low _GPS_lat
 13811  02CC' 6E00'              	movwf	memcpy@d1^0,c
 13812  02CE' 0E00'              	movlw	high _GPS_lat
 13813  02D0' 6E00'              	movwf	(memcpy@d1+1)^0,c
 13814  02D2' 0E00'              	movlw	low (eval_gps@elem+32)
 13815  02D4' 6E00'              	movwf	memcpy@s1^0,c
 13816  02D6' 0E00'              	movlw	high (eval_gps@elem+32)
 13817  02D8' 6E00'              	movwf	(memcpy@s1+1)^0,c
 13818  02DA' 0E00               	movlw	0
 13819  02DC' 6E00'              	movwf	(memcpy@n+1)^0,c
 13820  02DE' 0E02               	movlw	2
 13821  02E0' 6E00'              	movwf	memcpy@n^0,c
 13822  02E2' EC00' F000'        	call	_memcpy	;wreg free
 13823  02E6'                    
 13824                           ;src/gps.c: 95:   GPS_lat[2] = 'd';
 13825  02E6' 0E64               	movlw	100
 13826  02E8' 0102               	movlb	2	; () banked
 13827  02EA' 6F00'              	movwf	(_GPS_lat+2)& (0+255),b
 13828  02EC'                    
 13829                           ; BSR set to: 2
 13830                           ;src/gps.c: 96:   memcpy(GPS_lat+3,elem[2]+2,5);
 13831  02EC' 0E00'              	movlw	low (_GPS_lat+3)
 13832  02EE' 6E00'              	movwf	memcpy@d1^0,c
 13833  02F0' 0E00'              	movlw	high (_GPS_lat+3)
 13834  02F2' 6E00'              	movwf	(memcpy@d1+1)^0,c
 13835  02F4' 0E00'              	movlw	low (eval_gps@elem+34)
 13836  02F6' 6E00'              	movwf	memcpy@s1^0,c
 13837  02F8' 0E00'              	movlw	high (eval_gps@elem+34)
 13838  02FA' 6E00'              	movwf	(memcpy@s1+1)^0,c
 13839  02FC' 0E00               	movlw	0
 13840  02FE' 6E00'              	movwf	(memcpy@n+1)^0,c
 13841  0300' 0E05               	movlw	5
 13842  0302' 6E00'              	movwf	memcpy@n^0,c
 13843  0304' EC00' F000'        	call	_memcpy	;wreg free
 13844  0308'                    
 13845                           ;src/gps.c: 97:   GPS_lat[8] = elem[3][0];
 13846  0308' C030' F088'        	movff	eval_gps@elem+48,_GPS_lat+8
 13847  030C'                    
 13848                           ;src/gps.c: 98:   GPS_lat[9] = 0;
 13849  030C' 0E00               	movlw	0
 13850  030E' 0102               	movlb	2	; () banked
 13851  0310' 6F00'              	movwf	(_GPS_lat+9)& (0+255),b
 13852  0312'                    
 13853                           ; BSR set to: 2
 13854                           ;src/gps.c: 100:   memcpy(GPS_lon,elem[4],3);
 13855  0312' 0E00'              	movlw	low _GPS_lon
 13856  0314' 6E00'              	movwf	memcpy@d1^0,c
 13857  0316' 0E00'              	movlw	high _GPS_lon
 13858  0318' 6E00'              	movwf	(memcpy@d1+1)^0,c
 13859  031A' 0E00'              	movlw	low (eval_gps@elem+64)
 13860  031C' 6E00'              	movwf	memcpy@s1^0,c
 13861  031E' 0E00'              	movlw	high (eval_gps@elem+64)
 13862  0320' 6E00'              	movwf	(memcpy@s1+1)^0,c
 13863  0322' 0E00               	movlw	0
 13864  0324' 6E00'              	movwf	(memcpy@n+1)^0,c
 13865  0326' 0E03               	movlw	3
 13866  0328' 6E00'              	movwf	memcpy@n^0,c
 13867  032A' EC00' F000'        	call	_memcpy	;wreg free
 13868  032E'                    
 13869                           ;src/gps.c: 101:   GPS_lon[3] = 'd';
 13870  032E' 0E64               	movlw	100
 13871  0330' 0102               	movlb	2	; () banked
 13872  0332' 6F00'              	movwf	(_GPS_lon+3)& (0+255),b
 13873  0334'                    
 13874                           ; BSR set to: 2
 13875                           ;src/gps.c: 102:   memcpy(GPS_lon+4,elem[4]+3,5);
 13876  0334' 0E00'              	movlw	low (_GPS_lon+4)
 13877  0336' 6E00'              	movwf	memcpy@d1^0,c
 13878  0338' 0E00'              	movlw	high (_GPS_lon+4)
 13879  033A' 6E00'              	movwf	(memcpy@d1+1)^0,c
 13880  033C' 0E00'              	movlw	low (eval_gps@elem+67)
 13881  033E' 6E00'              	movwf	memcpy@s1^0,c
 13882  0340' 0E00'              	movlw	high (eval_gps@elem+67)
 13883  0342' 6E00'              	movwf	(memcpy@s1+1)^0,c
 13884  0344' 0E00               	movlw	0
 13885  0346' 6E00'              	movwf	(memcpy@n+1)^0,c
 13886  0348' 0E05               	movlw	5
 13887  034A' 6E00'              	movwf	memcpy@n^0,c
 13888  034C' EC00' F000'        	call	_memcpy	;wreg free
 13889  0350'                    
 13890                           ;src/gps.c: 103:   GPS_lon[9] = elem[5][0];
 13891  0350' C050' F07A'        	movff	eval_gps@elem+80,_GPS_lon+9
 13892  0354'                    
 13893                           ;src/gps.c: 104:   GPS_lon[10] = 0;
 13894  0354' 0E00               	movlw	0
 13895  0356' 0102               	movlb	2	; () banked
 13896  0358' 6F00'              	movwf	(_GPS_lon+10)& (0+255),b
 13897  035A'                    l784:
 13898  035A' 0012               	return		;funcret
 13899  035C'                    __end_of_eval_gps:
 13900                           	opt callstack 0
 13901                           
 13902 ;; *************** function _strtol *****************
 13903 ;; Defined at:
 13904 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strtol.c"
 13905 ;; Parameters:    Size  Location     Type
 13906 ;;  s               2   63[COMRAM] PTR const unsigned char 
 13907 ;;		 -> gpsbuf(85), 
 13908 ;;  endptr          2   65[COMRAM] PTR PTR unsigned char 
 13909 ;;		 -> NULL(0), 
 13910 ;;  base            2   67[COMRAM] int 
 13911 ;; Auto vars:     Size  Location     Type
 13912 ;;		None
 13913 ;; Return value:  Size  Location     Type
 13914 ;;                  4   63[COMRAM] long 
 13915 ;; Registers used:
 13916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13917 ;; Tracked objects:
 13918 ;;		On entry : 0/0
 13919 ;;		On exit  : 0/0
 13920 ;;		Unchanged: 0/0
 13921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13922 ;;      Params:         6       0       0       0       0       0       0
 13923 ;;      Locals:         0       0       0       0       0       0       0
 13924 ;;      Temps:          0       0       0       0       0       0       0
 13925 ;;      Totals:         6       0       0       0       0       0       0
 13926 ;;Total ram usage:        6 bytes
 13927 ;; Hardware stack levels used:    1
 13928 ;; Hardware stack levels required when called:    5
 13929 ;; This function calls:
 13930 ;;		___strtoxl
 13931 ;; This function is called by:
 13932 ;;		_eval_gps
 13933 ;; This function uses a non-reentrant model
 13934 ;;
 13935                           
 13936                           	psect	text35
 13937  0000'                    __ptext35:
 13938                           	opt callstack 0
 13939  0000'                    _strtol:
 13940                           	opt callstack 22
 13941  0000' C03F' F01B'        	movff	strtol@s,___strtoxl@s
 13942  0004' C040' F01C'        	movff	strtol@s+1,___strtoxl@s+1
 13943  0008' C041' F01D'        	movff	strtol@endptr,___strtoxl@endptr
 13944  000C' C042' F01E'        	movff	strtol@endptr+1,___strtoxl@endptr+1
 13945  0010' C043' F01F'        	movff	strtol@base,___strtoxl@base
 13946  0014' C044' F020'        	movff	strtol@base+1,___strtoxl@base+1
 13947  0018' 0E01               	movlw	1
 13948  001A' 6E00'              	movwf	___strtoxl@is_signed^0,c
 13949  001C' EC00' F000'        	call	___strtoxl	;wreg free
 13950  0020' C01B' F03F'        	movff	?___strtoxl,?_strtol
 13951  0024' C01C' F040'        	movff	?___strtoxl+1,?_strtol+1
 13952  0028' C01D' F041'        	movff	?___strtoxl+2,?_strtol+2
 13953  002C' C01E' F042'        	movff	?___strtoxl+3,?_strtol+3
 13954  0030' 0012               	return		;funcret
 13955  0032'                    __end_of_strtol:
 13956                           	opt callstack 0
 13957                           
 13958 ;; *************** function ___strtoxl *****************
 13959 ;; Defined at:
 13960 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__strtoxl.c"
 13961 ;; Parameters:    Size  Location     Type
 13962 ;;  s               2   27[COMRAM] PTR const unsigned char 
 13963 ;;		 -> gpsbuf(85), 
 13964 ;;  endptr          2   29[COMRAM] PTR PTR unsigned char 
 13965 ;;		 -> NULL(0), 
 13966 ;;  base            2   31[COMRAM] int 
 13967 ;;  is_signed       1   33[COMRAM] unsigned char 
 13968 ;; Auto vars:     Size  Location     Type
 13969 ;;  a               4   56[COMRAM] unsigned long 
 13970 ;;  limit           4   50[COMRAM] unsigned long 
 13971 ;;  prev_a          4   38[COMRAM] unsigned long 
 13972 ;;  cp              2   60[COMRAM] PTR const unsigned char 
 13973 ;;		 -> gpsbuf(85), 
 13974 ;;  c               1   62[COMRAM] unsigned char 
 13975 ;;  skip            1   55[COMRAM] unsigned char 
 13976 ;;  sign            1   54[COMRAM] unsigned char 
 13977 ;;  conv_done       1   49[COMRAM] unsigned char 
 13978 ;; Return value:  Size  Location     Type
 13979 ;;                  4   27[COMRAM] unsigned long 
 13980 ;; Registers used:
 13981 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13982 ;; Tracked objects:
 13983 ;;		On entry : 0/0
 13984 ;;		On exit  : 0/0
 13985 ;;		Unchanged: 0/0
 13986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13987 ;;      Params:         7       0       0       0       0       0       0
 13988 ;;      Locals:        25       0       0       0       0       0       0
 13989 ;;      Temps:          4       0       0       0       0       0       0
 13990 ;;      Totals:        36       0       0       0       0       0       0
 13991 ;;Total ram usage:       36 bytes
 13992 ;; Hardware stack levels used:    1
 13993 ;; Hardware stack levels required when called:    4
 13994 ;; This function calls:
 13995 ;;		___lmul
 13996 ;;		_isalpha
 13997 ;;		_isdigit
 13998 ;;		_isspace
 13999 ;;		_toupper
 14000 ;; This function is called by:
 14001 ;;		_strtol
 14002 ;; This function uses a non-reentrant model
 14003 ;;
 14004                           
 14005                           	psect	text36
 14006  0000'                    __ptext36:
 14007                           	opt callstack 0
 14008  0000'                    ___strtoxl:
 14009                           	opt callstack 22
 14010  0000' 0E00               	movlw	0
 14011  0002' 6E00'              	movwf	___strtoxl@a^0,c
 14012  0004' 0E00               	movlw	0
 14013  0006' 6E00'              	movwf	(___strtoxl@a+1)^0,c
 14014  0008' 0E00               	movlw	0
 14015  000A' 6E00'              	movwf	(___strtoxl@a+2)^0,c
 14016  000C' 0E00               	movlw	0
 14017  000E' 6E00'              	movwf	(___strtoxl@a+3)^0,c
 14018  0010' C01B' F03C'        	movff	___strtoxl@s,___strtoxl@cp
 14019  0014' C01C' F03D'        	movff	___strtoxl@s+1,___strtoxl@cp+1
 14020  0018' 5000'              	movf	___strtoxl@cp^0,w,c
 14021  001A' 1000'              	iorwf	(___strtoxl@cp+1)^0,w,c
 14022  001C' B4D8               	btfsc	status,2,c
 14023  001E' EF00' F000'        	goto	u11661
 14024  0022' EF00' F000'        	goto	u11660
 14025  0026'                    u11661:
 14026  0026' EF00' F000'        	goto	l9695
 14027  002A'                    u11660:
 14028  002A' C03C' FFD9         	movff	___strtoxl@cp,fsr2l
 14029  002E' C03D' FFDA         	movff	___strtoxl@cp+1,fsr2h
 14030  0032' 50DF               	movf	indf2,w,c
 14031  0034' A4D8               	btfss	status,2,c
 14032  0036' EF00' F000'        	goto	u11671
 14033  003A' EF00' F000'        	goto	u11670
 14034  003E'                    u11671:
 14035  003E' EF00' F000'        	goto	l9591
 14036  0042'                    u11670:
 14037  0042' EF00' F000'        	goto	l9695
 14038  0046'                    l9591:
 14039  0046' C03C' FFD9         	movff	___strtoxl@cp,fsr2l
 14040  004A' C03D' FFDA         	movff	___strtoxl@cp+1,fsr2h
 14041  004E' 50DF               	movf	indf2,w,c
 14042  0050' 6E00'              	movwf	___strtoxl@c^0,c
 14043  0052' EF00' F000'        	goto	l9595
 14044  0056'                    l9593:
 14045  0056' 4A00'              	infsnz	___strtoxl@cp^0,f,c
 14046  0058' 2A00'              	incf	(___strtoxl@cp+1)^0,f,c
 14047  005A' C03C' FFD9         	movff	___strtoxl@cp,fsr2l
 14048  005E' C03D' FFDA         	movff	___strtoxl@cp+1,fsr2h
 14049  0062' 50DF               	movf	indf2,w,c
 14050  0064' 6E00'              	movwf	___strtoxl@c^0,c
 14051  0066'                    l9595:
 14052  0066' 0E01               	movlw	1
 14053  0068' 6E00'              	movwf	___strtoxl$3571^0,c
 14054  006A' 0E20               	movlw	32
 14055  006C' 1800'              	xorwf	___strtoxl@c^0,w,c
 14056  006E' B4D8               	btfsc	status,2,c
 14057  0070' EF00' F000'        	goto	u11681
 14058  0074' EF00' F000'        	goto	u11680
 14059  0078'                    u11681:
 14060  0078' EF00' F000'        	goto	l9603
 14061  007C'                    u11680:
 14062  007C' 0EF7               	movlw	247
 14063  007E' 6E00'              	movwf	??___strtoxl^0,c
 14064  0080' 0EFF               	movlw	255
 14065  0082' 6E00'              	movwf	(??___strtoxl+1)^0,c
 14066  0084' 5000'              	movf	___strtoxl@c^0,w,c
 14067  0086' 6E00'              	movwf	(??___strtoxl+2)^0,c
 14068  0088' 6A00'              	clrf	(??___strtoxl+3)^0,c
 14069  008A' 5000'              	movf	??___strtoxl^0,w,c
 14070  008C' 2600'              	addwf	(??___strtoxl+2)^0,f,c
 14071  008E' 5000'              	movf	(??___strtoxl+1)^0,w,c
 14072  0090' 2200'              	addwfc	(??___strtoxl+3)^0,f,c
 14073  0092' 5000'              	movf	(??___strtoxl+3)^0,w,c
 14074  0094' E109               	bnz	u11690
 14075  0096' 0E05               	movlw	5
 14076  0098' 5C00'              	subwf	(??___strtoxl+2)^0,w,c
 14077  009A' A0D8               	btfss	status,0,c
 14078  009C' EF00' F000'        	goto	u11691
 14079  00A0' EF00' F000'        	goto	u11690
 14080  00A4'                    u11691:
 14081  00A4' EF00' F000'        	goto	l9603
 14082  00A8'                    u11690:
 14083  00A8' 0E00               	movlw	0
 14084  00AA' 6E00'              	movwf	___strtoxl$3571^0,c
 14085  00AC'                    l9603:
 14086  00AC' C030' F02A'        	movff	___strtoxl$3571,___strtoxl$3570
 14087  00B0' 6A00'              	clrf	(___strtoxl$3570+1)^0,c
 14088  00B2' 5000'              	movf	___strtoxl$3570^0,w,c
 14089  00B4' 1000'              	iorwf	(___strtoxl$3570+1)^0,w,c
 14090  00B6' A4D8               	btfss	status,2,c
 14091  00B8' EF00' F000'        	goto	u11701
 14092  00BC' EF00' F000'        	goto	u11700
 14093  00C0'                    u11701:
 14094  00C0' EF00' F000'        	goto	l9593
 14095  00C4'                    u11700:
 14096  00C4' 0E00               	movlw	0
 14097  00C6' 6E00'              	movwf	___strtoxl@sign^0,c
 14098  00C8' 0E00               	movlw	0
 14099  00CA' 6E00'              	movwf	___strtoxl@conv_done^0,c
 14100  00CC' 0E00               	movlw	0
 14101  00CE' 6E00'              	movwf	___strtoxl@skip^0,c
 14102  00D0' 0E2D               	movlw	45
 14103  00D2' 1800'              	xorwf	___strtoxl@c^0,w,c
 14104  00D4' A4D8               	btfss	status,2,c
 14105  00D6' EF00' F000'        	goto	u11711
 14106  00DA' EF00' F000'        	goto	u11710
 14107  00DE'                    u11711:
 14108  00DE' EF00' F000'        	goto	l9617
 14109  00E2'                    u11710:
 14110  00E2' 0E01               	movlw	1
 14111  00E4' 6E00'              	movwf	___strtoxl@sign^0,c
 14112  00E6'                    l9615:
 14113  00E6' 4A00'              	infsnz	___strtoxl@cp^0,f,c
 14114  00E8' 2A00'              	incf	(___strtoxl@cp+1)^0,f,c
 14115  00EA' C03C' FFD9         	movff	___strtoxl@cp,fsr2l
 14116  00EE' C03D' FFDA         	movff	___strtoxl@cp+1,fsr2h
 14117  00F2' 50DF               	movf	indf2,w,c
 14118  00F4' 6E00'              	movwf	___strtoxl@c^0,c
 14119  00F6' EF00' F000'        	goto	l9621
 14120  00FA'                    l9617:
 14121  00FA' 0E2B               	movlw	43
 14122  00FC' 1800'              	xorwf	___strtoxl@c^0,w,c
 14123  00FE' A4D8               	btfss	status,2,c
 14124  0100' EF00' F000'        	goto	u11721
 14125  0104' EF00' F000'        	goto	u11720
 14126  0108'                    u11721:
 14127  0108' EF00' F000'        	goto	l9621
 14128  010C'                    u11720:
 14129  010C' EF00' F000'        	goto	l9615
 14130  0110'                    l9621:
 14131  0110' 0E30               	movlw	48
 14132  0112' 1800'              	xorwf	___strtoxl@c^0,w,c
 14133  0114' A4D8               	btfss	status,2,c
 14134  0116' EF00' F000'        	goto	u11731
 14135  011A' EF00' F000'        	goto	u11730
 14136  011E'                    u11731:
 14137  011E' EF00' F000'        	goto	l9643
 14138  0122'                    u11730:
 14139  0122' 4A00'              	infsnz	___strtoxl@cp^0,f,c
 14140  0124' 2A00'              	incf	(___strtoxl@cp+1)^0,f,c
 14141  0126' C03C' FFD9         	movff	___strtoxl@cp,fsr2l
 14142  012A' C03D' FFDA         	movff	___strtoxl@cp+1,fsr2h
 14143  012E' 50DF               	movf	indf2,w,c
 14144  0130' 6E00'              	movwf	___strtoxl@c^0,c
 14145  0132' 5000'              	movf	___strtoxl@base^0,w,c
 14146  0134' 1000'              	iorwf	(___strtoxl@base+1)^0,w,c
 14147  0136' B4D8               	btfsc	status,2,c
 14148  0138' EF00' F000'        	goto	u11741
 14149  013C' EF00' F000'        	goto	u11740
 14150  0140'                    u11741:
 14151  0140' EF00' F000'        	goto	l9629
 14152  0144'                    u11740:
 14153  0144' 0E10               	movlw	16
 14154  0146' 1800'              	xorwf	___strtoxl@base^0,w,c
 14155  0148' 1000'              	iorwf	(___strtoxl@base+1)^0,w,c
 14156  014A' A4D8               	btfss	status,2,c
 14157  014C' EF00' F000'        	goto	u11751
 14158  0150' EF00' F000'        	goto	u11750
 14159  0154'                    u11751:
 14160  0154' EF00' F000'        	goto	l9637
 14161  0158'                    u11750:
 14162  0158'                    l9629:
 14163  0158' 0E78               	movlw	120
 14164  015A' 1800'              	xorwf	___strtoxl@c^0,w,c
 14165  015C' B4D8               	btfsc	status,2,c
 14166  015E' EF00' F000'        	goto	u11761
 14167  0162' EF00' F000'        	goto	u11760
 14168  0166'                    u11761:
 14169  0166' EF00' F000'        	goto	l9633
 14170  016A'                    u11760:
 14171  016A' 0E58               	movlw	88
 14172  016C' 1800'              	xorwf	___strtoxl@c^0,w,c
 14173  016E' A4D8               	btfss	status,2,c
 14174  0170' EF00' F000'        	goto	u11771
 14175  0174' EF00' F000'        	goto	u11770
 14176  0178'                    u11771:
 14177  0178' EF00' F000'        	goto	l9637
 14178  017C'                    u11770:
 14179  017C'                    l9633:
 14180  017C' 0E00               	movlw	0
 14181  017E' 6E00'              	movwf	(___strtoxl@base+1)^0,c
 14182  0180' 0E10               	movlw	16
 14183  0182' 6E00'              	movwf	___strtoxl@base^0,c
 14184  0184' 4A00'              	infsnz	___strtoxl@cp^0,f,c
 14185  0186' 2A00'              	incf	(___strtoxl@cp+1)^0,f,c
 14186  0188' C03C' FFD9         	movff	___strtoxl@cp,fsr2l
 14187  018C' C03D' FFDA         	movff	___strtoxl@cp+1,fsr2h
 14188  0190' 50DF               	movf	indf2,w,c
 14189  0192' 6E00'              	movwf	___strtoxl@c^0,c
 14190  0194' EF00' F000'        	goto	l9643
 14191  0198'                    l9637:
 14192  0198' 0E01               	movlw	1
 14193  019A' 6E00'              	movwf	___strtoxl@conv_done^0,c
 14194  019C' 5000'              	movf	___strtoxl@base^0,w,c
 14195  019E' 1000'              	iorwf	(___strtoxl@base+1)^0,w,c
 14196  01A0' A4D8               	btfss	status,2,c
 14197  01A2' EF00' F000'        	goto	u11781
 14198  01A6' EF00' F000'        	goto	u11780
 14199  01AA'                    u11781:
 14200  01AA' EF00' F000'        	goto	l9643
 14201  01AE'                    u11780:
 14202  01AE' 0E00               	movlw	0
 14203  01B0' 6E00'              	movwf	(___strtoxl@base+1)^0,c
 14204  01B2' 0E08               	movlw	8
 14205  01B4' 6E00'              	movwf	___strtoxl@base^0,c
 14206  01B6'                    l9643:
 14207  01B6' 5000'              	movf	___strtoxl@base^0,w,c
 14208  01B8' 1000'              	iorwf	(___strtoxl@base+1)^0,w,c
 14209  01BA' A4D8               	btfss	status,2,c
 14210  01BC' EF00' F000'        	goto	u11791
 14211  01C0' EF00' F000'        	goto	u11790
 14212  01C4'                    u11791:
 14213  01C4' EF00' F000'        	goto	l2252
 14214  01C8'                    u11790:
 14215  01C8' 0E00               	movlw	0
 14216  01CA' 6E00'              	movwf	(___strtoxl@base+1)^0,c
 14217  01CC' 0E0A               	movlw	10
 14218  01CE' 6E00'              	movwf	___strtoxl@base^0,c
 14219  01D0'                    l2252:
 14220  01D0' 5000'              	movf	___strtoxl@is_signed^0,w,c
 14221  01D2' B4D8               	btfsc	status,2,c
 14222  01D4' EF00' F000'        	goto	u11801
 14223  01D8' EF00' F000'        	goto	u11800
 14224  01DC'                    u11801:
 14225  01DC' EF00' F000'        	goto	l2253
 14226  01E0'                    u11800:
 14227  01E0' 5000'              	movf	___strtoxl@sign^0,w,c
 14228  01E2' A4D8               	btfss	status,2,c
 14229  01E4' EF00' F000'        	goto	u11811
 14230  01E8' EF00' F000'        	goto	u11810
 14231  01EC'                    u11811:
 14232  01EC' EF00' F000'        	goto	l9651
 14233  01F0'                    u11810:
 14234  01F0' 0EFF               	movlw	255
 14235  01F2' 6E00'              	movwf	___strtoxl@limit^0,c
 14236  01F4' 0EFF               	movlw	255
 14237  01F6' 6E00'              	movwf	(___strtoxl@limit+1)^0,c
 14238  01F8' 0EFF               	movlw	255
 14239  01FA' 6E00'              	movwf	(___strtoxl@limit+2)^0,c
 14240  01FC' 0E7F               	movlw	127
 14241  01FE' 6E00'              	movwf	(___strtoxl@limit+3)^0,c
 14242  0200' EF00' F000'        	goto	l2259
 14243  0204'                    l9651:
 14244  0204' 0E00               	movlw	0
 14245  0206' 6E00'              	movwf	___strtoxl@limit^0,c
 14246  0208' 0E00               	movlw	0
 14247  020A' 6E00'              	movwf	(___strtoxl@limit+1)^0,c
 14248  020C' 0E00               	movlw	0
 14249  020E' 6E00'              	movwf	(___strtoxl@limit+2)^0,c
 14250  0210' 0E80               	movlw	128
 14251  0212' 6E00'              	movwf	(___strtoxl@limit+3)^0,c
 14252  0214' EF00' F000'        	goto	l2259
 14253  0218'                    l2253:
 14254  0218' 6800'              	setf	___strtoxl@limit^0,c
 14255  021A' 6800'              	setf	(___strtoxl@limit+1)^0,c
 14256  021C' 6800'              	setf	(___strtoxl@limit+2)^0,c
 14257  021E' 6800'              	setf	(___strtoxl@limit+3)^0,c
 14258  0220'                    l2259:
 14259  0220' C038' F026'        	movff	___strtoxl@a,___strtoxl@prev_a
 14260  0224' C039' F027'        	movff	___strtoxl@a+1,___strtoxl@prev_a+1
 14261  0228' C03A' F028'        	movff	___strtoxl@a+2,___strtoxl@prev_a+2
 14262  022C' C03B' F029'        	movff	___strtoxl@a+3,___strtoxl@prev_a+3
 14263  0230' 0E9F               	movlw	159
 14264  0232' 6E00'              	movwf	??___strtoxl^0,c
 14265  0234' 0EFF               	movlw	255
 14266  0236' 6E00'              	movwf	(??___strtoxl+1)^0,c
 14267  0238' 5000'              	movf	___strtoxl@c^0,w,c
 14268  023A' 6E00'              	movwf	(??___strtoxl+2)^0,c
 14269  023C' 6A00'              	clrf	(??___strtoxl+3)^0,c
 14270  023E' 0E20               	movlw	32
 14271  0240' 1200'              	iorwf	(??___strtoxl+2)^0,f,c
 14272  0242' 0E00               	movlw	0
 14273  0244' 1200'              	iorwf	(??___strtoxl+3)^0,f,c
 14274  0246' 5000'              	movf	??___strtoxl^0,w,c
 14275  0248' 2600'              	addwf	(??___strtoxl+2)^0,f,c
 14276  024A' 5000'              	movf	(??___strtoxl+1)^0,w,c
 14277  024C' 2200'              	addwfc	(??___strtoxl+3)^0,f,c
 14278  024E' 5000'              	movf	(??___strtoxl+3)^0,w,c
 14279  0250' E10A               	bnz	u11820
 14280  0252' 0E1A               	movlw	26
 14281  0254' 5C00'              	subwf	(??___strtoxl+2)^0,w,c
 14282  0256' A0D8               	btfss	status,0,c
 14283  0258' EF00' F000'        	goto	u11821
 14284  025C' EF00' F000'        	goto	u11820
 14285  0260'                    u11821:
 14286  0260' 0E01               	movlw	1
 14287  0262' EF00' F000'        	goto	u11830
 14288  0266'                    u11820:
 14289  0266' 0E00               	movlw	0
 14290  0268'                    u11830:
 14291  0268' 6E00'              	movwf	___strtoxl$3572^0,c
 14292  026A' 6A00'              	clrf	(___strtoxl$3572+1)^0,c
 14293  026C' 5000'              	movf	___strtoxl$3572^0,w,c
 14294  026E' 1000'              	iorwf	(___strtoxl$3572+1)^0,w,c
 14295  0270' B4D8               	btfsc	status,2,c
 14296  0272' EF00' F000'        	goto	u11841
 14297  0276' EF00' F000'        	goto	u11840
 14298  027A'                    u11841:
 14299  027A' EF00' F000'        	goto	l9661
 14300  027E'                    u11840:
 14301  027E' C03E' F013'        	movff	___strtoxl@c,toupper@c
 14302  0282' 6A00'              	clrf	(toupper@c+1)^0,c
 14303  0284' EC00' F000'        	call	_toupper	;wreg free
 14304  0288' 5000'              	movf	?_toupper^0,w,c
 14305  028A' 0FC9               	addlw	201
 14306  028C' 6E00'              	movwf	___strtoxl@c^0,c
 14307  028E' EF00' F000'        	goto	l9669
 14308  0292'                    l9661:
 14309  0292' 0ED0               	movlw	208
 14310  0294' 6E00'              	movwf	??___strtoxl^0,c
 14311  0296' 0EFF               	movlw	255
 14312  0298' 6E00'              	movwf	(??___strtoxl+1)^0,c
 14313  029A' 5000'              	movf	___strtoxl@c^0,w,c
 14314  029C' 6E00'              	movwf	(??___strtoxl+2)^0,c
 14315  029E' 6A00'              	clrf	(??___strtoxl+3)^0,c
 14316  02A0' 5000'              	movf	??___strtoxl^0,w,c
 14317  02A2' 2600'              	addwf	(??___strtoxl+2)^0,f,c
 14318  02A4' 5000'              	movf	(??___strtoxl+1)^0,w,c
 14319  02A6' 2200'              	addwfc	(??___strtoxl+3)^0,f,c
 14320  02A8' 5000'              	movf	(??___strtoxl+3)^0,w,c
 14321  02AA' E10A               	bnz	u11850
 14322  02AC' 0E0A               	movlw	10
 14323  02AE' 5C00'              	subwf	(??___strtoxl+2)^0,w,c
 14324  02B0' A0D8               	btfss	status,0,c
 14325  02B2' EF00' F000'        	goto	u11851
 14326  02B6' EF00' F000'        	goto	u11850
 14327  02BA'                    u11851:
 14328  02BA' 0E01               	movlw	1
 14329  02BC' EF00' F000'        	goto	u11860
 14330  02C0'                    u11850:
 14331  02C0' 0E00               	movlw	0
 14332  02C2'                    u11860:
 14333  02C2' 6E00'              	movwf	___strtoxl$3573^0,c
 14334  02C4' 6A00'              	clrf	(___strtoxl$3573+1)^0,c
 14335  02C6' 5000'              	movf	___strtoxl$3573^0,w,c
 14336  02C8' 1000'              	iorwf	(___strtoxl$3573+1)^0,w,c
 14337  02CA' B4D8               	btfsc	status,2,c
 14338  02CC' EF00' F000'        	goto	u11871
 14339  02D0' EF00' F000'        	goto	u11870
 14340  02D4'                    u11871:
 14341  02D4' EF00' F000'        	goto	l9689
 14342  02D8'                    u11870:
 14343  02D8' 0E30               	movlw	48
 14344  02DA' 5E00'              	subwf	___strtoxl@c^0,f,c
 14345  02DC'                    l9669:
 14346  02DC' 5000'              	movf	___strtoxl@c^0,w,c
 14347  02DE' 6E00'              	movwf	??___strtoxl^0,c
 14348  02E0' 6A00'              	clrf	(??___strtoxl+1)^0,c
 14349  02E2' 5000'              	movf	___strtoxl@base^0,w,c
 14350  02E4' 5C00'              	subwf	??___strtoxl^0,w,c
 14351  02E6' 5000'              	movf	(??___strtoxl+1)^0,w,c
 14352  02E8' 0A80               	xorlw	128
 14353  02EA' 6E00'              	movwf	(??___strtoxl+2)^0,c
 14354  02EC' 5000'              	movf	(___strtoxl@base+1)^0,w,c
 14355  02EE' 0A80               	xorlw	128
 14356  02F0' 5800'              	subwfb	(??___strtoxl+2)^0,w,c
 14357  02F2' A0D8               	btfss	status,0,c
 14358  02F4' EF00' F000'        	goto	u11881
 14359  02F8' EF00' F000'        	goto	u11880
 14360  02FC'                    u11881:
 14361  02FC' EF00' F000'        	goto	l9673
 14362  0300'                    u11880:
 14363  0300' EF00' F000'        	goto	l9689
 14364  0304'                    l9673:
 14365  0304' 5000'              	movf	___strtoxl@skip^0,w,c
 14366  0306' A4D8               	btfss	status,2,c
 14367  0308' EF00' F000'        	goto	u11891
 14368  030C' EF00' F000'        	goto	u11890
 14369  0310'                    u11891:
 14370  0310' EF00' F000'        	goto	l9685
 14371  0314'                    u11890:
 14372  0314' C01F' F00D'        	movff	___strtoxl@base,___lmul@multiplier
 14373  0318' C020' F00E'        	movff	___strtoxl@base+1,___lmul@multiplier+1
 14374  031C' 0E00               	movlw	0
 14375  031E' BE00'              	btfsc	(___lmul@multiplier+1)^0,7,c
 14376  0320' 0EFF               	movlw	-1
 14377  0322' 6E00'              	movwf	(___lmul@multiplier+2)^0,c
 14378  0324' 6E00'              	movwf	(___lmul@multiplier+3)^0,c
 14379  0326' C038' F011'        	movff	___strtoxl@a,___lmul@multiplicand
 14380  032A' C039' F012'        	movff	___strtoxl@a+1,___lmul@multiplicand+1
 14381  032E' C03A' F013'        	movff	___strtoxl@a+2,___lmul@multiplicand+2
 14382  0332' C03B' F014'        	movff	___strtoxl@a+3,___lmul@multiplicand+3
 14383  0336' EC00' F000'        	call	___lmul	;wreg free
 14384  033A' 5000'              	movf	___strtoxl@c^0,w,c
 14385  033C' 2400'              	addwf	?___lmul^0,w,c
 14386  033E' 6E00'              	movwf	___strtoxl@a^0,c
 14387  0340' 0E00               	movlw	0
 14388  0342' 2000'              	addwfc	(?___lmul+1)^0,w,c
 14389  0344' 6E00'              	movwf	(___strtoxl@a+1)^0,c
 14390  0346' 0E00               	movlw	0
 14391  0348' 2000'              	addwfc	(?___lmul+2)^0,w,c
 14392  034A' 6E00'              	movwf	(___strtoxl@a+2)^0,c
 14393  034C' 0E00               	movlw	0
 14394  034E' 2000'              	addwfc	(?___lmul+3)^0,w,c
 14395  0350' 6E00'              	movwf	(___strtoxl@a+3)^0,c
 14396  0352' 5000'              	movf	___strtoxl@prev_a^0,w,c
 14397  0354' 5C00'              	subwf	___strtoxl@a^0,w,c
 14398  0356' 5000'              	movf	(___strtoxl@prev_a+1)^0,w,c
 14399  0358' 5800'              	subwfb	(___strtoxl@a+1)^0,w,c
 14400  035A' 5000'              	movf	(___strtoxl@prev_a+2)^0,w,c
 14401  035C' 5800'              	subwfb	(___strtoxl@a+2)^0,w,c
 14402  035E' 5000'              	movf	(___strtoxl@prev_a+3)^0,w,c
 14403  0360' 5800'              	subwfb	(___strtoxl@a+3)^0,w,c
 14404  0362' A0D8               	btfss	status,0,c
 14405  0364' EF00' F000'        	goto	u11901
 14406  0368' EF00' F000'        	goto	u11900
 14407  036C'                    u11901:
 14408  036C' EF00' F000'        	goto	l2277
 14409  0370'                    u11900:
 14410  0370' 5000'              	movf	___strtoxl@is_signed^0,w,c
 14411  0372' B4D8               	btfsc	status,2,c
 14412  0374' EF00' F000'        	goto	u11911
 14413  0378' EF00' F000'        	goto	u11910
 14414  037C'                    u11911:
 14415  037C' EF00' F000'        	goto	l9685
 14416  0380'                    u11910:
 14417  0380' 5000'              	movf	___strtoxl@a^0,w,c
 14418  0382' 5C00'              	subwf	___strtoxl@limit^0,w,c
 14419  0384' 5000'              	movf	(___strtoxl@a+1)^0,w,c
 14420  0386' 5800'              	subwfb	(___strtoxl@limit+1)^0,w,c
 14421  0388' 5000'              	movf	(___strtoxl@a+2)^0,w,c
 14422  038A' 5800'              	subwfb	(___strtoxl@limit+2)^0,w,c
 14423  038C' 5000'              	movf	(___strtoxl@a+3)^0,w,c
 14424  038E' 5800'              	subwfb	(___strtoxl@limit+3)^0,w,c
 14425  0390' B0D8               	btfsc	status,0,c
 14426  0392' EF00' F000'        	goto	u11921
 14427  0396' EF00' F000'        	goto	u11920
 14428  039A'                    u11921:
 14429  039A' EF00' F000'        	goto	l9685
 14430  039E'                    u11920:
 14431  039E'                    l2277:
 14432  039E' C032' F038'        	movff	___strtoxl@limit,___strtoxl@a
 14433  03A2' C033' F039'        	movff	___strtoxl@limit+1,___strtoxl@a+1
 14434  03A6' C034' F03A'        	movff	___strtoxl@limit+2,___strtoxl@a+2
 14435  03AA' C035' F03B'        	movff	___strtoxl@limit+3,___strtoxl@a+3
 14436  03AE' 0E00               	movlw	0
 14437  03B0' 0102               	movlb	2	; () banked
 14438  03B2' 6F00'              	movwf	(_errno+1)& (0+255),b
 14439  03B4' 0E22               	movlw	34
 14440  03B6' 6F00'              	movwf	_errno& (0+255),b
 14441  03B8' 0E01               	movlw	1
 14442  03BA' 6E00'              	movwf	___strtoxl@skip^0,c
 14443  03BC'                    l9685:
 14444  03BC' 4A00'              	infsnz	___strtoxl@cp^0,f,c
 14445  03BE' 2A00'              	incf	(___strtoxl@cp+1)^0,f,c
 14446  03C0' C03C' FFD9         	movff	___strtoxl@cp,fsr2l
 14447  03C4' C03D' FFDA         	movff	___strtoxl@cp+1,fsr2h
 14448  03C8' 50DF               	movf	indf2,w,c
 14449  03CA' 6E00'              	movwf	___strtoxl@c^0,c
 14450  03CC' 0E01               	movlw	1
 14451  03CE' 6E00'              	movwf	___strtoxl@conv_done^0,c
 14452  03D0' EF00' F000'        	goto	l2259
 14453  03D4'                    l9689:
 14454  03D4' 5000'              	movf	___strtoxl@skip^0,w,c
 14455  03D6' A4D8               	btfss	status,2,c
 14456  03D8' EF00' F000'        	goto	u11931
 14457  03DC' EF00' F000'        	goto	u11930
 14458  03E0'                    u11931:
 14459  03E0' EF00' F000'        	goto	l9695
 14460  03E4'                    u11930:
 14461  03E4' 5000'              	movf	___strtoxl@sign^0,w,c
 14462  03E6' B4D8               	btfsc	status,2,c
 14463  03E8' EF00' F000'        	goto	u11941
 14464  03EC' EF00' F000'        	goto	u11940
 14465  03F0'                    u11941:
 14466  03F0' EF00' F000'        	goto	l9695
 14467  03F4'                    u11940:
 14468  03F4' 1E00'              	comf	(___strtoxl@a+3)^0,f,c
 14469  03F6' 1E00'              	comf	(___strtoxl@a+2)^0,f,c
 14470  03F8' 1E00'              	comf	(___strtoxl@a+1)^0,f,c
 14471  03FA' 6C00'              	negf	___strtoxl@a^0,c
 14472  03FC' 0E00               	movlw	0
 14473  03FE' 2200'              	addwfc	(___strtoxl@a+1)^0,f,c
 14474  0400' 2200'              	addwfc	(___strtoxl@a+2)^0,f,c
 14475  0402' 2200'              	addwfc	(___strtoxl@a+3)^0,f,c
 14476  0404'                    l9695:
 14477  0404' 5000'              	movf	___strtoxl@endptr^0,w,c
 14478  0406' 1000'              	iorwf	(___strtoxl@endptr+1)^0,w,c
 14479  0408' B4D8               	btfsc	status,2,c
 14480  040A' EF00' F000'        	goto	u11951
 14481  040E' EF00' F000'        	goto	u11950
 14482  0412'                    u11951:
 14483  0412' EF00' F000'        	goto	l9703
 14484  0416'                    u11950:
 14485  0416' 5000'              	movf	___strtoxl@conv_done^0,w,c
 14486  0418' A4D8               	btfss	status,2,c
 14487  041A' EF00' F000'        	goto	u11961
 14488  041E' EF00' F000'        	goto	u11960
 14489  0422'                    u11961:
 14490  0422' EF00' F000'        	goto	l9701
 14491  0426'                    u11960:
 14492  0426' C01B' F03C'        	movff	___strtoxl@s,___strtoxl@cp
 14493  042A' C01C' F03D'        	movff	___strtoxl@s+1,___strtoxl@cp+1
 14494  042E'                    l9701:
 14495  042E' C01D' FFD9         	movff	___strtoxl@endptr,fsr2l
 14496  0432' C01E' FFDA         	movff	___strtoxl@endptr+1,fsr2h
 14497  0436' C03C' FFDE         	movff	___strtoxl@cp,postinc2
 14498  043A' C03D' FFDD         	movff	___strtoxl@cp+1,postdec2
 14499  043E'                    l9703:
 14500  043E' C038' F01B'        	movff	___strtoxl@a,?___strtoxl
 14501  0442' C039' F01C'        	movff	___strtoxl@a+1,?___strtoxl+1
 14502  0446' C03A' F01D'        	movff	___strtoxl@a+2,?___strtoxl+2
 14503  044A' C03B' F01E'        	movff	___strtoxl@a+3,?___strtoxl+3
 14504  044E' 0012               	return		;funcret
 14505  0450'                    __end_of___strtoxl:
 14506                           	opt callstack 0
 14507                           
 14508 ;; *************** function ___lmul *****************
 14509 ;; Defined at:
 14510 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul32.c"
 14511 ;; Parameters:    Size  Location     Type
 14512 ;;  multiplier      4   13[COMRAM] unsigned long 
 14513 ;;  multiplicand    4   17[COMRAM] unsigned long 
 14514 ;; Auto vars:     Size  Location     Type
 14515 ;;  product         4   21[COMRAM] unsigned long 
 14516 ;; Return value:  Size  Location     Type
 14517 ;;                  4   13[COMRAM] unsigned long 
 14518 ;; Registers used:
 14519 ;;		wreg, status,2, status,0
 14520 ;; Tracked objects:
 14521 ;;		On entry : 0/0
 14522 ;;		On exit  : 0/0
 14523 ;;		Unchanged: 0/0
 14524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14525 ;;      Params:         8       0       0       0       0       0       0
 14526 ;;      Locals:         4       0       0       0       0       0       0
 14527 ;;      Temps:          0       0       0       0       0       0       0
 14528 ;;      Totals:        12       0       0       0       0       0       0
 14529 ;;Total ram usage:       12 bytes
 14530 ;; Hardware stack levels used:    1
 14531 ;; Hardware stack levels required when called:    2
 14532 ;; This function calls:
 14533 ;;		Nothing
 14534 ;; This function is called by:
 14535 ;;		_adf4351_calc_counters
 14536 ;;		_CalculateGridSquare
 14537 ;;		___strtoxl
 14538 ;; This function uses a non-reentrant model
 14539 ;;
 14540                           
 14541                           	psect	text37
 14542  0000'                    __ptext37:
 14543                           	opt callstack 0
 14544  0000'                    ___lmul:
 14545                           	opt callstack 26
 14546  0000' 0E00               	movlw	0
 14547  0002' 6E00'              	movwf	___lmul@product^0,c
 14548  0004' 0E00               	movlw	0
 14549  0006' 6E00'              	movwf	(___lmul@product+1)^0,c
 14550  0008' 0E00               	movlw	0
 14551  000A' 6E00'              	movwf	(___lmul@product+2)^0,c
 14552  000C' 0E00               	movlw	0
 14553  000E' 6E00'              	movwf	(___lmul@product+3)^0,c
 14554  0010'                    l6307:
 14555  0010' A000'              	btfss	___lmul@multiplier^0,0,c
 14556  0012' EF00' F000'        	goto	u6621
 14557  0016' EF00' F000'        	goto	u6620
 14558  001A'                    u6621:
 14559  001A' EF00' F000'        	goto	l6311
 14560  001E'                    u6620:
 14561  001E' 5000'              	movf	___lmul@multiplicand^0,w,c
 14562  0020' 2600'              	addwf	___lmul@product^0,f,c
 14563  0022' 5000'              	movf	(___lmul@multiplicand+1)^0,w,c
 14564  0024' 2200'              	addwfc	(___lmul@product+1)^0,f,c
 14565  0026' 5000'              	movf	(___lmul@multiplicand+2)^0,w,c
 14566  0028' 2200'              	addwfc	(___lmul@product+2)^0,f,c
 14567  002A' 5000'              	movf	(___lmul@multiplicand+3)^0,w,c
 14568  002C' 2200'              	addwfc	(___lmul@product+3)^0,f,c
 14569  002E'                    l6311:
 14570  002E' 90D8               	bcf	status,0,c
 14571  0030' 3600'              	rlcf	___lmul@multiplicand^0,f,c
 14572  0032' 3600'              	rlcf	(___lmul@multiplicand+1)^0,f,c
 14573  0034' 3600'              	rlcf	(___lmul@multiplicand+2)^0,f,c
 14574  0036' 3600'              	rlcf	(___lmul@multiplicand+3)^0,f,c
 14575  0038' 90D8               	bcf	status,0,c
 14576  003A' 3200'              	rrcf	(___lmul@multiplier+3)^0,f,c
 14577  003C' 3200'              	rrcf	(___lmul@multiplier+2)^0,f,c
 14578  003E' 3200'              	rrcf	(___lmul@multiplier+1)^0,f,c
 14579  0040' 3200'              	rrcf	___lmul@multiplier^0,f,c
 14580  0042' 5000'              	movf	___lmul@multiplier^0,w,c
 14581  0044' 1000'              	iorwf	(___lmul@multiplier+1)^0,w,c
 14582  0046' 1000'              	iorwf	(___lmul@multiplier+2)^0,w,c
 14583  0048' 1000'              	iorwf	(___lmul@multiplier+3)^0,w,c
 14584  004A' A4D8               	btfss	status,2,c
 14585  004C' EF00' F000'        	goto	u6631
 14586  0050' EF00' F000'        	goto	u6630
 14587  0054'                    u6631:
 14588  0054' EF00' F000'        	goto	l6307
 14589  0058'                    u6630:
 14590  0058' C015' F00D'        	movff	___lmul@product,?___lmul
 14591  005C' C016' F00E'        	movff	___lmul@product+1,?___lmul+1
 14592  0060' C017' F00F'        	movff	___lmul@product+2,?___lmul+2
 14593  0064' C018' F010'        	movff	___lmul@product+3,?___lmul+3
 14594  0068' 0012               	return		;funcret
 14595  006A'                    __end_of___lmul:
 14596                           	opt callstack 0
 14597                           
 14598 ;; *************** function _strchr *****************
 14599 ;; Defined at:
 14600 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strchr.c"
 14601 ;; Parameters:    Size  Location     Type
 14602 ;;  s               2   13[COMRAM] PTR const unsigned char 
 14603 ;;		 -> gpsbuf(85), NULL(0), 
 14604 ;;  c               2   15[COMRAM] int 
 14605 ;; Auto vars:     Size  Location     Type
 14606 ;;		None
 14607 ;; Return value:  Size  Location     Type
 14608 ;;                  2   13[COMRAM] PTR unsigned char 
 14609 ;; Registers used:
 14610 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14611 ;; Tracked objects:
 14612 ;;		On entry : 0/0
 14613 ;;		On exit  : 0/0
 14614 ;;		Unchanged: 0/0
 14615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14616 ;;      Params:         4       0       0       0       0       0       0
 14617 ;;      Locals:         0       0       0       0       0       0       0
 14618 ;;      Temps:          1       0       0       0       0       0       0
 14619 ;;      Totals:         5       0       0       0       0       0       0
 14620 ;;Total ram usage:        5 bytes
 14621 ;; Hardware stack levels used:    1
 14622 ;; Hardware stack levels required when called:    2
 14623 ;; This function calls:
 14624 ;;		Nothing
 14625 ;; This function is called by:
 14626 ;;		_eval_gps
 14627 ;; This function uses a non-reentrant model
 14628 ;;
 14629                           
 14630                           	psect	text38
 14631  0000'                    __ptext38:
 14632                           	opt callstack 0
 14633  0000'                    _strchr:
 14634                           	opt callstack 25
 14635  0000'                    l2179:
 14636  0000' C00D' FFD9         	movff	strchr@s,fsr2l
 14637  0004' C00E' FFDA         	movff	strchr@s+1,fsr2h
 14638  0008' 5000'              	movf	strchr@c^0,w,c
 14639  000A' 18DE               	xorwf	postinc2,w,c
 14640  000C' A4D8               	btfss	status,2,c
 14641  000E' EF00' F000'        	goto	u7661
 14642  0012' EF00' F000'        	goto	u7660
 14643  0016'                    u7661:
 14644  0016' EF00' F000'        	goto	l6941
 14645  001A'                    u7660:
 14646  001A' C00D' F00D'        	movff	strchr@s,?_strchr
 14647  001E' C00E' F00E'        	movff	strchr@s+1,?_strchr+1
 14648  0022' EF00' F000'        	goto	l2181
 14649  0026'                    l6941:
 14650  0026' C00D' FFD9         	movff	strchr@s,fsr2l
 14651  002A' C00E' FFDA         	movff	strchr@s+1,fsr2h
 14652  002E' 4A00'              	infsnz	strchr@s^0,f,c
 14653  0030' 2A00'              	incf	(strchr@s+1)^0,f,c
 14654  0032' 50DF               	movf	indf2,w,c
 14655  0034' A4D8               	btfss	status,2,c
 14656  0036' EF00' F000'        	goto	u7671
 14657  003A' EF00' F000'        	goto	u7670
 14658  003E'                    u7671:
 14659  003E' EF00' F000'        	goto	l2179
 14660  0042'                    u7670:
 14661  0042' 0E00               	movlw	0
 14662  0044' 6E00'              	movwf	?_strchr^0,c
 14663  0046' 0E00               	movlw	0
 14664  0048' 6E00'              	movwf	(?_strchr+1)^0,c
 14665  004A'                    l2181:
 14666  004A' 0012               	return		;funcret
 14667  004C'                    __end_of_strchr:
 14668                           	opt callstack 0
 14669                           
 14670 ;; *************** function _memcpy *****************
 14671 ;; Defined at:
 14672 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memcpy.c"
 14673 ;; Parameters:    Size  Location     Type
 14674 ;;  d1              2   13[COMRAM] PTR void 
 14675 ;;		 -> eval_gps@elem(240), GPS_lon(15), GPS_lat(15), show_display@old_GPS_time(9), 
 14676 ;;		 -> show_display@old_GPS_lon(15), show_display@old_GPS_lat(15), 
 14677 ;;  s1              2   15[COMRAM] PTR const void 
 14678 ;;		 -> gpsbuf(85), eval_gps@elem(240), GPS_lon(15), GPS_lat(15), 
 14679 ;;		 -> GPS_time(9), NULL(0), 
 14680 ;;  n               2   17[COMRAM] unsigned int 
 14681 ;; Auto vars:     Size  Location     Type
 14682 ;;  s               2   21[COMRAM] PTR const unsigned char 
 14683 ;;		 -> gpsbuf(85), eval_gps@elem(240), GPS_lon(15), GPS_lat(15), 
 14684 ;;		 -> GPS_time(9), NULL(0), 
 14685 ;;  d               2   19[COMRAM] PTR unsigned char 
 14686 ;;		 -> eval_gps@elem(240), GPS_lon(15), GPS_lat(15), show_display@old_GPS_time(9), 
 14687 ;;		 -> show_display@old_GPS_lon(15), show_display@old_GPS_lat(15), 
 14688 ;;  tmp             1   23[COMRAM] unsigned char 
 14689 ;; Return value:  Size  Location     Type
 14690 ;;                  2   13[COMRAM] PTR void 
 14691 ;; Registers used:
 14692 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14693 ;; Tracked objects:
 14694 ;;		On entry : 0/0
 14695 ;;		On exit  : 0/0
 14696 ;;		Unchanged: 0/0
 14697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14698 ;;      Params:         6       0       0       0       0       0       0
 14699 ;;      Locals:         5       0       0       0       0       0       0
 14700 ;;      Temps:          0       0       0       0       0       0       0
 14701 ;;      Totals:        11       0       0       0       0       0       0
 14702 ;;Total ram usage:       11 bytes
 14703 ;; Hardware stack levels used:    1
 14704 ;; Hardware stack levels required when called:    2
 14705 ;; This function calls:
 14706 ;;		Nothing
 14707 ;; This function is called by:
 14708 ;;		_show_display
 14709 ;;		_eval_gps
 14710 ;; This function uses a non-reentrant model
 14711 ;;
 14712                           
 14713                           	psect	text39
 14714  0000'                    __ptext39:
 14715                           	opt callstack 0
 14716  0000'                    _memcpy:
 14717                           	opt callstack 27
 14718  0000' C00F' F015'        	movff	memcpy@s1,memcpy@s
 14719  0004' C010' F016'        	movff	memcpy@s1+1,memcpy@s+1
 14720  0008' C00D' F013'        	movff	memcpy@d1,memcpy@d
 14721  000C' C00E' F014'        	movff	memcpy@d1+1,memcpy@d+1
 14722  0010' EF00' F000'        	goto	l6929
 14723  0014'                    l6921:
 14724  0014' C015' FFD9         	movff	memcpy@s,fsr2l
 14725  0018' C016' FFDA         	movff	memcpy@s+1,fsr2h
 14726  001C' 50DF               	movf	indf2,w,c
 14727  001E' 6E00'              	movwf	memcpy@tmp^0,c
 14728  0020' 4A00'              	infsnz	memcpy@s^0,f,c
 14729  0022' 2A00'              	incf	(memcpy@s+1)^0,f,c
 14730  0024' C013' FFD9         	movff	memcpy@d,fsr2l
 14731  0028' C014' FFDA         	movff	memcpy@d+1,fsr2h
 14732  002C' C017' FFDF         	movff	memcpy@tmp,indf2
 14733  0030' 4A00'              	infsnz	memcpy@d^0,f,c
 14734  0032' 2A00'              	incf	(memcpy@d+1)^0,f,c
 14735  0034'                    l6929:
 14736  0034' 0600'              	decf	memcpy@n^0,f,c
 14737  0036' A0D8               	btfss	status,0,c
 14738  0038' 0600'              	decf	(memcpy@n+1)^0,f,c
 14739  003A' 2800'              	incf	memcpy@n^0,w,c
 14740  003C' E106               	bnz	u7651
 14741  003E' 2800'              	incf	(memcpy@n+1)^0,w,c
 14742  0040' A4D8               	btfss	status,2,c
 14743  0042' EF00' F000'        	goto	u7651
 14744  0046' EF00' F000'        	goto	u7650
 14745  004A'                    u7651:
 14746  004A' EF00' F000'        	goto	l6921
 14747  004E'                    u7650:
 14748  004E' 0012               	return		;funcret
 14749  0050'                    __end_of_memcpy:
 14750                           	opt callstack 0
 14751                           
 14752 ;; *************** function _lnb_configure *****************
 14753 ;; Defined at:
 14754 ;;		line 14 in file "src/driver/lnb.c"
 14755 ;; Parameters:    Size  Location     Type
 14756 ;;  i2c             2   47[BANK0 ] PTR struct i2c_dev__
 14757 ;;		 -> g_i2c_bus(8), 
 14758 ;;  addr            1   49[BANK0 ] unsigned char 
 14759 ;; Auto vars:     Size  Location     Type
 14760 ;;  res             2   52[BANK0 ] int 
 14761 ;; Return value:  Size  Location     Type
 14762 ;;                  1    wreg      void 
 14763 ;; Registers used:
 14764 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 14765 ;; Tracked objects:
 14766 ;;		On entry : 0/0
 14767 ;;		On exit  : 0/0
 14768 ;;		Unchanged: 0/0
 14769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14770 ;;      Params:         0       3       0       0       0       0       0
 14771 ;;      Locals:         0       2       0       0       0       0       0
 14772 ;;      Temps:          0       2       0       0       0       0       0
 14773 ;;      Totals:         0       7       0       0       0       0       0
 14774 ;;Total ram usage:        7 bytes
 14775 ;; Hardware stack levels used:    1
 14776 ;; Hardware stack levels required when called:   11
 14777 ;; This function calls:
 14778 ;;		_check_LNB_status
 14779 ;;		_i2c_probe_addr
 14780 ;;		_lnb_do_configure
 14781 ;;		_printf
 14782 ;; This function is called by:
 14783 ;;		_main
 14784 ;; This function uses a non-reentrant model
 14785 ;;
 14786                           
 14787                           	psect	text40
 14788  0000'                    __ptext40:
 14789                           	opt callstack 0
 14790  0000'                    _lnb_configure:
 14791                           	opt callstack 19
 14792  0000'                    
 14793                           ;src/driver/lnb.c: 14: void lnb_configure(i2c_dev i2c, u8 addr);src/driver/lnb.c: 15: {;
      +                          src/driver/lnb.c: 16:     int res = i2c_probe_addr(i2c, addr);
 14794  0000' C02F' F057'        	movff	lnb_configure@i2c,i2c_probe_addr@dev
 14795  0004' C030' F058'        	movff	lnb_configure@i2c+1,i2c_probe_addr@dev+1
 14796  0008' C031' F059'        	movff	lnb_configure@addr,i2c_probe_addr@addr
 14797  000C' EC00' F000'        	call	_i2c_probe_addr	;wreg free
 14798  0010' C057' F034'        	movff	?_i2c_probe_addr,lnb_configure@res
 14799  0014' C058' F035'        	movff	?_i2c_probe_addr+1,lnb_configure@res+1
 14800  0018'                    
 14801                           ;src/driver/lnb.c: 17:     if(res == 0)
 14802  0018' 0100               	movlb	0	; () banked
 14803  001A' 5100'              	movf	lnb_configure@res& (0+255),w,b
 14804  001C' 1100'              	iorwf	(lnb_configure@res+1)& (0+255),w,b
 14805  001E' A4D8               	btfss	status,2,c
 14806  0020' EF00' F000'        	goto	u13241
 14807  0024' EF00' F000'        	goto	u13240
 14808  0028'                    u13241:
 14809  0028' EF00' F000'        	goto	l10669
 14810  002C'                    u13240:
 14811  002C'                    
 14812                           ; BSR set to: 0
 14813                           ;src/driver/lnb.c: 18:  {;src/driver/lnb.c: 19:   printf("LNB:LNB Chip found\n");
 14814  002C' 0E00'              	movlw	low STR_4
 14815  002E' 6F00'              	movwf	printf@fmt& (0+255),b
 14816  0030' 0E00'              	movlw	high STR_4
 14817  0032' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
 14818  0034' EC00' F000'        	call	_printf	;wreg free
 14819  0038'                    
 14820                           ;src/driver/lnb.c: 20:   lnb_do_configure(i2c, addr);
 14821  0038' C02F' F02B'        	movff	lnb_configure@i2c,lnb_do_configure@i2c
 14822  003C' C030' F02C'        	movff	lnb_configure@i2c+1,lnb_do_configure@i2c+1
 14823  0040' C031' F02D'        	movff	lnb_configure@addr,lnb_do_configure@addr
 14824  0044' EC00' F000'        	call	_lnb_do_configure	;wreg free
 14825  0048'                    
 14826                           ;src/driver/lnb.c: 21:   _delaywdt((unsigned long)((250)*(8000000/4000.0)));
 14827  0048' 0E02               	movlw	2
 14828  004A' 0100               	movlb	0	; () banked
 14829  004C' 6F00'              	movwf	(??_lnb_configure+1)& (0+255),b
 14830  004E' 0EE8               	movlw	232
 14831  0050' 6F00'              	movwf	??_lnb_configure& (0+255),b
 14832  0052' 0E51               	movlw	81
 14833  0054'                    u14077:
 14834  0054' 0004               	clrwdt	
 14835  0056' 2EE8               	decfsz	wreg,f,c
 14836  0058' D7FD               	bra	u14077
 14837  005A' 2F00'              	decfsz	??_lnb_configure& (0+255),f,b
 14838  005C' D7FB               	bra	u14077
 14839  005E' 2F00'              	decfsz	(??_lnb_configure+1)& (0+255),f,b
 14840  0060' D7F9               	bra	u14077
 14841  0062' 0004               	clrwdt	
 14842  0064' F000               	nop	
 14843  0066' 0004               	clrwdt	
 14844  0068'                    
 14845                           ;src/driver/lnb.c: 22:   if(!check_LNB_status(i2c, addr))
 14846  0068' C02F' F02B'        	movff	lnb_configure@i2c,check_LNB_status@i2c
 14847  006C' C030' F02C'        	movff	lnb_configure@i2c+1,check_LNB_status@i2c+1
 14848  0070' C031' F02D'        	movff	lnb_configure@addr,check_LNB_status@addr
 14849  0074' EC00' F000'        	call	_check_LNB_status	;wreg free
 14850  0078' 0900               	iorlw	0
 14851  007A' A4D8               	btfss	status,2,c
 14852  007C' EF00' F000'        	goto	u13251
 14853  0080' EF00' F000'        	goto	u13250
 14854  0084'                    u13251:
 14855  0084' EF00' F000'        	goto	l263
 14856  0088'                    u13250:
 14857  0088'                    
 14858                           ;src/driver/lnb.c: 23:   {;src/driver/lnb.c: 25:    lnb_do_configure(i2c, addr);
 14859  0088' C02F' F02B'        	movff	lnb_configure@i2c,lnb_do_configure@i2c
 14860  008C' C030' F02C'        	movff	lnb_configure@i2c+1,lnb_do_configure@i2c+1
 14861  0090' C031' F02D'        	movff	lnb_configure@addr,lnb_do_configure@addr
 14862  0094' EC00' F000'        	call	_lnb_do_configure	;wreg free
 14863  0098' EF00' F000'        	goto	l263
 14864  009C'                    l10669:
 14865                           
 14866                           ; BSR set to: 0
 14867                           ;src/driver/lnb.c: 29:  {;src/driver/lnb.c: 30:         printf("LNB:LNB Chip not found!\
      +                          n");
 14868  009C' 0E00'              	movlw	low STR_5
 14869  009E' 6F00'              	movwf	printf@fmt& (0+255),b
 14870  00A0' 0E00'              	movlw	high STR_5
 14871  00A2' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
 14872  00A4' EC00' F000'        	call	_printf	;wreg free
 14873  00A8'                    l263:
 14874  00A8' 0012               	return		;funcret
 14875  00AA'                    __end_of_lnb_configure:
 14876                           	opt callstack 0
 14877                           
 14878 ;; *************** function _lnb_do_configure *****************
 14879 ;; Defined at:
 14880 ;;		line 36 in file "src/driver/lnb.c"
 14881 ;; Parameters:    Size  Location     Type
 14882 ;;  i2c             2   43[BANK0 ] PTR struct i2c_dev__
 14883 ;;		 -> g_i2c_bus(8), 
 14884 ;;  addr            1   45[BANK0 ] unsigned char 
 14885 ;; Auto vars:     Size  Location     Type
 14886 ;;  res             2   98[COMRAM] int 
 14887 ;;  value           1   97[COMRAM] unsigned char 
 14888 ;; Return value:  Size  Location     Type
 14889 ;;                  2   43[BANK0 ] int 
 14890 ;; Registers used:
 14891 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 14892 ;; Tracked objects:
 14893 ;;		On entry : 0/0
 14894 ;;		On exit  : 0/0
 14895 ;;		Unchanged: 0/0
 14896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14897 ;;      Params:         0       3       0       0       0       0       0
 14898 ;;      Locals:         3       0       0       0       0       0       0
 14899 ;;      Temps:          0       0       0       0       0       0       0
 14900 ;;      Totals:         3       3       0       0       0       0       0
 14901 ;;Total ram usage:        6 bytes
 14902 ;; Hardware stack levels used:    1
 14903 ;; Hardware stack levels required when called:   10
 14904 ;; This function calls:
 14905 ;;		_printf
 14906 ;;		_smbus8_read_byte
 14907 ;;		_smbus8_write_byte
 14908 ;; This function is called by:
 14909 ;;		_lnb_configure
 14910 ;; This function uses a non-reentrant model
 14911 ;;
 14912                           
 14913                           	psect	text41
 14914  0000'                    __ptext41:
 14915                           	opt callstack 0
 14916  0000'                    _lnb_do_configure:
 14917                           	opt callstack 19
 14918  0000'                    
 14919                           ;src/driver/lnb.c: 36: static int lnb_do_configure(i2c_dev i2c, u8 addr);src/driver/lnb.
      +                          c: 37: {;src/driver/lnb.c: 38:     u8 value;;src/driver/lnb.c: 39:     int res;;src/driv
      +                          er/lnb.c: 43:     res = smbus8_write_byte(i2c, addr, 0x02, 0x84);
 14920  0000' C02B' F057'        	movff	lnb_do_configure@i2c,smbus8_write_byte@dev
 14921  0004' C02C' F058'        	movff	lnb_do_configure@i2c+1,smbus8_write_byte@dev+1
 14922  0008' C02D' F059'        	movff	lnb_do_configure@addr,smbus8_write_byte@addr
 14923  000C' 0E02               	movlw	2
 14924  000E' 6E00'              	movwf	smbus8_write_byte@reg^0,c
 14925  0010' 0E84               	movlw	132
 14926  0012' 6E00'              	movwf	smbus8_write_byte@data^0,c
 14927  0014' EC00' F000'        	call	_smbus8_write_byte	;wreg free
 14928  0018' C057' F062'        	movff	?_smbus8_write_byte,lnb_do_configure@res
 14929  001C' C058' F063'        	movff	?_smbus8_write_byte+1,lnb_do_configure@res+1
 14930  0020'                    
 14931                           ;src/driver/lnb.c: 44:     if(res == 0)
 14932  0020' 5000'              	movf	lnb_do_configure@res^0,w,c
 14933  0022' 1000'              	iorwf	(lnb_do_configure@res+1)^0,w,c
 14934  0024' A4D8               	btfss	status,2,c
 14935  0026' EF00' F000'        	goto	u12641
 14936  002A' EF00' F000'        	goto	u12640
 14937  002E'                    u12641:
 14938  002E' EF00' F000'        	goto	l10265
 14939  0032'                    u12640:
 14940  0032'                    
 14941                           ;src/driver/lnb.c: 45:  {;src/driver/lnb.c: 46:   res = smbus8_read_byte(i2c, addr, 0x05
      +                          , &value);
 14942  0032' C02B' F057'        	movff	lnb_do_configure@i2c,smbus8_read_byte@dev
 14943  0036' C02C' F058'        	movff	lnb_do_configure@i2c+1,smbus8_read_byte@dev+1
 14944  003A' C02D' F059'        	movff	lnb_do_configure@addr,smbus8_read_byte@addr
 14945  003E' 0E05               	movlw	5
 14946  0040' 6E00'              	movwf	smbus8_read_byte@reg^0,c
 14947  0042' 0E00'              	movlw	low lnb_do_configure@value
 14948  0044' 6E00'              	movwf	smbus8_read_byte@data^0,c
 14949  0046' 0E00'              	movlw	high lnb_do_configure@value
 14950  0048' 6E00'              	movwf	(smbus8_read_byte@data+1)^0,c
 14951  004A' EC00' F000'        	call	_smbus8_read_byte	;wreg free
 14952  004E' C057' F062'        	movff	?_smbus8_read_byte,lnb_do_configure@res
 14953  0052' C058' F063'        	movff	?_smbus8_read_byte+1,lnb_do_configure@res+1
 14954  0056'                    
 14955                           ;src/driver/lnb.c: 47:   if(res == 0)
 14956  0056' 5000'              	movf	lnb_do_configure@res^0,w,c
 14957  0058' 1000'              	iorwf	(lnb_do_configure@res+1)^0,w,c
 14958  005A' A4D8               	btfss	status,2,c
 14959  005C' EF00' F000'        	goto	u12651
 14960  0060' EF00' F000'        	goto	u12650
 14961  0064'                    u12651:
 14962  0064' EF00' F000'        	goto	l10265
 14963  0068'                    u12650:
 14964  0068'                    
 14965                           ;src/driver/lnb.c: 48:   {;src/driver/lnb.c: 49:    value |= (1<<6) | (1<<3);
 14966  0068' 0E48               	movlw	72
 14967  006A' 1200'              	iorwf	lnb_do_configure@value^0,f,c
 14968  006C'                    
 14969                           ;src/driver/lnb.c: 50:    res = smbus8_write_byte(i2c, addr, 0x05, value);
 14970  006C' C02B' F057'        	movff	lnb_do_configure@i2c,smbus8_write_byte@dev
 14971  0070' C02C' F058'        	movff	lnb_do_configure@i2c+1,smbus8_write_byte@dev+1
 14972  0074' C02D' F059'        	movff	lnb_do_configure@addr,smbus8_write_byte@addr
 14973  0078' 0E05               	movlw	5
 14974  007A' 6E00'              	movwf	smbus8_write_byte@reg^0,c
 14975  007C' C061' F05B'        	movff	lnb_do_configure@value,smbus8_write_byte@data
 14976  0080' EC00' F000'        	call	_smbus8_write_byte	;wreg free
 14977  0084' C057' F062'        	movff	?_smbus8_write_byte,lnb_do_configure@res
 14978  0088' C058' F063'        	movff	?_smbus8_write_byte+1,lnb_do_configure@res+1
 14979  008C'                    
 14980                           ;src/driver/lnb.c: 51:    if(res == 0)
 14981  008C' 5000'              	movf	lnb_do_configure@res^0,w,c
 14982  008E' 1000'              	iorwf	(lnb_do_configure@res+1)^0,w,c
 14983  0090' A4D8               	btfss	status,2,c
 14984  0092' EF00' F000'        	goto	u12661
 14985  0096' EF00' F000'        	goto	u12660
 14986  009A'                    u12661:
 14987  009A' EF00' F000'        	goto	l10265
 14988  009E'                    u12660:
 14989  009E'                    
 14990                           ;src/driver/lnb.c: 52:    {;src/driver/lnb.c: 53:     res = smbus8_read_byte(i2c, addr, 
      +                          0x04, &value);
 14991  009E' C02B' F057'        	movff	lnb_do_configure@i2c,smbus8_read_byte@dev
 14992  00A2' C02C' F058'        	movff	lnb_do_configure@i2c+1,smbus8_read_byte@dev+1
 14993  00A6' C02D' F059'        	movff	lnb_do_configure@addr,smbus8_read_byte@addr
 14994  00AA' 0E04               	movlw	4
 14995  00AC' 6E00'              	movwf	smbus8_read_byte@reg^0,c
 14996  00AE' 0E00'              	movlw	low lnb_do_configure@value
 14997  00B0' 6E00'              	movwf	smbus8_read_byte@data^0,c
 14998  00B2' 0E00'              	movlw	high lnb_do_configure@value
 14999  00B4' 6E00'              	movwf	(smbus8_read_byte@data+1)^0,c
 15000  00B6' EC00' F000'        	call	_smbus8_read_byte	;wreg free
 15001  00BA' C057' F062'        	movff	?_smbus8_read_byte,lnb_do_configure@res
 15002  00BE' C058' F063'        	movff	?_smbus8_read_byte+1,lnb_do_configure@res+1
 15003  00C2'                    
 15004                           ;src/driver/lnb.c: 54:     if(res == 0)
 15005  00C2' 5000'              	movf	lnb_do_configure@res^0,w,c
 15006  00C4' 1000'              	iorwf	(lnb_do_configure@res+1)^0,w,c
 15007  00C6' A4D8               	btfss	status,2,c
 15008  00C8' EF00' F000'        	goto	u12671
 15009  00CC' EF00' F000'        	goto	u12670
 15010  00D0'                    u12671:
 15011  00D0' EF00' F000'        	goto	l267
 15012  00D4'                    u12670:
 15013  00D4'                    
 15014                           ;src/driver/lnb.c: 55:     {;src/driver/lnb.c: 56:      value |= (1<<2) | (1<<6);
 15015  00D4' 0E44               	movlw	68
 15016  00D6' 1200'              	iorwf	lnb_do_configure@value^0,f,c
 15017  00D8'                    
 15018                           ;src/driver/lnb.c: 57:      res = smbus8_write_byte(i2c, addr, 0x04, value);
 15019  00D8' C02B' F057'        	movff	lnb_do_configure@i2c,smbus8_write_byte@dev
 15020  00DC' C02C' F058'        	movff	lnb_do_configure@i2c+1,smbus8_write_byte@dev+1
 15021  00E0' C02D' F059'        	movff	lnb_do_configure@addr,smbus8_write_byte@addr
 15022  00E4' 0E04               	movlw	4
 15023  00E6' 6E00'              	movwf	smbus8_write_byte@reg^0,c
 15024  00E8' C061' F05B'        	movff	lnb_do_configure@value,smbus8_write_byte@data
 15025  00EC' EC00' F000'        	call	_smbus8_write_byte	;wreg free
 15026  00F0' C057' F062'        	movff	?_smbus8_write_byte,lnb_do_configure@res
 15027  00F4' C058' F063'        	movff	?_smbus8_write_byte+1,lnb_do_configure@res+1
 15028  00F8' EF00' F000'        	goto	l10265
 15029  00FC'                    l267:
 15030  00FC'                    l10265:
 15031                           
 15032                           ;src/driver/lnb.c: 63:  if(res == 0)
 15033  00FC' 5000'              	movf	lnb_do_configure@res^0,w,c
 15034  00FE' 1000'              	iorwf	(lnb_do_configure@res+1)^0,w,c
 15035  0100' A4D8               	btfss	status,2,c
 15036  0102' EF00' F000'        	goto	u12681
 15037  0106' EF00' F000'        	goto	u12680
 15038  010A'                    u12681:
 15039  010A' EF00' F000'        	goto	l10269
 15040  010E'                    u12680:
 15041  010E'                    
 15042                           ;src/driver/lnb.c: 64:   printf("LNB:LNB Chip configured\n");
 15043  010E' 0E00'              	movlw	low STR_6
 15044  0110' 0100               	movlb	0	; () banked
 15045  0112' 6F00'              	movwf	printf@fmt& (0+255),b
 15046  0114' 0E00'              	movlw	high STR_6
 15047  0116' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
 15048  0118' EC00' F000'        	call	_printf	;wreg free
 15049  011C' EF00' F000'        	goto	l272
 15050  0120'                    l10269:
 15051                           
 15052                           ;src/driver/lnb.c: 66:   printf("LNB:Failed to configure LNB Chip (%i)\n", res);
 15053  0120' 0E00'              	movlw	low STR_7
 15054  0122' 0100               	movlb	0	; () banked
 15055  0124' 6F00'              	movwf	printf@fmt& (0+255),b
 15056  0126' 0E00'              	movlw	high STR_7
 15057  0128' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
 15058  012A' C062' F01F'        	movff	lnb_do_configure@res,?_printf+2
 15059  012E' C063' F020'        	movff	lnb_do_configure@res+1,?_printf+3
 15060  0132' EC00' F000'        	call	_printf	;wreg free
 15061  0136'                    l272:
 15062  0136' 0012               	return		;funcret
 15063  0138'                    __end_of_lnb_do_configure:
 15064                           	opt callstack 0
 15065                           
 15066 ;; *************** function _check_LNB_status *****************
 15067 ;; Defined at:
 15068 ;;		line 74 in file "src/driver/lnb.c"
 15069 ;; Parameters:    Size  Location     Type
 15070 ;;  i2c             2   43[BANK0 ] PTR struct i2c_dev__
 15071 ;;		 -> g_i2c_bus(8), 
 15072 ;;  addr            1   45[BANK0 ] unsigned char 
 15073 ;; Auto vars:     Size  Location     Type
 15074 ;;  stat            1   46[BANK0 ] unsigned char 
 15075 ;; Return value:  Size  Location     Type
 15076 ;;                  1    wreg      unsigned char 
 15077 ;; Registers used:
 15078 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 15079 ;; Tracked objects:
 15080 ;;		On entry : 0/0
 15081 ;;		On exit  : 0/0
 15082 ;;		Unchanged: 0/0
 15083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15084 ;;      Params:         0       3       0       0       0       0       0
 15085 ;;      Locals:         0       1       0       0       0       0       0
 15086 ;;      Temps:          3       0       0       0       0       0       0
 15087 ;;      Totals:         3       4       0       0       0       0       0
 15088 ;;Total ram usage:        7 bytes
 15089 ;; Hardware stack levels used:    1
 15090 ;; Hardware stack levels required when called:   10
 15091 ;; This function calls:
 15092 ;;		_printf
 15093 ;;		_smbus8_read_byte
 15094 ;; This function is called by:
 15095 ;;		_lnb_configure
 15096 ;;		_main
 15097 ;; This function uses a non-reentrant model
 15098 ;;
 15099                           
 15100                           	psect	text42
 15101  0000'                    __ptext42:
 15102                           	opt callstack 0
 15103  0000'                    _check_LNB_status:
 15104                           	opt callstack 19
 15105  0000'                    
 15106                           ;src/driver/lnb.c: 74: u8 check_LNB_status(i2c_dev i2c, u8 addr);src/driver/lnb.c: 75: {
      +                          ;src/driver/lnb.c: 76:  u8 stat;;src/driver/lnb.c: 78:  stat = ((*((PIN_LNB_FAULT)->pPOR
      +                          T) & (PIN_LNB_FAULT)->mask) != 0);
 15107  0000' 0E00'              	movlw	low (_PIN_LNB_FAULT_DEF+4)
 15108  0002' 6EF6               	movwf	tblptrl,c
 15109  0004' 0E00'              	movlw	high (_PIN_LNB_FAULT_DEF+4)
 15110  0006' 6EF7               	movwf	tblptrh,c
 15111  0008'                    	if	0	;tblptru may be non-zero
 15112  0008'                    	endif
 15113  0008'                    	if	0	;tblptru may be non-zero
 15114  0008'                    	endif
 15115  0008' 0008               	tblrd		*
 15116  000A' CFF5 F061'         	movff	tablat,??_check_LNB_status
 15117  000E' 0E00'              	movlw	low _PIN_LNB_FAULT_DEF
 15118  0010' 6EF6               	movwf	tblptrl,c
 15119  0012'                    	if	1	;There is more than 1 active tblptr byte
 15120  0012' 0E00'              	movlw	high _PIN_LNB_FAULT_DEF
 15121  0014' 6EF7               	movwf	tblptrh,c
 15122  0016'                    	endif
 15123  0016'                    	if	0	;There are less than 3 active tblptr bytes
 15124  0016'                    	endif
 15125  0016' 0009               	tblrd		*+
 15126  0018' CFF5 F062'         	movff	tablat,??_check_LNB_status+1
 15127  001C' 0009               	tblrd		*+
 15128  001E' CFF5 F063'         	movff	tablat,??_check_LNB_status+2
 15129  0022' C062' FFD9         	movff	??_check_LNB_status+1,fsr2l
 15130  0026' C063' FFDA         	movff	??_check_LNB_status+2,fsr2h
 15131  002A' 50DF               	movf	indf2,w,c
 15132  002C' 1400'              	andwf	??_check_LNB_status^0,w,c
 15133  002E' 0900               	iorlw	0
 15134  0030' A4D8               	btfss	status,2,c
 15135  0032' EF00' F000'        	goto	u12691
 15136  0036' EF00' F000'        	goto	u12690
 15137  003A'                    u12691:
 15138  003A' 0E01               	movlw	1
 15139  003C' EF00' F000'        	goto	u12700
 15140  0040'                    u12690:
 15141  0040' 0E00               	movlw	0
 15142  0042'                    u12700:
 15143  0042' 0100               	movlb	0	; () banked
 15144  0044' 6F00'              	movwf	check_LNB_status@stat& (0+255),b
 15145  0046'                    
 15146                           ; BSR set to: 0
 15147                           ;src/driver/lnb.c: 79:  if(stat != LNB_laststat)
 15148  0046' 5100'              	movf	_LNB_laststat& (0+255),w,b
 15149  0048' 1900'              	xorwf	check_LNB_status@stat& (0+255),w,b
 15150  004A' B4D8               	btfsc	status,2,c
 15151  004C' EF00' F000'        	goto	u12711
 15152  0050' EF00' F000'        	goto	u12710
 15153  0054'                    u12711:
 15154  0054' EF00' F000'        	goto	l10291
 15155  0058'                    u12710:
 15156  0058'                    
 15157                           ; BSR set to: 0
 15158                           ;src/driver/lnb.c: 80:  {;src/driver/lnb.c: 81:   if(stat)
 15159  0058' 5100'              	movf	check_LNB_status@stat& (0+255),w,b
 15160  005A' B4D8               	btfsc	status,2,c
 15161  005C' EF00' F000'        	goto	u12721
 15162  0060' EF00' F000'        	goto	u12720
 15163  0064'                    u12721:
 15164  0064' EF00' F000'        	goto	l10283
 15165  0068'                    u12720:
 15166  0068'                    
 15167                           ; BSR set to: 0
 15168                           ;src/driver/lnb.c: 82:   {;src/driver/lnb.c: 83:    printf("LNB:OK\n");
 15169  0068' 0E00'              	movlw	low STR_8
 15170  006A' 6F00'              	movwf	printf@fmt& (0+255),b
 15171  006C' 0E00'              	movlw	high STR_8
 15172  006E' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
 15173  0070' EC00' F000'        	call	_printf	;wreg free
 15174  0074'                    
 15175                           ;src/driver/lnb.c: 84:    *((PIN_LED_LNB_GOOD)->pPORT) &= ~(PIN_LED_LNB_GOOD)->mask;
 15176  0074' 0E00'              	movlw	low (_PIN_LED_LNB_GOOD_DEF+4)
 15177  0076' 6EF6               	movwf	tblptrl,c
 15178  0078' 0E00'              	movlw	high (_PIN_LED_LNB_GOOD_DEF+4)
 15179  007A' 6EF7               	movwf	tblptrh,c
 15180  007C'                    	if	0	;tblptru may be non-zero
 15181  007C'                    	endif
 15182  007C'                    	if	0	;tblptru may be non-zero
 15183  007C'                    	endif
 15184  007C' 0008               	tblrd		*
 15185  007E' 50F5               	movf	tablat,w,c
 15186  0080' 0AFF               	xorlw	255
 15187  0082' 6E00'              	movwf	??_check_LNB_status^0,c
 15188  0084' 0E00'              	movlw	low _PIN_LED_LNB_GOOD_DEF
 15189  0086' 6EF6               	movwf	tblptrl,c
 15190  0088'                    	if	1	;There is more than 1 active tblptr byte
 15191  0088' 0E00'              	movlw	high _PIN_LED_LNB_GOOD_DEF
 15192  008A' 6EF7               	movwf	tblptrh,c
 15193  008C'                    	endif
 15194  008C'                    	if	0	;There are less than 3 active tblptr bytes
 15195  008C'                    	endif
 15196  008C' 0009               	tblrd		*+
 15197  008E' CFF5 F062'         	movff	tablat,??_check_LNB_status+1
 15198  0092' 0009               	tblrd		*+
 15199  0094' CFF5 F063'         	movff	tablat,??_check_LNB_status+2
 15200  0098' C062' FFD9         	movff	??_check_LNB_status+1,fsr2l
 15201  009C' C063' FFDA         	movff	??_check_LNB_status+2,fsr2h
 15202  00A0' 5000'              	movf	??_check_LNB_status^0,w,c
 15203  00A2' 16DF               	andwf	indf2,f,c
 15204                           
 15205                           ;src/driver/lnb.c: 85:   }
 15206  00A4' EF00' F000'        	goto	l10289
 15207  00A8'                    l10283:
 15208                           
 15209                           ; BSR set to: 0
 15210                           ;src/driver/lnb.c: 87:   {;src/driver/lnb.c: 89:    smbus8_read_byte(i2c, addr, 0, &LNB_
      +                          error);
 15211  00A8' C02B' F057'        	movff	check_LNB_status@i2c,smbus8_read_byte@dev
 15212  00AC' C02C' F058'        	movff	check_LNB_status@i2c+1,smbus8_read_byte@dev+1
 15213  00B0' C02D' F059'        	movff	check_LNB_status@addr,smbus8_read_byte@addr
 15214  00B4' 0E00               	movlw	0
 15215  00B6' 6E00'              	movwf	smbus8_read_byte@reg^0,c
 15216  00B8' 0E00'              	movlw	low _LNB_error
 15217  00BA' 6E00'              	movwf	smbus8_read_byte@data^0,c
 15218  00BC' 0E00'              	movlw	high _LNB_error
 15219  00BE' 6E00'              	movwf	(smbus8_read_byte@data+1)^0,c
 15220  00C0' EC00' F000'        	call	_smbus8_read_byte	;wreg free
 15221  00C4'                    
 15222                           ;src/driver/lnb.c: 90:    printf("LNB: error: %02X\n",LNB_error);
 15223  00C4' 0E00'              	movlw	low STR_9
 15224  00C6' 0100               	movlb	0	; () banked
 15225  00C8' 6F00'              	movwf	printf@fmt& (0+255),b
 15226  00CA' 0E00'              	movlw	high STR_9
 15227  00CC' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
 15228  00CE' C00D' F01F'        	movff	_LNB_error,?_printf+2
 15229  00D2' 6B00'              	clrf	(?_printf+3)& (0+255),b
 15230  00D4' EC00' F000'        	call	_printf	;wreg free
 15231  00D8'                    
 15232                           ;src/driver/lnb.c: 91:    *((PIN_LED_LNB_GOOD)->pPORT) |= (PIN_LED_LNB_GOOD)->mask;
 15233  00D8' 0E00'              	movlw	low (_PIN_LED_LNB_GOOD_DEF+4)
 15234  00DA' 6EF6               	movwf	tblptrl,c
 15235  00DC' 0E00'              	movlw	high (_PIN_LED_LNB_GOOD_DEF+4)
 15236  00DE' 6EF7               	movwf	tblptrh,c
 15237  00E0'                    	if	0	;tblptru may be non-zero
 15238  00E0'                    	endif
 15239  00E0'                    	if	0	;tblptru may be non-zero
 15240  00E0'                    	endif
 15241  00E0' 0008               	tblrd		*
 15242  00E2' CFF5 F061'         	movff	tablat,??_check_LNB_status
 15243  00E6' 0E00'              	movlw	low _PIN_LED_LNB_GOOD_DEF
 15244  00E8' 6EF6               	movwf	tblptrl,c
 15245  00EA'                    	if	1	;There is more than 1 active tblptr byte
 15246  00EA' 0E00'              	movlw	high _PIN_LED_LNB_GOOD_DEF
 15247  00EC' 6EF7               	movwf	tblptrh,c
 15248  00EE'                    	endif
 15249  00EE'                    	if	0	;There are less than 3 active tblptr bytes
 15250  00EE'                    	endif
 15251  00EE' 0009               	tblrd		*+
 15252  00F0' CFF5 F062'         	movff	tablat,??_check_LNB_status+1
 15253  00F4' 0009               	tblrd		*+
 15254  00F6' CFF5 F063'         	movff	tablat,??_check_LNB_status+2
 15255  00FA' C062' FFD9         	movff	??_check_LNB_status+1,fsr2l
 15256  00FE' C063' FFDA         	movff	??_check_LNB_status+2,fsr2h
 15257  0102' 5000'              	movf	??_check_LNB_status^0,w,c
 15258  0104' 12DF               	iorwf	indf2,f,c
 15259  0106'                    l10289:
 15260                           
 15261                           ;src/driver/lnb.c: 93:   LNB_laststat = stat;
 15262  0106' C02E' F00F'        	movff	check_LNB_status@stat,_LNB_laststat
 15263  010A'                    l10291:
 15264                           
 15265                           ;src/driver/lnb.c: 96:  return stat;
 15266  010A' 0100               	movlb	0	; () banked
 15267  010C' 5100'              	movf	check_LNB_status@stat& (0+255),w,b
 15268  010E'                    
 15269                           ; BSR set to: 0
 15270  010E' 0012               	return		;funcret
 15271  0110'                    __end_of_check_LNB_status:
 15272                           	opt callstack 0
 15273                           
 15274 ;; *************** function _lcd_init *****************
 15275 ;; Defined at:
 15276 ;;		line 68 in file "src/driver/lcd.c"
 15277 ;; Parameters:    Size  Location     Type
 15278 ;;  i2c             2   62[BANK0 ] PTR struct i2c_dev__
 15279 ;;		 -> g_i2c_bus(8), 
 15280 ;;  addr            1   64[BANK0 ] unsigned char 
 15281 ;; Auto vars:     Size  Location     Type
 15282 ;;  res             2   65[BANK0 ] int 
 15283 ;; Return value:  Size  Location     Type
 15284 ;;                  1    wreg      void 
 15285 ;; Registers used:
 15286 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 15287 ;; Tracked objects:
 15288 ;;		On entry : 0/0
 15289 ;;		On exit  : 0/0
 15290 ;;		Unchanged: 0/0
 15291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15292 ;;      Params:         0       3       0       0       0       0       0
 15293 ;;      Locals:         0       2       0       0       0       0       0
 15294 ;;      Temps:          0       0       0       0       0       0       0
 15295 ;;      Totals:         0       5       0       0       0       0       0
 15296 ;;Total ram usage:        5 bytes
 15297 ;; Hardware stack levels used:    1
 15298 ;; Hardware stack levels required when called:   13
 15299 ;; This function calls:
 15300 ;;		_i2c_probe_addr
 15301 ;;		_lcd_clear_screen
 15302 ;;		_print_string
 15303 ;;		_printf
 15304 ;;		_ssd1306_command
 15305 ;;		_ssd1306_commandbyte
 15306 ;; This function is called by:
 15307 ;;		_main
 15308 ;; This function uses a non-reentrant model
 15309 ;;
 15310                           
 15311                           	psect	text43
 15312  0000'                    __ptext43:
 15313                           	opt callstack 0
 15314  0000'                    _lcd_init:
 15315                           	opt callstack 17
 15316  0000'                    
 15317                           ;src/driver/lcd.c: 68: void lcd_init(i2c_dev i2c, u8 addr);src/driver/lcd.c: 69: {;src/d
      +                          river/lcd.c: 70:  int res;;src/driver/lcd.c: 79:  res = i2c_probe_addr(i2c, addr);
 15318  0000' C03E' F057'        	movff	lcd_init@i2c,i2c_probe_addr@dev
 15319  0004' C03F' F058'        	movff	lcd_init@i2c+1,i2c_probe_addr@dev+1
 15320  0008' C040' F059'        	movff	lcd_init@addr,i2c_probe_addr@addr
 15321  000C' EC00' F000'        	call	_i2c_probe_addr	;wreg free
 15322  0010' C057' F041'        	movff	?_i2c_probe_addr,lcd_init@res
 15323  0014' C058' F042'        	movff	?_i2c_probe_addr+1,lcd_init@res+1
 15324  0018'                    
 15325                           ;src/driver/lcd.c: 80:     if(res != 0)
 15326  0018' 0100               	movlb	0	; () banked
 15327  001A' 5100'              	movf	lcd_init@res& (0+255),w,b
 15328  001C' 1100'              	iorwf	(lcd_init@res+1)& (0+255),w,b
 15329  001E' B4D8               	btfsc	status,2,c
 15330  0020' EF00' F000'        	goto	u13411
 15331  0024' EF00' F000'        	goto	u13410
 15332  0028'                    u13411:
 15333  0028' EF00' F000'        	goto	l10815
 15334  002C'                    u13410:
 15335  002C'                    
 15336                           ; BSR set to: 0
 15337                           ;src/driver/lcd.c: 81:  {;src/driver/lcd.c: 82:         printf("LCD:OLED not found.\n");
 15338  002C' 0E00'              	movlw	low STR_36
 15339  002E' 6F00'              	movwf	printf@fmt& (0+255),b
 15340  0030' 0E00'              	movlw	high STR_36
 15341  0032' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
 15342  0034' EC00' F000'        	call	_printf	;wreg free
 15343  0038'                    
 15344                           ;src/driver/lcd.c: 83:   lcd_available = 0;
 15345  0038' 0E00               	movlw	0
 15346  003A' 6E00'              	movwf	_lcd_available^0,c
 15347  003C' EF00' F000'        	goto	l608
 15348  0040'                    l10815:
 15349                           
 15350                           ; BSR set to: 0
 15351                           ;src/driver/lcd.c: 87:  lcd_i2c = i2c;
 15352  0040' C03E' F002'        	movff	lcd_init@i2c,_lcd_i2c
 15353  0044' C03F' F003'        	movff	lcd_init@i2c+1,_lcd_i2c+1
 15354  0048'                    
 15355                           ; BSR set to: 0
 15356                           ;src/driver/lcd.c: 88:  lcd_addr = addr;
 15357  0048' C040' F009'        	movff	lcd_init@addr,_lcd_addr
 15358  004C'                    
 15359                           ; BSR set to: 0
 15360                           ;src/driver/lcd.c: 90:  printf("LCD:OLED found!\n");
 15361  004C' 0E00'              	movlw	low STR_37
 15362  004E' 6F00'              	movwf	printf@fmt& (0+255),b
 15363  0050' 0E00'              	movlw	high STR_37
 15364  0052' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
 15365  0054' EC00' F000'        	call	_printf	;wreg free
 15366  0058'                    
 15367                           ;src/driver/lcd.c: 91:  lcd_available = 1;
 15368  0058' 0E01               	movlw	1
 15369  005A' 6E00'              	movwf	_lcd_available^0,c
 15370  005C'                    
 15371                           ;src/driver/lcd.c: 94:  ssd1306_command(ssd1306_init_commands,sizeof(ssd1306_init_comman
      +                          ds));
 15372  005C' 0E00'              	movlw	low _ssd1306_init_commands
 15373  005E' 6E00'              	movwf	ssd1306_command@cmd^0,c
 15374  0060' 0E00'              	movlw	high _ssd1306_init_commands
 15375  0062' 6E00'              	movwf	(ssd1306_command@cmd+1)^0,c
 15376  0064' 0E00               	movlw	0
 15377  0066' 6E00'              	movwf	(ssd1306_command@len+1)^0,c
 15378  0068' 0E1B               	movlw	27
 15379  006A' 6E00'              	movwf	ssd1306_command@len^0,c
 15380  006C' EC00' F000'        	call	_ssd1306_command	;wreg free
 15381  0070'                    
 15382                           ;src/driver/lcd.c: 96:  ssd1306_commandbyte(0x40 | 0x0);
 15383  0070' 0E40               	movlw	64
 15384  0072' EC00' F000'        	call	_ssd1306_commandbyte
 15385  0076'                    
 15386                           ;src/driver/lcd.c: 98:  lcd_clear_screen(0);
 15387  0076' 0E00               	movlw	0
 15388  0078' EC00' F000'        	call	_lcd_clear_screen
 15389  007C'                    
 15390                           ;src/driver/lcd.c: 99:  if(ext10MHzReference == 0)
 15391  007C' 0100               	movlb	0	; () banked
 15392  007E' 5100'              	movf	_ext10MHzReference& (0+255),w,b
 15393  0080' A4D8               	btfss	status,2,c
 15394  0082' EF00' F000'        	goto	u13421
 15395  0086' EF00' F000'        	goto	u13420
 15396  008A'                    u13421:
 15397  008A' EF00' F000'        	goto	l10833
 15398  008E'                    u13420:
 15399  008E'                    
 15400                           ; BSR set to: 0
 15401                           ;src/driver/lcd.c: 100:   print_string("AMSAT-DL  intClk",0,0,0);
 15402  008E' 0E00'              	movlw	low STR_38
 15403  0090' 6F00'              	movwf	print_string@s& (0+255),b
 15404  0092' 0E00'              	movlw	high STR_38
 15405  0094' 6F00'              	movwf	(print_string@s+1)& (0+255),b
 15406  0096' 0E00               	movlw	0
 15407  0098' 6F00'              	movwf	print_string@x& (0+255),b
 15408  009A' 0E00               	movlw	0
 15409  009C' 6F00'              	movwf	print_string@y& (0+255),b
 15410  009E' 0E00               	movlw	0
 15411  00A0' 6F00'              	movwf	print_string@underline& (0+255),b
 15412  00A2' EC00' F000'        	call	_print_string	;wreg free
 15413  00A6' EF00' F000'        	goto	l608
 15414  00AA'                    l10833:
 15415                           
 15416                           ; BSR set to: 0
 15417                           ;src/driver/lcd.c: 102:   print_string("AMSAT-DL  ext10M",0,0,0);
 15418  00AA' 0E00'              	movlw	low STR_39
 15419  00AC' 6F00'              	movwf	print_string@s& (0+255),b
 15420  00AE' 0E00'              	movlw	high STR_39
 15421  00B0' 6F00'              	movwf	(print_string@s+1)& (0+255),b
 15422  00B2' 0E00               	movlw	0
 15423  00B4' 6F00'              	movwf	print_string@x& (0+255),b
 15424  00B6' 0E00               	movlw	0
 15425  00B8' 6F00'              	movwf	print_string@y& (0+255),b
 15426  00BA' 0E00               	movlw	0
 15427  00BC' 6F00'              	movwf	print_string@underline& (0+255),b
 15428  00BE' EC00' F000'        	call	_print_string	;wreg free
 15429  00C2'                    l608:
 15430  00C2' 0012               	return		;funcret
 15431  00C4'                    __end_of_lcd_init:
 15432                           	opt callstack 0
 15433                           
 15434 ;; *************** function _ssd1306_commandbyte *****************
 15435 ;; Defined at:
 15436 ;;		line 113 in file "src/driver/lcd.c"
 15437 ;; Parameters:    Size  Location     Type
 15438 ;;  cmd             1    wreg     unsigned char 
 15439 ;; Auto vars:     Size  Location     Type
 15440 ;;  cmd             1   92[COMRAM] unsigned char 
 15441 ;; Return value:  Size  Location     Type
 15442 ;;                  1    wreg      void 
 15443 ;; Registers used:
 15444 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15445 ;; Tracked objects:
 15446 ;;		On entry : 0/0
 15447 ;;		On exit  : 0/0
 15448 ;;		Unchanged: 0/0
 15449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15450 ;;      Params:         0       0       0       0       0       0       0
 15451 ;;      Locals:         1       0       0       0       0       0       0
 15452 ;;      Temps:          0       0       0       0       0       0       0
 15453 ;;      Totals:         1       0       0       0       0       0       0
 15454 ;;Total ram usage:        1 bytes
 15455 ;; Hardware stack levels used:    1
 15456 ;; Hardware stack levels required when called:    8
 15457 ;; This function calls:
 15458 ;;		_smbus8_write_byte
 15459 ;; This function is called by:
 15460 ;;		_lcd_init
 15461 ;; This function uses a non-reentrant model
 15462 ;;
 15463                           
 15464                           	psect	text44
 15465  0000'                    __ptext44:
 15466                           	opt callstack 0
 15467  0000'                    _ssd1306_commandbyte:
 15468                           	opt callstack 21
 15469                           
 15470                           ;incstack = 0
 15471                           ;ssd1306_commandbyte@cmd stored from wreg
 15472  0000' 6E00'              	movwf	ssd1306_commandbyte@cmd^0,c
 15473  0002'                    
 15474                           ;src/driver/lcd.c: 113: void ssd1306_commandbyte(u8 cmd);src/driver/lcd.c: 114: {;src/dr
      +                          iver/lcd.c: 115:  if(!lcd_available) return;
 15475  0002' 5000'              	movf	_lcd_available^0,w,c
 15476  0004' A4D8               	btfss	status,2,c
 15477  0006' EF00' F000'        	goto	u13071
 15478  000A' EF00' F000'        	goto	u13070
 15479  000E'                    u13071:
 15480  000E' EF00' F000'        	goto	l10439
 15481  0012'                    u13070:
 15482  0012' EF00' F000'        	goto	l618
 15483  0016'                    l10439:
 15484                           
 15485                           ;src/driver/lcd.c: 116:  smbus8_write_byte(lcd_i2c, lcd_addr, 0x00, cmd);
 15486  0016' C002' F057'        	movff	_lcd_i2c,smbus8_write_byte@dev
 15487  001A' C003' F058'        	movff	_lcd_i2c+1,smbus8_write_byte@dev+1
 15488  001E' C009' F059'        	movff	_lcd_addr,smbus8_write_byte@addr
 15489  0022' 0E00               	movlw	0
 15490  0024' 6E00'              	movwf	smbus8_write_byte@reg^0,c
 15491  0026' C05C' F05B'        	movff	ssd1306_commandbyte@cmd,smbus8_write_byte@data
 15492  002A' EC00' F000'        	call	_smbus8_write_byte	;wreg free
 15493  002E'                    l618:
 15494  002E' 0012               	return		;funcret
 15495  0030'                    __end_of_ssd1306_commandbyte:
 15496                           	opt callstack 0
 15497                           
 15498 ;; *************** function _smbus8_write_byte *****************
 15499 ;; Defined at:
 15500 ;;		line 65 in file "src/driver/base/i2c.c"
 15501 ;; Parameters:    Size  Location     Type
 15502 ;;  dev             2   87[COMRAM] PTR struct i2c_dev__
 15503 ;;		 -> g_i2c_bus(8), NULL(0), 
 15504 ;;  addr            1   89[COMRAM] unsigned char 
 15505 ;;  reg             1   90[COMRAM] unsigned char 
 15506 ;;  data            1   91[COMRAM] unsigned char 
 15507 ;; Auto vars:     Size  Location     Type
 15508 ;;  msg             7    2[BANK0 ] struct i2c_msg
 15509 ;;  tmp             2    0[BANK0 ] unsigned char [2]
 15510 ;; Return value:  Size  Location     Type
 15511 ;;                  2   87[COMRAM] int 
 15512 ;; Registers used:
 15513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15514 ;; Tracked objects:
 15515 ;;		On entry : 0/0
 15516 ;;		On exit  : 0/0
 15517 ;;		Unchanged: 0/0
 15518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15519 ;;      Params:         5       0       0       0       0       0       0
 15520 ;;      Locals:         0       9       0       0       0       0       0
 15521 ;;      Temps:          0       0       0       0       0       0       0
 15522 ;;      Totals:         5       9       0       0       0       0       0
 15523 ;;Total ram usage:       14 bytes
 15524 ;; Hardware stack levels used:    1
 15525 ;; Hardware stack levels required when called:    7
 15526 ;; This function calls:
 15527 ;;		_i2c_transfer
 15528 ;; This function is called by:
 15529 ;;		_lnb_do_configure
 15530 ;;		_si5328_init
 15531 ;;		_si5328_perform_ical
 15532 ;;		_write_regset
 15533 ;;		_ssd1306_commandbyte
 15534 ;; This function uses a non-reentrant model
 15535 ;;
 15536                           
 15537                           	psect	text45
 15538  0000'                    __ptext45:
 15539                           	opt callstack 0
 15540  0000'                    _smbus8_write_byte:
 15541                           	opt callstack 21
 15542  0000'                    
 15543                           ;src/driver/base/i2c.c: 65: int smbus8_write_byte(i2c_dev dev, u8 addr, u8 reg, u8 data)
      +                          ;src/driver/base/i2c.c: 66: {;src/driver/base/i2c.c: 67:  i2c_msg msg;;src/driver/base/i
      +                          2c.c: 68:  u8 tmp[2];;src/driver/base/i2c.c: 70:  msg.addr = addr;
 15544  0000' C059' F002'        	movff	smbus8_write_byte@addr,smbus8_write_byte@msg
 15545  0004' 0100               	movlb	0	; () banked
 15546  0006' 6B00'              	clrf	(smbus8_write_byte@msg+1)& (0+255),b
 15547  0008'                    
 15548                           ; BSR set to: 0
 15549                           ;src/driver/base/i2c.c: 71:  msg.flags = (1<<1) | (1<<2);
 15550  0008' 0E06               	movlw	6
 15551  000A' 6F00'              	movwf	(smbus8_write_byte@msg+2)& (0+255),b
 15552                           
 15553                           ;src/driver/base/i2c.c: 72:  msg.len = 2;
 15554  000C' 0E00               	movlw	0
 15555  000E' 6F00'              	movwf	(smbus8_write_byte@msg+4)& (0+255),b
 15556  0010' 0E02               	movlw	2
 15557  0012' 6F00'              	movwf	(smbus8_write_byte@msg+3)& (0+255),b
 15558  0014'                    
 15559                           ; BSR set to: 0
 15560                           ;src/driver/base/i2c.c: 73:  msg.data = tmp;
 15561  0014' 0E00'              	movlw	low smbus8_write_byte@tmp
 15562  0016' 6F00'              	movwf	(smbus8_write_byte@msg+5)& (0+255),b
 15563  0018' 0E00'              	movlw	high smbus8_write_byte@tmp
 15564  001A' 6F00'              	movwf	(smbus8_write_byte@msg+6)& (0+255),b
 15565  001C'                    
 15566                           ; BSR set to: 0
 15567                           ;src/driver/base/i2c.c: 75:  tmp[0] = reg;
 15568  001C' C05A' F000'        	movff	smbus8_write_byte@reg,smbus8_write_byte@tmp
 15569  0020'                    
 15570                           ; BSR set to: 0
 15571                           ;src/driver/base/i2c.c: 76:  tmp[1] = data;
 15572  0020' C05B' F001'        	movff	smbus8_write_byte@data,smbus8_write_byte@tmp+1
 15573  0024'                    
 15574                           ; BSR set to: 0
 15575                           ;src/driver/base/i2c.c: 78:  return i2c_transfer(dev, &msg, 1);
 15576  0024' C057' F051'        	movff	smbus8_write_byte@dev,i2c_transfer@dev
 15577  0028' C058' F052'        	movff	smbus8_write_byte@dev+1,i2c_transfer@dev+1
 15578  002C' 0E00'              	movlw	low smbus8_write_byte@msg
 15579  002E' 6E00'              	movwf	i2c_transfer@msg^0,c
 15580  0030' 0E00'              	movlw	high smbus8_write_byte@msg
 15581  0032' 6E00'              	movwf	(i2c_transfer@msg+1)^0,c
 15582  0034' 0E00               	movlw	0
 15583  0036' 6E00'              	movwf	(i2c_transfer@num+1)^0,c
 15584  0038' 0E01               	movlw	1
 15585  003A' 6E00'              	movwf	i2c_transfer@num^0,c
 15586  003C' EC00' F000'        	call	_i2c_transfer	;wreg free
 15587  0040' C051' F057'        	movff	?_i2c_transfer,?_smbus8_write_byte
 15588  0044' C052' F058'        	movff	?_i2c_transfer+1,?_smbus8_write_byte+1
 15589  0048' 0012               	return		;funcret
 15590  004A'                    __end_of_smbus8_write_byte:
 15591                           	opt callstack 0
 15592                           
 15593 ;; *************** function _print_string *****************
 15594 ;; Defined at:
 15595 ;;		line 190 in file "src/driver/lcd.c"
 15596 ;; Parameters:    Size  Location     Type
 15597 ;;  s               2   55[BANK0 ] PTR unsigned char 
 15598 ;;		 -> CalculateGridSquare@grid(7), STR_89(14), STR_88(7), STR_87(6), 
 15599 ;;		 -> STR_86(12), STR_85(17), itoa@buffer(12), STR_84(5), 
 15600 ;;		 -> STR_83(5), STR_82(7), STR_81(7), STR_80(8), 
 15601 ;;		 -> STR_79(5), GPS_lon(15), GPS_lat(15), STR_78(4), 
 15602 ;;		 -> STR_77(4), STR_76(6), STR_75(5), STR_74(4), 
 15603 ;;		 -> STR_73(4), STR_72(10), GPS_time(9), STR_71(17), 
 15604 ;;		 -> STR_70(17), STR_69(17), STR_68(7), STR_67(7), 
 15605 ;;		 -> STR_66(17), STR_65(17), STR_64(17), STR_63(7), 
 15606 ;;		 -> STR_62(7), STR_61(17), STR_60(17), STR_59(17), 
 15607 ;;		 -> STR_58(7), STR_57(7), STR_56(6), STR_55(6), 
 15608 ;;		 -> STR_54(17), STR_53(5), STR_52(5), STR_51(5), 
 15609 ;;		 -> STR_50(5), STR_49(3), STR_48(17), STR_47(17), 
 15610 ;;		 -> STR_46(17), STR_45(17), STR_44(17), STR_43(17), 
 15611 ;;		 -> STR_42(4), STR_41(17), STR_39(17), STR_38(17), 
 15612 ;;  x               1   57[BANK0 ] unsigned char 
 15613 ;;  y               1   58[BANK0 ] unsigned char 
 15614 ;;  underline       1   59[BANK0 ] unsigned char 
 15615 ;; Auto vars:     Size  Location     Type
 15616 ;;  i               1   99[COMRAM] unsigned char 
 15617 ;; Return value:  Size  Location     Type
 15618 ;;                  1    wreg      void 
 15619 ;; Registers used:
 15620 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 15621 ;; Tracked objects:
 15622 ;;		On entry : 0/0
 15623 ;;		On exit  : 0/0
 15624 ;;		Unchanged: 0/0
 15625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15626 ;;      Params:         0       5       0       0       0       0       0
 15627 ;;      Locals:         1       0       0       0       0       0       0
 15628 ;;      Temps:          0       2       0       0       0       0       0
 15629 ;;      Totals:         1       7       0       0       0       0       0
 15630 ;;Total ram usage:        8 bytes
 15631 ;; Hardware stack levels used:    1
 15632 ;; Hardware stack levels required when called:   12
 15633 ;; This function calls:
 15634 ;;		_print_char
 15635 ;;		_printf
 15636 ;;		_strlen
 15637 ;; This function is called by:
 15638 ;;		_lcd_init
 15639 ;;		_show_display
 15640 ;;		_lcd_settingsOK
 15641 ;; This function uses a non-reentrant model
 15642 ;;
 15643                           
 15644                           	psect	text46
 15645  0000'                    __ptext46:
 15646                           	opt callstack 0
 15647  0000'                    _print_string:
 15648                           	opt callstack 17
 15649  0000'                    
 15650                           ;src/driver/lcd.c: 190: void print_string(char *s, u8 x, u8 y, u8 underline);src/driver/
      +                          lcd.c: 191: {;src/driver/lcd.c: 192:  printf("OLD %02d %02d %s\n",x,y,s);
 15651  0000' 0E00'              	movlw	low STR_40
 15652  0002' 0100               	movlb	0	; () banked
 15653  0004' 6F00'              	movwf	printf@fmt& (0+255),b
 15654  0006' 0E00'              	movlw	high STR_40
 15655  0008' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
 15656  000A' C039' F01F'        	movff	print_string@x,?_printf+2
 15657  000E' 6B00'              	clrf	(?_printf+3)& (0+255),b
 15658  0010' C03A' F021'        	movff	print_string@y,?_printf+4
 15659  0014' 6B00'              	clrf	(?_printf+5)& (0+255),b
 15660  0016' C037' F023'        	movff	print_string@s,?_printf+6
 15661  001A' C038' F024'        	movff	print_string@s+1,?_printf+7
 15662  001E' EC00' F000'        	call	_printf	;wreg free
 15663  0022'                    
 15664                           ;src/driver/lcd.c: 193:  for(u8 i=0; i<strlen(s); i++)
 15665  0022' 0E00               	movlw	0
 15666  0024' 6E00'              	movwf	print_string@i^0,c
 15667  0026' EF00' F000'        	goto	l10463
 15668  002A'                    l10459:
 15669                           
 15670                           ; BSR set to: 0
 15671                           ;src/driver/lcd.c: 194:  {;src/driver/lcd.c: 195:   print_char(s[i],x+i*8,y,underline);
 15672  002A' 5000'              	movf	print_string@i^0,w,c
 15673  002C' 0D08               	mullw	8
 15674  002E' 50F3               	movf	243,w,c
 15675  0030' 2500'              	addwf	print_string@x& (0+255),w,b
 15676  0032' 6F00'              	movwf	print_char@xpos& (0+255),b
 15677  0034' C03A' F018'        	movff	print_string@y,print_char@ypos
 15678  0038' C03B' F019'        	movff	print_string@underline,print_char@underline
 15679  003C' 5000'              	movf	print_string@i^0,w,c
 15680  003E' 2500'              	addwf	print_string@s& (0+255),w,b
 15681  0040' 6F00'              	movwf	??_print_string& (0+255),b
 15682  0042' 0E00               	movlw	0
 15683  0044' 2100'              	addwfc	(print_string@s+1)& (0+255),w,b
 15684  0046' 6F00'              	movwf	(??_print_string+1)& (0+255),b
 15685  0048' C03C' FFF6         	movff	??_print_string,tblptrl
 15686  004C' C03D' FFF7         	movff	??_print_string+1,tblptrh
 15687  0050' 6AF8               	clrf	tblptru,c
 15688  0052' 0EFF'              	movlw	(high __ramtop+-1)
 15689  0054' 64F7               	cpfsgt	tblptrh,c
 15690  0056' D003               	bra	u13097
 15691  0058' 0008               	tblrd		*
 15692  005A' 50F5               	movf	tablat,w,c
 15693  005C' D005               	bra	u13090
 15694  005E'                    u13097:
 15695  005E' CFF6 FFE9          	movff	tblptrl,fsr0l
 15696  0062' CFF7 FFEA          	movff	tblptrh,fsr0h
 15697  0066' 50EF               	movf	indf0,w,c
 15698  0068'                    u13090:
 15699  0068' EC00' F000'        	call	_print_char
 15700  006C'                    
 15701                           ;src/driver/lcd.c: 196:  }
 15702  006C' 2A00'              	incf	print_string@i^0,f,c
 15703  006E'                    l10463:
 15704  006E' C037' F00D'        	movff	print_string@s,strlen@s
 15705  0072' C038' F00E'        	movff	print_string@s+1,strlen@s+1
 15706  0076' EC00' F000'        	call	_strlen	;wreg free
 15707  007A' 5000'              	movf	print_string@i^0,w,c
 15708  007C' 0100               	movlb	0	; () banked
 15709  007E' 6F00'              	movwf	??_print_string& (0+255),b
 15710  0080' 6B00'              	clrf	(??_print_string+1)& (0+255),b
 15711  0082' 5000'              	movf	?_strlen^0,w,c
 15712  0084' 5D00'              	subwf	??_print_string& (0+255),w,b
 15713  0086' 5000'              	movf	(?_strlen+1)^0,w,c
 15714  0088' 5900'              	subwfb	(??_print_string+1)& (0+255),w,b
 15715  008A' A0D8               	btfss	status,0,c
 15716  008C' EF00' F000'        	goto	u13101
 15717  0090' EF00' F000'        	goto	u13100
 15718  0094'                    u13101:
 15719  0094' EF00' F000'        	goto	l10459
 15720  0098'                    u13100:
 15721  0098'                    
 15722                           ; BSR set to: 0
 15723  0098' 0012               	return		;funcret
 15724  009A'                    __end_of_print_string:
 15725                           	opt callstack 0
 15726                           
 15727 ;; *************** function _print_char *****************
 15728 ;; Defined at:
 15729 ;;		line 168 in file "src/driver/lcd.c"
 15730 ;; Parameters:    Size  Location     Type
 15731 ;;  c               1    wreg     unsigned char 
 15732 ;;  xpos            1   23[BANK0 ] unsigned char 
 15733 ;;  ypos            1   24[BANK0 ] unsigned char 
 15734 ;;  underline       1   25[BANK0 ] unsigned char 
 15735 ;; Auto vars:     Size  Location     Type
 15736 ;;  c               1   50[BANK0 ] unsigned char 
 15737 ;;  b               1   51[BANK0 ] unsigned char 
 15738 ;;  x               1   53[BANK0 ] unsigned char 
 15739 ;;  y               1   54[BANK0 ] unsigned char 
 15740 ;;  map             8   42[BANK0 ] unsigned char [8]
 15741 ;;  idx             1   52[BANK0 ] unsigned char 
 15742 ;; Return value:  Size  Location     Type
 15743 ;;                  1    wreg      void 
 15744 ;; Registers used:
 15745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15746 ;; Tracked objects:
 15747 ;;		On entry : 0/0
 15748 ;;		On exit  : 0/0
 15749 ;;		Unchanged: 0/0
 15750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15751 ;;      Params:         0       3       0       0       0       0       0
 15752 ;;      Locals:         0      13       0       0       0       0       0
 15753 ;;      Temps:          0      16       0       0       0       0       0
 15754 ;;      Totals:         0      32       0       0       0       0       0
 15755 ;;Total ram usage:       32 bytes
 15756 ;; Hardware stack levels used:    1
 15757 ;; Hardware stack levels required when called:   11
 15758 ;; This function calls:
 15759 ;;		_lcd_draw8x8
 15760 ;;		_memset
 15761 ;; This function is called by:
 15762 ;;		_print_string
 15763 ;; This function uses a non-reentrant model
 15764 ;;
 15765                           
 15766                           	psect	text47
 15767  0000'                    __ptext47:
 15768                           	opt callstack 0
 15769  0000'                    _print_char:
 15770                           	opt callstack 17
 15771                           
 15772                           ; BSR set to: 0
 15773                           ;incstack = 0
 15774                           ;print_char@c stored from wreg
 15775  0000' 0100               	movlb	0	; () banked
 15776  0002' 6F00'              	movwf	print_char@c& (0+255),b
 15777  0004'                    
 15778                           ;src/driver/lcd.c: 168: void print_char(char c, u8 xpos, u8 ypos, u8 underline);src/driv
      +                          er/lcd.c: 169: {;src/driver/lcd.c: 170:  u8 idx = c - ' ';
 15779  0004' 0100               	movlb	0	; () banked
 15780  0006' 5100'              	movf	print_char@c& (0+255),w,b
 15781  0008' 0FE0               	addlw	224
 15782  000A' 6F00'              	movwf	print_char@idx& (0+255),b
 15783                           
 15784                           ;src/driver/lcd.c: 171:  if(idx >= 97) idx = 0;
 15785  000C' 0E60               	movlw	96
 15786  000E' 6500'              	cpfsgt	print_char@idx& (0+255),b
 15787  0010' EF00' F000'        	goto	u12351
 15788  0014' EF00' F000'        	goto	u12350
 15789  0018'                    u12351:
 15790  0018' EF00' F000'        	goto	l10053
 15791  001C'                    u12350:
 15792  001C'                    
 15793                           ; BSR set to: 0
 15794  001C' 0E00               	movlw	0
 15795  001E' 6F00'              	movwf	print_char@idx& (0+255),b
 15796  0020'                    l10053:
 15797                           
 15798                           ; BSR set to: 0
 15799                           ;src/driver/lcd.c: 174:  u8 map[8];;src/driver/lcd.c: 175:  memset(map,0,8);
 15800  0020' 0E00'              	movlw	low print_char@map
 15801  0022' 6E00'              	movwf	memset@dest^0,c
 15802  0024' 0E00'              	movlw	high print_char@map
 15803  0026' 6E00'              	movwf	(memset@dest+1)^0,c
 15804  0028' 0E00               	movlw	0
 15805  002A' 6E00'              	movwf	(memset@c+1)^0,c
 15806  002C' 0E00               	movlw	0
 15807  002E' 6E00'              	movwf	memset@c^0,c
 15808  0030' 0E00               	movlw	0
 15809  0032' 6E00'              	movwf	(memset@n+1)^0,c
 15810  0034' 0E08               	movlw	8
 15811  0036' 6E00'              	movwf	memset@n^0,c
 15812  0038' EC00' F000'        	call	_memset	;wreg free
 15813  003C'                    
 15814                           ;src/driver/lcd.c: 177:  for(u8 y=0; y<8; y++)
 15815  003C' 0E00               	movlw	0
 15816  003E' 0100               	movlb	0	; () banked
 15817  0040' 6F00'              	movwf	print_char@y& (0+255),b
 15818  0042'                    l10061:
 15819                           
 15820                           ; BSR set to: 0
 15821                           ;src/driver/lcd.c: 178:  {;src/driver/lcd.c: 179:   for(u8 x=0; x<8; x++)
 15822  0042' 0E00               	movlw	0
 15823  0044' 6F00'              	movwf	print_char@x& (0+255),b
 15824  0046'                    l10067:
 15825                           
 15826                           ; BSR set to: 0
 15827                           ;src/driver/lcd.c: 180:   {;src/driver/lcd.c: 181:    u8 b = (font8x8_basic[idx][y] & (1
      +                          <<x))?1:0;
 15828  0046' 5100'              	movf	print_char@y& (0+255),w,b
 15829  0048' 0D01               	mullw	1
 15830  004A' CFF3 F01A'         	movff	prodl,??_print_char
 15831  004E' CFF4 F01B'         	movff	prodh,??_print_char+1
 15832  0052' 5100'              	movf	print_char@idx& (0+255),w,b
 15833  0054' 0D08               	mullw	8
 15834  0056' CFF3 F01C'         	movff	prodl,??_print_char+2
 15835  005A' CFF4 F01D'         	movff	prodh,??_print_char+3
 15836  005E' 0E00'              	movlw	low _font8x8_basic
 15837  0060' 6F00'              	movwf	(??_print_char+4)& (0+255),b
 15838  0062' 0E00'              	movlw	high _font8x8_basic
 15839  0064' 6F00'              	movwf	(??_print_char+5)& (0+255),b
 15840  0066' 0E00'              	movlw	low (_font8x8_basic shr (0+16))
 15841  0068' 6F00'              	movwf	(??_print_char+6)& (0+255),b
 15842  006A' 5100'              	movf	(??_print_char+2)& (0+255),w,b
 15843  006C' 2500'              	addwf	(??_print_char+4)& (0+255),w,b
 15844  006E' 6F00'              	movwf	(??_print_char+7)& (0+255),b
 15845  0070' 5100'              	movf	(??_print_char+3)& (0+255),w,b
 15846  0072' 2100'              	addwfc	(??_print_char+5)& (0+255),w,b
 15847  0074' 6F00'              	movwf	(??_print_char+8)& (0+255),b
 15848  0076' 0E00               	movlw	0
 15849  0078' 2100'              	addwfc	(??_print_char+6)& (0+255),w,b
 15850  007A' 6F00'              	movwf	(??_print_char+9)& (0+255),b
 15851  007C' 5100'              	movf	??_print_char& (0+255),w,b
 15852  007E' 2500'              	addwf	(??_print_char+7)& (0+255),w,b
 15853  0080' 6F00'              	movwf	(??_print_char+10)& (0+255),b
 15854  0082' 5100'              	movf	(??_print_char+1)& (0+255),w,b
 15855  0084' 2100'              	addwfc	(??_print_char+8)& (0+255),w,b
 15856  0086' 6F00'              	movwf	(??_print_char+11)& (0+255),b
 15857  0088' 0E00               	movlw	0
 15858  008A' 2100'              	addwfc	(??_print_char+9)& (0+255),w,b
 15859  008C' 6F00'              	movwf	(??_print_char+12)& (0+255),b
 15860  008E' C024' FFF6         	movff	??_print_char+10,tblptrl
 15861  0092' C025' FFF7         	movff	??_print_char+11,tblptrh
 15862  0096' C026' FFF8         	movff	??_print_char+12,tblptru
 15863  009A' 0008               	tblrd		*
 15864  009C' CFF5 F027'         	movff	tablat,??_print_char+13
 15865  00A0' C035' F028'        	movff	print_char@x,??_print_char+14
 15866  00A4' 0E01               	movlw	1
 15867  00A6' 6F00'              	movwf	(??_print_char+15)& (0+255),b
 15868  00A8' 2B00'              	incf	(??_print_char+14)& (0+255),f,b
 15869  00AA' EF00' F000'        	goto	u12364
 15870  00AE'                    u12365:
 15871  00AE' 90D8               	bcf	status,0,c
 15872  00B0' 3700'              	rlcf	(??_print_char+15)& (0+255),f,b
 15873  00B2'                    u12364:
 15874  00B2' 2F00'              	decfsz	(??_print_char+14)& (0+255),f,b
 15875  00B4' EF00' F000'        	goto	u12365
 15876  00B8' 0100               	movlb	0	; () banked
 15877  00BA' 5100'              	movf	(??_print_char+15)& (0+255),w,b
 15878  00BC' 1500'              	andwf	(??_print_char+13)& (0+255),w,b
 15879  00BE' 0900               	iorlw	0
 15880  00C0' A4D8               	btfss	status,2,c
 15881  00C2' EF00' F000'        	goto	u12371
 15882  00C6' EF00' F000'        	goto	u12370
 15883  00CA'                    u12371:
 15884  00CA' 0E01               	movlw	1
 15885  00CC' EF00' F000'        	goto	u12380
 15886  00D0'                    u12370:
 15887  00D0' 0E00               	movlw	0
 15888  00D2'                    u12380:
 15889  00D2' 6F00'              	movwf	print_char@b& (0+255),b
 15890  00D4'                    
 15891                           ; BSR set to: 0
 15892                           ;src/driver/lcd.c: 182:    if(y==7 && underline) b=1;
 15893  00D4' 0E07               	movlw	7
 15894  00D6' 1900'              	xorwf	print_char@y& (0+255),w,b
 15895  00D8' A4D8               	btfss	status,2,c
 15896  00DA' EF00' F000'        	goto	u12391
 15897  00DE' EF00' F000'        	goto	u12390
 15898  00E2'                    u12391:
 15899  00E2' EF00' F000'        	goto	l10075
 15900  00E6'                    u12390:
 15901  00E6'                    
 15902                           ; BSR set to: 0
 15903  00E6' 5100'              	movf	print_char@underline& (0+255),w,b
 15904  00E8' B4D8               	btfsc	status,2,c
 15905  00EA' EF00' F000'        	goto	u12401
 15906  00EE' EF00' F000'        	goto	u12400
 15907  00F2'                    u12401:
 15908  00F2' EF00' F000'        	goto	l10075
 15909  00F6'                    u12400:
 15910  00F6'                    
 15911                           ; BSR set to: 0
 15912  00F6' 0E01               	movlw	1
 15913  00F8' 6F00'              	movwf	print_char@b& (0+255),b
 15914  00FA'                    l10075:
 15915                           
 15916                           ; BSR set to: 0
 15917                           ;src/driver/lcd.c: 183:    map[x] |= b<<y;
 15918  00FA' C036' F01A'        	movff	print_char@y,??_print_char
 15919  00FE' C033' F01B'        	movff	print_char@b,??_print_char+1
 15920  0102' 2B00'              	incf	??_print_char& (0+255),f,b
 15921  0104' EF00' F000'        	goto	u12414
 15922  0108'                    u12415:
 15923  0108' 90D8               	bcf	status,0,c
 15924  010A' 3700'              	rlcf	(??_print_char+1)& (0+255),f,b
 15925  010C'                    u12414:
 15926  010C' 2F00'              	decfsz	??_print_char& (0+255),f,b
 15927  010E' EF00' F000'        	goto	u12415
 15928  0112' 0E00'              	movlw	low print_char@map
 15929  0114' 0100               	movlb	0	; () banked
 15930  0116' 2500'              	addwf	print_char@x& (0+255),w,b
 15931  0118' 6ED9               	movwf	fsr2l,c
 15932  011A' 6ADA               	clrf	fsr2h,c
 15933  011C' 0E00'              	movlw	high print_char@map
 15934  011E' 22DA               	addwfc	fsr2h,f,c
 15935  0120' 5100'              	movf	(??_print_char+1)& (0+255),w,b
 15936  0122' 12DF               	iorwf	indf2,f,c
 15937  0124'                    
 15938                           ; BSR set to: 0
 15939                           ;src/driver/lcd.c: 184:   }
 15940  0124' 2B00'              	incf	print_char@x& (0+255),f,b
 15941  0126'                    
 15942                           ; BSR set to: 0
 15943  0126' 0E07               	movlw	7
 15944  0128' 6500'              	cpfsgt	print_char@x& (0+255),b
 15945  012A' EF00' F000'        	goto	u12421
 15946  012E' EF00' F000'        	goto	u12420
 15947  0132'                    u12421:
 15948  0132' EF00' F000'        	goto	l10067
 15949  0136'                    u12420:
 15950  0136'                    
 15951                           ; BSR set to: 0
 15952                           ;src/driver/lcd.c: 185:  }
 15953  0136' 2B00'              	incf	print_char@y& (0+255),f,b
 15954  0138'                    
 15955                           ; BSR set to: 0
 15956  0138' 0E07               	movlw	7
 15957  013A' 6500'              	cpfsgt	print_char@y& (0+255),b
 15958  013C' EF00' F000'        	goto	u12431
 15959  0140' EF00' F000'        	goto	u12430
 15960  0144'                    u12431:
 15961  0144' EF00' F000'        	goto	l10061
 15962  0148'                    u12430:
 15963  0148'                    
 15964                           ; BSR set to: 0
 15965                           ;src/driver/lcd.c: 187:  lcd_draw8x8(map,xpos,ypos);
 15966  0148' 0E00'              	movlw	low print_char@map
 15967  014A' 6F00'              	movwf	lcd_draw8x8@buffer& (0+255),b
 15968  014C' 0E00'              	movlw	high print_char@map
 15969  014E' 6F00'              	movwf	(lcd_draw8x8@buffer+1)& (0+255),b
 15970  0150' C017' F015'        	movff	print_char@xpos,lcd_draw8x8@x
 15971  0154' C018' F016'        	movff	print_char@ypos,lcd_draw8x8@y
 15972  0158' EC00' F000'        	call	_lcd_draw8x8	;wreg free
 15973  015C' 0012               	return		;funcret
 15974  015E'                    __end_of_print_char:
 15975                           	opt callstack 0
 15976                           
 15977 ;; *************** function _lcd_draw8x8 *****************
 15978 ;; Defined at:
 15979 ;;		line 159 in file "src/driver/lcd.c"
 15980 ;; Parameters:    Size  Location     Type
 15981 ;;  buffer          2   19[BANK0 ] PTR unsigned char 
 15982 ;;		 -> print_char@map(8), 
 15983 ;;  x               1   21[BANK0 ] unsigned char 
 15984 ;;  y               1   22[BANK0 ] unsigned char 
 15985 ;; Auto vars:     Size  Location     Type
 15986 ;;		None
 15987 ;; Return value:  Size  Location     Type
 15988 ;;                  1    wreg      void 
 15989 ;; Registers used:
 15990 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15991 ;; Tracked objects:
 15992 ;;		On entry : 0/0
 15993 ;;		On exit  : 0/0
 15994 ;;		Unchanged: 0/0
 15995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15996 ;;      Params:         0       4       0       0       0       0       0
 15997 ;;      Locals:         0       0       0       0       0       0       0
 15998 ;;      Temps:          0       0       0       0       0       0       0
 15999 ;;      Totals:         0       4       0       0       0       0       0
 16000 ;;Total ram usage:        4 bytes
 16001 ;; Hardware stack levels used:    1
 16002 ;; Hardware stack levels required when called:   10
 16003 ;; This function calls:
 16004 ;;		_ssd1306_data
 16005 ;;		_ssd1306_setpos
 16006 ;; This function is called by:
 16007 ;;		_print_char
 16008 ;; This function uses a non-reentrant model
 16009 ;;
 16010                           
 16011                           	psect	text48
 16012  0000'                    __ptext48:
 16013                           	opt callstack 0
 16014  0000'                    _lcd_draw8x8:
 16015                           	opt callstack 17
 16016  0000'                    
 16017                           ;src/driver/lcd.c: 159: void lcd_draw8x8(u8 *buffer, u8 x, u8 y);src/driver/lcd.c: 160: 
      +                          {;src/driver/lcd.c: 162:  ssd1306_setpos(x,y);
 16018  0000' C016' F00E'        	movff	lcd_draw8x8@y,ssd1306_setpos@y
 16019  0004' 0100               	movlb	0	; () banked
 16020  0006' 5100'              	movf	lcd_draw8x8@x& (0+255),w,b
 16021  0008' EC00' F000'        	call	_ssd1306_setpos
 16022                           
 16023                           ;src/driver/lcd.c: 164:  ssd1306_data(buffer, 8);
 16024  000C' C013' F05F'        	movff	lcd_draw8x8@buffer,ssd1306_data@data
 16025  0010' C014' F060'        	movff	lcd_draw8x8@buffer+1,ssd1306_data@data+1
 16026  0014' 0E00               	movlw	0
 16027  0016' 6E00'              	movwf	(ssd1306_data@len+1)^0,c
 16028  0018' 0E08               	movlw	8
 16029  001A' 6E00'              	movwf	ssd1306_data@len^0,c
 16030  001C' EC00' F000'        	call	_ssd1306_data	;wreg free
 16031  0020' 0012               	return		;funcret
 16032  0022'                    __end_of_lcd_draw8x8:
 16033                           	opt callstack 0
 16034                           
 16035 ;; *************** function _lcd_clear_screen *****************
 16036 ;; Defined at:
 16037 ;;		line 144 in file "src/driver/lcd.c"
 16038 ;; Parameters:    Size  Location     Type
 16039 ;;  ystart          1    wreg     unsigned char 
 16040 ;; Auto vars:     Size  Location     Type
 16041 ;;  ystart          1  128[BANK1 ] unsigned char 
 16042 ;;  row             1  129[BANK1 ] unsigned char 
 16043 ;;  buf           128    0[BANK1 ] unsigned char [128]
 16044 ;; Return value:  Size  Location     Type
 16045 ;;                  1    wreg      void 
 16046 ;; Registers used:
 16047 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 16048 ;; Tracked objects:
 16049 ;;		On entry : 0/0
 16050 ;;		On exit  : 0/0
 16051 ;;		Unchanged: 0/0
 16052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16053 ;;      Params:         0       0       0       0       0       0       0
 16054 ;;      Locals:         0       0     130       0       0       0       0
 16055 ;;      Temps:          0       0       0       0       0       0       0
 16056 ;;      Totals:         0       0     130       0       0       0       0
 16057 ;;Total ram usage:      130 bytes
 16058 ;; Hardware stack levels used:    1
 16059 ;; Hardware stack levels required when called:   10
 16060 ;; This function calls:
 16061 ;;		_memset
 16062 ;;		_ssd1306_data
 16063 ;;		_ssd1306_setpos
 16064 ;; This function is called by:
 16065 ;;		_lcd_init
 16066 ;;		_show_display
 16067 ;;		_lcd_settingsOK
 16068 ;; This function uses a non-reentrant model
 16069 ;;
 16070                           
 16071                           	psect	text49
 16072  0000'                    __ptext49:
 16073                           	opt callstack 0
 16074  0000'                    _lcd_clear_screen:
 16075                           	opt callstack 19
 16076                           
 16077                           ;incstack = 0
 16078                           ;lcd_clear_screen@ystart stored from wreg
 16079  0000' 0101               	movlb	1	; () banked
 16080  0002' 6F00'              	movwf	lcd_clear_screen@ystart& (0+255),b
 16081  0004'                    
 16082                           ;src/driver/lcd.c: 144: void lcd_clear_screen(u8 ystart);src/driver/lcd.c: 145: {;src/dr
      +                          iver/lcd.c: 146:  u8 buf[128];;src/driver/lcd.c: 147:  memset(buf,0,128);
 16083  0004' 0E00'              	movlw	low lcd_clear_screen@buf
 16084  0006' 6E00'              	movwf	memset@dest^0,c
 16085  0008' 0E00'              	movlw	high lcd_clear_screen@buf
 16086  000A' 6E00'              	movwf	(memset@dest+1)^0,c
 16087  000C' 0E00               	movlw	0
 16088  000E' 6E00'              	movwf	(memset@c+1)^0,c
 16089  0010' 0E00               	movlw	0
 16090  0012' 6E00'              	movwf	memset@c^0,c
 16091  0014' 0E00               	movlw	0
 16092  0016' 6E00'              	movwf	(memset@n+1)^0,c
 16093  0018' 0E80               	movlw	128
 16094  001A' 6E00'              	movwf	memset@n^0,c
 16095  001C' EC00' F000'        	call	_memset	;wreg free
 16096  0020'                    
 16097                           ;src/driver/lcd.c: 149:     for (u8 row=ystart; row<(64 / 8); row++)
 16098  0020' C080' F081'        	movff	lcd_clear_screen@ystart,lcd_clear_screen@row
 16099  0024'                    l10445:
 16100  0024' 0E07               	movlw	7
 16101  0026' 0101               	movlb	1	; () banked
 16102  0028' 6500'              	cpfsgt	lcd_clear_screen@row& (0+255),b
 16103  002A' EF00' F000'        	goto	u13081
 16104  002E' EF00' F000'        	goto	u13080
 16105  0032'                    u13081:
 16106  0032' EF00' F000'        	goto	l10449
 16107  0036'                    u13080:
 16108  0036' EF00' F000'        	goto	l632
 16109  003A'                    l10449:
 16110                           
 16111                           ; BSR set to: 1
 16112                           ;src/driver/lcd.c: 150:  {;src/driver/lcd.c: 151:   ssd1306_setpos(0,row);
 16113  003A' C081' F00E'        	movff	lcd_clear_screen@row,ssd1306_setpos@y
 16114  003E' 0E00               	movlw	0
 16115  0040' EC00' F000'        	call	_ssd1306_setpos
 16116                           
 16117                           ;src/driver/lcd.c: 153:   ssd1306_data(buf,128);
 16118  0044' 0E00'              	movlw	low lcd_clear_screen@buf
 16119  0046' 6E00'              	movwf	ssd1306_data@data^0,c
 16120  0048' 0E00'              	movlw	high lcd_clear_screen@buf
 16121  004A' 6E00'              	movwf	(ssd1306_data@data+1)^0,c
 16122  004C' 0E00               	movlw	0
 16123  004E' 6E00'              	movwf	(ssd1306_data@len+1)^0,c
 16124  0050' 0E80               	movlw	128
 16125  0052' 6E00'              	movwf	ssd1306_data@len^0,c
 16126  0054' EC00' F000'        	call	_ssd1306_data	;wreg free
 16127  0058'                    
 16128                           ;src/driver/lcd.c: 154:     }
 16129  0058' 0101               	movlb	1	; () banked
 16130  005A' 2B00'              	incf	lcd_clear_screen@row& (0+255),f,b
 16131  005C' EF00' F000'        	goto	l10445
 16132  0060'                    l632:
 16133                           
 16134                           ; BSR set to: 1
 16135  0060' 0012               	return		;funcret
 16136  0062'                    __end_of_lcd_clear_screen:
 16137                           	opt callstack 0
 16138                           
 16139 ;; *************** function _ssd1306_setpos *****************
 16140 ;; Defined at:
 16141 ;;		line 132 in file "src/driver/lcd.c"
 16142 ;; Parameters:    Size  Location     Type
 16143 ;;  x               1    wreg     unsigned char 
 16144 ;;  y               1   14[BANK0 ] unsigned char 
 16145 ;; Auto vars:     Size  Location     Type
 16146 ;;  x               1   18[BANK0 ] unsigned char 
 16147 ;;  data            3   15[BANK0 ] unsigned char [3]
 16148 ;; Return value:  Size  Location     Type
 16149 ;;                  1    wreg      void 
 16150 ;; Registers used:
 16151 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 16152 ;; Tracked objects:
 16153 ;;		On entry : 0/0
 16154 ;;		On exit  : 0/0
 16155 ;;		Unchanged: 0/0
 16156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16157 ;;      Params:         0       1       0       0       0       0       0
 16158 ;;      Locals:         0       4       0       0       0       0       0
 16159 ;;      Temps:          0       0       0       0       0       0       0
 16160 ;;      Totals:         0       5       0       0       0       0       0
 16161 ;;Total ram usage:        5 bytes
 16162 ;; Hardware stack levels used:    1
 16163 ;; Hardware stack levels required when called:    9
 16164 ;; This function calls:
 16165 ;;		_ssd1306_command
 16166 ;; This function is called by:
 16167 ;;		_lcd_clear_screen
 16168 ;;		_lcd_draw8x8
 16169 ;; This function uses a non-reentrant model
 16170 ;;
 16171                           
 16172                           	psect	text50
 16173  0000'                    __ptext50:
 16174                           	opt callstack 0
 16175  0000'                    _ssd1306_setpos:
 16176                           	opt callstack 17
 16177                           
 16178                           ; BSR set to: 1
 16179                           ;incstack = 0
 16180                           ;ssd1306_setpos@x stored from wreg
 16181  0000' 0100               	movlb	0	; () banked
 16182  0002' 6F00'              	movwf	ssd1306_setpos@x& (0+255),b
 16183  0004'                    
 16184                           ;src/driver/lcd.c: 132: void ssd1306_setpos(u8 x, u8 y);src/driver/lcd.c: 133: {;src/dri
      +                          ver/lcd.c: 134:  u8 data[3] = {0xb0, 2, 0x10};
 16185  0004' C00B' F00F'        	movff	ssd1306_setpos@F3137,ssd1306_setpos@data
 16186  0008' C00C' F010'        	movff	ssd1306_setpos@F3137+1,ssd1306_setpos@data+1
 16187  000C' C00D' F011'        	movff	ssd1306_setpos@F3137+2,ssd1306_setpos@data+2
 16188  0010'                    
 16189                           ;src/driver/lcd.c: 136:  data[0] += y;
 16190  0010' 0100               	movlb	0	; () banked
 16191  0012' 5100'              	movf	ssd1306_setpos@y& (0+255),w,b
 16192  0014' 2700'              	addwf	ssd1306_setpos@data& (0+255),f,b
 16193                           
 16194                           ;src/driver/lcd.c: 137:  x += 2;
 16195  0016' 0E02               	movlw	2
 16196  0018' 2700'              	addwf	ssd1306_setpos@x& (0+255),f,b
 16197                           
 16198                           ;src/driver/lcd.c: 138:  data[1] = x & 0x0f;
 16199  001A' 5100'              	movf	ssd1306_setpos@x& (0+255),w,b
 16200  001C' 0B0F               	andlw	15
 16201  001E' 6F00'              	movwf	(ssd1306_setpos@data+1)& (0+255),b
 16202                           
 16203                           ;src/driver/lcd.c: 139:  data[2] = 0x10 | (x>>4);
 16204  0020' 3900'              	swapf	ssd1306_setpos@x& (0+255),w,b
 16205  0022' 0B0F               	andlw	15
 16206  0024' 0910               	iorlw	16
 16207  0026' 6F00'              	movwf	(ssd1306_setpos@data+2)& (0+255),b
 16208  0028'                    
 16209                           ; BSR set to: 0
 16210                           ;src/driver/lcd.c: 141:  ssd1306_command(data,3);
 16211  0028' 0E00'              	movlw	low ssd1306_setpos@data
 16212  002A' 6E00'              	movwf	ssd1306_command@cmd^0,c
 16213  002C' 0E00'              	movlw	high ssd1306_setpos@data
 16214  002E' 6E00'              	movwf	(ssd1306_command@cmd+1)^0,c
 16215  0030' 0E00               	movlw	0
 16216  0032' 6E00'              	movwf	(ssd1306_command@len+1)^0,c
 16217  0034' 0E03               	movlw	3
 16218  0036' 6E00'              	movwf	ssd1306_command@len^0,c
 16219  0038' EC00' F000'        	call	_ssd1306_command	;wreg free
 16220  003C' 0012               	return		;funcret
 16221  003E'                    __end_of_ssd1306_setpos:
 16222                           	opt callstack 0
 16223                           
 16224 ;; *************** function _ssd1306_command *****************
 16225 ;; Defined at:
 16226 ;;		line 106 in file "src/driver/lcd.c"
 16227 ;; Parameters:    Size  Location     Type
 16228 ;;  cmd             2   95[COMRAM] PTR unsigned char 
 16229 ;;		 -> ssd1306_setpos@data(3), ssd1306_init_commands(27), 
 16230 ;;  len             2   97[COMRAM] int 
 16231 ;; Auto vars:     Size  Location     Type
 16232 ;;		None
 16233 ;; Return value:  Size  Location     Type
 16234 ;;                  1    wreg      void 
 16235 ;; Registers used:
 16236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 16237 ;; Tracked objects:
 16238 ;;		On entry : 0/0
 16239 ;;		On exit  : 0/0
 16240 ;;		Unchanged: 0/0
 16241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16242 ;;      Params:         4       0       0       0       0       0       0
 16243 ;;      Locals:         0       0       0       0       0       0       0
 16244 ;;      Temps:          0       0       0       0       0       0       0
 16245 ;;      Totals:         4       0       0       0       0       0       0
 16246 ;;Total ram usage:        4 bytes
 16247 ;; Hardware stack levels used:    1
 16248 ;; Hardware stack levels required when called:    8
 16249 ;; This function calls:
 16250 ;;		_smbus8_write_data
 16251 ;; This function is called by:
 16252 ;;		_lcd_init
 16253 ;;		_ssd1306_setpos
 16254 ;; This function uses a non-reentrant model
 16255 ;;
 16256                           
 16257                           	psect	text51
 16258  0000'                    __ptext51:
 16259                           	opt callstack 0
 16260  0000'                    _ssd1306_command:
 16261                           	opt callstack 17
 16262  0000'                    
 16263                           ;src/driver/lcd.c: 106: void ssd1306_command(u8 *cmd, int len);src/driver/lcd.c: 107: {;
      +                          src/driver/lcd.c: 108:  if(!lcd_available) return;
 16264  0000' 5000'              	movf	_lcd_available^0,w,c
 16265  0002' A4D8               	btfss	status,2,c
 16266  0004' EF00' F000'        	goto	u11631
 16267  0008' EF00' F000'        	goto	u11630
 16268  000C'                    u11631:
 16269  000C' EF00' F000'        	goto	l613
 16270  0010'                    u11630:
 16271  0010' EF00' F000'        	goto	l614
 16272  0014'                    l613:
 16273  0014' 0004               	clrwdt		;# 
 16274  0016'                    
 16275                           ;src/driver/lcd.c: 110:  smbus8_write_data(lcd_i2c, lcd_addr, 0x00, cmd, len);
 16276  0016' C002' F057'        	movff	_lcd_i2c,smbus8_write_data@dev
 16277  001A' C003' F058'        	movff	_lcd_i2c+1,smbus8_write_data@dev+1
 16278  001E' C009' F059'        	movff	_lcd_addr,smbus8_write_data@addr
 16279  0022' 0E00               	movlw	0
 16280  0024' 6E00'              	movwf	smbus8_write_data@reg^0,c
 16281  0026' C05F' F05B'        	movff	ssd1306_command@cmd,smbus8_write_data@data
 16282  002A' C060' F05C'        	movff	ssd1306_command@cmd+1,smbus8_write_data@data+1
 16283  002E' C061' F05D'        	movff	ssd1306_command@len,smbus8_write_data@len
 16284  0032' C062' F05E'        	movff	ssd1306_command@len+1,smbus8_write_data@len+1
 16285  0036' EC00' F000'        	call	_smbus8_write_data	;wreg free
 16286  003A'                    l614:
 16287  003A' 0012               	return		;funcret
 16288  003C'                    __end_of_ssd1306_command:
 16289                           	opt callstack 0
 16290                           
 16291 ;; *************** function _ssd1306_data *****************
 16292 ;; Defined at:
 16293 ;;		line 119 in file "src/driver/lcd.c"
 16294 ;; Parameters:    Size  Location     Type
 16295 ;;  data            2   95[COMRAM] PTR unsigned char 
 16296 ;;		 -> print_char@map(8), lcd_clear_screen@buf(128), 
 16297 ;;  len             2   97[COMRAM] int 
 16298 ;; Auto vars:     Size  Location     Type
 16299 ;;		None
 16300 ;; Return value:  Size  Location     Type
 16301 ;;                  1    wreg      void 
 16302 ;; Registers used:
 16303 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 16304 ;; Tracked objects:
 16305 ;;		On entry : 0/0
 16306 ;;		On exit  : 0/0
 16307 ;;		Unchanged: 0/0
 16308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16309 ;;      Params:         4       0       0       0       0       0       0
 16310 ;;      Locals:         0       0       0       0       0       0       0
 16311 ;;      Temps:          0       0       0       0       0       0       0
 16312 ;;      Totals:         4       0       0       0       0       0       0
 16313 ;;Total ram usage:        4 bytes
 16314 ;; Hardware stack levels used:    1
 16315 ;; Hardware stack levels required when called:    8
 16316 ;; This function calls:
 16317 ;;		_smbus8_write_data
 16318 ;; This function is called by:
 16319 ;;		_lcd_clear_screen
 16320 ;;		_lcd_draw8x8
 16321 ;; This function uses a non-reentrant model
 16322 ;;
 16323                           
 16324                           	psect	text52
 16325  0000'                    __ptext52:
 16326                           	opt callstack 0
 16327  0000'                    _ssd1306_data:
 16328                           	opt callstack 18
 16329  0000'                    
 16330                           ;src/driver/lcd.c: 119: void ssd1306_data(u8 *data, int len);src/driver/lcd.c: 120: {;sr
      +                          c/driver/lcd.c: 121:  if(!lcd_available) return;
 16331  0000' 5000'              	movf	_lcd_available^0,w,c
 16332  0002' A4D8               	btfss	status,2,c
 16333  0004' EF00' F000'        	goto	u11651
 16334  0008' EF00' F000'        	goto	u11650
 16335  000C'                    u11651:
 16336  000C' EF00' F000'        	goto	l621
 16337  0010'                    u11650:
 16338  0010' EF00' F000'        	goto	l622
 16339  0014'                    l621:
 16340  0014' 0004               	clrwdt		;# 
 16341  0016'                    
 16342                           ;src/driver/lcd.c: 123:  smbus8_write_data(lcd_i2c, lcd_addr, 0x40, data, len);
 16343  0016' C002' F057'        	movff	_lcd_i2c,smbus8_write_data@dev
 16344  001A' C003' F058'        	movff	_lcd_i2c+1,smbus8_write_data@dev+1
 16345  001E' C009' F059'        	movff	_lcd_addr,smbus8_write_data@addr
 16346  0022' 0E40               	movlw	64
 16347  0024' 6E00'              	movwf	smbus8_write_data@reg^0,c
 16348  0026' C05F' F05B'        	movff	ssd1306_data@data,smbus8_write_data@data
 16349  002A' C060' F05C'        	movff	ssd1306_data@data+1,smbus8_write_data@data+1
 16350  002E' C061' F05D'        	movff	ssd1306_data@len,smbus8_write_data@len
 16351  0032' C062' F05E'        	movff	ssd1306_data@len+1,smbus8_write_data@len+1
 16352  0036' EC00' F000'        	call	_smbus8_write_data	;wreg free
 16353  003A'                    l622:
 16354  003A' 0012               	return		;funcret
 16355  003C'                    __end_of_ssd1306_data:
 16356                           	opt callstack 0
 16357                           
 16358 ;; *************** function _smbus8_write_data *****************
 16359 ;; Defined at:
 16360 ;;		line 81 in file "src/driver/base/i2c.c"
 16361 ;; Parameters:    Size  Location     Type
 16362 ;;  dev             2   87[COMRAM] PTR struct i2c_dev__
 16363 ;;		 -> g_i2c_bus(8), NULL(0), 
 16364 ;;  addr            1   89[COMRAM] unsigned char 
 16365 ;;  reg             1   90[COMRAM] unsigned char 
 16366 ;;  data            2   91[COMRAM] PTR const unsigned char 
 16367 ;;		 -> print_char@map(8), lcd_clear_screen@buf(128), ssd1306_setpos@data(3), ssd1306_init_commands(27), 
 16368 ;;  len             2   93[COMRAM] int 
 16369 ;; Auto vars:     Size  Location     Type
 16370 ;;  msg            14    0[BANK0 ] struct i2c_msg[2]
 16371 ;; Return value:  Size  Location     Type
 16372 ;;                  2   87[COMRAM] int 
 16373 ;; Registers used:
 16374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 16375 ;; Tracked objects:
 16376 ;;		On entry : 0/0
 16377 ;;		On exit  : 0/0
 16378 ;;		Unchanged: 0/0
 16379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16380 ;;      Params:         8       0       0       0       0       0       0
 16381 ;;      Locals:         0      14       0       0       0       0       0
 16382 ;;      Temps:          0       0       0       0       0       0       0
 16383 ;;      Totals:         8      14       0       0       0       0       0
 16384 ;;Total ram usage:       22 bytes
 16385 ;; Hardware stack levels used:    1
 16386 ;; Hardware stack levels required when called:    7
 16387 ;; This function calls:
 16388 ;;		_i2c_transfer
 16389 ;; This function is called by:
 16390 ;;		_ssd1306_command
 16391 ;;		_ssd1306_data
 16392 ;; This function uses a non-reentrant model
 16393 ;;
 16394                           
 16395                           	psect	text53
 16396  0000'                    __ptext53:
 16397                           	opt callstack 0
 16398  0000'                    _smbus8_write_data:
 16399                           	opt callstack 17
 16400  0000'                    
 16401                           ;src/driver/base/i2c.c: 81: int smbus8_write_data(i2c_dev dev, u8 addr, u8 reg, const u8
      +                          * data, int len);src/driver/base/i2c.c: 82: {;src/driver/base/i2c.c: 83:  i2c_msg msg[2]
      +                          ;;src/driver/base/i2c.c: 85:  msg[0].addr = addr;
 16402  0000' C059' F000'        	movff	smbus8_write_data@addr,smbus8_write_data@msg
 16403  0004' 0100               	movlb	0	; () banked
 16404  0006' 6B00'              	clrf	(smbus8_write_data@msg+1)& (0+255),b
 16405  0008'                    
 16406                           ; BSR set to: 0
 16407                           ;src/driver/base/i2c.c: 86:  msg[0].flags = (1<<1);
 16408  0008' 0E02               	movlw	2
 16409  000A' 6F00'              	movwf	(smbus8_write_data@msg+2)& (0+255),b
 16410                           
 16411                           ;src/driver/base/i2c.c: 87:  msg[0].len = 1;
 16412  000C' 0E00               	movlw	0
 16413  000E' 6F00'              	movwf	(smbus8_write_data@msg+4)& (0+255),b
 16414  0010' 0E01               	movlw	1
 16415  0012' 6F00'              	movwf	(smbus8_write_data@msg+3)& (0+255),b
 16416  0014'                    
 16417                           ; BSR set to: 0
 16418                           ;src/driver/base/i2c.c: 88:  msg[0].data = &reg;
 16419  0014' 0E00'              	movlw	low smbus8_write_data@reg
 16420  0016' 6F00'              	movwf	(smbus8_write_data@msg+5)& (0+255),b
 16421  0018' 0E00'              	movlw	high smbus8_write_data@reg
 16422  001A' 6F00'              	movwf	(smbus8_write_data@msg+6)& (0+255),b
 16423  001C'                    
 16424                           ; BSR set to: 0
 16425                           ;src/driver/base/i2c.c: 90:  msg[1].addr = addr;
 16426  001C' C059' F007'        	movff	smbus8_write_data@addr,smbus8_write_data@msg+7
 16427  0020' 6B00'              	clrf	(smbus8_write_data@msg+8)& (0+255),b
 16428  0022'                    
 16429                           ; BSR set to: 0
 16430                           ;src/driver/base/i2c.c: 91:  msg[1].flags = (1<<2);
 16431  0022' 0E04               	movlw	4
 16432  0024' 6F00'              	movwf	(smbus8_write_data@msg+9)& (0+255),b
 16433  0026'                    
 16434                           ; BSR set to: 0
 16435                           ;src/driver/base/i2c.c: 92:  msg[1].len = len;
 16436  0026' C05D' F00A'        	movff	smbus8_write_data@len,smbus8_write_data@msg+10
 16437  002A' C05E' F00B'        	movff	smbus8_write_data@len+1,smbus8_write_data@msg+11
 16438                           
 16439                           ;src/driver/base/i2c.c: 93:  msg[1].data = (u8*)data;
 16440  002E' C05B' F00C'        	movff	smbus8_write_data@data,smbus8_write_data@msg+12
 16441  0032' C05C' F00D'        	movff	smbus8_write_data@data+1,smbus8_write_data@msg+13
 16442  0036'                    
 16443                           ; BSR set to: 0
 16444                           ;src/driver/base/i2c.c: 95:  return i2c_transfer(dev, msg, 2);;	Return value of _smbus8_
      +                          write_data is never used
 16445  0036' C057' F051'        	movff	smbus8_write_data@dev,i2c_transfer@dev
 16446  003A' C058' F052'        	movff	smbus8_write_data@dev+1,i2c_transfer@dev+1
 16447  003E' 0E00'              	movlw	low smbus8_write_data@msg
 16448  0040' 6E00'              	movwf	i2c_transfer@msg^0,c
 16449  0042' 0E00'              	movlw	high smbus8_write_data@msg
 16450  0044' 6E00'              	movwf	(i2c_transfer@msg+1)^0,c
 16451  0046' 0E00               	movlw	0
 16452  0048' 6E00'              	movwf	(i2c_transfer@num+1)^0,c
 16453  004A' 0E02               	movlw	2
 16454  004C' 6E00'              	movwf	i2c_transfer@num^0,c
 16455  004E' EC00' F000'        	call	_i2c_transfer	;wreg free
 16456  0052' 0012               	return		;funcret
 16457  0054'                    __end_of_smbus8_write_data:
 16458                           	opt callstack 0
 16459                           
 16460 ;; *************** function _i2c_probe_addr *****************
 16461 ;; Defined at:
 16462 ;;		line 21 in file "src/driver/base/i2c.c"
 16463 ;; Parameters:    Size  Location     Type
 16464 ;;  dev             2   87[COMRAM] PTR struct i2c_dev__
 16465 ;;		 -> g_i2c_bus(8), 
 16466 ;;  addr            1   89[COMRAM] unsigned char 
 16467 ;; Auto vars:     Size  Location     Type
 16468 ;;  msg             7   90[COMRAM] struct i2c_msg
 16469 ;; Return value:  Size  Location     Type
 16470 ;;                  2   87[COMRAM] int 
 16471 ;; Registers used:
 16472 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 16473 ;; Tracked objects:
 16474 ;;		On entry : 0/0
 16475 ;;		On exit  : 0/0
 16476 ;;		Unchanged: 0/0
 16477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16478 ;;      Params:         3       0       0       0       0       0       0
 16479 ;;      Locals:         7       0       0       0       0       0       0
 16480 ;;      Temps:          0       0       0       0       0       0       0
 16481 ;;      Totals:        10       0       0       0       0       0       0
 16482 ;;Total ram usage:       10 bytes
 16483 ;; Hardware stack levels used:    1
 16484 ;; Hardware stack levels required when called:    7
 16485 ;; This function calls:
 16486 ;;		_i2c_transfer
 16487 ;; This function is called by:
 16488 ;;		_lnb_configure
 16489 ;;		_si5328_init
 16490 ;;		_lcd_init
 16491 ;; This function uses a non-reentrant model
 16492 ;;
 16493                           
 16494                           	psect	text54
 16495  0000'                    __ptext54:
 16496                           	opt callstack 0
 16497  0000'                    _i2c_probe_addr:
 16498                           	opt callstack 22
 16499  0000'                    
 16500                           ;src/driver/base/i2c.c: 21: int i2c_probe_addr(i2c_dev dev, u8 addr);src/driver/base/i2c
      +                          .c: 22: {;src/driver/base/i2c.c: 23:  i2c_msg msg;;src/driver/base/i2c.c: 24:  msg.addr 
      +                          = addr;
 16501  0000' C059' F05A'        	movff	i2c_probe_addr@addr,i2c_probe_addr@msg
 16502  0004' 6A00'              	clrf	(i2c_probe_addr@msg+1)^0,c
 16503  0006'                    
 16504                           ;src/driver/base/i2c.c: 25:  msg.flags = (1<<1) | (1<<2);
 16505  0006' 0E06               	movlw	6
 16506  0008' 6E00'              	movwf	(i2c_probe_addr@msg+2)^0,c
 16507                           
 16508                           ;src/driver/base/i2c.c: 26:  msg.len = 0;
 16509  000A' 0E00               	movlw	0
 16510  000C' 6E00'              	movwf	(i2c_probe_addr@msg+4)^0,c
 16511  000E' 0E00               	movlw	0
 16512  0010' 6E00'              	movwf	(i2c_probe_addr@msg+3)^0,c
 16513  0012'                    
 16514                           ;src/driver/base/i2c.c: 27:  msg.data = ((void*)0);
 16515  0012' 0E00               	movlw	0
 16516  0014' 6E00'              	movwf	(i2c_probe_addr@msg+5)^0,c
 16517  0016' 0E00               	movlw	0
 16518  0018' 6E00'              	movwf	(i2c_probe_addr@msg+6)^0,c
 16519  001A'                    
 16520                           ;src/driver/base/i2c.c: 28:  return i2c_transfer(dev, &msg, 1);
 16521  001A' C057' F051'        	movff	i2c_probe_addr@dev,i2c_transfer@dev
 16522  001E' C058' F052'        	movff	i2c_probe_addr@dev+1,i2c_transfer@dev+1
 16523  0022' 0E00'              	movlw	low i2c_probe_addr@msg
 16524  0024' 6E00'              	movwf	i2c_transfer@msg^0,c
 16525  0026' 0E00'              	movlw	high i2c_probe_addr@msg
 16526  0028' 6E00'              	movwf	(i2c_transfer@msg+1)^0,c
 16527  002A' 0E00               	movlw	0
 16528  002C' 6E00'              	movwf	(i2c_transfer@num+1)^0,c
 16529  002E' 0E01               	movlw	1
 16530  0030' 6E00'              	movwf	i2c_transfer@num^0,c
 16531  0032' EC00' F000'        	call	_i2c_transfer	;wreg free
 16532  0036' C051' F057'        	movff	?_i2c_transfer,?_i2c_probe_addr
 16533  003A' C052' F058'        	movff	?_i2c_transfer+1,?_i2c_probe_addr+1
 16534  003E' 0012               	return		;funcret
 16535  0040'                    __end_of_i2c_probe_addr:
 16536                           	opt callstack 0
 16537                           
 16538 ;; *************** function _init_gps *****************
 16539 ;; Defined at:
 16540 ;;		line 312 in file "src/gps.c"
 16541 ;; Parameters:    Size  Location     Type
 16542 ;;		None
 16543 ;; Auto vars:     Size  Location     Type
 16544 ;;		None
 16545 ;; Return value:  Size  Location     Type
 16546 ;;                  1    wreg      void 
 16547 ;; Registers used:
 16548 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16549 ;; Tracked objects:
 16550 ;;		On entry : 0/0
 16551 ;;		On exit  : 0/0
 16552 ;;		Unchanged: 0/0
 16553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16554 ;;      Params:         0       0       0       0       0       0       0
 16555 ;;      Locals:         0       0       0       0       0       0       0
 16556 ;;      Temps:          0       0       0       0       0       0       0
 16557 ;;      Totals:         0       0       0       0       0       0       0
 16558 ;;Total ram usage:        0 bytes
 16559 ;; Hardware stack levels used:    1
 16560 ;; Hardware stack levels required when called:   11
 16561 ;; This function calls:
 16562 ;;		_send_UBX_string
 16563 ;; This function is called by:
 16564 ;;		_main
 16565 ;; This function uses a non-reentrant model
 16566 ;;
 16567                           
 16568                           	psect	text55
 16569  0000'                    __ptext55:
 16570                           	opt callstack 0
 16571  0000'                    _init_gps:
 16572                           	opt callstack 19
 16573  0000'                    
 16574                           ;src/gps.c: 314:  if(gps_init_timer == 1 && ubx_ack == 0)
 16575  0000' C000' FFE8         	movff	_gps_init_timer,wreg
 16576  0004' 0A01               	xorlw	1
 16577  0006' A4D8               	btfss	status,2,c
 16578  0008' EF00' F000'        	goto	u13851
 16579  000C' EF00' F000'        	goto	u13850
 16580  0010'                    u13851:
 16581  0010' EF00' F000'        	goto	l864
 16582  0014'                    u13850:
 16583  0014' 5000'              	movf	_ubx_ack^0,w,c
 16584  0016' A4D8               	btfss	status,2,c
 16585  0018' EF00' F000'        	goto	u13861
 16586  001C' EF00' F000'        	goto	u13860
 16587  0020'                    u13861:
 16588  0020' EF00' F000'        	goto	l864
 16589  0024'                    u13860:
 16590  0024'                    
 16591                           ;src/gps.c: 315:  {;src/gps.c: 316:   gps_init_timer = 0;
 16592  0024' 0E00               	movlw	0
 16593  0026' CFE8 F000'         	movff	wreg,_gps_init_timer
 16594  002A'                    
 16595                           ;src/gps.c: 318:   send_UBX_string(6,0x31,sizeof(gps_config_data),gps_config_data);
 16596  002A' 0E31               	movlw	49
 16597  002C' 0100               	movlb	0	; () banked
 16598  002E' 6F00'              	movwf	send_UBX_string@id& (0+255),b
 16599  0030' 0E00               	movlw	0
 16600  0032' 6F00'              	movwf	(send_UBX_string@len+1)& (0+255),b
 16601  0034' 0E20               	movlw	32
 16602  0036' 6F00'              	movwf	send_UBX_string@len& (0+255),b
 16603  0038' 0E00'              	movlw	low _gps_config_data
 16604  003A' 6F00'              	movwf	send_UBX_string@payload& (0+255),b
 16605  003C' 0E00'              	movlw	high _gps_config_data
 16606  003E' 6F00'              	movwf	(send_UBX_string@payload+1)& (0+255),b
 16607  0040' 0E06               	movlw	6
 16608  0042' EC00' F000'        	call	_send_UBX_string
 16609  0046'                    l864:
 16610  0046' 0012               	return		;funcret
 16611  0048'                    __end_of_init_gps:
 16612                           	opt callstack 0
 16613                           
 16614 ;; *************** function _send_UBX_string *****************
 16615 ;; Defined at:
 16616 ;;		line 323 in file "src/gps.c"
 16617 ;; Parameters:    Size  Location     Type
 16618 ;;  class           1    wreg     unsigned char 
 16619 ;;  id              1   43[BANK0 ] unsigned char 
 16620 ;;  len             2   44[BANK0 ] unsigned short 
 16621 ;;  payload         2   46[BANK0 ] PTR unsigned char 
 16622 ;;		 -> gps_config_data(32), 
 16623 ;; Auto vars:     Size  Location     Type
 16624 ;;  class           1   50[BANK1 ] unsigned char 
 16625 ;;  i               2   55[BANK1 ] int 
 16626 ;;  i               2   53[BANK1 ] int 
 16627 ;;  i               2   51[BANK1 ] int 
 16628 ;;  txbuf          50    0[BANK1 ] unsigned char [50]
 16629 ;;  idx             2   59[BANK1 ] int 
 16630 ;;  CK_A            1   58[BANK1 ] unsigned char 
 16631 ;;  CK_B            1   57[BANK1 ] unsigned char 
 16632 ;; Return value:  Size  Location     Type
 16633 ;;                  1    wreg      void 
 16634 ;; Registers used:
 16635 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16636 ;; Tracked objects:
 16637 ;;		On entry : 0/0
 16638 ;;		On exit  : 0/0
 16639 ;;		Unchanged: 0/0
 16640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16641 ;;      Params:         0       5       0       0       0       0       0
 16642 ;;      Locals:         0       0      61       0       0       0       0
 16643 ;;      Temps:          1       0       0       0       0       0       0
 16644 ;;      Totals:         1       5      61       0       0       0       0
 16645 ;;Total ram usage:       67 bytes
 16646 ;; Hardware stack levels used:    1
 16647 ;; Hardware stack levels required when called:   10
 16648 ;; This function calls:
 16649 ;;		_printf
 16650 ;;		_putgps
 16651 ;; This function is called by:
 16652 ;;		_init_gps
 16653 ;; This function uses a non-reentrant model
 16654 ;;
 16655                           
 16656                           	psect	text56
 16657  0000'                    __ptext56:
 16658                           	opt callstack 0
 16659  0000'                    _send_UBX_string:
 16660                           	opt callstack 19
 16661                           
 16662                           ;incstack = 0
 16663                           ;send_UBX_string@class stored from wreg
 16664  0000' 0101               	movlb	1	; () banked
 16665  0002' 6F00'              	movwf	send_UBX_string@class& (0+255),b
 16666  0004'                    
 16667                           ;src/gps.c: 323: void send_UBX_string(u8 class, u8 id, u16 len, u8 *payload);src/gps.c: 
      +                          324: {;src/gps.c: 325:  u8 txbuf[50];;src/gps.c: 326:  int idx = 0;
 16668  0004' 0E00               	movlw	0
 16669  0006' 0101               	movlb	1	; () banked
 16670  0008' 6F00'              	movwf	(send_UBX_string@idx+1)& (0+255),b
 16671  000A' 0E00               	movlw	0
 16672  000C' 6F00'              	movwf	send_UBX_string@idx& (0+255),b
 16673  000E'                    
 16674                           ; BSR set to: 1
 16675                           ;src/gps.c: 327:  static u8 giveup = 0;;src/gps.c: 329:  if(giveup == 100) printf("GPS:n
      +                          ot found\n");
 16676  000E' 0E64               	movlw	100
 16677  0010' 0100               	movlb	0	; () banked
 16678  0012' 1900'              	xorwf	send_UBX_string@giveup& (0+255),w,b
 16679  0014' A4D8               	btfss	status,2,c
 16680  0016' EF00' F000'        	goto	u13141
 16681  001A' EF00' F000'        	goto	u13140
 16682  001E'                    u13141:
 16683  001E' EF00' F000'        	goto	l10549
 16684  0022'                    u13140:
 16685  0022'                    
 16686                           ; BSR set to: 0
 16687  0022' 0E00'              	movlw	low STR_90
 16688  0024' 6F00'              	movwf	printf@fmt& (0+255),b
 16689  0026' 0E00'              	movlw	high STR_90
 16690  0028' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
 16691  002A' EC00' F000'        	call	_printf	;wreg free
 16692  002E'                    l10549:
 16693                           
 16694                           ;src/gps.c: 330:  if(++giveup > 100) return;
 16695  002E' 0100               	movlb	0	; () banked
 16696  0030' 2B00'              	incf	send_UBX_string@giveup& (0+255),f,b
 16697  0032' 0E64               	movlw	100
 16698  0034' 6500'              	cpfsgt	send_UBX_string@giveup& (0+255),b
 16699  0036' EF00' F000'        	goto	u13151
 16700  003A' EF00' F000'        	goto	u13150
 16701  003E'                    u13151:
 16702  003E' EF00' F000'        	goto	l10553
 16703  0042'                    u13150:
 16704  0042' EF00' F000'        	goto	l871
 16705  0046'                    l10553:
 16706                           
 16707                           ; BSR set to: 0
 16708                           ;src/gps.c: 332:  printf("GPS:init Ublox %d of 100\n",giveup);
 16709  0046' 0E00'              	movlw	low STR_91
 16710  0048' 6F00'              	movwf	printf@fmt& (0+255),b
 16711  004A' 0E00'              	movlw	high STR_91
 16712  004C' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
 16713  004E' C003' F01F'        	movff	send_UBX_string@giveup,?_printf+2
 16714  0052' 6B00'              	clrf	(?_printf+3)& (0+255),b
 16715  0054' EC00' F000'        	call	_printf	;wreg free
 16716  0058'                    
 16717                           ;src/gps.c: 334:  txbuf[idx++] = 0xb5;
 16718  0058' 0EB5               	movlw	181
 16719  005A' 0101               	movlb	1	; () banked
 16720  005C' 6F00'              	movwf	send_UBX_string@txbuf& (0+255),b
 16721  005E'                    
 16722                           ; BSR set to: 1
 16723  005E' 4B00'              	infsnz	send_UBX_string@idx& (0+255),f,b
 16724  0060' 2B00'              	incf	(send_UBX_string@idx+1)& (0+255),f,b
 16725  0062'                    
 16726                           ; BSR set to: 1
 16727                           ;src/gps.c: 335:  txbuf[idx++] = 0x62;
 16728  0062' 0E00'              	movlw	low send_UBX_string@txbuf
 16729  0064' 2500'              	addwf	send_UBX_string@idx& (0+255),w,b
 16730  0066' 6ED9               	movwf	fsr2l,c
 16731  0068' 0E00'              	movlw	high send_UBX_string@txbuf
 16732  006A' 2100'              	addwfc	(send_UBX_string@idx+1)& (0+255),w,b
 16733  006C' 6EDA               	movwf	fsr2h,c
 16734  006E' 0E62               	movlw	98
 16735  0070' 6EDF               	movwf	indf2,c
 16736  0072'                    
 16737                           ; BSR set to: 1
 16738  0072' 4B00'              	infsnz	send_UBX_string@idx& (0+255),f,b
 16739  0074' 2B00'              	incf	(send_UBX_string@idx+1)& (0+255),f,b
 16740  0076'                    
 16741                           ; BSR set to: 1
 16742                           ;src/gps.c: 336:  txbuf[idx++] = class;
 16743  0076' 0E00'              	movlw	low send_UBX_string@txbuf
 16744  0078' 2500'              	addwf	send_UBX_string@idx& (0+255),w,b
 16745  007A' 6ED9               	movwf	fsr2l,c
 16746  007C' 0E00'              	movlw	high send_UBX_string@txbuf
 16747  007E' 2100'              	addwfc	(send_UBX_string@idx+1)& (0+255),w,b
 16748  0080' 6EDA               	movwf	fsr2h,c
 16749  0082' C032' FFDF         	movff	send_UBX_string@class,indf2
 16750  0086'                    
 16751                           ; BSR set to: 1
 16752  0086' 4B00'              	infsnz	send_UBX_string@idx& (0+255),f,b
 16753  0088' 2B00'              	incf	(send_UBX_string@idx+1)& (0+255),f,b
 16754  008A'                    
 16755                           ; BSR set to: 1
 16756                           ;src/gps.c: 337:  txbuf[idx++] = id;
 16757  008A' 0E00'              	movlw	low send_UBX_string@txbuf
 16758  008C' 2500'              	addwf	send_UBX_string@idx& (0+255),w,b
 16759  008E' 6ED9               	movwf	fsr2l,c
 16760  0090' 0E00'              	movlw	high send_UBX_string@txbuf
 16761  0092' 2100'              	addwfc	(send_UBX_string@idx+1)& (0+255),w,b
 16762  0094' 6EDA               	movwf	fsr2h,c
 16763  0096' C02B' FFDF         	movff	send_UBX_string@id,indf2
 16764  009A'                    
 16765                           ; BSR set to: 1
 16766  009A' 4B00'              	infsnz	send_UBX_string@idx& (0+255),f,b
 16767  009C' 2B00'              	incf	(send_UBX_string@idx+1)& (0+255),f,b
 16768  009E'                    
 16769                           ; BSR set to: 1
 16770                           ;src/gps.c: 338:  txbuf[idx++] = (u8)(len & 0xff);
 16771  009E' 0E00'              	movlw	low send_UBX_string@txbuf
 16772  00A0' 2500'              	addwf	send_UBX_string@idx& (0+255),w,b
 16773  00A2' 6ED9               	movwf	fsr2l,c
 16774  00A4' 0E00'              	movlw	high send_UBX_string@txbuf
 16775  00A6' 2100'              	addwfc	(send_UBX_string@idx+1)& (0+255),w,b
 16776  00A8' 6EDA               	movwf	fsr2h,c
 16777  00AA' C02C' FFDF         	movff	send_UBX_string@len,indf2
 16778  00AE'                    
 16779                           ; BSR set to: 1
 16780  00AE' 4B00'              	infsnz	send_UBX_string@idx& (0+255),f,b
 16781  00B0' 2B00'              	incf	(send_UBX_string@idx+1)& (0+255),f,b
 16782  00B2'                    
 16783                           ; BSR set to: 1
 16784                           ;src/gps.c: 339:  txbuf[idx++] = (u8)(len >> 8);
 16785  00B2' 0E00'              	movlw	low send_UBX_string@txbuf
 16786  00B4' 2500'              	addwf	send_UBX_string@idx& (0+255),w,b
 16787  00B6' 6ED9               	movwf	fsr2l,c
 16788  00B8' 0E00'              	movlw	high send_UBX_string@txbuf
 16789  00BA' 2100'              	addwfc	(send_UBX_string@idx+1)& (0+255),w,b
 16790  00BC' 6EDA               	movwf	fsr2h,c
 16791  00BE' 0100               	movlb	0	; () banked
 16792  00C0' 5100'              	movf	(send_UBX_string@len+1)& (0+255),w,b
 16793  00C2' 6EDF               	movwf	indf2,c
 16794  00C4'                    
 16795                           ; BSR set to: 0
 16796  00C4' 0101               	movlb	1	; () banked
 16797  00C6' 4B00'              	infsnz	send_UBX_string@idx& (0+255),f,b
 16798  00C8' 2B00'              	incf	(send_UBX_string@idx+1)& (0+255),f,b
 16799  00CA'                    
 16800                           ; BSR set to: 1
 16801                           ;src/gps.c: 340:  for(int i=0; i<len; i++)
 16802  00CA' 0E00               	movlw	0
 16803  00CC' 6F00'              	movwf	(send_UBX_string@i+1)& (0+255),b
 16804  00CE' 0E00               	movlw	0
 16805  00D0' 6F00'              	movwf	send_UBX_string@i& (0+255),b
 16806  00D2' EF00' F000'        	goto	l10587
 16807  00D6'                    l10581:
 16808                           
 16809                           ; BSR set to: 1
 16810                           ;src/gps.c: 341:  {;src/gps.c: 342:   txbuf[idx++] = payload[i];
 16811  00D6' 5100'              	movf	send_UBX_string@i& (0+255),w,b
 16812  00D8' 0100               	movlb	0	; () banked
 16813  00DA' 2500'              	addwf	send_UBX_string@payload& (0+255),w,b
 16814  00DC' 6ED9               	movwf	fsr2l,c
 16815  00DE' 0101               	movlb	1	; () banked
 16816  00E0' 5100'              	movf	(send_UBX_string@i+1)& (0+255),w,b
 16817  00E2' 0100               	movlb	0	; () banked
 16818  00E4' 2100'              	addwfc	(send_UBX_string@payload+1)& (0+255),w,b
 16819  00E6' 6EDA               	movwf	fsr2h,c
 16820  00E8' 0E00'              	movlw	low send_UBX_string@txbuf
 16821  00EA' 0101               	movlb	1	; () banked
 16822  00EC' 2500'              	addwf	send_UBX_string@idx& (0+255),w,b
 16823  00EE' 6EE1               	movwf	fsr1l,c
 16824  00F0' 0E00'              	movlw	high send_UBX_string@txbuf
 16825  00F2' 2100'              	addwfc	(send_UBX_string@idx+1)& (0+255),w,b
 16826  00F4' 6EE2               	movwf	fsr1h,c
 16827  00F6' CFDF FFE7          	movff	indf2,indf1
 16828  00FA'                    
 16829                           ; BSR set to: 1
 16830  00FA' 4B00'              	infsnz	send_UBX_string@idx& (0+255),f,b
 16831  00FC' 2B00'              	incf	(send_UBX_string@idx+1)& (0+255),f,b
 16832  00FE'                    
 16833                           ; BSR set to: 1
 16834                           ;src/gps.c: 343:  }
 16835  00FE' 4B00'              	infsnz	send_UBX_string@i& (0+255),f,b
 16836  0100' 2B00'              	incf	(send_UBX_string@i+1)& (0+255),f,b
 16837  0102'                    l10587:
 16838                           
 16839                           ; BSR set to: 1
 16840  0102' 0100               	movlb	0	; () banked
 16841  0104' 5100'              	movf	send_UBX_string@len& (0+255),w,b
 16842  0106' 0101               	movlb	1	; () banked
 16843  0108' 5D00'              	subwf	send_UBX_string@i& (0+255),w,b
 16844  010A' 0100               	movlb	0	; () banked
 16845  010C' 5100'              	movf	(send_UBX_string@len+1)& (0+255),w,b
 16846  010E' 0101               	movlb	1	; () banked
 16847  0110' 5900'              	subwfb	(send_UBX_string@i+1)& (0+255),w,b
 16848  0112' A0D8               	btfss	status,0,c
 16849  0114' EF00' F000'        	goto	u13161
 16850  0118' EF00' F000'        	goto	u13160
 16851  011C'                    u13161:
 16852  011C' EF00' F000'        	goto	l10581
 16853  0120'                    u13160:
 16854  0120'                    
 16855                           ; BSR set to: 1
 16856                           ;src/gps.c: 346:  u8 CK_A = 0, CK_B = 0;
 16857  0120' 0E00               	movlw	0
 16858  0122' 6F00'              	movwf	send_UBX_string@CK_A& (0+255),b
 16859  0124' 0E00               	movlw	0
 16860  0126' 6F00'              	movwf	send_UBX_string@CK_B& (0+255),b
 16861                           
 16862                           ;src/gps.c: 347:  for(int i=2; i<idx; i++)
 16863  0128' 0E00               	movlw	0
 16864  012A' 6F00'              	movwf	(send_UBX_string@i_2074+1)& (0+255),b
 16865  012C' 0E02               	movlw	2
 16866  012E' 6F00'              	movwf	send_UBX_string@i_2074& (0+255),b
 16867  0130' EF00' F000'        	goto	l10597
 16868  0134'                    l10591:
 16869                           
 16870                           ; BSR set to: 1
 16871                           ;src/gps.c: 348:  {;src/gps.c: 349:   CK_A = CK_A + txbuf[i];
 16872  0134' 0E00'              	movlw	low send_UBX_string@txbuf
 16873  0136' 2500'              	addwf	send_UBX_string@i_2074& (0+255),w,b
 16874  0138' 6ED9               	movwf	fsr2l,c
 16875  013A' 0E00'              	movlw	high send_UBX_string@txbuf
 16876  013C' 2100'              	addwfc	(send_UBX_string@i_2074+1)& (0+255),w,b
 16877  013E' 6EDA               	movwf	fsr2h,c
 16878  0140' 50DF               	movf	indf2,w,c
 16879  0142' 2500'              	addwf	send_UBX_string@CK_A& (0+255),w,b
 16880  0144' 6F00'              	movwf	send_UBX_string@CK_A& (0+255),b
 16881  0146'                    
 16882                           ; BSR set to: 1
 16883                           ;src/gps.c: 350:   CK_B = CK_B + CK_A;
 16884  0146' 5100'              	movf	send_UBX_string@CK_B& (0+255),w,b
 16885  0148' 2500'              	addwf	send_UBX_string@CK_A& (0+255),w,b
 16886  014A' 6F00'              	movwf	send_UBX_string@CK_B& (0+255),b
 16887  014C'                    
 16888                           ; BSR set to: 1
 16889                           ;src/gps.c: 351:  }
 16890  014C' 4B00'              	infsnz	send_UBX_string@i_2074& (0+255),f,b
 16891  014E' 2B00'              	incf	(send_UBX_string@i_2074+1)& (0+255),f,b
 16892  0150'                    l10597:
 16893                           
 16894                           ; BSR set to: 1
 16895  0150' 5100'              	movf	send_UBX_string@idx& (0+255),w,b
 16896  0152' 5D00'              	subwf	send_UBX_string@i_2074& (0+255),w,b
 16897  0154' 5100'              	movf	(send_UBX_string@i_2074+1)& (0+255),w,b
 16898  0156' 0A80               	xorlw	128
 16899  0158' 6E00'              	movwf	??_send_UBX_string^0,c
 16900  015A' 5100'              	movf	(send_UBX_string@idx+1)& (0+255),w,b
 16901  015C' 0A80               	xorlw	128
 16902  015E' 5800'              	subwfb	??_send_UBX_string^0,w,c
 16903  0160' A0D8               	btfss	status,0,c
 16904  0162' EF00' F000'        	goto	u13171
 16905  0166' EF00' F000'        	goto	u13170
 16906  016A'                    u13171:
 16907  016A' EF00' F000'        	goto	l10591
 16908  016E'                    u13170:
 16909  016E'                    
 16910                           ; BSR set to: 1
 16911                           ;src/gps.c: 352:  txbuf[idx++] = CK_A;
 16912  016E' 0E00'              	movlw	low send_UBX_string@txbuf
 16913  0170' 2500'              	addwf	send_UBX_string@idx& (0+255),w,b
 16914  0172' 6ED9               	movwf	fsr2l,c
 16915  0174' 0E00'              	movlw	high send_UBX_string@txbuf
 16916  0176' 2100'              	addwfc	(send_UBX_string@idx+1)& (0+255),w,b
 16917  0178' 6EDA               	movwf	fsr2h,c
 16918  017A' C03A' FFDF         	movff	send_UBX_string@CK_A,indf2
 16919  017E'                    
 16920                           ; BSR set to: 1
 16921  017E' 4B00'              	infsnz	send_UBX_string@idx& (0+255),f,b
 16922  0180' 2B00'              	incf	(send_UBX_string@idx+1)& (0+255),f,b
 16923  0182'                    
 16924                           ; BSR set to: 1
 16925                           ;src/gps.c: 353:  txbuf[idx++] = CK_B;
 16926  0182' 0E00'              	movlw	low send_UBX_string@txbuf
 16927  0184' 2500'              	addwf	send_UBX_string@idx& (0+255),w,b
 16928  0186' 6ED9               	movwf	fsr2l,c
 16929  0188' 0E00'              	movlw	high send_UBX_string@txbuf
 16930  018A' 2100'              	addwfc	(send_UBX_string@idx+1)& (0+255),w,b
 16931  018C' 6EDA               	movwf	fsr2h,c
 16932  018E' C039' FFDF         	movff	send_UBX_string@CK_B,indf2
 16933  0192' 4B00'              	infsnz	send_UBX_string@idx& (0+255),f,b
 16934  0194' 2B00'              	incf	(send_UBX_string@idx+1)& (0+255),f,b
 16935  0196'                    
 16936                           ; BSR set to: 1
 16937                           ;src/gps.c: 355:  if(idx >= 50)
 16938  0196' BF00'              	btfsc	(send_UBX_string@idx+1)& (0+255),7,b
 16939  0198' EF00' F000'        	goto	u13181
 16940  019C' 5100'              	movf	(send_UBX_string@idx+1)& (0+255),w,b
 16941  019E' E109               	bnz	u13180
 16942  01A0' 0E32               	movlw	50
 16943  01A2' 5D00'              	subwf	send_UBX_string@idx& (0+255),w,b
 16944  01A4' A0D8               	btfss	status,0,c
 16945  01A6' EF00' F000'        	goto	u13181
 16946  01AA' EF00' F000'        	goto	u13180
 16947  01AE'                    u13181:
 16948  01AE' EF00' F000'        	goto	l10609
 16949  01B2'                    u13180:
 16950  01B2' EF00' F000'        	goto	l871
 16951  01B6'                    l10609:
 16952                           
 16953                           ; BSR set to: 1
 16954                           ;src/gps.c: 358:  for(int i=0; i<idx; i++)
 16955  01B6' 0E00               	movlw	0
 16956  01B8' 6F00'              	movwf	(send_UBX_string@i_2075+1)& (0+255),b
 16957  01BA' 0E00               	movlw	0
 16958  01BC' 6F00'              	movwf	send_UBX_string@i_2075& (0+255),b
 16959  01BE' EF00' F000'        	goto	l10615
 16960  01C2'                    l10611:
 16961                           
 16962                           ; BSR set to: 1
 16963                           ;src/gps.c: 359:   putgps(txbuf[i]);
 16964  01C2' 0E00'              	movlw	low send_UBX_string@txbuf
 16965  01C4' 2500'              	addwf	send_UBX_string@i_2075& (0+255),w,b
 16966  01C6' 6ED9               	movwf	fsr2l,c
 16967  01C8' 0E00'              	movlw	high send_UBX_string@txbuf
 16968  01CA' 2100'              	addwfc	(send_UBX_string@i_2075+1)& (0+255),w,b
 16969  01CC' 6EDA               	movwf	fsr2h,c
 16970  01CE' 50DF               	movf	indf2,w,c
 16971  01D0' EC00' F000'        	call	_putgps
 16972  01D4' 0101               	movlb	1	; () banked
 16973  01D6' 4B00'              	infsnz	send_UBX_string@i_2075& (0+255),f,b
 16974  01D8' 2B00'              	incf	(send_UBX_string@i_2075+1)& (0+255),f,b
 16975  01DA'                    l10615:
 16976                           
 16977                           ; BSR set to: 1
 16978  01DA' 5100'              	movf	send_UBX_string@idx& (0+255),w,b
 16979  01DC' 5D00'              	subwf	send_UBX_string@i_2075& (0+255),w,b
 16980  01DE' 5100'              	movf	(send_UBX_string@i_2075+1)& (0+255),w,b
 16981  01E0' 0A80               	xorlw	128
 16982  01E2' 6E00'              	movwf	??_send_UBX_string^0,c
 16983  01E4' 5100'              	movf	(send_UBX_string@idx+1)& (0+255),w,b
 16984  01E6' 0A80               	xorlw	128
 16985  01E8' 5800'              	subwfb	??_send_UBX_string^0,w,c
 16986  01EA' A0D8               	btfss	status,0,c
 16987  01EC' EF00' F000'        	goto	u13191
 16988  01F0' EF00' F000'        	goto	u13190
 16989  01F4'                    u13191:
 16990  01F4' EF00' F000'        	goto	l10611
 16991  01F8'                    u13190:
 16992  01F8'                    
 16993                           ; BSR set to: 1
 16994                           ;src/gps.c: 361:  printf("\n");
 16995  01F8' 0E00'              	movlw	low (STR_37+15)
 16996  01FA' 0100               	movlb	0	; () banked
 16997  01FC' 6F00'              	movwf	printf@fmt& (0+255),b
 16998  01FE' 0E00'              	movlw	high (STR_37+15)
 16999  0200' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
 17000  0202' EC00' F000'        	call	_printf	;wreg free
 17001  0206'                    l871:
 17002  0206' 0012               	return		;funcret
 17003  0208'                    __end_of_send_UBX_string:
 17004                           	opt callstack 0
 17005                           
 17006 ;; *************** function _putgps *****************
 17007 ;; Defined at:
 17008 ;;		line 134 in file "src/driver/usart.c"
 17009 ;; Parameters:    Size  Location     Type
 17010 ;;  c               1    wreg     unsigned char 
 17011 ;; Auto vars:     Size  Location     Type
 17012 ;;  c               1   14[COMRAM] unsigned char 
 17013 ;; Return value:  Size  Location     Type
 17014 ;;                  1    wreg      void 
 17015 ;; Registers used:
 17016 ;;		wreg, status,2, cstack
 17017 ;; Tracked objects:
 17018 ;;		On entry : 0/0
 17019 ;;		On exit  : 0/0
 17020 ;;		Unchanged: 0/0
 17021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17022 ;;      Params:         0       0       0       0       0       0       0
 17023 ;;      Locals:         1       0       0       0       0       0       0
 17024 ;;      Temps:          0       0       0       0       0       0       0
 17025 ;;      Totals:         1       0       0       0       0       0       0
 17026 ;;Total ram usage:        1 bytes
 17027 ;; Hardware stack levels used:    1
 17028 ;; Hardware stack levels required when called:    3
 17029 ;; This function calls:
 17030 ;;		_usart_putc
 17031 ;; This function is called by:
 17032 ;;		_send_UBX_string
 17033 ;; This function uses a non-reentrant model
 17034 ;;
 17035                           
 17036                           	psect	text57
 17037  0000'                    __ptext57:
 17038                           	opt callstack 0
 17039  0000'                    _putgps:
 17040                           	opt callstack 25
 17041                           
 17042                           ;incstack = 0
 17043                           ;putgps@c stored from wreg
 17044  0000' 6E00'              	movwf	putgps@c^0,c
 17045  0002'                    
 17046                           ;src/driver/usart.c: 134: void putgps(u8 c);src/driver/usart.c: 135: {;src/driver/usart.
      +                          c: 136:  usart_putc(c);
 17047  0002' 5000'              	movf	putgps@c^0,w,c
 17048  0004' EC00' F000'        	call	_usart_putc
 17049  0008' 0012               	return		;funcret
 17050  000A'                    __end_of_putgps:
 17051                           	opt callstack 0
 17052                           
 17053 ;; *************** function _init_gpios *****************
 17054 ;; Defined at:
 17055 ;;		line 9 in file "src/gpio.c"
 17056 ;; Parameters:    Size  Location     Type
 17057 ;;		None
 17058 ;; Auto vars:     Size  Location     Type
 17059 ;;		None
 17060 ;; Return value:  Size  Location     Type
 17061 ;;                  1    wreg      void 
 17062 ;; Registers used:
 17063 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17064 ;; Tracked objects:
 17065 ;;		On entry : 0/0
 17066 ;;		On exit  : 0/0
 17067 ;;		Unchanged: 0/0
 17068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17069 ;;      Params:         0       0       0       0       0       0       0
 17070 ;;      Locals:         0       0       0       0       0       0       0
 17071 ;;      Temps:          3       0       0       0       0       0       0
 17072 ;;      Totals:         3       0       0       0       0       0       0
 17073 ;;Total ram usage:        3 bytes
 17074 ;; Hardware stack levels used:    1
 17075 ;; Hardware stack levels required when called:    3
 17076 ;; This function calls:
 17077 ;;		_check_RXTX
 17078 ;; This function is called by:
 17079 ;;		_main
 17080 ;; This function uses a non-reentrant model
 17081 ;;
 17082                           
 17083                           	psect	text58
 17084  0000'                    __ptext58:
 17085                           	opt callstack 0
 17086  0000'                    _init_gpios:
 17087                           	opt callstack 27
 17088  0000'                    
 17089                           ;src/gpio.c: 12:     ADCON1bits.PCFG = 0xF;
 17090  0000' 0E0F               	movlw	15
 17091  0002' 12C1               	iorwf	193,f,c	;volatile
 17092  0004'                    
 17093                           ;src/gpio.c: 13:     INTCON2bits.nRBPU = 0;
 17094  0004' 9EF1               	bcf	241,7,c	;volatile
 17095  0006'                    
 17096                           ;src/gpio.c: 16:     *((PIN_ADF_LOCK)->pTRIS) |= (PIN_ADF_LOCK)->mask;
 17097  0006' 0E00'              	movlw	low (_PIN_ADF_LOCK_DEF+4)
 17098  0008' 6EF6               	movwf	tblptrl,c
 17099  000A' 0E00'              	movlw	high (_PIN_ADF_LOCK_DEF+4)
 17100  000C' 6EF7               	movwf	tblptrh,c
 17101  000E'                    	if	0	;tblptru may be non-zero
 17102  000E'                    	endif
 17103  000E'                    	if	0	;tblptru may be non-zero
 17104  000E'                    	endif
 17105  000E' 0008               	tblrd		*
 17106  0010' CFF5 F012'         	movff	tablat,??_init_gpios
 17107  0014' 0E00'              	movlw	low (_PIN_ADF_LOCK_DEF+2)
 17108  0016' 6EF6               	movwf	tblptrl,c
 17109  0018' 0E00'              	movlw	high (_PIN_ADF_LOCK_DEF+2)
 17110  001A' 6EF7               	movwf	tblptrh,c
 17111  001C'                    	if	0	;tblptru may be non-zero
 17112  001C'                    	endif
 17113  001C'                    	if	0	;tblptru may be non-zero
 17114  001C'                    	endif
 17115  001C' 0009               	tblrd		*+
 17116  001E' CFF5 FFD9          	movff	tablat,fsr2l
 17117  0022' 0009               	tblrd		*+
 17118  0024' CFF5 FFDA          	movff	tablat,fsr2h
 17119  0028' 5000'              	movf	??_init_gpios^0,w,c
 17120  002A' 12DF               	iorwf	indf2,f,c
 17121  002C'                    
 17122                           ;src/gpio.c: 18:     *((PIN_ADF_CE)->pPORT) &= ~(PIN_ADF_CE)->mask;
 17123  002C' 0E00'              	movlw	low (_PIN_ADF_CE_DEF+4)
 17124  002E' 6EF6               	movwf	tblptrl,c
 17125  0030' 0E00'              	movlw	high (_PIN_ADF_CE_DEF+4)
 17126  0032' 6EF7               	movwf	tblptrh,c
 17127  0034'                    	if	0	;tblptru may be non-zero
 17128  0034'                    	endif
 17129  0034'                    	if	0	;tblptru may be non-zero
 17130  0034'                    	endif
 17131  0034' 0008               	tblrd		*
 17132  0036' 50F5               	movf	tablat,w,c
 17133  0038' 0AFF               	xorlw	255
 17134  003A' 6E00'              	movwf	??_init_gpios^0,c
 17135  003C' 0E00'              	movlw	low _PIN_ADF_CE_DEF
 17136  003E' 6EF6               	movwf	tblptrl,c
 17137  0040'                    	if	1	;There is more than 1 active tblptr byte
 17138  0040' 0E00'              	movlw	high _PIN_ADF_CE_DEF
 17139  0042' 6EF7               	movwf	tblptrh,c
 17140  0044'                    	endif
 17141  0044'                    	if	0	;There are less than 3 active tblptr bytes
 17142  0044'                    	endif
 17143  0044' 0009               	tblrd		*+
 17144  0046' CFF5 F013'         	movff	tablat,??_init_gpios+1
 17145  004A' 0009               	tblrd		*+
 17146  004C' CFF5 F014'         	movff	tablat,??_init_gpios+2
 17147  0050' C013' FFD9         	movff	??_init_gpios+1,fsr2l
 17148  0054' C014' FFDA         	movff	??_init_gpios+2,fsr2h
 17149  0058' 5000'              	movf	??_init_gpios^0,w,c
 17150  005A' 16DF               	andwf	indf2,f,c
 17151  005C'                    
 17152                           ;src/gpio.c: 19:     *((PIN_ADF_CE)->pTRIS) &= ~(PIN_ADF_CE)->mask;
 17153  005C' 0E00'              	movlw	low (_PIN_ADF_CE_DEF+4)
 17154  005E' 6EF6               	movwf	tblptrl,c
 17155  0060' 0E00'              	movlw	high (_PIN_ADF_CE_DEF+4)
 17156  0062' 6EF7               	movwf	tblptrh,c
 17157  0064'                    	if	0	;tblptru may be non-zero
 17158  0064'                    	endif
 17159  0064'                    	if	0	;tblptru may be non-zero
 17160  0064'                    	endif
 17161  0064' 0008               	tblrd		*
 17162  0066' 50F5               	movf	tablat,w,c
 17163  0068' 0AFF               	xorlw	255
 17164  006A' 6E00'              	movwf	??_init_gpios^0,c
 17165  006C' 0E00'              	movlw	low (_PIN_ADF_CE_DEF+2)
 17166  006E' 6EF6               	movwf	tblptrl,c
 17167  0070' 0E00'              	movlw	high (_PIN_ADF_CE_DEF+2)
 17168  0072' 6EF7               	movwf	tblptrh,c
 17169  0074'                    	if	0	;tblptru may be non-zero
 17170  0074'                    	endif
 17171  0074'                    	if	0	;tblptru may be non-zero
 17172  0074'                    	endif
 17173  0074' 0009               	tblrd		*+
 17174  0076' CFF5 FFD9          	movff	tablat,fsr2l
 17175  007A' 0009               	tblrd		*+
 17176  007C' CFF5 FFDA          	movff	tablat,fsr2h
 17177  0080' 5000'              	movf	??_init_gpios^0,w,c
 17178  0082' 16DF               	andwf	indf2,f,c
 17179  0084'                    
 17180                           ;src/gpio.c: 21:     *((PIN_ADF_LE)->pPORT) &= ~(PIN_ADF_LE)->mask;
 17181  0084' 0E00'              	movlw	low (_PIN_ADF_LE_DEF+4)
 17182  0086' 6EF6               	movwf	tblptrl,c
 17183  0088' 0E00'              	movlw	high (_PIN_ADF_LE_DEF+4)
 17184  008A' 6EF7               	movwf	tblptrh,c
 17185  008C'                    	if	0	;tblptru may be non-zero
 17186  008C'                    	endif
 17187  008C'                    	if	0	;tblptru may be non-zero
 17188  008C'                    	endif
 17189  008C' 0008               	tblrd		*
 17190  008E' 50F5               	movf	tablat,w,c
 17191  0090' 0AFF               	xorlw	255
 17192  0092' 6E00'              	movwf	??_init_gpios^0,c
 17193  0094' 0E00'              	movlw	low _PIN_ADF_LE_DEF
 17194  0096' 6EF6               	movwf	tblptrl,c
 17195  0098'                    	if	1	;There is more than 1 active tblptr byte
 17196  0098' 0E00'              	movlw	high _PIN_ADF_LE_DEF
 17197  009A' 6EF7               	movwf	tblptrh,c
 17198  009C'                    	endif
 17199  009C'                    	if	0	;There are less than 3 active tblptr bytes
 17200  009C'                    	endif
 17201  009C' 0009               	tblrd		*+
 17202  009E' CFF5 F013'         	movff	tablat,??_init_gpios+1
 17203  00A2' 0009               	tblrd		*+
 17204  00A4' CFF5 F014'         	movff	tablat,??_init_gpios+2
 17205  00A8' C013' FFD9         	movff	??_init_gpios+1,fsr2l
 17206  00AC' C014' FFDA         	movff	??_init_gpios+2,fsr2h
 17207  00B0' 5000'              	movf	??_init_gpios^0,w,c
 17208  00B2' 16DF               	andwf	indf2,f,c
 17209  00B4'                    
 17210                           ;src/gpio.c: 22:     *((PIN_ADF_LE)->pTRIS) &= ~(PIN_ADF_LE)->mask;
 17211  00B4' 0E00'              	movlw	low (_PIN_ADF_LE_DEF+4)
 17212  00B6' 6EF6               	movwf	tblptrl,c
 17213  00B8' 0E00'              	movlw	high (_PIN_ADF_LE_DEF+4)
 17214  00BA' 6EF7               	movwf	tblptrh,c
 17215  00BC'                    	if	0	;tblptru may be non-zero
 17216  00BC'                    	endif
 17217  00BC'                    	if	0	;tblptru may be non-zero
 17218  00BC'                    	endif
 17219  00BC' 0008               	tblrd		*
 17220  00BE' 50F5               	movf	tablat,w,c
 17221  00C0' 0AFF               	xorlw	255
 17222  00C2' 6E00'              	movwf	??_init_gpios^0,c
 17223  00C4' 0E00'              	movlw	low (_PIN_ADF_LE_DEF+2)
 17224  00C6' 6EF6               	movwf	tblptrl,c
 17225  00C8' 0E00'              	movlw	high (_PIN_ADF_LE_DEF+2)
 17226  00CA' 6EF7               	movwf	tblptrh,c
 17227  00CC'                    	if	0	;tblptru may be non-zero
 17228  00CC'                    	endif
 17229  00CC'                    	if	0	;tblptru may be non-zero
 17230  00CC'                    	endif
 17231  00CC' 0009               	tblrd		*+
 17232  00CE' CFF5 FFD9          	movff	tablat,fsr2l
 17233  00D2' 0009               	tblrd		*+
 17234  00D4' CFF5 FFDA          	movff	tablat,fsr2h
 17235  00D8' 5000'              	movf	??_init_gpios^0,w,c
 17236  00DA' 16DF               	andwf	indf2,f,c
 17237  00DC'                    
 17238                           ;src/gpio.c: 24:     *((PIN_SIO_DATA)->pPORT) &= ~(PIN_SIO_DATA)->mask;
 17239  00DC' 0E00'              	movlw	low (_PIN_SIO_DATA_DEF+4)
 17240  00DE' 6EF6               	movwf	tblptrl,c
 17241  00E0' 0E00'              	movlw	high (_PIN_SIO_DATA_DEF+4)
 17242  00E2' 6EF7               	movwf	tblptrh,c
 17243  00E4'                    	if	0	;tblptru may be non-zero
 17244  00E4'                    	endif
 17245  00E4'                    	if	0	;tblptru may be non-zero
 17246  00E4'                    	endif
 17247  00E4' 0008               	tblrd		*
 17248  00E6' 50F5               	movf	tablat,w,c
 17249  00E8' 0AFF               	xorlw	255
 17250  00EA' 6E00'              	movwf	??_init_gpios^0,c
 17251  00EC' 0E00'              	movlw	low _PIN_SIO_DATA_DEF
 17252  00EE' 6EF6               	movwf	tblptrl,c
 17253  00F0'                    	if	1	;There is more than 1 active tblptr byte
 17254  00F0' 0E00'              	movlw	high _PIN_SIO_DATA_DEF
 17255  00F2' 6EF7               	movwf	tblptrh,c
 17256  00F4'                    	endif
 17257  00F4'                    	if	0	;There are less than 3 active tblptr bytes
 17258  00F4'                    	endif
 17259  00F4' 0009               	tblrd		*+
 17260  00F6' CFF5 F013'         	movff	tablat,??_init_gpios+1
 17261  00FA' 0009               	tblrd		*+
 17262  00FC' CFF5 F014'         	movff	tablat,??_init_gpios+2
 17263  0100' C013' FFD9         	movff	??_init_gpios+1,fsr2l
 17264  0104' C014' FFDA         	movff	??_init_gpios+2,fsr2h
 17265  0108' 5000'              	movf	??_init_gpios^0,w,c
 17266  010A' 16DF               	andwf	indf2,f,c
 17267  010C'                    
 17268                           ;src/gpio.c: 25:     *((PIN_SIO_DATA)->pTRIS) &= ~(PIN_SIO_DATA)->mask;
 17269  010C' 0E00'              	movlw	low (_PIN_SIO_DATA_DEF+4)
 17270  010E' 6EF6               	movwf	tblptrl,c
 17271  0110' 0E00'              	movlw	high (_PIN_SIO_DATA_DEF+4)
 17272  0112' 6EF7               	movwf	tblptrh,c
 17273  0114'                    	if	0	;tblptru may be non-zero
 17274  0114'                    	endif
 17275  0114'                    	if	0	;tblptru may be non-zero
 17276  0114'                    	endif
 17277  0114' 0008               	tblrd		*
 17278  0116' 50F5               	movf	tablat,w,c
 17279  0118' 0AFF               	xorlw	255
 17280  011A' 6E00'              	movwf	??_init_gpios^0,c
 17281  011C' 0E00'              	movlw	low (_PIN_SIO_DATA_DEF+2)
 17282  011E' 6EF6               	movwf	tblptrl,c
 17283  0120' 0E00'              	movlw	high (_PIN_SIO_DATA_DEF+2)
 17284  0122' 6EF7               	movwf	tblptrh,c
 17285  0124'                    	if	0	;tblptru may be non-zero
 17286  0124'                    	endif
 17287  0124'                    	if	0	;tblptru may be non-zero
 17288  0124'                    	endif
 17289  0124' 0009               	tblrd		*+
 17290  0126' CFF5 FFD9          	movff	tablat,fsr2l
 17291  012A' 0009               	tblrd		*+
 17292  012C' CFF5 FFDA          	movff	tablat,fsr2h
 17293  0130' 5000'              	movf	??_init_gpios^0,w,c
 17294  0132' 16DF               	andwf	indf2,f,c
 17295  0134'                    
 17296                           ;src/gpio.c: 27:     *((PIN_SIO_CLK)->pPORT) &= ~(PIN_SIO_CLK)->mask;
 17297  0134' 0E00'              	movlw	low (_PIN_SIO_CLK_DEF+4)
 17298  0136' 6EF6               	movwf	tblptrl,c
 17299  0138' 0E00'              	movlw	high (_PIN_SIO_CLK_DEF+4)
 17300  013A' 6EF7               	movwf	tblptrh,c
 17301  013C'                    	if	0	;tblptru may be non-zero
 17302  013C'                    	endif
 17303  013C'                    	if	0	;tblptru may be non-zero
 17304  013C'                    	endif
 17305  013C' 0008               	tblrd		*
 17306  013E' 50F5               	movf	tablat,w,c
 17307  0140' 0AFF               	xorlw	255
 17308  0142' 6E00'              	movwf	??_init_gpios^0,c
 17309  0144' 0E00'              	movlw	low _PIN_SIO_CLK_DEF
 17310  0146' 6EF6               	movwf	tblptrl,c
 17311  0148'                    	if	1	;There is more than 1 active tblptr byte
 17312  0148' 0E00'              	movlw	high _PIN_SIO_CLK_DEF
 17313  014A' 6EF7               	movwf	tblptrh,c
 17314  014C'                    	endif
 17315  014C'                    	if	0	;There are less than 3 active tblptr bytes
 17316  014C'                    	endif
 17317  014C' 0009               	tblrd		*+
 17318  014E' CFF5 F013'         	movff	tablat,??_init_gpios+1
 17319  0152' 0009               	tblrd		*+
 17320  0154' CFF5 F014'         	movff	tablat,??_init_gpios+2
 17321  0158' C013' FFD9         	movff	??_init_gpios+1,fsr2l
 17322  015C' C014' FFDA         	movff	??_init_gpios+2,fsr2h
 17323  0160' 5000'              	movf	??_init_gpios^0,w,c
 17324  0162' 16DF               	andwf	indf2,f,c
 17325  0164'                    
 17326                           ;src/gpio.c: 28:     *((PIN_SIO_CLK)->pTRIS) &= ~(PIN_SIO_CLK)->mask;
 17327  0164' 0E00'              	movlw	low (_PIN_SIO_CLK_DEF+4)
 17328  0166' 6EF6               	movwf	tblptrl,c
 17329  0168' 0E00'              	movlw	high (_PIN_SIO_CLK_DEF+4)
 17330  016A' 6EF7               	movwf	tblptrh,c
 17331  016C'                    	if	0	;tblptru may be non-zero
 17332  016C'                    	endif
 17333  016C'                    	if	0	;tblptru may be non-zero
 17334  016C'                    	endif
 17335  016C' 0008               	tblrd		*
 17336  016E' 50F5               	movf	tablat,w,c
 17337  0170' 0AFF               	xorlw	255
 17338  0172' 6E00'              	movwf	??_init_gpios^0,c
 17339  0174' 0E00'              	movlw	low (_PIN_SIO_CLK_DEF+2)
 17340  0176' 6EF6               	movwf	tblptrl,c
 17341  0178' 0E00'              	movlw	high (_PIN_SIO_CLK_DEF+2)
 17342  017A' 6EF7               	movwf	tblptrh,c
 17343  017C'                    	if	0	;tblptru may be non-zero
 17344  017C'                    	endif
 17345  017C'                    	if	0	;tblptru may be non-zero
 17346  017C'                    	endif
 17347  017C' 0009               	tblrd		*+
 17348  017E' CFF5 FFD9          	movff	tablat,fsr2l
 17349  0182' 0009               	tblrd		*+
 17350  0184' CFF5 FFDA          	movff	tablat,fsr2h
 17351  0188' 5000'              	movf	??_init_gpios^0,w,c
 17352  018A' 16DF               	andwf	indf2,f,c
 17353  018C'                    
 17354                           ;src/gpio.c: 32:  *((PIN_SI5328_LOL)->pTRIS) |= (PIN_SI5328_LOL)->mask;
 17355  018C' 0E00'              	movlw	low (_PIN_SI5328_LOL_DEF+4)
 17356  018E' 6EF6               	movwf	tblptrl,c
 17357  0190' 0E00'              	movlw	high (_PIN_SI5328_LOL_DEF+4)
 17358  0192' 6EF7               	movwf	tblptrh,c
 17359  0194'                    	if	0	;tblptru may be non-zero
 17360  0194'                    	endif
 17361  0194'                    	if	0	;tblptru may be non-zero
 17362  0194'                    	endif
 17363  0194' 0008               	tblrd		*
 17364  0196' CFF5 F012'         	movff	tablat,??_init_gpios
 17365  019A' 0E00'              	movlw	low (_PIN_SI5328_LOL_DEF+2)
 17366  019C' 6EF6               	movwf	tblptrl,c
 17367  019E' 0E00'              	movlw	high (_PIN_SI5328_LOL_DEF+2)
 17368  01A0' 6EF7               	movwf	tblptrh,c
 17369  01A2'                    	if	0	;tblptru may be non-zero
 17370  01A2'                    	endif
 17371  01A2'                    	if	0	;tblptru may be non-zero
 17372  01A2'                    	endif
 17373  01A2' 0009               	tblrd		*+
 17374  01A4' CFF5 FFD9          	movff	tablat,fsr2l
 17375  01A8' 0009               	tblrd		*+
 17376  01AA' CFF5 FFDA          	movff	tablat,fsr2h
 17377  01AE' 5000'              	movf	??_init_gpios^0,w,c
 17378  01B0' 12DF               	iorwf	indf2,f,c
 17379  01B2'                    
 17380                           ;src/gpio.c: 34:     *((PIN_SI5328_CS_CA)->pPORT) |= (PIN_SI5328_CS_CA)->mask;
 17381  01B2' 0E00'              	movlw	low (_PIN_SI5328_CS_CA_DEF+4)
 17382  01B4' 6EF6               	movwf	tblptrl,c
 17383  01B6' 0E00'              	movlw	high (_PIN_SI5328_CS_CA_DEF+4)
 17384  01B8' 6EF7               	movwf	tblptrh,c
 17385  01BA'                    	if	0	;tblptru may be non-zero
 17386  01BA'                    	endif
 17387  01BA'                    	if	0	;tblptru may be non-zero
 17388  01BA'                    	endif
 17389  01BA' 0008               	tblrd		*
 17390  01BC' CFF5 F012'         	movff	tablat,??_init_gpios
 17391  01C0' 0E00'              	movlw	low _PIN_SI5328_CS_CA_DEF
 17392  01C2' 6EF6               	movwf	tblptrl,c
 17393  01C4'                    	if	1	;There is more than 1 active tblptr byte
 17394  01C4' 0E00'              	movlw	high _PIN_SI5328_CS_CA_DEF
 17395  01C6' 6EF7               	movwf	tblptrh,c
 17396  01C8'                    	endif
 17397  01C8'                    	if	0	;There are less than 3 active tblptr bytes
 17398  01C8'                    	endif
 17399  01C8' 0009               	tblrd		*+
 17400  01CA' CFF5 F013'         	movff	tablat,??_init_gpios+1
 17401  01CE' 0009               	tblrd		*+
 17402  01D0' CFF5 F014'         	movff	tablat,??_init_gpios+2
 17403  01D4' C013' FFD9         	movff	??_init_gpios+1,fsr2l
 17404  01D8' C014' FFDA         	movff	??_init_gpios+2,fsr2h
 17405  01DC' 5000'              	movf	??_init_gpios^0,w,c
 17406  01DE' 12DF               	iorwf	indf2,f,c
 17407  01E0'                    
 17408                           ;src/gpio.c: 35:     *((PIN_SI5328_CS_CA)->pTRIS) |= (PIN_SI5328_CS_CA)->mask;
 17409  01E0' 0E00'              	movlw	low (_PIN_SI5328_CS_CA_DEF+4)
 17410  01E2' 6EF6               	movwf	tblptrl,c
 17411  01E4' 0E00'              	movlw	high (_PIN_SI5328_CS_CA_DEF+4)
 17412  01E6' 6EF7               	movwf	tblptrh,c
 17413  01E8'                    	if	0	;tblptru may be non-zero
 17414  01E8'                    	endif
 17415  01E8'                    	if	0	;tblptru may be non-zero
 17416  01E8'                    	endif
 17417  01E8' 0008               	tblrd		*
 17418  01EA' CFF5 F012'         	movff	tablat,??_init_gpios
 17419  01EE' 0E00'              	movlw	low (_PIN_SI5328_CS_CA_DEF+2)
 17420  01F0' 6EF6               	movwf	tblptrl,c
 17421  01F2' 0E00'              	movlw	high (_PIN_SI5328_CS_CA_DEF+2)
 17422  01F4' 6EF7               	movwf	tblptrh,c
 17423  01F6'                    	if	0	;tblptru may be non-zero
 17424  01F6'                    	endif
 17425  01F6'                    	if	0	;tblptru may be non-zero
 17426  01F6'                    	endif
 17427  01F6' 0009               	tblrd		*+
 17428  01F8' CFF5 FFD9          	movff	tablat,fsr2l
 17429  01FC' 0009               	tblrd		*+
 17430  01FE' CFF5 FFDA          	movff	tablat,fsr2h
 17431  0202' 5000'              	movf	??_init_gpios^0,w,c
 17432  0204' 12DF               	iorwf	indf2,f,c
 17433  0206'                    
 17434                           ;src/gpio.c: 38:     *((PIN_LED_SI_LOCK)->pPORT) |= (PIN_LED_SI_LOCK)->mask;
 17435  0206' 0E00'              	movlw	low (_PIN_LED_SI_LOCK_DEF+4)
 17436  0208' 6EF6               	movwf	tblptrl,c
 17437  020A' 0E00'              	movlw	high (_PIN_LED_SI_LOCK_DEF+4)
 17438  020C' 6EF7               	movwf	tblptrh,c
 17439  020E'                    	if	0	;tblptru may be non-zero
 17440  020E'                    	endif
 17441  020E'                    	if	0	;tblptru may be non-zero
 17442  020E'                    	endif
 17443  020E' 0008               	tblrd		*
 17444  0210' CFF5 F012'         	movff	tablat,??_init_gpios
 17445  0214' 0E00'              	movlw	low _PIN_LED_SI_LOCK_DEF
 17446  0216' 6EF6               	movwf	tblptrl,c
 17447  0218'                    	if	1	;There is more than 1 active tblptr byte
 17448  0218' 0E00'              	movlw	high _PIN_LED_SI_LOCK_DEF
 17449  021A' 6EF7               	movwf	tblptrh,c
 17450  021C'                    	endif
 17451  021C'                    	if	0	;There are less than 3 active tblptr bytes
 17452  021C'                    	endif
 17453  021C' 0009               	tblrd		*+
 17454  021E' CFF5 F013'         	movff	tablat,??_init_gpios+1
 17455  0222' 0009               	tblrd		*+
 17456  0224' CFF5 F014'         	movff	tablat,??_init_gpios+2
 17457  0228' C013' FFD9         	movff	??_init_gpios+1,fsr2l
 17458  022C' C014' FFDA         	movff	??_init_gpios+2,fsr2h
 17459  0230' 5000'              	movf	??_init_gpios^0,w,c
 17460  0232' 12DF               	iorwf	indf2,f,c
 17461  0234'                    
 17462                           ;src/gpio.c: 39:     *((PIN_LED_SI_LOCK)->pTRIS) &= ~(PIN_LED_SI_LOCK)->mask;
 17463  0234' 0E00'              	movlw	low (_PIN_LED_SI_LOCK_DEF+4)
 17464  0236' 6EF6               	movwf	tblptrl,c
 17465  0238' 0E00'              	movlw	high (_PIN_LED_SI_LOCK_DEF+4)
 17466  023A' 6EF7               	movwf	tblptrh,c
 17467  023C'                    	if	0	;tblptru may be non-zero
 17468  023C'                    	endif
 17469  023C'                    	if	0	;tblptru may be non-zero
 17470  023C'                    	endif
 17471  023C' 0008               	tblrd		*
 17472  023E' 50F5               	movf	tablat,w,c
 17473  0240' 0AFF               	xorlw	255
 17474  0242' 6E00'              	movwf	??_init_gpios^0,c
 17475  0244' 0E00'              	movlw	low (_PIN_LED_SI_LOCK_DEF+2)
 17476  0246' 6EF6               	movwf	tblptrl,c
 17477  0248' 0E00'              	movlw	high (_PIN_LED_SI_LOCK_DEF+2)
 17478  024A' 6EF7               	movwf	tblptrh,c
 17479  024C'                    	if	0	;tblptru may be non-zero
 17480  024C'                    	endif
 17481  024C'                    	if	0	;tblptru may be non-zero
 17482  024C'                    	endif
 17483  024C' 0009               	tblrd		*+
 17484  024E' CFF5 FFD9          	movff	tablat,fsr2l
 17485  0252' 0009               	tblrd		*+
 17486  0254' CFF5 FFDA          	movff	tablat,fsr2h
 17487  0258' 5000'              	movf	??_init_gpios^0,w,c
 17488  025A' 16DF               	andwf	indf2,f,c
 17489  025C'                    
 17490                           ;src/gpio.c: 41:     *((PIN_LED_CPU_OK)->pPORT) |= (PIN_LED_CPU_OK)->mask;
 17491  025C' 0E00'              	movlw	low (_PIN_LED_CPU_OK_DEF+4)
 17492  025E' 6EF6               	movwf	tblptrl,c
 17493  0260' 0E00'              	movlw	high (_PIN_LED_CPU_OK_DEF+4)
 17494  0262' 6EF7               	movwf	tblptrh,c
 17495  0264'                    	if	0	;tblptru may be non-zero
 17496  0264'                    	endif
 17497  0264'                    	if	0	;tblptru may be non-zero
 17498  0264'                    	endif
 17499  0264' 0008               	tblrd		*
 17500  0266' CFF5 F012'         	movff	tablat,??_init_gpios
 17501  026A' 0E00'              	movlw	low _PIN_LED_CPU_OK_DEF
 17502  026C' 6EF6               	movwf	tblptrl,c
 17503  026E'                    	if	1	;There is more than 1 active tblptr byte
 17504  026E' 0E00'              	movlw	high _PIN_LED_CPU_OK_DEF
 17505  0270' 6EF7               	movwf	tblptrh,c
 17506  0272'                    	endif
 17507  0272'                    	if	0	;There are less than 3 active tblptr bytes
 17508  0272'                    	endif
 17509  0272' 0009               	tblrd		*+
 17510  0274' CFF5 F013'         	movff	tablat,??_init_gpios+1
 17511  0278' 0009               	tblrd		*+
 17512  027A' CFF5 F014'         	movff	tablat,??_init_gpios+2
 17513  027E' C013' FFD9         	movff	??_init_gpios+1,fsr2l
 17514  0282' C014' FFDA         	movff	??_init_gpios+2,fsr2h
 17515  0286' 5000'              	movf	??_init_gpios^0,w,c
 17516  0288' 12DF               	iorwf	indf2,f,c
 17517  028A'                    
 17518                           ;src/gpio.c: 42:     *((PIN_LED_CPU_OK)->pTRIS) &= ~(PIN_LED_CPU_OK)->mask;
 17519  028A' 0E00'              	movlw	low (_PIN_LED_CPU_OK_DEF+4)
 17520  028C' 6EF6               	movwf	tblptrl,c
 17521  028E' 0E00'              	movlw	high (_PIN_LED_CPU_OK_DEF+4)
 17522  0290' 6EF7               	movwf	tblptrh,c
 17523  0292'                    	if	0	;tblptru may be non-zero
 17524  0292'                    	endif
 17525  0292'                    	if	0	;tblptru may be non-zero
 17526  0292'                    	endif
 17527  0292' 0008               	tblrd		*
 17528  0294' 50F5               	movf	tablat,w,c
 17529  0296' 0AFF               	xorlw	255
 17530  0298' 6E00'              	movwf	??_init_gpios^0,c
 17531  029A' 0E00'              	movlw	low (_PIN_LED_CPU_OK_DEF+2)
 17532  029C' 6EF6               	movwf	tblptrl,c
 17533  029E' 0E00'              	movlw	high (_PIN_LED_CPU_OK_DEF+2)
 17534  02A0' 6EF7               	movwf	tblptrh,c
 17535  02A2'                    	if	0	;tblptru may be non-zero
 17536  02A2'                    	endif
 17537  02A2'                    	if	0	;tblptru may be non-zero
 17538  02A2'                    	endif
 17539  02A2' 0009               	tblrd		*+
 17540  02A4' CFF5 FFD9          	movff	tablat,fsr2l
 17541  02A8' 0009               	tblrd		*+
 17542  02AA' CFF5 FFDA          	movff	tablat,fsr2h
 17543  02AE' 5000'              	movf	??_init_gpios^0,w,c
 17544  02B0' 16DF               	andwf	indf2,f,c
 17545  02B2'                    
 17546                           ;src/gpio.c: 44:     *((PIN_LED_ADF_LOCK)->pPORT) |= (PIN_LED_ADF_LOCK)->mask;
 17547  02B2' 0E00'              	movlw	low (_PIN_LED_ADF_LOCK_DEF+4)
 17548  02B4' 6EF6               	movwf	tblptrl,c
 17549  02B6' 0E00'              	movlw	high (_PIN_LED_ADF_LOCK_DEF+4)
 17550  02B8' 6EF7               	movwf	tblptrh,c
 17551  02BA'                    	if	0	;tblptru may be non-zero
 17552  02BA'                    	endif
 17553  02BA'                    	if	0	;tblptru may be non-zero
 17554  02BA'                    	endif
 17555  02BA' 0008               	tblrd		*
 17556  02BC' CFF5 F012'         	movff	tablat,??_init_gpios
 17557  02C0' 0E00'              	movlw	low _PIN_LED_ADF_LOCK_DEF
 17558  02C2' 6EF6               	movwf	tblptrl,c
 17559  02C4'                    	if	1	;There is more than 1 active tblptr byte
 17560  02C4' 0E00'              	movlw	high _PIN_LED_ADF_LOCK_DEF
 17561  02C6' 6EF7               	movwf	tblptrh,c
 17562  02C8'                    	endif
 17563  02C8'                    	if	0	;There are less than 3 active tblptr bytes
 17564  02C8'                    	endif
 17565  02C8' 0009               	tblrd		*+
 17566  02CA' CFF5 F013'         	movff	tablat,??_init_gpios+1
 17567  02CE' 0009               	tblrd		*+
 17568  02D0' CFF5 F014'         	movff	tablat,??_init_gpios+2
 17569  02D4' C013' FFD9         	movff	??_init_gpios+1,fsr2l
 17570  02D8' C014' FFDA         	movff	??_init_gpios+2,fsr2h
 17571  02DC' 5000'              	movf	??_init_gpios^0,w,c
 17572  02DE' 12DF               	iorwf	indf2,f,c
 17573  02E0'                    
 17574                           ;src/gpio.c: 45:     *((PIN_LED_ADF_LOCK)->pTRIS) &= ~(PIN_LED_ADF_LOCK)->mask;
 17575  02E0' 0E00'              	movlw	low (_PIN_LED_ADF_LOCK_DEF+4)
 17576  02E2' 6EF6               	movwf	tblptrl,c
 17577  02E4' 0E00'              	movlw	high (_PIN_LED_ADF_LOCK_DEF+4)
 17578  02E6' 6EF7               	movwf	tblptrh,c
 17579  02E8'                    	if	0	;tblptru may be non-zero
 17580  02E8'                    	endif
 17581  02E8'                    	if	0	;tblptru may be non-zero
 17582  02E8'                    	endif
 17583  02E8' 0008               	tblrd		*
 17584  02EA' 50F5               	movf	tablat,w,c
 17585  02EC' 0AFF               	xorlw	255
 17586  02EE' 6E00'              	movwf	??_init_gpios^0,c
 17587  02F0' 0E00'              	movlw	low (_PIN_LED_ADF_LOCK_DEF+2)
 17588  02F2' 6EF6               	movwf	tblptrl,c
 17589  02F4' 0E00'              	movlw	high (_PIN_LED_ADF_LOCK_DEF+2)
 17590  02F6' 6EF7               	movwf	tblptrh,c
 17591  02F8'                    	if	0	;tblptru may be non-zero
 17592  02F8'                    	endif
 17593  02F8'                    	if	0	;tblptru may be non-zero
 17594  02F8'                    	endif
 17595  02F8' 0009               	tblrd		*+
 17596  02FA' CFF5 FFD9          	movff	tablat,fsr2l
 17597  02FE' 0009               	tblrd		*+
 17598  0300' CFF5 FFDA          	movff	tablat,fsr2h
 17599  0304' 5000'              	movf	??_init_gpios^0,w,c
 17600  0306' 16DF               	andwf	indf2,f,c
 17601  0308'                    
 17602                           ;src/gpio.c: 47:     *((PIN_LED_LNB_GOOD)->pPORT) |= (PIN_LED_LNB_GOOD)->mask;
 17603  0308' 0E00'              	movlw	low (_PIN_LED_LNB_GOOD_DEF+4)
 17604  030A' 6EF6               	movwf	tblptrl,c
 17605  030C' 0E00'              	movlw	high (_PIN_LED_LNB_GOOD_DEF+4)
 17606  030E' 6EF7               	movwf	tblptrh,c
 17607  0310'                    	if	0	;tblptru may be non-zero
 17608  0310'                    	endif
 17609  0310'                    	if	0	;tblptru may be non-zero
 17610  0310'                    	endif
 17611  0310' 0008               	tblrd		*
 17612  0312' CFF5 F012'         	movff	tablat,??_init_gpios
 17613  0316' 0E00'              	movlw	low _PIN_LED_LNB_GOOD_DEF
 17614  0318' 6EF6               	movwf	tblptrl,c
 17615  031A'                    	if	1	;There is more than 1 active tblptr byte
 17616  031A' 0E00'              	movlw	high _PIN_LED_LNB_GOOD_DEF
 17617  031C' 6EF7               	movwf	tblptrh,c
 17618  031E'                    	endif
 17619  031E'                    	if	0	;There are less than 3 active tblptr bytes
 17620  031E'                    	endif
 17621  031E' 0009               	tblrd		*+
 17622  0320' CFF5 F013'         	movff	tablat,??_init_gpios+1
 17623  0324' 0009               	tblrd		*+
 17624  0326' CFF5 F014'         	movff	tablat,??_init_gpios+2
 17625  032A' C013' FFD9         	movff	??_init_gpios+1,fsr2l
 17626  032E' C014' FFDA         	movff	??_init_gpios+2,fsr2h
 17627  0332' 5000'              	movf	??_init_gpios^0,w,c
 17628  0334' 12DF               	iorwf	indf2,f,c
 17629  0336'                    
 17630                           ;src/gpio.c: 48:     *((PIN_LED_LNB_GOOD)->pTRIS) &= ~(PIN_LED_LNB_GOOD)->mask;
 17631  0336' 0E00'              	movlw	low (_PIN_LED_LNB_GOOD_DEF+4)
 17632  0338' 6EF6               	movwf	tblptrl,c
 17633  033A' 0E00'              	movlw	high (_PIN_LED_LNB_GOOD_DEF+4)
 17634  033C' 6EF7               	movwf	tblptrh,c
 17635  033E'                    	if	0	;tblptru may be non-zero
 17636  033E'                    	endif
 17637  033E'                    	if	0	;tblptru may be non-zero
 17638  033E'                    	endif
 17639  033E' 0008               	tblrd		*
 17640  0340' 50F5               	movf	tablat,w,c
 17641  0342' 0AFF               	xorlw	255
 17642  0344' 6E00'              	movwf	??_init_gpios^0,c
 17643  0346' 0E00'              	movlw	low (_PIN_LED_LNB_GOOD_DEF+2)
 17644  0348' 6EF6               	movwf	tblptrl,c
 17645  034A' 0E00'              	movlw	high (_PIN_LED_LNB_GOOD_DEF+2)
 17646  034C' 6EF7               	movwf	tblptrh,c
 17647  034E'                    	if	0	;tblptru may be non-zero
 17648  034E'                    	endif
 17649  034E'                    	if	0	;tblptru may be non-zero
 17650  034E'                    	endif
 17651  034E' 0009               	tblrd		*+
 17652  0350' CFF5 FFD9          	movff	tablat,fsr2l
 17653  0354' 0009               	tblrd		*+
 17654  0356' CFF5 FFDA          	movff	tablat,fsr2h
 17655  035A' 5000'              	movf	??_init_gpios^0,w,c
 17656  035C' 16DF               	andwf	indf2,f,c
 17657  035E'                    
 17658                           ;src/gpio.c: 51:     *((PIN_I2C_SCL)->pTRIS) |= (PIN_I2C_SCL)->mask;
 17659  035E' 0E00'              	movlw	low (_PIN_I2C_SCL_DEF+4)
 17660  0360' 6EF6               	movwf	tblptrl,c
 17661  0362' 0E00'              	movlw	high (_PIN_I2C_SCL_DEF+4)
 17662  0364' 6EF7               	movwf	tblptrh,c
 17663  0366'                    	if	0	;tblptru may be non-zero
 17664  0366'                    	endif
 17665  0366'                    	if	0	;tblptru may be non-zero
 17666  0366'                    	endif
 17667  0366' 0008               	tblrd		*
 17668  0368' CFF5 F012'         	movff	tablat,??_init_gpios
 17669  036C' 0E00'              	movlw	low (_PIN_I2C_SCL_DEF+2)
 17670  036E' 6EF6               	movwf	tblptrl,c
 17671  0370' 0E00'              	movlw	high (_PIN_I2C_SCL_DEF+2)
 17672  0372' 6EF7               	movwf	tblptrh,c
 17673  0374'                    	if	0	;tblptru may be non-zero
 17674  0374'                    	endif
 17675  0374'                    	if	0	;tblptru may be non-zero
 17676  0374'                    	endif
 17677  0374' 0009               	tblrd		*+
 17678  0376' CFF5 FFD9          	movff	tablat,fsr2l
 17679  037A' 0009               	tblrd		*+
 17680  037C' CFF5 FFDA          	movff	tablat,fsr2h
 17681  0380' 5000'              	movf	??_init_gpios^0,w,c
 17682  0382' 12DF               	iorwf	indf2,f,c
 17683  0384'                    
 17684                           ;src/gpio.c: 52:     *((PIN_I2C_SDA)->pTRIS) |= (PIN_I2C_SDA)->mask;
 17685  0384' 0E00'              	movlw	low (_PIN_I2C_SDA_DEF+4)
 17686  0386' 6EF6               	movwf	tblptrl,c
 17687  0388' 0E00'              	movlw	high (_PIN_I2C_SDA_DEF+4)
 17688  038A' 6EF7               	movwf	tblptrh,c
 17689  038C'                    	if	0	;tblptru may be non-zero
 17690  038C'                    	endif
 17691  038C'                    	if	0	;tblptru may be non-zero
 17692  038C'                    	endif
 17693  038C' 0008               	tblrd		*
 17694  038E' CFF5 F012'         	movff	tablat,??_init_gpios
 17695  0392' 0E00'              	movlw	low (_PIN_I2C_SDA_DEF+2)
 17696  0394' 6EF6               	movwf	tblptrl,c
 17697  0396' 0E00'              	movlw	high (_PIN_I2C_SDA_DEF+2)
 17698  0398' 6EF7               	movwf	tblptrh,c
 17699  039A'                    	if	0	;tblptru may be non-zero
 17700  039A'                    	endif
 17701  039A'                    	if	0	;tblptru may be non-zero
 17702  039A'                    	endif
 17703  039A' 0009               	tblrd		*+
 17704  039C' CFF5 FFD9          	movff	tablat,fsr2l
 17705  03A0' 0009               	tblrd		*+
 17706  03A2' CFF5 FFDA          	movff	tablat,fsr2h
 17707  03A6' 5000'              	movf	??_init_gpios^0,w,c
 17708  03A8' 12DF               	iorwf	indf2,f,c
 17709  03AA'                    
 17710                           ;src/gpio.c: 55:  check_RXTX();
 17711  03AA' EC00' F000'        	call	_check_RXTX	;wreg free
 17712  03AE'                    
 17713                           ;src/gpio.c: 58:     *((PIN_SJ3)->pTRIS) |= (PIN_SJ3)->mask;
 17714  03AE' 0E00'              	movlw	low (_PIN_SJ3_DEF+4)
 17715  03B0' 6EF6               	movwf	tblptrl,c
 17716  03B2' 0E00'              	movlw	high (_PIN_SJ3_DEF+4)
 17717  03B4' 6EF7               	movwf	tblptrh,c
 17718  03B6'                    	if	0	;tblptru may be non-zero
 17719  03B6'                    	endif
 17720  03B6'                    	if	0	;tblptru may be non-zero
 17721  03B6'                    	endif
 17722  03B6' 0008               	tblrd		*
 17723  03B8' CFF5 F012'         	movff	tablat,??_init_gpios
 17724  03BC' 0E00'              	movlw	low (_PIN_SJ3_DEF+2)
 17725  03BE' 6EF6               	movwf	tblptrl,c
 17726  03C0' 0E00'              	movlw	high (_PIN_SJ3_DEF+2)
 17727  03C2' 6EF7               	movwf	tblptrh,c
 17728  03C4'                    	if	0	;tblptru may be non-zero
 17729  03C4'                    	endif
 17730  03C4'                    	if	0	;tblptru may be non-zero
 17731  03C4'                    	endif
 17732  03C4' 0009               	tblrd		*+
 17733  03C6' CFF5 FFD9          	movff	tablat,fsr2l
 17734  03CA' 0009               	tblrd		*+
 17735  03CC' CFF5 FFDA          	movff	tablat,fsr2h
 17736  03D0' 5000'              	movf	??_init_gpios^0,w,c
 17737  03D2' 12DF               	iorwf	indf2,f,c
 17738  03D4'                    
 17739                           ;src/gpio.c: 59:     *((PIN_SJ3)->pPORT) |= (PIN_SJ3)->mask;
 17740  03D4' 0E00'              	movlw	low (_PIN_SJ3_DEF+4)
 17741  03D6' 6EF6               	movwf	tblptrl,c
 17742  03D8' 0E00'              	movlw	high (_PIN_SJ3_DEF+4)
 17743  03DA' 6EF7               	movwf	tblptrh,c
 17744  03DC'                    	if	0	;tblptru may be non-zero
 17745  03DC'                    	endif
 17746  03DC'                    	if	0	;tblptru may be non-zero
 17747  03DC'                    	endif
 17748  03DC' 0008               	tblrd		*
 17749  03DE' CFF5 F012'         	movff	tablat,??_init_gpios
 17750  03E2' 0E00'              	movlw	low _PIN_SJ3_DEF
 17751  03E4' 6EF6               	movwf	tblptrl,c
 17752  03E6'                    	if	1	;There is more than 1 active tblptr byte
 17753  03E6' 0E00'              	movlw	high _PIN_SJ3_DEF
 17754  03E8' 6EF7               	movwf	tblptrh,c
 17755  03EA'                    	endif
 17756  03EA'                    	if	0	;There are less than 3 active tblptr bytes
 17757  03EA'                    	endif
 17758  03EA' 0009               	tblrd		*+
 17759  03EC' CFF5 F013'         	movff	tablat,??_init_gpios+1
 17760  03F0' 0009               	tblrd		*+
 17761  03F2' CFF5 F014'         	movff	tablat,??_init_gpios+2
 17762  03F6' C013' FFD9         	movff	??_init_gpios+1,fsr2l
 17763  03FA' C014' FFDA         	movff	??_init_gpios+2,fsr2h
 17764  03FE' 5000'              	movf	??_init_gpios^0,w,c
 17765  0400' 12DF               	iorwf	indf2,f,c
 17766  0402'                    
 17767                           ;src/gpio.c: 60:     *((PIN_SJ4)->pTRIS) |= (PIN_SJ4)->mask;
 17768  0402' 0E00'              	movlw	low (_PIN_SJ4_DEF+4)
 17769  0404' 6EF6               	movwf	tblptrl,c
 17770  0406' 0E00'              	movlw	high (_PIN_SJ4_DEF+4)
 17771  0408' 6EF7               	movwf	tblptrh,c
 17772  040A'                    	if	0	;tblptru may be non-zero
 17773  040A'                    	endif
 17774  040A'                    	if	0	;tblptru may be non-zero
 17775  040A'                    	endif
 17776  040A' 0008               	tblrd		*
 17777  040C' CFF5 F012'         	movff	tablat,??_init_gpios
 17778  0410' 0E00'              	movlw	low (_PIN_SJ4_DEF+2)
 17779  0412' 6EF6               	movwf	tblptrl,c
 17780  0414' 0E00'              	movlw	high (_PIN_SJ4_DEF+2)
 17781  0416' 6EF7               	movwf	tblptrh,c
 17782  0418'                    	if	0	;tblptru may be non-zero
 17783  0418'                    	endif
 17784  0418'                    	if	0	;tblptru may be non-zero
 17785  0418'                    	endif
 17786  0418' 0009               	tblrd		*+
 17787  041A' CFF5 FFD9          	movff	tablat,fsr2l
 17788  041E' 0009               	tblrd		*+
 17789  0420' CFF5 FFDA          	movff	tablat,fsr2h
 17790  0424' 5000'              	movf	??_init_gpios^0,w,c
 17791  0426' 12DF               	iorwf	indf2,f,c
 17792  0428'                    
 17793                           ;src/gpio.c: 61:     *((PIN_SJ4)->pPORT) |= (PIN_SJ4)->mask;
 17794  0428' 0E00'              	movlw	low (_PIN_SJ4_DEF+4)
 17795  042A' 6EF6               	movwf	tblptrl,c
 17796  042C' 0E00'              	movlw	high (_PIN_SJ4_DEF+4)
 17797  042E' 6EF7               	movwf	tblptrh,c
 17798  0430'                    	if	0	;tblptru may be non-zero
 17799  0430'                    	endif
 17800  0430'                    	if	0	;tblptru may be non-zero
 17801  0430'                    	endif
 17802  0430' 0008               	tblrd		*
 17803  0432' CFF5 F012'         	movff	tablat,??_init_gpios
 17804  0436' 0E00'              	movlw	low _PIN_SJ4_DEF
 17805  0438' 6EF6               	movwf	tblptrl,c
 17806  043A'                    	if	1	;There is more than 1 active tblptr byte
 17807  043A' 0E00'              	movlw	high _PIN_SJ4_DEF
 17808  043C' 6EF7               	movwf	tblptrh,c
 17809  043E'                    	endif
 17810  043E'                    	if	0	;There are less than 3 active tblptr bytes
 17811  043E'                    	endif
 17812  043E' 0009               	tblrd		*+
 17813  0440' CFF5 F013'         	movff	tablat,??_init_gpios+1
 17814  0444' 0009               	tblrd		*+
 17815  0446' CFF5 F014'         	movff	tablat,??_init_gpios+2
 17816  044A' C013' FFD9         	movff	??_init_gpios+1,fsr2l
 17817  044E' C014' FFDA         	movff	??_init_gpios+2,fsr2h
 17818  0452' 5000'              	movf	??_init_gpios^0,w,c
 17819  0454' 12DF               	iorwf	indf2,f,c
 17820  0456'                    
 17821                           ;src/gpio.c: 62:     *((PIN_SJ5)->pTRIS) |= (PIN_SJ5)->mask;
 17822  0456' 0E00'              	movlw	low (_PIN_SJ5_DEF+4)
 17823  0458' 6EF6               	movwf	tblptrl,c
 17824  045A' 0E00'              	movlw	high (_PIN_SJ5_DEF+4)
 17825  045C' 6EF7               	movwf	tblptrh,c
 17826  045E'                    	if	0	;tblptru may be non-zero
 17827  045E'                    	endif
 17828  045E'                    	if	0	;tblptru may be non-zero
 17829  045E'                    	endif
 17830  045E' 0008               	tblrd		*
 17831  0460' CFF5 F012'         	movff	tablat,??_init_gpios
 17832  0464' 0E00'              	movlw	low (_PIN_SJ5_DEF+2)
 17833  0466' 6EF6               	movwf	tblptrl,c
 17834  0468' 0E00'              	movlw	high (_PIN_SJ5_DEF+2)
 17835  046A' 6EF7               	movwf	tblptrh,c
 17836  046C'                    	if	0	;tblptru may be non-zero
 17837  046C'                    	endif
 17838  046C'                    	if	0	;tblptru may be non-zero
 17839  046C'                    	endif
 17840  046C' 0009               	tblrd		*+
 17841  046E' CFF5 FFD9          	movff	tablat,fsr2l
 17842  0472' 0009               	tblrd		*+
 17843  0474' CFF5 FFDA          	movff	tablat,fsr2h
 17844  0478' 5000'              	movf	??_init_gpios^0,w,c
 17845  047A' 12DF               	iorwf	indf2,f,c
 17846  047C'                    
 17847                           ;src/gpio.c: 63:     *((PIN_SJ5)->pPORT) |= (PIN_SJ5)->mask;
 17848  047C' 0E00'              	movlw	low (_PIN_SJ5_DEF+4)
 17849  047E' 6EF6               	movwf	tblptrl,c
 17850  0480' 0E00'              	movlw	high (_PIN_SJ5_DEF+4)
 17851  0482' 6EF7               	movwf	tblptrh,c
 17852  0484'                    	if	0	;tblptru may be non-zero
 17853  0484'                    	endif
 17854  0484'                    	if	0	;tblptru may be non-zero
 17855  0484'                    	endif
 17856  0484' 0008               	tblrd		*
 17857  0486' CFF5 F012'         	movff	tablat,??_init_gpios
 17858  048A' 0E00'              	movlw	low _PIN_SJ5_DEF
 17859  048C' 6EF6               	movwf	tblptrl,c
 17860  048E'                    	if	1	;There is more than 1 active tblptr byte
 17861  048E' 0E00'              	movlw	high _PIN_SJ5_DEF
 17862  0490' 6EF7               	movwf	tblptrh,c
 17863  0492'                    	endif
 17864  0492'                    	if	0	;There are less than 3 active tblptr bytes
 17865  0492'                    	endif
 17866  0492' 0009               	tblrd		*+
 17867  0494' CFF5 F013'         	movff	tablat,??_init_gpios+1
 17868  0498' 0009               	tblrd		*+
 17869  049A' CFF5 F014'         	movff	tablat,??_init_gpios+2
 17870  049E' C013' FFD9         	movff	??_init_gpios+1,fsr2l
 17871  04A2' C014' FFDA         	movff	??_init_gpios+2,fsr2h
 17872  04A6' 5000'              	movf	??_init_gpios^0,w,c
 17873  04A8' 12DF               	iorwf	indf2,f,c
 17874  04AA'                    
 17875                           ;src/gpio.c: 64:     *((PIN_SJ6)->pTRIS) |= (PIN_SJ6)->mask;
 17876  04AA' 0E00'              	movlw	low (_PIN_SJ6_DEF+4)
 17877  04AC' 6EF6               	movwf	tblptrl,c
 17878  04AE' 0E00'              	movlw	high (_PIN_SJ6_DEF+4)
 17879  04B0' 6EF7               	movwf	tblptrh,c
 17880  04B2'                    	if	0	;tblptru may be non-zero
 17881  04B2'                    	endif
 17882  04B2'                    	if	0	;tblptru may be non-zero
 17883  04B2'                    	endif
 17884  04B2' 0008               	tblrd		*
 17885  04B4' CFF5 F012'         	movff	tablat,??_init_gpios
 17886  04B8' 0E00'              	movlw	low (_PIN_SJ6_DEF+2)
 17887  04BA' 6EF6               	movwf	tblptrl,c
 17888  04BC' 0E00'              	movlw	high (_PIN_SJ6_DEF+2)
 17889  04BE' 6EF7               	movwf	tblptrh,c
 17890  04C0'                    	if	0	;tblptru may be non-zero
 17891  04C0'                    	endif
 17892  04C0'                    	if	0	;tblptru may be non-zero
 17893  04C0'                    	endif
 17894  04C0' 0009               	tblrd		*+
 17895  04C2' CFF5 FFD9          	movff	tablat,fsr2l
 17896  04C6' 0009               	tblrd		*+
 17897  04C8' CFF5 FFDA          	movff	tablat,fsr2h
 17898  04CC' 5000'              	movf	??_init_gpios^0,w,c
 17899  04CE' 12DF               	iorwf	indf2,f,c
 17900  04D0'                    
 17901                           ;src/gpio.c: 65:     *((PIN_SJ6)->pPORT) |= (PIN_SJ6)->mask;
 17902  04D0' 0E00'              	movlw	low (_PIN_SJ6_DEF+4)
 17903  04D2' 6EF6               	movwf	tblptrl,c
 17904  04D4' 0E00'              	movlw	high (_PIN_SJ6_DEF+4)
 17905  04D6' 6EF7               	movwf	tblptrh,c
 17906  04D8'                    	if	0	;tblptru may be non-zero
 17907  04D8'                    	endif
 17908  04D8'                    	if	0	;tblptru may be non-zero
 17909  04D8'                    	endif
 17910  04D8' 0008               	tblrd		*
 17911  04DA' CFF5 F012'         	movff	tablat,??_init_gpios
 17912  04DE' 0E00'              	movlw	low _PIN_SJ6_DEF
 17913  04E0' 6EF6               	movwf	tblptrl,c
 17914  04E2'                    	if	1	;There is more than 1 active tblptr byte
 17915  04E2' 0E00'              	movlw	high _PIN_SJ6_DEF
 17916  04E4' 6EF7               	movwf	tblptrh,c
 17917  04E6'                    	endif
 17918  04E6'                    	if	0	;There are less than 3 active tblptr bytes
 17919  04E6'                    	endif
 17920  04E6' 0009               	tblrd		*+
 17921  04E8' CFF5 F013'         	movff	tablat,??_init_gpios+1
 17922  04EC' 0009               	tblrd		*+
 17923  04EE' CFF5 F014'         	movff	tablat,??_init_gpios+2
 17924  04F2' C013' FFD9         	movff	??_init_gpios+1,fsr2l
 17925  04F6' C014' FFDA         	movff	??_init_gpios+2,fsr2h
 17926  04FA' 5000'              	movf	??_init_gpios^0,w,c
 17927  04FC' 12DF               	iorwf	indf2,f,c
 17928  04FE'                    
 17929                           ;src/gpio.c: 68:     *((PIN_LNB_QRG2)->pTRIS) |= (PIN_LNB_QRG2)->mask;
 17930  04FE' 0E00'              	movlw	low (_PIN_LNB_QRG2_DEF+4)
 17931  0500' 6EF6               	movwf	tblptrl,c
 17932  0502' 0E00'              	movlw	high (_PIN_LNB_QRG2_DEF+4)
 17933  0504' 6EF7               	movwf	tblptrh,c
 17934  0506'                    	if	0	;tblptru may be non-zero
 17935  0506'                    	endif
 17936  0506'                    	if	0	;tblptru may be non-zero
 17937  0506'                    	endif
 17938  0506' 0008               	tblrd		*
 17939  0508' CFF5 F012'         	movff	tablat,??_init_gpios
 17940  050C' 0E00'              	movlw	low (_PIN_LNB_QRG2_DEF+2)
 17941  050E' 6EF6               	movwf	tblptrl,c
 17942  0510' 0E00'              	movlw	high (_PIN_LNB_QRG2_DEF+2)
 17943  0512' 6EF7               	movwf	tblptrh,c
 17944  0514'                    	if	0	;tblptru may be non-zero
 17945  0514'                    	endif
 17946  0514'                    	if	0	;tblptru may be non-zero
 17947  0514'                    	endif
 17948  0514' 0009               	tblrd		*+
 17949  0516' CFF5 FFD9          	movff	tablat,fsr2l
 17950  051A' 0009               	tblrd		*+
 17951  051C' CFF5 FFDA          	movff	tablat,fsr2h
 17952  0520' 5000'              	movf	??_init_gpios^0,w,c
 17953  0522' 12DF               	iorwf	indf2,f,c
 17954  0524'                    
 17955                           ;src/gpio.c: 69:     *((PIN_LNB_QRG2)->pPORT) |= (PIN_LNB_QRG2)->mask;
 17956  0524' 0E00'              	movlw	low (_PIN_LNB_QRG2_DEF+4)
 17957  0526' 6EF6               	movwf	tblptrl,c
 17958  0528' 0E00'              	movlw	high (_PIN_LNB_QRG2_DEF+4)
 17959  052A' 6EF7               	movwf	tblptrh,c
 17960  052C'                    	if	0	;tblptru may be non-zero
 17961  052C'                    	endif
 17962  052C'                    	if	0	;tblptru may be non-zero
 17963  052C'                    	endif
 17964  052C' 0008               	tblrd		*
 17965  052E' CFF5 F012'         	movff	tablat,??_init_gpios
 17966  0532' 0E00'              	movlw	low _PIN_LNB_QRG2_DEF
 17967  0534' 6EF6               	movwf	tblptrl,c
 17968  0536'                    	if	1	;There is more than 1 active tblptr byte
 17969  0536' 0E00'              	movlw	high _PIN_LNB_QRG2_DEF
 17970  0538' 6EF7               	movwf	tblptrh,c
 17971  053A'                    	endif
 17972  053A'                    	if	0	;There are less than 3 active tblptr bytes
 17973  053A'                    	endif
 17974  053A' 0009               	tblrd		*+
 17975  053C' CFF5 F013'         	movff	tablat,??_init_gpios+1
 17976  0540' 0009               	tblrd		*+
 17977  0542' CFF5 F014'         	movff	tablat,??_init_gpios+2
 17978  0546' C013' FFD9         	movff	??_init_gpios+1,fsr2l
 17979  054A' C014' FFDA         	movff	??_init_gpios+2,fsr2h
 17980  054E' 5000'              	movf	??_init_gpios^0,w,c
 17981  0550' 12DF               	iorwf	indf2,f,c
 17982  0552'                    
 17983                           ;src/gpio.c: 70:     *((PIN_LNB_QRG1)->pTRIS) |= (PIN_LNB_QRG1)->mask;
 17984  0552' 0E00'              	movlw	low (_PIN_LNB_QRG1_DEF+4)
 17985  0554' 6EF6               	movwf	tblptrl,c
 17986  0556' 0E00'              	movlw	high (_PIN_LNB_QRG1_DEF+4)
 17987  0558' 6EF7               	movwf	tblptrh,c
 17988  055A'                    	if	0	;tblptru may be non-zero
 17989  055A'                    	endif
 17990  055A'                    	if	0	;tblptru may be non-zero
 17991  055A'                    	endif
 17992  055A' 0008               	tblrd		*
 17993  055C' CFF5 F012'         	movff	tablat,??_init_gpios
 17994  0560' 0E00'              	movlw	low (_PIN_LNB_QRG1_DEF+2)
 17995  0562' 6EF6               	movwf	tblptrl,c
 17996  0564' 0E00'              	movlw	high (_PIN_LNB_QRG1_DEF+2)
 17997  0566' 6EF7               	movwf	tblptrh,c
 17998  0568'                    	if	0	;tblptru may be non-zero
 17999  0568'                    	endif
 18000  0568'                    	if	0	;tblptru may be non-zero
 18001  0568'                    	endif
 18002  0568' 0009               	tblrd		*+
 18003  056A' CFF5 FFD9          	movff	tablat,fsr2l
 18004  056E' 0009               	tblrd		*+
 18005  0570' CFF5 FFDA          	movff	tablat,fsr2h
 18006  0574' 5000'              	movf	??_init_gpios^0,w,c
 18007  0576' 12DF               	iorwf	indf2,f,c
 18008  0578'                    
 18009                           ;src/gpio.c: 71:     *((PIN_LNB_QRG1)->pPORT) |= (PIN_LNB_QRG1)->mask;
 18010  0578' 0E00'              	movlw	low (_PIN_LNB_QRG1_DEF+4)
 18011  057A' 6EF6               	movwf	tblptrl,c
 18012  057C' 0E00'              	movlw	high (_PIN_LNB_QRG1_DEF+4)
 18013  057E' 6EF7               	movwf	tblptrh,c
 18014  0580'                    	if	0	;tblptru may be non-zero
 18015  0580'                    	endif
 18016  0580'                    	if	0	;tblptru may be non-zero
 18017  0580'                    	endif
 18018  0580' 0008               	tblrd		*
 18019  0582' CFF5 F012'         	movff	tablat,??_init_gpios
 18020  0586' 0E00'              	movlw	low _PIN_LNB_QRG1_DEF
 18021  0588' 6EF6               	movwf	tblptrl,c
 18022  058A'                    	if	1	;There is more than 1 active tblptr byte
 18023  058A' 0E00'              	movlw	high _PIN_LNB_QRG1_DEF
 18024  058C' 6EF7               	movwf	tblptrh,c
 18025  058E'                    	endif
 18026  058E'                    	if	0	;There are less than 3 active tblptr bytes
 18027  058E'                    	endif
 18028  058E' 0009               	tblrd		*+
 18029  0590' CFF5 F013'         	movff	tablat,??_init_gpios+1
 18030  0594' 0009               	tblrd		*+
 18031  0596' CFF5 F014'         	movff	tablat,??_init_gpios+2
 18032  059A' C013' FFD9         	movff	??_init_gpios+1,fsr2l
 18033  059E' C014' FFDA         	movff	??_init_gpios+2,fsr2h
 18034  05A2' 5000'              	movf	??_init_gpios^0,w,c
 18035  05A4' 12DF               	iorwf	indf2,f,c
 18036  05A6'                    
 18037                           ;src/gpio.c: 74:     *((PIN_LNB_FAULT)->pTRIS) |= (PIN_LNB_FAULT)->mask;
 18038  05A6' 0E00'              	movlw	low (_PIN_LNB_FAULT_DEF+4)
 18039  05A8' 6EF6               	movwf	tblptrl,c
 18040  05AA' 0E00'              	movlw	high (_PIN_LNB_FAULT_DEF+4)
 18041  05AC' 6EF7               	movwf	tblptrh,c
 18042  05AE'                    	if	0	;tblptru may be non-zero
 18043  05AE'                    	endif
 18044  05AE'                    	if	0	;tblptru may be non-zero
 18045  05AE'                    	endif
 18046  05AE' 0008               	tblrd		*
 18047  05B0' CFF5 F012'         	movff	tablat,??_init_gpios
 18048  05B4' 0E00'              	movlw	low (_PIN_LNB_FAULT_DEF+2)
 18049  05B6' 6EF6               	movwf	tblptrl,c
 18050  05B8' 0E00'              	movlw	high (_PIN_LNB_FAULT_DEF+2)
 18051  05BA' 6EF7               	movwf	tblptrh,c
 18052  05BC'                    	if	0	;tblptru may be non-zero
 18053  05BC'                    	endif
 18054  05BC'                    	if	0	;tblptru may be non-zero
 18055  05BC'                    	endif
 18056  05BC' 0009               	tblrd		*+
 18057  05BE' CFF5 FFD9          	movff	tablat,fsr2l
 18058  05C2' 0009               	tblrd		*+
 18059  05C4' CFF5 FFDA          	movff	tablat,fsr2h
 18060  05C8' 5000'              	movf	??_init_gpios^0,w,c
 18061  05CA' 12DF               	iorwf	indf2,f,c
 18062  05CC' 0012               	return		;funcret
 18063  05CE'                    __end_of_init_gpios:
 18064                           	opt callstack 0
 18065                           
 18066 ;; *************** function _check_RXTX *****************
 18067 ;; Defined at:
 18068 ;;		line 78 in file "src/gpio.c"
 18069 ;; Parameters:    Size  Location     Type
 18070 ;;		None
 18071 ;; Auto vars:     Size  Location     Type
 18072 ;;  i               2   16[COMRAM] int 
 18073 ;; Return value:  Size  Location     Type
 18074 ;;                  1    wreg      void 
 18075 ;; Registers used:
 18076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 18077 ;; Tracked objects:
 18078 ;;		On entry : 0/0
 18079 ;;		On exit  : 0/0
 18080 ;;		Unchanged: 0/0
 18081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18082 ;;      Params:         0       0       0       0       0       0       0
 18083 ;;      Locals:         2       0       0       0       0       0       0
 18084 ;;      Temps:          3       0       0       0       0       0       0
 18085 ;;      Totals:         5       0       0       0       0       0       0
 18086 ;;Total ram usage:        5 bytes
 18087 ;; Hardware stack levels used:    1
 18088 ;; Hardware stack levels required when called:    2
 18089 ;; This function calls:
 18090 ;;		Nothing
 18091 ;; This function is called by:
 18092 ;;		_init_gpios
 18093 ;; This function uses a non-reentrant model
 18094 ;;
 18095                           
 18096                           	psect	text59
 18097  0000'                    __ptext59:
 18098                           	opt callstack 0
 18099  0000'                    _check_RXTX:
 18100                           	opt callstack 27
 18101  0000'                    
 18102                           ;src/gpio.c: 80:  *((PIN_USART_TX)->pTRIS) &= ~(PIN_USART_TX)->mask;
 18103  0000' 0E00'              	movlw	low (_PIN_USART_TX_DEF+4)
 18104  0002' 6EF6               	movwf	tblptrl,c
 18105  0004' 0E00'              	movlw	high (_PIN_USART_TX_DEF+4)
 18106  0006' 6EF7               	movwf	tblptrh,c
 18107  0008'                    	if	0	;tblptru may be non-zero
 18108  0008'                    	endif
 18109  0008'                    	if	0	;tblptru may be non-zero
 18110  0008'                    	endif
 18111  0008' 0008               	tblrd		*
 18112  000A' 50F5               	movf	tablat,w,c
 18113  000C' 0AFF               	xorlw	255
 18114  000E' 6E00'              	movwf	??_check_RXTX^0,c
 18115  0010' 0E00'              	movlw	low (_PIN_USART_TX_DEF+2)
 18116  0012' 6EF6               	movwf	tblptrl,c
 18117  0014' 0E00'              	movlw	high (_PIN_USART_TX_DEF+2)
 18118  0016' 6EF7               	movwf	tblptrh,c
 18119  0018'                    	if	0	;tblptru may be non-zero
 18120  0018'                    	endif
 18121  0018'                    	if	0	;tblptru may be non-zero
 18122  0018'                    	endif
 18123  0018' 0009               	tblrd		*+
 18124  001A' CFF5 FFD9          	movff	tablat,fsr2l
 18125  001E' 0009               	tblrd		*+
 18126  0020' CFF5 FFDA          	movff	tablat,fsr2h
 18127  0024' 5000'              	movf	??_check_RXTX^0,w,c
 18128  0026' 16DF               	andwf	indf2,f,c
 18129                           
 18130                           ;src/gpio.c: 81:     *((PIN_USART_RX)->pTRIS) |= (PIN_USART_RX)->mask;
 18131  0028' 0E00'              	movlw	low (_PIN_USART_RX_DEF+4)
 18132  002A' 6EF6               	movwf	tblptrl,c
 18133  002C' 0E00'              	movlw	high (_PIN_USART_RX_DEF+4)
 18134  002E' 6EF7               	movwf	tblptrh,c
 18135  0030'                    	if	0	;tblptru may be non-zero
 18136  0030'                    	endif
 18137  0030'                    	if	0	;tblptru may be non-zero
 18138  0030'                    	endif
 18139  0030' 0008               	tblrd		*
 18140  0032' CFF5 F00D'         	movff	tablat,??_check_RXTX
 18141  0036' 0E00'              	movlw	low (_PIN_USART_RX_DEF+2)
 18142  0038' 6EF6               	movwf	tblptrl,c
 18143  003A' 0E00'              	movlw	high (_PIN_USART_RX_DEF+2)
 18144  003C' 6EF7               	movwf	tblptrh,c
 18145  003E'                    	if	0	;tblptru may be non-zero
 18146  003E'                    	endif
 18147  003E'                    	if	0	;tblptru may be non-zero
 18148  003E'                    	endif
 18149  003E' 0009               	tblrd		*+
 18150  0040' CFF5 FFD9          	movff	tablat,fsr2l
 18151  0044' 0009               	tblrd		*+
 18152  0046' CFF5 FFDA          	movff	tablat,fsr2h
 18153  004A' 5000'              	movf	??_check_RXTX^0,w,c
 18154  004C' 12DF               	iorwf	indf2,f,c
 18155  004E'                    
 18156                           ;src/gpio.c: 84:  for(int i=0; i<5; i++)
 18157  004E' 0E00               	movlw	0
 18158  0050' 6E00'              	movwf	(check_RXTX@i+1)^0,c
 18159  0052' 0E00               	movlw	0
 18160  0054' 6E00'              	movwf	check_RXTX@i^0,c
 18161  0056'                    l7845:
 18162                           
 18163                           ;src/gpio.c: 85:  {;src/gpio.c: 86:   *((PIN_USART_TX)->pPORT) &= ~(PIN_USART_TX)->mask;
 18164  0056' 0E00'              	movlw	low (_PIN_USART_TX_DEF+4)
 18165  0058' 6EF6               	movwf	tblptrl,c
 18166  005A' 0E00'              	movlw	high (_PIN_USART_TX_DEF+4)
 18167  005C' 6EF7               	movwf	tblptrh,c
 18168  005E'                    	if	0	;tblptru may be non-zero
 18169  005E'                    	endif
 18170  005E'                    	if	0	;tblptru may be non-zero
 18171  005E'                    	endif
 18172  005E' 0008               	tblrd		*
 18173  0060' 50F5               	movf	tablat,w,c
 18174  0062' 0AFF               	xorlw	255
 18175  0064' 6E00'              	movwf	??_check_RXTX^0,c
 18176  0066' 0E00'              	movlw	low _PIN_USART_TX_DEF
 18177  0068' 6EF6               	movwf	tblptrl,c
 18178  006A'                    	if	1	;There is more than 1 active tblptr byte
 18179  006A' 0E00'              	movlw	high _PIN_USART_TX_DEF
 18180  006C' 6EF7               	movwf	tblptrh,c
 18181  006E'                    	endif
 18182  006E'                    	if	0	;There are less than 3 active tblptr bytes
 18183  006E'                    	endif
 18184  006E' 0009               	tblrd		*+
 18185  0070' CFF5 F00E'         	movff	tablat,??_check_RXTX+1
 18186  0074' 0009               	tblrd		*+
 18187  0076' CFF5 F00F'         	movff	tablat,??_check_RXTX+2
 18188  007A' C00E' FFD9         	movff	??_check_RXTX+1,fsr2l
 18189  007E' C00F' FFDA         	movff	??_check_RXTX+2,fsr2h
 18190  0082' 5000'              	movf	??_check_RXTX^0,w,c
 18191  0084' 16DF               	andwf	indf2,f,c
 18192  0086'                    
 18193                           ;src/gpio.c: 87:   _delaywdt((unsigned long)((10)*(8000000/4000.0)));
 18194  0086' 0E14               	movlw	20
 18195  0088' 6E00'              	movwf	??_check_RXTX^0,c
 18196  008A' 0E7D               	movlw	125
 18197  008C'                    u14087:
 18198  008C' 0004               	clrwdt	
 18199  008E' 2EE8               	decfsz	wreg,f,c
 18200  0090' D7FD               	bra	u14087
 18201  0092' 2E00'              	decfsz	??_check_RXTX^0,f,c
 18202  0094' D7FB               	bra	u14087
 18203  0096' 0004               	clrwdt	
 18204  0098' F000               	nop	
 18205  009A'                    
 18206                           ;src/gpio.c: 88:   if(((*((PIN_USART_RX)->pPORT) & (PIN_USART_RX)->mask) != 0))
 18207  009A' 0E00'              	movlw	low (_PIN_USART_RX_DEF+4)
 18208  009C' 6EF6               	movwf	tblptrl,c
 18209  009E' 0E00'              	movlw	high (_PIN_USART_RX_DEF+4)
 18210  00A0' 6EF7               	movwf	tblptrh,c
 18211  00A2'                    	if	0	;tblptru may be non-zero
 18212  00A2'                    	endif
 18213  00A2'                    	if	0	;tblptru may be non-zero
 18214  00A2'                    	endif
 18215  00A2' 0008               	tblrd		*
 18216  00A4' CFF5 F00D'         	movff	tablat,??_check_RXTX
 18217  00A8' 0E00'              	movlw	low _PIN_USART_RX_DEF
 18218  00AA' 6EF6               	movwf	tblptrl,c
 18219  00AC'                    	if	1	;There is more than 1 active tblptr byte
 18220  00AC' 0E00'              	movlw	high _PIN_USART_RX_DEF
 18221  00AE' 6EF7               	movwf	tblptrh,c
 18222  00B0'                    	endif
 18223  00B0'                    	if	0	;There are less than 3 active tblptr bytes
 18224  00B0'                    	endif
 18225  00B0' 0009               	tblrd		*+
 18226  00B2' CFF5 F00E'         	movff	tablat,??_check_RXTX+1
 18227  00B6' 0009               	tblrd		*+
 18228  00B8' CFF5 F00F'         	movff	tablat,??_check_RXTX+2
 18229  00BC' C00E' FFD9         	movff	??_check_RXTX+1,fsr2l
 18230  00C0' C00F' FFDA         	movff	??_check_RXTX+2,fsr2h
 18231  00C4' 50DF               	movf	indf2,w,c
 18232  00C6' 1400'              	andwf	??_check_RXTX^0,w,c
 18233  00C8' 0900               	iorlw	0
 18234  00CA' B4D8               	btfsc	status,2,c
 18235  00CC' EF00' F000'        	goto	u8971
 18236  00D0' EF00' F000'        	goto	u8970
 18237  00D4'                    u8971:
 18238  00D4' EF00' F000'        	goto	l7855
 18239  00D8'                    u8970:
 18240  00D8'                    l7851:
 18241                           
 18242                           ;src/gpio.c: 89:   {;src/gpio.c: 90:    ext10MHzReference = 0;
 18243  00D8' 0E00               	movlw	0
 18244  00DA' 0100               	movlb	0	; () banked
 18245  00DC' 6F00'              	movwf	_ext10MHzReference& (0+255),b
 18246  00DE' EF00' F000'        	goto	l951
 18247  00E2'                    l7855:
 18248                           
 18249                           ;src/gpio.c: 94:   *((PIN_USART_TX)->pPORT) |= (PIN_USART_TX)->mask;
 18250  00E2' 0E00'              	movlw	low (_PIN_USART_TX_DEF+4)
 18251  00E4' 6EF6               	movwf	tblptrl,c
 18252  00E6' 0E00'              	movlw	high (_PIN_USART_TX_DEF+4)
 18253  00E8' 6EF7               	movwf	tblptrh,c
 18254  00EA'                    	if	0	;tblptru may be non-zero
 18255  00EA'                    	endif
 18256  00EA'                    	if	0	;tblptru may be non-zero
 18257  00EA'                    	endif
 18258  00EA' 0008               	tblrd		*
 18259  00EC' CFF5 F00D'         	movff	tablat,??_check_RXTX
 18260  00F0' 0E00'              	movlw	low _PIN_USART_TX_DEF
 18261  00F2' 6EF6               	movwf	tblptrl,c
 18262  00F4'                    	if	1	;There is more than 1 active tblptr byte
 18263  00F4' 0E00'              	movlw	high _PIN_USART_TX_DEF
 18264  00F6' 6EF7               	movwf	tblptrh,c
 18265  00F8'                    	endif
 18266  00F8'                    	if	0	;There are less than 3 active tblptr bytes
 18267  00F8'                    	endif
 18268  00F8' 0009               	tblrd		*+
 18269  00FA' CFF5 F00E'         	movff	tablat,??_check_RXTX+1
 18270  00FE' 0009               	tblrd		*+
 18271  0100' CFF5 F00F'         	movff	tablat,??_check_RXTX+2
 18272  0104' C00E' FFD9         	movff	??_check_RXTX+1,fsr2l
 18273  0108' C00F' FFDA         	movff	??_check_RXTX+2,fsr2h
 18274  010C' 5000'              	movf	??_check_RXTX^0,w,c
 18275  010E' 12DF               	iorwf	indf2,f,c
 18276  0110'                    
 18277                           ;src/gpio.c: 95:   _delaywdt((unsigned long)((10)*(8000000/4000.0)));
 18278  0110' 0E14               	movlw	20
 18279  0112' 6E00'              	movwf	??_check_RXTX^0,c
 18280  0114' 0E7D               	movlw	125
 18281  0116'                    u14097:
 18282  0116' 0004               	clrwdt	
 18283  0118' 2EE8               	decfsz	wreg,f,c
 18284  011A' D7FD               	bra	u14097
 18285  011C' 2E00'              	decfsz	??_check_RXTX^0,f,c
 18286  011E' D7FB               	bra	u14097
 18287  0120' 0004               	clrwdt	
 18288  0122' F000               	nop	
 18289  0124'                    
 18290                           ;src/gpio.c: 96:   if(((*((PIN_USART_RX)->pPORT) & (PIN_USART_RX)->mask) != 0) == 0)
 18291  0124' 0E00'              	movlw	low (_PIN_USART_RX_DEF+4)
 18292  0126' 6EF6               	movwf	tblptrl,c
 18293  0128' 0E00'              	movlw	high (_PIN_USART_RX_DEF+4)
 18294  012A' 6EF7               	movwf	tblptrh,c
 18295  012C'                    	if	0	;tblptru may be non-zero
 18296  012C'                    	endif
 18297  012C'                    	if	0	;tblptru may be non-zero
 18298  012C'                    	endif
 18299  012C' 0008               	tblrd		*
 18300  012E' CFF5 F00D'         	movff	tablat,??_check_RXTX
 18301  0132' 0E00'              	movlw	low _PIN_USART_RX_DEF
 18302  0134' 6EF6               	movwf	tblptrl,c
 18303  0136'                    	if	1	;There is more than 1 active tblptr byte
 18304  0136' 0E00'              	movlw	high _PIN_USART_RX_DEF
 18305  0138' 6EF7               	movwf	tblptrh,c
 18306  013A'                    	endif
 18307  013A'                    	if	0	;There are less than 3 active tblptr bytes
 18308  013A'                    	endif
 18309  013A' 0009               	tblrd		*+
 18310  013C' CFF5 F00E'         	movff	tablat,??_check_RXTX+1
 18311  0140' 0009               	tblrd		*+
 18312  0142' CFF5 F00F'         	movff	tablat,??_check_RXTX+2
 18313  0146' C00E' FFD9         	movff	??_check_RXTX+1,fsr2l
 18314  014A' C00F' FFDA         	movff	??_check_RXTX+2,fsr2h
 18315  014E' 50DF               	movf	indf2,w,c
 18316  0150' 1400'              	andwf	??_check_RXTX^0,w,c
 18317  0152' 0900               	iorlw	0
 18318  0154' A4D8               	btfss	status,2,c
 18319  0156' EF00' F000'        	goto	u8981
 18320  015A' EF00' F000'        	goto	u8980
 18321  015E'                    u8981:
 18322  015E' EF00' F000'        	goto	l7865
 18323  0162'                    u8980:
 18324  0162' EF00' F000'        	goto	l7851
 18325  0166'                    l7865:
 18326                           
 18327                           ;src/gpio.c: 101:  }
 18328  0166' 4A00'              	infsnz	check_RXTX@i^0,f,c
 18329  0168' 2A00'              	incf	(check_RXTX@i+1)^0,f,c
 18330  016A' BE00'              	btfsc	(check_RXTX@i+1)^0,7,c
 18331  016C' EF00' F000'        	goto	u8991
 18332  0170' 5000'              	movf	(check_RXTX@i+1)^0,w,c
 18333  0172' E109               	bnz	u8990
 18334  0174' 0E05               	movlw	5
 18335  0176' 5C00'              	subwf	check_RXTX@i^0,w,c
 18336  0178' A0D8               	btfss	status,0,c
 18337  017A' EF00' F000'        	goto	u8991
 18338  017E' EF00' F000'        	goto	u8990
 18339  0182'                    u8991:
 18340  0182' EF00' F000'        	goto	l7845
 18341  0186'                    u8990:
 18342  0186'                    
 18343                           ;src/gpio.c: 103:  ext10MHzReference = 1;
 18344  0186' 0E01               	movlw	1
 18345  0188' 0100               	movlb	0	; () banked
 18346  018A' 6F00'              	movwf	_ext10MHzReference& (0+255),b
 18347  018C'                    l951:
 18348                           
 18349                           ; BSR set to: 0
 18350  018C' 0012               	return		;funcret
 18351  018E'                    __end_of_check_RXTX:
 18352                           	opt callstack 0
 18353                           
 18354 ;; *************** function _i2c_native_init *****************
 18355 ;; Defined at:
 18356 ;;		line 27 in file "src/driver/i2c_native.c"
 18357 ;; Parameters:    Size  Location     Type
 18358 ;;  ctx             2   52[COMRAM] PTR struct i2c_data_nati
 18359 ;;		 -> g_i2c_bus(8), 
 18360 ;;  baud            4   54[COMRAM] unsigned long 
 18361 ;; Auto vars:     Size  Location     Type
 18362 ;;		None
 18363 ;; Return value:  Size  Location     Type
 18364 ;;                  1    wreg      void 
 18365 ;; Registers used:
 18366 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18367 ;; Tracked objects:
 18368 ;;		On entry : 0/0
 18369 ;;		On exit  : 0/0
 18370 ;;		Unchanged: 0/0
 18371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18372 ;;      Params:         6       0       0       0       0       0       0
 18373 ;;      Locals:         0       0       0       0       0       0       0
 18374 ;;      Temps:          0       0       0       0       0       0       0
 18375 ;;      Totals:         6       0       0       0       0       0       0
 18376 ;;Total ram usage:        6 bytes
 18377 ;; Hardware stack levels used:    1
 18378 ;; Hardware stack levels required when called:    4
 18379 ;; This function calls:
 18380 ;;		_i2c_reset
 18381 ;;		_memset
 18382 ;; This function is called by:
 18383 ;;		_main
 18384 ;; This function uses a non-reentrant model
 18385 ;;
 18386                           
 18387                           	psect	text60
 18388  0000'                    __ptext60:
 18389                           	opt callstack 0
 18390  0000'                    _i2c_native_init:
 18391                           	opt callstack 26
 18392  0000'                    
 18393                           ;src/driver/i2c_native.c: 27: void i2c_native_init(i2c_data_native *ctx, u32 baud);src/d
      +                          river/i2c_native.c: 28: {;src/driver/i2c_native.c: 29:     memset(ctx, 0, sizeof(*ctx));
 18394  0000' C034' F00D'        	movff	i2c_native_init@ctx,memset@dest
 18395  0004' C035' F00E'        	movff	i2c_native_init@ctx+1,memset@dest+1
 18396  0008' 0E00               	movlw	0
 18397  000A' 6E00'              	movwf	(memset@c+1)^0,c
 18398  000C' 0E00               	movlw	0
 18399  000E' 6E00'              	movwf	memset@c^0,c
 18400  0010' 0E00               	movlw	0
 18401  0012' 6E00'              	movwf	(memset@n+1)^0,c
 18402  0014' 0E08               	movlw	8
 18403  0016' 6E00'              	movwf	memset@n^0,c
 18404  0018' EC00' F000'        	call	_memset	;wreg free
 18405  001C'                    
 18406                           ;src/driver/i2c_native.c: 30:     ctx->baud = baud;
 18407  001C' EE20 F004          	lfsr	2,4
 18408  0020' 5000'              	movf	i2c_native_init@ctx^0,w,c
 18409  0022' 26D9               	addwf	fsr2l,f,c
 18410  0024' 5000'              	movf	(i2c_native_init@ctx+1)^0,w,c
 18411  0026' 22DA               	addwfc	fsr2h,f,c
 18412  0028' C036' FFDE         	movff	i2c_native_init@baud,postinc2
 18413  002C' C037' FFDE         	movff	i2c_native_init@baud+1,postinc2
 18414  0030' C038' FFDE         	movff	i2c_native_init@baud+2,postinc2
 18415  0034' C039' FFDE         	movff	i2c_native_init@baud+3,postinc2
 18416  0038'                    
 18417                           ;src/driver/i2c_native.c: 33:  i2c_reset(ctx);
 18418  0038' C034' F026'        	movff	i2c_native_init@ctx,i2c_reset@ctx
 18419  003C' C035' F027'        	movff	i2c_native_init@ctx+1,i2c_reset@ctx+1
 18420  0040' EC00' F000'        	call	_i2c_reset	;wreg free
 18421  0044'                    
 18422                           ;src/driver/i2c_native.c: 36:  ctx->ops.transfer = i2c_transfer_native;
 18423  0044' C034' FFD9         	movff	i2c_native_init@ctx,fsr2l
 18424  0048' C035' FFDA         	movff	i2c_native_init@ctx+1,fsr2h
 18425  004C' 0E00'              	movlw	low _i2c_transfer_native
 18426  004E' 6EDE               	movwf	postinc2,c
 18427  0050' 0E00'              	movlw	high _i2c_transfer_native
 18428  0052' 6EDD               	movwf	postdec2,c
 18429  0054' 0012               	return		;funcret
 18430  0056'                    __end_of_i2c_native_init:
 18431                           	opt callstack 0
 18432                           
 18433 ;; *************** function _check_si5328_status *****************
 18434 ;; Defined at:
 18435 ;;		line 500 in file "src/driver/si5328.c"
 18436 ;; Parameters:    Size  Location     Type
 18437 ;;  i2c             2   43[BANK0 ] PTR struct i2c_dev__
 18438 ;;		 -> g_i2c_bus(8), 
 18439 ;;  addr            1   45[BANK0 ] unsigned char 
 18440 ;; Auto vars:     Size  Location     Type
 18441 ;;  res             1   51[BANK0 ] unsigned char 
 18442 ;;  lock            1   50[BANK0 ] unsigned char 
 18443 ;;  ret             1   49[BANK0 ] unsigned char 
 18444 ;; Return value:  Size  Location     Type
 18445 ;;                  1    wreg      unsigned char 
 18446 ;; Registers used:
 18447 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18448 ;; Tracked objects:
 18449 ;;		On entry : 0/0
 18450 ;;		On exit  : 0/0
 18451 ;;		Unchanged: 0/0
 18452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18453 ;;      Params:         0       3       0       0       0       0       0
 18454 ;;      Locals:         0       3       0       0       0       0       0
 18455 ;;      Temps:          0       3       0       0       0       0       0
 18456 ;;      Totals:         0       9       0       0       0       0       0
 18457 ;;Total ram usage:        9 bytes
 18458 ;; Hardware stack levels used:    1
 18459 ;; Hardware stack levels required when called:   10
 18460 ;; This function calls:
 18461 ;;		_printf
 18462 ;;		_read_reg
 18463 ;; This function is called by:
 18464 ;;		_main
 18465 ;; This function uses a non-reentrant model
 18466 ;;
 18467                           
 18468                           	psect	text61
 18469  0000'                    __ptext61:
 18470                           	opt callstack 0
 18471  0000'                    _check_si5328_status:
 18472                           	opt callstack 20
 18473  0000'                    
 18474                           ;src/driver/si5328.c: 500: u8 check_si5328_status(i2c_dev i2c, u8 addr);src/driver/si532
      +                          8.c: 501: {;src/driver/si5328.c: 502:  u8 res, ret = 0;
 18475  0000' 0E00               	movlw	0
 18476  0002' 0100               	movlb	0	; () banked
 18477  0004' 6F00'              	movwf	check_si5328_status@ret& (0+255),b
 18478  0006'                    
 18479                           ; BSR set to: 0
 18480                           ;src/driver/si5328.c: 503:  static u8 lastlock = 0xff;;src/driver/si5328.c: 505:  u8 loc
      +                          k = ((*((PIN_SI5328_LOL)->pPORT) & (PIN_SI5328_LOL)->mask) != 0);
 18481  0006' 0E00'              	movlw	low (_PIN_SI5328_LOL_DEF+4)
 18482  0008' 6EF6               	movwf	tblptrl,c
 18483  000A' 0E00'              	movlw	high (_PIN_SI5328_LOL_DEF+4)
 18484  000C' 6EF7               	movwf	tblptrh,c
 18485  000E'                    	if	0	;tblptru may be non-zero
 18486  000E'                    	endif
 18487  000E'                    	if	0	;tblptru may be non-zero
 18488  000E'                    	endif
 18489  000E' 0008               	tblrd		*
 18490  0010' CFF5 F02E'         	movff	tablat,??_check_si5328_status
 18491  0014' 0E00'              	movlw	low _PIN_SI5328_LOL_DEF
 18492  0016' 6EF6               	movwf	tblptrl,c
 18493  0018'                    	if	1	;There is more than 1 active tblptr byte
 18494  0018' 0E00'              	movlw	high _PIN_SI5328_LOL_DEF
 18495  001A' 6EF7               	movwf	tblptrh,c
 18496  001C'                    	endif
 18497  001C'                    	if	0	;There are less than 3 active tblptr bytes
 18498  001C'                    	endif
 18499  001C' 0009               	tblrd		*+
 18500  001E' CFF5 F02F'         	movff	tablat,??_check_si5328_status+1
 18501  0022' 0009               	tblrd		*+
 18502  0024' CFF5 F030'         	movff	tablat,??_check_si5328_status+2
 18503  0028' C02F' FFD9         	movff	??_check_si5328_status+1,fsr2l
 18504  002C' C030' FFDA         	movff	??_check_si5328_status+2,fsr2h
 18505  0030' 50DF               	movf	indf2,w,c
 18506  0032' 1500'              	andwf	??_check_si5328_status& (0+255),w,b
 18507  0034' 0900               	iorlw	0
 18508  0036' A4D8               	btfss	status,2,c
 18509  0038' EF00' F000'        	goto	u13341
 18510  003C' EF00' F000'        	goto	u13340
 18511  0040'                    u13341:
 18512  0040' 0E01               	movlw	1
 18513  0042' EF00' F000'        	goto	u13350
 18514  0046'                    u13340:
 18515  0046' 0E00               	movlw	0
 18516  0048'                    u13350:
 18517  0048' 6F00'              	movwf	check_si5328_status@lock& (0+255),b
 18518  004A'                    
 18519                           ; BSR set to: 0
 18520                           ;src/driver/si5328.c: 506:  if(lock != lastlock)
 18521  004A' 5100'              	movf	check_si5328_status@lastlock& (0+255),w,b
 18522  004C' 1900'              	xorwf	check_si5328_status@lock& (0+255),w,b
 18523  004E' B4D8               	btfsc	status,2,c
 18524  0050' EF00' F000'        	goto	u13361
 18525  0054' EF00' F000'        	goto	u13360
 18526  0058'                    u13361:
 18527  0058' EF00' F000'        	goto	l10789
 18528  005C'                    u13360:
 18529  005C'                    
 18530                           ; BSR set to: 0
 18531                           ;src/driver/si5328.c: 507:  {;src/driver/si5328.c: 508:   lastlock = lock;
 18532  005C' C032' F00E'        	movff	check_si5328_status@lock,check_si5328_status@lastlock
 18533  0060'                    
 18534                           ; BSR set to: 0
 18535                           ;src/driver/si5328.c: 509:   if(lock == 1)
 18536  0060' 0500'              	decf	check_si5328_status@lock& (0+255),w,b
 18537  0062' A4D8               	btfss	status,2,c
 18538  0064' EF00' F000'        	goto	u13371
 18539  0068' EF00' F000'        	goto	u13370
 18540  006C'                    u13371:
 18541  006C' EF00' F000'        	goto	l10781
 18542  0070'                    u13370:
 18543  0070'                    
 18544                           ; BSR set to: 0
 18545                           ;src/driver/si5328.c: 510:   {;src/driver/si5328.c: 511:    printf("si:unlocked\n");
 18546  0070' 0E00'              	movlw	low STR_33
 18547  0072' 6F00'              	movwf	printf@fmt& (0+255),b
 18548  0074' 0E00'              	movlw	high STR_33
 18549  0076' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
 18550  0078' EC00' F000'        	call	_printf	;wreg free
 18551  007C'                    
 18552                           ;src/driver/si5328.c: 512:    si5328locked = 0;
 18553  007C' 0E00               	movlw	0
 18554  007E' 0100               	movlb	0	; () banked
 18555  0080' 6F00'              	movwf	_si5328locked& (0+255),b
 18556  0082'                    
 18557                           ; BSR set to: 0
 18558                           ;src/driver/si5328.c: 513:    *((PIN_LED_SI_LOCK)->pPORT) |= (PIN_LED_SI_LOCK)->mask;
 18559  0082' 0E00'              	movlw	low (_PIN_LED_SI_LOCK_DEF+4)
 18560  0084' 6EF6               	movwf	tblptrl,c
 18561  0086' 0E00'              	movlw	high (_PIN_LED_SI_LOCK_DEF+4)
 18562  0088' 6EF7               	movwf	tblptrh,c
 18563  008A'                    	if	0	;tblptru may be non-zero
 18564  008A'                    	endif
 18565  008A'                    	if	0	;tblptru may be non-zero
 18566  008A'                    	endif
 18567  008A' 0008               	tblrd		*
 18568  008C' CFF5 F02E'         	movff	tablat,??_check_si5328_status
 18569  0090' 0E00'              	movlw	low _PIN_LED_SI_LOCK_DEF
 18570  0092' 6EF6               	movwf	tblptrl,c
 18571  0094'                    	if	1	;There is more than 1 active tblptr byte
 18572  0094' 0E00'              	movlw	high _PIN_LED_SI_LOCK_DEF
 18573  0096' 6EF7               	movwf	tblptrh,c
 18574  0098'                    	endif
 18575  0098'                    	if	0	;There are less than 3 active tblptr bytes
 18576  0098'                    	endif
 18577  0098' 0009               	tblrd		*+
 18578  009A' CFF5 F02F'         	movff	tablat,??_check_si5328_status+1
 18579  009E' 0009               	tblrd		*+
 18580  00A0' CFF5 F030'         	movff	tablat,??_check_si5328_status+2
 18581  00A4' C02F' FFD9         	movff	??_check_si5328_status+1,fsr2l
 18582  00A8' C030' FFDA         	movff	??_check_si5328_status+2,fsr2h
 18583  00AC' 5100'              	movf	??_check_si5328_status& (0+255),w,b
 18584  00AE' 12DF               	iorwf	indf2,f,c
 18585                           
 18586                           ;src/driver/si5328.c: 514:   }
 18587  00B0' EF00' F000'        	goto	l10789
 18588  00B4'                    l10781:
 18589                           
 18590                           ; BSR set to: 0
 18591                           ;src/driver/si5328.c: 516:   {;src/driver/si5328.c: 517:    printf("si:locked\n");
 18592  00B4' 0E00'              	movlw	low STR_34
 18593  00B6' 6F00'              	movwf	printf@fmt& (0+255),b
 18594  00B8' 0E00'              	movlw	high STR_34
 18595  00BA' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
 18596  00BC' EC00' F000'        	call	_printf	;wreg free
 18597  00C0'                    
 18598                           ;src/driver/si5328.c: 518:    si5328locked = 1;
 18599  00C0' 0E01               	movlw	1
 18600  00C2' 0100               	movlb	0	; () banked
 18601  00C4' 6F00'              	movwf	_si5328locked& (0+255),b
 18602  00C6'                    
 18603                           ; BSR set to: 0
 18604                           ;src/driver/si5328.c: 519:    *((PIN_LED_SI_LOCK)->pPORT) &= ~(PIN_LED_SI_LOCK)->mask;
 18605  00C6' 0E00'              	movlw	low (_PIN_LED_SI_LOCK_DEF+4)
 18606  00C8' 6EF6               	movwf	tblptrl,c
 18607  00CA' 0E00'              	movlw	high (_PIN_LED_SI_LOCK_DEF+4)
 18608  00CC' 6EF7               	movwf	tblptrh,c
 18609  00CE'                    	if	0	;tblptru may be non-zero
 18610  00CE'                    	endif
 18611  00CE'                    	if	0	;tblptru may be non-zero
 18612  00CE'                    	endif
 18613  00CE' 0008               	tblrd		*
 18614  00D0' 50F5               	movf	tablat,w,c
 18615  00D2' 0AFF               	xorlw	255
 18616  00D4' 6F00'              	movwf	??_check_si5328_status& (0+255),b
 18617  00D6' 0E00'              	movlw	low _PIN_LED_SI_LOCK_DEF
 18618  00D8' 6EF6               	movwf	tblptrl,c
 18619  00DA'                    	if	1	;There is more than 1 active tblptr byte
 18620  00DA' 0E00'              	movlw	high _PIN_LED_SI_LOCK_DEF
 18621  00DC' 6EF7               	movwf	tblptrh,c
 18622  00DE'                    	endif
 18623  00DE'                    	if	0	;There are less than 3 active tblptr bytes
 18624  00DE'                    	endif
 18625  00DE' 0009               	tblrd		*+
 18626  00E0' CFF5 F02F'         	movff	tablat,??_check_si5328_status+1
 18627  00E4' 0009               	tblrd		*+
 18628  00E6' CFF5 F030'         	movff	tablat,??_check_si5328_status+2
 18629  00EA' C02F' FFD9         	movff	??_check_si5328_status+1,fsr2l
 18630  00EE' C030' FFDA         	movff	??_check_si5328_status+2,fsr2h
 18631  00F2' 5100'              	movf	??_check_si5328_status& (0+255),w,b
 18632  00F4' 16DF               	andwf	indf2,f,c
 18633  00F6'                    
 18634                           ; BSR set to: 0
 18635                           ;src/driver/si5328.c: 520:    ret = 1;
 18636  00F6' 0E01               	movlw	1
 18637  00F8' 6F00'              	movwf	check_si5328_status@ret& (0+255),b
 18638  00FA'                    l10789:
 18639                           
 18640                           ; BSR set to: 0
 18641                           ;src/driver/si5328.c: 542:  static u8 lastinput = 0xff;;src/driver/si5328.c: 543:  res =
      +                           read_reg(i2c, addr, 128);
 18642  00FA' C02B' F05D'        	movff	check_si5328_status@i2c,read_reg@i2c
 18643  00FE' C02C' F05E'        	movff	check_si5328_status@i2c+1,read_reg@i2c+1
 18644  0102' C02D' F05F'        	movff	check_si5328_status@addr,read_reg@addr
 18645  0106' 0E80               	movlw	128
 18646  0108' 6E00'              	movwf	read_reg@reg^0,c
 18647  010A' EC00' F000'        	call	_read_reg	;wreg free
 18648  010E' 0100               	movlb	0	; () banked
 18649  0110' 6F00'              	movwf	check_si5328_status@res& (0+255),b
 18650  0112'                    
 18651                           ; BSR set to: 0
 18652                           ;src/driver/si5328.c: 544:  if(res != lastinput)
 18653  0112' 5100'              	movf	check_si5328_status@lastinput& (0+255),w,b
 18654  0114' 1900'              	xorwf	check_si5328_status@res& (0+255),w,b
 18655  0116' B4D8               	btfsc	status,2,c
 18656  0118' EF00' F000'        	goto	u13381
 18657  011C' EF00' F000'        	goto	u13380
 18658  0120'                    u13381:
 18659  0120' EF00' F000'        	goto	l518
 18660  0124'                    u13380:
 18661  0124'                    
 18662                           ; BSR set to: 0
 18663                           ;src/driver/si5328.c: 545:  {;src/driver/si5328.c: 547:   if(res & 1)
 18664  0124' A100'              	btfss	check_si5328_status@res& (0+255),0,b
 18665  0126' EF00' F000'        	goto	u13391
 18666  012A' EF00' F000'        	goto	u13390
 18667  012E'                    u13391:
 18668  012E' EF00' F000'        	goto	l10797
 18669  0132'                    u13390:
 18670  0132'                    
 18671                           ; BSR set to: 0
 18672                           ;src/driver/si5328.c: 548:   {;src/driver/si5328.c: 550:    GPS_fix = 1;
 18673  0132' 0E01               	movlw	1
 18674  0134' 6F00'              	movwf	_GPS_fix& (0+255),b
 18675  0136'                    l10797:
 18676                           
 18677                           ; BSR set to: 0
 18678                           ;src/driver/si5328.c: 552:   if(res & 2)
 18679  0136' A300'              	btfss	check_si5328_status@res& (0+255),1,b
 18680  0138' EF00' F000'        	goto	u13401
 18681  013C' EF00' F000'        	goto	u13400
 18682  0140'                    u13401:
 18683  0140' EF00' F000'        	goto	l10801
 18684  0144'                    u13400:
 18685  0144'                    
 18686                           ; BSR set to: 0
 18687                           ;src/driver/si5328.c: 553:   {;src/driver/si5328.c: 555:    GPS_fix = 0;
 18688  0144' 0E00               	movlw	0
 18689  0146' 6F00'              	movwf	_GPS_fix& (0+255),b
 18690  0148'                    l10801:
 18691                           
 18692                           ; BSR set to: 0
 18693                           ;src/driver/si5328.c: 557:   lastinput = res;
 18694  0148' C033' F00D'        	movff	check_si5328_status@res,check_si5328_status@lastinput
 18695  014C'                    l518:
 18696                           
 18697                           ; BSR set to: 0
 18698                           ;src/driver/si5328.c: 571:  return ret;
 18699  014C' 5100'              	movf	check_si5328_status@ret& (0+255),w,b
 18700  014E'                    
 18701                           ; BSR set to: 0
 18702  014E' 0012               	return		;funcret
 18703  0150'                    __end_of_check_si5328_status:
 18704                           	opt callstack 0
 18705                           
 18706 ;; *************** function _read_reg *****************
 18707 ;; Defined at:
 18708 ;;		line 589 in file "src/driver/si5328.c"
 18709 ;; Parameters:    Size  Location     Type
 18710 ;;  i2c             2   93[COMRAM] PTR struct i2c_dev__
 18711 ;;		 -> g_i2c_bus(8), 
 18712 ;;  addr            1   95[COMRAM] unsigned char 
 18713 ;;  reg             1   96[COMRAM] unsigned char 
 18714 ;; Auto vars:     Size  Location     Type
 18715 ;;  res             2    0        int 
 18716 ;;  val             1   99[COMRAM] unsigned char 
 18717 ;; Return value:  Size  Location     Type
 18718 ;;                  1    wreg      unsigned char 
 18719 ;; Registers used:
 18720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 18721 ;; Tracked objects:
 18722 ;;		On entry : 0/0
 18723 ;;		On exit  : 0/0
 18724 ;;		Unchanged: 0/0
 18725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18726 ;;      Params:         4       0       0       0       0       0       0
 18727 ;;      Locals:         3       0       0       0       0       0       0
 18728 ;;      Temps:          0       0       0       0       0       0       0
 18729 ;;      Totals:         7       0       0       0       0       0       0
 18730 ;;Total ram usage:        7 bytes
 18731 ;; Hardware stack levels used:    1
 18732 ;; Hardware stack levels required when called:    8
 18733 ;; This function calls:
 18734 ;;		_smbus8_read_byte
 18735 ;; This function is called by:
 18736 ;;		_check_si5328_status
 18737 ;; This function uses a non-reentrant model
 18738 ;;
 18739                           
 18740                           	psect	text62
 18741  0000'                    __ptext62:
 18742                           	opt callstack 0
 18743  0000'                    _read_reg:
 18744                           	opt callstack 21
 18745  0000' C05D' F057'        	movff	read_reg@i2c,smbus8_read_byte@dev
 18746  0004' C05E' F058'        	movff	read_reg@i2c+1,smbus8_read_byte@dev+1
 18747  0008' C05F' F059'        	movff	read_reg@addr,smbus8_read_byte@addr
 18748  000C' C060' F05A'        	movff	read_reg@reg,smbus8_read_byte@reg
 18749  0010' 0E00'              	movlw	low read_reg@val
 18750  0012' 6E00'              	movwf	smbus8_read_byte@data^0,c
 18751  0014' 0E00'              	movlw	high read_reg@val
 18752  0016' 6E00'              	movwf	(smbus8_read_byte@data+1)^0,c
 18753  0018' EC00' F000'        	call	_smbus8_read_byte	;wreg free
 18754  001C'                    
 18755                           ;src/driver/si5328.c: 594:  return val;
 18756  001C' 5000'              	movf	read_reg@val^0,w,c
 18757  001E' 0012               	return		;funcret
 18758  0020'                    __end_of_read_reg:
 18759                           	opt callstack 0
 18760                           
 18761 ;; *************** function _smbus8_read_byte *****************
 18762 ;; Defined at:
 18763 ;;		line 116 in file "src/driver/base/i2c.c"
 18764 ;; Parameters:    Size  Location     Type
 18765 ;;  dev             2   87[COMRAM] PTR struct i2c_dev__
 18766 ;;		 -> g_i2c_bus(8), 
 18767 ;;  addr            1   89[COMRAM] unsigned char 
 18768 ;;  reg             1   90[COMRAM] unsigned char 
 18769 ;;  data            2   91[COMRAM] PTR unsigned char 
 18770 ;;		 -> read_reg@val(1), LNB_error(1), lnb_do_configure@value(1), 
 18771 ;; Auto vars:     Size  Location     Type
 18772 ;;  msg            14    0[BANK0 ] struct i2c_msg[2]
 18773 ;; Return value:  Size  Location     Type
 18774 ;;                  2   87[COMRAM] int 
 18775 ;; Registers used:
 18776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 18777 ;; Tracked objects:
 18778 ;;		On entry : 0/0
 18779 ;;		On exit  : 0/0
 18780 ;;		Unchanged: 0/0
 18781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18782 ;;      Params:         6       0       0       0       0       0       0
 18783 ;;      Locals:         0      14       0       0       0       0       0
 18784 ;;      Temps:          0       0       0       0       0       0       0
 18785 ;;      Totals:         6      14       0       0       0       0       0
 18786 ;;Total ram usage:       20 bytes
 18787 ;; Hardware stack levels used:    1
 18788 ;; Hardware stack levels required when called:    7
 18789 ;; This function calls:
 18790 ;;		_i2c_transfer
 18791 ;; This function is called by:
 18792 ;;		_lnb_do_configure
 18793 ;;		_check_LNB_status
 18794 ;;		_read_reg
 18795 ;; This function uses a non-reentrant model
 18796 ;;
 18797                           
 18798                           	psect	text63
 18799  0000'                    __ptext63:
 18800                           	opt callstack 0
 18801  0000'                    _smbus8_read_byte:
 18802                           	opt callstack 21
 18803  0000'                    
 18804                           ;src/driver/base/i2c.c: 116: int smbus8_read_byte(i2c_dev dev, u8 addr, u8 reg, u8 *data
      +                          );src/driver/base/i2c.c: 117: {;src/driver/base/i2c.c: 118:  i2c_msg msg[2];;src/driver/
      +                          base/i2c.c: 120:  msg[0].addr = addr;
 18805  0000' C059' F000'        	movff	smbus8_read_byte@addr,smbus8_read_byte@msg
 18806  0004' 0100               	movlb	0	; () banked
 18807  0006' 6B00'              	clrf	(smbus8_read_byte@msg+1)& (0+255),b
 18808  0008'                    
 18809                           ; BSR set to: 0
 18810                           ;src/driver/base/i2c.c: 121:  msg[0].flags = (1<<1);
 18811  0008' 0E02               	movlw	2
 18812  000A' 6F00'              	movwf	(smbus8_read_byte@msg+2)& (0+255),b
 18813                           
 18814                           ;src/driver/base/i2c.c: 122:  msg[0].len = 1;
 18815  000C' 0E00               	movlw	0
 18816  000E' 6F00'              	movwf	(smbus8_read_byte@msg+4)& (0+255),b
 18817  0010' 0E01               	movlw	1
 18818  0012' 6F00'              	movwf	(smbus8_read_byte@msg+3)& (0+255),b
 18819  0014'                    
 18820                           ; BSR set to: 0
 18821                           ;src/driver/base/i2c.c: 123:  msg[0].data = &reg;
 18822  0014' 0E00'              	movlw	low smbus8_read_byte@reg
 18823  0016' 6F00'              	movwf	(smbus8_read_byte@msg+5)& (0+255),b
 18824  0018' 0E00'              	movlw	high smbus8_read_byte@reg
 18825  001A' 6F00'              	movwf	(smbus8_read_byte@msg+6)& (0+255),b
 18826  001C'                    
 18827                           ; BSR set to: 0
 18828                           ;src/driver/base/i2c.c: 125:  msg[1].addr = addr;
 18829  001C' C059' F007'        	movff	smbus8_read_byte@addr,smbus8_read_byte@msg+7
 18830  0020' 6B00'              	clrf	(smbus8_read_byte@msg+8)& (0+255),b
 18831  0022'                    
 18832                           ; BSR set to: 0
 18833                           ;src/driver/base/i2c.c: 126:  msg[1].flags = (1<<1) | (1<<2) | (1<<0);
 18834  0022' 0E07               	movlw	7
 18835  0024' 6F00'              	movwf	(smbus8_read_byte@msg+9)& (0+255),b
 18836  0026'                    
 18837                           ; BSR set to: 0
 18838                           ;src/driver/base/i2c.c: 127:  msg[1].len = 1;
 18839  0026' 0E00               	movlw	0
 18840  0028' 6F00'              	movwf	(smbus8_read_byte@msg+11)& (0+255),b
 18841  002A' 0E01               	movlw	1
 18842  002C' 6F00'              	movwf	(smbus8_read_byte@msg+10)& (0+255),b
 18843  002E'                    
 18844                           ; BSR set to: 0
 18845                           ;src/driver/base/i2c.c: 128:  msg[1].data = data;
 18846  002E' C05B' F00C'        	movff	smbus8_read_byte@data,smbus8_read_byte@msg+12
 18847  0032' C05C' F00D'        	movff	smbus8_read_byte@data+1,smbus8_read_byte@msg+13
 18848  0036'                    
 18849                           ; BSR set to: 0
 18850                           ;src/driver/base/i2c.c: 130:  return i2c_transfer(dev, msg, 2);
 18851  0036' C057' F051'        	movff	smbus8_read_byte@dev,i2c_transfer@dev
 18852  003A' C058' F052'        	movff	smbus8_read_byte@dev+1,i2c_transfer@dev+1
 18853  003E' 0E00'              	movlw	low smbus8_read_byte@msg
 18854  0040' 6E00'              	movwf	i2c_transfer@msg^0,c
 18855  0042' 0E00'              	movlw	high smbus8_read_byte@msg
 18856  0044' 6E00'              	movwf	(i2c_transfer@msg+1)^0,c
 18857  0046' 0E00               	movlw	0
 18858  0048' 6E00'              	movwf	(i2c_transfer@num+1)^0,c
 18859  004A' 0E02               	movlw	2
 18860  004C' 6E00'              	movwf	i2c_transfer@num^0,c
 18861  004E' EC00' F000'        	call	_i2c_transfer	;wreg free
 18862  0052' C051' F057'        	movff	?_i2c_transfer,?_smbus8_read_byte
 18863  0056' C052' F058'        	movff	?_i2c_transfer+1,?_smbus8_read_byte+1
 18864  005A' 0012               	return		;funcret
 18865  005C'                    __end_of_smbus8_read_byte:
 18866                           	opt callstack 0
 18867                           
 18868 ;; *************** function _i2c_transfer *****************
 18869 ;; Defined at:
 18870 ;;		line 15 in file "src/driver/base/i2c.c"
 18871 ;; Parameters:    Size  Location     Type
 18872 ;;  dev             2   81[COMRAM] PTR struct i2c_dev__
 18873 ;;		 -> g_i2c_bus(8), NULL(0), 
 18874 ;;  msg             2   83[COMRAM] PTR struct i2c_msg
 18875 ;;		 -> smbus8_read_byte@msg(14), smbus8_write_data@msg(14), smbus8_write_byte@msg(7), i2c_probe_addr@msg(7), 
 18876 ;;  num             2   85[COMRAM] int 
 18877 ;; Auto vars:     Size  Location     Type
 18878 ;;		None
 18879 ;; Return value:  Size  Location     Type
 18880 ;;                  2   81[COMRAM] int 
 18881 ;; Registers used:
 18882 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 18883 ;; Tracked objects:
 18884 ;;		On entry : 0/0
 18885 ;;		On exit  : 0/0
 18886 ;;		Unchanged: 0/0
 18887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18888 ;;      Params:         6       0       0       0       0       0       0
 18889 ;;      Locals:         0       0       0       0       0       0       0
 18890 ;;      Temps:          0       0       0       0       0       0       0
 18891 ;;      Totals:         6       0       0       0       0       0       0
 18892 ;;Total ram usage:        6 bytes
 18893 ;; Hardware stack levels used:    1
 18894 ;; Hardware stack levels required when called:    6
 18895 ;; This function calls:
 18896 ;;		_i2c_transfer_native
 18897 ;; This function is called by:
 18898 ;;		_i2c_probe_addr
 18899 ;;		_smbus8_write_byte
 18900 ;;		_smbus8_write_data
 18901 ;;		_smbus8_read_byte
 18902 ;; This function uses a non-reentrant model
 18903 ;;
 18904                           
 18905                           	psect	text64
 18906  0000'                    __ptext64:
 18907                           	opt callstack 0
 18908  0000'                    _i2c_transfer:
 18909                           	opt callstack 21
 18910  0000'                    
 18911                           ;src/driver/base/i2c.c: 15: int i2c_transfer(i2c_dev dev, i2c_msg *msg, int num);src/dri
      +                          ver/base/i2c.c: 16: {;src/driver/base/i2c.c: 17:  if(!dev) return -3;
 18912  0000' 5000'              	movf	i2c_transfer@dev^0,w,c
 18913  0002' 1000'              	iorwf	(i2c_transfer@dev+1)^0,w,c
 18914  0004' A4D8               	btfss	status,2,c
 18915  0006' EF00' F000'        	goto	u10841
 18916  000A' EF00' F000'        	goto	u10840
 18917  000E'                    u10841:
 18918  000E' EF00' F000'        	goto	l9137
 18919  0012'                    u10840:
 18920  0012' 0EFF               	movlw	255
 18921  0014' 6E00'              	movwf	(?_i2c_transfer+1)^0,c
 18922  0016' 0EFD               	movlw	253
 18923  0018' 6E00'              	movwf	?_i2c_transfer^0,c
 18924  001A' EF00' F000'        	goto	l4
 18925  001E'                    l9137:
 18926                           
 18927                           ;src/driver/base/i2c.c: 18:  return ((i2c_driver_ops*)dev)->transfer(dev, msg, num);
 18928  001E' C051' F036'        	movff	i2c_transfer@dev,i2c_transfer_native@dev
 18929  0022' C052' F037'        	movff	i2c_transfer@dev+1,i2c_transfer_native@dev+1
 18930  0026' C053' F038'        	movff	i2c_transfer@msg,i2c_transfer_native@msg
 18931  002A' C054' F039'        	movff	i2c_transfer@msg+1,i2c_transfer_native@msg+1
 18932  002E' C055' F03A'        	movff	i2c_transfer@num,i2c_transfer_native@num
 18933  0032' C056' F03B'        	movff	i2c_transfer@num+1,i2c_transfer_native@num+1
 18934  0036' C051' FFD9         	movff	i2c_transfer@dev,fsr2l
 18935  003A' C052' FFDA         	movff	i2c_transfer@dev+1,fsr2h
 18936  003E' D802               	call	u10858
 18937  0040' EF00' F000'        	goto	u10859
 18938  0044'                    u10858:
 18939  0044' 0005               	push	
 18940  0046' 6EFA               	movwf	pclath,c
 18941  0048' 50DE               	movf	postinc2,w,c
 18942  004A' 6EFD               	movwf	tosl,c
 18943  004C' 50DE               	movf	postinc2,w,c
 18944  004E' 6EFE               	movwf	tosh,c
 18945  0050' 50F8               	movf	tblptru,w,c
 18946  0052' 6EFF               	movwf	tosu,c
 18947  0054' 50FA               	movf	pclath,w,c
 18948  0056' 0012               	return		;indir
 18949  0058'                    u10859:
 18950  0058' C036' F051'        	movff	?_i2c_transfer_native,?_i2c_transfer
 18951  005C' C037' F052'        	movff	?_i2c_transfer_native+1,?_i2c_transfer+1
 18952  0060'                    l4:
 18953  0060' 0012               	return		;funcret
 18954  0062'                    __end_of_i2c_transfer:
 18955                           	opt callstack 0
 18956                           
 18957 ;; *************** function _i2c_transfer_native *****************
 18958 ;; Defined at:
 18959 ;;		line 203 in file "src/driver/i2c_native.c"
 18960 ;; Parameters:    Size  Location     Type
 18961 ;;  dev             2   54[COMRAM] PTR struct i2c_dev__
 18962 ;;		 -> g_i2c_bus(8), NULL(0), 
 18963 ;;  msg             2   56[COMRAM] PTR struct i2c_msg
 18964 ;;		 -> smbus8_read_byte@msg(14), smbus8_write_data@msg(14), smbus8_write_byte@msg(7), i2c_probe_addr@msg(7), 
 18965 ;;  num             2   58[COMRAM] int 
 18966 ;; Auto vars:     Size  Location     Type
 18967 ;;  pmsg            2   79[COMRAM] PTR struct i2c_msg
 18968 ;;		 -> smbus8_read_byte@msg(14), smbus8_write_data@msg(14), smbus8_write_byte@msg(7), i2c_probe_addr@msg(7), 
 18969 ;;  res             2   77[COMRAM] int 
 18970 ;;  left            2   75[COMRAM] unsigned short 
 18971 ;;  ctx             2   73[COMRAM] PTR struct i2c_data_nati
 18972 ;;		 -> g_i2c_bus(8), NULL(0), 
 18973 ;;  bdata           2   71[COMRAM] PTR unsigned char 
 18974 ;;		 -> print_char@map(8), lcd_clear_screen@buf(128), ssd1306_setpos@data(3), ssd1306_init_commands(27), 
 18975 ;;		 -> read_reg@val(1), LNB_error(1), lnb_do_configure@value(1), smbus8_read_byte@reg(1), 
 18976 ;;		 -> smbus8_write_data@reg(1), smbus8_write_byte@tmp(2), NULL(0), 
 18977 ;;  i               2   69[COMRAM] int 
 18978 ;;  wantack         2   67[COMRAM] int 
 18979 ;;  read            2   65[COMRAM] int 
 18980 ;;  inmsg           2   63[COMRAM] int 
 18981 ;;  ack             2   61[COMRAM] int 
 18982 ;; Return value:  Size  Location     Type
 18983 ;;                  2   54[COMRAM] int 
 18984 ;; Registers used:
 18985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18986 ;; Tracked objects:
 18987 ;;		On entry : 0/0
 18988 ;;		On exit  : 0/0
 18989 ;;		Unchanged: 0/0
 18990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18991 ;;      Params:         6       0       0       0       0       0       0
 18992 ;;      Locals:        20       0       0       0       0       0       0
 18993 ;;      Temps:          1       0       0       0       0       0       0
 18994 ;;      Totals:        27       0       0       0       0       0       0
 18995 ;;Total ram usage:       27 bytes
 18996 ;; Hardware stack levels used:    1
 18997 ;; Hardware stack levels required when called:    5
 18998 ;; This function calls:
 18999 ;;		___wmul
 19000 ;;		_i2c_read
 19001 ;;		_i2c_reset
 19002 ;;		_i2c_start
 19003 ;;		_i2c_stop
 19004 ;;		_i2c_write
 19005 ;; This function is called by:
 19006 ;;		_i2c_native_init
 19007 ;;		_i2c_transfer
 19008 ;; This function uses a non-reentrant model
 19009 ;;
 19010                           
 19011                           	psect	text65
 19012  0000'                    __ptext65:
 19013                           	opt callstack 0
 19014  0000'                    _i2c_transfer_native:
 19015                           	opt callstack 21
 19016  0000'                    
 19017                           ;src/driver/i2c_native.c: 203: static int i2c_transfer_native(i2c_dev dev, i2c_msg *msg,
      +                           int num);src/driver/i2c_native.c: 204: {;src/driver/i2c_native.c: 205:  i2c_data_native
      +                           *ctx = (i2c_data_native*)dev;
 19018  0000' C036' F049'        	movff	i2c_transfer_native@dev,i2c_transfer_native@ctx
 19019  0004' C037' F04A'        	movff	i2c_transfer_native@dev+1,i2c_transfer_native@ctx+1
 19020  0008'                    
 19021                           ;src/driver/i2c_native.c: 206:  struct i2c_msg *pmsg;;src/driver/i2c_native.c: 207:  BOO
      +                          L read, ack, wantack, inmsg;;src/driver/i2c_native.c: 208:  int i, res;;src/driver/i2c_n
      +                          ative.c: 209:  u16 left;;src/driver/i2c_native.c: 210:  u8* bdata;;src/driver/i2c_native
      +                          .c: 212:  inmsg = 0;
 19022  0008' 0E00               	movlw	0
 19023  000A' 6E00'              	movwf	(i2c_transfer_native@inmsg+1)^0,c
 19024  000C' 0E00               	movlw	0
 19025  000E' 6E00'              	movwf	i2c_transfer_native@inmsg^0,c
 19026  0010'                    
 19027                           ;src/driver/i2c_native.c: 213:  for(i=0;i<num;i++) {
 19028  0010' 0E00               	movlw	0
 19029  0012' 6E00'              	movwf	(i2c_transfer_native@i+1)^0,c
 19030  0014' 0E00               	movlw	0
 19031  0016' 6E00'              	movwf	i2c_transfer_native@i^0,c
 19032  0018' EF00' F000'        	goto	l8975
 19033  001C'                    l8921:
 19034                           
 19035                           ;src/driver/i2c_native.c: 215:   pmsg = &msg[i];
 19036  001C' C045' F014'        	movff	i2c_transfer_native@i,___wmul@multiplier
 19037  0020' C046' F015'        	movff	i2c_transfer_native@i+1,___wmul@multiplier+1
 19038  0024' 0E00               	movlw	0
 19039  0026' 6E00'              	movwf	(___wmul@multiplicand+1)^0,c
 19040  0028' 0E07               	movlw	7
 19041  002A' 6E00'              	movwf	___wmul@multiplicand^0,c
 19042  002C' EC00' F000'        	call	___wmul	;wreg free
 19043  0030' 5000'              	movf	?___wmul^0,w,c
 19044  0032' 2400'              	addwf	i2c_transfer_native@msg^0,w,c
 19045  0034' 6E00'              	movwf	i2c_transfer_native@pmsg^0,c
 19046  0036' 5000'              	movf	(?___wmul+1)^0,w,c
 19047  0038' 2000'              	addwfc	(i2c_transfer_native@msg+1)^0,w,c
 19048  003A' 6E00'              	movwf	(i2c_transfer_native@pmsg+1)^0,c
 19049  003C'                    
 19050                           ;src/driver/i2c_native.c: 216:   bdata = (u8*)pmsg->data;
 19051  003C' EE20 F005          	lfsr	2,5
 19052  0040' 5000'              	movf	i2c_transfer_native@pmsg^0,w,c
 19053  0042' 26D9               	addwf	fsr2l,f,c
 19054  0044' 5000'              	movf	(i2c_transfer_native@pmsg+1)^0,w,c
 19055  0046' 22DA               	addwfc	fsr2h,f,c
 19056  0048' CFDE F047'         	movff	postinc2,i2c_transfer_native@bdata
 19057  004C' CFDD F048'         	movff	postdec2,i2c_transfer_native@bdata+1
 19058  0050'                    
 19059                           ;src/driver/i2c_native.c: 217:   read = ((pmsg->flags & (1<<0)) != 0);
 19060  0050' EE20 F002          	lfsr	2,2
 19061  0054' 5000'              	movf	i2c_transfer_native@pmsg^0,w,c
 19062  0056' 26D9               	addwf	fsr2l,f,c
 19063  0058' 5000'              	movf	(i2c_transfer_native@pmsg+1)^0,w,c
 19064  005A' 22DA               	addwfc	fsr2h,f,c
 19065  005C' B0DF               	btfsc	indf2,0,c
 19066  005E' EF00' F000'        	goto	u10381
 19067  0062' EF00' F000'        	goto	u10380
 19068  0066'                    u10381:
 19069  0066' 0E01               	movlw	1
 19070  0068' EF00' F000'        	goto	u10390
 19071  006C'                    u10380:
 19072  006C' 0E00               	movlw	0
 19073  006E'                    u10390:
 19074  006E' 6E00'              	movwf	i2c_transfer_native@read^0,c
 19075  0070' 6A00'              	clrf	(i2c_transfer_native@read+1)^0,c
 19076  0072'                    
 19077                           ;src/driver/i2c_native.c: 218:   wantack = ((pmsg->flags & (1<<3)) == 0);
 19078  0072' EE20 F002          	lfsr	2,2
 19079  0076' 5000'              	movf	i2c_transfer_native@pmsg^0,w,c
 19080  0078' 26D9               	addwf	fsr2l,f,c
 19081  007A' 5000'              	movf	(i2c_transfer_native@pmsg+1)^0,w,c
 19082  007C' 22DA               	addwfc	fsr2h,f,c
 19083  007E' A6DF               	btfss	indf2,3,c
 19084  0080' EF00' F000'        	goto	u10401
 19085  0084' EF00' F000'        	goto	u10400
 19086  0088'                    u10401:
 19087  0088' 0E01               	movlw	1
 19088  008A' EF00' F000'        	goto	u10410
 19089  008E'                    u10400:
 19090  008E' 0E00               	movlw	0
 19091  0090'                    u10410:
 19092  0090' 6E00'              	movwf	i2c_transfer_native@wantack^0,c
 19093  0092' 6A00'              	clrf	(i2c_transfer_native@wantack+1)^0,c
 19094  0094'                    
 19095                           ;src/driver/i2c_native.c: 221:   if(pmsg->flags&(1<<1)) {
 19096  0094' EE20 F002          	lfsr	2,2
 19097  0098' 5000'              	movf	i2c_transfer_native@pmsg^0,w,c
 19098  009A' 26D9               	addwf	fsr2l,f,c
 19099  009C' 5000'              	movf	(i2c_transfer_native@pmsg+1)^0,w,c
 19100  009E' 22DA               	addwfc	fsr2h,f,c
 19101  00A0' A2DF               	btfss	indf2,1,c
 19102  00A2' EF00' F000'        	goto	u10421
 19103  00A6' EF00' F000'        	goto	u10420
 19104  00AA'                    u10421:
 19105  00AA' EF00' F000'        	goto	l8939
 19106  00AE'                    u10420:
 19107  00AE'                    
 19108                           ;src/driver/i2c_native.c: 222:    res = i2c_start(pmsg->addr, read, inmsg, wantack);
 19109  00AE' C041' F011'        	movff	i2c_transfer_native@read,i2c_start@read
 19110  00B2' C042' F012'        	movff	i2c_transfer_native@read+1,i2c_start@read+1
 19111  00B6' C03F' F013'        	movff	i2c_transfer_native@inmsg,i2c_start@rep
 19112  00BA' C040' F014'        	movff	i2c_transfer_native@inmsg+1,i2c_start@rep+1
 19113  00BE' C043' F015'        	movff	i2c_transfer_native@wantack,i2c_start@wantack
 19114  00C2' C044' F016'        	movff	i2c_transfer_native@wantack+1,i2c_start@wantack+1
 19115  00C6' C04F' FFD9         	movff	i2c_transfer_native@pmsg,fsr2l
 19116  00CA' C050' FFDA         	movff	i2c_transfer_native@pmsg+1,fsr2h
 19117  00CE' 50DF               	movf	indf2,w,c
 19118  00D0' EC00' F000'        	call	_i2c_start
 19119  00D4' C011' F04D'        	movff	?_i2c_start,i2c_transfer_native@res
 19120  00D8' C012' F04E'        	movff	?_i2c_start+1,i2c_transfer_native@res+1
 19121  00DC'                    
 19122                           ;src/driver/i2c_native.c: 223:    if(res) goto error;
 19123  00DC' 5000'              	movf	i2c_transfer_native@res^0,w,c
 19124  00DE' 1000'              	iorwf	(i2c_transfer_native@res+1)^0,w,c
 19125  00E0' B4D8               	btfsc	status,2,c
 19126  00E2' EF00' F000'        	goto	u10431
 19127  00E6' EF00' F000'        	goto	u10430
 19128  00EA'                    u10431:
 19129  00EA' EF00' F000'        	goto	l8937
 19130  00EE'                    u10430:
 19131  00EE' EF00' F000'        	goto	l8981
 19132  00F2'                    l8937:
 19133                           
 19134                           ;src/driver/i2c_native.c: 224:    inmsg = 1;
 19135  00F2' 0E00               	movlw	0
 19136  00F4' 6E00'              	movwf	(i2c_transfer_native@inmsg+1)^0,c
 19137  00F6' 0E01               	movlw	1
 19138  00F8' 6E00'              	movwf	i2c_transfer_native@inmsg^0,c
 19139  00FA'                    l8939:
 19140                           
 19141                           ;src/driver/i2c_native.c: 227:   if(read) {
 19142  00FA' 5000'              	movf	i2c_transfer_native@read^0,w,c
 19143  00FC' 1000'              	iorwf	(i2c_transfer_native@read+1)^0,w,c
 19144  00FE' B4D8               	btfsc	status,2,c
 19145  0100' EF00' F000'        	goto	u10441
 19146  0104' EF00' F000'        	goto	u10440
 19147  0108'                    u10441:
 19148  0108' EF00' F000'        	goto	l8955
 19149  010C'                    u10440:
 19150  010C'                    
 19151                           ;src/driver/i2c_native.c: 229:    left = pmsg->len;
 19152  010C' EE20 F003          	lfsr	2,3
 19153  0110' 5000'              	movf	i2c_transfer_native@pmsg^0,w,c
 19154  0112' 26D9               	addwf	fsr2l,f,c
 19155  0114' 5000'              	movf	(i2c_transfer_native@pmsg+1)^0,w,c
 19156  0116' 22DA               	addwfc	fsr2h,f,c
 19157  0118' CFDE F04B'         	movff	postinc2,i2c_transfer_native@left
 19158  011C' CFDD F04C'         	movff	postdec2,i2c_transfer_native@left+1
 19159                           
 19160                           ;src/driver/i2c_native.c: 230:    while(left--) {
 19161  0120' EF00' F000'        	goto	l8953
 19162  0124'                    l8943:
 19163                           
 19164                           ;src/driver/i2c_native.c: 231:     ack = (left!=0);
 19165  0124' 5000'              	movf	i2c_transfer_native@left^0,w,c
 19166  0126' 1000'              	iorwf	(i2c_transfer_native@left+1)^0,w,c
 19167  0128' A4D8               	btfss	status,2,c
 19168  012A' EF00' F000'        	goto	u10451
 19169  012E' EF00' F000'        	goto	u10450
 19170  0132'                    u10451:
 19171  0132' 0E01               	movlw	1
 19172  0134' EF00' F000'        	goto	u10460
 19173  0138'                    u10450:
 19174  0138' 0E00               	movlw	0
 19175  013A'                    u10460:
 19176  013A' 6E00'              	movwf	i2c_transfer_native@ack^0,c
 19177  013C' 6A00'              	clrf	(i2c_transfer_native@ack+1)^0,c
 19178  013E'                    
 19179                           ;src/driver/i2c_native.c: 232:     res = i2c_read(bdata++, ack);
 19180  013E' C047' F011'        	movff	i2c_transfer_native@bdata,i2c_read@data
 19181  0142' C048' F012'        	movff	i2c_transfer_native@bdata+1,i2c_read@data+1
 19182  0146' C03D' F013'        	movff	i2c_transfer_native@ack,i2c_read@ack
 19183  014A' C03E' F014'        	movff	i2c_transfer_native@ack+1,i2c_read@ack+1
 19184  014E' EC00' F000'        	call	_i2c_read	;wreg free
 19185  0152' C011' F04D'        	movff	?_i2c_read,i2c_transfer_native@res
 19186  0156' C012' F04E'        	movff	?_i2c_read+1,i2c_transfer_native@res+1
 19187  015A' 4A00'              	infsnz	i2c_transfer_native@bdata^0,f,c
 19188  015C' 2A00'              	incf	(i2c_transfer_native@bdata+1)^0,f,c
 19189  015E'                    
 19190                           ;src/driver/i2c_native.c: 233:     if(res) goto error;
 19191  015E' 5000'              	movf	i2c_transfer_native@res^0,w,c
 19192  0160' 1000'              	iorwf	(i2c_transfer_native@res+1)^0,w,c
 19193  0162' B4D8               	btfsc	status,2,c
 19194  0164' EF00' F000'        	goto	u10471
 19195  0168' EF00' F000'        	goto	u10470
 19196  016C'                    u10471:
 19197  016C' EF00' F000'        	goto	l8953
 19198  0170'                    u10470:
 19199  0170' EF00' F000'        	goto	l8981
 19200  0174'                    l8953:
 19201                           
 19202                           ;src/driver/i2c_native.c: 230:    while(left--) {
 19203  0174' 0600'              	decf	i2c_transfer_native@left^0,f,c
 19204  0176' A0D8               	btfss	status,0,c
 19205  0178' 0600'              	decf	(i2c_transfer_native@left+1)^0,f,c
 19206  017A' 2800'              	incf	i2c_transfer_native@left^0,w,c
 19207  017C' E106               	bnz	u10481
 19208  017E' 2800'              	incf	(i2c_transfer_native@left+1)^0,w,c
 19209  0180' A4D8               	btfss	status,2,c
 19210  0182' EF00' F000'        	goto	u10481
 19211  0186' EF00' F000'        	goto	u10480
 19212  018A'                    u10481:
 19213  018A' EF00' F000'        	goto	l8943
 19214  018E'                    u10480:
 19215  018E' EF00' F000'        	goto	l8967
 19216  0192'                    l8955:
 19217                           
 19218                           ;src/driver/i2c_native.c: 237:    left = pmsg->len;
 19219  0192' EE20 F003          	lfsr	2,3
 19220  0196' 5000'              	movf	i2c_transfer_native@pmsg^0,w,c
 19221  0198' 26D9               	addwf	fsr2l,f,c
 19222  019A' 5000'              	movf	(i2c_transfer_native@pmsg+1)^0,w,c
 19223  019C' 22DA               	addwfc	fsr2h,f,c
 19224  019E' CFDE F04B'         	movff	postinc2,i2c_transfer_native@left
 19225  01A2' CFDD F04C'         	movff	postdec2,i2c_transfer_native@left+1
 19226                           
 19227                           ;src/driver/i2c_native.c: 238:    while(left--) {
 19228  01A6' EF00' F000'        	goto	l8965
 19229  01AA'                    l8957:
 19230                           
 19231                           ;src/driver/i2c_native.c: 239:     res = i2c_write(*bdata++, wantack);
 19232  01AA' C043' F011'        	movff	i2c_transfer_native@wantack,i2c_write@wantack
 19233  01AE' C044' F012'        	movff	i2c_transfer_native@wantack+1,i2c_write@wantack+1
 19234  01B2' C047' FFD9         	movff	i2c_transfer_native@bdata,fsr2l
 19235  01B6' C048' FFDA         	movff	i2c_transfer_native@bdata+1,fsr2h
 19236  01BA' 50DF               	movf	indf2,w,c
 19237  01BC' EC00' F000'        	call	_i2c_write
 19238  01C0' C011' F04D'        	movff	?_i2c_write,i2c_transfer_native@res
 19239  01C4' C012' F04E'        	movff	?_i2c_write+1,i2c_transfer_native@res+1
 19240  01C8' 4A00'              	infsnz	i2c_transfer_native@bdata^0,f,c
 19241  01CA' 2A00'              	incf	(i2c_transfer_native@bdata+1)^0,f,c
 19242  01CC'                    
 19243                           ;src/driver/i2c_native.c: 240:     if(res) goto error;
 19244  01CC' 5000'              	movf	i2c_transfer_native@res^0,w,c
 19245  01CE' 1000'              	iorwf	(i2c_transfer_native@res+1)^0,w,c
 19246  01D0' B4D8               	btfsc	status,2,c
 19247  01D2' EF00' F000'        	goto	u10491
 19248  01D6' EF00' F000'        	goto	u10490
 19249  01DA'                    u10491:
 19250  01DA' EF00' F000'        	goto	l8965
 19251  01DE'                    u10490:
 19252  01DE' EF00' F000'        	goto	l8981
 19253  01E2'                    l8965:
 19254                           
 19255                           ;src/driver/i2c_native.c: 238:    while(left--) {
 19256  01E2' 0600'              	decf	i2c_transfer_native@left^0,f,c
 19257  01E4' A0D8               	btfss	status,0,c
 19258  01E6' 0600'              	decf	(i2c_transfer_native@left+1)^0,f,c
 19259  01E8' 2800'              	incf	i2c_transfer_native@left^0,w,c
 19260  01EA' E106               	bnz	u10501
 19261  01EC' 2800'              	incf	(i2c_transfer_native@left+1)^0,w,c
 19262  01EE' A4D8               	btfss	status,2,c
 19263  01F0' EF00' F000'        	goto	u10501
 19264  01F4' EF00' F000'        	goto	u10500
 19265  01F8'                    u10501:
 19266  01F8' EF00' F000'        	goto	l8957
 19267  01FC'                    u10500:
 19268  01FC'                    l8967:
 19269                           
 19270                           ;src/driver/i2c_native.c: 245:   if(pmsg->flags&(1<<2)) {
 19271  01FC' EE20 F002          	lfsr	2,2
 19272  0200' 5000'              	movf	i2c_transfer_native@pmsg^0,w,c
 19273  0202' 26D9               	addwf	fsr2l,f,c
 19274  0204' 5000'              	movf	(i2c_transfer_native@pmsg+1)^0,w,c
 19275  0206' 22DA               	addwfc	fsr2h,f,c
 19276  0208' A4DF               	btfss	indf2,2,c
 19277  020A' EF00' F000'        	goto	u10511
 19278  020E' EF00' F000'        	goto	u10510
 19279  0212'                    u10511:
 19280  0212' EF00' F000'        	goto	l8973
 19281  0216'                    u10510:
 19282  0216'                    
 19283                           ;src/driver/i2c_native.c: 246:    i2c_stop(ctx);
 19284  0216' C049' F034'        	movff	i2c_transfer_native@ctx,i2c_stop@ctx
 19285  021A' C04A' F035'        	movff	i2c_transfer_native@ctx+1,i2c_stop@ctx+1
 19286  021E' EC00' F000'        	call	_i2c_stop	;wreg free
 19287  0222'                    
 19288                           ;src/driver/i2c_native.c: 247:    inmsg = 0;
 19289  0222' 0E00               	movlw	0
 19290  0224' 6E00'              	movwf	(i2c_transfer_native@inmsg+1)^0,c
 19291  0226' 0E00               	movlw	0
 19292  0228' 6E00'              	movwf	i2c_transfer_native@inmsg^0,c
 19293  022A'                    l8973:
 19294                           
 19295                           ;src/driver/i2c_native.c: 249:  }
 19296  022A' 4A00'              	infsnz	i2c_transfer_native@i^0,f,c
 19297  022C' 2A00'              	incf	(i2c_transfer_native@i+1)^0,f,c
 19298  022E'                    l8975:
 19299  022E' 5000'              	movf	i2c_transfer_native@num^0,w,c
 19300  0230' 5C00'              	subwf	i2c_transfer_native@i^0,w,c
 19301  0232' 5000'              	movf	(i2c_transfer_native@i+1)^0,w,c
 19302  0234' 0A80               	xorlw	128
 19303  0236' 6E00'              	movwf	??_i2c_transfer_native^0,c
 19304  0238' 5000'              	movf	(i2c_transfer_native@num+1)^0,w,c
 19305  023A' 0A80               	xorlw	128
 19306  023C' 5800'              	subwfb	??_i2c_transfer_native^0,w,c
 19307  023E' A0D8               	btfss	status,0,c
 19308  0240' EF00' F000'        	goto	u10521
 19309  0244' EF00' F000'        	goto	u10520
 19310  0248'                    u10521:
 19311  0248' EF00' F000'        	goto	l8921
 19312  024C'                    u10520:
 19313  024C'                    
 19314                           ;src/driver/i2c_native.c: 250:  return 0;
 19315  024C' 0E00               	movlw	0
 19316  024E' 6E00'              	movwf	(?_i2c_transfer_native+1)^0,c
 19317  0250' 0E00               	movlw	0
 19318  0252' 6E00'              	movwf	?_i2c_transfer_native^0,c
 19319  0254' EF00' F000'        	goto	l238
 19320  0258'                    l8981:
 19321                           
 19322                           ;src/driver/i2c_native.c: 253:  if(res!=-5 && res!=-6) i2c_stop(ctx);
 19323  0258' 0EFB               	movlw	251
 19324  025A' 1800'              	xorwf	i2c_transfer_native@res^0,w,c
 19325  025C' E108               	bnz	u10530
 19326  025E' 2800'              	incf	(i2c_transfer_native@res+1)^0,w,c
 19327  0260' B4D8               	btfsc	status,2,c
 19328  0262' EF00' F000'        	goto	u10531
 19329  0266' EF00' F000'        	goto	u10530
 19330  026A'                    u10531:
 19331  026A' EF00' F000'        	goto	l239
 19332  026E'                    u10530:
 19333  026E' 0EFA               	movlw	250
 19334  0270' 1800'              	xorwf	i2c_transfer_native@res^0,w,c
 19335  0272' E108               	bnz	u10540
 19336  0274' 2800'              	incf	(i2c_transfer_native@res+1)^0,w,c
 19337  0276' B4D8               	btfsc	status,2,c
 19338  0278' EF00' F000'        	goto	u10541
 19339  027C' EF00' F000'        	goto	u10540
 19340  0280'                    u10541:
 19341  0280' EF00' F000'        	goto	l239
 19342  0284'                    u10540:
 19343  0284' C049' F034'        	movff	i2c_transfer_native@ctx,i2c_stop@ctx
 19344  0288' C04A' F035'        	movff	i2c_transfer_native@ctx+1,i2c_stop@ctx+1
 19345  028C' EC00' F000'        	call	_i2c_stop	;wreg free
 19346  0290'                    l239:
 19347                           
 19348                           ;src/driver/i2c_native.c: 254:  i2c_reset(ctx);
 19349  0290' C049' F026'        	movff	i2c_transfer_native@ctx,i2c_reset@ctx
 19350  0294' C04A' F027'        	movff	i2c_transfer_native@ctx+1,i2c_reset@ctx+1
 19351  0298' EC00' F000'        	call	_i2c_reset	;wreg free
 19352  029C'                    
 19353                           ;src/driver/i2c_native.c: 255:  return res;
 19354  029C' C04D' F036'        	movff	i2c_transfer_native@res,?_i2c_transfer_native
 19355  02A0' C04E' F037'        	movff	i2c_transfer_native@res+1,?_i2c_transfer_native+1
 19356  02A4'                    l238:
 19357  02A4' 0012               	return		;funcret
 19358  02A6'                    __end_of_i2c_transfer_native:
 19359                           	opt callstack 0
 19360                           
 19361 ;; *************** function _i2c_write *****************
 19362 ;; Defined at:
 19363 ;;		line 180 in file "src/driver/i2c_native.c"
 19364 ;; Parameters:    Size  Location     Type
 19365 ;;  data            1    wreg     unsigned char 
 19366 ;;  wantack         2   17[COMRAM] int 
 19367 ;; Auto vars:     Size  Location     Type
 19368 ;;  data            1   19[COMRAM] unsigned char 
 19369 ;;  res             2   20[COMRAM] int 
 19370 ;; Return value:  Size  Location     Type
 19371 ;;                  2   17[COMRAM] int 
 19372 ;; Registers used:
 19373 ;;		wreg, status,2, status,0, cstack
 19374 ;; Tracked objects:
 19375 ;;		On entry : 0/0
 19376 ;;		On exit  : 0/0
 19377 ;;		Unchanged: 0/0
 19378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19379 ;;      Params:         2       0       0       0       0       0       0
 19380 ;;      Locals:         3       0       0       0       0       0       0
 19381 ;;      Temps:          0       0       0       0       0       0       0
 19382 ;;      Totals:         5       0       0       0       0       0       0
 19383 ;;Total ram usage:        5 bytes
 19384 ;; Hardware stack levels used:    1
 19385 ;; Hardware stack levels required when called:    3
 19386 ;; This function calls:
 19387 ;;		_i2c_wait_int
 19388 ;; This function is called by:
 19389 ;;		_i2c_transfer_native
 19390 ;; This function uses a non-reentrant model
 19391 ;;
 19392                           
 19393                           	psect	text66
 19394  0000'                    __ptext66:
 19395                           	opt callstack 0
 19396  0000'                    _i2c_write:
 19397                           	opt callstack 22
 19398                           
 19399                           ;incstack = 0
 19400                           ;i2c_write@data stored from wreg
 19401  0000' 6E00'              	movwf	i2c_write@data^0,c
 19402  0002'                    
 19403                           ;src/driver/i2c_native.c: 180: static int i2c_write(u8 data, BOOL wantack);src/driver/i2
      +                          c_native.c: 181: {;src/driver/i2c_native.c: 182:  int res;;src/driver/i2c_native.c: 184:
      +                               PIR1bits.SSPIF = 0;
 19404  0002' 969E               	bcf	158,3,c	;volatile
 19405  0004'                    
 19406                           ;src/driver/i2c_native.c: 187:  SSPBUF = data;
 19407  0004' C013' FFC9         	movff	i2c_write@data,4041	;volatile
 19408  0008'                    
 19409                           ;src/driver/i2c_native.c: 190:  res = i2c_wait_int(2500);
 19410  0008' 0EC4               	movlw	196
 19411  000A' 6E00'              	movwf	i2c_wait_int@timeout^0,c
 19412  000C' 0E09               	movlw	9
 19413  000E' 6E00'              	movwf	(i2c_wait_int@timeout+1)^0,c
 19414  0010' 0E00               	movlw	0
 19415  0012' 6E00'              	movwf	(i2c_wait_int@timeout+2)^0,c
 19416  0014' 0E00               	movlw	0
 19417  0016' 6E00'              	movwf	(i2c_wait_int@timeout+3)^0,c
 19418  0018' EC00' F000'        	call	_i2c_wait_int	;wreg free
 19419  001C' C00D' F014'        	movff	?_i2c_wait_int,i2c_write@res
 19420  0020' C00E' F015'        	movff	?_i2c_wait_int+1,i2c_write@res+1
 19421  0024'                    
 19422                           ;src/driver/i2c_native.c: 191:  if(res) return res;
 19423  0024' 5000'              	movf	i2c_write@res^0,w,c
 19424  0026' 1000'              	iorwf	(i2c_write@res+1)^0,w,c
 19425  0028' B4D8               	btfsc	status,2,c
 19426  002A' EF00' F000'        	goto	u10301
 19427  002E' EF00' F000'        	goto	u10300
 19428  0032'                    u10301:
 19429  0032' EF00' F000'        	goto	l8875
 19430  0036'                    u10300:
 19431  0036' C014' F011'        	movff	i2c_write@res,?_i2c_write
 19432  003A' C015' F012'        	movff	i2c_write@res+1,?_i2c_write+1
 19433  003E' EF00' F000'        	goto	l217
 19434  0042'                    l8875:
 19435                           
 19436                           ;src/driver/i2c_native.c: 194:     if(wantack && (SSPCON2bits.ACKSTAT != 0)) {
 19437  0042' 5000'              	movf	i2c_write@wantack^0,w,c
 19438  0044' 1000'              	iorwf	(i2c_write@wantack+1)^0,w,c
 19439  0046' B4D8               	btfsc	status,2,c
 19440  0048' EF00' F000'        	goto	u10311
 19441  004C' EF00' F000'        	goto	u10310
 19442  0050'                    u10311:
 19443  0050' EF00' F000'        	goto	l8883
 19444  0054'                    u10310:
 19445  0054' ACC5               	btfss	197,6,c	;volatile
 19446  0056' EF00' F000'        	goto	u10321
 19447  005A' EF00' F000'        	goto	u10320
 19448  005E'                    u10321:
 19449  005E' EF00' F000'        	goto	l8883
 19450  0062'                    u10320:
 19451  0062'                    
 19452                           ;src/driver/i2c_native.c: 195:   return -7;
 19453  0062' 0EFF               	movlw	255
 19454  0064' 6E00'              	movwf	(?_i2c_write+1)^0,c
 19455  0066' 0EF9               	movlw	249
 19456  0068' 6E00'              	movwf	?_i2c_write^0,c
 19457  006A' EF00' F000'        	goto	l217
 19458  006E'                    l8883:
 19459                           
 19460                           ;src/driver/i2c_native.c: 199:  return 0;
 19461  006E' 0E00               	movlw	0
 19462  0070' 6E00'              	movwf	(?_i2c_write+1)^0,c
 19463  0072' 0E00               	movlw	0
 19464  0074' 6E00'              	movwf	?_i2c_write^0,c
 19465  0076'                    l217:
 19466  0076' 0012               	return		;funcret
 19467  0078'                    __end_of_i2c_write:
 19468                           	opt callstack 0
 19469                           
 19470 ;; *************** function _i2c_stop *****************
 19471 ;; Defined at:
 19472 ;;		line 136 in file "src/driver/i2c_native.c"
 19473 ;; Parameters:    Size  Location     Type
 19474 ;;  ctx             2   52[COMRAM] PTR struct i2c_data_nati
 19475 ;;		 -> g_i2c_bus(8), NULL(0), 
 19476 ;; Auto vars:     Size  Location     Type
 19477 ;;		None
 19478 ;; Return value:  Size  Location     Type
 19479 ;;                  1    wreg      void 
 19480 ;; Registers used:
 19481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19482 ;; Tracked objects:
 19483 ;;		On entry : 0/0
 19484 ;;		On exit  : 0/0
 19485 ;;		Unchanged: 0/0
 19486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19487 ;;      Params:         2       0       0       0       0       0       0
 19488 ;;      Locals:         0       0       0       0       0       0       0
 19489 ;;      Temps:          0       0       0       0       0       0       0
 19490 ;;      Totals:         2       0       0       0       0       0       0
 19491 ;;Total ram usage:        2 bytes
 19492 ;; Hardware stack levels used:    1
 19493 ;; Hardware stack levels required when called:    4
 19494 ;; This function calls:
 19495 ;;		_i2c_reset
 19496 ;;		_i2c_wait_int
 19497 ;; This function is called by:
 19498 ;;		_i2c_transfer_native
 19499 ;; This function uses a non-reentrant model
 19500 ;;
 19501                           
 19502                           	psect	text67
 19503  0000'                    __ptext67:
 19504                           	opt callstack 0
 19505  0000'                    _i2c_stop:
 19506                           	opt callstack 21
 19507  0000'                    
 19508                           ;src/driver/i2c_native.c: 136: static void i2c_stop(i2c_data_native *ctx);src/driver/i2c
      +                          _native.c: 137: {;src/driver/i2c_native.c: 138:     PIR1bits.SSPIF = 0;
 19509  0000' 969E               	bcf	158,3,c	;volatile
 19510                           
 19511                           ;src/driver/i2c_native.c: 140:  SSPCON2bits.PEN = 1;
 19512  0002' 84C5               	bsf	197,2,c	;volatile
 19513  0004'                    
 19514                           ;src/driver/i2c_native.c: 143:  if(i2c_wait_int(10000)) {
 19515  0004' 0E10               	movlw	16
 19516  0006' 6E00'              	movwf	i2c_wait_int@timeout^0,c
 19517  0008' 0E27               	movlw	39
 19518  000A' 6E00'              	movwf	(i2c_wait_int@timeout+1)^0,c
 19519  000C' 0E00               	movlw	0
 19520  000E' 6E00'              	movwf	(i2c_wait_int@timeout+2)^0,c
 19521  0010' 0E00               	movlw	0
 19522  0012' 6E00'              	movwf	(i2c_wait_int@timeout+3)^0,c
 19523  0014' EC00' F000'        	call	_i2c_wait_int	;wreg free
 19524  0018' 5000'              	movf	?_i2c_wait_int^0,w,c
 19525  001A' 1000'              	iorwf	(?_i2c_wait_int+1)^0,w,c
 19526  001C' B4D8               	btfsc	status,2,c
 19527  001E' EF00' F000'        	goto	u10241
 19528  0022' EF00' F000'        	goto	u10240
 19529  0026'                    u10241:
 19530  0026' EF00' F000'        	goto	l205
 19531  002A'                    u10240:
 19532  002A'                    
 19533                           ;src/driver/i2c_native.c: 145:   i2c_reset(ctx);
 19534  002A' C034' F026'        	movff	i2c_stop@ctx,i2c_reset@ctx
 19535  002E' C035' F027'        	movff	i2c_stop@ctx+1,i2c_reset@ctx+1
 19536  0032' EC00' F000'        	call	_i2c_reset	;wreg free
 19537  0036'                    l205:
 19538  0036' 0012               	return		;funcret
 19539  0038'                    __end_of_i2c_stop:
 19540                           	opt callstack 0
 19541                           
 19542 ;; *************** function _i2c_reset *****************
 19543 ;; Defined at:
 19544 ;;		line 42 in file "src/driver/i2c_native.c"
 19545 ;; Parameters:    Size  Location     Type
 19546 ;;  ctx             2   38[COMRAM] PTR struct i2c_data_nati
 19547 ;;		 -> g_i2c_bus(8), NULL(0), 
 19548 ;; Auto vars:     Size  Location     Type
 19549 ;;  reg             4   48[COMRAM] unsigned long 
 19550 ;; Return value:  Size  Location     Type
 19551 ;;                  1    wreg      void 
 19552 ;; Registers used:
 19553 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19554 ;; Tracked objects:
 19555 ;;		On entry : 0/0
 19556 ;;		On exit  : 0/0
 19557 ;;		Unchanged: 0/0
 19558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19559 ;;      Params:         2       0       0       0       0       0       0
 19560 ;;      Locals:         8       0       0       0       0       0       0
 19561 ;;      Temps:          4       0       0       0       0       0       0
 19562 ;;      Totals:        14       0       0       0       0       0       0
 19563 ;;Total ram usage:       14 bytes
 19564 ;; Hardware stack levels used:    1
 19565 ;; Hardware stack levels required when called:    3
 19566 ;; This function calls:
 19567 ;;		___lldiv
 19568 ;; This function is called by:
 19569 ;;		_i2c_native_init
 19570 ;;		_i2c_stop
 19571 ;;		_i2c_transfer_native
 19572 ;; This function uses a non-reentrant model
 19573 ;;
 19574                           
 19575                           	psect	text68
 19576  0000'                    __ptext68:
 19577                           	opt callstack 0
 19578  0000'                    _i2c_reset:
 19579                           	opt callstack 21
 19580  0000'                    
 19581                           ;src/driver/i2c_native.c: 42: static void i2c_reset(i2c_data_native *ctx);src/driver/i2c
      +                          _native.c: 43: {;src/driver/i2c_native.c: 44:     u32 reg;;src/driver/i2c_native.c: 46: 
      +                              SSPCON1bits.SSPEN = 0;
 19582  0000' 9AC6               	bcf	198,5,c	;volatile
 19583  0002'                    
 19584                           ;src/driver/i2c_native.c: 47:     SSPCON1bits.SSPM = 0x08;
 19585  0002' 50C6               	movf	198,w,c	;volatile
 19586  0004' 0BF0               	andlw	-16
 19587  0006' 0908               	iorlw	8
 19588  0008' 6EC6               	movwf	198,c	;volatile
 19589  000A'                    
 19590                           ;src/driver/i2c_native.c: 49:     SSPSTATbits.SMP = 1;
 19591  000A' 8EC7               	bsf	199,7,c	;volatile
 19592  000C'                    
 19593                           ;src/driver/i2c_native.c: 50:     SSPSTATbits.CKE = 0;
 19594  000C' 9CC7               	bcf	199,6,c	;volatile
 19595  000E'                    
 19596                           ;src/driver/i2c_native.c: 52:  TRISC |= 0b00011000;
 19597  000E' 0E18               	movlw	24
 19598  0010' 1294               	iorwf	148,f,c	;volatile
 19599  0012'                    
 19600                           ;src/driver/i2c_native.c: 55:     reg = (8000000 / (4*ctx->baud)) - 1;
 19601  0012' 0E00               	movlw	0
 19602  0014' 6E00'              	movwf	___lldiv@dividend^0,c
 19603  0016' 0E12               	movlw	18
 19604  0018' 6E00'              	movwf	(___lldiv@dividend+1)^0,c
 19605  001A' 0E7A               	movlw	122
 19606  001C' 6E00'              	movwf	(___lldiv@dividend+2)^0,c
 19607  001E' 0E00               	movlw	0
 19608  0020' 6E00'              	movwf	(___lldiv@dividend+3)^0,c
 19609  0022' EE20 F004          	lfsr	2,4
 19610  0026' 5000'              	movf	i2c_reset@ctx^0,w,c
 19611  0028' 26D9               	addwf	fsr2l,f,c
 19612  002A' 5000'              	movf	(i2c_reset@ctx+1)^0,w,c
 19613  002C' 22DA               	addwfc	fsr2h,f,c
 19614  002E' CFDE F028'         	movff	postinc2,??_i2c_reset
 19615  0032' CFDE F029'         	movff	postinc2,??_i2c_reset+1
 19616  0036' CFDE F02A'         	movff	postinc2,??_i2c_reset+2
 19617  003A' CFDE F02B'         	movff	postinc2,??_i2c_reset+3
 19618  003E' 0E02               	movlw	2
 19619  0040'                    u10115:
 19620  0040' 90D8               	bcf	status,0,c
 19621  0042' 3600'              	rlcf	??_i2c_reset^0,f,c
 19622  0044' 3600'              	rlcf	(??_i2c_reset+1)^0,f,c
 19623  0046' 3600'              	rlcf	(??_i2c_reset+2)^0,f,c
 19624  0048' 3600'              	rlcf	(??_i2c_reset+3)^0,f,c
 19625  004A' 2EE8               	decfsz	wreg,f,c
 19626  004C' EF00' F000'        	goto	u10115
 19627  0050' C028' F01D'        	movff	??_i2c_reset,___lldiv@divisor
 19628  0054' C029' F01E'        	movff	??_i2c_reset+1,___lldiv@divisor+1
 19629  0058' C02A' F01F'        	movff	??_i2c_reset+2,___lldiv@divisor+2
 19630  005C' C02B' F020'        	movff	??_i2c_reset+3,___lldiv@divisor+3
 19631  0060' EC00' F000'        	call	___lldiv	;wreg free
 19632  0064' 0EFF               	movlw	255
 19633  0066' 2400'              	addwf	?___lldiv^0,w,c
 19634  0068' 6E00'              	movwf	i2c_reset@reg^0,c
 19635  006A' 0EFF               	movlw	255
 19636  006C' 2000'              	addwfc	(?___lldiv+1)^0,w,c
 19637  006E' 6E00'              	movwf	(i2c_reset@reg+1)^0,c
 19638  0070' 0EFF               	movlw	255
 19639  0072' 2000'              	addwfc	(?___lldiv+2)^0,w,c
 19640  0074' 6E00'              	movwf	(i2c_reset@reg+2)^0,c
 19641  0076' 0EFF               	movlw	255
 19642  0078' 2000'              	addwfc	(?___lldiv+3)^0,w,c
 19643  007A' 6E00'              	movwf	(i2c_reset@reg+3)^0,c
 19644  007C'                    
 19645                           ;src/driver/i2c_native.c: 56:     SSPADD = (reg<127)?reg:127;
 19646  007C' 5000'              	movf	(i2c_reset@reg+3)^0,w,c
 19647  007E' 1000'              	iorwf	(i2c_reset@reg+2)^0,w,c
 19648  0080' 1000'              	iorwf	(i2c_reset@reg+1)^0,w,c
 19649  0082' E109               	bnz	u10120
 19650  0084' 0E7F               	movlw	127
 19651  0086' 5C00'              	subwf	i2c_reset@reg^0,w,c
 19652  0088' A0D8               	btfss	status,0,c
 19653  008A' EF00' F000'        	goto	u10121
 19654  008E' EF00' F000'        	goto	u10120
 19655  0092'                    u10121:
 19656  0092' EF00' F000'        	goto	l178
 19657  0096'                    u10120:
 19658  0096' 0E7F               	movlw	127
 19659  0098' 6E00'              	movwf	_i2c_reset$1141^0,c
 19660  009A' 0E00               	movlw	0
 19661  009C' 6E00'              	movwf	(_i2c_reset$1141+1)^0,c
 19662  009E' 0E00               	movlw	0
 19663  00A0' 6E00'              	movwf	(_i2c_reset$1141+2)^0,c
 19664  00A2' 0E00               	movlw	0
 19665  00A4' 6E00'              	movwf	(_i2c_reset$1141+3)^0,c
 19666  00A6' EF00' F000'        	goto	l180
 19667  00AA'                    l178:
 19668  00AA' C030' F02C'        	movff	i2c_reset@reg,_i2c_reset$1141
 19669  00AE' C031' F02D'        	movff	i2c_reset@reg+1,_i2c_reset$1141+1
 19670  00B2' C032' F02E'        	movff	i2c_reset@reg+2,_i2c_reset$1141+2
 19671  00B6' C033' F02F'        	movff	i2c_reset@reg+3,_i2c_reset$1141+3
 19672  00BA'                    l180:
 19673  00BA' C02C' FFC8         	movff	_i2c_reset$1141,4040	;volatile
 19674                           
 19675                           ;src/driver/i2c_native.c: 58:     SSPCON1bits.SSPEN = 1;
 19676  00BE' 8AC6               	bsf	198,5,c	;volatile
 19677  00C0' 0012               	return		;funcret
 19678  00C2'                    __end_of_i2c_reset:
 19679                           	opt callstack 0
 19680                           
 19681 ;; *************** function ___lldiv *****************
 19682 ;; Defined at:
 19683 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__lldiv.c"
 19684 ;; Parameters:    Size  Location     Type
 19685 ;;  dividend        4   25[COMRAM] unsigned long 
 19686 ;;  divisor         4   29[COMRAM] unsigned long 
 19687 ;; Auto vars:     Size  Location     Type
 19688 ;;  quotient        4   33[COMRAM] unsigned long 
 19689 ;;  counter         1   37[COMRAM] unsigned char 
 19690 ;; Return value:  Size  Location     Type
 19691 ;;                  4   25[COMRAM] unsigned long 
 19692 ;; Registers used:
 19693 ;;		wreg, status,2, status,0
 19694 ;; Tracked objects:
 19695 ;;		On entry : 0/0
 19696 ;;		On exit  : 0/0
 19697 ;;		Unchanged: 0/0
 19698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19699 ;;      Params:         8       0       0       0       0       0       0
 19700 ;;      Locals:         5       0       0       0       0       0       0
 19701 ;;      Temps:          0       0       0       0       0       0       0
 19702 ;;      Totals:        13       0       0       0       0       0       0
 19703 ;;Total ram usage:       13 bytes
 19704 ;; Hardware stack levels used:    1
 19705 ;; Hardware stack levels required when called:    2
 19706 ;; This function calls:
 19707 ;;		Nothing
 19708 ;; This function is called by:
 19709 ;;		_adf4351_set_freq
 19710 ;;		_i2c_reset
 19711 ;;		_usart_init
 19712 ;;		_CalculateGridSquare
 19713 ;; This function uses a non-reentrant model
 19714 ;;
 19715                           
 19716                           	psect	text69
 19717  0000'                    __ptext69:
 19718                           	opt callstack 0
 19719  0000'                    ___lldiv:
 19720                           	opt callstack 27
 19721  0000' 0E00               	movlw	0
 19722  0002' 6E00'              	movwf	___lldiv@quotient^0,c
 19723  0004' 0E00               	movlw	0
 19724  0006' 6E00'              	movwf	(___lldiv@quotient+1)^0,c
 19725  0008' 0E00               	movlw	0
 19726  000A' 6E00'              	movwf	(___lldiv@quotient+2)^0,c
 19727  000C' 0E00               	movlw	0
 19728  000E' 6E00'              	movwf	(___lldiv@quotient+3)^0,c
 19729  0010' 5000'              	movf	___lldiv@divisor^0,w,c
 19730  0012' 1000'              	iorwf	(___lldiv@divisor+1)^0,w,c
 19731  0014' 1000'              	iorwf	(___lldiv@divisor+2)^0,w,c
 19732  0016' 1000'              	iorwf	(___lldiv@divisor+3)^0,w,c
 19733  0018' B4D8               	btfsc	status,2,c
 19734  001A' EF00' F000'        	goto	u10081
 19735  001E' EF00' F000'        	goto	u10080
 19736  0022'                    u10081:
 19737  0022' EF00' F000'        	goto	l1425
 19738  0026'                    u10080:
 19739  0026' 0E01               	movlw	1
 19740  0028' 6E00'              	movwf	___lldiv@counter^0,c
 19741  002A' EF00' F000'        	goto	l8737
 19742  002E'                    l8735:
 19743  002E' 90D8               	bcf	status,0,c
 19744  0030' 3600'              	rlcf	___lldiv@divisor^0,f,c
 19745  0032' 3600'              	rlcf	(___lldiv@divisor+1)^0,f,c
 19746  0034' 3600'              	rlcf	(___lldiv@divisor+2)^0,f,c
 19747  0036' 3600'              	rlcf	(___lldiv@divisor+3)^0,f,c
 19748  0038' 2A00'              	incf	___lldiv@counter^0,f,c
 19749  003A'                    l8737:
 19750  003A' AE00'              	btfss	(___lldiv@divisor+3)^0,7,c
 19751  003C' EF00' F000'        	goto	u10091
 19752  0040' EF00' F000'        	goto	u10090
 19753  0044'                    u10091:
 19754  0044' EF00' F000'        	goto	l8735
 19755  0048'                    u10090:
 19756  0048'                    l8739:
 19757  0048' 90D8               	bcf	status,0,c
 19758  004A' 3600'              	rlcf	___lldiv@quotient^0,f,c
 19759  004C' 3600'              	rlcf	(___lldiv@quotient+1)^0,f,c
 19760  004E' 3600'              	rlcf	(___lldiv@quotient+2)^0,f,c
 19761  0050' 3600'              	rlcf	(___lldiv@quotient+3)^0,f,c
 19762  0052' 5000'              	movf	___lldiv@divisor^0,w,c
 19763  0054' 5C00'              	subwf	___lldiv@dividend^0,w,c
 19764  0056' 5000'              	movf	(___lldiv@divisor+1)^0,w,c
 19765  0058' 5800'              	subwfb	(___lldiv@dividend+1)^0,w,c
 19766  005A' 5000'              	movf	(___lldiv@divisor+2)^0,w,c
 19767  005C' 5800'              	subwfb	(___lldiv@dividend+2)^0,w,c
 19768  005E' 5000'              	movf	(___lldiv@divisor+3)^0,w,c
 19769  0060' 5800'              	subwfb	(___lldiv@dividend+3)^0,w,c
 19770  0062' A0D8               	btfss	status,0,c
 19771  0064' EF00' F000'        	goto	u10101
 19772  0068' EF00' F000'        	goto	u10100
 19773  006C'                    u10101:
 19774  006C' EF00' F000'        	goto	l8747
 19775  0070'                    u10100:
 19776  0070' 5000'              	movf	___lldiv@divisor^0,w,c
 19777  0072' 5E00'              	subwf	___lldiv@dividend^0,f,c
 19778  0074' 5000'              	movf	(___lldiv@divisor+1)^0,w,c
 19779  0076' 5A00'              	subwfb	(___lldiv@dividend+1)^0,f,c
 19780  0078' 5000'              	movf	(___lldiv@divisor+2)^0,w,c
 19781  007A' 5A00'              	subwfb	(___lldiv@dividend+2)^0,f,c
 19782  007C' 5000'              	movf	(___lldiv@divisor+3)^0,w,c
 19783  007E' 5A00'              	subwfb	(___lldiv@dividend+3)^0,f,c
 19784  0080' 8000'              	bsf	___lldiv@quotient^0,0,c
 19785  0082'                    l8747:
 19786  0082' 90D8               	bcf	status,0,c
 19787  0084' 3200'              	rrcf	(___lldiv@divisor+3)^0,f,c
 19788  0086' 3200'              	rrcf	(___lldiv@divisor+2)^0,f,c
 19789  0088' 3200'              	rrcf	(___lldiv@divisor+1)^0,f,c
 19790  008A' 3200'              	rrcf	___lldiv@divisor^0,f,c
 19791  008C' 2E00'              	decfsz	___lldiv@counter^0,f,c
 19792  008E' EF00' F000'        	goto	l8739
 19793  0092'                    l1425:
 19794  0092' C021' F019'        	movff	___lldiv@quotient,?___lldiv
 19795  0096' C022' F01A'        	movff	___lldiv@quotient+1,?___lldiv+1
 19796  009A' C023' F01B'        	movff	___lldiv@quotient+2,?___lldiv+2
 19797  009E' C024' F01C'        	movff	___lldiv@quotient+3,?___lldiv+3
 19798  00A2' 0012               	return		;funcret
 19799  00A4'                    __end_of___lldiv:
 19800                           	opt callstack 0
 19801                           
 19802 ;; *************** function _i2c_start *****************
 19803 ;; Defined at:
 19804 ;;		line 104 in file "src/driver/i2c_native.c"
 19805 ;; Parameters:    Size  Location     Type
 19806 ;;  addr            1    wreg     unsigned char 
 19807 ;;  read            2   17[COMRAM] int 
 19808 ;;  rep             2   19[COMRAM] int 
 19809 ;;  wantack         2   21[COMRAM] int 
 19810 ;; Auto vars:     Size  Location     Type
 19811 ;;  addr            1   23[COMRAM] unsigned char 
 19812 ;;  res             2   24[COMRAM] int 
 19813 ;; Return value:  Size  Location     Type
 19814 ;;                  2   17[COMRAM] int 
 19815 ;; Registers used:
 19816 ;;		wreg, status,2, status,0, cstack
 19817 ;; Tracked objects:
 19818 ;;		On entry : 0/0
 19819 ;;		On exit  : 0/0
 19820 ;;		Unchanged: 0/0
 19821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19822 ;;      Params:         6       0       0       0       0       0       0
 19823 ;;      Locals:         3       0       0       0       0       0       0
 19824 ;;      Temps:          0       0       0       0       0       0       0
 19825 ;;      Totals:         9       0       0       0       0       0       0
 19826 ;;Total ram usage:        9 bytes
 19827 ;; Hardware stack levels used:    1
 19828 ;; Hardware stack levels required when called:    3
 19829 ;; This function calls:
 19830 ;;		_i2c_wait_int
 19831 ;; This function is called by:
 19832 ;;		_i2c_transfer_native
 19833 ;; This function uses a non-reentrant model
 19834 ;;
 19835                           
 19836                           	psect	text70
 19837  0000'                    __ptext70:
 19838                           	opt callstack 0
 19839  0000'                    _i2c_start:
 19840                           	opt callstack 22
 19841                           
 19842                           ;incstack = 0
 19843                           ;i2c_start@addr stored from wreg
 19844  0000' 6E00'              	movwf	i2c_start@addr^0,c
 19845  0002'                    
 19846                           ;src/driver/i2c_native.c: 104: static int i2c_start(u8 addr, BOOL read, BOOL rep, BOOL w
      +                          antack);src/driver/i2c_native.c: 105: {;src/driver/i2c_native.c: 106:     int res;;src/d
      +                          river/i2c_native.c: 108:     PIR1bits.SSPIF = 0;
 19847  0002' 969E               	bcf	158,3,c	;volatile
 19848  0004'                    
 19849                           ;src/driver/i2c_native.c: 110:  if(rep) SSPCON2bits.RSEN = 1;
 19850  0004' 5000'              	movf	i2c_start@rep^0,w,c
 19851  0006' 1000'              	iorwf	(i2c_start@rep+1)^0,w,c
 19852  0008' B4D8               	btfsc	status,2,c
 19853  000A' EF00' F000'        	goto	u10181
 19854  000E' EF00' F000'        	goto	u10180
 19855  0012'                    u10181:
 19856  0012' EF00' F000'        	goto	l194
 19857  0016'                    u10180:
 19858  0016' 82C5               	bsf	197,1,c	;volatile
 19859  0018' EF00' F000'        	goto	l8801
 19860  001C'                    l194:
 19861  001C' 80C5               	bsf	197,0,c	;volatile
 19862  001E'                    l8801:
 19863                           
 19864                           ;src/driver/i2c_native.c: 114:     res = i2c_wait_int(2500);
 19865  001E' 0EC4               	movlw	196
 19866  0020' 6E00'              	movwf	i2c_wait_int@timeout^0,c
 19867  0022' 0E09               	movlw	9
 19868  0024' 6E00'              	movwf	(i2c_wait_int@timeout+1)^0,c
 19869  0026' 0E00               	movlw	0
 19870  0028' 6E00'              	movwf	(i2c_wait_int@timeout+2)^0,c
 19871  002A' 0E00               	movlw	0
 19872  002C' 6E00'              	movwf	(i2c_wait_int@timeout+3)^0,c
 19873  002E' EC00' F000'        	call	_i2c_wait_int	;wreg free
 19874  0032' C00D' F018'        	movff	?_i2c_wait_int,i2c_start@res
 19875  0036' C00E' F019'        	movff	?_i2c_wait_int+1,i2c_start@res+1
 19876  003A'                    
 19877                           ;src/driver/i2c_native.c: 115:  if(res) return res;
 19878  003A' 5000'              	movf	i2c_start@res^0,w,c
 19879  003C' 1000'              	iorwf	(i2c_start@res+1)^0,w,c
 19880  003E' B4D8               	btfsc	status,2,c
 19881  0040' EF00' F000'        	goto	u10191
 19882  0044' EF00' F000'        	goto	u10190
 19883  0048'                    u10191:
 19884  0048' EF00' F000'        	goto	l196
 19885  004C'                    u10190:
 19886  004C'                    l8805:
 19887  004C' C018' F011'        	movff	i2c_start@res,?_i2c_start
 19888  0050' C019' F012'        	movff	i2c_start@res+1,?_i2c_start+1
 19889  0054' EF00' F000'        	goto	l197
 19890  0058'                    l196:
 19891                           
 19892                           ;src/driver/i2c_native.c: 117:     PIR1bits.SSPIF = 0;
 19893  0058' 969E               	bcf	158,3,c	;volatile
 19894  005A'                    
 19895                           ;src/driver/i2c_native.c: 119:  if(read) SSPBUF = (addr<<1) | 1;
 19896  005A' 5000'              	movf	i2c_start@read^0,w,c
 19897  005C' 1000'              	iorwf	(i2c_start@read+1)^0,w,c
 19898  005E' B4D8               	btfsc	status,2,c
 19899  0060' EF00' F000'        	goto	u10201
 19900  0064' EF00' F000'        	goto	u10200
 19901  0068'                    u10201:
 19902  0068' EF00' F000'        	goto	l8811
 19903  006C'                    u10200:
 19904  006C' 80D8               	bsf	status,0,c
 19905  006E' 3400'              	rlcf	i2c_start@addr^0,w,c
 19906  0070' 6EC9               	movwf	201,c	;volatile
 19907  0072' EF00' F000'        	goto	l8813
 19908  0076'                    l8811:
 19909  0076' 5000'              	movf	i2c_start@addr^0,w,c
 19910  0078' 2400'              	addwf	i2c_start@addr^0,w,c
 19911  007A' 6EC9               	movwf	201,c	;volatile
 19912  007C'                    l8813:
 19913                           
 19914                           ;src/driver/i2c_native.c: 123:     res = i2c_wait_int(2500);
 19915  007C' 0EC4               	movlw	196
 19916  007E' 6E00'              	movwf	i2c_wait_int@timeout^0,c
 19917  0080' 0E09               	movlw	9
 19918  0082' 6E00'              	movwf	(i2c_wait_int@timeout+1)^0,c
 19919  0084' 0E00               	movlw	0
 19920  0086' 6E00'              	movwf	(i2c_wait_int@timeout+2)^0,c
 19921  0088' 0E00               	movlw	0
 19922  008A' 6E00'              	movwf	(i2c_wait_int@timeout+3)^0,c
 19923  008C' EC00' F000'        	call	_i2c_wait_int	;wreg free
 19924  0090' C00D' F018'        	movff	?_i2c_wait_int,i2c_start@res
 19925  0094' C00E' F019'        	movff	?_i2c_wait_int+1,i2c_start@res+1
 19926  0098'                    
 19927                           ;src/driver/i2c_native.c: 124:  if(res) return res;
 19928  0098' 5000'              	movf	i2c_start@res^0,w,c
 19929  009A' 1000'              	iorwf	(i2c_start@res+1)^0,w,c
 19930  009C' B4D8               	btfsc	status,2,c
 19931  009E' EF00' F000'        	goto	u10211
 19932  00A2' EF00' F000'        	goto	u10210
 19933  00A6'                    u10211:
 19934  00A6' EF00' F000'        	goto	l8819
 19935  00AA'                    u10210:
 19936  00AA' EF00' F000'        	goto	l8805
 19937  00AE'                    l8819:
 19938                           
 19939                           ;src/driver/i2c_native.c: 127:  if(wantack && (SSPCON2bits.ACKSTAT != 0)) {
 19940  00AE' 5000'              	movf	i2c_start@wantack^0,w,c
 19941  00B0' 1000'              	iorwf	(i2c_start@wantack+1)^0,w,c
 19942  00B2' B4D8               	btfsc	status,2,c
 19943  00B4' EF00' F000'        	goto	u10221
 19944  00B8' EF00' F000'        	goto	u10220
 19945  00BC'                    u10221:
 19946  00BC' EF00' F000'        	goto	l8827
 19947  00C0'                    u10220:
 19948  00C0' ACC5               	btfss	197,6,c	;volatile
 19949  00C2' EF00' F000'        	goto	u10231
 19950  00C6' EF00' F000'        	goto	u10230
 19951  00CA'                    u10231:
 19952  00CA' EF00' F000'        	goto	l8827
 19953  00CE'                    u10230:
 19954  00CE'                    
 19955                           ;src/driver/i2c_native.c: 128:   return -7;
 19956  00CE' 0EFF               	movlw	255
 19957  00D0' 6E00'              	movwf	(?_i2c_start+1)^0,c
 19958  00D2' 0EF9               	movlw	249
 19959  00D4' 6E00'              	movwf	?_i2c_start^0,c
 19960  00D6' EF00' F000'        	goto	l197
 19961  00DA'                    l8827:
 19962                           
 19963                           ;src/driver/i2c_native.c: 132:  return 0;
 19964  00DA' 0E00               	movlw	0
 19965  00DC' 6E00'              	movwf	(?_i2c_start+1)^0,c
 19966  00DE' 0E00               	movlw	0
 19967  00E0' 6E00'              	movwf	?_i2c_start^0,c
 19968  00E2'                    l197:
 19969  00E2' 0012               	return		;funcret
 19970  00E4'                    __end_of_i2c_start:
 19971                           	opt callstack 0
 19972                           
 19973 ;; *************** function _i2c_read *****************
 19974 ;; Defined at:
 19975 ;;		line 150 in file "src/driver/i2c_native.c"
 19976 ;; Parameters:    Size  Location     Type
 19977 ;;  data            2   17[COMRAM] PTR unsigned char 
 19978 ;;		 -> print_char@map(8), lcd_clear_screen@buf(128), ssd1306_setpos@data(3), ssd1306_init_commands(27), 
 19979 ;;		 -> read_reg@val(1), LNB_error(1), lnb_do_configure@value(1), smbus8_read_byte@reg(1), 
 19980 ;;		 -> smbus8_write_data@reg(1), smbus8_write_byte@tmp(2), NULL(0), 
 19981 ;;  ack             2   19[COMRAM] int 
 19982 ;; Auto vars:     Size  Location     Type
 19983 ;;  res             2   22[COMRAM] int 
 19984 ;; Return value:  Size  Location     Type
 19985 ;;                  2   17[COMRAM] int 
 19986 ;; Registers used:
 19987 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19988 ;; Tracked objects:
 19989 ;;		On entry : 0/0
 19990 ;;		On exit  : 0/0
 19991 ;;		Unchanged: 0/0
 19992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19993 ;;      Params:         4       0       0       0       0       0       0
 19994 ;;      Locals:         2       0       0       0       0       0       0
 19995 ;;      Temps:          1       0       0       0       0       0       0
 19996 ;;      Totals:         7       0       0       0       0       0       0
 19997 ;;Total ram usage:        7 bytes
 19998 ;; Hardware stack levels used:    1
 19999 ;; Hardware stack levels required when called:    3
 20000 ;; This function calls:
 20001 ;;		_i2c_wait_int
 20002 ;; This function is called by:
 20003 ;;		_i2c_transfer_native
 20004 ;; This function uses a non-reentrant model
 20005 ;;
 20006                           
 20007                           	psect	text71
 20008  0000'                    __ptext71:
 20009                           	opt callstack 0
 20010  0000'                    _i2c_read:
 20011                           	opt callstack 22
 20012  0000'                    
 20013                           ;src/driver/i2c_native.c: 150: static int i2c_read(u8 *data, BOOL ack);src/driver/i2c_na
      +                          tive.c: 151: {;src/driver/i2c_native.c: 152:  int res;;src/driver/i2c_native.c: 154:    
      +                           PIR1bits.SSPIF = 0;
 20014  0000' 969E               	bcf	158,3,c	;volatile
 20015                           
 20016                           ;src/driver/i2c_native.c: 157:  SSPCON2bits.RCEN = 1;
 20017  0002' 86C5               	bsf	197,3,c	;volatile
 20018  0004'                    
 20019                           ;src/driver/i2c_native.c: 160:  res = i2c_wait_int(2500);
 20020  0004' 0EC4               	movlw	196
 20021  0006' 6E00'              	movwf	i2c_wait_int@timeout^0,c
 20022  0008' 0E09               	movlw	9
 20023  000A' 6E00'              	movwf	(i2c_wait_int@timeout+1)^0,c
 20024  000C' 0E00               	movlw	0
 20025  000E' 6E00'              	movwf	(i2c_wait_int@timeout+2)^0,c
 20026  0010' 0E00               	movlw	0
 20027  0012' 6E00'              	movwf	(i2c_wait_int@timeout+3)^0,c
 20028  0014' EC00' F000'        	call	_i2c_wait_int	;wreg free
 20029  0018' C00D' F016'        	movff	?_i2c_wait_int,i2c_read@res
 20030  001C' C00E' F017'        	movff	?_i2c_wait_int+1,i2c_read@res+1
 20031  0020'                    
 20032                           ;src/driver/i2c_native.c: 161:  if(res) return res;
 20033  0020' 5000'              	movf	i2c_read@res^0,w,c
 20034  0022' 1000'              	iorwf	(i2c_read@res+1)^0,w,c
 20035  0024' B4D8               	btfsc	status,2,c
 20036  0026' EF00' F000'        	goto	u10251
 20037  002A' EF00' F000'        	goto	u10250
 20038  002E'                    u10251:
 20039  002E' EF00' F000'        	goto	l208
 20040  0032'                    u10250:
 20041  0032'                    l8843:
 20042  0032' C016' F011'        	movff	i2c_read@res,?_i2c_read
 20043  0036' C017' F012'        	movff	i2c_read@res+1,?_i2c_read+1
 20044  003A' EF00' F000'        	goto	l209
 20045  003E'                    l208:
 20046                           
 20047                           ;src/driver/i2c_native.c: 163:     if(SSPCON2bits.RCEN != 0 || SSPSTATbits.BF == 0) {
 20048  003E' B6C5               	btfsc	197,3,c	;volatile
 20049  0040' EF00' F000'        	goto	u10261
 20050  0044' EF00' F000'        	goto	u10260
 20051  0048'                    u10261:
 20052  0048' EF00' F000'        	goto	l8847
 20053  004C'                    u10260:
 20054  004C' 50C7               	movf	199,w,c	;volatile
 20055  004E'                    l8847:
 20056                           
 20057                           ;src/driver/i2c_native.c: 167:  *data = SSPBUF;
 20058  004E' C011' FFD9         	movff	i2c_read@data,fsr2l
 20059  0052' C012' FFDA         	movff	i2c_read@data+1,fsr2h
 20060  0056' CFC9 FFDF          	movff	4041,indf2	;volatile
 20061  005A'                    
 20062                           ;src/driver/i2c_native.c: 169:     PIR1bits.SSPIF = 0;
 20063  005A' 969E               	bcf	158,3,c	;volatile
 20064  005C'                    
 20065                           ;src/driver/i2c_native.c: 171:     SSPCON2bits.ACKDT = (ack)?0:1;
 20066  005C' 5000'              	movf	i2c_read@ack^0,w,c
 20067  005E' 1000'              	iorwf	(i2c_read@ack+1)^0,w,c
 20068  0060' B4D8               	btfsc	status,2,c
 20069  0062' EF00' F000'        	goto	u10271
 20070  0066' EF00' F000'        	goto	u10270
 20071  006A'                    u10271:
 20072  006A' 6A00'              	clrf	??_i2c_read^0,c
 20073  006C' 2A00'              	incf	??_i2c_read^0,f,c
 20074  006E' EF00' F000'        	goto	u10288
 20075  0072'                    u10270:
 20076  0072' 6A00'              	clrf	??_i2c_read^0,c
 20077  0074'                    u10288:
 20078  0074' 3A00'              	swapf	??_i2c_read^0,f,c
 20079  0076' 4600'              	rlncf	??_i2c_read^0,f,c
 20080  0078' 50C5               	movf	197,w,c	;volatile
 20081  007A' 1800'              	xorwf	??_i2c_read^0,w,c
 20082  007C' 0BDF               	andlw	-33
 20083  007E' 1800'              	xorwf	??_i2c_read^0,w,c
 20084  0080' 6EC5               	movwf	197,c	;volatile
 20085  0082'                    
 20086                           ;src/driver/i2c_native.c: 172:     SSPCON2bits.ACKEN = 1;
 20087  0082' 88C5               	bsf	197,4,c	;volatile
 20088  0084'                    
 20089                           ;src/driver/i2c_native.c: 173:     res = i2c_wait_int(2500);
 20090  0084' 0EC4               	movlw	196
 20091  0086' 6E00'              	movwf	i2c_wait_int@timeout^0,c
 20092  0088' 0E09               	movlw	9
 20093  008A' 6E00'              	movwf	(i2c_wait_int@timeout+1)^0,c
 20094  008C' 0E00               	movlw	0
 20095  008E' 6E00'              	movwf	(i2c_wait_int@timeout+2)^0,c
 20096  0090' 0E00               	movlw	0
 20097  0092' 6E00'              	movwf	(i2c_wait_int@timeout+3)^0,c
 20098  0094' EC00' F000'        	call	_i2c_wait_int	;wreg free
 20099  0098' C00D' F016'        	movff	?_i2c_wait_int,i2c_read@res
 20100  009C' C00E' F017'        	movff	?_i2c_wait_int+1,i2c_read@res+1
 20101  00A0'                    
 20102                           ;src/driver/i2c_native.c: 174:     if(res) return res;
 20103  00A0' 5000'              	movf	i2c_read@res^0,w,c
 20104  00A2' 1000'              	iorwf	(i2c_read@res+1)^0,w,c
 20105  00A4' B4D8               	btfsc	status,2,c
 20106  00A6' EF00' F000'        	goto	u10291
 20107  00AA' EF00' F000'        	goto	u10290
 20108  00AE'                    u10291:
 20109  00AE' EF00' F000'        	goto	l8861
 20110  00B2'                    u10290:
 20111  00B2' EF00' F000'        	goto	l8843
 20112  00B6'                    l8861:
 20113                           
 20114                           ;src/driver/i2c_native.c: 176:     return 0;
 20115  00B6' 0E00               	movlw	0
 20116  00B8' 6E00'              	movwf	(?_i2c_read+1)^0,c
 20117  00BA' 0E00               	movlw	0
 20118  00BC' 6E00'              	movwf	?_i2c_read^0,c
 20119  00BE'                    l209:
 20120  00BE' 0012               	return		;funcret
 20121  00C0'                    __end_of_i2c_read:
 20122                           	opt callstack 0
 20123                           
 20124 ;; *************** function _i2c_wait_int *****************
 20125 ;; Defined at:
 20126 ;;		line 81 in file "src/driver/i2c_native.c"
 20127 ;; Parameters:    Size  Location     Type
 20128 ;;  timeout         4   13[COMRAM] unsigned long 
 20129 ;; Auto vars:     Size  Location     Type
 20130 ;;		None
 20131 ;; Return value:  Size  Location     Type
 20132 ;;                  2   13[COMRAM] int 
 20133 ;; Registers used:
 20134 ;;		wreg, status,2, status,0
 20135 ;; Tracked objects:
 20136 ;;		On entry : 0/0
 20137 ;;		On exit  : 0/0
 20138 ;;		Unchanged: 0/0
 20139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20140 ;;      Params:         4       0       0       0       0       0       0
 20141 ;;      Locals:         0       0       0       0       0       0       0
 20142 ;;      Temps:          0       0       0       0       0       0       0
 20143 ;;      Totals:         4       0       0       0       0       0       0
 20144 ;;Total ram usage:        4 bytes
 20145 ;; Hardware stack levels used:    1
 20146 ;; Hardware stack levels required when called:    2
 20147 ;; This function calls:
 20148 ;;		Nothing
 20149 ;; This function is called by:
 20150 ;;		_i2c_start
 20151 ;;		_i2c_stop
 20152 ;;		_i2c_read
 20153 ;;		_i2c_write
 20154 ;; This function uses a non-reentrant model
 20155 ;;
 20156                           
 20157                           	psect	text72
 20158  0000'                    __ptext72:
 20159                           	opt callstack 0
 20160  0000'                    _i2c_wait_int:
 20161                           	opt callstack 22
 20162  0000'                    
 20163                           ;src/driver/i2c_native.c: 81: static int i2c_wait_int(u32 timeout);src/driver/i2c_native
      +                          .c: 82: {;src/driver/i2c_native.c: 84:  while((PIR1bits.SSPIF == 0) && (SSPCON1bits.WCOL
      +                           == 0)) {
 20164  0000' EF00' F000'        	goto	l184
 20165  0004'                    l185:
 20166                           
 20167                           ;src/driver/i2c_native.c: 85:   _delaywdt((unsigned long)((1)*(8000000/4000000.0)));
 20168  0004' 0004               	clrwdt	
 20169  0006' F000               	nop		;2 cycle nop
 20170  0008'                    
 20171                           ;src/driver/i2c_native.c: 86:   if(--timeout == 0) {
 20172  0008' 0600'              	decf	i2c_wait_int@timeout^0,f,c
 20173  000A' 0E00               	movlw	0
 20174  000C' 5A00'              	subwfb	(i2c_wait_int@timeout+1)^0,f,c
 20175  000E' 5A00'              	subwfb	(i2c_wait_int@timeout+2)^0,f,c
 20176  0010' 5A00'              	subwfb	(i2c_wait_int@timeout+3)^0,f,c
 20177  0012' 5000'              	movf	i2c_wait_int@timeout^0,w,c
 20178  0014' 1000'              	iorwf	(i2c_wait_int@timeout+1)^0,w,c
 20179  0016' 1000'              	iorwf	(i2c_wait_int@timeout+2)^0,w,c
 20180  0018' 1000'              	iorwf	(i2c_wait_int@timeout+3)^0,w,c
 20181  001A' A4D8               	btfss	status,2,c
 20182  001C' EF00' F000'        	goto	u10131
 20183  0020' EF00' F000'        	goto	u10130
 20184  0024'                    u10131:
 20185  0024' EF00' F000'        	goto	l184
 20186  0028'                    u10130:
 20187  0028'                    
 20188                           ;src/driver/i2c_native.c: 88:    return -4;
 20189  0028' 0EFF               	movlw	255
 20190  002A' 6E00'              	movwf	(?_i2c_wait_int+1)^0,c
 20191  002C' 0EFC               	movlw	252
 20192  002E' 6E00'              	movwf	?_i2c_wait_int^0,c
 20193  0030' EF00' F000'        	goto	l187
 20194  0034'                    l184:
 20195                           
 20196                           ;src/driver/i2c_native.c: 84:  while((PIR1bits.SSPIF == 0) && (SSPCON1bits.WCOL == 0)) {
 20197  0034' B69E               	btfsc	158,3,c	;volatile
 20198  0036' EF00' F000'        	goto	u10141
 20199  003A' EF00' F000'        	goto	u10140
 20200  003E'                    u10141:
 20201  003E' EF00' F000'        	goto	l190
 20202  0042'                    u10140:
 20203  0042' AEC6               	btfss	198,7,c	;volatile
 20204  0044' EF00' F000'        	goto	u10151
 20205  0048' EF00' F000'        	goto	u10150
 20206  004C'                    u10151:
 20207  004C' EF00' F000'        	goto	l185
 20208  0050'                    u10150:
 20209  0050'                    l190:
 20210                           
 20211                           ;src/driver/i2c_native.c: 93:  if(SSPCON1bits.WCOL != 0) {
 20212  0050' AEC6               	btfss	198,7,c	;volatile
 20213  0052' EF00' F000'        	goto	u10161
 20214  0056' EF00' F000'        	goto	u10160
 20215  005A'                    u10161:
 20216  005A' EF00' F000'        	goto	l8783
 20217  005E'                    u10160:
 20218  005E'                    
 20219                           ;src/driver/i2c_native.c: 95:   SSPCON1bits.WCOL = 0;
 20220  005E' 9EC6               	bcf	198,7,c	;volatile
 20221  0060'                    
 20222                           ;src/driver/i2c_native.c: 96:   return -5;
 20223  0060' 0EFF               	movlw	255
 20224  0062' 6E00'              	movwf	(?_i2c_wait_int+1)^0,c
 20225  0064' 0EFB               	movlw	251
 20226  0066' 6E00'              	movwf	?_i2c_wait_int^0,c
 20227  0068' EF00' F000'        	goto	l187
 20228  006C'                    l8783:
 20229                           
 20230                           ;src/driver/i2c_native.c: 100:  return 0;
 20231  006C' 0E00               	movlw	0
 20232  006E' 6E00'              	movwf	(?_i2c_wait_int+1)^0,c
 20233  0070' 0E00               	movlw	0
 20234  0072' 6E00'              	movwf	?_i2c_wait_int^0,c
 20235  0074'                    l187:
 20236  0074' 0012               	return		;funcret
 20237  0076'                    __end_of_i2c_wait_int:
 20238                           	opt callstack 0
 20239                           
 20240 ;; *************** function _check_ADF5341_status *****************
 20241 ;; Defined at:
 20242 ;;		line 155 in file "src/driver/adf4351.c"
 20243 ;; Parameters:    Size  Location     Type
 20244 ;;  ctx             2   43[BANK0 ] PTR struct adf4351_ctx
 20245 ;;		 -> g_adf4351(55), 
 20246 ;; Auto vars:     Size  Location     Type
 20247 ;;  stat            1   45[BANK0 ] unsigned char 
 20248 ;; Return value:  Size  Location     Type
 20249 ;;                  1    wreg      void 
 20250 ;; Registers used:
 20251 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20252 ;; Tracked objects:
 20253 ;;		On entry : 0/0
 20254 ;;		On exit  : 0/0
 20255 ;;		Unchanged: 0/0
 20256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20257 ;;      Params:         0       2       0       0       0       0       0
 20258 ;;      Locals:         0       1       0       0       0       0       0
 20259 ;;      Temps:          3       0       0       0       0       0       0
 20260 ;;      Totals:         3       3       0       0       0       0       0
 20261 ;;Total ram usage:        6 bytes
 20262 ;; Hardware stack levels used:    1
 20263 ;; Hardware stack levels required when called:   10
 20264 ;; This function calls:
 20265 ;;		_printf
 20266 ;; This function is called by:
 20267 ;;		_main
 20268 ;; This function uses a non-reentrant model
 20269 ;;
 20270                           
 20271                           	psect	text73
 20272  0000'                    __ptext73:
 20273                           	opt callstack 0
 20274  0000'                    _check_ADF5341_status:
 20275                           	opt callstack 20
 20276  0000'                    
 20277                           ;src/driver/adf4351.c: 155: void check_ADF5341_status(adf4351_ctx* ctx);src/driver/adf43
      +                          51.c: 156: {;src/driver/adf4351.c: 159:  u8 stat = ((*((PIN_ADF_LOCK)->pPORT) & (PIN_ADF
      +                          _LOCK)->mask) != 0);
 20278  0000' 0E00'              	movlw	low (_PIN_ADF_LOCK_DEF+4)
 20279  0002' 6EF6               	movwf	tblptrl,c
 20280  0004' 0E00'              	movlw	high (_PIN_ADF_LOCK_DEF+4)
 20281  0006' 6EF7               	movwf	tblptrh,c
 20282  0008'                    	if	0	;tblptru may be non-zero
 20283  0008'                    	endif
 20284  0008'                    	if	0	;tblptru may be non-zero
 20285  0008'                    	endif
 20286  0008' 0008               	tblrd		*
 20287  000A' CFF5 F061'         	movff	tablat,??_check_ADF5341_status
 20288  000E' 0E00'              	movlw	low _PIN_ADF_LOCK_DEF
 20289  0010' 6EF6               	movwf	tblptrl,c
 20290  0012'                    	if	1	;There is more than 1 active tblptr byte
 20291  0012' 0E00'              	movlw	high _PIN_ADF_LOCK_DEF
 20292  0014' 6EF7               	movwf	tblptrh,c
 20293  0016'                    	endif
 20294  0016'                    	if	0	;There are less than 3 active tblptr bytes
 20295  0016'                    	endif
 20296  0016' 0009               	tblrd		*+
 20297  0018' CFF5 F062'         	movff	tablat,??_check_ADF5341_status+1
 20298  001C' 0009               	tblrd		*+
 20299  001E' CFF5 F063'         	movff	tablat,??_check_ADF5341_status+2
 20300  0022' C062' FFD9         	movff	??_check_ADF5341_status+1,fsr2l
 20301  0026' C063' FFDA         	movff	??_check_ADF5341_status+2,fsr2h
 20302  002A' 50DF               	movf	indf2,w,c
 20303  002C' 1400'              	andwf	??_check_ADF5341_status^0,w,c
 20304  002E' 0900               	iorlw	0
 20305  0030' A4D8               	btfss	status,2,c
 20306  0032' EF00' F000'        	goto	u13201
 20307  0036' EF00' F000'        	goto	u13200
 20308  003A'                    u13201:
 20309  003A' 0E01               	movlw	1
 20310  003C' EF00' F000'        	goto	u13210
 20311  0040'                    u13200:
 20312  0040' 0E00               	movlw	0
 20313  0042'                    u13210:
 20314  0042' 0100               	movlb	0	; () banked
 20315  0044' 6F00'              	movwf	check_ADF5341_status@stat& (0+255),b
 20316  0046'                    
 20317                           ; BSR set to: 0
 20318                           ;src/driver/adf4351.c: 161:  if(stat != adf4351_lockstat)
 20319  0046' 5100'              	movf	_adf4351_lockstat& (0+255),w,b
 20320  0048' 1900'              	xorwf	check_ADF5341_status@stat& (0+255),w,b
 20321  004A' B4D8               	btfsc	status,2,c
 20322  004C' EF00' F000'        	goto	u13221
 20323  0050' EF00' F000'        	goto	u13220
 20324  0054'                    u13221:
 20325  0054' EF00' F000'        	goto	l98
 20326  0058'                    u13220:
 20327  0058'                    
 20328                           ; BSR set to: 0
 20329                           ;src/driver/adf4351.c: 162:  {;src/driver/adf4351.c: 163:   if(stat == 0)
 20330  0058' 5100'              	movf	check_ADF5341_status@stat& (0+255),w,b
 20331  005A' A4D8               	btfss	status,2,c
 20332  005C' EF00' F000'        	goto	u13231
 20333  0060' EF00' F000'        	goto	u13230
 20334  0064'                    u13231:
 20335  0064' EF00' F000'        	goto	l10641
 20336  0068'                    u13230:
 20337  0068'                    
 20338                           ; BSR set to: 0
 20339                           ;src/driver/adf4351.c: 164:   {;src/driver/adf4351.c: 165:    printf("ADF:unlocked\n");
 20340  0068' 0E00'              	movlw	low STR_2
 20341  006A' 6F00'              	movwf	printf@fmt& (0+255),b
 20342  006C' 0E00'              	movlw	high STR_2
 20343  006E' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
 20344  0070' EC00' F000'        	call	_printf	;wreg free
 20345  0074'                    
 20346                           ;src/driver/adf4351.c: 166:    *((PIN_LED_ADF_LOCK)->pPORT) |= (PIN_LED_ADF_LOCK)->mask;
 20347  0074' 0E00'              	movlw	low (_PIN_LED_ADF_LOCK_DEF+4)
 20348  0076' 6EF6               	movwf	tblptrl,c
 20349  0078' 0E00'              	movlw	high (_PIN_LED_ADF_LOCK_DEF+4)
 20350  007A' 6EF7               	movwf	tblptrh,c
 20351  007C'                    	if	0	;tblptru may be non-zero
 20352  007C'                    	endif
 20353  007C'                    	if	0	;tblptru may be non-zero
 20354  007C'                    	endif
 20355  007C' 0008               	tblrd		*
 20356  007E' CFF5 F061'         	movff	tablat,??_check_ADF5341_status
 20357  0082' 0E00'              	movlw	low _PIN_LED_ADF_LOCK_DEF
 20358  0084' 6EF6               	movwf	tblptrl,c
 20359  0086'                    	if	1	;There is more than 1 active tblptr byte
 20360  0086' 0E00'              	movlw	high _PIN_LED_ADF_LOCK_DEF
 20361  0088' 6EF7               	movwf	tblptrh,c
 20362  008A'                    	endif
 20363  008A'                    	if	0	;There are less than 3 active tblptr bytes
 20364  008A'                    	endif
 20365  008A' 0009               	tblrd		*+
 20366  008C' CFF5 F062'         	movff	tablat,??_check_ADF5341_status+1
 20367  0090' 0009               	tblrd		*+
 20368  0092' CFF5 F063'         	movff	tablat,??_check_ADF5341_status+2
 20369  0096' C062' FFD9         	movff	??_check_ADF5341_status+1,fsr2l
 20370  009A' C063' FFDA         	movff	??_check_ADF5341_status+2,fsr2h
 20371  009E' 5000'              	movf	??_check_ADF5341_status^0,w,c
 20372  00A0' 12DF               	iorwf	indf2,f,c
 20373                           
 20374                           ;src/driver/adf4351.c: 167:   }
 20375  00A2' EF00' F000'        	goto	l10645
 20376  00A6'                    l10641:
 20377                           
 20378                           ; BSR set to: 0
 20379                           ;src/driver/adf4351.c: 169:   {;src/driver/adf4351.c: 170:    printf("ADF:locked\n");
 20380  00A6' 0E00'              	movlw	low STR_3
 20381  00A8' 6F00'              	movwf	printf@fmt& (0+255),b
 20382  00AA' 0E00'              	movlw	high STR_3
 20383  00AC' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
 20384  00AE' EC00' F000'        	call	_printf	;wreg free
 20385  00B2'                    
 20386                           ;src/driver/adf4351.c: 171:    *((PIN_LED_ADF_LOCK)->pPORT) &= ~(PIN_LED_ADF_LOCK)->mask
      +                          ;
 20387  00B2' 0E00'              	movlw	low (_PIN_LED_ADF_LOCK_DEF+4)
 20388  00B4' 6EF6               	movwf	tblptrl,c
 20389  00B6' 0E00'              	movlw	high (_PIN_LED_ADF_LOCK_DEF+4)
 20390  00B8' 6EF7               	movwf	tblptrh,c
 20391  00BA'                    	if	0	;tblptru may be non-zero
 20392  00BA'                    	endif
 20393  00BA'                    	if	0	;tblptru may be non-zero
 20394  00BA'                    	endif
 20395  00BA' 0008               	tblrd		*
 20396  00BC' 50F5               	movf	tablat,w,c
 20397  00BE' 0AFF               	xorlw	255
 20398  00C0' 6E00'              	movwf	??_check_ADF5341_status^0,c
 20399  00C2' 0E00'              	movlw	low _PIN_LED_ADF_LOCK_DEF
 20400  00C4' 6EF6               	movwf	tblptrl,c
 20401  00C6'                    	if	1	;There is more than 1 active tblptr byte
 20402  00C6' 0E00'              	movlw	high _PIN_LED_ADF_LOCK_DEF
 20403  00C8' 6EF7               	movwf	tblptrh,c
 20404  00CA'                    	endif
 20405  00CA'                    	if	0	;There are less than 3 active tblptr bytes
 20406  00CA'                    	endif
 20407  00CA' 0009               	tblrd		*+
 20408  00CC' CFF5 F062'         	movff	tablat,??_check_ADF5341_status+1
 20409  00D0' 0009               	tblrd		*+
 20410  00D2' CFF5 F063'         	movff	tablat,??_check_ADF5341_status+2
 20411  00D6' C062' FFD9         	movff	??_check_ADF5341_status+1,fsr2l
 20412  00DA' C063' FFDA         	movff	??_check_ADF5341_status+2,fsr2h
 20413  00DE' 5000'              	movf	??_check_ADF5341_status^0,w,c
 20414  00E0' 16DF               	andwf	indf2,f,c
 20415  00E2'                    l10645:
 20416                           
 20417                           ;src/driver/adf4351.c: 173:   adf4351_lockstat = stat;
 20418  00E2' C02D' F00A'        	movff	check_ADF5341_status@stat,_adf4351_lockstat
 20419  00E6'                    l98:
 20420  00E6' 0012               	return		;funcret
 20421  00E8'                    __end_of_check_ADF5341_status:
 20422                           	opt callstack 0
 20423                           
 20424 ;; *************** function _printf *****************
 20425 ;; Defined at:
 20426 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 20427 ;; Parameters:    Size  Location     Type
 20428 ;;  fmt             2   29[BANK0 ] PTR const unsigned char 
 20429 ;;		 -> STR_94(13), STR_93(31), STR_92(2), STR_91(26), 
 20430 ;;		 -> STR_90(15), STR_40(18), STR_37(17), STR_36(21), 
 20431 ;;		 -> STR_35(28), STR_34(11), STR_33(13), STR_32(27), 
 20432 ;;		 -> STR_31(20), STR_30(13), STR_29(9), STR_28(12), 
 20433 ;;		 -> STR_27(15), STR_26(9), STR_25(11), STR_24(15), 
 20434 ;;		 -> STR_23(32), STR_22(16), STR_21(18), STR_20(16), 
 20435 ;;		 -> STR_19(15), STR_18(32), STR_17(16), STR_16(18), 
 20436 ;;		 -> STR_15(16), STR_14(15), STR_13(32), STR_12(16), 
 20437 ;;		 -> STR_11(18), STR_10(20), STR_9(18), STR_8(8), 
 20438 ;;		 -> STR_7(39), STR_6(25), STR_5(25), STR_4(20), 
 20439 ;;		 -> STR_3(12), STR_2(14), STR_1(24), 
 20440 ;; Auto vars:     Size  Location     Type
 20441 ;;  ap              2   41[BANK0 ] PTR void [1]
 20442 ;;		 -> ?_printf(2), 
 20443 ;;  ret             2    0        int 
 20444 ;; Return value:  Size  Location     Type
 20445 ;;                  2   29[BANK0 ] int 
 20446 ;; Registers used:
 20447 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20448 ;; Tracked objects:
 20449 ;;		On entry : 0/0
 20450 ;;		On exit  : 0/0
 20451 ;;		Unchanged: 0/0
 20452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20453 ;;      Params:         0      10       0       0       0       0       0
 20454 ;;      Locals:         0       4       0       0       0       0       0
 20455 ;;      Temps:          0       0       0       0       0       0       0
 20456 ;;      Totals:         0      14       0       0       0       0       0
 20457 ;;Total ram usage:       14 bytes
 20458 ;; Hardware stack levels used:    1
 20459 ;; Hardware stack levels required when called:    9
 20460 ;; This function calls:
 20461 ;;		_vfprintf
 20462 ;; This function is called by:
 20463 ;;		_adf4351_set_freq
 20464 ;;		_check_ADF5341_status
 20465 ;;		_lnb_configure
 20466 ;;		_lnb_do_configure
 20467 ;;		_check_LNB_status
 20468 ;;		_set_reg24
 20469 ;;		_set_reg25
 20470 ;;		_set_reg26
 20471 ;;		_si5328_init
 20472 ;;		_si5328_set_freq
 20473 ;;		_si5328_perform_ical
 20474 ;;		_si5328_checkGPS
 20475 ;;		_check_si5328_status
 20476 ;;		_write_regset
 20477 ;;		_lcd_init
 20478 ;;		_print_string
 20479 ;;		_send_UBX_string
 20480 ;;		_setADF4351frequency
 20481 ;; This function uses a non-reentrant model
 20482 ;;
 20483                           
 20484                           	psect	text74
 20485  0000'                    __ptext74:
 20486                           	opt callstack 0
 20487  0000'                    _printf:
 20488                           	opt callstack 19
 20489  0000' 0E00'              	movlw	low (?_printf+2)
 20490  0002' 0100               	movlb	0	; () banked
 20491  0004' 6F00'              	movwf	printf@ap& (0+255),b
 20492  0006' 0E00'              	movlw	high (?_printf+2)
 20493  0008' 6F00'              	movwf	(printf@ap+1)& (0+255),b
 20494  000A'                    
 20495                           ; BSR set to: 0
 20496  000A' 0E00               	movlw	0
 20497  000C' 6F00'              	movwf	vfprintf@fp& (0+255),b
 20498  000E' 0E00               	movlw	0
 20499  0010' 6F00'              	movwf	(vfprintf@fp+1)& (0+255),b
 20500  0012' C01D' F019'        	movff	printf@fmt,vfprintf@fmt
 20501  0016' C01E' F01A'        	movff	printf@fmt+1,vfprintf@fmt+1
 20502  001A' 0E00'              	movlw	low printf@ap
 20503  001C' 6F00'              	movwf	vfprintf@ap& (0+255),b
 20504  001E' 0E00'              	movlw	high printf@ap
 20505  0020' 6F00'              	movwf	(vfprintf@ap+1)& (0+255),b
 20506  0022' EC00' F000'        	call	_vfprintf	;wreg free
 20507  0026' 0012               	return		;funcret
 20508  0028'                    __end_of_printf:
 20509                           	opt callstack 0
 20510                           
 20511 ;; *************** function _vfprintf *****************
 20512 ;; Defined at:
 20513 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20514 ;; Parameters:    Size  Location     Type
 20515 ;;  fp              2   23[BANK0 ] PTR struct _IO_FILE
 20516 ;;		 -> NULL(0), 
 20517 ;;  fmt             2   25[BANK0 ] PTR const unsigned char 
 20518 ;;		 -> STR_94(13), STR_93(31), STR_92(2), STR_91(26), 
 20519 ;;		 -> STR_90(15), STR_40(18), STR_37(17), STR_36(21), 
 20520 ;;		 -> STR_35(28), STR_34(11), STR_33(13), STR_32(27), 
 20521 ;;		 -> STR_31(20), STR_30(13), STR_29(9), STR_28(12), 
 20522 ;;		 -> STR_27(15), STR_26(9), STR_25(11), STR_24(15), 
 20523 ;;		 -> STR_23(32), STR_22(16), STR_21(18), STR_20(16), 
 20524 ;;		 -> STR_19(15), STR_18(32), STR_17(16), STR_16(18), 
 20525 ;;		 -> STR_15(16), STR_14(15), STR_13(32), STR_12(16), 
 20526 ;;		 -> STR_11(18), STR_10(20), STR_9(18), STR_8(8), 
 20527 ;;		 -> STR_7(39), STR_6(25), STR_5(25), STR_4(20), 
 20528 ;;		 -> STR_3(12), STR_2(14), STR_1(24), 
 20529 ;;  ap              2   27[BANK0 ] PTR PTR void 
 20530 ;;		 -> printf@ap(2), 
 20531 ;; Auto vars:     Size  Location     Type
 20532 ;;  cfmt            2   95[COMRAM] PTR unsigned char 
 20533 ;;		 -> STR_94(13), STR_93(31), STR_92(2), STR_91(26), 
 20534 ;;		 -> STR_90(15), STR_40(18), STR_37(17), STR_36(21), 
 20535 ;;		 -> STR_35(28), STR_34(11), STR_33(13), STR_32(27), 
 20536 ;;		 -> STR_31(20), STR_30(13), STR_29(9), STR_28(12), 
 20537 ;;		 -> STR_27(15), STR_26(9), STR_25(11), STR_24(15), 
 20538 ;;		 -> STR_23(32), STR_22(16), STR_21(18), STR_20(16), 
 20539 ;;		 -> STR_19(15), STR_18(32), STR_17(16), STR_16(18), 
 20540 ;;		 -> STR_15(16), STR_14(15), STR_13(32), STR_12(16), 
 20541 ;;		 -> STR_11(18), STR_10(20), STR_9(18), STR_8(8), 
 20542 ;;		 -> STR_7(39), STR_6(25), STR_5(25), STR_4(20), 
 20543 ;;		 -> STR_3(12), STR_2(14), STR_1(24), 
 20544 ;; Return value:  Size  Location     Type
 20545 ;;                  2   23[BANK0 ] int 
 20546 ;; Registers used:
 20547 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20548 ;; Tracked objects:
 20549 ;;		On entry : 0/0
 20550 ;;		On exit  : 0/0
 20551 ;;		Unchanged: 0/0
 20552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20553 ;;      Params:         0       6       0       0       0       0       0
 20554 ;;      Locals:         2       0       0       0       0       0       0
 20555 ;;      Temps:          0       0       0       0       0       0       0
 20556 ;;      Totals:         2       6       0       0       0       0       0
 20557 ;;Total ram usage:        8 bytes
 20558 ;; Hardware stack levels used:    1
 20559 ;; Hardware stack levels required when called:    8
 20560 ;; This function calls:
 20561 ;;		_vfpfcnvrt
 20562 ;; This function is called by:
 20563 ;;		_printf
 20564 ;; This function uses a non-reentrant model
 20565 ;;
 20566                           
 20567                           	psect	text75
 20568  0000'                    __ptext75:
 20569                           	opt callstack 0
 20570  0000'                    _vfprintf:
 20571                           	opt callstack 19
 20572  0000'                    
 20573                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 20574  0000' C019' F05F'        	movff	vfprintf@fmt,vfprintf@cfmt
 20575  0004' C01A' F060'        	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 20576  0008'                    
 20577                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 20578  0008' 0E00               	movlw	0
 20579  000A' 0102               	movlb	2	; () banked
 20580  000C' 6F00'              	movwf	(_nout+1)& (0+255),b
 20581  000E' 0E00               	movlw	0
 20582  0010' 6F00'              	movwf	_nout& (0+255),b
 20583                           
 20584                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 20585  0012' EF00' F000'        	goto	l9549
 20586  0016'                    l9547:
 20587                           
 20588                           ; BSR set to: 2
 20589                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 20590  0016' C017' F04B'        	movff	vfprintf@fp,vfpfcnvrt@fp
 20591  001A' C018' F04C'        	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 20592  001E' 0E00'              	movlw	low vfprintf@cfmt
 20593  0020' 6E00'              	movwf	vfpfcnvrt@fmt^0,c
 20594  0022' 0E00'              	movlw	high vfprintf@cfmt
 20595  0024' 6E00'              	movwf	(vfpfcnvrt@fmt+1)^0,c
 20596  0026' C01B' F04F'        	movff	vfprintf@ap,vfpfcnvrt@ap
 20597  002A' C01C' F050'        	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 20598  002E' EC00' F000'        	call	_vfpfcnvrt	;wreg free
 20599  0032' 5000'              	movf	?_vfpfcnvrt^0,w,c
 20600  0034' 0102               	movlb	2	; () banked
 20601  0036' 2700'              	addwf	_nout& (0+255),f,b
 20602  0038' 5000'              	movf	(?_vfpfcnvrt+1)^0,w,c
 20603  003A' 2300'              	addwfc	(_nout+1)& (0+255),f,b
 20604  003C'                    l9549:
 20605                           
 20606                           ; BSR set to: 2
 20607                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 20608  003C' C05F' FFF6         	movff	vfprintf@cfmt,tblptrl
 20609  0040' C060' FFF7         	movff	vfprintf@cfmt+1,tblptrh
 20610  0044'                    	if	0	;tblptru may be non-zero
 20611  0044'                    	endif
 20612  0044'                    	if	0	;tblptru may be non-zero
 20613  0044'                    	endif
 20614  0044' 0008               	tblrd		*
 20615  0046' 50F5               	movf	tablat,w,c
 20616  0048' 0900               	iorlw	0
 20617  004A' A4D8               	btfss	status,2,c
 20618  004C' EF00' F000'        	goto	u11641
 20619  0050' EF00' F000'        	goto	u11640
 20620  0054'                    u11641:
 20621  0054' EF00' F000'        	goto	l9547
 20622  0058'                    u11640:
 20623  0058'                    
 20624                           ; BSR set to: 2
 20625                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 20626  0058' C00E' F017'        	movff	_nout,?_vfprintf
 20627  005C' C00F' F018'        	movff	_nout+1,?_vfprintf+1
 20628  0060'                    
 20629                           ; BSR set to: 2
 20630  0060' 0012               	return		;funcret
 20631  0062'                    __end_of_vfprintf:
 20632                           	opt callstack 0
 20633                           
 20634 ;; *************** function _vfpfcnvrt *****************
 20635 ;; Defined at:
 20636 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20637 ;; Parameters:    Size  Location     Type
 20638 ;;  fp              2   75[COMRAM] PTR struct _IO_FILE
 20639 ;;		 -> NULL(0), 
 20640 ;;  fmt             2   77[COMRAM] PTR PTR unsigned char 
 20641 ;;		 -> vfprintf@cfmt(2), 
 20642 ;;  ap              2   79[COMRAM] PTR PTR void 
 20643 ;;		 -> printf@ap(2), 
 20644 ;; Auto vars:     Size  Location     Type
 20645 ;;  llu             8   14[BANK0 ] unsigned long long 
 20646 ;;  ll              8    6[BANK0 ] long long 
 20647 ;;  f               4    0        long long 
 20648 ;;  vp              3    0        PTR void 
 20649 ;;  ct              3    0        unsigned char [3]
 20650 ;;  done            2    2[BANK0 ] int 
 20651 ;;  cp              2    0[BANK0 ] PTR unsigned char 
 20652 ;;		 -> ?_printf(2), CalculateGridSquare@grid(7), STR_89(14), STR_88(7), 
 20653 ;;		 -> STR_87(6), STR_86(12), STR_85(17), itoa@buffer(12), 
 20654 ;;		 -> STR_84(5), STR_83(5), STR_82(7), STR_81(7), 
 20655 ;;		 -> STR_80(8), STR_79(5), GPS_lon(15), GPS_lat(15), 
 20656 ;;		 -> STR_78(4), STR_77(4), STR_76(6), STR_75(5), 
 20657 ;;		 -> STR_74(4), STR_73(4), STR_72(10), GPS_time(9), 
 20658 ;;		 -> STR_71(17), STR_70(17), STR_69(17), STR_68(7), 
 20659 ;;		 -> STR_67(7), STR_66(17), STR_65(17), STR_64(17), 
 20660 ;;		 -> STR_63(7), STR_62(7), STR_61(17), STR_60(17), 
 20661 ;;		 -> STR_59(17), STR_58(7), STR_57(7), STR_56(6), 
 20662 ;;		 -> STR_55(6), STR_54(17), STR_53(5), STR_52(5), 
 20663 ;;		 -> STR_51(5), STR_50(5), STR_49(3), STR_48(17), 
 20664 ;;		 -> STR_47(17), STR_46(17), STR_45(17), STR_44(17), 
 20665 ;;		 -> STR_43(17), STR_42(4), STR_41(17), ssd1306_setpos@x(1), 
 20666 ;;		 -> STR_39(17), STR_38(17), 
 20667 ;;  i               2    0        int 
 20668 ;;  c               1   22[BANK0 ] unsigned char 
 20669 ;; Return value:  Size  Location     Type
 20670 ;;                  2   75[COMRAM] int 
 20671 ;; Registers used:
 20672 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20673 ;; Tracked objects:
 20674 ;;		On entry : 0/0
 20675 ;;		On exit  : 0/0
 20676 ;;		Unchanged: 0/0
 20677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20678 ;;      Params:         6       0       0       0       0       0       0
 20679 ;;      Locals:         0      23       0       0       0       0       0
 20680 ;;      Temps:         14       0       0       0       0       0       0
 20681 ;;      Totals:        20      23       0       0       0       0       0
 20682 ;;Total ram usage:       43 bytes
 20683 ;; Hardware stack levels used:    1
 20684 ;; Hardware stack levels required when called:    7
 20685 ;; This function calls:
 20686 ;;		_atoi
 20687 ;;		_dtoa
 20688 ;;		_fputc
 20689 ;;		_isdigit
 20690 ;;		_stoa
 20691 ;;		_strncmp
 20692 ;;		_xtoa
 20693 ;; This function is called by:
 20694 ;;		_vfprintf
 20695 ;; This function uses a non-reentrant model
 20696 ;;
 20697                           
 20698                           	psect	text76
 20699  0000'                    __ptext76:
 20700                           	opt callstack 0
 20701  0000'                    _vfpfcnvrt:
 20702                           	opt callstack 19
 20703  0000'                    
 20704                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 20705  0000' C04D' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 20706  0004' C04E' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 20707  0008' CFDE FFF6          	movff	postinc2,tblptrl
 20708  000C' CFDD FFF7          	movff	postdec2,tblptrh
 20709  0010'                    	if	0	;tblptru may be non-zero
 20710  0010'                    	endif
 20711  0010'                    	if	0	;tblptru may be non-zero
 20712  0010'                    	endif
 20713  0010' 0008               	tblrd		*
 20714  0012' 50F5               	movf	tablat,w,c
 20715  0014' 0A25               	xorlw	37
 20716  0016' A4D8               	btfss	status,2,c
 20717  0018' EF00' F000'        	goto	u11451
 20718  001C' EF00' F000'        	goto	u11450
 20719  0020'                    u11451:
 20720  0020' EF00' F000'        	goto	l9519
 20721  0024'                    u11450:
 20722  0024'                    
 20723                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 20724  0024' C04D' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 20725  0028' C04E' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 20726  002C' 2ADE               	incf	postinc2,f,c
 20727  002E' 0E00               	movlw	0
 20728  0030' 22DD               	addwfc	postdec2,f,c
 20729  0032'                    
 20730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 20731  0032' 0E00               	movlw	0
 20732  0034' 0100               	movlb	0	; () banked
 20733  0036' 6F00'              	movwf	(_width+1)& (0+255),b
 20734  0038' 0E00               	movlw	0
 20735  003A' 6F00'              	movwf	_width& (0+255),b
 20736  003C' C000' F002'        	movff	_width,_flags
 20737  0040' C001' F003'        	movff	_width+1,_flags+1
 20738  0044'                    
 20739                           ; BSR set to: 0
 20740                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 20741  0044' 6800'              	setf	_prec^0,c
 20742  0046' 6800'              	setf	(_prec+1)^0,c
 20743  0048'                    
 20744                           ; BSR set to: 0
 20745                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 688:         done = 0;
 20746  0048' 0E00               	movlw	0
 20747  004A' 6F00'              	movwf	(vfpfcnvrt@done+1)& (0+255),b
 20748  004C' 0E00               	movlw	0
 20749  004E' 6F00'              	movwf	vfpfcnvrt@done& (0+255),b
 20750                           
 20751                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 689:         while (!done) {
 20752  0050' EF00' F000'        	goto	l9425
 20753  0054'                    l9399:
 20754                           
 20755                           ; BSR set to: 0
 20756                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 692:                     flag
      +                          s |= (1 << 0);
 20757  0054' 8000'              	bsf	_flags^0,0,c
 20758  0056'                    l9401:
 20759                           
 20760                           ; BSR set to: 0
 20761                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 693:                     ++*f
      +                          mt;
 20762  0056' C04D' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 20763  005A' C04E' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 20764  005E' 2ADE               	incf	postinc2,f,c
 20765  0060' 0E00               	movlw	0
 20766  0062' 22DD               	addwfc	postdec2,f,c
 20767                           
 20768                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 694:                     brea
      +                          k;
 20769  0064' EF00' F000'        	goto	l9425
 20770  0068'                    l9403:
 20771                           
 20772                           ; BSR set to: 0
 20773                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 696:                     flag
      +                          s |= (1 << 1);
 20774  0068' 8200'              	bsf	_flags^0,1,c
 20775  006A' EF00' F000'        	goto	l9401
 20776  006E'                    l9407:
 20777                           
 20778                           ; BSR set to: 0
 20779                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 700:                     flag
      +                          s |= (1 << 2);
 20780  006E' 8400'              	bsf	_flags^0,2,c
 20781  0070' EF00' F000'        	goto	l9401
 20782  0074'                    l9411:
 20783                           
 20784                           ; BSR set to: 0
 20785                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 704:                     flag
      +                          s |= (1 << 3);
 20786  0074' 8600'              	bsf	_flags^0,3,c
 20787  0076' EF00' F000'        	goto	l9401
 20788  007A'                    l9415:
 20789                           
 20790                           ; BSR set to: 0
 20791                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 708:                     flag
      +                          s |= (1 << 4);
 20792  007A' 8800'              	bsf	_flags^0,4,c
 20793  007C' EF00' F000'        	goto	l9401
 20794  0080'                    l9419:
 20795                           
 20796                           ; BSR set to: 0
 20797                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 712:                     done
      +                           = 1;
 20798  0080' 0E00               	movlw	0
 20799  0082' 6F00'              	movwf	(vfpfcnvrt@done+1)& (0+255),b
 20800  0084' 0E01               	movlw	1
 20801  0086' 6F00'              	movwf	vfpfcnvrt@done& (0+255),b
 20802                           
 20803                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 713:                     brea
      +                          k;
 20804  0088' EF00' F000'        	goto	l9425
 20805  008C'                    l9423:
 20806                           
 20807                           ; BSR set to: 0
 20808  008C' C04D' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 20809  0090' C04E' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 20810  0094' CFDE FFF6          	movff	postinc2,tblptrl
 20811  0098' CFDD FFF7          	movff	postdec2,tblptrh
 20812  009C'                    	if	0	;tblptru may be non-zero
 20813  009C'                    	endif
 20814  009C'                    	if	0	;tblptru may be non-zero
 20815  009C'                    	endif
 20816  009C' 0008               	tblrd		*
 20817  009E' 50F5               	movf	tablat,w,c
 20818  00A0' 6E00'              	movwf	??_vfpfcnvrt^0,c
 20819  00A2' 6A00'              	clrf	(??_vfpfcnvrt+1)^0,c
 20820                           
 20821                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20822                           ; Switch size 1, requested type "simple"
 20823                           ; Number of cases is 1, Range of values is 0 to 0
 20824                           ; switch strategies available:
 20825                           ; Name         Instructions Cycles
 20826                           ; simple_byte            4     3 (average)
 20827                           ;	Chosen strategy is simple_byte
 20828  00A4' 5000'              	movf	(??_vfpfcnvrt+1)^0,w,c
 20829  00A6' 0A00               	xorlw	0	; case 0
 20830  00A8' B4D8               	btfsc	status,2,c
 20831  00AA' EF00' F000'        	goto	l11313
 20832  00AE' EF00' F000'        	goto	l9419
 20833  00B2'                    l11313:
 20834                           
 20835                           ; BSR set to: 0
 20836                           ; Switch size 1, requested type "simple"
 20837                           ; Number of cases is 5, Range of values is 32 to 48
 20838                           ; switch strategies available:
 20839                           ; Name         Instructions Cycles
 20840                           ; simple_byte           16     9 (average)
 20841                           ;	Chosen strategy is simple_byte
 20842  00B2' 5000'              	movf	??_vfpfcnvrt^0,w,c
 20843  00B4' 0A20               	xorlw	32	; case 32
 20844  00B6' B4D8               	btfsc	status,2,c
 20845  00B8' EF00' F000'        	goto	l9411
 20846  00BC' 0A03               	xorlw	3	; case 35
 20847  00BE' B4D8               	btfsc	status,2,c
 20848  00C0' EF00' F000'        	goto	l9415
 20849  00C4' 0A08               	xorlw	8	; case 43
 20850  00C6' B4D8               	btfsc	status,2,c
 20851  00C8' EF00' F000'        	goto	l9407
 20852  00CC' 0A06               	xorlw	6	; case 45
 20853  00CE' B4D8               	btfsc	status,2,c
 20854  00D0' EF00' F000'        	goto	l9399
 20855  00D4' 0A1D               	xorlw	29	; case 48
 20856  00D6' B4D8               	btfsc	status,2,c
 20857  00D8' EF00' F000'        	goto	l9403
 20858  00DC' EF00' F000'        	goto	l9419
 20859  00E0'                    l9425:
 20860                           
 20861                           ; BSR set to: 0
 20862                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 689:         while (!done) {
 20863  00E0' 5100'              	movf	vfpfcnvrt@done& (0+255),w,b
 20864  00E2' 1100'              	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
 20865  00E4' B4D8               	btfsc	status,2,c
 20866  00E6' EF00' F000'        	goto	u11461
 20867  00EA' EF00' F000'        	goto	u11460
 20868  00EE'                    u11461:
 20869  00EE' EF00' F000'        	goto	l9423
 20870  00F2'                    u11460:
 20871  00F2'                    
 20872                           ; BSR set to: 0
 20873                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 716:         if (flags & (1 <
      +                          < 0)) {
 20874  00F2' A000'              	btfss	_flags^0,0,c
 20875  00F4' EF00' F000'        	goto	u11471
 20876  00F8' EF00' F000'        	goto	u11470
 20877  00FC'                    u11471:
 20878  00FC' EF00' F000'        	goto	l9429
 20879  0100'                    u11470:
 20880  0100'                    
 20881                           ; BSR set to: 0
 20882                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 717:             flags &= ~(1
      +                           << 1);
 20883  0100' 9200'              	bcf	_flags^0,1,c
 20884  0102'                    l9429:
 20885                           
 20886                           ; BSR set to: 0
 20887                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 20888  0102' C04D' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 20889  0106' C04E' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 20890  010A' CFDE FFF6          	movff	postinc2,tblptrl
 20891  010E' CFDD FFF7          	movff	postdec2,tblptrh
 20892  0112'                    	if	0	;tblptru may be non-zero
 20893  0112'                    	endif
 20894  0112'                    	if	0	;tblptru may be non-zero
 20895  0112'                    	endif
 20896  0112' 0008               	tblrd		*
 20897  0114' 50F5               	movf	tablat,w,c
 20898  0116' 0A2A               	xorlw	42
 20899  0118' A4D8               	btfss	status,2,c
 20900  011A' EF00' F000'        	goto	u11481
 20901  011E' EF00' F000'        	goto	u11480
 20902  0122'                    u11481:
 20903  0122' EF00' F000'        	goto	l9437
 20904  0126'                    u11480:
 20905  0126'                    
 20906                           ; BSR set to: 0
 20907                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 20908  0126' C04D' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 20909  012A' C04E' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 20910  012E' 2ADE               	incf	postinc2,f,c
 20911  0130' 0E00               	movlw	0
 20912  0132' 22DD               	addwfc	postdec2,f,c
 20913                           
 20914                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 20915  0134' C04F' FFD9         	movff	vfpfcnvrt@ap,fsr2l
 20916  0138' C050' FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 20917  013C' CFDF F051'         	movff	indf2,??_vfpfcnvrt
 20918  0140' 0E02               	movlw	2
 20919  0142' 26DE               	addwf	postinc2,f,c
 20920  0144' CFDF F052'         	movff	indf2,??_vfpfcnvrt+1
 20921  0148' 0E00               	movlw	0
 20922  014A' 22DD               	addwfc	postdec2,f,c
 20923  014C' C051' FFD9         	movff	??_vfpfcnvrt,fsr2l
 20924  0150' C052' FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 20925  0154' CFDE F000'         	movff	postinc2,_width
 20926  0158' CFDD F001'         	movff	postdec2,_width+1
 20927  015C'                    
 20928                           ; BSR set to: 0
 20929                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 20930  015C' BF00'              	btfsc	(_width+1)& (0+255),7,b
 20931  015E' EF00' F000'        	goto	u11490
 20932  0162' EF00' F000'        	goto	u11491
 20933  0166'                    u11491:
 20934  0166' EF00' F000'        	goto	l9447
 20935  016A'                    u11490:
 20936  016A'                    
 20937                           ; BSR set to: 0
 20938                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 20939  016A' 8000'              	bsf	_flags^0,0,c
 20940                           
 20941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 20942  016C' 6D00'              	negf	_width& (0+255),b
 20943  016E' 1F00'              	comf	(_width+1)& (0+255),f,b
 20944  0170' B0D8               	btfsc	status,0,c
 20945  0172' 2B00'              	incf	(_width+1)& (0+255),f,b
 20946  0174' EF00' F000'        	goto	l9447
 20947  0178'                    l9437:
 20948                           
 20949                           ; BSR set to: 0
 20950                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 20951  0178' C04D' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 20952  017C' C04E' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 20953  0180' CFDE F01A'         	movff	postinc2,atoi@s
 20954  0184' CFDD F01B'         	movff	postdec2,atoi@s+1
 20955  0188' EC00' F000'        	call	_atoi	;wreg free
 20956  018C' C01A' F000'        	movff	?_atoi,_width
 20957  0190' C01B' F001'        	movff	?_atoi+1,_width+1
 20958                           
 20959                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 20960  0194' EF00' F000'        	goto	l9441
 20961  0198'                    l9439:
 20962                           
 20963                           ; BSR set to: 0
 20964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 20965  0198' C04D' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 20966  019C' C04E' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 20967  01A0' 2ADE               	incf	postinc2,f,c
 20968  01A2' 0E00               	movlw	0
 20969  01A4' 22DD               	addwfc	postdec2,f,c
 20970  01A6'                    l9441:
 20971  01A6' 0ED0               	movlw	208
 20972  01A8' 6E00'              	movwf	??_vfpfcnvrt^0,c
 20973  01AA' 0EFF               	movlw	255
 20974  01AC' 6E00'              	movwf	(??_vfpfcnvrt+1)^0,c
 20975  01AE' C04D' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 20976  01B2' C04E' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 20977  01B6' CFDE FFF6          	movff	postinc2,tblptrl
 20978  01BA' CFDD FFF7          	movff	postdec2,tblptrh
 20979  01BE'                    	if	0	;tblptru may be non-zero
 20980  01BE'                    	endif
 20981  01BE'                    	if	0	;tblptru may be non-zero
 20982  01BE'                    	endif
 20983  01BE' 0008               	tblrd		*
 20984  01C0' 50F5               	movf	tablat,w,c
 20985  01C2' 6E00'              	movwf	(??_vfpfcnvrt+2)^0,c
 20986  01C4' 6A00'              	clrf	(??_vfpfcnvrt+3)^0,c
 20987  01C6' 5000'              	movf	??_vfpfcnvrt^0,w,c
 20988  01C8' 2600'              	addwf	(??_vfpfcnvrt+2)^0,f,c
 20989  01CA' 5000'              	movf	(??_vfpfcnvrt+1)^0,w,c
 20990  01CC' 2200'              	addwfc	(??_vfpfcnvrt+3)^0,f,c
 20991  01CE' 5000'              	movf	(??_vfpfcnvrt+3)^0,w,c
 20992  01D0' E10A               	bnz	u11500
 20993  01D2' 0E0A               	movlw	10
 20994  01D4' 5C00'              	subwf	(??_vfpfcnvrt+2)^0,w,c
 20995  01D6' A0D8               	btfss	status,0,c
 20996  01D8' EF00' F000'        	goto	u11501
 20997  01DC' EF00' F000'        	goto	u11500
 20998  01E0'                    u11501:
 20999  01E0' 0E01               	movlw	1
 21000  01E2' EF00' F000'        	goto	u11510
 21001  01E6'                    u11500:
 21002  01E6' 0E00               	movlw	0
 21003  01E8'                    u11510:
 21004  01E8' 0100               	movlb	0	; () banked
 21005  01EA' 6F00'              	movwf	_vfpfcnvrt$2949& (0+255),b
 21006  01EC' 6B00'              	clrf	(_vfpfcnvrt$2949+1)& (0+255),b
 21007  01EE'                    
 21008                           ; BSR set to: 0
 21009  01EE' 5100'              	movf	_vfpfcnvrt$2949& (0+255),w,b
 21010  01F0' 1100'              	iorwf	(_vfpfcnvrt$2949+1)& (0+255),w,b
 21011  01F2' A4D8               	btfss	status,2,c
 21012  01F4' EF00' F000'        	goto	u11521
 21013  01F8' EF00' F000'        	goto	u11520
 21014  01FC'                    u11521:
 21015  01FC' EF00' F000'        	goto	l9439
 21016  0200'                    u11520:
 21017  0200'                    l9447:
 21018                           
 21019                           ; BSR set to: 0
 21020                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 21021  0200' C04D' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 21022  0204' C04E' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 21023  0208' CFDE FFF6          	movff	postinc2,tblptrl
 21024  020C' CFDD FFF7          	movff	postdec2,tblptrh
 21025  0210'                    	if	0	;tblptru may be non-zero
 21026  0210'                    	endif
 21027  0210'                    	if	0	;tblptru may be non-zero
 21028  0210'                    	endif
 21029  0210' 0008               	tblrd		*
 21030  0212' 50F5               	movf	tablat,w,c
 21031  0214' 0A64               	xorlw	100
 21032  0216' B4D8               	btfsc	status,2,c
 21033  0218' EF00' F000'        	goto	u11531
 21034  021C' EF00' F000'        	goto	u11530
 21035  0220'                    u11531:
 21036  0220' EF00' F000'        	goto	l9451
 21037  0224'                    u11530:
 21038  0224'                    
 21039                           ; BSR set to: 0
 21040  0224' C04D' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 21041  0228' C04E' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 21042  022C' CFDE FFF6          	movff	postinc2,tblptrl
 21043  0230' CFDD FFF7          	movff	postdec2,tblptrh
 21044  0234'                    	if	0	;tblptru may be non-zero
 21045  0234'                    	endif
 21046  0234'                    	if	0	;tblptru may be non-zero
 21047  0234'                    	endif
 21048  0234' 0008               	tblrd		*
 21049  0236' 50F5               	movf	tablat,w,c
 21050  0238' 0A69               	xorlw	105
 21051  023A' A4D8               	btfss	status,2,c
 21052  023C' EF00' F000'        	goto	u11541
 21053  0240' EF00' F000'        	goto	u11540
 21054  0244'                    u11541:
 21055  0244' EF00' F000'        	goto	l9457
 21056  0248'                    u11540:
 21057  0248'                    l9451:
 21058                           
 21059                           ; BSR set to: 0
 21060                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 21061  0248' C04D' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 21062  024C' C04E' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 21063  0250' 2ADE               	incf	postinc2,f,c
 21064  0252' 0E00               	movlw	0
 21065  0254' 22DD               	addwfc	postdec2,f,c
 21066                           
 21067                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 21068  0256' C04F' FFD9         	movff	vfpfcnvrt@ap,fsr2l
 21069  025A' C050' FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 21070  025E' CFDF F051'         	movff	indf2,??_vfpfcnvrt
 21071  0262' 0E02               	movlw	2
 21072  0264' 26DE               	addwf	postinc2,f,c
 21073  0266' CFDF F052'         	movff	indf2,??_vfpfcnvrt+1
 21074  026A' 0E00               	movlw	0
 21075  026C' 22DD               	addwfc	postdec2,f,c
 21076  026E' C051' FFD9         	movff	??_vfpfcnvrt,fsr2l
 21077  0272' C052' FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 21078  0276' CFDE F006'         	movff	postinc2,vfpfcnvrt@ll
 21079  027A' CFDD F007'         	movff	postdec2,vfpfcnvrt@ll+1
 21080  027E' 0E00               	movlw	0
 21081  0280' BF00'              	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 21082  0282' 0EFF               	movlw	-1
 21083  0284' 6F00'              	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 21084  0286' 6F00'              	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 21085  0288' 6F00'              	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 21086  028A' 6F00'              	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 21087  028C' 6F00'              	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 21088  028E' 6F00'              	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 21089  0290'                    
 21090                           ; BSR set to: 0
 21091                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 21092  0290' C04B' F027'        	movff	vfpfcnvrt@fp,dtoa@fp
 21093  0294' C04C' F028'        	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 21094  0298' C006' F029'        	movff	vfpfcnvrt@ll,dtoa@d
 21095  029C' C007' F02A'        	movff	vfpfcnvrt@ll+1,dtoa@d+1
 21096  02A0' C008' F02B'        	movff	vfpfcnvrt@ll+2,dtoa@d+2
 21097  02A4' C009' F02C'        	movff	vfpfcnvrt@ll+3,dtoa@d+3
 21098  02A8' C00A' F02D'        	movff	vfpfcnvrt@ll+4,dtoa@d+4
 21099  02AC' C00B' F02E'        	movff	vfpfcnvrt@ll+5,dtoa@d+5
 21100  02B0' C00C' F02F'        	movff	vfpfcnvrt@ll+6,dtoa@d+6
 21101  02B4' C00D' F030'        	movff	vfpfcnvrt@ll+7,dtoa@d+7
 21102  02B8' EC00' F000'        	call	_dtoa	;wreg free
 21103  02BC' C027' F04B'        	movff	?_dtoa,?_vfpfcnvrt
 21104  02C0' C028' F04C'        	movff	?_dtoa+1,?_vfpfcnvrt+1
 21105  02C4' EF00' F000'        	goto	l1378
 21106  02C8'                    l9457:
 21107                           
 21108                           ; BSR set to: 0
 21109                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 21110  02C8' C04D' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 21111  02CC' C04E' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 21112  02D0' CFDE F00D'         	movff	postinc2,strncmp@_l
 21113  02D4' CFDD F00E'         	movff	postdec2,strncmp@_l+1
 21114  02D8' 0E00'              	movlw	low STR_95
 21115  02DA' 6E00'              	movwf	strncmp@_r^0,c
 21116  02DC' 0E00'              	movlw	high STR_95
 21117  02DE' 6E00'              	movwf	(strncmp@_r+1)^0,c
 21118  02E0' 0E00               	movlw	0
 21119  02E2' 6E00'              	movwf	(strncmp@n+1)^0,c
 21120  02E4' 0E02               	movlw	2
 21121  02E6' 6E00'              	movwf	strncmp@n^0,c
 21122  02E8' EC00' F000'        	call	_strncmp	;wreg free
 21123  02EC' 5000'              	movf	?_strncmp^0,w,c
 21124  02EE' 1000'              	iorwf	(?_strncmp+1)^0,w,c
 21125  02F0' B4D8               	btfsc	status,2,c
 21126  02F2' EF00' F000'        	goto	u11551
 21127  02F6' EF00' F000'        	goto	u11550
 21128  02FA'                    u11551:
 21129  02FA' EF00' F000'        	goto	l9461
 21130  02FE'                    u11550:
 21131  02FE' C04D' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 21132  0302' C04E' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 21133  0306' CFDE F00D'         	movff	postinc2,strncmp@_l
 21134  030A' CFDD F00E'         	movff	postdec2,strncmp@_l+1
 21135  030E' 0E00'              	movlw	low STR_99
 21136  0310' 6E00'              	movwf	strncmp@_r^0,c
 21137  0312' 0E00'              	movlw	high STR_99
 21138  0314' 6E00'              	movwf	(strncmp@_r+1)^0,c
 21139  0316' 0E00               	movlw	0
 21140  0318' 6E00'              	movwf	(strncmp@n+1)^0,c
 21141  031A' 0E02               	movlw	2
 21142  031C' 6E00'              	movwf	strncmp@n^0,c
 21143  031E' EC00' F000'        	call	_strncmp	;wreg free
 21144  0322' 5000'              	movf	?_strncmp^0,w,c
 21145  0324' 1000'              	iorwf	(?_strncmp+1)^0,w,c
 21146  0326' A4D8               	btfss	status,2,c
 21147  0328' EF00' F000'        	goto	u11561
 21148  032C' EF00' F000'        	goto	u11560
 21149  0330'                    u11561:
 21150  0330' EF00' F000'        	goto	l9467
 21151  0334'                    u11560:
 21152  0334'                    l9461:
 21153                           
 21154                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 21155  0334' 0E02               	movlw	2
 21156  0336' C04D' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 21157  033A' C04E' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 21158  033E' 26DE               	addwf	postinc2,f,c
 21159  0340' 0E00               	movlw	0
 21160  0342' 22DD               	addwfc	postdec2,f,c
 21161                           
 21162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 21163  0344' C04F' FFD9         	movff	vfpfcnvrt@ap,fsr2l
 21164  0348' C050' FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 21165  034C' CFDF F051'         	movff	indf2,??_vfpfcnvrt
 21166  0350' 0E04               	movlw	4
 21167  0352' 26DE               	addwf	postinc2,f,c
 21168  0354' CFDF F052'         	movff	indf2,??_vfpfcnvrt+1
 21169  0358' 0E00               	movlw	0
 21170  035A' 22DD               	addwfc	postdec2,f,c
 21171  035C' C051' FFD9         	movff	??_vfpfcnvrt,fsr2l
 21172  0360' C052' FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 21173  0364' CFDE F053'         	movff	postinc2,??_vfpfcnvrt+2
 21174  0368' CFDE F054'         	movff	postinc2,??_vfpfcnvrt+3
 21175  036C' CFDE F055'         	movff	postinc2,??_vfpfcnvrt+4
 21176  0370' CFDE F056'         	movff	postinc2,??_vfpfcnvrt+5
 21177  0374' C053' F057'        	movff	??_vfpfcnvrt+2,??_vfpfcnvrt+6
 21178  0378' C054' F058'        	movff	??_vfpfcnvrt+3,??_vfpfcnvrt+7
 21179  037C' C055' F059'        	movff	??_vfpfcnvrt+4,??_vfpfcnvrt+8
 21180  0380' C056' F05A'        	movff	??_vfpfcnvrt+5,??_vfpfcnvrt+9
 21181  0384' 6A00'              	clrf	(??_vfpfcnvrt+10)^0,c
 21182  0386' BE00'              	btfsc	(??_vfpfcnvrt+9)^0,7,c
 21183  0388' 6800'              	setf	(??_vfpfcnvrt+10)^0,c
 21184  038A' C05B' F05C'        	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+11
 21185  038E' C05B' F05D'        	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+12
 21186  0392' C05B' F05E'        	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+13
 21187  0396' C057' F006'        	movff	??_vfpfcnvrt+6,vfpfcnvrt@ll
 21188  039A' C058' F007'        	movff	??_vfpfcnvrt+7,vfpfcnvrt@ll+1
 21189  039E' C059' F008'        	movff	??_vfpfcnvrt+8,vfpfcnvrt@ll+2
 21190  03A2' C05A' F009'        	movff	??_vfpfcnvrt+9,vfpfcnvrt@ll+3
 21191  03A6' C05B' F00A'        	movff	??_vfpfcnvrt+10,vfpfcnvrt@ll+4
 21192  03AA' C05C' F00B'        	movff	??_vfpfcnvrt+11,vfpfcnvrt@ll+5
 21193  03AE' C05D' F00C'        	movff	??_vfpfcnvrt+12,vfpfcnvrt@ll+6
 21194  03B2' C05E' F00D'        	movff	??_vfpfcnvrt+13,vfpfcnvrt@ll+7
 21195  03B6'                    
 21196                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 841:             return dtoa(
      +                          fp, ll);
 21197  03B6' C04B' F027'        	movff	vfpfcnvrt@fp,dtoa@fp
 21198  03BA' C04C' F028'        	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 21199  03BE' C006' F029'        	movff	vfpfcnvrt@ll,dtoa@d
 21200  03C2' C007' F02A'        	movff	vfpfcnvrt@ll+1,dtoa@d+1
 21201  03C6' C008' F02B'        	movff	vfpfcnvrt@ll+2,dtoa@d+2
 21202  03CA' C009' F02C'        	movff	vfpfcnvrt@ll+3,dtoa@d+3
 21203  03CE' C00A' F02D'        	movff	vfpfcnvrt@ll+4,dtoa@d+4
 21204  03D2' C00B' F02E'        	movff	vfpfcnvrt@ll+5,dtoa@d+5
 21205  03D6' C00C' F02F'        	movff	vfpfcnvrt@ll+6,dtoa@d+6
 21206  03DA' C00D' F030'        	movff	vfpfcnvrt@ll+7,dtoa@d+7
 21207  03DE' EC00' F000'        	call	_dtoa	;wreg free
 21208  03E2' C027' F04B'        	movff	?_dtoa,?_vfpfcnvrt
 21209  03E6' C028' F04C'        	movff	?_dtoa+1,?_vfpfcnvrt+1
 21210  03EA' EF00' F000'        	goto	l1378
 21211  03EE'                    l9467:
 21212                           
 21213                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 21214  03EE' C04D' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 21215  03F2' C04E' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 21216  03F6' CFDE FFF6          	movff	postinc2,tblptrl
 21217  03FA' CFDD FFF7          	movff	postdec2,tblptrh
 21218  03FE'                    	if	0	;tblptru may be non-zero
 21219  03FE'                    	endif
 21220  03FE'                    	if	0	;tblptru may be non-zero
 21221  03FE'                    	endif
 21222  03FE' 0008               	tblrd		*
 21223  0400' 50F5               	movf	tablat,w,c
 21224  0402' 0A73               	xorlw	115
 21225  0404' A4D8               	btfss	status,2,c
 21226  0406' EF00' F000'        	goto	u11571
 21227  040A' EF00' F000'        	goto	u11570
 21228  040E'                    u11571:
 21229  040E' EF00' F000'        	goto	l9475
 21230  0412'                    u11570:
 21231  0412'                    
 21232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 21233  0412' C04D' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 21234  0416' C04E' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 21235  041A' 2ADE               	incf	postinc2,f,c
 21236  041C' 0E00               	movlw	0
 21237  041E' 22DD               	addwfc	postdec2,f,c
 21238                           
 21239                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 21240  0420' C04F' FFD9         	movff	vfpfcnvrt@ap,fsr2l
 21241  0424' C050' FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 21242  0428' CFDF F051'         	movff	indf2,??_vfpfcnvrt
 21243  042C' 0E02               	movlw	2
 21244  042E' 26DE               	addwf	postinc2,f,c
 21245  0430' CFDF F052'         	movff	indf2,??_vfpfcnvrt+1
 21246  0434' 0E00               	movlw	0
 21247  0436' 22DD               	addwfc	postdec2,f,c
 21248  0438' C051' FFD9         	movff	??_vfpfcnvrt,fsr2l
 21249  043C' C052' FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 21250  0440' CFDE F000'         	movff	postinc2,vfpfcnvrt@cp
 21251  0444' CFDD F001'         	movff	postdec2,vfpfcnvrt@cp+1
 21252  0448'                    
 21253                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 21254  0448' C04B' F012'        	movff	vfpfcnvrt@fp,stoa@fp
 21255  044C' C04C' F013'        	movff	vfpfcnvrt@fp+1,stoa@fp+1
 21256  0450' C000' F014'        	movff	vfpfcnvrt@cp,stoa@s
 21257  0454' C001' F015'        	movff	vfpfcnvrt@cp+1,stoa@s+1
 21258  0458' EC00' F000'        	call	_stoa	;wreg free
 21259  045C' C012' F04B'        	movff	?_stoa,?_vfpfcnvrt
 21260  0460' C013' F04C'        	movff	?_stoa+1,?_vfpfcnvrt+1
 21261  0464' EF00' F000'        	goto	l1378
 21262  0468'                    l9475:
 21263                           
 21264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 21265  0468' C04D' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 21266  046C' C04E' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 21267  0470' CFDE FFF6          	movff	postinc2,tblptrl
 21268  0474' CFDD FFF7          	movff	postdec2,tblptrh
 21269  0478'                    	if	0	;tblptru may be non-zero
 21270  0478'                    	endif
 21271  0478'                    	if	0	;tblptru may be non-zero
 21272  0478'                    	endif
 21273  0478' 0008               	tblrd		*
 21274  047A' 50F5               	movf	tablat,w,c
 21275  047C' 0A78               	xorlw	120
 21276  047E' B4D8               	btfsc	status,2,c
 21277  0480' EF00' F000'        	goto	u11581
 21278  0484' EF00' F000'        	goto	u11580
 21279  0488'                    u11581:
 21280  0488' EF00' F000'        	goto	l9479
 21281  048C'                    u11580:
 21282  048C' C04D' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 21283  0490' C04E' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 21284  0494' CFDE FFF6          	movff	postinc2,tblptrl
 21285  0498' CFDD FFF7          	movff	postdec2,tblptrh
 21286  049C'                    	if	0	;tblptru may be non-zero
 21287  049C'                    	endif
 21288  049C'                    	if	0	;tblptru may be non-zero
 21289  049C'                    	endif
 21290  049C' 0008               	tblrd		*
 21291  049E' 50F5               	movf	tablat,w,c
 21292  04A0' 0A58               	xorlw	88
 21293  04A2' A4D8               	btfss	status,2,c
 21294  04A4' EF00' F000'        	goto	u11591
 21295  04A8' EF00' F000'        	goto	u11590
 21296  04AC'                    u11591:
 21297  04AC' EF00' F000'        	goto	l9489
 21298  04B0'                    u11590:
 21299  04B0'                    l9479:
 21300                           
 21301                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 21302  04B0' C04D' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 21303  04B4' C04E' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 21304  04B8' CFDE FFF6          	movff	postinc2,tblptrl
 21305  04BC' CFDD FFF7          	movff	postdec2,tblptrh
 21306  04C0'                    	if	0	;tblptru may be non-zero
 21307  04C0'                    	endif
 21308  04C0'                    	if	0	;tblptru may be non-zero
 21309  04C0'                    	endif
 21310  04C0' 0008               	tblrd		*
 21311  04C2' CFF5 F016'         	movff	tablat,vfpfcnvrt@c
 21312  04C6'                    
 21313                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 21314  04C6' C04D' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 21315  04CA' C04E' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 21316  04CE' 2ADE               	incf	postinc2,f,c
 21317  04D0' 0E00               	movlw	0
 21318  04D2' 22DD               	addwfc	postdec2,f,c
 21319  04D4'                    
 21320                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 21321  04D4' C04F' FFD9         	movff	vfpfcnvrt@ap,fsr2l
 21322  04D8' C050' FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 21323  04DC' CFDF F051'         	movff	indf2,??_vfpfcnvrt
 21324  04E0' 0E02               	movlw	2
 21325  04E2' 26DE               	addwf	postinc2,f,c
 21326  04E4' CFDF F052'         	movff	indf2,??_vfpfcnvrt+1
 21327  04E8' 0E00               	movlw	0
 21328  04EA' 22DD               	addwfc	postdec2,f,c
 21329  04EC' C051' FFD9         	movff	??_vfpfcnvrt,fsr2l
 21330  04F0' C052' FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 21331  04F4' CFDE F053'         	movff	postinc2,??_vfpfcnvrt+2
 21332  04F8' CFDD F054'         	movff	postdec2,??_vfpfcnvrt+3
 21333  04FC' C053' F00E'        	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 21334  0500' C054' F00F'        	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 21335  0504' 0100               	movlb	0	; () banked
 21336  0506' 6B00'              	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 21337  0508' 6B00'              	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 21338  050A' 6B00'              	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 21339  050C' 6B00'              	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 21340  050E' 6B00'              	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 21341  0510' 6B00'              	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 21342  0512'                    
 21343                           ; BSR set to: 0
 21344                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 21345  0512' C04B' F024'        	movff	vfpfcnvrt@fp,xtoa@fp
 21346  0516' C04C' F025'        	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 21347  051A' C00E' F026'        	movff	vfpfcnvrt@llu,xtoa@d
 21348  051E' C00F' F027'        	movff	vfpfcnvrt@llu+1,xtoa@d+1
 21349  0522' C010' F028'        	movff	vfpfcnvrt@llu+2,xtoa@d+2
 21350  0526' C011' F029'        	movff	vfpfcnvrt@llu+3,xtoa@d+3
 21351  052A' C012' F02A'        	movff	vfpfcnvrt@llu+4,xtoa@d+4
 21352  052E' C013' F02B'        	movff	vfpfcnvrt@llu+5,xtoa@d+5
 21353  0532' C014' F02C'        	movff	vfpfcnvrt@llu+6,xtoa@d+6
 21354  0536' C015' F02D'        	movff	vfpfcnvrt@llu+7,xtoa@d+7
 21355  053A' C016' F02E'        	movff	vfpfcnvrt@c,xtoa@x
 21356  053E' EC00' F000'        	call	_xtoa	;wreg free
 21357  0542' C024' F04B'        	movff	?_xtoa,?_vfpfcnvrt
 21358  0546' C025' F04C'        	movff	?_xtoa+1,?_vfpfcnvrt+1
 21359  054A' EF00' F000'        	goto	l1378
 21360  054E'                    l9489:
 21361                           
 21362                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 21363  054E' C04D' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 21364  0552' C04E' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 21365  0556' CFDE F00D'         	movff	postinc2,strncmp@_l
 21366  055A' CFDD F00E'         	movff	postdec2,strncmp@_l+1
 21367  055E' 0E00'              	movlw	low STR_104
 21368  0560' 6E00'              	movwf	strncmp@_r^0,c
 21369  0562' 0E00'              	movlw	high STR_104
 21370  0564' 6E00'              	movwf	(strncmp@_r+1)^0,c
 21371  0566' 0E00               	movlw	0
 21372  0568' 6E00'              	movwf	(strncmp@n+1)^0,c
 21373  056A' 0E02               	movlw	2
 21374  056C' 6E00'              	movwf	strncmp@n^0,c
 21375  056E' EC00' F000'        	call	_strncmp	;wreg free
 21376  0572' 5000'              	movf	?_strncmp^0,w,c
 21377  0574' 1000'              	iorwf	(?_strncmp+1)^0,w,c
 21378  0576' B4D8               	btfsc	status,2,c
 21379  0578' EF00' F000'        	goto	u11601
 21380  057C' EF00' F000'        	goto	u11600
 21381  0580'                    u11601:
 21382  0580' EF00' F000'        	goto	l9493
 21383  0584'                    u11600:
 21384  0584' C04D' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 21385  0588' C04E' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 21386  058C' CFDE F00D'         	movff	postinc2,strncmp@_l
 21387  0590' CFDD F00E'         	movff	postdec2,strncmp@_l+1
 21388  0594' 0E00'              	movlw	low STR_108
 21389  0596' 6E00'              	movwf	strncmp@_r^0,c
 21390  0598' 0E00'              	movlw	high STR_108
 21391  059A' 6E00'              	movwf	(strncmp@_r+1)^0,c
 21392  059C' 0E00               	movlw	0
 21393  059E' 6E00'              	movwf	(strncmp@n+1)^0,c
 21394  05A0' 0E02               	movlw	2
 21395  05A2' 6E00'              	movwf	strncmp@n^0,c
 21396  05A4' EC00' F000'        	call	_strncmp	;wreg free
 21397  05A8' 5000'              	movf	?_strncmp^0,w,c
 21398  05AA' 1000'              	iorwf	(?_strncmp+1)^0,w,c
 21399  05AC' A4D8               	btfss	status,2,c
 21400  05AE' EF00' F000'        	goto	u11611
 21401  05B2' EF00' F000'        	goto	u11610
 21402  05B6'                    u11611:
 21403  05B6' EF00' F000'        	goto	l9503
 21404  05BA'                    u11610:
 21405  05BA'                    l9493:
 21406                           
 21407                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 21408  05BA' C04D' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 21409  05BE' C04E' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 21410  05C2' CFDE F051'         	movff	postinc2,??_vfpfcnvrt
 21411  05C6' CFDD F052'         	movff	postdec2,??_vfpfcnvrt+1
 21412  05CA' 0E01               	movlw	1
 21413  05CC' 2600'              	addwf	??_vfpfcnvrt^0,f,c
 21414  05CE' 0E00               	movlw	0
 21415  05D0' 2200'              	addwfc	(??_vfpfcnvrt+1)^0,f,c
 21416  05D2' C051' FFF6         	movff	??_vfpfcnvrt,tblptrl
 21417  05D6' C052' FFF7         	movff	??_vfpfcnvrt+1,tblptrh
 21418  05DA'                    	if	0	;tblptru may be non-zero
 21419  05DA'                    	endif
 21420  05DA'                    	if	0	;tblptru may be non-zero
 21421  05DA'                    	endif
 21422  05DA' 0008               	tblrd		*
 21423  05DC' CFF5 F016'         	movff	tablat,vfpfcnvrt@c
 21424  05E0'                    
 21425                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 21426  05E0' 0E02               	movlw	2
 21427  05E2' C04D' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 21428  05E6' C04E' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 21429  05EA' 26DE               	addwf	postinc2,f,c
 21430  05EC' 0E00               	movlw	0
 21431  05EE' 22DD               	addwfc	postdec2,f,c
 21432  05F0'                    
 21433                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 21434  05F0' C04F' FFD9         	movff	vfpfcnvrt@ap,fsr2l
 21435  05F4' C050' FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 21436  05F8' CFDF F051'         	movff	indf2,??_vfpfcnvrt
 21437  05FC' 0E04               	movlw	4
 21438  05FE' 26DE               	addwf	postinc2,f,c
 21439  0600' CFDF F052'         	movff	indf2,??_vfpfcnvrt+1
 21440  0604' 0E00               	movlw	0
 21441  0606' 22DD               	addwfc	postdec2,f,c
 21442  0608' C051' FFD9         	movff	??_vfpfcnvrt,fsr2l
 21443  060C' C052' FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 21444  0610' CFDE F053'         	movff	postinc2,??_vfpfcnvrt+2
 21445  0614' CFDE F054'         	movff	postinc2,??_vfpfcnvrt+3
 21446  0618' CFDE F055'         	movff	postinc2,??_vfpfcnvrt+4
 21447  061C' CFDE F056'         	movff	postinc2,??_vfpfcnvrt+5
 21448  0620' 5000'              	movf	(??_vfpfcnvrt+2)^0,w,c
 21449  0622' 0100               	movlb	0	; () banked
 21450  0624' 6F00'              	movwf	vfpfcnvrt@llu& (0+255),b
 21451  0626' 5000'              	movf	(??_vfpfcnvrt+3)^0,w,c
 21452  0628' 6F00'              	movwf	(vfpfcnvrt@llu+1)& (0+255),b
 21453  062A' 5000'              	movf	(??_vfpfcnvrt+4)^0,w,c
 21454  062C' 6F00'              	movwf	(vfpfcnvrt@llu+2)& (0+255),b
 21455  062E' 5000'              	movf	(??_vfpfcnvrt+5)^0,w,c
 21456  0630' 6F00'              	movwf	(vfpfcnvrt@llu+3)& (0+255),b
 21457  0632' 6B00'              	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 21458  0634' 6B00'              	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 21459  0636' 6B00'              	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 21460  0638' 6B00'              	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 21461  063A'                    
 21462                           ; BSR set to: 0
 21463                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1292:             return xtoa
      +                          (fp, llu, c);
 21464  063A' C04B' F024'        	movff	vfpfcnvrt@fp,xtoa@fp
 21465  063E' C04C' F025'        	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 21466  0642' C00E' F026'        	movff	vfpfcnvrt@llu,xtoa@d
 21467  0646' C00F' F027'        	movff	vfpfcnvrt@llu+1,xtoa@d+1
 21468  064A' C010' F028'        	movff	vfpfcnvrt@llu+2,xtoa@d+2
 21469  064E' C011' F029'        	movff	vfpfcnvrt@llu+3,xtoa@d+3
 21470  0652' C012' F02A'        	movff	vfpfcnvrt@llu+4,xtoa@d+4
 21471  0656' C013' F02B'        	movff	vfpfcnvrt@llu+5,xtoa@d+5
 21472  065A' C014' F02C'        	movff	vfpfcnvrt@llu+6,xtoa@d+6
 21473  065E' C015' F02D'        	movff	vfpfcnvrt@llu+7,xtoa@d+7
 21474  0662' C016' F02E'        	movff	vfpfcnvrt@c,xtoa@x
 21475  0666' EC00' F000'        	call	_xtoa	;wreg free
 21476  066A' C024' F04B'        	movff	?_xtoa,?_vfpfcnvrt
 21477  066E' C025' F04C'        	movff	?_xtoa+1,?_vfpfcnvrt+1
 21478  0672' EF00' F000'        	goto	l1378
 21479  0676'                    l9503:
 21480                           
 21481                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 21482  0676' C04D' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 21483  067A' C04E' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 21484  067E' CFDE FFF6          	movff	postinc2,tblptrl
 21485  0682' CFDD FFF7          	movff	postdec2,tblptrh
 21486  0686'                    	if	0	;tblptru may be non-zero
 21487  0686'                    	endif
 21488  0686'                    	if	0	;tblptru may be non-zero
 21489  0686'                    	endif
 21490  0686' 0008               	tblrd		*
 21491  0688' 50F5               	movf	tablat,w,c
 21492  068A' 0A25               	xorlw	37
 21493  068C' A4D8               	btfss	status,2,c
 21494  068E' EF00' F000'        	goto	u11621
 21495  0692' EF00' F000'        	goto	u11620
 21496  0696'                    u11621:
 21497  0696' EF00' F000'        	goto	l9513
 21498  069A'                    u11620:
 21499  069A'                    
 21500                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 21501  069A' C04D' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 21502  069E' C04E' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 21503  06A2' 2ADE               	incf	postinc2,f,c
 21504  06A4' 0E00               	movlw	0
 21505  06A6' 22DD               	addwfc	postdec2,f,c
 21506  06A8'                    
 21507                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 21508  06A8' 0E00               	movlw	0
 21509  06AA' 6E00'              	movwf	(fputc@c+1)^0,c
 21510  06AC' 0E25               	movlw	37
 21511  06AE' 6E00'              	movwf	fputc@c^0,c
 21512  06B0' C04B' F010'        	movff	vfpfcnvrt@fp,fputc@fp
 21513  06B4' C04C' F011'        	movff	vfpfcnvrt@fp+1,fputc@fp+1
 21514  06B8' EC00' F000'        	call	_fputc	;wreg free
 21515  06BC'                    l9509:
 21516                           
 21517                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 21518  06BC' 0E00               	movlw	0
 21519  06BE' 6E00'              	movwf	(?_vfpfcnvrt+1)^0,c
 21520  06C0' 0E01               	movlw	1
 21521  06C2' 6E00'              	movwf	?_vfpfcnvrt^0,c
 21522  06C4' EF00' F000'        	goto	l1378
 21523  06C8'                    l9513:
 21524                           
 21525                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 21526  06C8' C04D' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 21527  06CC' C04E' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 21528  06D0' 2ADE               	incf	postinc2,f,c
 21529  06D2' 0E00               	movlw	0
 21530  06D4' 22DD               	addwfc	postdec2,f,c
 21531  06D6'                    
 21532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 21533  06D6' 0E00               	movlw	0
 21534  06D8' 6E00'              	movwf	(?_vfpfcnvrt+1)^0,c
 21535  06DA' 0E00               	movlw	0
 21536  06DC' 6E00'              	movwf	?_vfpfcnvrt^0,c
 21537  06DE' EF00' F000'        	goto	l1378
 21538  06E2'                    l9519:
 21539                           
 21540                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 21541  06E2' C04D' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 21542  06E6' C04E' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 21543  06EA' CFDE FFF6          	movff	postinc2,tblptrl
 21544  06EE' CFDD FFF7          	movff	postdec2,tblptrh
 21545  06F2'                    	if	0	;tblptru may be non-zero
 21546  06F2'                    	endif
 21547  06F2'                    	if	0	;tblptru may be non-zero
 21548  06F2'                    	endif
 21549  06F2' 0008               	tblrd		*
 21550  06F4' 50F5               	movf	tablat,w,c
 21551  06F6' 6E00'              	movwf	fputc@c^0,c
 21552  06F8' 6A00'              	clrf	(fputc@c+1)^0,c
 21553  06FA' C04B' F010'        	movff	vfpfcnvrt@fp,fputc@fp
 21554  06FE' C04C' F011'        	movff	vfpfcnvrt@fp+1,fputc@fp+1
 21555  0702' EC00' F000'        	call	_fputc	;wreg free
 21556  0706'                    
 21557                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 21558  0706' C04D' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 21559  070A' C04E' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 21560  070E' 2ADE               	incf	postinc2,f,c
 21561  0710' 0E00               	movlw	0
 21562  0712' 22DD               	addwfc	postdec2,f,c
 21563  0714' EF00' F000'        	goto	l9509
 21564  0718'                    l1378:
 21565  0718' 0012               	return		;funcret
 21566  071A'                    __end_of_vfpfcnvrt:
 21567                           	opt callstack 0
 21568                           
 21569 ;; *************** function _xtoa *****************
 21570 ;; Defined at:
 21571 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 21572 ;; Parameters:    Size  Location     Type
 21573 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
 21574 ;;		 -> NULL(0), 
 21575 ;;  d               8   38[COMRAM] unsigned long long 
 21576 ;;  x               1   46[COMRAM] unsigned char 
 21577 ;; Auto vars:     Size  Location     Type
 21578 ;;  n               8   63[COMRAM] unsigned long long 
 21579 ;;  c               2   73[COMRAM] int 
 21580 ;;  i               2   71[COMRAM] int 
 21581 ;;  w               2   61[COMRAM] int 
 21582 ;;  p               2   59[COMRAM] int 
 21583 ;; Return value:  Size  Location     Type
 21584 ;;                  2   36[COMRAM] int 
 21585 ;; Registers used:
 21586 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21587 ;; Tracked objects:
 21588 ;;		On entry : 0/0
 21589 ;;		On exit  : 0/0
 21590 ;;		Unchanged: 0/0
 21591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21592 ;;      Params:        11       0       0       0       0       0       0
 21593 ;;      Locals:        20       0       0       0       0       0       0
 21594 ;;      Temps:          8       0       0       0       0       0       0
 21595 ;;      Totals:        39       0       0       0       0       0       0
 21596 ;;Total ram usage:       39 bytes
 21597 ;; Hardware stack levels used:    1
 21598 ;; Hardware stack levels required when called:    6
 21599 ;; This function calls:
 21600 ;;		_isalpha
 21601 ;;		_isupper
 21602 ;;		_pad
 21603 ;;		_toupper
 21604 ;; This function is called by:
 21605 ;;		_vfpfcnvrt
 21606 ;; This function uses a non-reentrant model
 21607 ;;
 21608                           
 21609                           	psect	text77
 21610  0000'                    __ptext77:
 21611                           	opt callstack 0
 21612  0000'                    _xtoa:
 21613                           	opt callstack 19
 21614  0000'                    
 21615                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 21616  0000' BE00'              	btfsc	(_prec+1)^0,7,c
 21617  0002' EF00' F000'        	goto	u11231
 21618  0006' EF00' F000'        	goto	u11230
 21619  000A'                    u11231:
 21620  000A' EF00' F000'        	goto	l9291
 21621  000E'                    u11230:
 21622  000E'                    
 21623                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 21624  000E' 9200'              	bcf	_flags^0,1,c
 21625  0010'                    l9291:
 21626                           
 21627                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 21628  0010' BE00'              	btfsc	(_prec+1)^0,7,c
 21629  0012' EF00' F000'        	goto	u11240
 21630  0016' 5000'              	movf	(_prec+1)^0,w,c
 21631  0018' E106               	bnz	u11241
 21632  001A' 0400'              	decf	_prec^0,w,c
 21633  001C' B0D8               	btfsc	status,0,c
 21634  001E' EF00' F000'        	goto	u11241
 21635  0022' EF00' F000'        	goto	u11240
 21636  0026'                    u11241:
 21637  0026' EF00' F000'        	goto	l1324
 21638  002A'                    u11240:
 21639  002A' 0E00               	movlw	0
 21640  002C' 6E00'              	movwf	(xtoa@p+1)^0,c
 21641  002E' 0E01               	movlw	1
 21642  0030' 6E00'              	movwf	xtoa@p^0,c
 21643  0032' EF00' F000'        	goto	l1326
 21644  0036'                    l1324:
 21645  0036' C000' F03B'        	movff	_prec,xtoa@p
 21646  003A' C001' F03C'        	movff	_prec+1,xtoa@p+1
 21647  003E'                    l1326:
 21648                           
 21649                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 21650  003E' C000' F03D'        	movff	_width,xtoa@w
 21651  0042' C001' F03E'        	movff	_width+1,xtoa@w+1
 21652                           
 21653                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 21654  0046' A800'              	btfss	_flags^0,4,c
 21655  0048' EF00' F000'        	goto	u11251
 21656  004C' EF00' F000'        	goto	u11250
 21657  0050'                    u11251:
 21658  0050' EF00' F000'        	goto	l9297
 21659  0054'                    u11250:
 21660  0054'                    
 21661                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 21662  0054' 0EFE               	movlw	254
 21663  0056' 2600'              	addwf	xtoa@w^0,f,c
 21664  0058' 0EFF               	movlw	255
 21665  005A' 2200'              	addwfc	(xtoa@w+1)^0,f,c
 21666  005C'                    l9297:
 21667                           
 21668                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 21669  005C' C026' F03F'        	movff	xtoa@d,xtoa@n
 21670  0060' C027' F040'        	movff	xtoa@d+1,xtoa@n+1
 21671  0064' C028' F041'        	movff	xtoa@d+2,xtoa@n+2
 21672  0068' C029' F042'        	movff	xtoa@d+3,xtoa@n+3
 21673  006C' C02A' F043'        	movff	xtoa@d+4,xtoa@n+4
 21674  0070' C02B' F044'        	movff	xtoa@d+5,xtoa@n+5
 21675  0074' C02C' F045'        	movff	xtoa@d+6,xtoa@n+6
 21676  0078' C02D' F046'        	movff	xtoa@d+7,xtoa@n+7
 21677  007C'                    
 21678                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 21679  007C' 0E00               	movlw	0
 21680  007E' 6E00'              	movwf	(xtoa@i+1)^0,c
 21681  0080' 0E1F               	movlw	31
 21682  0082' 6E00'              	movwf	xtoa@i^0,c
 21683  0084'                    
 21684                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 21685  0084' 0E00               	movlw	0
 21686  0086' 0102               	movlb	2	; () banked
 21687  0088' 6F00'              	movwf	(_dbuf+31)& (0+255),b
 21688                           
 21689                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 21690  008A' EF00' F000'        	goto	l9333
 21691  008E'                    l9303:
 21692                           
 21693                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 21694  008E' 0600'              	decf	xtoa@i^0,f,c
 21695  0090' A0D8               	btfss	status,0,c
 21696  0092' 0600'              	decf	(xtoa@i+1)^0,f,c
 21697  0094'                    
 21698                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 21699  0094' 0E0F               	movlw	15
 21700  0096' 1400'              	andwf	xtoa@n^0,w,c
 21701  0098' 6E00'              	movwf	xtoa@c^0,c
 21702  009A' 6A00'              	clrf	(xtoa@c+1)^0,c
 21703  009C'                    
 21704                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 21705  009C' BE00'              	btfsc	(xtoa@c+1)^0,7,c
 21706  009E' EF00' F000'        	goto	u11261
 21707  00A2' 5000'              	movf	(xtoa@c+1)^0,w,c
 21708  00A4' E109               	bnz	u11260
 21709  00A6' 0E0A               	movlw	10
 21710  00A8' 5C00'              	subwf	xtoa@c^0,w,c
 21711  00AA' A0D8               	btfss	status,0,c
 21712  00AC' EF00' F000'        	goto	u11261
 21713  00B0' EF00' F000'        	goto	u11260
 21714  00B4'                    u11261:
 21715  00B4' EF00' F000'        	goto	l9311
 21716  00B8'                    u11260:
 21717  00B8' 0E57               	movlw	87
 21718  00BA' 2400'              	addwf	xtoa@c^0,w,c
 21719  00BC' 6E00'              	movwf	xtoa@c^0,c
 21720  00BE' 0E00               	movlw	0
 21721  00C0' 2000'              	addwfc	(xtoa@c+1)^0,w,c
 21722  00C2' 6E00'              	movwf	(xtoa@c+1)^0,c
 21723  00C4' EF00' F000'        	goto	l1333
 21724  00C8'                    l9311:
 21725  00C8' 0E30               	movlw	48
 21726  00CA' 2400'              	addwf	xtoa@c^0,w,c
 21727  00CC' 6E00'              	movwf	xtoa@c^0,c
 21728  00CE' 0E00               	movlw	0
 21729  00D0' 2000'              	addwfc	(xtoa@c+1)^0,w,c
 21730  00D2' 6E00'              	movwf	(xtoa@c+1)^0,c
 21731  00D4'                    l1333:
 21732  00D4' 0EBF               	movlw	191
 21733  00D6' 6E00'              	movwf	??_xtoa^0,c
 21734  00D8' 0EFF               	movlw	255
 21735  00DA' 6E00'              	movwf	(??_xtoa+1)^0,c
 21736  00DC' 5000'              	movf	xtoa@x^0,w,c
 21737  00DE' 6E00'              	movwf	(??_xtoa+2)^0,c
 21738  00E0' 6A00'              	clrf	(??_xtoa+3)^0,c
 21739  00E2' 5000'              	movf	??_xtoa^0,w,c
 21740  00E4' 2600'              	addwf	(??_xtoa+2)^0,f,c
 21741  00E6' 5000'              	movf	(??_xtoa+1)^0,w,c
 21742  00E8' 2200'              	addwfc	(??_xtoa+3)^0,f,c
 21743  00EA' 5000'              	movf	(??_xtoa+3)^0,w,c
 21744  00EC' E10A               	bnz	u11270
 21745  00EE' 0E1A               	movlw	26
 21746  00F0' 5C00'              	subwf	(??_xtoa+2)^0,w,c
 21747  00F2' A0D8               	btfss	status,0,c
 21748  00F4' EF00' F000'        	goto	u11271
 21749  00F8' EF00' F000'        	goto	u11270
 21750  00FC'                    u11271:
 21751  00FC' 0E01               	movlw	1
 21752  00FE' EF00' F000'        	goto	u11280
 21753  0102'                    u11270:
 21754  0102' 0E00               	movlw	0
 21755  0104'                    u11280:
 21756  0104' 6E00'              	movwf	_xtoa$2934^0,c
 21757  0106' 6A00'              	clrf	(_xtoa$2934+1)^0,c
 21758  0108' 5000'              	movf	_xtoa$2934^0,w,c
 21759  010A' 1000'              	iorwf	(_xtoa$2934+1)^0,w,c
 21760  010C' B4D8               	btfsc	status,2,c
 21761  010E' EF00' F000'        	goto	u11291
 21762  0112' EF00' F000'        	goto	u11290
 21763  0116'                    u11291:
 21764  0116' EF00' F000'        	goto	l9325
 21765  011A'                    u11290:
 21766  011A' 0E9F               	movlw	159
 21767  011C' 6E00'              	movwf	??_xtoa^0,c
 21768  011E' 0EFF               	movlw	255
 21769  0120' 6E00'              	movwf	(??_xtoa+1)^0,c
 21770  0122' 0E20               	movlw	32
 21771  0124' 1000'              	iorwf	xtoa@c^0,w,c
 21772  0126' 6E00'              	movwf	(??_xtoa+2)^0,c
 21773  0128' 0E00               	movlw	0
 21774  012A' 1000'              	iorwf	(xtoa@c+1)^0,w,c
 21775  012C' 6E00'              	movwf	(??_xtoa+3)^0,c
 21776  012E' 5000'              	movf	??_xtoa^0,w,c
 21777  0130' 2600'              	addwf	(??_xtoa+2)^0,f,c
 21778  0132' 5000'              	movf	(??_xtoa+1)^0,w,c
 21779  0134' 2200'              	addwfc	(??_xtoa+3)^0,f,c
 21780  0136' 5000'              	movf	(??_xtoa+3)^0,w,c
 21781  0138' E10A               	bnz	u11300
 21782  013A' 0E1A               	movlw	26
 21783  013C' 5C00'              	subwf	(??_xtoa+2)^0,w,c
 21784  013E' A0D8               	btfss	status,0,c
 21785  0140' EF00' F000'        	goto	u11301
 21786  0144' EF00' F000'        	goto	u11300
 21787  0148'                    u11301:
 21788  0148' 0E01               	movlw	1
 21789  014A' EF00' F000'        	goto	u11310
 21790  014E'                    u11300:
 21791  014E' 0E00               	movlw	0
 21792  0150'                    u11310:
 21793  0150' 6E00'              	movwf	_xtoa$2935^0,c
 21794  0152' 6A00'              	clrf	(_xtoa$2935+1)^0,c
 21795  0154' 5000'              	movf	_xtoa$2935^0,w,c
 21796  0156' 1000'              	iorwf	(_xtoa$2935+1)^0,w,c
 21797  0158' B4D8               	btfsc	status,2,c
 21798  015A' EF00' F000'        	goto	u11321
 21799  015E' EF00' F000'        	goto	u11320
 21800  0162'                    u11321:
 21801  0162' EF00' F000'        	goto	l9325
 21802  0166'                    u11320:
 21803  0166'                    
 21804                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 21805  0166' C049' F013'        	movff	xtoa@c,toupper@c
 21806  016A' C04A' F014'        	movff	xtoa@c+1,toupper@c+1
 21807  016E' EC00' F000'        	call	_toupper	;wreg free
 21808  0172' C013' F049'        	movff	?_toupper,xtoa@c
 21809  0176' C014' F04A'        	movff	?_toupper+1,xtoa@c+1
 21810  017A'                    l9325:
 21811                           
 21812                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 21813  017A' 0E00'              	movlw	low _dbuf
 21814  017C' 2400'              	addwf	xtoa@i^0,w,c
 21815  017E' 6ED9               	movwf	fsr2l,c
 21816  0180' 0E00'              	movlw	high _dbuf
 21817  0182' 2000'              	addwfc	(xtoa@i+1)^0,w,c
 21818  0184' 6EDA               	movwf	fsr2h,c
 21819  0186' C049' FFDF         	movff	xtoa@c,indf2
 21820  018A'                    
 21821                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 21822  018A' 0600'              	decf	xtoa@p^0,f,c
 21823  018C' A0D8               	btfss	status,0,c
 21824  018E' 0600'              	decf	(xtoa@p+1)^0,f,c
 21825  0190'                    
 21826                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 21827  0190' 0600'              	decf	xtoa@w^0,f,c
 21828  0192' A0D8               	btfss	status,0,c
 21829  0194' 0600'              	decf	(xtoa@w+1)^0,f,c
 21830  0196'                    
 21831                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 21832  0196' C03F' F02F'        	movff	xtoa@n,??_xtoa
 21833  019A' C040' F030'        	movff	xtoa@n+1,??_xtoa+1
 21834  019E' C041' F031'        	movff	xtoa@n+2,??_xtoa+2
 21835  01A2' C042' F032'        	movff	xtoa@n+3,??_xtoa+3
 21836  01A6' C043' F033'        	movff	xtoa@n+4,??_xtoa+4
 21837  01AA' C044' F034'        	movff	xtoa@n+5,??_xtoa+5
 21838  01AE' C045' F035'        	movff	xtoa@n+6,??_xtoa+6
 21839  01B2' C046' F036'        	movff	xtoa@n+7,??_xtoa+7
 21840  01B6' 0E05               	movlw	5
 21841  01B8' EF00' F000'        	goto	u11330
 21842  01BC'                    u11335:
 21843  01BC' 90D8               	bcf	status,0,c
 21844  01BE' 3200'              	rrcf	(??_xtoa+7)^0,f,c
 21845  01C0' 3200'              	rrcf	(??_xtoa+6)^0,f,c
 21846  01C2' 3200'              	rrcf	(??_xtoa+5)^0,f,c
 21847  01C4' 3200'              	rrcf	(??_xtoa+4)^0,f,c
 21848  01C6' 3200'              	rrcf	(??_xtoa+3)^0,f,c
 21849  01C8' 3200'              	rrcf	(??_xtoa+2)^0,f,c
 21850  01CA' 3200'              	rrcf	(??_xtoa+1)^0,f,c
 21851  01CC' 3200'              	rrcf	??_xtoa^0,f,c
 21852  01CE'                    u11330:
 21853  01CE' 2EE8               	decfsz	wreg,f,c
 21854  01D0' EF00' F000'        	goto	u11335
 21855  01D4' C02F' F03F'        	movff	??_xtoa,xtoa@n
 21856  01D8' C030' F040'        	movff	??_xtoa+1,xtoa@n+1
 21857  01DC' C031' F041'        	movff	??_xtoa+2,xtoa@n+2
 21858  01E0' C032' F042'        	movff	??_xtoa+3,xtoa@n+3
 21859  01E4' C033' F043'        	movff	??_xtoa+4,xtoa@n+4
 21860  01E8' C034' F044'        	movff	??_xtoa+5,xtoa@n+5
 21861  01EC' C035' F045'        	movff	??_xtoa+6,xtoa@n+6
 21862  01F0' C036' F046'        	movff	??_xtoa+7,xtoa@n+7
 21863  01F4'                    l9333:
 21864                           
 21865                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 21866  01F4' BE00'              	btfsc	(xtoa@i+1)^0,7,c
 21867  01F6' EF00' F000'        	goto	u11341
 21868  01FA' 5000'              	movf	(xtoa@i+1)^0,w,c
 21869  01FC' E109               	bnz	u11340
 21870  01FE' 0E02               	movlw	2
 21871  0200' 5C00'              	subwf	xtoa@i^0,w,c
 21872  0202' A0D8               	btfss	status,0,c
 21873  0204' EF00' F000'        	goto	u11341
 21874  0208' EF00' F000'        	goto	u11340
 21875  020C'                    u11341:
 21876  020C' EF00' F000'        	goto	l1347
 21877  0210'                    u11340:
 21878  0210' 5000'              	movf	xtoa@n^0,w,c
 21879  0212' 1000'              	iorwf	(xtoa@n+1)^0,w,c
 21880  0214' 1000'              	iorwf	(xtoa@n+2)^0,w,c
 21881  0216' 1000'              	iorwf	(xtoa@n+3)^0,w,c
 21882  0218' 1000'              	iorwf	(xtoa@n+4)^0,w,c
 21883  021A' 1000'              	iorwf	(xtoa@n+5)^0,w,c
 21884  021C' 1000'              	iorwf	(xtoa@n+6)^0,w,c
 21885  021E' 1000'              	iorwf	(xtoa@n+7)^0,w,c
 21886  0220' A4D8               	btfss	status,2,c
 21887  0222' EF00' F000'        	goto	u11351
 21888  0226' EF00' F000'        	goto	u11350
 21889  022A'                    u11351:
 21890  022A' EF00' F000'        	goto	l9303
 21891  022E'                    u11350:
 21892  022E' BE00'              	btfsc	(xtoa@p+1)^0,7,c
 21893  0230' EF00' F000'        	goto	u11360
 21894  0234' 5000'              	movf	(xtoa@p+1)^0,w,c
 21895  0236' E106               	bnz	u11361
 21896  0238' 0400'              	decf	xtoa@p^0,w,c
 21897  023A' B0D8               	btfsc	status,0,c
 21898  023C' EF00' F000'        	goto	u11361
 21899  0240' EF00' F000'        	goto	u11360
 21900  0244'                    u11361:
 21901  0244' EF00' F000'        	goto	l9303
 21902  0248'                    u11360:
 21903  0248' BE00'              	btfsc	(xtoa@w+1)^0,7,c
 21904  024A' EF00' F000'        	goto	u11371
 21905  024E' 5000'              	movf	(xtoa@w+1)^0,w,c
 21906  0250' E108               	bnz	u11370
 21907  0252' 0400'              	decf	xtoa@w^0,w,c
 21908  0254' A0D8               	btfss	status,0,c
 21909  0256' EF00' F000'        	goto	u11371
 21910  025A' EF00' F000'        	goto	u11370
 21911  025E'                    u11371:
 21912  025E' EF00' F000'        	goto	l1347
 21913  0262'                    u11370:
 21914  0262' B200'              	btfsc	_flags^0,1,c
 21915  0264' EF00' F000'        	goto	u11381
 21916  0268' EF00' F000'        	goto	u11380
 21917  026C'                    u11381:
 21918  026C' EF00' F000'        	goto	l9303
 21919  0270'                    u11380:
 21920  0270'                    l1347:
 21921                           
 21922                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 21923  0270' A800'              	btfss	_flags^0,4,c
 21924  0272' EF00' F000'        	goto	u11391
 21925  0276' EF00' F000'        	goto	u11390
 21926  027A'                    u11391:
 21927  027A' EF00' F000'        	goto	l9349
 21928  027E'                    u11390:
 21929  027E'                    
 21930                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 21931  027E' 0600'              	decf	xtoa@i^0,f,c
 21932  0280' A0D8               	btfss	status,0,c
 21933  0282' 0600'              	decf	(xtoa@i+1)^0,f,c
 21934  0284'                    
 21935                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 21936  0284' 0E00'              	movlw	low _dbuf
 21937  0286' 2400'              	addwf	xtoa@i^0,w,c
 21938  0288' 6ED9               	movwf	fsr2l,c
 21939  028A' 0E00'              	movlw	high _dbuf
 21940  028C' 2000'              	addwfc	(xtoa@i+1)^0,w,c
 21941  028E' 6EDA               	movwf	fsr2h,c
 21942  0290' C02E' FFDF         	movff	xtoa@x,indf2
 21943  0294'                    
 21944                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 21945  0294' 0600'              	decf	xtoa@i^0,f,c
 21946  0296' A0D8               	btfss	status,0,c
 21947  0298' 0600'              	decf	(xtoa@i+1)^0,f,c
 21948                           
 21949                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 21950  029A' 0E00'              	movlw	low _dbuf
 21951  029C' 2400'              	addwf	xtoa@i^0,w,c
 21952  029E' 6ED9               	movwf	fsr2l,c
 21953  02A0' 0E00'              	movlw	high _dbuf
 21954  02A2' 2000'              	addwfc	(xtoa@i+1)^0,w,c
 21955  02A4' 6EDA               	movwf	fsr2h,c
 21956  02A6' 0E30               	movlw	48
 21957  02A8' 6EDF               	movwf	indf2,c
 21958  02AA'                    l9349:
 21959                           
 21960                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 21961  02AA' C024' F019'        	movff	xtoa@fp,pad@fp
 21962  02AE' C025' F01A'        	movff	xtoa@fp+1,pad@fp+1
 21963  02B2' 0E00'              	movlw	low _dbuf
 21964  02B4' 2400'              	addwf	xtoa@i^0,w,c
 21965  02B6' 6E00'              	movwf	pad@buf^0,c
 21966  02B8' 0E00'              	movlw	high _dbuf
 21967  02BA' 2000'              	addwfc	(xtoa@i+1)^0,w,c
 21968  02BC' 6E00'              	movwf	(pad@buf+1)^0,c
 21969  02BE' C03D' F01D'        	movff	xtoa@w,pad@p
 21970  02C2' C03E' F01E'        	movff	xtoa@w+1,pad@p+1
 21971  02C6' EC00' F000'        	call	_pad	;wreg free
 21972  02CA' C019' F024'        	movff	?_pad,?_xtoa
 21973  02CE' C01A' F025'        	movff	?_pad+1,?_xtoa+1
 21974  02D2' 0012               	return		;funcret
 21975  02D4'                    __end_of_xtoa:
 21976                           	opt callstack 0
 21977                           
 21978 ;; *************** function _toupper *****************
 21979 ;; Defined at:
 21980 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 21981 ;; Parameters:    Size  Location     Type
 21982 ;;  c               2   19[COMRAM] int 
 21983 ;; Auto vars:     Size  Location     Type
 21984 ;;		None
 21985 ;; Return value:  Size  Location     Type
 21986 ;;                  2   19[COMRAM] int 
 21987 ;; Registers used:
 21988 ;;		wreg, status,2, status,0
 21989 ;; Tracked objects:
 21990 ;;		On entry : 0/0
 21991 ;;		On exit  : 0/0
 21992 ;;		Unchanged: 0/0
 21993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21994 ;;      Params:         2       0       0       0       0       0       0
 21995 ;;      Locals:         2       0       0       0       0       0       0
 21996 ;;      Temps:          4       0       0       0       0       0       0
 21997 ;;      Totals:         8       0       0       0       0       0       0
 21998 ;;Total ram usage:        8 bytes
 21999 ;; Hardware stack levels used:    1
 22000 ;; Hardware stack levels required when called:    3
 22001 ;; This function calls:
 22002 ;;		_islower
 22003 ;; This function is called by:
 22004 ;;		_xtoa
 22005 ;;		___strtoxl
 22006 ;; This function uses a non-reentrant model
 22007 ;;
 22008                           
 22009                           	psect	text78
 22010  0000'                    __ptext78:
 22011                           	opt callstack 0
 22012  0000'                    _toupper:
 22013                           	opt callstack 21
 22014  0000' 0E9F               	movlw	159
 22015  0002' 6E00'              	movwf	??_toupper^0,c
 22016  0004' 0EFF               	movlw	255
 22017  0006' 6E00'              	movwf	(??_toupper+1)^0,c
 22018  0008' C013' F017'        	movff	toupper@c,??_toupper+2
 22019  000C' C014' F018'        	movff	toupper@c+1,??_toupper+3
 22020  0010' 5000'              	movf	??_toupper^0,w,c
 22021  0012' 2600'              	addwf	(??_toupper+2)^0,f,c
 22022  0014' 5000'              	movf	(??_toupper+1)^0,w,c
 22023  0016' 2200'              	addwfc	(??_toupper+3)^0,f,c
 22024  0018' 5000'              	movf	(??_toupper+3)^0,w,c
 22025  001A' E10A               	bnz	u10640
 22026  001C' 0E1A               	movlw	26
 22027  001E' 5C00'              	subwf	(??_toupper+2)^0,w,c
 22028  0020' A0D8               	btfss	status,0,c
 22029  0022' EF00' F000'        	goto	u10641
 22030  0026' EF00' F000'        	goto	u10640
 22031  002A'                    u10641:
 22032  002A' 0E01               	movlw	1
 22033  002C' EF00' F000'        	goto	u10650
 22034  0030'                    u10640:
 22035  0030' 0E00               	movlw	0
 22036  0032'                    u10650:
 22037  0032' 6E00'              	movwf	_toupper$3548^0,c
 22038  0034' 6A00'              	clrf	(_toupper$3548+1)^0,c
 22039  0036' 5000'              	movf	_toupper$3548^0,w,c
 22040  0038' 1000'              	iorwf	(_toupper$3548+1)^0,w,c
 22041  003A' B4D8               	btfsc	status,2,c
 22042  003C' EF00' F000'        	goto	u10661
 22043  0040' EF00' F000'        	goto	u10660
 22044  0044'                    u10661:
 22045  0044' EF00' F000'        	goto	l2207
 22046  0048'                    u10660:
 22047  0048' 0E5F               	movlw	95
 22048  004A' 1400'              	andwf	toupper@c^0,w,c
 22049  004C' 6E00'              	movwf	?_toupper^0,c
 22050  004E' 6A00'              	clrf	(?_toupper+1)^0,c
 22051  0050' EF00' F000'        	goto	l2212
 22052  0054'                    l2207:
 22053  0054' C013' F013'        	movff	toupper@c,?_toupper
 22054  0058' C014' F014'        	movff	toupper@c+1,?_toupper+1
 22055  005C'                    l2212:
 22056  005C' 0012               	return		;funcret
 22057  005E'                    __end_of_toupper:
 22058                           	opt callstack 0
 22059                           
 22060 ;; *************** function _islower *****************
 22061 ;; Defined at:
 22062 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 22063 ;; Parameters:    Size  Location     Type
 22064 ;;  c               2   13[COMRAM] int 
 22065 ;; Auto vars:     Size  Location     Type
 22066 ;;		None
 22067 ;; Return value:  Size  Location     Type
 22068 ;;                  2   13[COMRAM] int 
 22069 ;; Registers used:
 22070 ;;		wreg, status,2, status,0
 22071 ;; Tracked objects:
 22072 ;;		On entry : 0/0
 22073 ;;		On exit  : 0/0
 22074 ;;		Unchanged: 0/0
 22075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22076 ;;      Params:         2       0       0       0       0       0       0
 22077 ;;      Locals:         0       0       0       0       0       0       0
 22078 ;;      Temps:          4       0       0       0       0       0       0
 22079 ;;      Totals:         6       0       0       0       0       0       0
 22080 ;;Total ram usage:        6 bytes
 22081 ;; Hardware stack levels used:    1
 22082 ;; Hardware stack levels required when called:    2
 22083 ;; This function calls:
 22084 ;;		Nothing
 22085 ;; This function is called by:
 22086 ;;		_toupper
 22087 ;; This function uses a non-reentrant model
 22088 ;;
 22089                           
 22090                           	psect	text79
 22091  0000'                    __ptext79:
 22092                           	opt callstack 0
 22093  0000'                    _islower:
 22094                           	opt callstack 21
 22095  0000' 0E9F               	movlw	159
 22096  0002' 6E00'              	movwf	??_islower^0,c
 22097  0004' 0EFF               	movlw	255
 22098  0006' 6E00'              	movwf	(??_islower+1)^0,c
 22099  0008' C00D' F011'        	movff	islower@c,??_islower+2
 22100  000C' C00E' F012'        	movff	islower@c+1,??_islower+3
 22101  0010' 5000'              	movf	??_islower^0,w,c
 22102  0012' 2600'              	addwf	(??_islower+2)^0,f,c
 22103  0014' 5000'              	movf	(??_islower+1)^0,w,c
 22104  0016' 2200'              	addwfc	(??_islower+3)^0,f,c
 22105  0018' 5000'              	movf	(??_islower+3)^0,w,c
 22106  001A' E10A               	bnz	u10360
 22107  001C' 0E1A               	movlw	26
 22108  001E' 5C00'              	subwf	(??_islower+2)^0,w,c
 22109  0020' A0D8               	btfss	status,0,c
 22110  0022' EF00' F000'        	goto	u10361
 22111  0026' EF00' F000'        	goto	u10360
 22112  002A'                    u10361:
 22113  002A' 0E01               	movlw	1
 22114  002C' EF00' F000'        	goto	u10370
 22115  0030'                    u10360:
 22116  0030' 0E00               	movlw	0
 22117  0032'                    u10370:
 22118  0032' 6E00'              	movwf	?_islower^0,c
 22119  0034' 6A00'              	clrf	(?_islower+1)^0,c
 22120  0036' 0012               	return		;funcret
 22121  0038'                    __end_of_islower:
 22122                           	opt callstack 0
 22123                           
 22124 ;; *************** function _isupper *****************
 22125 ;; Defined at:
 22126 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 22127 ;; Parameters:    Size  Location     Type
 22128 ;;  c               2   13[COMRAM] int 
 22129 ;; Auto vars:     Size  Location     Type
 22130 ;;		None
 22131 ;; Return value:  Size  Location     Type
 22132 ;;                  2   13[COMRAM] int 
 22133 ;; Registers used:
 22134 ;;		wreg, status,2, status,0
 22135 ;; Tracked objects:
 22136 ;;		On entry : 0/0
 22137 ;;		On exit  : 0/0
 22138 ;;		Unchanged: 0/0
 22139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22140 ;;      Params:         2       0       0       0       0       0       0
 22141 ;;      Locals:         0       0       0       0       0       0       0
 22142 ;;      Temps:          4       0       0       0       0       0       0
 22143 ;;      Totals:         6       0       0       0       0       0       0
 22144 ;;Total ram usage:        6 bytes
 22145 ;; Hardware stack levels used:    1
 22146 ;; Hardware stack levels required when called:    2
 22147 ;; This function calls:
 22148 ;;		Nothing
 22149 ;; This function is called by:
 22150 ;;		_xtoa
 22151 ;; This function uses a non-reentrant model
 22152 ;;
 22153                           
 22154                           	psect	text80
 22155  0000'                    __ptext80:
 22156                           	opt callstack 0
 22157  0000'                    _isupper:
 22158                           	opt callstack 22
 22159  0000' 0EBF               	movlw	191
 22160  0002' 6E00'              	movwf	??_isupper^0,c
 22161  0004' 0EFF               	movlw	255
 22162  0006' 6E00'              	movwf	(??_isupper+1)^0,c
 22163  0008' C00D' F011'        	movff	isupper@c,??_isupper+2
 22164  000C' C00E' F012'        	movff	isupper@c+1,??_isupper+3
 22165  0010' 5000'              	movf	??_isupper^0,w,c
 22166  0012' 2600'              	addwf	(??_isupper+2)^0,f,c
 22167  0014' 5000'              	movf	(??_isupper+1)^0,w,c
 22168  0016' 2200'              	addwfc	(??_isupper+3)^0,f,c
 22169  0018' 5000'              	movf	(??_isupper+3)^0,w,c
 22170  001A' E10A               	bnz	u10600
 22171  001C' 0E1A               	movlw	26
 22172  001E' 5C00'              	subwf	(??_isupper+2)^0,w,c
 22173  0020' A0D8               	btfss	status,0,c
 22174  0022' EF00' F000'        	goto	u10601
 22175  0026' EF00' F000'        	goto	u10600
 22176  002A'                    u10601:
 22177  002A' 0E01               	movlw	1
 22178  002C' EF00' F000'        	goto	u10610
 22179  0030'                    u10600:
 22180  0030' 0E00               	movlw	0
 22181  0032'                    u10610:
 22182  0032' 6E00'              	movwf	?_isupper^0,c
 22183  0034' 6A00'              	clrf	(?_isupper+1)^0,c
 22184  0036' 0012               	return		;funcret
 22185  0038'                    __end_of_isupper:
 22186                           	opt callstack 0
 22187                           
 22188 ;; *************** function _isalpha *****************
 22189 ;; Defined at:
 22190 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 22191 ;; Parameters:    Size  Location     Type
 22192 ;;  c               2   13[COMRAM] int 
 22193 ;; Auto vars:     Size  Location     Type
 22194 ;;		None
 22195 ;; Return value:  Size  Location     Type
 22196 ;;                  2   13[COMRAM] int 
 22197 ;; Registers used:
 22198 ;;		wreg, status,2, status,0
 22199 ;; Tracked objects:
 22200 ;;		On entry : 0/0
 22201 ;;		On exit  : 0/0
 22202 ;;		Unchanged: 0/0
 22203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22204 ;;      Params:         2       0       0       0       0       0       0
 22205 ;;      Locals:         0       0       0       0       0       0       0
 22206 ;;      Temps:          4       0       0       0       0       0       0
 22207 ;;      Totals:         6       0       0       0       0       0       0
 22208 ;;Total ram usage:        6 bytes
 22209 ;; Hardware stack levels used:    1
 22210 ;; Hardware stack levels required when called:    2
 22211 ;; This function calls:
 22212 ;;		Nothing
 22213 ;; This function is called by:
 22214 ;;		_xtoa
 22215 ;;		___strtoxl
 22216 ;; This function uses a non-reentrant model
 22217 ;;
 22218                           
 22219                           	psect	text81
 22220  0000'                    __ptext81:
 22221                           	opt callstack 0
 22222  0000'                    _isalpha:
 22223                           	opt callstack 22
 22224  0000' 0E9F               	movlw	159
 22225  0002' 6E00'              	movwf	??_isalpha^0,c
 22226  0004' 0EFF               	movlw	255
 22227  0006' 6E00'              	movwf	(??_isalpha+1)^0,c
 22228  0008' 0E20               	movlw	32
 22229  000A' 1000'              	iorwf	isalpha@c^0,w,c
 22230  000C' 6E00'              	movwf	(??_isalpha+2)^0,c
 22231  000E' 0E00               	movlw	0
 22232  0010' 1000'              	iorwf	(isalpha@c+1)^0,w,c
 22233  0012' 6E00'              	movwf	(??_isalpha+3)^0,c
 22234  0014' 5000'              	movf	??_isalpha^0,w,c
 22235  0016' 2600'              	addwf	(??_isalpha+2)^0,f,c
 22236  0018' 5000'              	movf	(??_isalpha+1)^0,w,c
 22237  001A' 2200'              	addwfc	(??_isalpha+3)^0,f,c
 22238  001C' 5000'              	movf	(??_isalpha+3)^0,w,c
 22239  001E' E10A               	bnz	u10620
 22240  0020' 0E1A               	movlw	26
 22241  0022' 5C00'              	subwf	(??_isalpha+2)^0,w,c
 22242  0024' A0D8               	btfss	status,0,c
 22243  0026' EF00' F000'        	goto	u10621
 22244  002A' EF00' F000'        	goto	u10620
 22245  002E'                    u10621:
 22246  002E' 0E01               	movlw	1
 22247  0030' EF00' F000'        	goto	u10630
 22248  0034'                    u10620:
 22249  0034' 0E00               	movlw	0
 22250  0036'                    u10630:
 22251  0036' 6E00'              	movwf	?_isalpha^0,c
 22252  0038' 6A00'              	clrf	(?_isalpha+1)^0,c
 22253  003A' 0012               	return		;funcret
 22254  003C'                    __end_of_isalpha:
 22255                           	opt callstack 0
 22256                           
 22257 ;; *************** function _strncmp *****************
 22258 ;; Defined at:
 22259 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 22260 ;; Parameters:    Size  Location     Type
 22261 ;;  _l              2   13[COMRAM] PTR const unsigned char 
 22262 ;;		 -> STR_94(13), STR_93(31), STR_92(2), STR_91(26), 
 22263 ;;		 -> STR_90(15), STR_40(18), STR_37(17), STR_36(21), 
 22264 ;;		 -> STR_35(28), STR_34(11), STR_33(13), STR_32(27), 
 22265 ;;		 -> STR_31(20), STR_30(13), STR_29(9), STR_28(12), 
 22266 ;;		 -> STR_27(15), STR_26(9), STR_25(11), STR_24(15), 
 22267 ;;		 -> STR_23(32), STR_22(16), STR_21(18), STR_20(16), 
 22268 ;;		 -> STR_19(15), STR_18(32), STR_17(16), STR_16(18), 
 22269 ;;		 -> STR_15(16), STR_14(15), STR_13(32), STR_12(16), 
 22270 ;;		 -> STR_11(18), STR_10(20), STR_9(18), STR_8(8), 
 22271 ;;		 -> STR_7(39), STR_6(25), STR_5(25), STR_4(20), 
 22272 ;;		 -> STR_3(12), STR_2(14), STR_1(24), 
 22273 ;;  _r              2   15[COMRAM] PTR const unsigned char 
 22274 ;;		 -> STR_110(3), STR_106(3), STR_101(3), STR_97(3), 
 22275 ;;  n               2   17[COMRAM] unsigned int 
 22276 ;; Auto vars:     Size  Location     Type
 22277 ;;  r               2   22[COMRAM] PTR const unsigned char 
 22278 ;;		 -> STR_110(3), STR_106(3), STR_101(3), STR_97(3), 
 22279 ;;  l               2   20[COMRAM] PTR const unsigned char 
 22280 ;;		 -> STR_94(13), STR_93(31), STR_92(2), STR_91(26), 
 22281 ;;		 -> STR_90(15), STR_40(18), STR_37(17), STR_36(21), 
 22282 ;;		 -> STR_35(28), STR_34(11), STR_33(13), STR_32(27), 
 22283 ;;		 -> STR_31(20), STR_30(13), STR_29(9), STR_28(12), 
 22284 ;;		 -> STR_27(15), STR_26(9), STR_25(11), STR_24(15), 
 22285 ;;		 -> STR_23(32), STR_22(16), STR_21(18), STR_20(16), 
 22286 ;;		 -> STR_19(15), STR_18(32), STR_17(16), STR_16(18), 
 22287 ;;		 -> STR_15(16), STR_14(15), STR_13(32), STR_12(16), 
 22288 ;;		 -> STR_11(18), STR_10(20), STR_9(18), STR_8(8), 
 22289 ;;		 -> STR_7(39), STR_6(25), STR_5(25), STR_4(20), 
 22290 ;;		 -> STR_3(12), STR_2(14), STR_1(24), 
 22291 ;; Return value:  Size  Location     Type
 22292 ;;                  2   13[COMRAM] int 
 22293 ;; Registers used:
 22294 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 22295 ;; Tracked objects:
 22296 ;;		On entry : 0/0
 22297 ;;		On exit  : 0/0
 22298 ;;		Unchanged: 0/0
 22299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22300 ;;      Params:         6       0       0       0       0       0       0
 22301 ;;      Locals:         4       0       0       0       0       0       0
 22302 ;;      Temps:          1       0       0       0       0       0       0
 22303 ;;      Totals:        11       0       0       0       0       0       0
 22304 ;;Total ram usage:       11 bytes
 22305 ;; Hardware stack levels used:    1
 22306 ;; Hardware stack levels required when called:    2
 22307 ;; This function calls:
 22308 ;;		Nothing
 22309 ;; This function is called by:
 22310 ;;		_vfpfcnvrt
 22311 ;; This function uses a non-reentrant model
 22312 ;;
 22313                           
 22314                           	psect	text82
 22315  0000'                    __ptext82:
 22316                           	opt callstack 0
 22317  0000'                    _strncmp:
 22318                           	opt callstack 23
 22319  0000' C00D' F014'        	movff	strncmp@_l,strncmp@l
 22320  0004' C00E' F015'        	movff	strncmp@_l+1,strncmp@l+1
 22321  0008' C00F' F016'        	movff	strncmp@_r,strncmp@r
 22322  000C' C010' F017'        	movff	strncmp@_r+1,strncmp@r+1
 22323  0010' 0600'              	decf	strncmp@n^0,f,c
 22324  0012' A0D8               	btfss	status,0,c
 22325  0014' 0600'              	decf	(strncmp@n+1)^0,f,c
 22326  0016' 2800'              	incf	strncmp@n^0,w,c
 22327  0018' E106               	bnz	u11401
 22328  001A' 2800'              	incf	(strncmp@n+1)^0,w,c
 22329  001C' A4D8               	btfss	status,2,c
 22330  001E' EF00' F000'        	goto	u11401
 22331  0022' EF00' F000'        	goto	u11400
 22332  0026'                    u11401:
 22333  0026' EF00' F000'        	goto	l9361
 22334  002A'                    u11400:
 22335  002A' 0E00               	movlw	0
 22336  002C' 6E00'              	movwf	(?_strncmp+1)^0,c
 22337  002E' 0E00               	movlw	0
 22338  0030' 6E00'              	movwf	?_strncmp^0,c
 22339  0032' EF00' F000'        	goto	l2192
 22340  0036'                    l9359:
 22341  0036' 4A00'              	infsnz	strncmp@l^0,f,c
 22342  0038' 2A00'              	incf	(strncmp@l+1)^0,f,c
 22343  003A' 4A00'              	infsnz	strncmp@r^0,f,c
 22344  003C' 2A00'              	incf	(strncmp@r+1)^0,f,c
 22345  003E' 0600'              	decf	strncmp@n^0,f,c
 22346  0040' A0D8               	btfss	status,0,c
 22347  0042' 0600'              	decf	(strncmp@n+1)^0,f,c
 22348  0044'                    l9361:
 22349  0044' C014' FFF6         	movff	strncmp@l,tblptrl
 22350  0048' C015' FFF7         	movff	strncmp@l+1,tblptrh
 22351  004C'                    	if	0	;tblptru may be non-zero
 22352  004C'                    	endif
 22353  004C'                    	if	0	;tblptru may be non-zero
 22354  004C'                    	endif
 22355  004C' 0008               	tblrd		*
 22356  004E' 50F5               	movf	tablat,w,c
 22357  0050' 0900               	iorlw	0
 22358  0052' B4D8               	btfsc	status,2,c
 22359  0054' EF00' F000'        	goto	u11411
 22360  0058' EF00' F000'        	goto	u11410
 22361  005C'                    u11411:
 22362  005C' EF00' F000'        	goto	l9369
 22363  0060'                    u11410:
 22364  0060' C016' FFF6         	movff	strncmp@r,tblptrl
 22365  0064' C017' FFF7         	movff	strncmp@r+1,tblptrh
 22366  0068'                    	if	0	;tblptru may be non-zero
 22367  0068'                    	endif
 22368  0068'                    	if	0	;tblptru may be non-zero
 22369  0068'                    	endif
 22370  0068' 0008               	tblrd		*
 22371  006A' 50F5               	movf	tablat,w,c
 22372  006C' 0900               	iorlw	0
 22373  006E' B4D8               	btfsc	status,2,c
 22374  0070' EF00' F000'        	goto	u11421
 22375  0074' EF00' F000'        	goto	u11420
 22376  0078'                    u11421:
 22377  0078' EF00' F000'        	goto	l9369
 22378  007C'                    u11420:
 22379  007C' 5000'              	movf	strncmp@n^0,w,c
 22380  007E' 1000'              	iorwf	(strncmp@n+1)^0,w,c
 22381  0080' B4D8               	btfsc	status,2,c
 22382  0082' EF00' F000'        	goto	u11431
 22383  0086' EF00' F000'        	goto	u11430
 22384  008A'                    u11431:
 22385  008A' EF00' F000'        	goto	l9369
 22386  008E'                    u11430:
 22387  008E' C014' FFF6         	movff	strncmp@l,tblptrl
 22388  0092' C015' FFF7         	movff	strncmp@l+1,tblptrh
 22389  0096'                    	if	0	;tblptru may be non-zero
 22390  0096'                    	endif
 22391  0096'                    	if	0	;tblptru may be non-zero
 22392  0096'                    	endif
 22393  0096' 0008               	tblrd		*
 22394  0098' CFF5 F013'         	movff	tablat,??_strncmp
 22395  009C' C016' FFF6         	movff	strncmp@r,tblptrl
 22396  00A0' C017' FFF7         	movff	strncmp@r+1,tblptrh
 22397  00A4'                    	if	0	;tblptru may be non-zero
 22398  00A4'                    	endif
 22399  00A4'                    	if	0	;tblptru may be non-zero
 22400  00A4'                    	endif
 22401  00A4' 0008               	tblrd		*
 22402  00A6' 50F5               	movf	tablat,w,c
 22403  00A8' 1800'              	xorwf	??_strncmp^0,w,c
 22404  00AA' B4D8               	btfsc	status,2,c
 22405  00AC' EF00' F000'        	goto	u11441
 22406  00B0' EF00' F000'        	goto	u11440
 22407  00B4'                    u11441:
 22408  00B4' EF00' F000'        	goto	l9359
 22409  00B8'                    u11440:
 22410  00B8'                    l9369:
 22411  00B8' C014' FFF6         	movff	strncmp@l,tblptrl
 22412  00BC' C015' FFF7         	movff	strncmp@l+1,tblptrh
 22413  00C0'                    	if	0	;tblptru may be non-zero
 22414  00C0'                    	endif
 22415  00C0'                    	if	0	;tblptru may be non-zero
 22416  00C0'                    	endif
 22417  00C0' 0008               	tblrd		*
 22418  00C2' CFF5 F013'         	movff	tablat,??_strncmp
 22419  00C6' C016' FFF6         	movff	strncmp@r,tblptrl
 22420  00CA' C017' FFF7         	movff	strncmp@r+1,tblptrh
 22421  00CE'                    	if	0	;tblptru may be non-zero
 22422  00CE'                    	endif
 22423  00CE'                    	if	0	;tblptru may be non-zero
 22424  00CE'                    	endif
 22425  00CE' 0008               	tblrd		*
 22426  00D0' 50F5               	movf	tablat,w,c
 22427  00D2' 5C00'              	subwf	??_strncmp^0,w,c
 22428  00D4' 6E00'              	movwf	?_strncmp^0,c
 22429  00D6' 6A00'              	clrf	(?_strncmp+1)^0,c
 22430  00D8' A0D8               	btfss	status,0,c
 22431  00DA' 0600'              	decf	(?_strncmp+1)^0,f,c
 22432  00DC'                    l2192:
 22433  00DC' 0012               	return		;funcret
 22434  00DE'                    __end_of_strncmp:
 22435                           	opt callstack 0
 22436                           
 22437 ;; *************** function _stoa *****************
 22438 ;; Defined at:
 22439 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 22440 ;; Parameters:    Size  Location     Type
 22441 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
 22442 ;;		 -> NULL(0), 
 22443 ;;  s               2   20[COMRAM] PTR unsigned char 
 22444 ;;		 -> ?_printf(2), CalculateGridSquare@grid(7), STR_89(14), STR_88(7), 
 22445 ;;		 -> STR_87(6), STR_86(12), STR_85(17), itoa@buffer(12), 
 22446 ;;		 -> STR_84(5), STR_83(5), STR_82(7), STR_81(7), 
 22447 ;;		 -> STR_80(8), STR_79(5), GPS_lon(15), GPS_lat(15), 
 22448 ;;		 -> STR_78(4), STR_77(4), STR_76(6), STR_75(5), 
 22449 ;;		 -> STR_74(4), STR_73(4), STR_72(10), GPS_time(9), 
 22450 ;;		 -> STR_71(17), STR_70(17), STR_69(17), STR_68(7), 
 22451 ;;		 -> STR_67(7), STR_66(17), STR_65(17), STR_64(17), 
 22452 ;;		 -> STR_63(7), STR_62(7), STR_61(17), STR_60(17), 
 22453 ;;		 -> STR_59(17), STR_58(7), STR_57(7), STR_56(6), 
 22454 ;;		 -> STR_55(6), STR_54(17), STR_53(5), STR_52(5), 
 22455 ;;		 -> STR_51(5), STR_50(5), STR_49(3), STR_48(17), 
 22456 ;;		 -> STR_47(17), STR_46(17), STR_45(17), STR_44(17), 
 22457 ;;		 -> STR_43(17), STR_42(4), STR_41(17), ssd1306_setpos@x(1), 
 22458 ;;		 -> STR_39(17), STR_38(17), 
 22459 ;; Auto vars:     Size  Location     Type
 22460 ;;  nuls            7   23[COMRAM] unsigned char [7]
 22461 ;;  l               2   38[COMRAM] int 
 22462 ;;  p               2   36[COMRAM] int 
 22463 ;;  cp              2   34[COMRAM] PTR unsigned char 
 22464 ;;		 -> ?_printf(2), stoa@nuls(7), CalculateGridSquare@grid(7), STR_89(14), 
 22465 ;;		 -> STR_88(7), STR_87(6), STR_86(12), STR_85(17), 
 22466 ;;		 -> itoa@buffer(12), STR_84(5), STR_83(5), STR_82(7), 
 22467 ;;		 -> STR_81(7), STR_80(8), STR_79(5), GPS_lon(15), 
 22468 ;;		 -> GPS_lat(15), STR_78(4), STR_77(4), STR_76(6), 
 22469 ;;		 -> STR_75(5), STR_74(4), STR_73(4), STR_72(10), 
 22470 ;;		 -> GPS_time(9), STR_71(17), STR_70(17), STR_69(17), 
 22471 ;;		 -> STR_68(7), STR_67(7), STR_66(17), STR_65(17), 
 22472 ;;		 -> STR_64(17), STR_63(7), STR_62(7), STR_61(17), 
 22473 ;;		 -> STR_60(17), STR_59(17), STR_58(7), STR_57(7), 
 22474 ;;		 -> STR_56(6), STR_55(6), STR_54(17), STR_53(5), 
 22475 ;;		 -> STR_52(5), STR_51(5), STR_50(5), STR_49(3), 
 22476 ;;		 -> STR_48(17), STR_47(17), STR_46(17), STR_45(17), 
 22477 ;;		 -> STR_44(17), STR_43(17), STR_42(4), STR_41(17), 
 22478 ;;		 -> ssd1306_setpos@x(1), STR_39(17), STR_38(17), 
 22479 ;;  w               2   32[COMRAM] int 
 22480 ;;  i               2   30[COMRAM] int 
 22481 ;; Return value:  Size  Location     Type
 22482 ;;                  2   18[COMRAM] int 
 22483 ;; Registers used:
 22484 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22485 ;; Tracked objects:
 22486 ;;		On entry : 0/0
 22487 ;;		On exit  : 0/0
 22488 ;;		Unchanged: 0/0
 22489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22490 ;;      Params:         4       0       0       0       0       0       0
 22491 ;;      Locals:        17       0       0       0       0       0       0
 22492 ;;      Temps:          1       0       0       0       0       0       0
 22493 ;;      Totals:        22       0       0       0       0       0       0
 22494 ;;Total ram usage:       22 bytes
 22495 ;; Hardware stack levels used:    1
 22496 ;; Hardware stack levels required when called:    4
 22497 ;; This function calls:
 22498 ;;		_fputc
 22499 ;;		_strlen
 22500 ;; This function is called by:
 22501 ;;		_vfpfcnvrt
 22502 ;; This function uses a non-reentrant model
 22503 ;;
 22504                           
 22505                           	psect	text83
 22506  0000'                    __ptext83:
 22507                           	opt callstack 0
 22508  0000'                    _stoa:
 22509                           	opt callstack 21
 22510  0000'                    
 22511                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 22512  0000' EE20' F000'        	lfsr	2,stoa@F1139
 22513  0004' EE10' F000'        	lfsr	1,stoa@nuls
 22514  0008' 0E06               	movlw	6
 22515  000A'                    u11131:
 22516  000A' CFDB FFE3          	movff	plusw2,plusw1
 22517  000E' 06E8               	decf	wreg,f,c
 22518  0010' E2FC               	bc	u11131
 22519  0012'                    
 22520                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 22521  0012' C014' F022'        	movff	stoa@s,stoa@cp
 22522  0016' C015' F023'        	movff	stoa@s+1,stoa@cp+1
 22523  001A'                    
 22524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 22525  001A' 5000'              	movf	stoa@cp^0,w,c
 22526  001C' 1000'              	iorwf	(stoa@cp+1)^0,w,c
 22527  001E' A4D8               	btfss	status,2,c
 22528  0020' EF00' F000'        	goto	u11141
 22529  0024' EF00' F000'        	goto	u11140
 22530  0028'                    u11141:
 22531  0028' EF00' F000'        	goto	l9253
 22532  002C'                    u11140:
 22533  002C'                    
 22534                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 22535  002C' 0E00'              	movlw	low stoa@nuls
 22536  002E' 6E00'              	movwf	stoa@cp^0,c
 22537  0030' 0E00'              	movlw	high stoa@nuls
 22538  0032' 6E00'              	movwf	(stoa@cp+1)^0,c
 22539  0034'                    l9253:
 22540                           
 22541                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 22542  0034' C022' F00D'        	movff	stoa@cp,strlen@s
 22543  0038' C023' F00E'        	movff	stoa@cp+1,strlen@s+1
 22544  003C' EC00' F000'        	call	_strlen	;wreg free
 22545  0040' C00D' F026'        	movff	?_strlen,stoa@l
 22546  0044' C00E' F027'        	movff	?_strlen+1,stoa@l+1
 22547  0048'                    
 22548                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 22549  0048' C000' F024'        	movff	_prec,stoa@p
 22550  004C' C001' F025'        	movff	_prec+1,stoa@p+1
 22551  0050'                    
 22552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 22553  0050' BE00'              	btfsc	(stoa@p+1)^0,7,c
 22554  0052' EF00' F000'        	goto	u11151
 22555  0056' EF00' F000'        	goto	u11150
 22556  005A'                    u11151:
 22557  005A' EF00' F000'        	goto	l1305
 22558  005E'                    u11150:
 22559  005E' 5000'              	movf	stoa@l^0,w,c
 22560  0060' 5C00'              	subwf	stoa@p^0,w,c
 22561  0062' 5000'              	movf	(stoa@p+1)^0,w,c
 22562  0064' 0A80               	xorlw	128
 22563  0066' 6E00'              	movwf	??_stoa^0,c
 22564  0068' 5000'              	movf	(stoa@l+1)^0,w,c
 22565  006A' 0A80               	xorlw	128
 22566  006C' 5800'              	subwfb	??_stoa^0,w,c
 22567  006E' A0D8               	btfss	status,0,c
 22568  0070' EF00' F000'        	goto	u11161
 22569  0074' EF00' F000'        	goto	u11160
 22570  0078'                    u11161:
 22571  0078' EF00' F000'        	goto	l1303
 22572  007C'                    u11160:
 22573  007C' EF00' F000'        	goto	l1305
 22574  0080'                    l1303:
 22575  0080' C024' F026'        	movff	stoa@p,stoa@l
 22576  0084' C025' F027'        	movff	stoa@p+1,stoa@l+1
 22577  0088'                    l1305:
 22578                           
 22579                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 22580  0088' C026' F024'        	movff	stoa@l,stoa@p
 22581  008C' C027' F025'        	movff	stoa@l+1,stoa@p+1
 22582                           
 22583                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 22584  0090' C000' F020'        	movff	_width,stoa@w
 22585  0094' C001' F021'        	movff	_width+1,stoa@w+1
 22586                           
 22587                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 22588  0098' B000'              	btfsc	_flags^0,0,c
 22589  009A' EF00' F000'        	goto	u11171
 22590  009E' EF00' F000'        	goto	u11170
 22591  00A2'                    u11171:
 22592  00A2' EF00' F000'        	goto	l9269
 22593  00A6'                    u11170:
 22594  00A6' EF00' F000'        	goto	l9267
 22595  00AA'                    l9263:
 22596                           
 22597                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 22598  00AA' 0E00               	movlw	0
 22599  00AC' 6E00'              	movwf	(fputc@c+1)^0,c
 22600  00AE' 0E20               	movlw	32
 22601  00B0' 6E00'              	movwf	fputc@c^0,c
 22602  00B2' C012' F010'        	movff	stoa@fp,fputc@fp
 22603  00B6' C013' F011'        	movff	stoa@fp+1,fputc@fp+1
 22604  00BA' EC00' F000'        	call	_fputc	;wreg free
 22605  00BE'                    
 22606                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 22607  00BE' 4A00'              	infsnz	stoa@l^0,f,c
 22608  00C0' 2A00'              	incf	(stoa@l+1)^0,f,c
 22609  00C2'                    l9267:
 22610                           
 22611                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 22612  00C2' 5000'              	movf	stoa@w^0,w,c
 22613  00C4' 5C00'              	subwf	stoa@l^0,w,c
 22614  00C6' 5000'              	movf	(stoa@l+1)^0,w,c
 22615  00C8' 0A80               	xorlw	128
 22616  00CA' 6E00'              	movwf	??_stoa^0,c
 22617  00CC' 5000'              	movf	(stoa@w+1)^0,w,c
 22618  00CE' 0A80               	xorlw	128
 22619  00D0' 5800'              	subwfb	??_stoa^0,w,c
 22620  00D2' A0D8               	btfss	status,0,c
 22621  00D4' EF00' F000'        	goto	u11181
 22622  00D8' EF00' F000'        	goto	u11180
 22623  00DC'                    u11181:
 22624  00DC' EF00' F000'        	goto	l9263
 22625  00E0'                    u11180:
 22626  00E0'                    l9269:
 22627                           
 22628                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 22629  00E0' 0E00               	movlw	0
 22630  00E2' 6E00'              	movwf	(stoa@i+1)^0,c
 22631  00E4' 0E00               	movlw	0
 22632  00E6' 6E00'              	movwf	stoa@i^0,c
 22633                           
 22634                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 22635  00E8' EF00' F000'        	goto	l9277
 22636  00EC'                    l9271:
 22637                           
 22638                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 22639  00EC' C022' FFF6         	movff	stoa@cp,tblptrl
 22640  00F0' C023' FFF7         	movff	stoa@cp+1,tblptrh
 22641  00F4' 6AF8               	clrf	tblptru,c
 22642  00F6' 0EFF'              	movlw	(high __ramtop+-1)
 22643  00F8' 64F7               	cpfsgt	tblptrh,c
 22644  00FA' D003               	bra	u11197
 22645  00FC' 0008               	tblrd		*
 22646  00FE' 50F5               	movf	tablat,w,c
 22647  0100' D005               	bra	u11190
 22648  0102'                    u11197:
 22649  0102' CFF6 FFE9          	movff	tblptrl,fsr0l
 22650  0106' CFF7 FFEA          	movff	tblptrh,fsr0h
 22651  010A' 50EF               	movf	indf0,w,c
 22652  010C'                    u11190:
 22653  010C' 6E00'              	movwf	??_stoa^0,c
 22654  010E' 5000'              	movf	??_stoa^0,w,c
 22655  0110' 6E00'              	movwf	fputc@c^0,c
 22656  0112' 6A00'              	clrf	(fputc@c+1)^0,c
 22657  0114' C012' F010'        	movff	stoa@fp,fputc@fp
 22658  0118' C013' F011'        	movff	stoa@fp+1,fputc@fp+1
 22659  011C' EC00' F000'        	call	_fputc	;wreg free
 22660  0120'                    
 22661                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 22662  0120' 4A00'              	infsnz	stoa@cp^0,f,c
 22663  0122' 2A00'              	incf	(stoa@cp+1)^0,f,c
 22664  0124'                    
 22665                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 22666  0124' 4A00'              	infsnz	stoa@i^0,f,c
 22667  0126' 2A00'              	incf	(stoa@i+1)^0,f,c
 22668  0128'                    l9277:
 22669                           
 22670                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 22671  0128' 5000'              	movf	stoa@p^0,w,c
 22672  012A' 5C00'              	subwf	stoa@i^0,w,c
 22673  012C' 5000'              	movf	(stoa@i+1)^0,w,c
 22674  012E' 0A80               	xorlw	128
 22675  0130' 6E00'              	movwf	??_stoa^0,c
 22676  0132' 5000'              	movf	(stoa@p+1)^0,w,c
 22677  0134' 0A80               	xorlw	128
 22678  0136' 5800'              	subwfb	??_stoa^0,w,c
 22679  0138' A0D8               	btfss	status,0,c
 22680  013A' EF00' F000'        	goto	u11201
 22681  013E' EF00' F000'        	goto	u11200
 22682  0142'                    u11201:
 22683  0142' EF00' F000'        	goto	l9271
 22684  0146'                    u11200:
 22685  0146'                    
 22686                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 22687  0146' A000'              	btfss	_flags^0,0,c
 22688  0148' EF00' F000'        	goto	u11211
 22689  014C' EF00' F000'        	goto	u11210
 22690  0150'                    u11211:
 22691  0150' EF00' F000'        	goto	l1315
 22692  0154'                    u11210:
 22693  0154' EF00' F000'        	goto	l9285
 22694  0158'                    l9281:
 22695                           
 22696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 22697  0158' 0E00               	movlw	0
 22698  015A' 6E00'              	movwf	(fputc@c+1)^0,c
 22699  015C' 0E20               	movlw	32
 22700  015E' 6E00'              	movwf	fputc@c^0,c
 22701  0160' C012' F010'        	movff	stoa@fp,fputc@fp
 22702  0164' C013' F011'        	movff	stoa@fp+1,fputc@fp+1
 22703  0168' EC00' F000'        	call	_fputc	;wreg free
 22704  016C'                    
 22705                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 22706  016C' 4A00'              	infsnz	stoa@l^0,f,c
 22707  016E' 2A00'              	incf	(stoa@l+1)^0,f,c
 22708  0170'                    l9285:
 22709                           
 22710                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 22711  0170' 5000'              	movf	stoa@w^0,w,c
 22712  0172' 5C00'              	subwf	stoa@l^0,w,c
 22713  0174' 5000'              	movf	(stoa@l+1)^0,w,c
 22714  0176' 0A80               	xorlw	128
 22715  0178' 6E00'              	movwf	??_stoa^0,c
 22716  017A' 5000'              	movf	(stoa@w+1)^0,w,c
 22717  017C' 0A80               	xorlw	128
 22718  017E' 5800'              	subwfb	??_stoa^0,w,c
 22719  0180' A0D8               	btfss	status,0,c
 22720  0182' EF00' F000'        	goto	u11221
 22721  0186' EF00' F000'        	goto	u11220
 22722  018A'                    u11221:
 22723  018A' EF00' F000'        	goto	l9281
 22724  018E'                    u11220:
 22725  018E'                    l1315:
 22726                           
 22727                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 22728  018E' C026' F012'        	movff	stoa@l,?_stoa
 22729  0192' C027' F013'        	movff	stoa@l+1,?_stoa+1
 22730  0196' 0012               	return		;funcret
 22731  0198'                    __end_of_stoa:
 22732                           	opt callstack 0
 22733                           
 22734 ;; *************** function _dtoa *****************
 22735 ;; Defined at:
 22736 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 22737 ;; Parameters:    Size  Location     Type
 22738 ;;  fp              2   39[COMRAM] PTR struct _IO_FILE
 22739 ;;		 -> NULL(0), 
 22740 ;;  d               8   41[COMRAM] long long 
 22741 ;; Auto vars:     Size  Location     Type
 22742 ;;  n               8   65[COMRAM] long long 
 22743 ;;  i               2   73[COMRAM] int 
 22744 ;;  s               2   63[COMRAM] int 
 22745 ;;  w               2   61[COMRAM] int 
 22746 ;;  p               2   59[COMRAM] int 
 22747 ;; Return value:  Size  Location     Type
 22748 ;;                  2   39[COMRAM] int 
 22749 ;; Registers used:
 22750 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22751 ;; Tracked objects:
 22752 ;;		On entry : 0/0
 22753 ;;		On exit  : 0/0
 22754 ;;		Unchanged: 0/0
 22755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22756 ;;      Params:        10       0       0       0       0       0       0
 22757 ;;      Locals:        18       0       0       0       0       0       0
 22758 ;;      Temps:          8       0       0       0       0       0       0
 22759 ;;      Totals:        36       0       0       0       0       0       0
 22760 ;;Total ram usage:       36 bytes
 22761 ;; Hardware stack levels used:    1
 22762 ;; Hardware stack levels required when called:    6
 22763 ;; This function calls:
 22764 ;;		___aodiv
 22765 ;;		___aomod
 22766 ;;		_abs
 22767 ;;		_pad
 22768 ;; This function is called by:
 22769 ;;		_vfpfcnvrt
 22770 ;; This function uses a non-reentrant model
 22771 ;;
 22772                           
 22773                           	psect	text84
 22774  0000'                    __ptext84:
 22775                           	opt callstack 0
 22776  0000'                    _dtoa:
 22777                           	opt callstack 19
 22778  0000'                    
 22779                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 22780  0000' C029' F041'        	movff	dtoa@d,dtoa@n
 22781  0004' C02A' F042'        	movff	dtoa@d+1,dtoa@n+1
 22782  0008' C02B' F043'        	movff	dtoa@d+2,dtoa@n+2
 22783  000C' C02C' F044'        	movff	dtoa@d+3,dtoa@n+3
 22784  0010' C02D' F045'        	movff	dtoa@d+4,dtoa@n+4
 22785  0014' C02E' F046'        	movff	dtoa@d+5,dtoa@n+5
 22786  0018' C02F' F047'        	movff	dtoa@d+6,dtoa@n+6
 22787  001C' C030' F048'        	movff	dtoa@d+7,dtoa@n+7
 22788  0020'                    
 22789                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 22790  0020' BE00'              	btfsc	(dtoa@n+7)^0,7,c
 22791  0022' EF00' F000'        	goto	u10981
 22792  0026' EF00' F000'        	goto	u10980
 22793  002A'                    u10981:
 22794  002A' 0E01               	movlw	1
 22795  002C' EF00' F000'        	goto	u10990
 22796  0030'                    u10980:
 22797  0030' 0E00               	movlw	0
 22798  0032'                    u10990:
 22799  0032' 6E00'              	movwf	dtoa@s^0,c
 22800  0034' 6A00'              	clrf	(dtoa@s+1)^0,c
 22801                           
 22802                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 22803  0036' 5000'              	movf	dtoa@s^0,w,c
 22804  0038' 1000'              	iorwf	(dtoa@s+1)^0,w,c
 22805  003A' B4D8               	btfsc	status,2,c
 22806  003C' EF00' F000'        	goto	u11001
 22807  0040' EF00' F000'        	goto	u11000
 22808  0044'                    u11001:
 22809  0044' EF00' F000'        	goto	l9189
 22810  0048'                    u11000:
 22811  0048'                    
 22812                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 22813  0048' 1E00'              	comf	(dtoa@n+7)^0,f,c
 22814  004A' 1E00'              	comf	(dtoa@n+6)^0,f,c
 22815  004C' 1E00'              	comf	(dtoa@n+5)^0,f,c
 22816  004E' 1E00'              	comf	(dtoa@n+4)^0,f,c
 22817  0050' 1E00'              	comf	(dtoa@n+3)^0,f,c
 22818  0052' 1E00'              	comf	(dtoa@n+2)^0,f,c
 22819  0054' 1E00'              	comf	(dtoa@n+1)^0,f,c
 22820  0056' 6C00'              	negf	dtoa@n^0,c
 22821  0058' 0E00               	movlw	0
 22822  005A' 2200'              	addwfc	(dtoa@n+1)^0,f,c
 22823  005C' 2200'              	addwfc	(dtoa@n+2)^0,f,c
 22824  005E' 2200'              	addwfc	(dtoa@n+3)^0,f,c
 22825  0060' 2200'              	addwfc	(dtoa@n+4)^0,f,c
 22826  0062' 2200'              	addwfc	(dtoa@n+5)^0,f,c
 22827  0064' 2200'              	addwfc	(dtoa@n+6)^0,f,c
 22828  0066' 2200'              	addwfc	(dtoa@n+7)^0,f,c
 22829  0068'                    l9189:
 22830                           
 22831                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 22832  0068' BE00'              	btfsc	(_prec+1)^0,7,c
 22833  006A' EF00' F000'        	goto	u11011
 22834  006E' EF00' F000'        	goto	u11010
 22835  0072'                    u11011:
 22836  0072' EF00' F000'        	goto	l9193
 22837  0076'                    u11010:
 22838  0076'                    
 22839                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 22840  0076' 9200'              	bcf	_flags^0,1,c
 22841  0078'                    l9193:
 22842                           
 22843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 22844  0078' BE00'              	btfsc	(_prec+1)^0,7,c
 22845  007A' EF00' F000'        	goto	u11020
 22846  007E' 5000'              	movf	(_prec+1)^0,w,c
 22847  0080' E106               	bnz	u11021
 22848  0082' 0400'              	decf	_prec^0,w,c
 22849  0084' B0D8               	btfsc	status,0,c
 22850  0086' EF00' F000'        	goto	u11021
 22851  008A' EF00' F000'        	goto	u11020
 22852  008E'                    u11021:
 22853  008E' EF00' F000'        	goto	l1276
 22854  0092'                    u11020:
 22855  0092' 0E00               	movlw	0
 22856  0094' 6E00'              	movwf	(dtoa@p+1)^0,c
 22857  0096' 0E01               	movlw	1
 22858  0098' 6E00'              	movwf	dtoa@p^0,c
 22859  009A' EF00' F000'        	goto	l1278
 22860  009E'                    l1276:
 22861  009E' C000' F03B'        	movff	_prec,dtoa@p
 22862  00A2' C001' F03C'        	movff	_prec+1,dtoa@p+1
 22863  00A6'                    l1278:
 22864                           
 22865                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 22866  00A6' C000' F03D'        	movff	_width,dtoa@w
 22867  00AA' C001' F03E'        	movff	_width+1,dtoa@w+1
 22868  00AE'                    
 22869                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 22870  00AE' 5000'              	movf	dtoa@s^0,w,c
 22871  00B0' 1000'              	iorwf	(dtoa@s+1)^0,w,c
 22872  00B2' A4D8               	btfss	status,2,c
 22873  00B4' EF00' F000'        	goto	u11031
 22874  00B8' EF00' F000'        	goto	u11030
 22875  00BC'                    u11031:
 22876  00BC' EF00' F000'        	goto	l9201
 22877  00C0'                    u11030:
 22878  00C0' A400'              	btfss	_flags^0,2,c
 22879  00C2' EF00' F000'        	goto	u11041
 22880  00C6' EF00' F000'        	goto	u11040
 22881  00CA'                    u11041:
 22882  00CA' EF00' F000'        	goto	l9203
 22883  00CE'                    u11040:
 22884  00CE'                    l9201:
 22885                           
 22886                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 22887  00CE' 0600'              	decf	dtoa@w^0,f,c
 22888  00D0' A0D8               	btfss	status,0,c
 22889  00D2' 0600'              	decf	(dtoa@w+1)^0,f,c
 22890  00D4'                    l9203:
 22891                           
 22892                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 22893  00D4' 0E00               	movlw	0
 22894  00D6' 6E00'              	movwf	(dtoa@i+1)^0,c
 22895  00D8' 0E1F               	movlw	31
 22896  00DA' 6E00'              	movwf	dtoa@i^0,c
 22897  00DC'                    
 22898                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 22899  00DC' 0E00               	movlw	0
 22900  00DE' 0102               	movlb	2	; () banked
 22901  00E0' 6F00'              	movwf	(_dbuf+31)& (0+255),b
 22902                           
 22903                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 22904  00E2' EF00' F000'        	goto	l9217
 22905  00E6'                    l9207:
 22906                           
 22907                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 22908  00E6' 0600'              	decf	dtoa@i^0,f,c
 22909  00E8' A0D8               	btfss	status,0,c
 22910  00EA' 0600'              	decf	(dtoa@i+1)^0,f,c
 22911  00EC'                    
 22912                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 22913  00EC' 0E00'              	movlw	low _dbuf
 22914  00EE' 2400'              	addwf	dtoa@i^0,w,c
 22915  00F0' 6ED9               	movwf	fsr2l,c
 22916  00F2' 0E00'              	movlw	high _dbuf
 22917  00F4' 2000'              	addwfc	(dtoa@i+1)^0,w,c
 22918  00F6' 6EDA               	movwf	fsr2h,c
 22919  00F8' C041' F00D'        	movff	dtoa@n,___aomod@dividend
 22920  00FC' C042' F00E'        	movff	dtoa@n+1,___aomod@dividend+1
 22921  0100' C043' F00F'        	movff	dtoa@n+2,___aomod@dividend+2
 22922  0104' C044' F010'        	movff	dtoa@n+3,___aomod@dividend+3
 22923  0108' C045' F011'        	movff	dtoa@n+4,___aomod@dividend+4
 22924  010C' C046' F012'        	movff	dtoa@n+5,___aomod@dividend+5
 22925  0110' C047' F013'        	movff	dtoa@n+6,___aomod@dividend+6
 22926  0114' C048' F014'        	movff	dtoa@n+7,___aomod@dividend+7
 22927  0118' 0E0A               	movlw	10
 22928  011A' 6E00'              	movwf	___aomod@divisor^0,c
 22929  011C' 0E00               	movlw	0
 22930  011E' 6E00'              	movwf	(___aomod@divisor+1)^0,c
 22931  0120' 0E00               	movlw	0
 22932  0122' 6E00'              	movwf	(___aomod@divisor+2)^0,c
 22933  0124' 0E00               	movlw	0
 22934  0126' 6E00'              	movwf	(___aomod@divisor+3)^0,c
 22935  0128' 0E00               	movlw	0
 22936  012A' 6E00'              	movwf	(___aomod@divisor+4)^0,c
 22937  012C' 0E00               	movlw	0
 22938  012E' 6E00'              	movwf	(___aomod@divisor+5)^0,c
 22939  0130' 0E00               	movlw	0
 22940  0132' 6E00'              	movwf	(___aomod@divisor+6)^0,c
 22941  0134' 0E00               	movlw	0
 22942  0136' 6E00'              	movwf	(___aomod@divisor+7)^0,c
 22943  0138' EC00' F000'        	call	___aomod	;wreg free
 22944  013C' C00D' F031'        	movff	?___aomod,??_dtoa
 22945  0140' C00E' F032'        	movff	?___aomod+1,??_dtoa+1
 22946  0144' C00F' F033'        	movff	?___aomod+2,??_dtoa+2
 22947  0148' C010' F034'        	movff	?___aomod+3,??_dtoa+3
 22948  014C' C011' F035'        	movff	?___aomod+4,??_dtoa+4
 22949  0150' C012' F036'        	movff	?___aomod+5,??_dtoa+5
 22950  0154' C013' F037'        	movff	?___aomod+6,??_dtoa+6
 22951  0158' C014' F038'        	movff	?___aomod+7,??_dtoa+7
 22952  015C' C031' F01F'        	movff	??_dtoa,abs@a
 22953  0160' C033' F020'        	movff	??_dtoa+2,abs@a+1
 22954  0164' EC00' F000'        	call	_abs	;wreg free
 22955  0168' 5000'              	movf	?_abs^0,w,c
 22956  016A' 0F30               	addlw	48
 22957  016C' 6EDF               	movwf	indf2,c
 22958  016E'                    
 22959                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 22960  016E' 0600'              	decf	dtoa@p^0,f,c
 22961  0170' A0D8               	btfss	status,0,c
 22962  0172' 0600'              	decf	(dtoa@p+1)^0,f,c
 22963  0174'                    
 22964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 22965  0174' 0600'              	decf	dtoa@w^0,f,c
 22966  0176' A0D8               	btfss	status,0,c
 22967  0178' 0600'              	decf	(dtoa@w+1)^0,f,c
 22968  017A'                    
 22969                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 22970  017A' C041' F00D'        	movff	dtoa@n,___aodiv@dividend
 22971  017E' C042' F00E'        	movff	dtoa@n+1,___aodiv@dividend+1
 22972  0182' C043' F00F'        	movff	dtoa@n+2,___aodiv@dividend+2
 22973  0186' C044' F010'        	movff	dtoa@n+3,___aodiv@dividend+3
 22974  018A' C045' F011'        	movff	dtoa@n+4,___aodiv@dividend+4
 22975  018E' C046' F012'        	movff	dtoa@n+5,___aodiv@dividend+5
 22976  0192' C047' F013'        	movff	dtoa@n+6,___aodiv@dividend+6
 22977  0196' C048' F014'        	movff	dtoa@n+7,___aodiv@dividend+7
 22978  019A' 0E0A               	movlw	10
 22979  019C' 6E00'              	movwf	___aodiv@divisor^0,c
 22980  019E' 0E00               	movlw	0
 22981  01A0' 6E00'              	movwf	(___aodiv@divisor+1)^0,c
 22982  01A2' 0E00               	movlw	0
 22983  01A4' 6E00'              	movwf	(___aodiv@divisor+2)^0,c
 22984  01A6' 0E00               	movlw	0
 22985  01A8' 6E00'              	movwf	(___aodiv@divisor+3)^0,c
 22986  01AA' 0E00               	movlw	0
 22987  01AC' 6E00'              	movwf	(___aodiv@divisor+4)^0,c
 22988  01AE' 0E00               	movlw	0
 22989  01B0' 6E00'              	movwf	(___aodiv@divisor+5)^0,c
 22990  01B2' 0E00               	movlw	0
 22991  01B4' 6E00'              	movwf	(___aodiv@divisor+6)^0,c
 22992  01B6' 0E00               	movlw	0
 22993  01B8' 6E00'              	movwf	(___aodiv@divisor+7)^0,c
 22994  01BA' EC00' F000'        	call	___aodiv	;wreg free
 22995  01BE' C00D' F041'        	movff	?___aodiv,dtoa@n
 22996  01C2' C00E' F042'        	movff	?___aodiv+1,dtoa@n+1
 22997  01C6' C00F' F043'        	movff	?___aodiv+2,dtoa@n+2
 22998  01CA' C010' F044'        	movff	?___aodiv+3,dtoa@n+3
 22999  01CE' C011' F045'        	movff	?___aodiv+4,dtoa@n+4
 23000  01D2' C012' F046'        	movff	?___aodiv+5,dtoa@n+5
 23001  01D6' C013' F047'        	movff	?___aodiv+6,dtoa@n+6
 23002  01DA' C014' F048'        	movff	?___aodiv+7,dtoa@n+7
 23003  01DE'                    l9217:
 23004                           
 23005                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 23006  01DE' BE00'              	btfsc	(dtoa@i+1)^0,7,c
 23007  01E0' EF00' F000'        	goto	u11051
 23008  01E4' 5000'              	movf	(dtoa@i+1)^0,w,c
 23009  01E6' E108               	bnz	u11050
 23010  01E8' 0400'              	decf	dtoa@i^0,w,c
 23011  01EA' A0D8               	btfss	status,0,c
 23012  01EC' EF00' F000'        	goto	u11051
 23013  01F0' EF00' F000'        	goto	u11050
 23014  01F4'                    u11051:
 23015  01F4' EF00' F000'        	goto	l9227
 23016  01F8'                    u11050:
 23017  01F8' 5000'              	movf	dtoa@n^0,w,c
 23018  01FA' 1000'              	iorwf	(dtoa@n+1)^0,w,c
 23019  01FC' 1000'              	iorwf	(dtoa@n+2)^0,w,c
 23020  01FE' 1000'              	iorwf	(dtoa@n+3)^0,w,c
 23021  0200' 1000'              	iorwf	(dtoa@n+4)^0,w,c
 23022  0202' 1000'              	iorwf	(dtoa@n+5)^0,w,c
 23023  0204' 1000'              	iorwf	(dtoa@n+6)^0,w,c
 23024  0206' 1000'              	iorwf	(dtoa@n+7)^0,w,c
 23025  0208' A4D8               	btfss	status,2,c
 23026  020A' EF00' F000'        	goto	u11061
 23027  020E' EF00' F000'        	goto	u11060
 23028  0212'                    u11061:
 23029  0212' EF00' F000'        	goto	l9207
 23030  0216'                    u11060:
 23031  0216' BE00'              	btfsc	(dtoa@p+1)^0,7,c
 23032  0218' EF00' F000'        	goto	u11070
 23033  021C' 5000'              	movf	(dtoa@p+1)^0,w,c
 23034  021E' E106               	bnz	u11071
 23035  0220' 0400'              	decf	dtoa@p^0,w,c
 23036  0222' B0D8               	btfsc	status,0,c
 23037  0224' EF00' F000'        	goto	u11071
 23038  0228' EF00' F000'        	goto	u11070
 23039  022C'                    u11071:
 23040  022C' EF00' F000'        	goto	l9207
 23041  0230'                    u11070:
 23042  0230' BE00'              	btfsc	(dtoa@w+1)^0,7,c
 23043  0232' EF00' F000'        	goto	u11081
 23044  0236' 5000'              	movf	(dtoa@w+1)^0,w,c
 23045  0238' E108               	bnz	u11080
 23046  023A' 0400'              	decf	dtoa@w^0,w,c
 23047  023C' A0D8               	btfss	status,0,c
 23048  023E' EF00' F000'        	goto	u11081
 23049  0242' EF00' F000'        	goto	u11080
 23050  0246'                    u11081:
 23051  0246' EF00' F000'        	goto	l9227
 23052  024A'                    u11080:
 23053  024A' B200'              	btfsc	_flags^0,1,c
 23054  024C' EF00' F000'        	goto	u11091
 23055  0250' EF00' F000'        	goto	u11090
 23056  0254'                    u11091:
 23057  0254' EF00' F000'        	goto	l9207
 23058  0258'                    u11090:
 23059  0258'                    l9227:
 23060                           
 23061                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 23062  0258' 5000'              	movf	dtoa@s^0,w,c
 23063  025A' 1000'              	iorwf	(dtoa@s+1)^0,w,c
 23064  025C' A4D8               	btfss	status,2,c
 23065  025E' EF00' F000'        	goto	u11101
 23066  0262' EF00' F000'        	goto	u11100
 23067  0266'                    u11101:
 23068  0266' EF00' F000'        	goto	l9231
 23069  026A'                    u11100:
 23070  026A' A400'              	btfss	_flags^0,2,c
 23071  026C' EF00' F000'        	goto	u11111
 23072  0270' EF00' F000'        	goto	u11110
 23073  0274'                    u11111:
 23074  0274' EF00' F000'        	goto	l9241
 23075  0278'                    u11110:
 23076  0278'                    l9231:
 23077                           
 23078                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 23079  0278' 0600'              	decf	dtoa@i^0,f,c
 23080  027A' A0D8               	btfss	status,0,c
 23081  027C' 0600'              	decf	(dtoa@i+1)^0,f,c
 23082  027E'                    
 23083                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 23084  027E' 5000'              	movf	dtoa@s^0,w,c
 23085  0280' 1000'              	iorwf	(dtoa@s+1)^0,w,c
 23086  0282' A4D8               	btfss	status,2,c
 23087  0284' EF00' F000'        	goto	u11121
 23088  0288' EF00' F000'        	goto	u11120
 23089  028C'                    u11121:
 23090  028C' EF00' F000'        	goto	l9237
 23091  0290'                    u11120:
 23092  0290' 0E00               	movlw	0
 23093  0292' 6E00'              	movwf	(_dtoa$2913+1)^0,c
 23094  0294' 0E2B               	movlw	43
 23095  0296' 6E00'              	movwf	_dtoa$2913^0,c
 23096  0298' EF00' F000'        	goto	l9239
 23097  029C'                    l9237:
 23098  029C' 0E00               	movlw	0
 23099  029E' 6E00'              	movwf	(_dtoa$2913+1)^0,c
 23100  02A0' 0E2D               	movlw	45
 23101  02A2' 6E00'              	movwf	_dtoa$2913^0,c
 23102  02A4'                    l9239:
 23103  02A4' 0E00'              	movlw	low _dbuf
 23104  02A6' 2400'              	addwf	dtoa@i^0,w,c
 23105  02A8' 6ED9               	movwf	fsr2l,c
 23106  02AA' 0E00'              	movlw	high _dbuf
 23107  02AC' 2000'              	addwfc	(dtoa@i+1)^0,w,c
 23108  02AE' 6EDA               	movwf	fsr2h,c
 23109  02B0' C039' FFDF         	movff	_dtoa$2913,indf2
 23110  02B4'                    l9241:
 23111                           
 23112                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 23113  02B4' C027' F019'        	movff	dtoa@fp,pad@fp
 23114  02B8' C028' F01A'        	movff	dtoa@fp+1,pad@fp+1
 23115  02BC' 0E00'              	movlw	low _dbuf
 23116  02BE' 2400'              	addwf	dtoa@i^0,w,c
 23117  02C0' 6E00'              	movwf	pad@buf^0,c
 23118  02C2' 0E00'              	movlw	high _dbuf
 23119  02C4' 2000'              	addwfc	(dtoa@i+1)^0,w,c
 23120  02C6' 6E00'              	movwf	(pad@buf+1)^0,c
 23121  02C8' C03D' F01D'        	movff	dtoa@w,pad@p
 23122  02CC' C03E' F01E'        	movff	dtoa@w+1,pad@p+1
 23123  02D0' EC00' F000'        	call	_pad	;wreg free
 23124  02D4' C019' F027'        	movff	?_pad,?_dtoa
 23125  02D8' C01A' F028'        	movff	?_pad+1,?_dtoa+1
 23126  02DC' 0012               	return		;funcret
 23127  02DE'                    __end_of_dtoa:
 23128                           	opt callstack 0
 23129                           
 23130 ;; *************** function _pad *****************
 23131 ;; Defined at:
 23132 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 23133 ;; Parameters:    Size  Location     Type
 23134 ;;  fp              2   25[COMRAM] PTR struct _IO_FILE
 23135 ;;		 -> NULL(0), 
 23136 ;;  buf             2   27[COMRAM] PTR unsigned char 
 23137 ;;		 -> dbuf(32), 
 23138 ;;  p               2   29[COMRAM] int 
 23139 ;; Auto vars:     Size  Location     Type
 23140 ;;  w               2   34[COMRAM] int 
 23141 ;;  i               2   32[COMRAM] int 
 23142 ;; Return value:  Size  Location     Type
 23143 ;;                  2   25[COMRAM] int 
 23144 ;; Registers used:
 23145 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23146 ;; Tracked objects:
 23147 ;;		On entry : 0/0
 23148 ;;		On exit  : 0/0
 23149 ;;		Unchanged: 0/0
 23150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23151 ;;      Params:         6       0       0       0       0       0       0
 23152 ;;      Locals:         4       0       0       0       0       0       0
 23153 ;;      Temps:          1       0       0       0       0       0       0
 23154 ;;      Totals:        11       0       0       0       0       0       0
 23155 ;;Total ram usage:       11 bytes
 23156 ;; Hardware stack levels used:    1
 23157 ;; Hardware stack levels required when called:    5
 23158 ;; This function calls:
 23159 ;;		_fputc
 23160 ;;		_fputs
 23161 ;;		_strlen
 23162 ;; This function is called by:
 23163 ;;		_dtoa
 23164 ;;		_xtoa
 23165 ;; This function uses a non-reentrant model
 23166 ;;
 23167                           
 23168                           	psect	text85
 23169  0000'                    __ptext85:
 23170                           	opt callstack 0
 23171  0000'                    _pad:
 23172                           	opt callstack 19
 23173  0000'                    
 23174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 23175  0000' A000'              	btfss	_flags^0,0,c
 23176  0002' EF00' F000'        	goto	u10551
 23177  0006' EF00' F000'        	goto	u10550
 23178  000A'                    u10551:
 23179  000A' EF00' F000'        	goto	l8995
 23180  000E'                    u10550:
 23181  000E'                    
 23182                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 23183  000E' C01B' F012'        	movff	pad@buf,fputs@s
 23184  0012' C01C' F013'        	movff	pad@buf+1,fputs@s+1
 23185  0016' C019' F014'        	movff	pad@fp,fputs@fp
 23186  001A' C01A' F015'        	movff	pad@fp+1,fputs@fp+1
 23187  001E' EC00' F000'        	call	_fputs	;wreg free
 23188  0022'                    l8995:
 23189                           
 23190                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 23191  0022' BE00'              	btfsc	(pad@p+1)^0,7,c
 23192  0024' EF00' F000'        	goto	u10561
 23193  0028' EF00' F000'        	goto	u10560
 23194  002C'                    u10561:
 23195  002C' EF00' F000'        	goto	l8999
 23196  0030'                    u10560:
 23197  0030' C01D' F022'        	movff	pad@p,pad@w
 23198  0034' C01E' F023'        	movff	pad@p+1,pad@w+1
 23199  0038' EF00' F000'        	goto	l1265
 23200  003C'                    l8999:
 23201  003C' 0E00               	movlw	0
 23202  003E' 6E00'              	movwf	(pad@w+1)^0,c
 23203  0040' 0E00               	movlw	0
 23204  0042' 6E00'              	movwf	pad@w^0,c
 23205  0044'                    l1265:
 23206                           
 23207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 23208  0044' 0E00               	movlw	0
 23209  0046' 6E00'              	movwf	(pad@i+1)^0,c
 23210  0048' 0E00               	movlw	0
 23211  004A' 6E00'              	movwf	pad@i^0,c
 23212                           
 23213                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 23214  004C' EF00' F000'        	goto	l9005
 23215  0050'                    l9001:
 23216                           
 23217                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 23218  0050' 0E00               	movlw	0
 23219  0052' 6E00'              	movwf	(fputc@c+1)^0,c
 23220  0054' 0E20               	movlw	32
 23221  0056' 6E00'              	movwf	fputc@c^0,c
 23222  0058' C019' F010'        	movff	pad@fp,fputc@fp
 23223  005C' C01A' F011'        	movff	pad@fp+1,fputc@fp+1
 23224  0060' EC00' F000'        	call	_fputc	;wreg free
 23225  0064'                    
 23226                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 23227  0064' 4A00'              	infsnz	pad@i^0,f,c
 23228  0066' 2A00'              	incf	(pad@i+1)^0,f,c
 23229  0068'                    l9005:
 23230                           
 23231                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 23232  0068' 5000'              	movf	pad@w^0,w,c
 23233  006A' 5C00'              	subwf	pad@i^0,w,c
 23234  006C' 5000'              	movf	(pad@i+1)^0,w,c
 23235  006E' 0A80               	xorlw	128
 23236  0070' 6E00'              	movwf	??_pad^0,c
 23237  0072' 5000'              	movf	(pad@w+1)^0,w,c
 23238  0074' 0A80               	xorlw	128
 23239  0076' 5800'              	subwfb	??_pad^0,w,c
 23240  0078' A0D8               	btfss	status,0,c
 23241  007A' EF00' F000'        	goto	u10571
 23242  007E' EF00' F000'        	goto	u10570
 23243  0082'                    u10571:
 23244  0082' EF00' F000'        	goto	l9001
 23245  0086'                    u10570:
 23246  0086'                    
 23247                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 23248  0086' B000'              	btfsc	_flags^0,0,c
 23249  0088' EF00' F000'        	goto	u10581
 23250  008C' EF00' F000'        	goto	u10580
 23251  0090'                    u10581:
 23252  0090' EF00' F000'        	goto	l9009
 23253  0094'                    u10580:
 23254  0094'                    
 23255                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 23256  0094' C01B' F012'        	movff	pad@buf,fputs@s
 23257  0098' C01C' F013'        	movff	pad@buf+1,fputs@s+1
 23258  009C' C019' F014'        	movff	pad@fp,fputs@fp
 23259  00A0' C01A' F015'        	movff	pad@fp+1,fputs@fp+1
 23260  00A4' EC00' F000'        	call	_fputs	;wreg free
 23261  00A8'                    l9009:
 23262                           
 23263                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 23264  00A8' C01B' F00D'        	movff	pad@buf,strlen@s
 23265  00AC' C01C' F00E'        	movff	pad@buf+1,strlen@s+1
 23266  00B0' EC00' F000'        	call	_strlen	;wreg free
 23267  00B4' 5000'              	movf	pad@w^0,w,c
 23268  00B6' 2400'              	addwf	?_strlen^0,w,c
 23269  00B8' 6E00'              	movwf	?_pad^0,c
 23270  00BA' 5000'              	movf	(pad@w+1)^0,w,c
 23271  00BC' 2000'              	addwfc	(?_strlen+1)^0,w,c
 23272  00BE' 6E00'              	movwf	(?_pad+1)^0,c
 23273  00C0' 0012               	return		;funcret
 23274  00C2'                    __end_of_pad:
 23275                           	opt callstack 0
 23276                           
 23277 ;; *************** function _strlen *****************
 23278 ;; Defined at:
 23279 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 23280 ;; Parameters:    Size  Location     Type
 23281 ;;  s               2   13[COMRAM] PTR const unsigned char 
 23282 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), CalculateGridSquare@grid(7), 
 23283 ;;		 -> gpsbuf(85), STR_89(14), STR_88(7), STR_87(6), 
 23284 ;;		 -> STR_86(12), STR_85(17), itoa@buffer(12), STR_84(5), 
 23285 ;;		 -> STR_83(5), STR_82(7), STR_81(7), STR_80(8), 
 23286 ;;		 -> STR_79(5), GPS_lon(15), GPS_lat(15), STR_78(4), 
 23287 ;;		 -> STR_77(4), STR_76(6), STR_75(5), STR_74(4), 
 23288 ;;		 -> STR_73(4), STR_72(10), GPS_time(9), STR_71(17), 
 23289 ;;		 -> STR_70(17), STR_69(17), STR_68(7), STR_67(7), 
 23290 ;;		 -> STR_66(17), STR_65(17), STR_64(17), STR_63(7), 
 23291 ;;		 -> STR_62(7), STR_61(17), STR_60(17), STR_59(17), 
 23292 ;;		 -> STR_58(7), STR_57(7), STR_56(6), STR_55(6), 
 23293 ;;		 -> STR_54(17), STR_53(5), STR_52(5), STR_51(5), 
 23294 ;;		 -> STR_50(5), STR_49(3), STR_48(17), STR_47(17), 
 23295 ;;		 -> STR_46(17), STR_45(17), STR_44(17), STR_43(17), 
 23296 ;;		 -> STR_42(4), STR_41(17), ssd1306_setpos@x(1), STR_39(17), 
 23297 ;;		 -> STR_38(17), 
 23298 ;; Auto vars:     Size  Location     Type
 23299 ;;  a               2   15[COMRAM] PTR const unsigned char 
 23300 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), CalculateGridSquare@grid(7), 
 23301 ;;		 -> gpsbuf(85), STR_89(14), STR_88(7), STR_87(6), 
 23302 ;;		 -> STR_86(12), STR_85(17), itoa@buffer(12), STR_84(5), 
 23303 ;;		 -> STR_83(5), STR_82(7), STR_81(7), STR_80(8), 
 23304 ;;		 -> STR_79(5), GPS_lon(15), GPS_lat(15), STR_78(4), 
 23305 ;;		 -> STR_77(4), STR_76(6), STR_75(5), STR_74(4), 
 23306 ;;		 -> STR_73(4), STR_72(10), GPS_time(9), STR_71(17), 
 23307 ;;		 -> STR_70(17), STR_69(17), STR_68(7), STR_67(7), 
 23308 ;;		 -> STR_66(17), STR_65(17), STR_64(17), STR_63(7), 
 23309 ;;		 -> STR_62(7), STR_61(17), STR_60(17), STR_59(17), 
 23310 ;;		 -> STR_58(7), STR_57(7), STR_56(6), STR_55(6), 
 23311 ;;		 -> STR_54(17), STR_53(5), STR_52(5), STR_51(5), 
 23312 ;;		 -> STR_50(5), STR_49(3), STR_48(17), STR_47(17), 
 23313 ;;		 -> STR_46(17), STR_45(17), STR_44(17), STR_43(17), 
 23314 ;;		 -> STR_42(4), STR_41(17), ssd1306_setpos@x(1), STR_39(17), 
 23315 ;;		 -> STR_38(17), 
 23316 ;; Return value:  Size  Location     Type
 23317 ;;                  2   13[COMRAM] unsigned int 
 23318 ;; Registers used:
 23319 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 23320 ;; Tracked objects:
 23321 ;;		On entry : 0/0
 23322 ;;		On exit  : 0/0
 23323 ;;		Unchanged: 0/0
 23324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23325 ;;      Params:         2       0       0       0       0       0       0
 23326 ;;      Locals:         2       0       0       0       0       0       0
 23327 ;;      Temps:          0       0       0       0       0       0       0
 23328 ;;      Totals:         4       0       0       0       0       0       0
 23329 ;;Total ram usage:        4 bytes
 23330 ;; Hardware stack levels used:    1
 23331 ;; Hardware stack levels required when called:    2
 23332 ;; This function calls:
 23333 ;;		Nothing
 23334 ;; This function is called by:
 23335 ;;		_print_string
 23336 ;;		_show_display
 23337 ;;		_eval_gps
 23338 ;;		_pad
 23339 ;;		_stoa
 23340 ;; This function uses a non-reentrant model
 23341 ;;
 23342                           
 23343                           	psect	text86
 23344  0000'                    __ptext86:
 23345                           	opt callstack 0
 23346  0000'                    _strlen:
 23347                           	opt callstack 21
 23348  0000' C00D' F00F'        	movff	strlen@s,strlen@a
 23349  0004' C00E' F010'        	movff	strlen@s+1,strlen@a+1
 23350  0008' EF00' F000'        	goto	l8891
 23351  000C'                    l8889:
 23352  000C' 4A00'              	infsnz	strlen@s^0,f,c
 23353  000E' 2A00'              	incf	(strlen@s+1)^0,f,c
 23354  0010'                    l8891:
 23355  0010' C00D' FFF6         	movff	strlen@s,tblptrl
 23356  0014' C00E' FFF7         	movff	strlen@s+1,tblptrh
 23357  0018' 6AF8               	clrf	tblptru,c
 23358  001A' 0EFF'              	movlw	(high __ramtop+-1)
 23359  001C' 64F7               	cpfsgt	tblptrh,c
 23360  001E' D003               	bra	u10337
 23361  0020' 0008               	tblrd		*
 23362  0022' 50F5               	movf	tablat,w,c
 23363  0024' D005               	bra	u10330
 23364  0026'                    u10337:
 23365  0026' CFF6 FFE9          	movff	tblptrl,fsr0l
 23366  002A' CFF7 FFEA          	movff	tblptrh,fsr0h
 23367  002E' 50EF               	movf	indf0,w,c
 23368  0030'                    u10330:
 23369  0030' 0900               	iorlw	0
 23370  0032' A4D8               	btfss	status,2,c
 23371  0034' EF00' F000'        	goto	u10341
 23372  0038' EF00' F000'        	goto	u10340
 23373  003C'                    u10341:
 23374  003C' EF00' F000'        	goto	l8889
 23375  0040'                    u10340:
 23376  0040' 5000'              	movf	strlen@a^0,w,c
 23377  0042' 5C00'              	subwf	strlen@s^0,w,c
 23378  0044' 6E00'              	movwf	?_strlen^0,c
 23379  0046' 5000'              	movf	(strlen@a+1)^0,w,c
 23380  0048' 5800'              	subwfb	(strlen@s+1)^0,w,c
 23381  004A' 6E00'              	movwf	(?_strlen+1)^0,c
 23382  004C' 0012               	return		;funcret
 23383  004E'                    __end_of_strlen:
 23384                           	opt callstack 0
 23385                           
 23386 ;; *************** function _fputs *****************
 23387 ;; Defined at:
 23388 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 23389 ;; Parameters:    Size  Location     Type
 23390 ;;  s               2   18[COMRAM] PTR const unsigned char 
 23391 ;;		 -> dbuf(32), 
 23392 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
 23393 ;;		 -> NULL(0), 
 23394 ;; Auto vars:     Size  Location     Type
 23395 ;;  i               2   23[COMRAM] int 
 23396 ;;  c               1   22[COMRAM] unsigned char 
 23397 ;; Return value:  Size  Location     Type
 23398 ;;                  2   18[COMRAM] int 
 23399 ;; Registers used:
 23400 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23401 ;; Tracked objects:
 23402 ;;		On entry : 0/0
 23403 ;;		On exit  : 0/0
 23404 ;;		Unchanged: 0/0
 23405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23406 ;;      Params:         4       0       0       0       0       0       0
 23407 ;;      Locals:         3       0       0       0       0       0       0
 23408 ;;      Temps:          0       0       0       0       0       0       0
 23409 ;;      Totals:         7       0       0       0       0       0       0
 23410 ;;Total ram usage:        7 bytes
 23411 ;; Hardware stack levels used:    1
 23412 ;; Hardware stack levels required when called:    4
 23413 ;; This function calls:
 23414 ;;		_fputc
 23415 ;; This function is called by:
 23416 ;;		_pad
 23417 ;; This function uses a non-reentrant model
 23418 ;;
 23419                           
 23420                           	psect	text87
 23421  0000'                    __ptext87:
 23422                           	opt callstack 0
 23423  0000'                    _fputs:
 23424                           	opt callstack 19
 23425  0000' 0E00               	movlw	0
 23426  0002' 6E00'              	movwf	(fputs@i+1)^0,c
 23427  0004' 0E00               	movlw	0
 23428  0006' 6E00'              	movwf	fputs@i^0,c
 23429  0008' EF00' F000'        	goto	l8903
 23430  000C'                    l8899:
 23431  000C' C016' F00E'        	movff	fputs@c,fputc@c
 23432  0010' 6A00'              	clrf	(fputc@c+1)^0,c
 23433  0012' C014' F010'        	movff	fputs@fp,fputc@fp
 23434  0016' C015' F011'        	movff	fputs@fp+1,fputc@fp+1
 23435  001A' EC00' F000'        	call	_fputc	;wreg free
 23436  001E' 4A00'              	infsnz	fputs@i^0,f,c
 23437  0020' 2A00'              	incf	(fputs@i+1)^0,f,c
 23438  0022'                    l8903:
 23439  0022' 5000'              	movf	fputs@i^0,w,c
 23440  0024' 2400'              	addwf	fputs@s^0,w,c
 23441  0026' 6ED9               	movwf	fsr2l,c
 23442  0028' 5000'              	movf	(fputs@i+1)^0,w,c
 23443  002A' 2000'              	addwfc	(fputs@s+1)^0,w,c
 23444  002C' 6EDA               	movwf	fsr2h,c
 23445  002E' 50DF               	movf	indf2,w,c
 23446  0030' 6E00'              	movwf	fputs@c^0,c
 23447  0032' 5000'              	movf	fputs@c^0,w,c
 23448  0034' A4D8               	btfss	status,2,c
 23449  0036' EF00' F000'        	goto	u10351
 23450  003A' EF00' F000'        	goto	u10350
 23451  003E'                    u10351:
 23452  003E' EF00' F000'        	goto	l8899
 23453  0042'                    u10350:
 23454  0042' 0012               	return		;funcret
 23455  0044'                    __end_of_fputs:
 23456                           	opt callstack 0
 23457                           
 23458 ;; *************** function _fputc *****************
 23459 ;; Defined at:
 23460 ;;		line 120 in file "src/driver/usart.c"
 23461 ;; Parameters:    Size  Location     Type
 23462 ;;  c               2   14[COMRAM] int 
 23463 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 23464 ;;		 -> NULL(0), 
 23465 ;; Auto vars:     Size  Location     Type
 23466 ;;		None
 23467 ;; Return value:  Size  Location     Type
 23468 ;;                  2   14[COMRAM] int 
 23469 ;; Registers used:
 23470 ;;		wreg, status,2, status,0, cstack
 23471 ;; Tracked objects:
 23472 ;;		On entry : 0/0
 23473 ;;		On exit  : 0/0
 23474 ;;		Unchanged: 0/0
 23475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23476 ;;      Params:         4       0       0       0       0       0       0
 23477 ;;      Locals:         0       0       0       0       0       0       0
 23478 ;;      Temps:          0       0       0       0       0       0       0
 23479 ;;      Totals:         4       0       0       0       0       0       0
 23480 ;;Total ram usage:        4 bytes
 23481 ;; Hardware stack levels used:    1
 23482 ;; Hardware stack levels required when called:    3
 23483 ;; This function calls:
 23484 ;;		_usart_putc
 23485 ;; This function is called by:
 23486 ;;		_pad
 23487 ;;		_stoa
 23488 ;;		_vfpfcnvrt
 23489 ;;		_fputs
 23490 ;; This function uses a non-reentrant model
 23491 ;;
 23492                           
 23493                           	psect	text88
 23494  0000'                    __ptext88:
 23495                           	opt callstack 0
 23496  0000'                    _fputc:
 23497                           	opt callstack 19
 23498  0000'                    
 23499                           ;src/driver/usart.c: 120: int fputc(int c, FILE *fp);src/driver/usart.c: 121: {;src/driv
      +                          er/usart.c: 126:     if(c == '\n') {
 23500  0000' 0E0A               	movlw	10
 23501  0002' 1800'              	xorwf	fputc@c^0,w,c
 23502  0004' 1000'              	iorwf	(fputc@c+1)^0,w,c
 23503  0006' A4D8               	btfss	status,2,c
 23504  0008' EF00' F000'        	goto	u10171
 23505  000C' EF00' F000'        	goto	u10170
 23506  0010'                    u10171:
 23507  0010' EF00' F000'        	goto	l8791
 23508  0014'                    u10170:
 23509  0014'                    
 23510                           ;src/driver/usart.c: 127:         usart_putc('\r');
 23511  0014' 0E0D               	movlw	13
 23512  0016' EC00' F000'        	call	_usart_putc
 23513  001A'                    l8791:
 23514                           
 23515                           ;src/driver/usart.c: 129:     usart_putc((char)c);
 23516  001A' 5000'              	movf	fputc@c^0,w,c
 23517  001C' EC00' F000'        	call	_usart_putc
 23518  0020' 0012               	return		;funcret
 23519  0022'                    __end_of_fputc:
 23520                           	opt callstack 0
 23521                           
 23522 ;; *************** function _usart_putc *****************
 23523 ;; Defined at:
 23524 ;;		line 42 in file "src/driver/usart.c"
 23525 ;; Parameters:    Size  Location     Type
 23526 ;;  c               1    wreg     unsigned char 
 23527 ;; Auto vars:     Size  Location     Type
 23528 ;;  c               1   13[COMRAM] unsigned char 
 23529 ;; Return value:  Size  Location     Type
 23530 ;;                  1    wreg      unsigned char 
 23531 ;; Registers used:
 23532 ;;		wreg
 23533 ;; Tracked objects:
 23534 ;;		On entry : 0/0
 23535 ;;		On exit  : 0/0
 23536 ;;		Unchanged: 0/0
 23537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23538 ;;      Params:         0       0       0       0       0       0       0
 23539 ;;      Locals:         1       0       0       0       0       0       0
 23540 ;;      Temps:          0       0       0       0       0       0       0
 23541 ;;      Totals:         1       0       0       0       0       0       0
 23542 ;;Total ram usage:        1 bytes
 23543 ;; Hardware stack levels used:    1
 23544 ;; Hardware stack levels required when called:    2
 23545 ;; This function calls:
 23546 ;;		Nothing
 23547 ;; This function is called by:
 23548 ;;		_fputc
 23549 ;;		_putgps
 23550 ;; This function uses a non-reentrant model
 23551 ;;
 23552                           
 23553                           	psect	text89
 23554  0000'                    __ptext89:
 23555                           	opt callstack 0
 23556  0000'                    _usart_putc:
 23557                           	opt callstack 19
 23558                           
 23559                           ;incstack = 0
 23560                           ;usart_putc@c stored from wreg
 23561  0000' 6E00'              	movwf	usart_putc@c^0,c
 23562  0002' 0004               	clrwdt		;# 
 23563                           
 23564                           ;src/driver/usart.c: 46:     while(TXSTAbits.TRMT == 0) __asm(" clrwdt");
 23565  0004' EF00' F000'        	goto	l316
 23566  0008'                    l317:
 23567  0008' 0004               	clrwdt		;# 
 23568  000A'                    l316:
 23569  000A' A2AC               	btfss	172,1,c	;volatile
 23570  000C' EF00' F000'        	goto	u10071
 23571  0010' EF00' F000'        	goto	u10070
 23572  0014'                    u10071:
 23573  0014' EF00' F000'        	goto	l317
 23574  0018'                    u10070:
 23575  0018'                    
 23576                           ;src/driver/usart.c: 48:     TXREG = c;
 23577  0018' C00D' FFAD         	movff	usart_putc@c,4013	;volatile
 23578  001C' 0012               	return		;funcret
 23579  001E'                    __end_of_usart_putc:
 23580                           	opt callstack 0
 23581                           
 23582 ;; *************** function _abs *****************
 23583 ;; Defined at:
 23584 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 23585 ;; Parameters:    Size  Location     Type
 23586 ;;  a               2   31[COMRAM] int 
 23587 ;; Auto vars:     Size  Location     Type
 23588 ;;		None
 23589 ;; Return value:  Size  Location     Type
 23590 ;;                  2   31[COMRAM] int 
 23591 ;; Registers used:
 23592 ;;		wreg, status,2, status,0
 23593 ;; Tracked objects:
 23594 ;;		On entry : 0/0
 23595 ;;		On exit  : 0/0
 23596 ;;		Unchanged: 0/0
 23597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23598 ;;      Params:         2       0       0       0       0       0       0
 23599 ;;      Locals:         0       0       0       0       0       0       0
 23600 ;;      Temps:          2       0       0       0       0       0       0
 23601 ;;      Totals:         4       0       0       0       0       0       0
 23602 ;;Total ram usage:        4 bytes
 23603 ;; Hardware stack levels used:    1
 23604 ;; Hardware stack levels required when called:    2
 23605 ;; This function calls:
 23606 ;;		Nothing
 23607 ;; This function is called by:
 23608 ;;		_dtoa
 23609 ;; This function uses a non-reentrant model
 23610 ;;
 23611                           
 23612                           	psect	text90
 23613  0000'                    __ptext90:
 23614                           	opt callstack 0
 23615  0000'                    _abs:
 23616                           	opt callstack 22
 23617  0000' BE00'              	btfsc	(abs@a+1)^0,7,c
 23618  0002' EF00' F000'        	goto	u10590
 23619  0006' 5000'              	movf	(abs@a+1)^0,w,c
 23620  0008' E106               	bnz	u10591
 23621  000A' 0400'              	decf	abs@a^0,w,c
 23622  000C' B0D8               	btfsc	status,0,c
 23623  000E' EF00' F000'        	goto	u10591
 23624  0012' EF00' F000'        	goto	u10590
 23625  0016'                    u10591:
 23626  0016' EF00' F000'        	goto	l2073
 23627  001A'                    u10590:
 23628  001A' C01F' F021'        	movff	abs@a,??_abs
 23629  001E' C020' F022'        	movff	abs@a+1,??_abs+1
 23630  0022' 1E00'              	comf	??_abs^0,f,c
 23631  0024' 1E00'              	comf	(??_abs+1)^0,f,c
 23632  0026' 4A00'              	infsnz	??_abs^0,f,c
 23633  0028' 2A00'              	incf	(??_abs+1)^0,f,c
 23634  002A' C021' F01F'        	movff	??_abs,?_abs
 23635  002E' C022' F020'        	movff	??_abs+1,?_abs+1
 23636  0032' EF00' F000'        	goto	l2076
 23637  0036'                    l2073:
 23638  0036' C01F' F01F'        	movff	abs@a,?_abs
 23639  003A' C020' F020'        	movff	abs@a+1,?_abs+1
 23640  003E'                    l2076:
 23641  003E' 0012               	return		;funcret
 23642  0040'                    __end_of_abs:
 23643                           	opt callstack 0
 23644                           
 23645 ;; *************** function ___aomod *****************
 23646 ;; Defined at:
 23647 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 23648 ;; Parameters:    Size  Location     Type
 23649 ;;  dividend        8   13[COMRAM] long long 
 23650 ;;  divisor         8   21[COMRAM] long long 
 23651 ;; Auto vars:     Size  Location     Type
 23652 ;;  sign            1   30[COMRAM] unsigned char 
 23653 ;;  counter         1   29[COMRAM] unsigned char 
 23654 ;; Return value:  Size  Location     Type
 23655 ;;                  8   13[COMRAM] long long 
 23656 ;; Registers used:
 23657 ;;		wreg, status,2, status,0
 23658 ;; Tracked objects:
 23659 ;;		On entry : 0/0
 23660 ;;		On exit  : 0/0
 23661 ;;		Unchanged: 0/0
 23662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23663 ;;      Params:        16       0       0       0       0       0       0
 23664 ;;      Locals:         2       0       0       0       0       0       0
 23665 ;;      Temps:          0       0       0       0       0       0       0
 23666 ;;      Totals:        18       0       0       0       0       0       0
 23667 ;;Total ram usage:       18 bytes
 23668 ;; Hardware stack levels used:    1
 23669 ;; Hardware stack levels required when called:    2
 23670 ;; This function calls:
 23671 ;;		Nothing
 23672 ;; This function is called by:
 23673 ;;		_dtoa
 23674 ;; This function uses a non-reentrant model
 23675 ;;
 23676                           
 23677                           	psect	text91
 23678  0000'                    __ptext91:
 23679                           	opt callstack 0
 23680  0000'                    ___aomod:
 23681                           	opt callstack 22
 23682  0000' 0E00               	movlw	0
 23683  0002' 6E00'              	movwf	___aomod@sign^0,c
 23684  0004' BE00'              	btfsc	(___aomod@dividend+7)^0,7,c
 23685  0006' EF00' F000'        	goto	u10760
 23686  000A' EF00' F000'        	goto	u10761
 23687  000E'                    u10761:
 23688  000E' EF00' F000'        	goto	l9091
 23689  0012'                    u10760:
 23690  0012' 1E00'              	comf	(___aomod@dividend+7)^0,f,c
 23691  0014' 1E00'              	comf	(___aomod@dividend+6)^0,f,c
 23692  0016' 1E00'              	comf	(___aomod@dividend+5)^0,f,c
 23693  0018' 1E00'              	comf	(___aomod@dividend+4)^0,f,c
 23694  001A' 1E00'              	comf	(___aomod@dividend+3)^0,f,c
 23695  001C' 1E00'              	comf	(___aomod@dividend+2)^0,f,c
 23696  001E' 1E00'              	comf	(___aomod@dividend+1)^0,f,c
 23697  0020' 6C00'              	negf	___aomod@dividend^0,c
 23698  0022' 0E00               	movlw	0
 23699  0024' 2200'              	addwfc	(___aomod@dividend+1)^0,f,c
 23700  0026' 2200'              	addwfc	(___aomod@dividend+2)^0,f,c
 23701  0028' 2200'              	addwfc	(___aomod@dividend+3)^0,f,c
 23702  002A' 2200'              	addwfc	(___aomod@dividend+4)^0,f,c
 23703  002C' 2200'              	addwfc	(___aomod@dividend+5)^0,f,c
 23704  002E' 2200'              	addwfc	(___aomod@dividend+6)^0,f,c
 23705  0030' 2200'              	addwfc	(___aomod@dividend+7)^0,f,c
 23706  0032' 0E01               	movlw	1
 23707  0034' 6E00'              	movwf	___aomod@sign^0,c
 23708  0036'                    l9091:
 23709  0036' BE00'              	btfsc	(___aomod@divisor+7)^0,7,c
 23710  0038' EF00' F000'        	goto	u10770
 23711  003C' EF00' F000'        	goto	u10771
 23712  0040'                    u10771:
 23713  0040' EF00' F000'        	goto	l9095
 23714  0044'                    u10770:
 23715  0044' 1E00'              	comf	(___aomod@divisor+7)^0,f,c
 23716  0046' 1E00'              	comf	(___aomod@divisor+6)^0,f,c
 23717  0048' 1E00'              	comf	(___aomod@divisor+5)^0,f,c
 23718  004A' 1E00'              	comf	(___aomod@divisor+4)^0,f,c
 23719  004C' 1E00'              	comf	(___aomod@divisor+3)^0,f,c
 23720  004E' 1E00'              	comf	(___aomod@divisor+2)^0,f,c
 23721  0050' 1E00'              	comf	(___aomod@divisor+1)^0,f,c
 23722  0052' 6C00'              	negf	___aomod@divisor^0,c
 23723  0054' 0E00               	movlw	0
 23724  0056' 2200'              	addwfc	(___aomod@divisor+1)^0,f,c
 23725  0058' 2200'              	addwfc	(___aomod@divisor+2)^0,f,c
 23726  005A' 2200'              	addwfc	(___aomod@divisor+3)^0,f,c
 23727  005C' 2200'              	addwfc	(___aomod@divisor+4)^0,f,c
 23728  005E' 2200'              	addwfc	(___aomod@divisor+5)^0,f,c
 23729  0060' 2200'              	addwfc	(___aomod@divisor+6)^0,f,c
 23730  0062' 2200'              	addwfc	(___aomod@divisor+7)^0,f,c
 23731  0064'                    l9095:
 23732  0064' 5000'              	movf	___aomod@divisor^0,w,c
 23733  0066' 1000'              	iorwf	(___aomod@divisor+1)^0,w,c
 23734  0068' 1000'              	iorwf	(___aomod@divisor+2)^0,w,c
 23735  006A' 1000'              	iorwf	(___aomod@divisor+3)^0,w,c
 23736  006C' 1000'              	iorwf	(___aomod@divisor+4)^0,w,c
 23737  006E' 1000'              	iorwf	(___aomod@divisor+5)^0,w,c
 23738  0070' 1000'              	iorwf	(___aomod@divisor+6)^0,w,c
 23739  0072' 1000'              	iorwf	(___aomod@divisor+7)^0,w,c
 23740  0074' B4D8               	btfsc	status,2,c
 23741  0076' EF00' F000'        	goto	u10781
 23742  007A' EF00' F000'        	goto	u10780
 23743  007E'                    u10781:
 23744  007E' EF00' F000'        	goto	l9111
 23745  0082'                    u10780:
 23746  0082' 0E01               	movlw	1
 23747  0084' 6E00'              	movwf	___aomod@counter^0,c
 23748  0086' EF00' F000'        	goto	l9101
 23749  008A'                    l9099:
 23750  008A' 90D8               	bcf	status,0,c
 23751  008C' 3600'              	rlcf	___aomod@divisor^0,f,c
 23752  008E' 3600'              	rlcf	(___aomod@divisor+1)^0,f,c
 23753  0090' 3600'              	rlcf	(___aomod@divisor+2)^0,f,c
 23754  0092' 3600'              	rlcf	(___aomod@divisor+3)^0,f,c
 23755  0094' 3600'              	rlcf	(___aomod@divisor+4)^0,f,c
 23756  0096' 3600'              	rlcf	(___aomod@divisor+5)^0,f,c
 23757  0098' 3600'              	rlcf	(___aomod@divisor+6)^0,f,c
 23758  009A' 3600'              	rlcf	(___aomod@divisor+7)^0,f,c
 23759  009C' 2A00'              	incf	___aomod@counter^0,f,c
 23760  009E'                    l9101:
 23761  009E' AE00'              	btfss	(___aomod@divisor+7)^0,7,c
 23762  00A0' EF00' F000'        	goto	u10791
 23763  00A4' EF00' F000'        	goto	u10790
 23764  00A8'                    u10791:
 23765  00A8' EF00' F000'        	goto	l9099
 23766  00AC'                    u10790:
 23767  00AC'                    l9103:
 23768  00AC' 5000'              	movf	___aomod@divisor^0,w,c
 23769  00AE' 5C00'              	subwf	___aomod@dividend^0,w,c
 23770  00B0' 5000'              	movf	(___aomod@divisor+1)^0,w,c
 23771  00B2' 5800'              	subwfb	(___aomod@dividend+1)^0,w,c
 23772  00B4' 5000'              	movf	(___aomod@divisor+2)^0,w,c
 23773  00B6' 5800'              	subwfb	(___aomod@dividend+2)^0,w,c
 23774  00B8' 5000'              	movf	(___aomod@divisor+3)^0,w,c
 23775  00BA' 5800'              	subwfb	(___aomod@dividend+3)^0,w,c
 23776  00BC' 5000'              	movf	(___aomod@divisor+4)^0,w,c
 23777  00BE' 5800'              	subwfb	(___aomod@dividend+4)^0,w,c
 23778  00C0' 5000'              	movf	(___aomod@divisor+5)^0,w,c
 23779  00C2' 5800'              	subwfb	(___aomod@dividend+5)^0,w,c
 23780  00C4' 5000'              	movf	(___aomod@divisor+6)^0,w,c
 23781  00C6' 5800'              	subwfb	(___aomod@dividend+6)^0,w,c
 23782  00C8' 5000'              	movf	(___aomod@divisor+7)^0,w,c
 23783  00CA' 5800'              	subwfb	(___aomod@dividend+7)^0,w,c
 23784  00CC' A0D8               	btfss	status,0,c
 23785  00CE' EF00' F000'        	goto	u10801
 23786  00D2' EF00' F000'        	goto	u10800
 23787  00D6'                    u10801:
 23788  00D6' EF00' F000'        	goto	l9107
 23789  00DA'                    u10800:
 23790  00DA' 5000'              	movf	___aomod@divisor^0,w,c
 23791  00DC' 5E00'              	subwf	___aomod@dividend^0,f,c
 23792  00DE' 5000'              	movf	(___aomod@divisor+1)^0,w,c
 23793  00E0' 5A00'              	subwfb	(___aomod@dividend+1)^0,f,c
 23794  00E2' 5000'              	movf	(___aomod@divisor+2)^0,w,c
 23795  00E4' 5A00'              	subwfb	(___aomod@dividend+2)^0,f,c
 23796  00E6' 5000'              	movf	(___aomod@divisor+3)^0,w,c
 23797  00E8' 5A00'              	subwfb	(___aomod@dividend+3)^0,f,c
 23798  00EA' 5000'              	movf	(___aomod@divisor+4)^0,w,c
 23799  00EC' 5A00'              	subwfb	(___aomod@dividend+4)^0,f,c
 23800  00EE' 5000'              	movf	(___aomod@divisor+5)^0,w,c
 23801  00F0' 5A00'              	subwfb	(___aomod@dividend+5)^0,f,c
 23802  00F2' 5000'              	movf	(___aomod@divisor+6)^0,w,c
 23803  00F4' 5A00'              	subwfb	(___aomod@dividend+6)^0,f,c
 23804  00F6' 5000'              	movf	(___aomod@divisor+7)^0,w,c
 23805  00F8' 5A00'              	subwfb	(___aomod@dividend+7)^0,f,c
 23806  00FA'                    l9107:
 23807  00FA' 90D8               	bcf	status,0,c
 23808  00FC' 3200'              	rrcf	(___aomod@divisor+7)^0,f,c
 23809  00FE' 3200'              	rrcf	(___aomod@divisor+6)^0,f,c
 23810  0100' 3200'              	rrcf	(___aomod@divisor+5)^0,f,c
 23811  0102' 3200'              	rrcf	(___aomod@divisor+4)^0,f,c
 23812  0104' 3200'              	rrcf	(___aomod@divisor+3)^0,f,c
 23813  0106' 3200'              	rrcf	(___aomod@divisor+2)^0,f,c
 23814  0108' 3200'              	rrcf	(___aomod@divisor+1)^0,f,c
 23815  010A' 3200'              	rrcf	___aomod@divisor^0,f,c
 23816  010C' 2E00'              	decfsz	___aomod@counter^0,f,c
 23817  010E' EF00' F000'        	goto	l9103
 23818  0112'                    l9111:
 23819  0112' 5000'              	movf	___aomod@sign^0,w,c
 23820  0114' B4D8               	btfsc	status,2,c
 23821  0116' EF00' F000'        	goto	u10811
 23822  011A' EF00' F000'        	goto	u10810
 23823  011E'                    u10811:
 23824  011E' EF00' F000'        	goto	l9115
 23825  0122'                    u10810:
 23826  0122' 1E00'              	comf	(___aomod@dividend+7)^0,f,c
 23827  0124' 1E00'              	comf	(___aomod@dividend+6)^0,f,c
 23828  0126' 1E00'              	comf	(___aomod@dividend+5)^0,f,c
 23829  0128' 1E00'              	comf	(___aomod@dividend+4)^0,f,c
 23830  012A' 1E00'              	comf	(___aomod@dividend+3)^0,f,c
 23831  012C' 1E00'              	comf	(___aomod@dividend+2)^0,f,c
 23832  012E' 1E00'              	comf	(___aomod@dividend+1)^0,f,c
 23833  0130' 6C00'              	negf	___aomod@dividend^0,c
 23834  0132' 0E00               	movlw	0
 23835  0134' 2200'              	addwfc	(___aomod@dividend+1)^0,f,c
 23836  0136' 2200'              	addwfc	(___aomod@dividend+2)^0,f,c
 23837  0138' 2200'              	addwfc	(___aomod@dividend+3)^0,f,c
 23838  013A' 2200'              	addwfc	(___aomod@dividend+4)^0,f,c
 23839  013C' 2200'              	addwfc	(___aomod@dividend+5)^0,f,c
 23840  013E' 2200'              	addwfc	(___aomod@dividend+6)^0,f,c
 23841  0140' 2200'              	addwfc	(___aomod@dividend+7)^0,f,c
 23842  0142'                    l9115:
 23843  0142' C00D' F00D'        	movff	___aomod@dividend,?___aomod
 23844  0146' C00E' F00E'        	movff	___aomod@dividend+1,?___aomod+1
 23845  014A' C00F' F00F'        	movff	___aomod@dividend+2,?___aomod+2
 23846  014E' C010' F010'        	movff	___aomod@dividend+3,?___aomod+3
 23847  0152' C011' F011'        	movff	___aomod@dividend+4,?___aomod+4
 23848  0156' C012' F012'        	movff	___aomod@dividend+5,?___aomod+5
 23849  015A' C013' F013'        	movff	___aomod@dividend+6,?___aomod+6
 23850  015E' C014' F014'        	movff	___aomod@dividend+7,?___aomod+7
 23851  0162' 0012               	return		;funcret
 23852  0164'                    __end_of___aomod:
 23853                           	opt callstack 0
 23854                           
 23855 ;; *************** function ___aodiv *****************
 23856 ;; Defined at:
 23857 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 23858 ;; Parameters:    Size  Location     Type
 23859 ;;  dividend        8   13[COMRAM] long long 
 23860 ;;  divisor         8   21[COMRAM] long long 
 23861 ;; Auto vars:     Size  Location     Type
 23862 ;;  quotient        8   31[COMRAM] long long 
 23863 ;;  sign            1   30[COMRAM] unsigned char 
 23864 ;;  counter         1   29[COMRAM] unsigned char 
 23865 ;; Return value:  Size  Location     Type
 23866 ;;                  8   13[COMRAM] long long 
 23867 ;; Registers used:
 23868 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23869 ;; Tracked objects:
 23870 ;;		On entry : 0/0
 23871 ;;		On exit  : 0/0
 23872 ;;		Unchanged: 0/0
 23873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23874 ;;      Params:        16       0       0       0       0       0       0
 23875 ;;      Locals:        10       0       0       0       0       0       0
 23876 ;;      Temps:          0       0       0       0       0       0       0
 23877 ;;      Totals:        26       0       0       0       0       0       0
 23878 ;;Total ram usage:       26 bytes
 23879 ;; Hardware stack levels used:    1
 23880 ;; Hardware stack levels required when called:    2
 23881 ;; This function calls:
 23882 ;;		Nothing
 23883 ;; This function is called by:
 23884 ;;		_calc_mixer_corr_value
 23885 ;;		_dtoa
 23886 ;; This function uses a non-reentrant model
 23887 ;;
 23888                           
 23889                           	psect	text92
 23890  0000'                    __ptext92:
 23891                           	opt callstack 0
 23892  0000'                    ___aodiv:
 23893                           	opt callstack 22
 23894  0000' 0E00               	movlw	0
 23895  0002' 6E00'              	movwf	___aodiv@sign^0,c
 23896  0004' BE00'              	btfsc	(___aodiv@divisor+7)^0,7,c
 23897  0006' EF00' F000'        	goto	u10690
 23898  000A' EF00' F000'        	goto	u10691
 23899  000E'                    u10691:
 23900  000E' EF00' F000'        	goto	l9047
 23901  0012'                    u10690:
 23902  0012' 1E00'              	comf	(___aodiv@divisor+7)^0,f,c
 23903  0014' 1E00'              	comf	(___aodiv@divisor+6)^0,f,c
 23904  0016' 1E00'              	comf	(___aodiv@divisor+5)^0,f,c
 23905  0018' 1E00'              	comf	(___aodiv@divisor+4)^0,f,c
 23906  001A' 1E00'              	comf	(___aodiv@divisor+3)^0,f,c
 23907  001C' 1E00'              	comf	(___aodiv@divisor+2)^0,f,c
 23908  001E' 1E00'              	comf	(___aodiv@divisor+1)^0,f,c
 23909  0020' 6C00'              	negf	___aodiv@divisor^0,c
 23910  0022' 0E00               	movlw	0
 23911  0024' 2200'              	addwfc	(___aodiv@divisor+1)^0,f,c
 23912  0026' 2200'              	addwfc	(___aodiv@divisor+2)^0,f,c
 23913  0028' 2200'              	addwfc	(___aodiv@divisor+3)^0,f,c
 23914  002A' 2200'              	addwfc	(___aodiv@divisor+4)^0,f,c
 23915  002C' 2200'              	addwfc	(___aodiv@divisor+5)^0,f,c
 23916  002E' 2200'              	addwfc	(___aodiv@divisor+6)^0,f,c
 23917  0030' 2200'              	addwfc	(___aodiv@divisor+7)^0,f,c
 23918  0032' 0E01               	movlw	1
 23919  0034' 6E00'              	movwf	___aodiv@sign^0,c
 23920  0036'                    l9047:
 23921  0036' BE00'              	btfsc	(___aodiv@dividend+7)^0,7,c
 23922  0038' EF00' F000'        	goto	u10700
 23923  003C' EF00' F000'        	goto	u10701
 23924  0040'                    u10701:
 23925  0040' EF00' F000'        	goto	l9053
 23926  0044'                    u10700:
 23927  0044' 1E00'              	comf	(___aodiv@dividend+7)^0,f,c
 23928  0046' 1E00'              	comf	(___aodiv@dividend+6)^0,f,c
 23929  0048' 1E00'              	comf	(___aodiv@dividend+5)^0,f,c
 23930  004A' 1E00'              	comf	(___aodiv@dividend+4)^0,f,c
 23931  004C' 1E00'              	comf	(___aodiv@dividend+3)^0,f,c
 23932  004E' 1E00'              	comf	(___aodiv@dividend+2)^0,f,c
 23933  0050' 1E00'              	comf	(___aodiv@dividend+1)^0,f,c
 23934  0052' 6C00'              	negf	___aodiv@dividend^0,c
 23935  0054' 0E00               	movlw	0
 23936  0056' 2200'              	addwfc	(___aodiv@dividend+1)^0,f,c
 23937  0058' 2200'              	addwfc	(___aodiv@dividend+2)^0,f,c
 23938  005A' 2200'              	addwfc	(___aodiv@dividend+3)^0,f,c
 23939  005C' 2200'              	addwfc	(___aodiv@dividend+4)^0,f,c
 23940  005E' 2200'              	addwfc	(___aodiv@dividend+5)^0,f,c
 23941  0060' 2200'              	addwfc	(___aodiv@dividend+6)^0,f,c
 23942  0062' 2200'              	addwfc	(___aodiv@dividend+7)^0,f,c
 23943  0064' 0E01               	movlw	1
 23944  0066' 1A00'              	xorwf	___aodiv@sign^0,f,c
 23945  0068'                    l9053:
 23946  0068' EE20' F000'        	lfsr	2,___aodiv@quotient
 23947  006C' 0E07               	movlw	7
 23948  006E'                    u10711:
 23949  006E' 6ADE               	clrf	postinc2,c
 23950  0070' 06E8               	decf	wreg,f,c
 23951  0072' E2FD               	bc	u10711
 23952  0074' 5000'              	movf	___aodiv@divisor^0,w,c
 23953  0076' 1000'              	iorwf	(___aodiv@divisor+1)^0,w,c
 23954  0078' 1000'              	iorwf	(___aodiv@divisor+2)^0,w,c
 23955  007A' 1000'              	iorwf	(___aodiv@divisor+3)^0,w,c
 23956  007C' 1000'              	iorwf	(___aodiv@divisor+4)^0,w,c
 23957  007E' 1000'              	iorwf	(___aodiv@divisor+5)^0,w,c
 23958  0080' 1000'              	iorwf	(___aodiv@divisor+6)^0,w,c
 23959  0082' 1000'              	iorwf	(___aodiv@divisor+7)^0,w,c
 23960  0084' B4D8               	btfsc	status,2,c
 23961  0086' EF00' F000'        	goto	u10721
 23962  008A' EF00' F000'        	goto	u10720
 23963  008E'                    u10721:
 23964  008E' EF00' F000'        	goto	l9075
 23965  0092'                    u10720:
 23966  0092' 0E01               	movlw	1
 23967  0094' 6E00'              	movwf	___aodiv@counter^0,c
 23968  0096' EF00' F000'        	goto	l9061
 23969  009A'                    l9059:
 23970  009A' 90D8               	bcf	status,0,c
 23971  009C' 3600'              	rlcf	___aodiv@divisor^0,f,c
 23972  009E' 3600'              	rlcf	(___aodiv@divisor+1)^0,f,c
 23973  00A0' 3600'              	rlcf	(___aodiv@divisor+2)^0,f,c
 23974  00A2' 3600'              	rlcf	(___aodiv@divisor+3)^0,f,c
 23975  00A4' 3600'              	rlcf	(___aodiv@divisor+4)^0,f,c
 23976  00A6' 3600'              	rlcf	(___aodiv@divisor+5)^0,f,c
 23977  00A8' 3600'              	rlcf	(___aodiv@divisor+6)^0,f,c
 23978  00AA' 3600'              	rlcf	(___aodiv@divisor+7)^0,f,c
 23979  00AC' 2A00'              	incf	___aodiv@counter^0,f,c
 23980  00AE'                    l9061:
 23981  00AE' AE00'              	btfss	(___aodiv@divisor+7)^0,7,c
 23982  00B0' EF00' F000'        	goto	u10731
 23983  00B4' EF00' F000'        	goto	u10730
 23984  00B8'                    u10731:
 23985  00B8' EF00' F000'        	goto	l9059
 23986  00BC'                    u10730:
 23987  00BC'                    l9063:
 23988  00BC' 90D8               	bcf	status,0,c
 23989  00BE' 3600'              	rlcf	___aodiv@quotient^0,f,c
 23990  00C0' 3600'              	rlcf	(___aodiv@quotient+1)^0,f,c
 23991  00C2' 3600'              	rlcf	(___aodiv@quotient+2)^0,f,c
 23992  00C4' 3600'              	rlcf	(___aodiv@quotient+3)^0,f,c
 23993  00C6' 3600'              	rlcf	(___aodiv@quotient+4)^0,f,c
 23994  00C8' 3600'              	rlcf	(___aodiv@quotient+5)^0,f,c
 23995  00CA' 3600'              	rlcf	(___aodiv@quotient+6)^0,f,c
 23996  00CC' 3600'              	rlcf	(___aodiv@quotient+7)^0,f,c
 23997  00CE' 5000'              	movf	___aodiv@divisor^0,w,c
 23998  00D0' 5C00'              	subwf	___aodiv@dividend^0,w,c
 23999  00D2' 5000'              	movf	(___aodiv@divisor+1)^0,w,c
 24000  00D4' 5800'              	subwfb	(___aodiv@dividend+1)^0,w,c
 24001  00D6' 5000'              	movf	(___aodiv@divisor+2)^0,w,c
 24002  00D8' 5800'              	subwfb	(___aodiv@dividend+2)^0,w,c
 24003  00DA' 5000'              	movf	(___aodiv@divisor+3)^0,w,c
 24004  00DC' 5800'              	subwfb	(___aodiv@dividend+3)^0,w,c
 24005  00DE' 5000'              	movf	(___aodiv@divisor+4)^0,w,c
 24006  00E0' 5800'              	subwfb	(___aodiv@dividend+4)^0,w,c
 24007  00E2' 5000'              	movf	(___aodiv@divisor+5)^0,w,c
 24008  00E4' 5800'              	subwfb	(___aodiv@dividend+5)^0,w,c
 24009  00E6' 5000'              	movf	(___aodiv@divisor+6)^0,w,c
 24010  00E8' 5800'              	subwfb	(___aodiv@dividend+6)^0,w,c
 24011  00EA' 5000'              	movf	(___aodiv@divisor+7)^0,w,c
 24012  00EC' 5800'              	subwfb	(___aodiv@dividend+7)^0,w,c
 24013  00EE' A0D8               	btfss	status,0,c
 24014  00F0' EF00' F000'        	goto	u10741
 24015  00F4' EF00' F000'        	goto	u10740
 24016  00F8'                    u10741:
 24017  00F8' EF00' F000'        	goto	l9071
 24018  00FC'                    u10740:
 24019  00FC' 5000'              	movf	___aodiv@divisor^0,w,c
 24020  00FE' 5E00'              	subwf	___aodiv@dividend^0,f,c
 24021  0100' 5000'              	movf	(___aodiv@divisor+1)^0,w,c
 24022  0102' 5A00'              	subwfb	(___aodiv@dividend+1)^0,f,c
 24023  0104' 5000'              	movf	(___aodiv@divisor+2)^0,w,c
 24024  0106' 5A00'              	subwfb	(___aodiv@dividend+2)^0,f,c
 24025  0108' 5000'              	movf	(___aodiv@divisor+3)^0,w,c
 24026  010A' 5A00'              	subwfb	(___aodiv@dividend+3)^0,f,c
 24027  010C' 5000'              	movf	(___aodiv@divisor+4)^0,w,c
 24028  010E' 5A00'              	subwfb	(___aodiv@dividend+4)^0,f,c
 24029  0110' 5000'              	movf	(___aodiv@divisor+5)^0,w,c
 24030  0112' 5A00'              	subwfb	(___aodiv@dividend+5)^0,f,c
 24031  0114' 5000'              	movf	(___aodiv@divisor+6)^0,w,c
 24032  0116' 5A00'              	subwfb	(___aodiv@dividend+6)^0,f,c
 24033  0118' 5000'              	movf	(___aodiv@divisor+7)^0,w,c
 24034  011A' 5A00'              	subwfb	(___aodiv@dividend+7)^0,f,c
 24035  011C' 8000'              	bsf	___aodiv@quotient^0,0,c
 24036  011E'                    l9071:
 24037  011E' 90D8               	bcf	status,0,c
 24038  0120' 3200'              	rrcf	(___aodiv@divisor+7)^0,f,c
 24039  0122' 3200'              	rrcf	(___aodiv@divisor+6)^0,f,c
 24040  0124' 3200'              	rrcf	(___aodiv@divisor+5)^0,f,c
 24041  0126' 3200'              	rrcf	(___aodiv@divisor+4)^0,f,c
 24042  0128' 3200'              	rrcf	(___aodiv@divisor+3)^0,f,c
 24043  012A' 3200'              	rrcf	(___aodiv@divisor+2)^0,f,c
 24044  012C' 3200'              	rrcf	(___aodiv@divisor+1)^0,f,c
 24045  012E' 3200'              	rrcf	___aodiv@divisor^0,f,c
 24046  0130' 2E00'              	decfsz	___aodiv@counter^0,f,c
 24047  0132' EF00' F000'        	goto	l9063
 24048  0136'                    l9075:
 24049  0136' 5000'              	movf	___aodiv@sign^0,w,c
 24050  0138' B4D8               	btfsc	status,2,c
 24051  013A' EF00' F000'        	goto	u10751
 24052  013E' EF00' F000'        	goto	u10750
 24053  0142'                    u10751:
 24054  0142' EF00' F000'        	goto	l9079
 24055  0146'                    u10750:
 24056  0146' 1E00'              	comf	(___aodiv@quotient+7)^0,f,c
 24057  0148' 1E00'              	comf	(___aodiv@quotient+6)^0,f,c
 24058  014A' 1E00'              	comf	(___aodiv@quotient+5)^0,f,c
 24059  014C' 1E00'              	comf	(___aodiv@quotient+4)^0,f,c
 24060  014E' 1E00'              	comf	(___aodiv@quotient+3)^0,f,c
 24061  0150' 1E00'              	comf	(___aodiv@quotient+2)^0,f,c
 24062  0152' 1E00'              	comf	(___aodiv@quotient+1)^0,f,c
 24063  0154' 6C00'              	negf	___aodiv@quotient^0,c
 24064  0156' 0E00               	movlw	0
 24065  0158' 2200'              	addwfc	(___aodiv@quotient+1)^0,f,c
 24066  015A' 2200'              	addwfc	(___aodiv@quotient+2)^0,f,c
 24067  015C' 2200'              	addwfc	(___aodiv@quotient+3)^0,f,c
 24068  015E' 2200'              	addwfc	(___aodiv@quotient+4)^0,f,c
 24069  0160' 2200'              	addwfc	(___aodiv@quotient+5)^0,f,c
 24070  0162' 2200'              	addwfc	(___aodiv@quotient+6)^0,f,c
 24071  0164' 2200'              	addwfc	(___aodiv@quotient+7)^0,f,c
 24072  0166'                    l9079:
 24073  0166' C01F' F00D'        	movff	___aodiv@quotient,?___aodiv
 24074  016A' C020' F00E'        	movff	___aodiv@quotient+1,?___aodiv+1
 24075  016E' C021' F00F'        	movff	___aodiv@quotient+2,?___aodiv+2
 24076  0172' C022' F010'        	movff	___aodiv@quotient+3,?___aodiv+3
 24077  0176' C023' F011'        	movff	___aodiv@quotient+4,?___aodiv+4
 24078  017A' C024' F012'        	movff	___aodiv@quotient+5,?___aodiv+5
 24079  017E' C025' F013'        	movff	___aodiv@quotient+6,?___aodiv+6
 24080  0182' C026' F014'        	movff	___aodiv@quotient+7,?___aodiv+7
 24081  0186' 0012               	return		;funcret
 24082  0188'                    __end_of___aodiv:
 24083                           	opt callstack 0
 24084                           
 24085 ;; *************** function _atoi *****************
 24086 ;; Defined at:
 24087 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 24088 ;; Parameters:    Size  Location     Type
 24089 ;;  s               2   26[COMRAM] PTR const unsigned char 
 24090 ;;		 -> STR_94(13), STR_93(31), STR_92(2), STR_91(26), 
 24091 ;;		 -> STR_90(15), eval_gps@elem(240), STR_40(18), STR_37(17), 
 24092 ;;		 -> STR_36(21), STR_35(28), STR_34(11), STR_33(13), 
 24093 ;;		 -> STR_32(27), STR_31(20), STR_30(13), STR_29(9), 
 24094 ;;		 -> STR_28(12), STR_27(15), STR_26(9), STR_25(11), 
 24095 ;;		 -> STR_24(15), STR_23(32), STR_22(16), STR_21(18), 
 24096 ;;		 -> STR_20(16), STR_19(15), STR_18(32), STR_17(16), 
 24097 ;;		 -> STR_16(18), STR_15(16), STR_14(15), STR_13(32), 
 24098 ;;		 -> STR_12(16), STR_11(18), STR_10(20), STR_9(18), 
 24099 ;;		 -> STR_8(8), STR_7(39), STR_6(25), STR_5(25), 
 24100 ;;		 -> STR_4(20), STR_3(12), STR_2(14), STR_1(24), 
 24101 ;; Auto vars:     Size  Location     Type
 24102 ;;  n               2   39[COMRAM] int 
 24103 ;;  neg             2   32[COMRAM] int 
 24104 ;; Return value:  Size  Location     Type
 24105 ;;                  2   26[COMRAM] int 
 24106 ;; Registers used:
 24107 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24108 ;; Tracked objects:
 24109 ;;		On entry : 0/0
 24110 ;;		On exit  : 0/0
 24111 ;;		Unchanged: 0/0
 24112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 24113 ;;      Params:         2       0       0       0       0       0       0
 24114 ;;      Locals:         9       0       0       0       0       0       0
 24115 ;;      Temps:          4       0       0       0       0       0       0
 24116 ;;      Totals:        15       0       0       0       0       0       0
 24117 ;;Total ram usage:       15 bytes
 24118 ;; Hardware stack levels used:    1
 24119 ;; Hardware stack levels required when called:    3
 24120 ;; This function calls:
 24121 ;;		___wmul
 24122 ;;		_isdigit
 24123 ;;		_isspace
 24124 ;; This function is called by:
 24125 ;;		_eval_gps
 24126 ;;		_vfpfcnvrt
 24127 ;; This function uses a non-reentrant model
 24128 ;;
 24129                           
 24130                           	psect	text93
 24131  0000'                    __ptext93:
 24132                           	opt callstack 0
 24133  0000'                    _atoi:
 24134                           	opt callstack 22
 24135  0000' 0E00               	movlw	0
 24136  0002' 6E00'              	movwf	(atoi@n+1)^0,c
 24137  0004' 0E00               	movlw	0
 24138  0006' 6E00'              	movwf	atoi@n^0,c
 24139  0008' 0E00               	movlw	0
 24140  000A' 6E00'              	movwf	(atoi@neg+1)^0,c
 24141  000C' 0E00               	movlw	0
 24142  000E' 6E00'              	movwf	atoi@neg^0,c
 24143  0010' EF00' F000'        	goto	l9145
 24144  0014'                    l9143:
 24145  0014' 4A00'              	infsnz	atoi@s^0,f,c
 24146  0016' 2A00'              	incf	(atoi@s+1)^0,f,c
 24147  0018'                    l9145:
 24148  0018' 0E01               	movlw	1
 24149  001A' 6E00'              	movwf	_atoi$3427^0,c
 24150  001C' C01A' FFF6         	movff	atoi@s,tblptrl
 24151  0020' C01B' FFF7         	movff	atoi@s+1,tblptrh
 24152  0024' 6AF8               	clrf	tblptru,c
 24153  0026' 0EFF'              	movlw	(high __ramtop+-1)
 24154  0028' 64F7               	cpfsgt	tblptrh,c
 24155  002A' D003               	bra	u10867
 24156  002C' 0008               	tblrd		*
 24157  002E' 50F5               	movf	tablat,w,c
 24158  0030' D005               	bra	u10860
 24159  0032'                    u10867:
 24160  0032' CFF6 FFE9          	movff	tblptrl,fsr0l
 24161  0036' CFF7 FFEA          	movff	tblptrh,fsr0h
 24162  003A' 50EF               	movf	indf0,w,c
 24163  003C'                    u10860:
 24164  003C' 0A20               	xorlw	32
 24165  003E' B4D8               	btfsc	status,2,c
 24166  0040' EF00' F000'        	goto	u10871
 24167  0044' EF00' F000'        	goto	u10870
 24168  0048'                    u10871:
 24169  0048' EF00' F000'        	goto	l9153
 24170  004C'                    u10870:
 24171  004C' 0EF7               	movlw	247
 24172  004E' 6E00'              	movwf	??_atoi^0,c
 24173  0050' 0EFF               	movlw	255
 24174  0052' 6E00'              	movwf	(??_atoi+1)^0,c
 24175  0054' C01A' FFF6         	movff	atoi@s,tblptrl
 24176  0058' C01B' FFF7         	movff	atoi@s+1,tblptrh
 24177  005C' 6AF8               	clrf	tblptru,c
 24178  005E' 0EFF'              	movlw	(high __ramtop+-1)
 24179  0060' 64F7               	cpfsgt	tblptrh,c
 24180  0062' D003               	bra	u10887
 24181  0064' 0008               	tblrd		*
 24182  0066' 50F5               	movf	tablat,w,c
 24183  0068' D005               	bra	u10880
 24184  006A'                    u10887:
 24185  006A' CFF6 FFE9          	movff	tblptrl,fsr0l
 24186  006E' CFF7 FFEA          	movff	tblptrh,fsr0h
 24187  0072' 50EF               	movf	indf0,w,c
 24188  0074'                    u10880:
 24189  0074' 6E00'              	movwf	(??_atoi+2)^0,c
 24190  0076' 6A00'              	clrf	(??_atoi+3)^0,c
 24191  0078' 5000'              	movf	??_atoi^0,w,c
 24192  007A' 2600'              	addwf	(??_atoi+2)^0,f,c
 24193  007C' 5000'              	movf	(??_atoi+1)^0,w,c
 24194  007E' 2200'              	addwfc	(??_atoi+3)^0,f,c
 24195  0080' 5000'              	movf	(??_atoi+3)^0,w,c
 24196  0082' E109               	bnz	u10890
 24197  0084' 0E05               	movlw	5
 24198  0086' 5C00'              	subwf	(??_atoi+2)^0,w,c
 24199  0088' A0D8               	btfss	status,0,c
 24200  008A' EF00' F000'        	goto	u10891
 24201  008E' EF00' F000'        	goto	u10890
 24202  0092'                    u10891:
 24203  0092' EF00' F000'        	goto	l9153
 24204  0096'                    u10890:
 24205  0096' 0E00               	movlw	0
 24206  0098' 6E00'              	movwf	_atoi$3427^0,c
 24207  009A'                    l9153:
 24208  009A' C026' F022'        	movff	_atoi$3427,_atoi$3426
 24209  009E' 6A00'              	clrf	(_atoi$3426+1)^0,c
 24210  00A0' 5000'              	movf	_atoi$3426^0,w,c
 24211  00A2' 1000'              	iorwf	(_atoi$3426+1)^0,w,c
 24212  00A4' A4D8               	btfss	status,2,c
 24213  00A6' EF00' F000'        	goto	u10901
 24214  00AA' EF00' F000'        	goto	u10900
 24215  00AE'                    u10901:
 24216  00AE' EF00' F000'        	goto	l9143
 24217  00B2'                    u10900:
 24218  00B2' EF00' F000'        	goto	l9163
 24219  00B6'                    l9159:
 24220  00B6' 0E00               	movlw	0
 24221  00B8' 6E00'              	movwf	(atoi@neg+1)^0,c
 24222  00BA' 0E01               	movlw	1
 24223  00BC' 6E00'              	movwf	atoi@neg^0,c
 24224  00BE'                    l9161:
 24225  00BE' 4A00'              	infsnz	atoi@s^0,f,c
 24226  00C0' 2A00'              	incf	(atoi@s+1)^0,f,c
 24227  00C2' EF00' F000'        	goto	l9169
 24228  00C6'                    l9163:
 24229  00C6' C01A' FFF6         	movff	atoi@s,tblptrl
 24230  00CA' C01B' FFF7         	movff	atoi@s+1,tblptrh
 24231  00CE' 6AF8               	clrf	tblptru,c
 24232  00D0' 0EFF'              	movlw	(high __ramtop+-1)
 24233  00D2' 64F7               	cpfsgt	tblptrh,c
 24234  00D4' D003               	bra	u10917
 24235  00D6' 0008               	tblrd		*
 24236  00D8' 50F5               	movf	tablat,w,c
 24237  00DA' D005               	bra	u10910
 24238  00DC'                    u10917:
 24239  00DC' CFF6 FFE9          	movff	tblptrl,fsr0l
 24240  00E0' CFF7 FFEA          	movff	tblptrh,fsr0h
 24241  00E4' 50EF               	movf	indf0,w,c
 24242  00E6'                    u10910:
 24243  00E6' 6E00'              	movwf	??_atoi^0,c
 24244  00E8' 6A00'              	clrf	(??_atoi+1)^0,c
 24245                           
 24246                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24247                           ; Switch size 1, requested type "simple"
 24248                           ; Number of cases is 1, Range of values is 0 to 0
 24249                           ; switch strategies available:
 24250                           ; Name         Instructions Cycles
 24251                           ; simple_byte            4     3 (average)
 24252                           ;	Chosen strategy is simple_byte
 24253  00EA' 5000'              	movf	(??_atoi+1)^0,w,c
 24254  00EC' 0A00               	xorlw	0	; case 0
 24255  00EE' B4D8               	btfsc	status,2,c
 24256  00F0' EF00' F000'        	goto	l11315
 24257  00F4' EF00' F000'        	goto	l9169
 24258  00F8'                    l11315:
 24259                           
 24260                           ; Switch size 1, requested type "simple"
 24261                           ; Number of cases is 2, Range of values is 43 to 45
 24262                           ; switch strategies available:
 24263                           ; Name         Instructions Cycles
 24264                           ; simple_byte            7     4 (average)
 24265                           ;	Chosen strategy is simple_byte
 24266  00F8' 5000'              	movf	??_atoi^0,w,c
 24267  00FA' 0A2B               	xorlw	43	; case 43
 24268  00FC' B4D8               	btfsc	status,2,c
 24269  00FE' EF00' F000'        	goto	l9161
 24270  0102' 0A06               	xorlw	6	; case 45
 24271  0104' B4D8               	btfsc	status,2,c
 24272  0106' EF00' F000'        	goto	l9159
 24273  010A' EF00' F000'        	goto	l9169
 24274  010E'                    l9165:
 24275  010E' C027' F014'        	movff	atoi@n,___wmul@multiplier
 24276  0112' C028' F015'        	movff	atoi@n+1,___wmul@multiplier+1
 24277  0116' 0E00               	movlw	0
 24278  0118' 6E00'              	movwf	(___wmul@multiplicand+1)^0,c
 24279  011A' 0E0A               	movlw	10
 24280  011C' 6E00'              	movwf	___wmul@multiplicand^0,c
 24281  011E' EC00' F000'        	call	___wmul	;wreg free
 24282  0122' C01A' FFF6         	movff	atoi@s,tblptrl
 24283  0126' C01B' FFF7         	movff	atoi@s+1,tblptrh
 24284  012A' 6AF8               	clrf	tblptru,c
 24285  012C' 0EFF'              	movlw	(high __ramtop+-1)
 24286  012E' 64F7               	cpfsgt	tblptrh,c
 24287  0130' D003               	bra	u10927
 24288  0132' 0008               	tblrd		*
 24289  0134' 50F5               	movf	tablat,w,c
 24290  0136' D005               	bra	u10920
 24291  0138'                    u10927:
 24292  0138' CFF6 FFE9          	movff	tblptrl,fsr0l
 24293  013C' CFF7 FFEA          	movff	tblptrh,fsr0h
 24294  0140' 50EF               	movf	indf0,w,c
 24295  0142'                    u10920:
 24296  0142' 6E00'              	movwf	??_atoi^0,c
 24297  0144' 5000'              	movf	??_atoi^0,w,c
 24298  0146' 5E00'              	subwf	?___wmul^0,f,c
 24299  0148' 0E00               	movlw	0
 24300  014A' 5A00'              	subwfb	(?___wmul+1)^0,f,c
 24301  014C' 0E30               	movlw	48
 24302  014E' 2400'              	addwf	?___wmul^0,w,c
 24303  0150' 6E00'              	movwf	atoi@n^0,c
 24304  0152' 0E00               	movlw	0
 24305  0154' 2000'              	addwfc	(?___wmul+1)^0,w,c
 24306  0156' 6E00'              	movwf	(atoi@n+1)^0,c
 24307  0158' EF00' F000'        	goto	l9161
 24308  015C'                    l9169:
 24309  015C' 0ED0               	movlw	208
 24310  015E' 6E00'              	movwf	??_atoi^0,c
 24311  0160' 0EFF               	movlw	255
 24312  0162' 6E00'              	movwf	(??_atoi+1)^0,c
 24313  0164' C01A' FFF6         	movff	atoi@s,tblptrl
 24314  0168' C01B' FFF7         	movff	atoi@s+1,tblptrh
 24315  016C' 6AF8               	clrf	tblptru,c
 24316  016E' 0EFF'              	movlw	(high __ramtop+-1)
 24317  0170' 64F7               	cpfsgt	tblptrh,c
 24318  0172' D003               	bra	u10937
 24319  0174' 0008               	tblrd		*
 24320  0176' 50F5               	movf	tablat,w,c
 24321  0178' D005               	bra	u10930
 24322  017A'                    u10937:
 24323  017A' CFF6 FFE9          	movff	tblptrl,fsr0l
 24324  017E' CFF7 FFEA          	movff	tblptrh,fsr0h
 24325  0182' 50EF               	movf	indf0,w,c
 24326  0184'                    u10930:
 24327  0184' 6E00'              	movwf	(??_atoi+2)^0,c
 24328  0186' 6A00'              	clrf	(??_atoi+3)^0,c
 24329  0188' 5000'              	movf	??_atoi^0,w,c
 24330  018A' 2600'              	addwf	(??_atoi+2)^0,f,c
 24331  018C' 5000'              	movf	(??_atoi+1)^0,w,c
 24332  018E' 2200'              	addwfc	(??_atoi+3)^0,f,c
 24333  0190' 5000'              	movf	(??_atoi+3)^0,w,c
 24334  0192' E10A               	bnz	u10940
 24335  0194' 0E0A               	movlw	10
 24336  0196' 5C00'              	subwf	(??_atoi+2)^0,w,c
 24337  0198' A0D8               	btfss	status,0,c
 24338  019A' EF00' F000'        	goto	u10941
 24339  019E' EF00' F000'        	goto	u10940
 24340  01A2'                    u10941:
 24341  01A2' 0E01               	movlw	1
 24342  01A4' EF00' F000'        	goto	u10950
 24343  01A8'                    u10940:
 24344  01A8' 0E00               	movlw	0
 24345  01AA'                    u10950:
 24346  01AA' 6E00'              	movwf	_atoi$3428^0,c
 24347  01AC' 6A00'              	clrf	(_atoi$3428+1)^0,c
 24348  01AE' 5000'              	movf	_atoi$3428^0,w,c
 24349  01B0' 1000'              	iorwf	(_atoi$3428+1)^0,w,c
 24350  01B2' A4D8               	btfss	status,2,c
 24351  01B4' EF00' F000'        	goto	u10961
 24352  01B8' EF00' F000'        	goto	u10960
 24353  01BC'                    u10961:
 24354  01BC' EF00' F000'        	goto	l9165
 24355  01C0'                    u10960:
 24356  01C0' 5000'              	movf	atoi@neg^0,w,c
 24357  01C2' 1000'              	iorwf	(atoi@neg+1)^0,w,c
 24358  01C4' A4D8               	btfss	status,2,c
 24359  01C6' EF00' F000'        	goto	u10971
 24360  01CA' EF00' F000'        	goto	u10970
 24361  01CE'                    u10971:
 24362  01CE' EF00' F000'        	goto	l2104
 24363  01D2'                    u10970:
 24364  01D2' C027' F01C'        	movff	atoi@n,??_atoi
 24365  01D6' C028' F01D'        	movff	atoi@n+1,??_atoi+1
 24366  01DA' 1E00'              	comf	??_atoi^0,f,c
 24367  01DC' 1E00'              	comf	(??_atoi+1)^0,f,c
 24368  01DE' 4A00'              	infsnz	??_atoi^0,f,c
 24369  01E0' 2A00'              	incf	(??_atoi+1)^0,f,c
 24370  01E2' C01C' F01A'        	movff	??_atoi,?_atoi
 24371  01E6' C01D' F01B'        	movff	??_atoi+1,?_atoi+1
 24372  01EA' EF00' F000'        	goto	l2107
 24373  01EE'                    l2104:
 24374  01EE' C027' F01A'        	movff	atoi@n,?_atoi
 24375  01F2' C028' F01B'        	movff	atoi@n+1,?_atoi+1
 24376  01F6'                    l2107:
 24377  01F6' 0012               	return		;funcret
 24378  01F8'                    __end_of_atoi:
 24379                           	opt callstack 0
 24380                           
 24381 ;; *************** function _isspace *****************
 24382 ;; Defined at:
 24383 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 24384 ;; Parameters:    Size  Location     Type
 24385 ;;  c               2   13[COMRAM] int 
 24386 ;; Auto vars:     Size  Location     Type
 24387 ;;		None
 24388 ;; Return value:  Size  Location     Type
 24389 ;;                  2   13[COMRAM] int 
 24390 ;; Registers used:
 24391 ;;		wreg, status,2, status,0
 24392 ;; Tracked objects:
 24393 ;;		On entry : 0/0
 24394 ;;		On exit  : 0/0
 24395 ;;		Unchanged: 0/0
 24396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 24397 ;;      Params:         2       0       0       0       0       0       0
 24398 ;;      Locals:         1       0       0       0       0       0       0
 24399 ;;      Temps:          4       0       0       0       0       0       0
 24400 ;;      Totals:         7       0       0       0       0       0       0
 24401 ;;Total ram usage:        7 bytes
 24402 ;; Hardware stack levels used:    1
 24403 ;; Hardware stack levels required when called:    2
 24404 ;; This function calls:
 24405 ;;		Nothing
 24406 ;; This function is called by:
 24407 ;;		_atoi
 24408 ;;		___strtoxl
 24409 ;; This function uses a non-reentrant model
 24410 ;;
 24411                           
 24412                           	psect	text94
 24413  0000'                    __ptext94:
 24414                           	opt callstack 0
 24415  0000'                    _isspace:
 24416                           	opt callstack 22
 24417  0000' 0E01               	movlw	1
 24418  0002' 6E00'              	movwf	_isspace$3453^0,c
 24419  0004' 0E20               	movlw	32
 24420  0006' 1800'              	xorwf	isspace@c^0,w,c
 24421  0008' 1000'              	iorwf	(isspace@c+1)^0,w,c
 24422  000A' B4D8               	btfsc	status,2,c
 24423  000C' EF00' F000'        	goto	u10821
 24424  0010' EF00' F000'        	goto	u10820
 24425  0014'                    u10821:
 24426  0014' EF00' F000'        	goto	l9127
 24427  0018'                    u10820:
 24428  0018' 0EF7               	movlw	247
 24429  001A' 6E00'              	movwf	??_isspace^0,c
 24430  001C' 0EFF               	movlw	255
 24431  001E' 6E00'              	movwf	(??_isspace+1)^0,c
 24432  0020' C00D' F011'        	movff	isspace@c,??_isspace+2
 24433  0024' C00E' F012'        	movff	isspace@c+1,??_isspace+3
 24434  0028' 5000'              	movf	??_isspace^0,w,c
 24435  002A' 2600'              	addwf	(??_isspace+2)^0,f,c
 24436  002C' 5000'              	movf	(??_isspace+1)^0,w,c
 24437  002E' 2200'              	addwfc	(??_isspace+3)^0,f,c
 24438  0030' 5000'              	movf	(??_isspace+3)^0,w,c
 24439  0032' E109               	bnz	u10830
 24440  0034' 0E05               	movlw	5
 24441  0036' 5C00'              	subwf	(??_isspace+2)^0,w,c
 24442  0038' A0D8               	btfss	status,0,c
 24443  003A' EF00' F000'        	goto	u10831
 24444  003E' EF00' F000'        	goto	u10830
 24445  0042'                    u10831:
 24446  0042' EF00' F000'        	goto	l9127
 24447  0046'                    u10830:
 24448  0046' 0E00               	movlw	0
 24449  0048' 6E00'              	movwf	_isspace$3453^0,c
 24450  004A'                    l9127:
 24451  004A' C013' F00D'        	movff	_isspace$3453,?_isspace
 24452  004E' 6A00'              	clrf	(?_isspace+1)^0,c
 24453  0050' 0012               	return		;funcret
 24454  0052'                    __end_of_isspace:
 24455                           	opt callstack 0
 24456                           
 24457 ;; *************** function _isdigit *****************
 24458 ;; Defined at:
 24459 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 24460 ;; Parameters:    Size  Location     Type
 24461 ;;  c               2   13[COMRAM] int 
 24462 ;; Auto vars:     Size  Location     Type
 24463 ;;		None
 24464 ;; Return value:  Size  Location     Type
 24465 ;;                  2   13[COMRAM] int 
 24466 ;; Registers used:
 24467 ;;		wreg, status,2, status,0
 24468 ;; Tracked objects:
 24469 ;;		On entry : 0/0
 24470 ;;		On exit  : 0/0
 24471 ;;		Unchanged: 0/0
 24472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 24473 ;;      Params:         2       0       0       0       0       0       0
 24474 ;;      Locals:         0       0       0       0       0       0       0
 24475 ;;      Temps:          4       0       0       0       0       0       0
 24476 ;;      Totals:         6       0       0       0       0       0       0
 24477 ;;Total ram usage:        6 bytes
 24478 ;; Hardware stack levels used:    1
 24479 ;; Hardware stack levels required when called:    2
 24480 ;; This function calls:
 24481 ;;		Nothing
 24482 ;; This function is called by:
 24483 ;;		_vfpfcnvrt
 24484 ;;		_atoi
 24485 ;;		___strtoxl
 24486 ;; This function uses a non-reentrant model
 24487 ;;
 24488                           
 24489                           	psect	text95
 24490  0000'                    __ptext95:
 24491                           	opt callstack 0
 24492  0000'                    _isdigit:
 24493                           	opt callstack 23
 24494  0000' 0ED0               	movlw	208
 24495  0002' 6E00'              	movwf	??_isdigit^0,c
 24496  0004' 0EFF               	movlw	255
 24497  0006' 6E00'              	movwf	(??_isdigit+1)^0,c
 24498  0008' C00D' F011'        	movff	isdigit@c,??_isdigit+2
 24499  000C' C00E' F012'        	movff	isdigit@c+1,??_isdigit+3
 24500  0010' 5000'              	movf	??_isdigit^0,w,c
 24501  0012' 2600'              	addwf	(??_isdigit+2)^0,f,c
 24502  0014' 5000'              	movf	(??_isdigit+1)^0,w,c
 24503  0016' 2200'              	addwfc	(??_isdigit+3)^0,f,c
 24504  0018' 5000'              	movf	(??_isdigit+3)^0,w,c
 24505  001A' E10A               	bnz	u10670
 24506  001C' 0E0A               	movlw	10
 24507  001E' 5C00'              	subwf	(??_isdigit+2)^0,w,c
 24508  0020' A0D8               	btfss	status,0,c
 24509  0022' EF00' F000'        	goto	u10671
 24510  0026' EF00' F000'        	goto	u10670
 24511  002A'                    u10671:
 24512  002A' 0E01               	movlw	1
 24513  002C' EF00' F000'        	goto	u10680
 24514  0030'                    u10670:
 24515  0030' 0E00               	movlw	0
 24516  0032'                    u10680:
 24517  0032' 6E00'              	movwf	?_isdigit^0,c
 24518  0034' 6A00'              	clrf	(?_isdigit+1)^0,c
 24519  0036' 0012               	return		;funcret
 24520  0038'                    __end_of_isdigit:
 24521                           	opt callstack 0
 24522                           
 24523 ;; *************** function ___wmul *****************
 24524 ;; Defined at:
 24525 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul16.c"
 24526 ;; Parameters:    Size  Location     Type
 24527 ;;  multiplier      2   20[COMRAM] unsigned int 
 24528 ;;  multiplicand    2   22[COMRAM] unsigned int 
 24529 ;; Auto vars:     Size  Location     Type
 24530 ;;  product         2   24[COMRAM] unsigned int 
 24531 ;; Return value:  Size  Location     Type
 24532 ;;                  2   20[COMRAM] unsigned int 
 24533 ;; Registers used:
 24534 ;;		wreg, status,2, status,0, prodl, prodh
 24535 ;; Tracked objects:
 24536 ;;		On entry : 0/0
 24537 ;;		On exit  : 0/0
 24538 ;;		Unchanged: 0/0
 24539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 24540 ;;      Params:         4       0       0       0       0       0       0
 24541 ;;      Locals:         2       0       0       0       0       0       0
 24542 ;;      Temps:          0       0       0       0       0       0       0
 24543 ;;      Totals:         6       0       0       0       0       0       0
 24544 ;;Total ram usage:        6 bytes
 24545 ;; Hardware stack levels used:    1
 24546 ;; Hardware stack levels required when called:    2
 24547 ;; This function calls:
 24548 ;;		Nothing
 24549 ;; This function is called by:
 24550 ;;		_adf4351_calc_counters
 24551 ;;		_atoi
 24552 ;;		_i2c_transfer_native
 24553 ;; This function uses a non-reentrant model
 24554 ;;
 24555                           
 24556                           	psect	text96
 24557  0000'                    __ptext96:
 24558                           	opt callstack 0
 24559  0000'                    ___wmul:
 24560                           	opt callstack 23
 24561  0000' 5000'              	movf	___wmul@multiplier^0,w,c
 24562  0002' 0200'              	mulwf	___wmul@multiplicand^0,c
 24563  0004' CFF3 F018'         	movff	prodl,___wmul@product
 24564  0008' CFF4 F019'         	movff	prodh,___wmul@product+1
 24565  000C' 5000'              	movf	___wmul@multiplier^0,w,c
 24566  000E' 0200'              	mulwf	(___wmul@multiplicand+1)^0,c
 24567  0010' 50F3               	movf	243,w,c
 24568  0012' 2600'              	addwf	(___wmul@product+1)^0,f,c
 24569  0014' 5000'              	movf	(___wmul@multiplier+1)^0,w,c
 24570  0016' 0200'              	mulwf	___wmul@multiplicand^0,c
 24571  0018' 50F3               	movf	243,w,c
 24572  001A' 2600'              	addwf	(___wmul@product+1)^0,f,c
 24573  001C' C018' F014'        	movff	___wmul@product,?___wmul
 24574  0020' C019' F015'        	movff	___wmul@product+1,?___wmul+1
 24575  0024' 0012               	return		;funcret
 24576  0026'                    __end_of___wmul:
 24577                           	opt callstack 0
 24578                           
 24579 ;; *************** function _adf4351_set_tune *****************
 24580 ;; Defined at:
 24581 ;;		line 203 in file "src/driver/adf4351.c"
 24582 ;; Parameters:    Size  Location     Type
 24583 ;;  ctx             2   13[COMRAM] PTR struct adf4351_ctx
 24584 ;;		 -> g_adf4351(55), 
 24585 ;;  icp             1   15[COMRAM] unsigned char 
 24586 ;;  pout            1   16[COMRAM] unsigned char 
 24587 ;;  lownoise        2   17[COMRAM] int 
 24588 ;; Auto vars:     Size  Location     Type
 24589 ;;		None
 24590 ;; Return value:  Size  Location     Type
 24591 ;;                  1    wreg      void 
 24592 ;; Registers used:
 24593 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24594 ;; Tracked objects:
 24595 ;;		On entry : 0/0
 24596 ;;		On exit  : 0/0
 24597 ;;		Unchanged: 0/0
 24598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 24599 ;;      Params:         6       0       0       0       0       0       0
 24600 ;;      Locals:         2       0       0       0       0       0       0
 24601 ;;      Temps:          0       0       0       0       0       0       0
 24602 ;;      Totals:         8       0       0       0       0       0       0
 24603 ;;Total ram usage:        8 bytes
 24604 ;; Hardware stack levels used:    1
 24605 ;; Hardware stack levels required when called:    2
 24606 ;; This function calls:
 24607 ;;		Nothing
 24608 ;; This function is called by:
 24609 ;;		_main
 24610 ;; This function uses a non-reentrant model
 24611 ;;
 24612                           
 24613                           	psect	text97
 24614  0000'                    __ptext97:
 24615                           	opt callstack 0
 24616  0000'                    _adf4351_set_tune:
 24617                           	opt callstack 28
 24618  0000'                    
 24619                           ;src/driver/adf4351.c: 203: void adf4351_set_tune(adf4351_ctx* ctx, u8 icp, u8 pout, BOO
      +                          L lownoise);src/driver/adf4351.c: 204: {;src/driver/adf4351.c: 206:     ctx->reg2.lownoi
      +                          se = lownoise?0:3;
 24620  0000' 5000'              	movf	adf4351_set_tune@lownoise^0,w,c
 24621  0002' 1000'              	iorwf	(adf4351_set_tune@lownoise+1)^0,w,c
 24622  0004' A4D8               	btfss	status,2,c
 24623  0006' EF00' F000'        	goto	u9141
 24624  000A' EF00' F000'        	goto	u9140
 24625  000E'                    u9141:
 24626  000E' EF00' F000'        	goto	l7925
 24627  0012'                    u9140:
 24628  0012' 0E00               	movlw	0
 24629  0014' 6E00'              	movwf	(_adf4351_set_tune$505+1)^0,c
 24630  0016' 0E03               	movlw	3
 24631  0018' 6E00'              	movwf	_adf4351_set_tune$505^0,c
 24632  001A' EF00' F000'        	goto	l7927
 24633  001E'                    l7925:
 24634  001E' 0E00               	movlw	0
 24635  0020' 6E00'              	movwf	(_adf4351_set_tune$505+1)^0,c
 24636  0022' 0E00               	movlw	0
 24637  0024' 6E00'              	movwf	_adf4351_set_tune$505^0,c
 24638  0026'                    l7927:
 24639  0026' EE20 F00B          	lfsr	2,11
 24640  002A' 5000'              	movf	adf4351_set_tune@ctx^0,w,c
 24641  002C' 26D9               	addwf	fsr2l,f,c
 24642  002E' 5000'              	movf	(adf4351_set_tune@ctx+1)^0,w,c
 24643  0030' 22DA               	addwfc	fsr2h,f,c
 24644  0032' C013' FFDF         	movff	_adf4351_set_tune$505,indf2
 24645  0036'                    
 24646                           ;src/driver/adf4351.c: 207:     ctx->reg2.cpc = icp;
 24647  0036' EE20 F012          	lfsr	2,18
 24648  003A' 5000'              	movf	adf4351_set_tune@ctx^0,w,c
 24649  003C' 26D9               	addwf	fsr2l,f,c
 24650  003E' 5000'              	movf	(adf4351_set_tune@ctx+1)^0,w,c
 24651  0040' 22DA               	addwfc	fsr2h,f,c
 24652  0042' C00F' FFDF         	movff	adf4351_set_tune@icp,indf2
 24653  0046'                    
 24654                           ;src/driver/adf4351.c: 208:     ctx->reg4.rfoutpwr = pout;
 24655  0046' EE20 F029          	lfsr	2,41
 24656  004A' 5000'              	movf	adf4351_set_tune@ctx^0,w,c
 24657  004C' 26D9               	addwf	fsr2l,f,c
 24658  004E' 5000'              	movf	(adf4351_set_tune@ctx+1)^0,w,c
 24659  0050' 22DA               	addwfc	fsr2h,f,c
 24660  0052' C010' FFDF         	movff	adf4351_set_tune@pout,indf2
 24661  0056' 0012               	return		;funcret
 24662  0058'                    __end_of_adf4351_set_tune:
 24663                           	opt callstack 0
 24664                           
 24665 ;; *************** function _adf4351_set_mode *****************
 24666 ;; Defined at:
 24667 ;;		line 178 in file "src/driver/adf4351.c"
 24668 ;; Parameters:    Size  Location     Type
 24669 ;;  ctx             2   39[COMRAM] PTR struct adf4351_ctx
 24670 ;;		 -> g_adf4351(55), 
 24671 ;;  enable          2   41[COMRAM] int 
 24672 ;; Auto vars:     Size  Location     Type
 24673 ;;		None
 24674 ;; Return value:  Size  Location     Type
 24675 ;;                  1    wreg      void 
 24676 ;; Registers used:
 24677 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24678 ;; Tracked objects:
 24679 ;;		On entry : 0/0
 24680 ;;		On exit  : 0/0
 24681 ;;		Unchanged: 0/0
 24682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 24683 ;;      Params:         4       0       0       0       0       0       0
 24684 ;;      Locals:         0       0       0       0       0       0       0
 24685 ;;      Temps:          2       0       0       0       0       0       0
 24686 ;;      Totals:         6       0       0       0       0       0       0
 24687 ;;Total ram usage:        6 bytes
 24688 ;; Hardware stack levels used:    1
 24689 ;; Hardware stack levels required when called:    5
 24690 ;; This function calls:
 24691 ;;		_adf4351_setup
 24692 ;;		_adf4351_write_reg2
 24693 ;;		_adf4351_write_reg4
 24694 ;; This function is called by:
 24695 ;;		_main
 24696 ;; This function uses a non-reentrant model
 24697 ;;
 24698                           
 24699                           	psect	text98
 24700  0000'                    __ptext98:
 24701                           	opt callstack 0
 24702  0000'                    _adf4351_set_mode:
 24703                           	opt callstack 25
 24704  0000'                    
 24705                           ;src/driver/adf4351.c: 178: void adf4351_set_mode(adf4351_ctx* ctx, BOOL enable);src/dri
      +                          ver/adf4351.c: 179: {;src/driver/adf4351.c: 181:  if(!ctx->init) return;
 24706  0000' C027' FFD9         	movff	adf4351_set_mode@ctx,fsr2l
 24707  0004' C028' FFDA         	movff	adf4351_set_mode@ctx+1,fsr2h
 24708  0008' 50DE               	movf	postinc2,w,c
 24709  000A' 10DE               	iorwf	postinc2,w,c
 24710  000C' A4D8               	btfss	status,2,c
 24711  000E' EF00' F000'        	goto	u9121
 24712  0012' EF00' F000'        	goto	u9120
 24713  0016'                    u9121:
 24714  0016' EF00' F000'        	goto	l7909
 24715  001A'                    u9120:
 24716  001A' EF00' F000'        	goto	l102
 24717  001E'                    l7909:
 24718                           
 24719                           ;src/driver/adf4351.c: 184:  if(enable) {
 24720  001E' 5000'              	movf	adf4351_set_mode@enable^0,w,c
 24721  0020' 1000'              	iorwf	(adf4351_set_mode@enable+1)^0,w,c
 24722  0022' B4D8               	btfsc	status,2,c
 24723  0024' EF00' F000'        	goto	u9131
 24724  0028' EF00' F000'        	goto	u9130
 24725  002C'                    u9131:
 24726  002C' EF00' F000'        	goto	l7915
 24727  0030'                    u9130:
 24728  0030'                    
 24729                           ;src/driver/adf4351.c: 185:   ctx->reg4.vcopd = 0;
 24730  0030' EE20 F023          	lfsr	2,35
 24731  0034' 5000'              	movf	adf4351_set_mode@ctx^0,w,c
 24732  0036' 26D9               	addwf	fsr2l,f,c
 24733  0038' 5000'              	movf	(adf4351_set_mode@ctx+1)^0,w,c
 24734  003A' 22DA               	addwfc	fsr2h,f,c
 24735  003C' 0E00               	movlw	0
 24736  003E' 6EDF               	movwf	indf2,c
 24737                           
 24738                           ;src/driver/adf4351.c: 186:   ctx->reg4.rfoutena = 1;
 24739  0040' EE20 F028          	lfsr	2,40
 24740  0044' 5000'              	movf	adf4351_set_mode@ctx^0,w,c
 24741  0046' 26D9               	addwf	fsr2l,f,c
 24742  0048' 5000'              	movf	(adf4351_set_mode@ctx+1)^0,w,c
 24743  004A' 22DA               	addwfc	fsr2h,f,c
 24744  004C' 0E01               	movlw	1
 24745  004E' 6EDF               	movwf	indf2,c
 24746                           
 24747                           ;src/driver/adf4351.c: 187:   ctx->reg2.pd = 0;
 24748  0050' EE20 F016          	lfsr	2,22
 24749  0054' 5000'              	movf	adf4351_set_mode@ctx^0,w,c
 24750  0056' 26D9               	addwf	fsr2l,f,c
 24751  0058' 5000'              	movf	(adf4351_set_mode@ctx+1)^0,w,c
 24752  005A' 22DA               	addwfc	fsr2h,f,c
 24753  005C' 0E00               	movlw	0
 24754  005E' 6EDF               	movwf	indf2,c
 24755  0060'                    
 24756                           ;src/driver/adf4351.c: 190:   adf4351_setup(ctx);
 24757  0060' C027' F025'        	movff	adf4351_set_mode@ctx,adf4351_setup@ctx
 24758  0064' C028' F026'        	movff	adf4351_set_mode@ctx+1,adf4351_setup@ctx+1
 24759  0068' EC00' F000'        	call	_adf4351_setup	;wreg free
 24760                           
 24761                           ;src/driver/adf4351.c: 191:  } else {
 24762  006C' EF00' F000'        	goto	l102
 24763  0070'                    l7915:
 24764                           
 24765                           ;src/driver/adf4351.c: 192:   ctx->reg4.vcopd = 1;
 24766  0070' EE20 F023          	lfsr	2,35
 24767  0074' 5000'              	movf	adf4351_set_mode@ctx^0,w,c
 24768  0076' 26D9               	addwf	fsr2l,f,c
 24769  0078' 5000'              	movf	(adf4351_set_mode@ctx+1)^0,w,c
 24770  007A' 22DA               	addwfc	fsr2h,f,c
 24771  007C' 0E01               	movlw	1
 24772  007E' 6EDF               	movwf	indf2,c
 24773                           
 24774                           ;src/driver/adf4351.c: 193:   ctx->reg4.rfoutena = 0;
 24775  0080' EE20 F028          	lfsr	2,40
 24776  0084' 5000'              	movf	adf4351_set_mode@ctx^0,w,c
 24777  0086' 26D9               	addwf	fsr2l,f,c
 24778  0088' 5000'              	movf	(adf4351_set_mode@ctx+1)^0,w,c
 24779  008A' 22DA               	addwfc	fsr2h,f,c
 24780  008C' 0E00               	movlw	0
 24781  008E' 6EDF               	movwf	indf2,c
 24782                           
 24783                           ;src/driver/adf4351.c: 194:   ctx->reg2.pd = 1;
 24784  0090' EE20 F016          	lfsr	2,22
 24785  0094' 5000'              	movf	adf4351_set_mode@ctx^0,w,c
 24786  0096' 26D9               	addwf	fsr2l,f,c
 24787  0098' 5000'              	movf	(adf4351_set_mode@ctx+1)^0,w,c
 24788  009A' 22DA               	addwfc	fsr2h,f,c
 24789  009C' 0E01               	movlw	1
 24790  009E' 6EDF               	movwf	indf2,c
 24791  00A0'                    
 24792                           ;src/driver/adf4351.c: 197:   adf4351_write_reg4(ctx);
 24793  00A0' C027' F019'        	movff	adf4351_set_mode@ctx,adf4351_write_reg4@ctx
 24794  00A4' C028' F01A'        	movff	adf4351_set_mode@ctx+1,adf4351_write_reg4@ctx+1
 24795  00A8' EC00' F000'        	call	_adf4351_write_reg4	;wreg free
 24796  00AC'                    
 24797                           ;src/driver/adf4351.c: 198:   adf4351_write_reg2(ctx);
 24798  00AC' C027' F019'        	movff	adf4351_set_mode@ctx,adf4351_write_reg2@ctx
 24799  00B0' C028' F01A'        	movff	adf4351_set_mode@ctx+1,adf4351_write_reg2@ctx+1
 24800  00B4' EC00' F000'        	call	_adf4351_write_reg2	;wreg free
 24801  00B8'                    l102:
 24802  00B8' 0012               	return		;funcret
 24803  00BA'                    __end_of_adf4351_set_mode:
 24804                           	opt callstack 0
 24805                           
 24806 ;; *************** function _adf4351_setup *****************
 24807 ;; Defined at:
 24808 ;;		line 230 in file "src/driver/adf4351.c"
 24809 ;; Parameters:    Size  Location     Type
 24810 ;;  ctx             2   37[COMRAM] PTR struct adf4351_ctx
 24811 ;;		 -> g_adf4351(55), 
 24812 ;; Auto vars:     Size  Location     Type
 24813 ;;		None
 24814 ;; Return value:  Size  Location     Type
 24815 ;;                  1    wreg      void 
 24816 ;; Registers used:
 24817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24818 ;; Tracked objects:
 24819 ;;		On entry : 0/0
 24820 ;;		On exit  : 0/0
 24821 ;;		Unchanged: 0/0
 24822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 24823 ;;      Params:         2       0       0       0       0       0       0
 24824 ;;      Locals:         0       0       0       0       0       0       0
 24825 ;;      Temps:          0       0       0       0       0       0       0
 24826 ;;      Totals:         2       0       0       0       0       0       0
 24827 ;;Total ram usage:        2 bytes
 24828 ;; Hardware stack levels used:    1
 24829 ;; Hardware stack levels required when called:    4
 24830 ;; This function calls:
 24831 ;;		_adf4351_write_reg0
 24832 ;;		_adf4351_write_reg1
 24833 ;;		_adf4351_write_reg2
 24834 ;;		_adf4351_write_reg3
 24835 ;;		_adf4351_write_reg4
 24836 ;;		_adf4351_write_reg5
 24837 ;; This function is called by:
 24838 ;;		_adf4351_set_freq
 24839 ;;		_adf4351_set_mode
 24840 ;; This function uses a non-reentrant model
 24841 ;;
 24842                           
 24843                           	psect	text99
 24844  0000'                    __ptext99:
 24845                           	opt callstack 0
 24846  0000'                    _adf4351_setup:
 24847                           	opt callstack 24
 24848  0000'                    
 24849                           ;src/driver/adf4351.c: 230: static void adf4351_setup(adf4351_ctx* ctx);src/driver/adf43
      +                          51.c: 231: {;src/driver/adf4351.c: 232:     adf4351_write_reg5(ctx);
 24850  0000' C025' F019'        	movff	adf4351_setup@ctx,adf4351_write_reg5@ctx
 24851  0004' C026' F01A'        	movff	adf4351_setup@ctx+1,adf4351_write_reg5@ctx+1
 24852  0008' EC00' F000'        	call	_adf4351_write_reg5	;wreg free
 24853                           
 24854                           ;src/driver/adf4351.c: 233:     adf4351_write_reg4(ctx);
 24855  000C' C025' F019'        	movff	adf4351_setup@ctx,adf4351_write_reg4@ctx
 24856  0010' C026' F01A'        	movff	adf4351_setup@ctx+1,adf4351_write_reg4@ctx+1
 24857  0014' EC00' F000'        	call	_adf4351_write_reg4	;wreg free
 24858                           
 24859                           ;src/driver/adf4351.c: 234:     adf4351_write_reg3(ctx);
 24860  0018' C025' F019'        	movff	adf4351_setup@ctx,adf4351_write_reg3@ctx
 24861  001C' C026' F01A'        	movff	adf4351_setup@ctx+1,adf4351_write_reg3@ctx+1
 24862  0020' EC00' F000'        	call	_adf4351_write_reg3	;wreg free
 24863                           
 24864                           ;src/driver/adf4351.c: 235:     adf4351_write_reg2(ctx);
 24865  0024' C025' F019'        	movff	adf4351_setup@ctx,adf4351_write_reg2@ctx
 24866  0028' C026' F01A'        	movff	adf4351_setup@ctx+1,adf4351_write_reg2@ctx+1
 24867  002C' EC00' F000'        	call	_adf4351_write_reg2	;wreg free
 24868                           
 24869                           ;src/driver/adf4351.c: 236:     adf4351_write_reg1(ctx);
 24870  0030' C025' F019'        	movff	adf4351_setup@ctx,adf4351_write_reg1@ctx
 24871  0034' C026' F01A'        	movff	adf4351_setup@ctx+1,adf4351_write_reg1@ctx+1
 24872  0038' EC00' F000'        	call	_adf4351_write_reg1	;wreg free
 24873                           
 24874                           ;src/driver/adf4351.c: 237:     adf4351_write_reg0(ctx);
 24875  003C' C025' F019'        	movff	adf4351_setup@ctx,adf4351_write_reg0@ctx
 24876  0040' C026' F01A'        	movff	adf4351_setup@ctx+1,adf4351_write_reg0@ctx+1
 24877  0044' EC00' F000'        	call	_adf4351_write_reg0	;wreg free
 24878  0048' 0012               	return		;funcret
 24879  004A'                    __end_of_adf4351_setup:
 24880                           	opt callstack 0
 24881                           
 24882 ;; *************** function _adf4351_write_reg5 *****************
 24883 ;; Defined at:
 24884 ;;		line 324 in file "src/driver/adf4351.c"
 24885 ;; Parameters:    Size  Location     Type
 24886 ;;  ctx             2   25[COMRAM] PTR struct adf4351_ctx
 24887 ;;		 -> g_adf4351(55), 
 24888 ;; Auto vars:     Size  Location     Type
 24889 ;;  data            4   32[COMRAM] unsigned long 
 24890 ;; Return value:  Size  Location     Type
 24891 ;;                  1    wreg      void 
 24892 ;; Registers used:
 24893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24894 ;; Tracked objects:
 24895 ;;		On entry : 0/0
 24896 ;;		On exit  : 0/0
 24897 ;;		Unchanged: 0/0
 24898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 24899 ;;      Params:         2       0       0       0       0       0       0
 24900 ;;      Locals:         4       0       0       0       0       0       0
 24901 ;;      Temps:          5       0       0       0       0       0       0
 24902 ;;      Totals:        11       0       0       0       0       0       0
 24903 ;;Total ram usage:       11 bytes
 24904 ;; Hardware stack levels used:    1
 24905 ;; Hardware stack levels required when called:    3
 24906 ;; This function calls:
 24907 ;;		_adf4351_write_latch
 24908 ;; This function is called by:
 24909 ;;		_adf4351_setup
 24910 ;; This function uses a non-reentrant model
 24911 ;;
 24912                           
 24913                           	psect	text100
 24914  0000'                    __ptext100:
 24915                           	opt callstack 0
 24916  0000'                    _adf4351_write_reg5:
 24917                           	opt callstack 24
 24918  0000'                    
 24919                           ;src/driver/adf4351.c: 324: static void adf4351_write_reg5(adf4351_ctx* ctx);src/driver/
      +                          adf4351.c: 325: {;src/driver/adf4351.c: 326:     if(ctx->init) {
 24920  0000' C019' FFD9         	movff	adf4351_write_reg5@ctx,fsr2l
 24921  0004' C01A' FFDA         	movff	adf4351_write_reg5@ctx+1,fsr2h
 24922  0008' 50DE               	movf	postinc2,w,c
 24923  000A' 10DE               	iorwf	postinc2,w,c
 24924  000C' B4D8               	btfsc	status,2,c
 24925  000E' EF00' F000'        	goto	u7251
 24926  0012' EF00' F000'        	goto	u7250
 24927  0016'                    u7251:
 24928  0016' EF00' F000'        	goto	l141
 24929  001A'                    u7250:
 24930  001A'                    
 24931                           ;src/driver/adf4351.c: 327:         u32 data = 5;
 24932  001A' 0E05               	movlw	5
 24933  001C' 6E00'              	movwf	adf4351_write_reg5@data^0,c
 24934  001E' 0E00               	movlw	0
 24935  0020' 6E00'              	movwf	(adf4351_write_reg5@data+1)^0,c
 24936  0022' 0E00               	movlw	0
 24937  0024' 6E00'              	movwf	(adf4351_write_reg5@data+2)^0,c
 24938  0026' 0E00               	movlw	0
 24939  0028' 6E00'              	movwf	(adf4351_write_reg5@data+3)^0,c
 24940  002A'                    
 24941                           ;src/driver/adf4351.c: 329:         data |= (((u32)ctx->reg5.ldpinmod&0x0003)<<22);
 24942  002A' EE20 F02A          	lfsr	2,42
 24943  002E' 5000'              	movf	adf4351_write_reg5@ctx^0,w,c
 24944  0030' 26D9               	addwf	fsr2l,f,c
 24945  0032' 5000'              	movf	(adf4351_write_reg5@ctx+1)^0,w,c
 24946  0034' 22DA               	addwfc	fsr2h,f,c
 24947  0036' 50DF               	movf	indf2,w,c
 24948  0038' 6E00'              	movwf	??_adf4351_write_reg5^0,c
 24949  003A' 0E03               	movlw	3
 24950  003C' 1600'              	andwf	??_adf4351_write_reg5^0,f,c
 24951  003E' C01B' F01C'        	movff	??_adf4351_write_reg5,??_adf4351_write_reg5+1
 24952  0042' 6A00'              	clrf	(??_adf4351_write_reg5+2)^0,c
 24953  0044' 6A00'              	clrf	(??_adf4351_write_reg5+3)^0,c
 24954  0046' 6A00'              	clrf	(??_adf4351_write_reg5+4)^0,c
 24955  0048' 0E16               	movlw	22
 24956  004A'                    u7265:
 24957  004A' 90D8               	bcf	status,0,c
 24958  004C' 3600'              	rlcf	(??_adf4351_write_reg5+1)^0,f,c
 24959  004E' 3600'              	rlcf	(??_adf4351_write_reg5+2)^0,f,c
 24960  0050' 3600'              	rlcf	(??_adf4351_write_reg5+3)^0,f,c
 24961  0052' 3600'              	rlcf	(??_adf4351_write_reg5+4)^0,f,c
 24962  0054' 2EE8               	decfsz	wreg,f,c
 24963  0056' EF00' F000'        	goto	u7265
 24964  005A' 5000'              	movf	(??_adf4351_write_reg5+1)^0,w,c
 24965  005C' 1200'              	iorwf	adf4351_write_reg5@data^0,f,c
 24966  005E' 5000'              	movf	(??_adf4351_write_reg5+2)^0,w,c
 24967  0060' 1200'              	iorwf	(adf4351_write_reg5@data+1)^0,f,c
 24968  0062' 5000'              	movf	(??_adf4351_write_reg5+3)^0,w,c
 24969  0064' 1200'              	iorwf	(adf4351_write_reg5@data+2)^0,f,c
 24970  0066' 5000'              	movf	(??_adf4351_write_reg5+4)^0,w,c
 24971  0068' 1200'              	iorwf	(adf4351_write_reg5@data+3)^0,f,c
 24972  006A'                    
 24973                           ;src/driver/adf4351.c: 331:         adf4351_write_latch(data);
 24974  006A' C020' F00D'        	movff	adf4351_write_reg5@data,adf4351_write_latch@value
 24975  006E' C021' F00E'        	movff	adf4351_write_reg5@data+1,adf4351_write_latch@value+1
 24976  0072' C022' F00F'        	movff	adf4351_write_reg5@data+2,adf4351_write_latch@value+2
 24977  0076' C023' F010'        	movff	adf4351_write_reg5@data+3,adf4351_write_latch@value+3
 24978  007A' EC00' F000'        	call	_adf4351_write_latch	;wreg free
 24979  007E'                    l141:
 24980  007E' 0012               	return		;funcret
 24981  0080'                    __end_of_adf4351_write_reg5:
 24982                           	opt callstack 0
 24983                           
 24984 ;; *************** function _adf4351_write_reg4 *****************
 24985 ;; Defined at:
 24986 ;;		line 304 in file "src/driver/adf4351.c"
 24987 ;; Parameters:    Size  Location     Type
 24988 ;;  ctx             2   25[COMRAM] PTR struct adf4351_ctx
 24989 ;;		 -> g_adf4351(55), 
 24990 ;; Auto vars:     Size  Location     Type
 24991 ;;  data            4   32[COMRAM] unsigned long 
 24992 ;; Return value:  Size  Location     Type
 24993 ;;                  1    wreg      void 
 24994 ;; Registers used:
 24995 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24996 ;; Tracked objects:
 24997 ;;		On entry : 0/0
 24998 ;;		On exit  : 0/0
 24999 ;;		Unchanged: 0/0
 25000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 25001 ;;      Params:         2       0       0       0       0       0       0
 25002 ;;      Locals:         4       0       0       0       0       0       0
 25003 ;;      Temps:          5       0       0       0       0       0       0
 25004 ;;      Totals:        11       0       0       0       0       0       0
 25005 ;;Total ram usage:       11 bytes
 25006 ;; Hardware stack levels used:    1
 25007 ;; Hardware stack levels required when called:    3
 25008 ;; This function calls:
 25009 ;;		_adf4351_write_latch
 25010 ;; This function is called by:
 25011 ;;		_adf4351_set_mode
 25012 ;;		_adf4351_setup
 25013 ;; This function uses a non-reentrant model
 25014 ;;
 25015                           
 25016                           	psect	text101
 25017  0000'                    __ptext101:
 25018                           	opt callstack 0
 25019  0000'                    _adf4351_write_reg4:
 25020                           	opt callstack 24
 25021  0000'                    
 25022                           ;src/driver/adf4351.c: 304: static void adf4351_write_reg4(adf4351_ctx* ctx);src/driver/
      +                          adf4351.c: 305: {;src/driver/adf4351.c: 306:     if(ctx->init) {
 25023  0000' C019' FFD9         	movff	adf4351_write_reg4@ctx,fsr2l
 25024  0004' C01A' FFDA         	movff	adf4351_write_reg4@ctx+1,fsr2h
 25025  0008' 50DE               	movf	postinc2,w,c
 25026  000A' 10DE               	iorwf	postinc2,w,c
 25027  000C' B4D8               	btfsc	status,2,c
 25028  000E' EF00' F000'        	goto	u7031
 25029  0012' EF00' F000'        	goto	u7030
 25030  0016'                    u7031:
 25031  0016' EF00' F000'        	goto	l137
 25032  001A'                    u7030:
 25033  001A'                    
 25034                           ;src/driver/adf4351.c: 307:         u32 data = 4;
 25035  001A' 0E04               	movlw	4
 25036  001C' 6E00'              	movwf	adf4351_write_reg4@data^0,c
 25037  001E' 0E00               	movlw	0
 25038  0020' 6E00'              	movwf	(adf4351_write_reg4@data+1)^0,c
 25039  0022' 0E00               	movlw	0
 25040  0024' 6E00'              	movwf	(adf4351_write_reg4@data+2)^0,c
 25041  0026' 0E00               	movlw	0
 25042  0028' 6E00'              	movwf	(adf4351_write_reg4@data+3)^0,c
 25043  002A'                    
 25044                           ;src/driver/adf4351.c: 309:         data |= (((u32)ctx->reg4.rfoutpwr&0x0003)<<3);
 25045  002A' EE20 F029          	lfsr	2,41
 25046  002E' 5000'              	movf	adf4351_write_reg4@ctx^0,w,c
 25047  0030' 26D9               	addwf	fsr2l,f,c
 25048  0032' 5000'              	movf	(adf4351_write_reg4@ctx+1)^0,w,c
 25049  0034' 22DA               	addwfc	fsr2h,f,c
 25050  0036' 50DF               	movf	indf2,w,c
 25051  0038' 6E00'              	movwf	??_adf4351_write_reg4^0,c
 25052  003A' 0E03               	movlw	3
 25053  003C' 1600'              	andwf	??_adf4351_write_reg4^0,f,c
 25054  003E' C01B' F01C'        	movff	??_adf4351_write_reg4,??_adf4351_write_reg4+1
 25055  0042' 6A00'              	clrf	(??_adf4351_write_reg4+2)^0,c
 25056  0044' 6A00'              	clrf	(??_adf4351_write_reg4+3)^0,c
 25057  0046' 6A00'              	clrf	(??_adf4351_write_reg4+4)^0,c
 25058  0048' 0E03               	movlw	3
 25059  004A'                    u7045:
 25060  004A' 90D8               	bcf	status,0,c
 25061  004C' 3600'              	rlcf	(??_adf4351_write_reg4+1)^0,f,c
 25062  004E' 3600'              	rlcf	(??_adf4351_write_reg4+2)^0,f,c
 25063  0050' 3600'              	rlcf	(??_adf4351_write_reg4+3)^0,f,c
 25064  0052' 3600'              	rlcf	(??_adf4351_write_reg4+4)^0,f,c
 25065  0054' 2EE8               	decfsz	wreg,f,c
 25066  0056' EF00' F000'        	goto	u7045
 25067  005A' 5000'              	movf	(??_adf4351_write_reg4+1)^0,w,c
 25068  005C' 1200'              	iorwf	adf4351_write_reg4@data^0,f,c
 25069  005E' 5000'              	movf	(??_adf4351_write_reg4+2)^0,w,c
 25070  0060' 1200'              	iorwf	(adf4351_write_reg4@data+1)^0,f,c
 25071  0062' 5000'              	movf	(??_adf4351_write_reg4+3)^0,w,c
 25072  0064' 1200'              	iorwf	(adf4351_write_reg4@data+2)^0,f,c
 25073  0066' 5000'              	movf	(??_adf4351_write_reg4+4)^0,w,c
 25074  0068' 1200'              	iorwf	(adf4351_write_reg4@data+3)^0,f,c
 25075  006A'                    
 25076                           ;src/driver/adf4351.c: 310:         data |= (((u32)ctx->reg4.rfoutena&0x0001)<<5);
 25077  006A' EE20 F028          	lfsr	2,40
 25078  006E' 5000'              	movf	adf4351_write_reg4@ctx^0,w,c
 25079  0070' 26D9               	addwf	fsr2l,f,c
 25080  0072' 5000'              	movf	(adf4351_write_reg4@ctx+1)^0,w,c
 25081  0074' 22DA               	addwfc	fsr2h,f,c
 25082  0076' 50DF               	movf	indf2,w,c
 25083  0078' 6E00'              	movwf	??_adf4351_write_reg4^0,c
 25084  007A' 0E01               	movlw	1
 25085  007C' 1600'              	andwf	??_adf4351_write_reg4^0,f,c
 25086  007E' C01B' F01C'        	movff	??_adf4351_write_reg4,??_adf4351_write_reg4+1
 25087  0082' 6A00'              	clrf	(??_adf4351_write_reg4+2)^0,c
 25088  0084' 6A00'              	clrf	(??_adf4351_write_reg4+3)^0,c
 25089  0086' 6A00'              	clrf	(??_adf4351_write_reg4+4)^0,c
 25090  0088' 0E05               	movlw	5
 25091  008A'                    u7055:
 25092  008A' 90D8               	bcf	status,0,c
 25093  008C' 3600'              	rlcf	(??_adf4351_write_reg4+1)^0,f,c
 25094  008E' 3600'              	rlcf	(??_adf4351_write_reg4+2)^0,f,c
 25095  0090' 3600'              	rlcf	(??_adf4351_write_reg4+3)^0,f,c
 25096  0092' 3600'              	rlcf	(??_adf4351_write_reg4+4)^0,f,c
 25097  0094' 2EE8               	decfsz	wreg,f,c
 25098  0096' EF00' F000'        	goto	u7055
 25099  009A' 5000'              	movf	(??_adf4351_write_reg4+1)^0,w,c
 25100  009C' 1200'              	iorwf	adf4351_write_reg4@data^0,f,c
 25101  009E' 5000'              	movf	(??_adf4351_write_reg4+2)^0,w,c
 25102  00A0' 1200'              	iorwf	(adf4351_write_reg4@data+1)^0,f,c
 25103  00A2' 5000'              	movf	(??_adf4351_write_reg4+3)^0,w,c
 25104  00A4' 1200'              	iorwf	(adf4351_write_reg4@data+2)^0,f,c
 25105  00A6' 5000'              	movf	(??_adf4351_write_reg4+4)^0,w,c
 25106  00A8' 1200'              	iorwf	(adf4351_write_reg4@data+3)^0,f,c
 25107  00AA'                    
 25108                           ;src/driver/adf4351.c: 311:         data |= (((u32)ctx->reg4.auxpwrout&0x0003)<<6);
 25109  00AA' EE20 F027          	lfsr	2,39
 25110  00AE' 5000'              	movf	adf4351_write_reg4@ctx^0,w,c
 25111  00B0' 26D9               	addwf	fsr2l,f,c
 25112  00B2' 5000'              	movf	(adf4351_write_reg4@ctx+1)^0,w,c
 25113  00B4' 22DA               	addwfc	fsr2h,f,c
 25114  00B6' 50DF               	movf	indf2,w,c
 25115  00B8' 6E00'              	movwf	??_adf4351_write_reg4^0,c
 25116  00BA' 0E03               	movlw	3
 25117  00BC' 1600'              	andwf	??_adf4351_write_reg4^0,f,c
 25118  00BE' C01B' F01C'        	movff	??_adf4351_write_reg4,??_adf4351_write_reg4+1
 25119  00C2' 6A00'              	clrf	(??_adf4351_write_reg4+2)^0,c
 25120  00C4' 6A00'              	clrf	(??_adf4351_write_reg4+3)^0,c
 25121  00C6' 6A00'              	clrf	(??_adf4351_write_reg4+4)^0,c
 25122  00C8' 0E06               	movlw	6
 25123  00CA'                    u7065:
 25124  00CA' 90D8               	bcf	status,0,c
 25125  00CC' 3600'              	rlcf	(??_adf4351_write_reg4+1)^0,f,c
 25126  00CE' 3600'              	rlcf	(??_adf4351_write_reg4+2)^0,f,c
 25127  00D0' 3600'              	rlcf	(??_adf4351_write_reg4+3)^0,f,c
 25128  00D2' 3600'              	rlcf	(??_adf4351_write_reg4+4)^0,f,c
 25129  00D4' 2EE8               	decfsz	wreg,f,c
 25130  00D6' EF00' F000'        	goto	u7065
 25131  00DA' 5000'              	movf	(??_adf4351_write_reg4+1)^0,w,c
 25132  00DC' 1200'              	iorwf	adf4351_write_reg4@data^0,f,c
 25133  00DE' 5000'              	movf	(??_adf4351_write_reg4+2)^0,w,c
 25134  00E0' 1200'              	iorwf	(adf4351_write_reg4@data+1)^0,f,c
 25135  00E2' 5000'              	movf	(??_adf4351_write_reg4+3)^0,w,c
 25136  00E4' 1200'              	iorwf	(adf4351_write_reg4@data+2)^0,f,c
 25137  00E6' 5000'              	movf	(??_adf4351_write_reg4+4)^0,w,c
 25138  00E8' 1200'              	iorwf	(adf4351_write_reg4@data+3)^0,f,c
 25139  00EA'                    
 25140                           ;src/driver/adf4351.c: 312:         data |= (((u32)ctx->reg4.auxoutena&0x0001)<<8);
 25141  00EA' EE20 F026          	lfsr	2,38
 25142  00EE' 5000'              	movf	adf4351_write_reg4@ctx^0,w,c
 25143  00F0' 26D9               	addwf	fsr2l,f,c
 25144  00F2' 5000'              	movf	(adf4351_write_reg4@ctx+1)^0,w,c
 25145  00F4' 22DA               	addwfc	fsr2h,f,c
 25146  00F6' 50DF               	movf	indf2,w,c
 25147  00F8' 6E00'              	movwf	??_adf4351_write_reg4^0,c
 25148  00FA' 0E01               	movlw	1
 25149  00FC' 1600'              	andwf	??_adf4351_write_reg4^0,f,c
 25150  00FE' C01B' F01C'        	movff	??_adf4351_write_reg4,??_adf4351_write_reg4+1
 25151  0102' 6A00'              	clrf	(??_adf4351_write_reg4+2)^0,c
 25152  0104' 6A00'              	clrf	(??_adf4351_write_reg4+3)^0,c
 25153  0106' 6A00'              	clrf	(??_adf4351_write_reg4+4)^0,c
 25154  0108' C01E' F01F'        	movff	??_adf4351_write_reg4+3,??_adf4351_write_reg4+4
 25155  010C' C01D' F01E'        	movff	??_adf4351_write_reg4+2,??_adf4351_write_reg4+3
 25156  0110' C01C' F01D'        	movff	??_adf4351_write_reg4+1,??_adf4351_write_reg4+2
 25157  0114' 6A00'              	clrf	(??_adf4351_write_reg4+1)^0,c
 25158  0116' 5000'              	movf	(??_adf4351_write_reg4+1)^0,w,c
 25159  0118' 1200'              	iorwf	adf4351_write_reg4@data^0,f,c
 25160  011A' 5000'              	movf	(??_adf4351_write_reg4+2)^0,w,c
 25161  011C' 1200'              	iorwf	(adf4351_write_reg4@data+1)^0,f,c
 25162  011E' 5000'              	movf	(??_adf4351_write_reg4+3)^0,w,c
 25163  0120' 1200'              	iorwf	(adf4351_write_reg4@data+2)^0,f,c
 25164  0122' 5000'              	movf	(??_adf4351_write_reg4+4)^0,w,c
 25165  0124' 1200'              	iorwf	(adf4351_write_reg4@data+3)^0,f,c
 25166  0126'                    
 25167                           ;src/driver/adf4351.c: 313:         data |= (((u32)ctx->reg4.auxoutsel&0x0001)<<9);
 25168  0126' EE20 F025          	lfsr	2,37
 25169  012A' 5000'              	movf	adf4351_write_reg4@ctx^0,w,c
 25170  012C' 26D9               	addwf	fsr2l,f,c
 25171  012E' 5000'              	movf	(adf4351_write_reg4@ctx+1)^0,w,c
 25172  0130' 22DA               	addwfc	fsr2h,f,c
 25173  0132' 50DF               	movf	indf2,w,c
 25174  0134' 6E00'              	movwf	??_adf4351_write_reg4^0,c
 25175  0136' 0E01               	movlw	1
 25176  0138' 1600'              	andwf	??_adf4351_write_reg4^0,f,c
 25177  013A' C01B' F01C'        	movff	??_adf4351_write_reg4,??_adf4351_write_reg4+1
 25178  013E' 6A00'              	clrf	(??_adf4351_write_reg4+2)^0,c
 25179  0140' 6A00'              	clrf	(??_adf4351_write_reg4+3)^0,c
 25180  0142' 6A00'              	clrf	(??_adf4351_write_reg4+4)^0,c
 25181  0144' 0E09               	movlw	9
 25182  0146'                    u7075:
 25183  0146' 90D8               	bcf	status,0,c
 25184  0148' 3600'              	rlcf	(??_adf4351_write_reg4+1)^0,f,c
 25185  014A' 3600'              	rlcf	(??_adf4351_write_reg4+2)^0,f,c
 25186  014C' 3600'              	rlcf	(??_adf4351_write_reg4+3)^0,f,c
 25187  014E' 3600'              	rlcf	(??_adf4351_write_reg4+4)^0,f,c
 25188  0150' 2EE8               	decfsz	wreg,f,c
 25189  0152' EF00' F000'        	goto	u7075
 25190  0156' 5000'              	movf	(??_adf4351_write_reg4+1)^0,w,c
 25191  0158' 1200'              	iorwf	adf4351_write_reg4@data^0,f,c
 25192  015A' 5000'              	movf	(??_adf4351_write_reg4+2)^0,w,c
 25193  015C' 1200'              	iorwf	(adf4351_write_reg4@data+1)^0,f,c
 25194  015E' 5000'              	movf	(??_adf4351_write_reg4+3)^0,w,c
 25195  0160' 1200'              	iorwf	(adf4351_write_reg4@data+2)^0,f,c
 25196  0162' 5000'              	movf	(??_adf4351_write_reg4+4)^0,w,c
 25197  0164' 1200'              	iorwf	(adf4351_write_reg4@data+3)^0,f,c
 25198  0166'                    
 25199                           ;src/driver/adf4351.c: 314:         data |= (((u32)ctx->reg4.mtld&0x0001)<<10);
 25200  0166' EE20 F024          	lfsr	2,36
 25201  016A' 5000'              	movf	adf4351_write_reg4@ctx^0,w,c
 25202  016C' 26D9               	addwf	fsr2l,f,c
 25203  016E' 5000'              	movf	(adf4351_write_reg4@ctx+1)^0,w,c
 25204  0170' 22DA               	addwfc	fsr2h,f,c
 25205  0172' 50DF               	movf	indf2,w,c
 25206  0174' 6E00'              	movwf	??_adf4351_write_reg4^0,c
 25207  0176' 0E01               	movlw	1
 25208  0178' 1600'              	andwf	??_adf4351_write_reg4^0,f,c
 25209  017A' C01B' F01C'        	movff	??_adf4351_write_reg4,??_adf4351_write_reg4+1
 25210  017E' 6A00'              	clrf	(??_adf4351_write_reg4+2)^0,c
 25211  0180' 6A00'              	clrf	(??_adf4351_write_reg4+3)^0,c
 25212  0182' 6A00'              	clrf	(??_adf4351_write_reg4+4)^0,c
 25213  0184' 0E0A               	movlw	10
 25214  0186'                    u7085:
 25215  0186' 90D8               	bcf	status,0,c
 25216  0188' 3600'              	rlcf	(??_adf4351_write_reg4+1)^0,f,c
 25217  018A' 3600'              	rlcf	(??_adf4351_write_reg4+2)^0,f,c
 25218  018C' 3600'              	rlcf	(??_adf4351_write_reg4+3)^0,f,c
 25219  018E' 3600'              	rlcf	(??_adf4351_write_reg4+4)^0,f,c
 25220  0190' 2EE8               	decfsz	wreg,f,c
 25221  0192' EF00' F000'        	goto	u7085
 25222  0196' 5000'              	movf	(??_adf4351_write_reg4+1)^0,w,c
 25223  0198' 1200'              	iorwf	adf4351_write_reg4@data^0,f,c
 25224  019A' 5000'              	movf	(??_adf4351_write_reg4+2)^0,w,c
 25225  019C' 1200'              	iorwf	(adf4351_write_reg4@data+1)^0,f,c
 25226  019E' 5000'              	movf	(??_adf4351_write_reg4+3)^0,w,c
 25227  01A0' 1200'              	iorwf	(adf4351_write_reg4@data+2)^0,f,c
 25228  01A2' 5000'              	movf	(??_adf4351_write_reg4+4)^0,w,c
 25229  01A4' 1200'              	iorwf	(adf4351_write_reg4@data+3)^0,f,c
 25230  01A6'                    
 25231                           ;src/driver/adf4351.c: 315:         data |= (((u32)ctx->reg4.vcopd&0x0001)<<11);
 25232  01A6' EE20 F023          	lfsr	2,35
 25233  01AA' 5000'              	movf	adf4351_write_reg4@ctx^0,w,c
 25234  01AC' 26D9               	addwf	fsr2l,f,c
 25235  01AE' 5000'              	movf	(adf4351_write_reg4@ctx+1)^0,w,c
 25236  01B0' 22DA               	addwfc	fsr2h,f,c
 25237  01B2' 50DF               	movf	indf2,w,c
 25238  01B4' 6E00'              	movwf	??_adf4351_write_reg4^0,c
 25239  01B6' 0E01               	movlw	1
 25240  01B8' 1600'              	andwf	??_adf4351_write_reg4^0,f,c
 25241  01BA' C01B' F01C'        	movff	??_adf4351_write_reg4,??_adf4351_write_reg4+1
 25242  01BE' 6A00'              	clrf	(??_adf4351_write_reg4+2)^0,c
 25243  01C0' 6A00'              	clrf	(??_adf4351_write_reg4+3)^0,c
 25244  01C2' 6A00'              	clrf	(??_adf4351_write_reg4+4)^0,c
 25245  01C4' 0E0B               	movlw	11
 25246  01C6'                    u7095:
 25247  01C6' 90D8               	bcf	status,0,c
 25248  01C8' 3600'              	rlcf	(??_adf4351_write_reg4+1)^0,f,c
 25249  01CA' 3600'              	rlcf	(??_adf4351_write_reg4+2)^0,f,c
 25250  01CC' 3600'              	rlcf	(??_adf4351_write_reg4+3)^0,f,c
 25251  01CE' 3600'              	rlcf	(??_adf4351_write_reg4+4)^0,f,c
 25252  01D0' 2EE8               	decfsz	wreg,f,c
 25253  01D2' EF00' F000'        	goto	u7095
 25254  01D6' 5000'              	movf	(??_adf4351_write_reg4+1)^0,w,c
 25255  01D8' 1200'              	iorwf	adf4351_write_reg4@data^0,f,c
 25256  01DA' 5000'              	movf	(??_adf4351_write_reg4+2)^0,w,c
 25257  01DC' 1200'              	iorwf	(adf4351_write_reg4@data+1)^0,f,c
 25258  01DE' 5000'              	movf	(??_adf4351_write_reg4+3)^0,w,c
 25259  01E0' 1200'              	iorwf	(adf4351_write_reg4@data+2)^0,f,c
 25260  01E2' 5000'              	movf	(??_adf4351_write_reg4+4)^0,w,c
 25261  01E4' 1200'              	iorwf	(adf4351_write_reg4@data+3)^0,f,c
 25262  01E6'                    
 25263                           ;src/driver/adf4351.c: 316:         data |= (((u32)ctx->reg4.bsclkdiv&0x00FF)<<12);
 25264  01E6' EE20 F022          	lfsr	2,34
 25265  01EA' 5000'              	movf	adf4351_write_reg4@ctx^0,w,c
 25266  01EC' 26D9               	addwf	fsr2l,f,c
 25267  01EE' 5000'              	movf	(adf4351_write_reg4@ctx+1)^0,w,c
 25268  01F0' 22DA               	addwfc	fsr2h,f,c
 25269  01F2' 50DF               	movf	indf2,w,c
 25270  01F4' 6E00'              	movwf	??_adf4351_write_reg4^0,c
 25271  01F6' C01B' F01C'        	movff	??_adf4351_write_reg4,??_adf4351_write_reg4+1
 25272  01FA' 6A00'              	clrf	(??_adf4351_write_reg4+2)^0,c
 25273  01FC' 6A00'              	clrf	(??_adf4351_write_reg4+3)^0,c
 25274  01FE' 6A00'              	clrf	(??_adf4351_write_reg4+4)^0,c
 25275  0200' 0E0C               	movlw	12
 25276  0202'                    u7105:
 25277  0202' 90D8               	bcf	status,0,c
 25278  0204' 3600'              	rlcf	(??_adf4351_write_reg4+1)^0,f,c
 25279  0206' 3600'              	rlcf	(??_adf4351_write_reg4+2)^0,f,c
 25280  0208' 3600'              	rlcf	(??_adf4351_write_reg4+3)^0,f,c
 25281  020A' 3600'              	rlcf	(??_adf4351_write_reg4+4)^0,f,c
 25282  020C' 2EE8               	decfsz	wreg,f,c
 25283  020E' EF00' F000'        	goto	u7105
 25284  0212' 5000'              	movf	(??_adf4351_write_reg4+1)^0,w,c
 25285  0214' 1200'              	iorwf	adf4351_write_reg4@data^0,f,c
 25286  0216' 5000'              	movf	(??_adf4351_write_reg4+2)^0,w,c
 25287  0218' 1200'              	iorwf	(adf4351_write_reg4@data+1)^0,f,c
 25288  021A' 5000'              	movf	(??_adf4351_write_reg4+3)^0,w,c
 25289  021C' 1200'              	iorwf	(adf4351_write_reg4@data+2)^0,f,c
 25290  021E' 5000'              	movf	(??_adf4351_write_reg4+4)^0,w,c
 25291  0220' 1200'              	iorwf	(adf4351_write_reg4@data+3)^0,f,c
 25292  0222'                    
 25293                           ;src/driver/adf4351.c: 317:         data |= (((u32)ctx->reg4.divsel&0x0007)<<20);
 25294  0222' EE20 F021          	lfsr	2,33
 25295  0226' 5000'              	movf	adf4351_write_reg4@ctx^0,w,c
 25296  0228' 26D9               	addwf	fsr2l,f,c
 25297  022A' 5000'              	movf	(adf4351_write_reg4@ctx+1)^0,w,c
 25298  022C' 22DA               	addwfc	fsr2h,f,c
 25299  022E' 50DF               	movf	indf2,w,c
 25300  0230' 6E00'              	movwf	??_adf4351_write_reg4^0,c
 25301  0232' 0E07               	movlw	7
 25302  0234' 1600'              	andwf	??_adf4351_write_reg4^0,f,c
 25303  0236' C01B' F01C'        	movff	??_adf4351_write_reg4,??_adf4351_write_reg4+1
 25304  023A' 6A00'              	clrf	(??_adf4351_write_reg4+2)^0,c
 25305  023C' 6A00'              	clrf	(??_adf4351_write_reg4+3)^0,c
 25306  023E' 6A00'              	clrf	(??_adf4351_write_reg4+4)^0,c
 25307  0240' 0E14               	movlw	20
 25308  0242'                    u7115:
 25309  0242' 90D8               	bcf	status,0,c
 25310  0244' 3600'              	rlcf	(??_adf4351_write_reg4+1)^0,f,c
 25311  0246' 3600'              	rlcf	(??_adf4351_write_reg4+2)^0,f,c
 25312  0248' 3600'              	rlcf	(??_adf4351_write_reg4+3)^0,f,c
 25313  024A' 3600'              	rlcf	(??_adf4351_write_reg4+4)^0,f,c
 25314  024C' 2EE8               	decfsz	wreg,f,c
 25315  024E' EF00' F000'        	goto	u7115
 25316  0252' 5000'              	movf	(??_adf4351_write_reg4+1)^0,w,c
 25317  0254' 1200'              	iorwf	adf4351_write_reg4@data^0,f,c
 25318  0256' 5000'              	movf	(??_adf4351_write_reg4+2)^0,w,c
 25319  0258' 1200'              	iorwf	(adf4351_write_reg4@data+1)^0,f,c
 25320  025A' 5000'              	movf	(??_adf4351_write_reg4+3)^0,w,c
 25321  025C' 1200'              	iorwf	(adf4351_write_reg4@data+2)^0,f,c
 25322  025E' 5000'              	movf	(??_adf4351_write_reg4+4)^0,w,c
 25323  0260' 1200'              	iorwf	(adf4351_write_reg4@data+3)^0,f,c
 25324  0262'                    
 25325                           ;src/driver/adf4351.c: 318:         data |= (((u32)ctx->reg4.fbsel&0x0001)<<23);
 25326  0262' EE20 F020          	lfsr	2,32
 25327  0266' 5000'              	movf	adf4351_write_reg4@ctx^0,w,c
 25328  0268' 26D9               	addwf	fsr2l,f,c
 25329  026A' 5000'              	movf	(adf4351_write_reg4@ctx+1)^0,w,c
 25330  026C' 22DA               	addwfc	fsr2h,f,c
 25331  026E' 50DF               	movf	indf2,w,c
 25332  0270' 6E00'              	movwf	??_adf4351_write_reg4^0,c
 25333  0272' 0E01               	movlw	1
 25334  0274' 1600'              	andwf	??_adf4351_write_reg4^0,f,c
 25335  0276' C01B' F01C'        	movff	??_adf4351_write_reg4,??_adf4351_write_reg4+1
 25336  027A' 6A00'              	clrf	(??_adf4351_write_reg4+2)^0,c
 25337  027C' 6A00'              	clrf	(??_adf4351_write_reg4+3)^0,c
 25338  027E' 6A00'              	clrf	(??_adf4351_write_reg4+4)^0,c
 25339  0280' 0E17               	movlw	23
 25340  0282'                    u7125:
 25341  0282' 90D8               	bcf	status,0,c
 25342  0284' 3600'              	rlcf	(??_adf4351_write_reg4+1)^0,f,c
 25343  0286' 3600'              	rlcf	(??_adf4351_write_reg4+2)^0,f,c
 25344  0288' 3600'              	rlcf	(??_adf4351_write_reg4+3)^0,f,c
 25345  028A' 3600'              	rlcf	(??_adf4351_write_reg4+4)^0,f,c
 25346  028C' 2EE8               	decfsz	wreg,f,c
 25347  028E' EF00' F000'        	goto	u7125
 25348  0292' 5000'              	movf	(??_adf4351_write_reg4+1)^0,w,c
 25349  0294' 1200'              	iorwf	adf4351_write_reg4@data^0,f,c
 25350  0296' 5000'              	movf	(??_adf4351_write_reg4+2)^0,w,c
 25351  0298' 1200'              	iorwf	(adf4351_write_reg4@data+1)^0,f,c
 25352  029A' 5000'              	movf	(??_adf4351_write_reg4+3)^0,w,c
 25353  029C' 1200'              	iorwf	(adf4351_write_reg4@data+2)^0,f,c
 25354  029E' 5000'              	movf	(??_adf4351_write_reg4+4)^0,w,c
 25355  02A0' 1200'              	iorwf	(adf4351_write_reg4@data+3)^0,f,c
 25356  02A2'                    
 25357                           ;src/driver/adf4351.c: 320:         adf4351_write_latch(data);
 25358  02A2' C020' F00D'        	movff	adf4351_write_reg4@data,adf4351_write_latch@value
 25359  02A6' C021' F00E'        	movff	adf4351_write_reg4@data+1,adf4351_write_latch@value+1
 25360  02AA' C022' F00F'        	movff	adf4351_write_reg4@data+2,adf4351_write_latch@value+2
 25361  02AE' C023' F010'        	movff	adf4351_write_reg4@data+3,adf4351_write_latch@value+3
 25362  02B2' EC00' F000'        	call	_adf4351_write_latch	;wreg free
 25363  02B6'                    l137:
 25364  02B6' 0012               	return		;funcret
 25365  02B8'                    __end_of_adf4351_write_reg4:
 25366                           	opt callstack 0
 25367                           
 25368 ;; *************** function _adf4351_write_reg3 *****************
 25369 ;; Defined at:
 25370 ;;		line 288 in file "src/driver/adf4351.c"
 25371 ;; Parameters:    Size  Location     Type
 25372 ;;  ctx             2   25[COMRAM] PTR struct adf4351_ctx
 25373 ;;		 -> g_adf4351(55), 
 25374 ;; Auto vars:     Size  Location     Type
 25375 ;;  data            4   33[COMRAM] unsigned long 
 25376 ;; Return value:  Size  Location     Type
 25377 ;;                  1    wreg      void 
 25378 ;; Registers used:
 25379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25380 ;; Tracked objects:
 25381 ;;		On entry : 0/0
 25382 ;;		On exit  : 0/0
 25383 ;;		Unchanged: 0/0
 25384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 25385 ;;      Params:         2       0       0       0       0       0       0
 25386 ;;      Locals:         4       0       0       0       0       0       0
 25387 ;;      Temps:          6       0       0       0       0       0       0
 25388 ;;      Totals:        12       0       0       0       0       0       0
 25389 ;;Total ram usage:       12 bytes
 25390 ;; Hardware stack levels used:    1
 25391 ;; Hardware stack levels required when called:    3
 25392 ;; This function calls:
 25393 ;;		_adf4351_write_latch
 25394 ;; This function is called by:
 25395 ;;		_adf4351_setup
 25396 ;; This function uses a non-reentrant model
 25397 ;;
 25398                           
 25399                           	psect	text102
 25400  0000'                    __ptext102:
 25401                           	opt callstack 0
 25402  0000'                    _adf4351_write_reg3:
 25403                           	opt callstack 24
 25404  0000'                    
 25405                           ;src/driver/adf4351.c: 288: static void adf4351_write_reg3(adf4351_ctx* ctx);src/driver/
      +                          adf4351.c: 289: {;src/driver/adf4351.c: 290:     if(ctx->init) {
 25406  0000' C019' FFD9         	movff	adf4351_write_reg3@ctx,fsr2l
 25407  0004' C01A' FFDA         	movff	adf4351_write_reg3@ctx+1,fsr2h
 25408  0008' 50DE               	movf	postinc2,w,c
 25409  000A' 10DE               	iorwf	postinc2,w,c
 25410  000C' B4D8               	btfsc	status,2,c
 25411  000E' EF00' F000'        	goto	u7271
 25412  0012' EF00' F000'        	goto	u7270
 25413  0016'                    u7271:
 25414  0016' EF00' F000'        	goto	l133
 25415  001A'                    u7270:
 25416  001A'                    
 25417                           ;src/driver/adf4351.c: 291:         u32 data = 3;
 25418  001A' 0E03               	movlw	3
 25419  001C' 6E00'              	movwf	adf4351_write_reg3@data^0,c
 25420  001E' 0E00               	movlw	0
 25421  0020' 6E00'              	movwf	(adf4351_write_reg3@data+1)^0,c
 25422  0022' 0E00               	movlw	0
 25423  0024' 6E00'              	movwf	(adf4351_write_reg3@data+2)^0,c
 25424  0026' 0E00               	movlw	0
 25425  0028' 6E00'              	movwf	(adf4351_write_reg3@data+3)^0,c
 25426  002A'                    
 25427                           ;src/driver/adf4351.c: 293:         data |= (((u32)ctx->reg3.clkdiv&0x0FFF)<<3);
 25428  002A' EE20 F01E          	lfsr	2,30
 25429  002E' 5000'              	movf	adf4351_write_reg3@ctx^0,w,c
 25430  0030' 26D9               	addwf	fsr2l,f,c
 25431  0032' 5000'              	movf	(adf4351_write_reg3@ctx+1)^0,w,c
 25432  0034' 22DA               	addwfc	fsr2h,f,c
 25433  0036' CFDE F01B'         	movff	postinc2,??_adf4351_write_reg3
 25434  003A' CFDD F01C'         	movff	postdec2,??_adf4351_write_reg3+1
 25435  003E' 0EFF               	movlw	255
 25436  0040' 1400'              	andwf	??_adf4351_write_reg3^0,w,c
 25437  0042' 6E00'              	movwf	(??_adf4351_write_reg3+2)^0,c
 25438  0044' 0E0F               	movlw	15
 25439  0046' 1400'              	andwf	(??_adf4351_write_reg3+1)^0,w,c
 25440  0048' 6E00'              	movwf	(??_adf4351_write_reg3+3)^0,c
 25441  004A' 6A00'              	clrf	(??_adf4351_write_reg3+4)^0,c
 25442  004C' 6A00'              	clrf	(??_adf4351_write_reg3+5)^0,c
 25443  004E' 0E03               	movlw	3
 25444  0050'                    u7285:
 25445  0050' 90D8               	bcf	status,0,c
 25446  0052' 3600'              	rlcf	(??_adf4351_write_reg3+2)^0,f,c
 25447  0054' 3600'              	rlcf	(??_adf4351_write_reg3+3)^0,f,c
 25448  0056' 3600'              	rlcf	(??_adf4351_write_reg3+4)^0,f,c
 25449  0058' 3600'              	rlcf	(??_adf4351_write_reg3+5)^0,f,c
 25450  005A' 2EE8               	decfsz	wreg,f,c
 25451  005C' EF00' F000'        	goto	u7285
 25452  0060' 5000'              	movf	(??_adf4351_write_reg3+2)^0,w,c
 25453  0062' 1200'              	iorwf	adf4351_write_reg3@data^0,f,c
 25454  0064' 5000'              	movf	(??_adf4351_write_reg3+3)^0,w,c
 25455  0066' 1200'              	iorwf	(adf4351_write_reg3@data+1)^0,f,c
 25456  0068' 5000'              	movf	(??_adf4351_write_reg3+4)^0,w,c
 25457  006A' 1200'              	iorwf	(adf4351_write_reg3@data+2)^0,f,c
 25458  006C' 5000'              	movf	(??_adf4351_write_reg3+5)^0,w,c
 25459  006E' 1200'              	iorwf	(adf4351_write_reg3@data+3)^0,f,c
 25460  0070'                    
 25461                           ;src/driver/adf4351.c: 294:         data |= (((u32)ctx->reg3.clkdivmode&0x0003)<<15);
 25462  0070' EE20 F01D          	lfsr	2,29
 25463  0074' 5000'              	movf	adf4351_write_reg3@ctx^0,w,c
 25464  0076' 26D9               	addwf	fsr2l,f,c
 25465  0078' 5000'              	movf	(adf4351_write_reg3@ctx+1)^0,w,c
 25466  007A' 22DA               	addwfc	fsr2h,f,c
 25467  007C' 50DF               	movf	indf2,w,c
 25468  007E' 6E00'              	movwf	??_adf4351_write_reg3^0,c
 25469  0080' 0E03               	movlw	3
 25470  0082' 1600'              	andwf	??_adf4351_write_reg3^0,f,c
 25471  0084' C01B' F01C'        	movff	??_adf4351_write_reg3,??_adf4351_write_reg3+1
 25472  0088' 6A00'              	clrf	(??_adf4351_write_reg3+2)^0,c
 25473  008A' 6A00'              	clrf	(??_adf4351_write_reg3+3)^0,c
 25474  008C' 6A00'              	clrf	(??_adf4351_write_reg3+4)^0,c
 25475  008E' 0E0F               	movlw	15
 25476  0090'                    u7295:
 25477  0090' 90D8               	bcf	status,0,c
 25478  0092' 3600'              	rlcf	(??_adf4351_write_reg3+1)^0,f,c
 25479  0094' 3600'              	rlcf	(??_adf4351_write_reg3+2)^0,f,c
 25480  0096' 3600'              	rlcf	(??_adf4351_write_reg3+3)^0,f,c
 25481  0098' 3600'              	rlcf	(??_adf4351_write_reg3+4)^0,f,c
 25482  009A' 2EE8               	decfsz	wreg,f,c
 25483  009C' EF00' F000'        	goto	u7295
 25484  00A0' 5000'              	movf	(??_adf4351_write_reg3+1)^0,w,c
 25485  00A2' 1200'              	iorwf	adf4351_write_reg3@data^0,f,c
 25486  00A4' 5000'              	movf	(??_adf4351_write_reg3+2)^0,w,c
 25487  00A6' 1200'              	iorwf	(adf4351_write_reg3@data+1)^0,f,c
 25488  00A8' 5000'              	movf	(??_adf4351_write_reg3+3)^0,w,c
 25489  00AA' 1200'              	iorwf	(adf4351_write_reg3@data+2)^0,f,c
 25490  00AC' 5000'              	movf	(??_adf4351_write_reg3+4)^0,w,c
 25491  00AE' 1200'              	iorwf	(adf4351_write_reg3@data+3)^0,f,c
 25492  00B0'                    
 25493                           ;src/driver/adf4351.c: 295:         data |= (((u32)ctx->reg3.csr&0x0001)<<18);
 25494  00B0' EE20 F01C          	lfsr	2,28
 25495  00B4' 5000'              	movf	adf4351_write_reg3@ctx^0,w,c
 25496  00B6' 26D9               	addwf	fsr2l,f,c
 25497  00B8' 5000'              	movf	(adf4351_write_reg3@ctx+1)^0,w,c
 25498  00BA' 22DA               	addwfc	fsr2h,f,c
 25499  00BC' 50DF               	movf	indf2,w,c
 25500  00BE' 6E00'              	movwf	??_adf4351_write_reg3^0,c
 25501  00C0' 0E01               	movlw	1
 25502  00C2' 1600'              	andwf	??_adf4351_write_reg3^0,f,c
 25503  00C4' C01B' F01C'        	movff	??_adf4351_write_reg3,??_adf4351_write_reg3+1
 25504  00C8' 6A00'              	clrf	(??_adf4351_write_reg3+2)^0,c
 25505  00CA' 6A00'              	clrf	(??_adf4351_write_reg3+3)^0,c
 25506  00CC' 6A00'              	clrf	(??_adf4351_write_reg3+4)^0,c
 25507  00CE' 0E12               	movlw	18
 25508  00D0'                    u7305:
 25509  00D0' 90D8               	bcf	status,0,c
 25510  00D2' 3600'              	rlcf	(??_adf4351_write_reg3+1)^0,f,c
 25511  00D4' 3600'              	rlcf	(??_adf4351_write_reg3+2)^0,f,c
 25512  00D6' 3600'              	rlcf	(??_adf4351_write_reg3+3)^0,f,c
 25513  00D8' 3600'              	rlcf	(??_adf4351_write_reg3+4)^0,f,c
 25514  00DA' 2EE8               	decfsz	wreg,f,c
 25515  00DC' EF00' F000'        	goto	u7305
 25516  00E0' 5000'              	movf	(??_adf4351_write_reg3+1)^0,w,c
 25517  00E2' 1200'              	iorwf	adf4351_write_reg3@data^0,f,c
 25518  00E4' 5000'              	movf	(??_adf4351_write_reg3+2)^0,w,c
 25519  00E6' 1200'              	iorwf	(adf4351_write_reg3@data+1)^0,f,c
 25520  00E8' 5000'              	movf	(??_adf4351_write_reg3+3)^0,w,c
 25521  00EA' 1200'              	iorwf	(adf4351_write_reg3@data+2)^0,f,c
 25522  00EC' 5000'              	movf	(??_adf4351_write_reg3+4)^0,w,c
 25523  00EE' 1200'              	iorwf	(adf4351_write_reg3@data+3)^0,f,c
 25524  00F0'                    
 25525                           ;src/driver/adf4351.c: 296:         data |= (((u32)ctx->reg3.chcancel&0x0001)<<21);
 25526  00F0' EE20 F01B          	lfsr	2,27
 25527  00F4' 5000'              	movf	adf4351_write_reg3@ctx^0,w,c
 25528  00F6' 26D9               	addwf	fsr2l,f,c
 25529  00F8' 5000'              	movf	(adf4351_write_reg3@ctx+1)^0,w,c
 25530  00FA' 22DA               	addwfc	fsr2h,f,c
 25531  00FC' 50DF               	movf	indf2,w,c
 25532  00FE' 6E00'              	movwf	??_adf4351_write_reg3^0,c
 25533  0100' 0E01               	movlw	1
 25534  0102' 1600'              	andwf	??_adf4351_write_reg3^0,f,c
 25535  0104' C01B' F01C'        	movff	??_adf4351_write_reg3,??_adf4351_write_reg3+1
 25536  0108' 6A00'              	clrf	(??_adf4351_write_reg3+2)^0,c
 25537  010A' 6A00'              	clrf	(??_adf4351_write_reg3+3)^0,c
 25538  010C' 6A00'              	clrf	(??_adf4351_write_reg3+4)^0,c
 25539  010E' 0E15               	movlw	21
 25540  0110'                    u7315:
 25541  0110' 90D8               	bcf	status,0,c
 25542  0112' 3600'              	rlcf	(??_adf4351_write_reg3+1)^0,f,c
 25543  0114' 3600'              	rlcf	(??_adf4351_write_reg3+2)^0,f,c
 25544  0116' 3600'              	rlcf	(??_adf4351_write_reg3+3)^0,f,c
 25545  0118' 3600'              	rlcf	(??_adf4351_write_reg3+4)^0,f,c
 25546  011A' 2EE8               	decfsz	wreg,f,c
 25547  011C' EF00' F000'        	goto	u7315
 25548  0120' 5000'              	movf	(??_adf4351_write_reg3+1)^0,w,c
 25549  0122' 1200'              	iorwf	adf4351_write_reg3@data^0,f,c
 25550  0124' 5000'              	movf	(??_adf4351_write_reg3+2)^0,w,c
 25551  0126' 1200'              	iorwf	(adf4351_write_reg3@data+1)^0,f,c
 25552  0128' 5000'              	movf	(??_adf4351_write_reg3+3)^0,w,c
 25553  012A' 1200'              	iorwf	(adf4351_write_reg3@data+2)^0,f,c
 25554  012C' 5000'              	movf	(??_adf4351_write_reg3+4)^0,w,c
 25555  012E' 1200'              	iorwf	(adf4351_write_reg3@data+3)^0,f,c
 25556  0130'                    
 25557                           ;src/driver/adf4351.c: 297:         data |= (((u32)ctx->reg3.abp&0x0001)<<22);
 25558  0130' EE20 F01A          	lfsr	2,26
 25559  0134' 5000'              	movf	adf4351_write_reg3@ctx^0,w,c
 25560  0136' 26D9               	addwf	fsr2l,f,c
 25561  0138' 5000'              	movf	(adf4351_write_reg3@ctx+1)^0,w,c
 25562  013A' 22DA               	addwfc	fsr2h,f,c
 25563  013C' 50DF               	movf	indf2,w,c
 25564  013E' 6E00'              	movwf	??_adf4351_write_reg3^0,c
 25565  0140' 0E01               	movlw	1
 25566  0142' 1600'              	andwf	??_adf4351_write_reg3^0,f,c
 25567  0144' C01B' F01C'        	movff	??_adf4351_write_reg3,??_adf4351_write_reg3+1
 25568  0148' 6A00'              	clrf	(??_adf4351_write_reg3+2)^0,c
 25569  014A' 6A00'              	clrf	(??_adf4351_write_reg3+3)^0,c
 25570  014C' 6A00'              	clrf	(??_adf4351_write_reg3+4)^0,c
 25571  014E' 0E16               	movlw	22
 25572  0150'                    u7325:
 25573  0150' 90D8               	bcf	status,0,c
 25574  0152' 3600'              	rlcf	(??_adf4351_write_reg3+1)^0,f,c
 25575  0154' 3600'              	rlcf	(??_adf4351_write_reg3+2)^0,f,c
 25576  0156' 3600'              	rlcf	(??_adf4351_write_reg3+3)^0,f,c
 25577  0158' 3600'              	rlcf	(??_adf4351_write_reg3+4)^0,f,c
 25578  015A' 2EE8               	decfsz	wreg,f,c
 25579  015C' EF00' F000'        	goto	u7325
 25580  0160' 5000'              	movf	(??_adf4351_write_reg3+1)^0,w,c
 25581  0162' 1200'              	iorwf	adf4351_write_reg3@data^0,f,c
 25582  0164' 5000'              	movf	(??_adf4351_write_reg3+2)^0,w,c
 25583  0166' 1200'              	iorwf	(adf4351_write_reg3@data+1)^0,f,c
 25584  0168' 5000'              	movf	(??_adf4351_write_reg3+3)^0,w,c
 25585  016A' 1200'              	iorwf	(adf4351_write_reg3@data+2)^0,f,c
 25586  016C' 5000'              	movf	(??_adf4351_write_reg3+4)^0,w,c
 25587  016E' 1200'              	iorwf	(adf4351_write_reg3@data+3)^0,f,c
 25588  0170'                    
 25589                           ;src/driver/adf4351.c: 298:         data |= (((u32)ctx->reg3.bscm&0x0001)<<23);
 25590  0170' EE20 F019          	lfsr	2,25
 25591  0174' 5000'              	movf	adf4351_write_reg3@ctx^0,w,c
 25592  0176' 26D9               	addwf	fsr2l,f,c
 25593  0178' 5000'              	movf	(adf4351_write_reg3@ctx+1)^0,w,c
 25594  017A' 22DA               	addwfc	fsr2h,f,c
 25595  017C' 50DF               	movf	indf2,w,c
 25596  017E' 6E00'              	movwf	??_adf4351_write_reg3^0,c
 25597  0180' 0E01               	movlw	1
 25598  0182' 1600'              	andwf	??_adf4351_write_reg3^0,f,c
 25599  0184' C01B' F01C'        	movff	??_adf4351_write_reg3,??_adf4351_write_reg3+1
 25600  0188' 6A00'              	clrf	(??_adf4351_write_reg3+2)^0,c
 25601  018A' 6A00'              	clrf	(??_adf4351_write_reg3+3)^0,c
 25602  018C' 6A00'              	clrf	(??_adf4351_write_reg3+4)^0,c
 25603  018E' 0E17               	movlw	23
 25604  0190'                    u7335:
 25605  0190' 90D8               	bcf	status,0,c
 25606  0192' 3600'              	rlcf	(??_adf4351_write_reg3+1)^0,f,c
 25607  0194' 3600'              	rlcf	(??_adf4351_write_reg3+2)^0,f,c
 25608  0196' 3600'              	rlcf	(??_adf4351_write_reg3+3)^0,f,c
 25609  0198' 3600'              	rlcf	(??_adf4351_write_reg3+4)^0,f,c
 25610  019A' 2EE8               	decfsz	wreg,f,c
 25611  019C' EF00' F000'        	goto	u7335
 25612  01A0' 5000'              	movf	(??_adf4351_write_reg3+1)^0,w,c
 25613  01A2' 1200'              	iorwf	adf4351_write_reg3@data^0,f,c
 25614  01A4' 5000'              	movf	(??_adf4351_write_reg3+2)^0,w,c
 25615  01A6' 1200'              	iorwf	(adf4351_write_reg3@data+1)^0,f,c
 25616  01A8' 5000'              	movf	(??_adf4351_write_reg3+3)^0,w,c
 25617  01AA' 1200'              	iorwf	(adf4351_write_reg3@data+2)^0,f,c
 25618  01AC' 5000'              	movf	(??_adf4351_write_reg3+4)^0,w,c
 25619  01AE' 1200'              	iorwf	(adf4351_write_reg3@data+3)^0,f,c
 25620  01B0'                    
 25621                           ;src/driver/adf4351.c: 300:         adf4351_write_latch(data);
 25622  01B0' C021' F00D'        	movff	adf4351_write_reg3@data,adf4351_write_latch@value
 25623  01B4' C022' F00E'        	movff	adf4351_write_reg3@data+1,adf4351_write_latch@value+1
 25624  01B8' C023' F00F'        	movff	adf4351_write_reg3@data+2,adf4351_write_latch@value+2
 25625  01BC' C024' F010'        	movff	adf4351_write_reg3@data+3,adf4351_write_latch@value+3
 25626  01C0' EC00' F000'        	call	_adf4351_write_latch	;wreg free
 25627  01C4'                    l133:
 25628  01C4' 0012               	return		;funcret
 25629  01C6'                    __end_of_adf4351_write_reg3:
 25630                           	opt callstack 0
 25631                           
 25632 ;; *************** function _adf4351_write_reg2 *****************
 25633 ;; Defined at:
 25634 ;;		line 265 in file "src/driver/adf4351.c"
 25635 ;; Parameters:    Size  Location     Type
 25636 ;;  ctx             2   25[COMRAM] PTR struct adf4351_ctx
 25637 ;;		 -> g_adf4351(55), 
 25638 ;; Auto vars:     Size  Location     Type
 25639 ;;  data            4   33[COMRAM] unsigned long 
 25640 ;; Return value:  Size  Location     Type
 25641 ;;                  1    wreg      void 
 25642 ;; Registers used:
 25643 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25644 ;; Tracked objects:
 25645 ;;		On entry : 0/0
 25646 ;;		On exit  : 0/0
 25647 ;;		Unchanged: 0/0
 25648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 25649 ;;      Params:         2       0       0       0       0       0       0
 25650 ;;      Locals:         4       0       0       0       0       0       0
 25651 ;;      Temps:          6       0       0       0       0       0       0
 25652 ;;      Totals:        12       0       0       0       0       0       0
 25653 ;;Total ram usage:       12 bytes
 25654 ;; Hardware stack levels used:    1
 25655 ;; Hardware stack levels required when called:    3
 25656 ;; This function calls:
 25657 ;;		_adf4351_write_latch
 25658 ;; This function is called by:
 25659 ;;		_adf4351_set_mode
 25660 ;;		_adf4351_setup
 25661 ;; This function uses a non-reentrant model
 25662 ;;
 25663                           
 25664                           	psect	text103
 25665  0000'                    __ptext103:
 25666                           	opt callstack 0
 25667  0000'                    _adf4351_write_reg2:
 25668                           	opt callstack 24
 25669  0000'                    
 25670                           ;src/driver/adf4351.c: 265: static void adf4351_write_reg2(adf4351_ctx* ctx);src/driver/
      +                          adf4351.c: 266: {;src/driver/adf4351.c: 267:     if(ctx->init) {
 25671  0000' C019' FFD9         	movff	adf4351_write_reg2@ctx,fsr2l
 25672  0004' C01A' FFDA         	movff	adf4351_write_reg2@ctx+1,fsr2h
 25673  0008' 50DE               	movf	postinc2,w,c
 25674  000A' 10DE               	iorwf	postinc2,w,c
 25675  000C' B4D8               	btfsc	status,2,c
 25676  000E' EF00' F000'        	goto	u7131
 25677  0012' EF00' F000'        	goto	u7130
 25678  0016'                    u7131:
 25679  0016' EF00' F000'        	goto	l129
 25680  001A'                    u7130:
 25681  001A'                    
 25682                           ;src/driver/adf4351.c: 268:         u32 data = 2;
 25683  001A' 0E02               	movlw	2
 25684  001C' 6E00'              	movwf	adf4351_write_reg2@data^0,c
 25685  001E' 0E00               	movlw	0
 25686  0020' 6E00'              	movwf	(adf4351_write_reg2@data+1)^0,c
 25687  0022' 0E00               	movlw	0
 25688  0024' 6E00'              	movwf	(adf4351_write_reg2@data+2)^0,c
 25689  0026' 0E00               	movlw	0
 25690  0028' 6E00'              	movwf	(adf4351_write_reg2@data+3)^0,c
 25691  002A'                    
 25692                           ;src/driver/adf4351.c: 270:         data |= (((u32)ctx->reg2.cntreset&0x0001)<<3);
 25693  002A' EE20 F018          	lfsr	2,24
 25694  002E' 5000'              	movf	adf4351_write_reg2@ctx^0,w,c
 25695  0030' 26D9               	addwf	fsr2l,f,c
 25696  0032' 5000'              	movf	(adf4351_write_reg2@ctx+1)^0,w,c
 25697  0034' 22DA               	addwfc	fsr2h,f,c
 25698  0036' 50DF               	movf	indf2,w,c
 25699  0038' 6E00'              	movwf	??_adf4351_write_reg2^0,c
 25700  003A' 0E01               	movlw	1
 25701  003C' 1600'              	andwf	??_adf4351_write_reg2^0,f,c
 25702  003E' C01B' F01C'        	movff	??_adf4351_write_reg2,??_adf4351_write_reg2+1
 25703  0042' 6A00'              	clrf	(??_adf4351_write_reg2+2)^0,c
 25704  0044' 6A00'              	clrf	(??_adf4351_write_reg2+3)^0,c
 25705  0046' 6A00'              	clrf	(??_adf4351_write_reg2+4)^0,c
 25706  0048' 0E03               	movlw	3
 25707  004A'                    u7145:
 25708  004A' 90D8               	bcf	status,0,c
 25709  004C' 3600'              	rlcf	(??_adf4351_write_reg2+1)^0,f,c
 25710  004E' 3600'              	rlcf	(??_adf4351_write_reg2+2)^0,f,c
 25711  0050' 3600'              	rlcf	(??_adf4351_write_reg2+3)^0,f,c
 25712  0052' 3600'              	rlcf	(??_adf4351_write_reg2+4)^0,f,c
 25713  0054' 2EE8               	decfsz	wreg,f,c
 25714  0056' EF00' F000'        	goto	u7145
 25715  005A' 5000'              	movf	(??_adf4351_write_reg2+1)^0,w,c
 25716  005C' 1200'              	iorwf	adf4351_write_reg2@data^0,f,c
 25717  005E' 5000'              	movf	(??_adf4351_write_reg2+2)^0,w,c
 25718  0060' 1200'              	iorwf	(adf4351_write_reg2@data+1)^0,f,c
 25719  0062' 5000'              	movf	(??_adf4351_write_reg2+3)^0,w,c
 25720  0064' 1200'              	iorwf	(adf4351_write_reg2@data+2)^0,f,c
 25721  0066' 5000'              	movf	(??_adf4351_write_reg2+4)^0,w,c
 25722  0068' 1200'              	iorwf	(adf4351_write_reg2@data+3)^0,f,c
 25723  006A'                    
 25724                           ;src/driver/adf4351.c: 271:         data |= (((u32)ctx->reg2.cpts&0x0001)<<4);
 25725  006A' EE20 F017          	lfsr	2,23
 25726  006E' 5000'              	movf	adf4351_write_reg2@ctx^0,w,c
 25727  0070' 26D9               	addwf	fsr2l,f,c
 25728  0072' 5000'              	movf	(adf4351_write_reg2@ctx+1)^0,w,c
 25729  0074' 22DA               	addwfc	fsr2h,f,c
 25730  0076' 50DF               	movf	indf2,w,c
 25731  0078' 6E00'              	movwf	??_adf4351_write_reg2^0,c
 25732  007A' 0E01               	movlw	1
 25733  007C' 1600'              	andwf	??_adf4351_write_reg2^0,f,c
 25734  007E' C01B' F01C'        	movff	??_adf4351_write_reg2,??_adf4351_write_reg2+1
 25735  0082' 6A00'              	clrf	(??_adf4351_write_reg2+2)^0,c
 25736  0084' 6A00'              	clrf	(??_adf4351_write_reg2+3)^0,c
 25737  0086' 6A00'              	clrf	(??_adf4351_write_reg2+4)^0,c
 25738  0088' 0E04               	movlw	4
 25739  008A'                    u7155:
 25740  008A' 90D8               	bcf	status,0,c
 25741  008C' 3600'              	rlcf	(??_adf4351_write_reg2+1)^0,f,c
 25742  008E' 3600'              	rlcf	(??_adf4351_write_reg2+2)^0,f,c
 25743  0090' 3600'              	rlcf	(??_adf4351_write_reg2+3)^0,f,c
 25744  0092' 3600'              	rlcf	(??_adf4351_write_reg2+4)^0,f,c
 25745  0094' 2EE8               	decfsz	wreg,f,c
 25746  0096' EF00' F000'        	goto	u7155
 25747  009A' 5000'              	movf	(??_adf4351_write_reg2+1)^0,w,c
 25748  009C' 1200'              	iorwf	adf4351_write_reg2@data^0,f,c
 25749  009E' 5000'              	movf	(??_adf4351_write_reg2+2)^0,w,c
 25750  00A0' 1200'              	iorwf	(adf4351_write_reg2@data+1)^0,f,c
 25751  00A2' 5000'              	movf	(??_adf4351_write_reg2+3)^0,w,c
 25752  00A4' 1200'              	iorwf	(adf4351_write_reg2@data+2)^0,f,c
 25753  00A6' 5000'              	movf	(??_adf4351_write_reg2+4)^0,w,c
 25754  00A8' 1200'              	iorwf	(adf4351_write_reg2@data+3)^0,f,c
 25755  00AA'                    
 25756                           ;src/driver/adf4351.c: 272:         data |= (((u32)ctx->reg2.pd&0x0001)<<5);
 25757  00AA' EE20 F016          	lfsr	2,22
 25758  00AE' 5000'              	movf	adf4351_write_reg2@ctx^0,w,c
 25759  00B0' 26D9               	addwf	fsr2l,f,c
 25760  00B2' 5000'              	movf	(adf4351_write_reg2@ctx+1)^0,w,c
 25761  00B4' 22DA               	addwfc	fsr2h,f,c
 25762  00B6' 50DF               	movf	indf2,w,c
 25763  00B8' 6E00'              	movwf	??_adf4351_write_reg2^0,c
 25764  00BA' 0E01               	movlw	1
 25765  00BC' 1600'              	andwf	??_adf4351_write_reg2^0,f,c
 25766  00BE' C01B' F01C'        	movff	??_adf4351_write_reg2,??_adf4351_write_reg2+1
 25767  00C2' 6A00'              	clrf	(??_adf4351_write_reg2+2)^0,c
 25768  00C4' 6A00'              	clrf	(??_adf4351_write_reg2+3)^0,c
 25769  00C6' 6A00'              	clrf	(??_adf4351_write_reg2+4)^0,c
 25770  00C8' 0E05               	movlw	5
 25771  00CA'                    u7165:
 25772  00CA' 90D8               	bcf	status,0,c
 25773  00CC' 3600'              	rlcf	(??_adf4351_write_reg2+1)^0,f,c
 25774  00CE' 3600'              	rlcf	(??_adf4351_write_reg2+2)^0,f,c
 25775  00D0' 3600'              	rlcf	(??_adf4351_write_reg2+3)^0,f,c
 25776  00D2' 3600'              	rlcf	(??_adf4351_write_reg2+4)^0,f,c
 25777  00D4' 2EE8               	decfsz	wreg,f,c
 25778  00D6' EF00' F000'        	goto	u7165
 25779  00DA' 5000'              	movf	(??_adf4351_write_reg2+1)^0,w,c
 25780  00DC' 1200'              	iorwf	adf4351_write_reg2@data^0,f,c
 25781  00DE' 5000'              	movf	(??_adf4351_write_reg2+2)^0,w,c
 25782  00E0' 1200'              	iorwf	(adf4351_write_reg2@data+1)^0,f,c
 25783  00E2' 5000'              	movf	(??_adf4351_write_reg2+3)^0,w,c
 25784  00E4' 1200'              	iorwf	(adf4351_write_reg2@data+2)^0,f,c
 25785  00E6' 5000'              	movf	(??_adf4351_write_reg2+4)^0,w,c
 25786  00E8' 1200'              	iorwf	(adf4351_write_reg2@data+3)^0,f,c
 25787  00EA'                    
 25788                           ;src/driver/adf4351.c: 273:         data |= (((u32)ctx->reg2.pdpol&0x0001)<<6);
 25789  00EA' EE20 F015          	lfsr	2,21
 25790  00EE' 5000'              	movf	adf4351_write_reg2@ctx^0,w,c
 25791  00F0' 26D9               	addwf	fsr2l,f,c
 25792  00F2' 5000'              	movf	(adf4351_write_reg2@ctx+1)^0,w,c
 25793  00F4' 22DA               	addwfc	fsr2h,f,c
 25794  00F6' 50DF               	movf	indf2,w,c
 25795  00F8' 6E00'              	movwf	??_adf4351_write_reg2^0,c
 25796  00FA' 0E01               	movlw	1
 25797  00FC' 1600'              	andwf	??_adf4351_write_reg2^0,f,c
 25798  00FE' C01B' F01C'        	movff	??_adf4351_write_reg2,??_adf4351_write_reg2+1
 25799  0102' 6A00'              	clrf	(??_adf4351_write_reg2+2)^0,c
 25800  0104' 6A00'              	clrf	(??_adf4351_write_reg2+3)^0,c
 25801  0106' 6A00'              	clrf	(??_adf4351_write_reg2+4)^0,c
 25802  0108' 0E06               	movlw	6
 25803  010A'                    u7175:
 25804  010A' 90D8               	bcf	status,0,c
 25805  010C' 3600'              	rlcf	(??_adf4351_write_reg2+1)^0,f,c
 25806  010E' 3600'              	rlcf	(??_adf4351_write_reg2+2)^0,f,c
 25807  0110' 3600'              	rlcf	(??_adf4351_write_reg2+3)^0,f,c
 25808  0112' 3600'              	rlcf	(??_adf4351_write_reg2+4)^0,f,c
 25809  0114' 2EE8               	decfsz	wreg,f,c
 25810  0116' EF00' F000'        	goto	u7175
 25811  011A' 5000'              	movf	(??_adf4351_write_reg2+1)^0,w,c
 25812  011C' 1200'              	iorwf	adf4351_write_reg2@data^0,f,c
 25813  011E' 5000'              	movf	(??_adf4351_write_reg2+2)^0,w,c
 25814  0120' 1200'              	iorwf	(adf4351_write_reg2@data+1)^0,f,c
 25815  0122' 5000'              	movf	(??_adf4351_write_reg2+3)^0,w,c
 25816  0124' 1200'              	iorwf	(adf4351_write_reg2@data+2)^0,f,c
 25817  0126' 5000'              	movf	(??_adf4351_write_reg2+4)^0,w,c
 25818  0128' 1200'              	iorwf	(adf4351_write_reg2@data+3)^0,f,c
 25819  012A'                    
 25820                           ;src/driver/adf4351.c: 274:         data |= (((u32)ctx->reg2.ldp&0x0001)<<7);
 25821  012A' EE20 F014          	lfsr	2,20
 25822  012E' 5000'              	movf	adf4351_write_reg2@ctx^0,w,c
 25823  0130' 26D9               	addwf	fsr2l,f,c
 25824  0132' 5000'              	movf	(adf4351_write_reg2@ctx+1)^0,w,c
 25825  0134' 22DA               	addwfc	fsr2h,f,c
 25826  0136' 50DF               	movf	indf2,w,c
 25827  0138' 6E00'              	movwf	??_adf4351_write_reg2^0,c
 25828  013A' 0E01               	movlw	1
 25829  013C' 1600'              	andwf	??_adf4351_write_reg2^0,f,c
 25830  013E' C01B' F01C'        	movff	??_adf4351_write_reg2,??_adf4351_write_reg2+1
 25831  0142' 6A00'              	clrf	(??_adf4351_write_reg2+2)^0,c
 25832  0144' 6A00'              	clrf	(??_adf4351_write_reg2+3)^0,c
 25833  0146' 6A00'              	clrf	(??_adf4351_write_reg2+4)^0,c
 25834  0148' 0E07               	movlw	7
 25835  014A'                    u7185:
 25836  014A' 90D8               	bcf	status,0,c
 25837  014C' 3600'              	rlcf	(??_adf4351_write_reg2+1)^0,f,c
 25838  014E' 3600'              	rlcf	(??_adf4351_write_reg2+2)^0,f,c
 25839  0150' 3600'              	rlcf	(??_adf4351_write_reg2+3)^0,f,c
 25840  0152' 3600'              	rlcf	(??_adf4351_write_reg2+4)^0,f,c
 25841  0154' 2EE8               	decfsz	wreg,f,c
 25842  0156' EF00' F000'        	goto	u7185
 25843  015A' 5000'              	movf	(??_adf4351_write_reg2+1)^0,w,c
 25844  015C' 1200'              	iorwf	adf4351_write_reg2@data^0,f,c
 25845  015E' 5000'              	movf	(??_adf4351_write_reg2+2)^0,w,c
 25846  0160' 1200'              	iorwf	(adf4351_write_reg2@data+1)^0,f,c
 25847  0162' 5000'              	movf	(??_adf4351_write_reg2+3)^0,w,c
 25848  0164' 1200'              	iorwf	(adf4351_write_reg2@data+2)^0,f,c
 25849  0166' 5000'              	movf	(??_adf4351_write_reg2+4)^0,w,c
 25850  0168' 1200'              	iorwf	(adf4351_write_reg2@data+3)^0,f,c
 25851  016A'                    
 25852                           ;src/driver/adf4351.c: 275:         data |= (((u32)ctx->reg2.ldf&0x0001)<<8);
 25853  016A' EE20 F013          	lfsr	2,19
 25854  016E' 5000'              	movf	adf4351_write_reg2@ctx^0,w,c
 25855  0170' 26D9               	addwf	fsr2l,f,c
 25856  0172' 5000'              	movf	(adf4351_write_reg2@ctx+1)^0,w,c
 25857  0174' 22DA               	addwfc	fsr2h,f,c
 25858  0176' 50DF               	movf	indf2,w,c
 25859  0178' 6E00'              	movwf	??_adf4351_write_reg2^0,c
 25860  017A' 0E01               	movlw	1
 25861  017C' 1600'              	andwf	??_adf4351_write_reg2^0,f,c
 25862  017E' C01B' F01C'        	movff	??_adf4351_write_reg2,??_adf4351_write_reg2+1
 25863  0182' 6A00'              	clrf	(??_adf4351_write_reg2+2)^0,c
 25864  0184' 6A00'              	clrf	(??_adf4351_write_reg2+3)^0,c
 25865  0186' 6A00'              	clrf	(??_adf4351_write_reg2+4)^0,c
 25866  0188' C01E' F01F'        	movff	??_adf4351_write_reg2+3,??_adf4351_write_reg2+4
 25867  018C' C01D' F01E'        	movff	??_adf4351_write_reg2+2,??_adf4351_write_reg2+3
 25868  0190' C01C' F01D'        	movff	??_adf4351_write_reg2+1,??_adf4351_write_reg2+2
 25869  0194' 6A00'              	clrf	(??_adf4351_write_reg2+1)^0,c
 25870  0196' 5000'              	movf	(??_adf4351_write_reg2+1)^0,w,c
 25871  0198' 1200'              	iorwf	adf4351_write_reg2@data^0,f,c
 25872  019A' 5000'              	movf	(??_adf4351_write_reg2+2)^0,w,c
 25873  019C' 1200'              	iorwf	(adf4351_write_reg2@data+1)^0,f,c
 25874  019E' 5000'              	movf	(??_adf4351_write_reg2+3)^0,w,c
 25875  01A0' 1200'              	iorwf	(adf4351_write_reg2@data+2)^0,f,c
 25876  01A2' 5000'              	movf	(??_adf4351_write_reg2+4)^0,w,c
 25877  01A4' 1200'              	iorwf	(adf4351_write_reg2@data+3)^0,f,c
 25878  01A6'                    
 25879                           ;src/driver/adf4351.c: 276:         data |= (((u32)ctx->reg2.cpc&0x000F)<<9);
 25880  01A6' EE20 F012          	lfsr	2,18
 25881  01AA' 5000'              	movf	adf4351_write_reg2@ctx^0,w,c
 25882  01AC' 26D9               	addwf	fsr2l,f,c
 25883  01AE' 5000'              	movf	(adf4351_write_reg2@ctx+1)^0,w,c
 25884  01B0' 22DA               	addwfc	fsr2h,f,c
 25885  01B2' 50DF               	movf	indf2,w,c
 25886  01B4' 6E00'              	movwf	??_adf4351_write_reg2^0,c
 25887  01B6' 0E0F               	movlw	15
 25888  01B8' 1600'              	andwf	??_adf4351_write_reg2^0,f,c
 25889  01BA' C01B' F01C'        	movff	??_adf4351_write_reg2,??_adf4351_write_reg2+1
 25890  01BE' 6A00'              	clrf	(??_adf4351_write_reg2+2)^0,c
 25891  01C0' 6A00'              	clrf	(??_adf4351_write_reg2+3)^0,c
 25892  01C2' 6A00'              	clrf	(??_adf4351_write_reg2+4)^0,c
 25893  01C4' 0E09               	movlw	9
 25894  01C6'                    u7195:
 25895  01C6' 90D8               	bcf	status,0,c
 25896  01C8' 3600'              	rlcf	(??_adf4351_write_reg2+1)^0,f,c
 25897  01CA' 3600'              	rlcf	(??_adf4351_write_reg2+2)^0,f,c
 25898  01CC' 3600'              	rlcf	(??_adf4351_write_reg2+3)^0,f,c
 25899  01CE' 3600'              	rlcf	(??_adf4351_write_reg2+4)^0,f,c
 25900  01D0' 2EE8               	decfsz	wreg,f,c
 25901  01D2' EF00' F000'        	goto	u7195
 25902  01D6' 5000'              	movf	(??_adf4351_write_reg2+1)^0,w,c
 25903  01D8' 1200'              	iorwf	adf4351_write_reg2@data^0,f,c
 25904  01DA' 5000'              	movf	(??_adf4351_write_reg2+2)^0,w,c
 25905  01DC' 1200'              	iorwf	(adf4351_write_reg2@data+1)^0,f,c
 25906  01DE' 5000'              	movf	(??_adf4351_write_reg2+3)^0,w,c
 25907  01E0' 1200'              	iorwf	(adf4351_write_reg2@data+2)^0,f,c
 25908  01E2' 5000'              	movf	(??_adf4351_write_reg2+4)^0,w,c
 25909  01E4' 1200'              	iorwf	(adf4351_write_reg2@data+3)^0,f,c
 25910  01E6'                    
 25911                           ;src/driver/adf4351.c: 277:         data |= (((u32)ctx->reg2.dblbuff&0x0001)<<13);
 25912  01E6' EE20 F011          	lfsr	2,17
 25913  01EA' 5000'              	movf	adf4351_write_reg2@ctx^0,w,c
 25914  01EC' 26D9               	addwf	fsr2l,f,c
 25915  01EE' 5000'              	movf	(adf4351_write_reg2@ctx+1)^0,w,c
 25916  01F0' 22DA               	addwfc	fsr2h,f,c
 25917  01F2' 50DF               	movf	indf2,w,c
 25918  01F4' 6E00'              	movwf	??_adf4351_write_reg2^0,c
 25919  01F6' 0E01               	movlw	1
 25920  01F8' 1600'              	andwf	??_adf4351_write_reg2^0,f,c
 25921  01FA' C01B' F01C'        	movff	??_adf4351_write_reg2,??_adf4351_write_reg2+1
 25922  01FE' 6A00'              	clrf	(??_adf4351_write_reg2+2)^0,c
 25923  0200' 6A00'              	clrf	(??_adf4351_write_reg2+3)^0,c
 25924  0202' 6A00'              	clrf	(??_adf4351_write_reg2+4)^0,c
 25925  0204' 0E0D               	movlw	13
 25926  0206'                    u7205:
 25927  0206' 90D8               	bcf	status,0,c
 25928  0208' 3600'              	rlcf	(??_adf4351_write_reg2+1)^0,f,c
 25929  020A' 3600'              	rlcf	(??_adf4351_write_reg2+2)^0,f,c
 25930  020C' 3600'              	rlcf	(??_adf4351_write_reg2+3)^0,f,c
 25931  020E' 3600'              	rlcf	(??_adf4351_write_reg2+4)^0,f,c
 25932  0210' 2EE8               	decfsz	wreg,f,c
 25933  0212' EF00' F000'        	goto	u7205
 25934  0216' 5000'              	movf	(??_adf4351_write_reg2+1)^0,w,c
 25935  0218' 1200'              	iorwf	adf4351_write_reg2@data^0,f,c
 25936  021A' 5000'              	movf	(??_adf4351_write_reg2+2)^0,w,c
 25937  021C' 1200'              	iorwf	(adf4351_write_reg2@data+1)^0,f,c
 25938  021E' 5000'              	movf	(??_adf4351_write_reg2+3)^0,w,c
 25939  0220' 1200'              	iorwf	(adf4351_write_reg2@data+2)^0,f,c
 25940  0222' 5000'              	movf	(??_adf4351_write_reg2+4)^0,w,c
 25941  0224' 1200'              	iorwf	(adf4351_write_reg2@data+3)^0,f,c
 25942  0226'                    
 25943                           ;src/driver/adf4351.c: 278:         data |= (((u32)ctx->reg2.rcnt&0x03FF)<<14);
 25944  0226' EE20 F00F          	lfsr	2,15
 25945  022A' 5000'              	movf	adf4351_write_reg2@ctx^0,w,c
 25946  022C' 26D9               	addwf	fsr2l,f,c
 25947  022E' 5000'              	movf	(adf4351_write_reg2@ctx+1)^0,w,c
 25948  0230' 22DA               	addwfc	fsr2h,f,c
 25949  0232' CFDE F01B'         	movff	postinc2,??_adf4351_write_reg2
 25950  0236' CFDD F01C'         	movff	postdec2,??_adf4351_write_reg2+1
 25951  023A' 0EFF               	movlw	255
 25952  023C' 1400'              	andwf	??_adf4351_write_reg2^0,w,c
 25953  023E' 6E00'              	movwf	(??_adf4351_write_reg2+2)^0,c
 25954  0240' 0E03               	movlw	3
 25955  0242' 1400'              	andwf	(??_adf4351_write_reg2+1)^0,w,c
 25956  0244' 6E00'              	movwf	(??_adf4351_write_reg2+3)^0,c
 25957  0246' 6A00'              	clrf	(??_adf4351_write_reg2+4)^0,c
 25958  0248' 6A00'              	clrf	(??_adf4351_write_reg2+5)^0,c
 25959  024A' 0E0E               	movlw	14
 25960  024C'                    u7215:
 25961  024C' 90D8               	bcf	status,0,c
 25962  024E' 3600'              	rlcf	(??_adf4351_write_reg2+2)^0,f,c
 25963  0250' 3600'              	rlcf	(??_adf4351_write_reg2+3)^0,f,c
 25964  0252' 3600'              	rlcf	(??_adf4351_write_reg2+4)^0,f,c
 25965  0254' 3600'              	rlcf	(??_adf4351_write_reg2+5)^0,f,c
 25966  0256' 2EE8               	decfsz	wreg,f,c
 25967  0258' EF00' F000'        	goto	u7215
 25968  025C' 5000'              	movf	(??_adf4351_write_reg2+2)^0,w,c
 25969  025E' 1200'              	iorwf	adf4351_write_reg2@data^0,f,c
 25970  0260' 5000'              	movf	(??_adf4351_write_reg2+3)^0,w,c
 25971  0262' 1200'              	iorwf	(adf4351_write_reg2@data+1)^0,f,c
 25972  0264' 5000'              	movf	(??_adf4351_write_reg2+4)^0,w,c
 25973  0266' 1200'              	iorwf	(adf4351_write_reg2@data+2)^0,f,c
 25974  0268' 5000'              	movf	(??_adf4351_write_reg2+5)^0,w,c
 25975  026A' 1200'              	iorwf	(adf4351_write_reg2@data+3)^0,f,c
 25976  026C'                    
 25977                           ;src/driver/adf4351.c: 279:         data |= (((u32)ctx->reg2.refdiv&0x0001)<<24);
 25978  026C' EE20 F00E          	lfsr	2,14
 25979  0270' 5000'              	movf	adf4351_write_reg2@ctx^0,w,c
 25980  0272' 26D9               	addwf	fsr2l,f,c
 25981  0274' 5000'              	movf	(adf4351_write_reg2@ctx+1)^0,w,c
 25982  0276' 22DA               	addwfc	fsr2h,f,c
 25983  0278' 50DF               	movf	indf2,w,c
 25984  027A' 6E00'              	movwf	??_adf4351_write_reg2^0,c
 25985  027C' 0E01               	movlw	1
 25986  027E' 1600'              	andwf	??_adf4351_write_reg2^0,f,c
 25987  0280' C01B' F01C'        	movff	??_adf4351_write_reg2,??_adf4351_write_reg2+1
 25988  0284' 6A00'              	clrf	(??_adf4351_write_reg2+2)^0,c
 25989  0286' 6A00'              	clrf	(??_adf4351_write_reg2+3)^0,c
 25990  0288' 6A00'              	clrf	(??_adf4351_write_reg2+4)^0,c
 25991  028A' C01C' F01F'        	movff	??_adf4351_write_reg2+1,??_adf4351_write_reg2+4
 25992  028E' 6A00'              	clrf	(??_adf4351_write_reg2+3)^0,c
 25993  0290' 6A00'              	clrf	(??_adf4351_write_reg2+2)^0,c
 25994  0292' 6A00'              	clrf	(??_adf4351_write_reg2+1)^0,c
 25995  0294' 5000'              	movf	(??_adf4351_write_reg2+1)^0,w,c
 25996  0296' 1200'              	iorwf	adf4351_write_reg2@data^0,f,c
 25997  0298' 5000'              	movf	(??_adf4351_write_reg2+2)^0,w,c
 25998  029A' 1200'              	iorwf	(adf4351_write_reg2@data+1)^0,f,c
 25999  029C' 5000'              	movf	(??_adf4351_write_reg2+3)^0,w,c
 26000  029E' 1200'              	iorwf	(adf4351_write_reg2@data+2)^0,f,c
 26001  02A0' 5000'              	movf	(??_adf4351_write_reg2+4)^0,w,c
 26002  02A2' 1200'              	iorwf	(adf4351_write_reg2@data+3)^0,f,c
 26003  02A4'                    
 26004                           ;src/driver/adf4351.c: 280:         data |= (((u32)ctx->reg2.refdbl&0x0001)<<25);
 26005  02A4' EE20 F00D          	lfsr	2,13
 26006  02A8' 5000'              	movf	adf4351_write_reg2@ctx^0,w,c
 26007  02AA' 26D9               	addwf	fsr2l,f,c
 26008  02AC' 5000'              	movf	(adf4351_write_reg2@ctx+1)^0,w,c
 26009  02AE' 22DA               	addwfc	fsr2h,f,c
 26010  02B0' 50DF               	movf	indf2,w,c
 26011  02B2' 6E00'              	movwf	??_adf4351_write_reg2^0,c
 26012  02B4' 0E01               	movlw	1
 26013  02B6' 1600'              	andwf	??_adf4351_write_reg2^0,f,c
 26014  02B8' C01B' F01C'        	movff	??_adf4351_write_reg2,??_adf4351_write_reg2+1
 26015  02BC' 6A00'              	clrf	(??_adf4351_write_reg2+2)^0,c
 26016  02BE' 6A00'              	clrf	(??_adf4351_write_reg2+3)^0,c
 26017  02C0' 6A00'              	clrf	(??_adf4351_write_reg2+4)^0,c
 26018  02C2' 0E19               	movlw	25
 26019  02C4'                    u7225:
 26020  02C4' 90D8               	bcf	status,0,c
 26021  02C6' 3600'              	rlcf	(??_adf4351_write_reg2+1)^0,f,c
 26022  02C8' 3600'              	rlcf	(??_adf4351_write_reg2+2)^0,f,c
 26023  02CA' 3600'              	rlcf	(??_adf4351_write_reg2+3)^0,f,c
 26024  02CC' 3600'              	rlcf	(??_adf4351_write_reg2+4)^0,f,c
 26025  02CE' 2EE8               	decfsz	wreg,f,c
 26026  02D0' EF00' F000'        	goto	u7225
 26027  02D4' 5000'              	movf	(??_adf4351_write_reg2+1)^0,w,c
 26028  02D6' 1200'              	iorwf	adf4351_write_reg2@data^0,f,c
 26029  02D8' 5000'              	movf	(??_adf4351_write_reg2+2)^0,w,c
 26030  02DA' 1200'              	iorwf	(adf4351_write_reg2@data+1)^0,f,c
 26031  02DC' 5000'              	movf	(??_adf4351_write_reg2+3)^0,w,c
 26032  02DE' 1200'              	iorwf	(adf4351_write_reg2@data+2)^0,f,c
 26033  02E0' 5000'              	movf	(??_adf4351_write_reg2+4)^0,w,c
 26034  02E2' 1200'              	iorwf	(adf4351_write_reg2@data+3)^0,f,c
 26035  02E4'                    
 26036                           ;src/driver/adf4351.c: 281:         data |= (((u32)ctx->reg2.muxout&0x0007)<<26);
 26037  02E4' EE20 F00C          	lfsr	2,12
 26038  02E8' 5000'              	movf	adf4351_write_reg2@ctx^0,w,c
 26039  02EA' 26D9               	addwf	fsr2l,f,c
 26040  02EC' 5000'              	movf	(adf4351_write_reg2@ctx+1)^0,w,c
 26041  02EE' 22DA               	addwfc	fsr2h,f,c
 26042  02F0' 50DF               	movf	indf2,w,c
 26043  02F2' 6E00'              	movwf	??_adf4351_write_reg2^0,c
 26044  02F4' 0E07               	movlw	7
 26045  02F6' 1600'              	andwf	??_adf4351_write_reg2^0,f,c
 26046  02F8' C01B' F01C'        	movff	??_adf4351_write_reg2,??_adf4351_write_reg2+1
 26047  02FC' 6A00'              	clrf	(??_adf4351_write_reg2+2)^0,c
 26048  02FE' 6A00'              	clrf	(??_adf4351_write_reg2+3)^0,c
 26049  0300' 6A00'              	clrf	(??_adf4351_write_reg2+4)^0,c
 26050  0302' 0E1A               	movlw	26
 26051  0304'                    u7235:
 26052  0304' 90D8               	bcf	status,0,c
 26053  0306' 3600'              	rlcf	(??_adf4351_write_reg2+1)^0,f,c
 26054  0308' 3600'              	rlcf	(??_adf4351_write_reg2+2)^0,f,c
 26055  030A' 3600'              	rlcf	(??_adf4351_write_reg2+3)^0,f,c
 26056  030C' 3600'              	rlcf	(??_adf4351_write_reg2+4)^0,f,c
 26057  030E' 2EE8               	decfsz	wreg,f,c
 26058  0310' EF00' F000'        	goto	u7235
 26059  0314' 5000'              	movf	(??_adf4351_write_reg2+1)^0,w,c
 26060  0316' 1200'              	iorwf	adf4351_write_reg2@data^0,f,c
 26061  0318' 5000'              	movf	(??_adf4351_write_reg2+2)^0,w,c
 26062  031A' 1200'              	iorwf	(adf4351_write_reg2@data+1)^0,f,c
 26063  031C' 5000'              	movf	(??_adf4351_write_reg2+3)^0,w,c
 26064  031E' 1200'              	iorwf	(adf4351_write_reg2@data+2)^0,f,c
 26065  0320' 5000'              	movf	(??_adf4351_write_reg2+4)^0,w,c
 26066  0322' 1200'              	iorwf	(adf4351_write_reg2@data+3)^0,f,c
 26067  0324'                    
 26068                           ;src/driver/adf4351.c: 282:         data |= (((u32)ctx->reg2.lownoise&0x0003)<<29);
 26069  0324' EE20 F00B          	lfsr	2,11
 26070  0328' 5000'              	movf	adf4351_write_reg2@ctx^0,w,c
 26071  032A' 26D9               	addwf	fsr2l,f,c
 26072  032C' 5000'              	movf	(adf4351_write_reg2@ctx+1)^0,w,c
 26073  032E' 22DA               	addwfc	fsr2h,f,c
 26074  0330' 50DF               	movf	indf2,w,c
 26075  0332' 6E00'              	movwf	??_adf4351_write_reg2^0,c
 26076  0334' 0E03               	movlw	3
 26077  0336' 1600'              	andwf	??_adf4351_write_reg2^0,f,c
 26078  0338' C01B' F01C'        	movff	??_adf4351_write_reg2,??_adf4351_write_reg2+1
 26079  033C' 6A00'              	clrf	(??_adf4351_write_reg2+2)^0,c
 26080  033E' 6A00'              	clrf	(??_adf4351_write_reg2+3)^0,c
 26081  0340' 6A00'              	clrf	(??_adf4351_write_reg2+4)^0,c
 26082  0342' 0E1D               	movlw	29
 26083  0344'                    u7245:
 26084  0344' 90D8               	bcf	status,0,c
 26085  0346' 3600'              	rlcf	(??_adf4351_write_reg2+1)^0,f,c
 26086  0348' 3600'              	rlcf	(??_adf4351_write_reg2+2)^0,f,c
 26087  034A' 3600'              	rlcf	(??_adf4351_write_reg2+3)^0,f,c
 26088  034C' 3600'              	rlcf	(??_adf4351_write_reg2+4)^0,f,c
 26089  034E' 2EE8               	decfsz	wreg,f,c
 26090  0350' EF00' F000'        	goto	u7245
 26091  0354' 5000'              	movf	(??_adf4351_write_reg2+1)^0,w,c
 26092  0356' 1200'              	iorwf	adf4351_write_reg2@data^0,f,c
 26093  0358' 5000'              	movf	(??_adf4351_write_reg2+2)^0,w,c
 26094  035A' 1200'              	iorwf	(adf4351_write_reg2@data+1)^0,f,c
 26095  035C' 5000'              	movf	(??_adf4351_write_reg2+3)^0,w,c
 26096  035E' 1200'              	iorwf	(adf4351_write_reg2@data+2)^0,f,c
 26097  0360' 5000'              	movf	(??_adf4351_write_reg2+4)^0,w,c
 26098  0362' 1200'              	iorwf	(adf4351_write_reg2@data+3)^0,f,c
 26099  0364'                    
 26100                           ;src/driver/adf4351.c: 284:         adf4351_write_latch(data);
 26101  0364' C021' F00D'        	movff	adf4351_write_reg2@data,adf4351_write_latch@value
 26102  0368' C022' F00E'        	movff	adf4351_write_reg2@data+1,adf4351_write_latch@value+1
 26103  036C' C023' F00F'        	movff	adf4351_write_reg2@data+2,adf4351_write_latch@value+2
 26104  0370' C024' F010'        	movff	adf4351_write_reg2@data+3,adf4351_write_latch@value+3
 26105  0374' EC00' F000'        	call	_adf4351_write_latch	;wreg free
 26106  0378'                    l129:
 26107  0378' 0012               	return		;funcret
 26108  037A'                    __end_of_adf4351_write_reg2:
 26109                           	opt callstack 0
 26110                           
 26111 ;; *************** function _adf4351_write_reg1 *****************
 26112 ;; Defined at:
 26113 ;;		line 252 in file "src/driver/adf4351.c"
 26114 ;; Parameters:    Size  Location     Type
 26115 ;;  ctx             2   25[COMRAM] PTR struct adf4351_ctx
 26116 ;;		 -> g_adf4351(55), 
 26117 ;; Auto vars:     Size  Location     Type
 26118 ;;  data            4   33[COMRAM] unsigned long 
 26119 ;; Return value:  Size  Location     Type
 26120 ;;                  1    wreg      void 
 26121 ;; Registers used:
 26122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26123 ;; Tracked objects:
 26124 ;;		On entry : 0/0
 26125 ;;		On exit  : 0/0
 26126 ;;		Unchanged: 0/0
 26127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 26128 ;;      Params:         2       0       0       0       0       0       0
 26129 ;;      Locals:         4       0       0       0       0       0       0
 26130 ;;      Temps:          6       0       0       0       0       0       0
 26131 ;;      Totals:        12       0       0       0       0       0       0
 26132 ;;Total ram usage:       12 bytes
 26133 ;; Hardware stack levels used:    1
 26134 ;; Hardware stack levels required when called:    3
 26135 ;; This function calls:
 26136 ;;		_adf4351_write_latch
 26137 ;; This function is called by:
 26138 ;;		_adf4351_setup
 26139 ;; This function uses a non-reentrant model
 26140 ;;
 26141                           
 26142                           	psect	text104
 26143  0000'                    __ptext104:
 26144                           	opt callstack 0
 26145  0000'                    _adf4351_write_reg1:
 26146                           	opt callstack 24
 26147  0000'                    
 26148                           ;src/driver/adf4351.c: 252: static void adf4351_write_reg1(adf4351_ctx* ctx);src/driver/
      +                          adf4351.c: 253: {;src/driver/adf4351.c: 254:     if(ctx->init) {
 26149  0000' C019' FFD9         	movff	adf4351_write_reg1@ctx,fsr2l
 26150  0004' C01A' FFDA         	movff	adf4351_write_reg1@ctx+1,fsr2h
 26151  0008' 50DE               	movf	postinc2,w,c
 26152  000A' 10DE               	iorwf	postinc2,w,c
 26153  000C' B4D8               	btfsc	status,2,c
 26154  000E' EF00' F000'        	goto	u7341
 26155  0012' EF00' F000'        	goto	u7340
 26156  0016'                    u7341:
 26157  0016' EF00' F000'        	goto	l125
 26158  001A'                    u7340:
 26159  001A'                    
 26160                           ;src/driver/adf4351.c: 255:         u32 data = 1;
 26161  001A' 0E01               	movlw	1
 26162  001C' 6E00'              	movwf	adf4351_write_reg1@data^0,c
 26163  001E' 0E00               	movlw	0
 26164  0020' 6E00'              	movwf	(adf4351_write_reg1@data+1)^0,c
 26165  0022' 0E00               	movlw	0
 26166  0024' 6E00'              	movwf	(adf4351_write_reg1@data+2)^0,c
 26167  0026' 0E00               	movlw	0
 26168  0028' 6E00'              	movwf	(adf4351_write_reg1@data+3)^0,c
 26169  002A'                    
 26170                           ;src/driver/adf4351.c: 257:         data |= (((u32)ctx->reg1.mod&0x0FFF)<<3);
 26171  002A' EE20 F009          	lfsr	2,9
 26172  002E' 5000'              	movf	adf4351_write_reg1@ctx^0,w,c
 26173  0030' 26D9               	addwf	fsr2l,f,c
 26174  0032' 5000'              	movf	(adf4351_write_reg1@ctx+1)^0,w,c
 26175  0034' 22DA               	addwfc	fsr2h,f,c
 26176  0036' CFDE F01B'         	movff	postinc2,??_adf4351_write_reg1
 26177  003A' CFDD F01C'         	movff	postdec2,??_adf4351_write_reg1+1
 26178  003E' 0EFF               	movlw	255
 26179  0040' 1400'              	andwf	??_adf4351_write_reg1^0,w,c
 26180  0042' 6E00'              	movwf	(??_adf4351_write_reg1+2)^0,c
 26181  0044' 0E0F               	movlw	15
 26182  0046' 1400'              	andwf	(??_adf4351_write_reg1+1)^0,w,c
 26183  0048' 6E00'              	movwf	(??_adf4351_write_reg1+3)^0,c
 26184  004A' 6A00'              	clrf	(??_adf4351_write_reg1+4)^0,c
 26185  004C' 6A00'              	clrf	(??_adf4351_write_reg1+5)^0,c
 26186  004E' 0E03               	movlw	3
 26187  0050'                    u7355:
 26188  0050' 90D8               	bcf	status,0,c
 26189  0052' 3600'              	rlcf	(??_adf4351_write_reg1+2)^0,f,c
 26190  0054' 3600'              	rlcf	(??_adf4351_write_reg1+3)^0,f,c
 26191  0056' 3600'              	rlcf	(??_adf4351_write_reg1+4)^0,f,c
 26192  0058' 3600'              	rlcf	(??_adf4351_write_reg1+5)^0,f,c
 26193  005A' 2EE8               	decfsz	wreg,f,c
 26194  005C' EF00' F000'        	goto	u7355
 26195  0060' 5000'              	movf	(??_adf4351_write_reg1+2)^0,w,c
 26196  0062' 1200'              	iorwf	adf4351_write_reg1@data^0,f,c
 26197  0064' 5000'              	movf	(??_adf4351_write_reg1+3)^0,w,c
 26198  0066' 1200'              	iorwf	(adf4351_write_reg1@data+1)^0,f,c
 26199  0068' 5000'              	movf	(??_adf4351_write_reg1+4)^0,w,c
 26200  006A' 1200'              	iorwf	(adf4351_write_reg1@data+2)^0,f,c
 26201  006C' 5000'              	movf	(??_adf4351_write_reg1+5)^0,w,c
 26202  006E' 1200'              	iorwf	(adf4351_write_reg1@data+3)^0,f,c
 26203  0070'                    
 26204                           ;src/driver/adf4351.c: 258:         data |= (((u32)ctx->reg1.phase&0x0FFF)<<15);
 26205  0070' EE20 F007          	lfsr	2,7
 26206  0074' 5000'              	movf	adf4351_write_reg1@ctx^0,w,c
 26207  0076' 26D9               	addwf	fsr2l,f,c
 26208  0078' 5000'              	movf	(adf4351_write_reg1@ctx+1)^0,w,c
 26209  007A' 22DA               	addwfc	fsr2h,f,c
 26210  007C' CFDE F01B'         	movff	postinc2,??_adf4351_write_reg1
 26211  0080' CFDD F01C'         	movff	postdec2,??_adf4351_write_reg1+1
 26212  0084' 0EFF               	movlw	255
 26213  0086' 1400'              	andwf	??_adf4351_write_reg1^0,w,c
 26214  0088' 6E00'              	movwf	(??_adf4351_write_reg1+2)^0,c
 26215  008A' 0E0F               	movlw	15
 26216  008C' 1400'              	andwf	(??_adf4351_write_reg1+1)^0,w,c
 26217  008E' 6E00'              	movwf	(??_adf4351_write_reg1+3)^0,c
 26218  0090' 6A00'              	clrf	(??_adf4351_write_reg1+4)^0,c
 26219  0092' 6A00'              	clrf	(??_adf4351_write_reg1+5)^0,c
 26220  0094' 0E0F               	movlw	15
 26221  0096'                    u7365:
 26222  0096' 90D8               	bcf	status,0,c
 26223  0098' 3600'              	rlcf	(??_adf4351_write_reg1+2)^0,f,c
 26224  009A' 3600'              	rlcf	(??_adf4351_write_reg1+3)^0,f,c
 26225  009C' 3600'              	rlcf	(??_adf4351_write_reg1+4)^0,f,c
 26226  009E' 3600'              	rlcf	(??_adf4351_write_reg1+5)^0,f,c
 26227  00A0' 2EE8               	decfsz	wreg,f,c
 26228  00A2' EF00' F000'        	goto	u7365
 26229  00A6' 5000'              	movf	(??_adf4351_write_reg1+2)^0,w,c
 26230  00A8' 1200'              	iorwf	adf4351_write_reg1@data^0,f,c
 26231  00AA' 5000'              	movf	(??_adf4351_write_reg1+3)^0,w,c
 26232  00AC' 1200'              	iorwf	(adf4351_write_reg1@data+1)^0,f,c
 26233  00AE' 5000'              	movf	(??_adf4351_write_reg1+4)^0,w,c
 26234  00B0' 1200'              	iorwf	(adf4351_write_reg1@data+2)^0,f,c
 26235  00B2' 5000'              	movf	(??_adf4351_write_reg1+5)^0,w,c
 26236  00B4' 1200'              	iorwf	(adf4351_write_reg1@data+3)^0,f,c
 26237  00B6'                    
 26238                           ;src/driver/adf4351.c: 259:         data |= (((u32)ctx->reg1.prescaler&0x0001)<<27);
 26239  00B6' EE20 F006          	lfsr	2,6
 26240  00BA' 5000'              	movf	adf4351_write_reg1@ctx^0,w,c
 26241  00BC' 26D9               	addwf	fsr2l,f,c
 26242  00BE' 5000'              	movf	(adf4351_write_reg1@ctx+1)^0,w,c
 26243  00C0' 22DA               	addwfc	fsr2h,f,c
 26244  00C2' 50DF               	movf	indf2,w,c
 26245  00C4' 6E00'              	movwf	??_adf4351_write_reg1^0,c
 26246  00C6' 0E01               	movlw	1
 26247  00C8' 1600'              	andwf	??_adf4351_write_reg1^0,f,c
 26248  00CA' C01B' F01C'        	movff	??_adf4351_write_reg1,??_adf4351_write_reg1+1
 26249  00CE' 6A00'              	clrf	(??_adf4351_write_reg1+2)^0,c
 26250  00D0' 6A00'              	clrf	(??_adf4351_write_reg1+3)^0,c
 26251  00D2' 6A00'              	clrf	(??_adf4351_write_reg1+4)^0,c
 26252  00D4' 0E1B               	movlw	27
 26253  00D6'                    u7375:
 26254  00D6' 90D8               	bcf	status,0,c
 26255  00D8' 3600'              	rlcf	(??_adf4351_write_reg1+1)^0,f,c
 26256  00DA' 3600'              	rlcf	(??_adf4351_write_reg1+2)^0,f,c
 26257  00DC' 3600'              	rlcf	(??_adf4351_write_reg1+3)^0,f,c
 26258  00DE' 3600'              	rlcf	(??_adf4351_write_reg1+4)^0,f,c
 26259  00E0' 2EE8               	decfsz	wreg,f,c
 26260  00E2' EF00' F000'        	goto	u7375
 26261  00E6' 5000'              	movf	(??_adf4351_write_reg1+1)^0,w,c
 26262  00E8' 1200'              	iorwf	adf4351_write_reg1@data^0,f,c
 26263  00EA' 5000'              	movf	(??_adf4351_write_reg1+2)^0,w,c
 26264  00EC' 1200'              	iorwf	(adf4351_write_reg1@data+1)^0,f,c
 26265  00EE' 5000'              	movf	(??_adf4351_write_reg1+3)^0,w,c
 26266  00F0' 1200'              	iorwf	(adf4351_write_reg1@data+2)^0,f,c
 26267  00F2' 5000'              	movf	(??_adf4351_write_reg1+4)^0,w,c
 26268  00F4' 1200'              	iorwf	(adf4351_write_reg1@data+3)^0,f,c
 26269  00F6'                    
 26270                           ;src/driver/adf4351.c: 261:         adf4351_write_latch(data);
 26271  00F6' C021' F00D'        	movff	adf4351_write_reg1@data,adf4351_write_latch@value
 26272  00FA' C022' F00E'        	movff	adf4351_write_reg1@data+1,adf4351_write_latch@value+1
 26273  00FE' C023' F00F'        	movff	adf4351_write_reg1@data+2,adf4351_write_latch@value+2
 26274  0102' C024' F010'        	movff	adf4351_write_reg1@data+3,adf4351_write_latch@value+3
 26275  0106' EC00' F000'        	call	_adf4351_write_latch	;wreg free
 26276  010A'                    l125:
 26277  010A' 0012               	return		;funcret
 26278  010C'                    __end_of_adf4351_write_reg1:
 26279                           	opt callstack 0
 26280                           
 26281 ;; *************** function _adf4351_write_reg0 *****************
 26282 ;; Defined at:
 26283 ;;		line 240 in file "src/driver/adf4351.c"
 26284 ;; Parameters:    Size  Location     Type
 26285 ;;  ctx             2   25[COMRAM] PTR struct adf4351_ctx
 26286 ;;		 -> g_adf4351(55), 
 26287 ;; Auto vars:     Size  Location     Type
 26288 ;;  data            4   33[COMRAM] unsigned long 
 26289 ;; Return value:  Size  Location     Type
 26290 ;;                  1    wreg      void 
 26291 ;; Registers used:
 26292 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26293 ;; Tracked objects:
 26294 ;;		On entry : 0/0
 26295 ;;		On exit  : 0/0
 26296 ;;		Unchanged: 0/0
 26297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 26298 ;;      Params:         2       0       0       0       0       0       0
 26299 ;;      Locals:         4       0       0       0       0       0       0
 26300 ;;      Temps:          6       0       0       0       0       0       0
 26301 ;;      Totals:        12       0       0       0       0       0       0
 26302 ;;Total ram usage:       12 bytes
 26303 ;; Hardware stack levels used:    1
 26304 ;; Hardware stack levels required when called:    3
 26305 ;; This function calls:
 26306 ;;		_adf4351_write_latch
 26307 ;; This function is called by:
 26308 ;;		_adf4351_setup
 26309 ;; This function uses a non-reentrant model
 26310 ;;
 26311                           
 26312                           	psect	text105
 26313  0000'                    __ptext105:
 26314                           	opt callstack 0
 26315  0000'                    _adf4351_write_reg0:
 26316                           	opt callstack 24
 26317  0000'                    
 26318                           ;src/driver/adf4351.c: 240: static void adf4351_write_reg0(adf4351_ctx* ctx);src/driver/
      +                          adf4351.c: 241: {;src/driver/adf4351.c: 242:  if(ctx->init) {
 26319  0000' C019' FFD9         	movff	adf4351_write_reg0@ctx,fsr2l
 26320  0004' C01A' FFDA         	movff	adf4351_write_reg0@ctx+1,fsr2h
 26321  0008' 50DE               	movf	postinc2,w,c
 26322  000A' 10DE               	iorwf	postinc2,w,c
 26323  000C' B4D8               	btfsc	status,2,c
 26324  000E' EF00' F000'        	goto	u7381
 26325  0012' EF00' F000'        	goto	u7380
 26326  0016'                    u7381:
 26327  0016' EF00' F000'        	goto	l121
 26328  001A'                    u7380:
 26329  001A'                    
 26330                           ;src/driver/adf4351.c: 243:         u32 data = 0;
 26331  001A' 0E00               	movlw	0
 26332  001C' 6E00'              	movwf	adf4351_write_reg0@data^0,c
 26333  001E' 0E00               	movlw	0
 26334  0020' 6E00'              	movwf	(adf4351_write_reg0@data+1)^0,c
 26335  0022' 0E00               	movlw	0
 26336  0024' 6E00'              	movwf	(adf4351_write_reg0@data+2)^0,c
 26337  0026' 0E00               	movlw	0
 26338  0028' 6E00'              	movwf	(adf4351_write_reg0@data+3)^0,c
 26339  002A'                    
 26340                           ;src/driver/adf4351.c: 245:         data |= (((u32)ctx->reg0.frac&0x0FFF)<<3);
 26341  002A' EE20 F004          	lfsr	2,4
 26342  002E' 5000'              	movf	adf4351_write_reg0@ctx^0,w,c
 26343  0030' 26D9               	addwf	fsr2l,f,c
 26344  0032' 5000'              	movf	(adf4351_write_reg0@ctx+1)^0,w,c
 26345  0034' 22DA               	addwfc	fsr2h,f,c
 26346  0036' CFDE F01B'         	movff	postinc2,??_adf4351_write_reg0
 26347  003A' CFDD F01C'         	movff	postdec2,??_adf4351_write_reg0+1
 26348  003E' 0EFF               	movlw	255
 26349  0040' 1400'              	andwf	??_adf4351_write_reg0^0,w,c
 26350  0042' 6E00'              	movwf	(??_adf4351_write_reg0+2)^0,c
 26351  0044' 0E0F               	movlw	15
 26352  0046' 1400'              	andwf	(??_adf4351_write_reg0+1)^0,w,c
 26353  0048' 6E00'              	movwf	(??_adf4351_write_reg0+3)^0,c
 26354  004A' 6A00'              	clrf	(??_adf4351_write_reg0+4)^0,c
 26355  004C' 6A00'              	clrf	(??_adf4351_write_reg0+5)^0,c
 26356  004E' 0E03               	movlw	3
 26357  0050'                    u7395:
 26358  0050' 90D8               	bcf	status,0,c
 26359  0052' 3600'              	rlcf	(??_adf4351_write_reg0+2)^0,f,c
 26360  0054' 3600'              	rlcf	(??_adf4351_write_reg0+3)^0,f,c
 26361  0056' 3600'              	rlcf	(??_adf4351_write_reg0+4)^0,f,c
 26362  0058' 3600'              	rlcf	(??_adf4351_write_reg0+5)^0,f,c
 26363  005A' 2EE8               	decfsz	wreg,f,c
 26364  005C' EF00' F000'        	goto	u7395
 26365  0060' 5000'              	movf	(??_adf4351_write_reg0+2)^0,w,c
 26366  0062' 1200'              	iorwf	adf4351_write_reg0@data^0,f,c
 26367  0064' 5000'              	movf	(??_adf4351_write_reg0+3)^0,w,c
 26368  0066' 1200'              	iorwf	(adf4351_write_reg0@data+1)^0,f,c
 26369  0068' 5000'              	movf	(??_adf4351_write_reg0+4)^0,w,c
 26370  006A' 1200'              	iorwf	(adf4351_write_reg0@data+2)^0,f,c
 26371  006C' 5000'              	movf	(??_adf4351_write_reg0+5)^0,w,c
 26372  006E' 1200'              	iorwf	(adf4351_write_reg0@data+3)^0,f,c
 26373  0070'                    
 26374                           ;src/driver/adf4351.c: 246:         data |= (((u32)ctx->reg0.integer&0xFFFF)<<15);
 26375  0070' EE20 F002          	lfsr	2,2
 26376  0074' 5000'              	movf	adf4351_write_reg0@ctx^0,w,c
 26377  0076' 26D9               	addwf	fsr2l,f,c
 26378  0078' 5000'              	movf	(adf4351_write_reg0@ctx+1)^0,w,c
 26379  007A' 22DA               	addwfc	fsr2h,f,c
 26380  007C' CFDE F01B'         	movff	postinc2,??_adf4351_write_reg0
 26381  0080' CFDD F01C'         	movff	postdec2,??_adf4351_write_reg0+1
 26382  0084' 5000'              	movf	??_adf4351_write_reg0^0,w,c
 26383  0086' 6E00'              	movwf	(??_adf4351_write_reg0+2)^0,c
 26384  0088' 5000'              	movf	(??_adf4351_write_reg0+1)^0,w,c
 26385  008A' 6E00'              	movwf	(??_adf4351_write_reg0+3)^0,c
 26386  008C' 6A00'              	clrf	(??_adf4351_write_reg0+4)^0,c
 26387  008E' 6A00'              	clrf	(??_adf4351_write_reg0+5)^0,c
 26388  0090' 0E0F               	movlw	15
 26389  0092'                    u7405:
 26390  0092' 90D8               	bcf	status,0,c
 26391  0094' 3600'              	rlcf	(??_adf4351_write_reg0+2)^0,f,c
 26392  0096' 3600'              	rlcf	(??_adf4351_write_reg0+3)^0,f,c
 26393  0098' 3600'              	rlcf	(??_adf4351_write_reg0+4)^0,f,c
 26394  009A' 3600'              	rlcf	(??_adf4351_write_reg0+5)^0,f,c
 26395  009C' 2EE8               	decfsz	wreg,f,c
 26396  009E' EF00' F000'        	goto	u7405
 26397  00A2' 5000'              	movf	(??_adf4351_write_reg0+2)^0,w,c
 26398  00A4' 1200'              	iorwf	adf4351_write_reg0@data^0,f,c
 26399  00A6' 5000'              	movf	(??_adf4351_write_reg0+3)^0,w,c
 26400  00A8' 1200'              	iorwf	(adf4351_write_reg0@data+1)^0,f,c
 26401  00AA' 5000'              	movf	(??_adf4351_write_reg0+4)^0,w,c
 26402  00AC' 1200'              	iorwf	(adf4351_write_reg0@data+2)^0,f,c
 26403  00AE' 5000'              	movf	(??_adf4351_write_reg0+5)^0,w,c
 26404  00B0' 1200'              	iorwf	(adf4351_write_reg0@data+3)^0,f,c
 26405  00B2'                    
 26406                           ;src/driver/adf4351.c: 248:         adf4351_write_latch(data);
 26407  00B2' C021' F00D'        	movff	adf4351_write_reg0@data,adf4351_write_latch@value
 26408  00B6' C022' F00E'        	movff	adf4351_write_reg0@data+1,adf4351_write_latch@value+1
 26409  00BA' C023' F00F'        	movff	adf4351_write_reg0@data+2,adf4351_write_latch@value+2
 26410  00BE' C024' F010'        	movff	adf4351_write_reg0@data+3,adf4351_write_latch@value+3
 26411  00C2' EC00' F000'        	call	_adf4351_write_latch	;wreg free
 26412  00C6'                    l121:
 26413  00C6' 0012               	return		;funcret
 26414  00C8'                    __end_of_adf4351_write_reg0:
 26415                           	opt callstack 0
 26416                           
 26417 ;; *************** function _adf4351_write_latch *****************
 26418 ;; Defined at:
 26419 ;;		line 353 in file "src/driver/adf4351.c"
 26420 ;; Parameters:    Size  Location     Type
 26421 ;;  value           4   13[COMRAM] unsigned long 
 26422 ;; Auto vars:     Size  Location     Type
 26423 ;;  mask            4   21[COMRAM] unsigned long 
 26424 ;; Return value:  Size  Location     Type
 26425 ;;                  1    wreg      void 
 26426 ;; Registers used:
 26427 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 26428 ;; Tracked objects:
 26429 ;;		On entry : 0/0
 26430 ;;		On exit  : 0/0
 26431 ;;		Unchanged: 0/0
 26432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 26433 ;;      Params:         4       0       0       0       0       0       0
 26434 ;;      Locals:         4       0       0       0       0       0       0
 26435 ;;      Temps:          4       0       0       0       0       0       0
 26436 ;;      Totals:        12       0       0       0       0       0       0
 26437 ;;Total ram usage:       12 bytes
 26438 ;; Hardware stack levels used:    1
 26439 ;; Hardware stack levels required when called:    2
 26440 ;; This function calls:
 26441 ;;		Nothing
 26442 ;; This function is called by:
 26443 ;;		_adf4351_write_reg0
 26444 ;;		_adf4351_write_reg1
 26445 ;;		_adf4351_write_reg2
 26446 ;;		_adf4351_write_reg3
 26447 ;;		_adf4351_write_reg4
 26448 ;;		_adf4351_write_reg5
 26449 ;; This function uses a non-reentrant model
 26450 ;;
 26451                           
 26452                           	psect	text106
 26453  0000'                    __ptext106:
 26454                           	opt callstack 0
 26455  0000'                    _adf4351_write_latch:
 26456                           	opt callstack 24
 26457  0000'                    
 26458                           ;src/driver/adf4351.c: 353: static void adf4351_write_latch(u32 value);src/driver/adf435
      +                          1.c: 354: {;src/driver/adf4351.c: 355:     u32 mask = 0x80000000ULL;
 26459  0000' 0E00               	movlw	0
 26460  0002' 6E00'              	movwf	adf4351_write_latch@mask^0,c
 26461  0004' 0E00               	movlw	0
 26462  0006' 6E00'              	movwf	(adf4351_write_latch@mask+1)^0,c
 26463  0008' 0E00               	movlw	0
 26464  000A' 6E00'              	movwf	(adf4351_write_latch@mask+2)^0,c
 26465  000C' 0E80               	movlw	128
 26466  000E' 6E00'              	movwf	(adf4351_write_latch@mask+3)^0,c
 26467  0010'                    
 26468                           ;src/driver/adf4351.c: 357:     *((PIN_SIO_CLK)->pPORT) &= ~(PIN_SIO_CLK)->mask;
 26469  0010' 0E00'              	movlw	low (_PIN_SIO_CLK_DEF+4)
 26470  0012' 6EF6               	movwf	tblptrl,c
 26471  0014' 0E00'              	movlw	high (_PIN_SIO_CLK_DEF+4)
 26472  0016' 6EF7               	movwf	tblptrh,c
 26473  0018'                    	if	0	;tblptru may be non-zero
 26474  0018'                    	endif
 26475  0018'                    	if	0	;tblptru may be non-zero
 26476  0018'                    	endif
 26477  0018' 0008               	tblrd		*
 26478  001A' 50F5               	movf	tablat,w,c
 26479  001C' 0AFF               	xorlw	255
 26480  001E' 6E00'              	movwf	??_adf4351_write_latch^0,c
 26481  0020' 0E00'              	movlw	low _PIN_SIO_CLK_DEF
 26482  0022' 6EF6               	movwf	tblptrl,c
 26483  0024'                    	if	1	;There is more than 1 active tblptr byte
 26484  0024' 0E00'              	movlw	high _PIN_SIO_CLK_DEF
 26485  0026' 6EF7               	movwf	tblptrh,c
 26486  0028'                    	endif
 26487  0028'                    	if	0	;There are less than 3 active tblptr bytes
 26488  0028'                    	endif
 26489  0028' 0009               	tblrd		*+
 26490  002A' CFF5 F012'         	movff	tablat,??_adf4351_write_latch+1
 26491  002E' 0009               	tblrd		*+
 26492  0030' CFF5 F013'         	movff	tablat,??_adf4351_write_latch+2
 26493  0034' C012' FFD9         	movff	??_adf4351_write_latch+1,fsr2l
 26494  0038' C013' FFDA         	movff	??_adf4351_write_latch+2,fsr2h
 26495  003C' 5000'              	movf	??_adf4351_write_latch^0,w,c
 26496  003E' 16DF               	andwf	indf2,f,c
 26497  0040'                    
 26498                           ;src/driver/adf4351.c: 358:     _delaywdt((unsigned long)((1)*(8000000/4000000.0)));
 26499  0040' 0004               	clrwdt	
 26500  0042' F000               	nop		;2 cycle nop
 26501                           
 26502                           ;src/driver/adf4351.c: 360:     while(mask) {
 26503  0044' EF00' F000'        	goto	l6355
 26504  0048'                    l6341:
 26505                           
 26506                           ;src/driver/adf4351.c: 361:         if(value&mask) {
 26507  0048' 5000'              	movf	adf4351_write_latch@mask^0,w,c
 26508  004A' 1400'              	andwf	adf4351_write_latch@value^0,w,c
 26509  004C' 6E00'              	movwf	??_adf4351_write_latch^0,c
 26510  004E' 5000'              	movf	(adf4351_write_latch@mask+1)^0,w,c
 26511  0050' 1400'              	andwf	(adf4351_write_latch@value+1)^0,w,c
 26512  0052' 6E00'              	movwf	(??_adf4351_write_latch+1)^0,c
 26513  0054' 5000'              	movf	(adf4351_write_latch@mask+2)^0,w,c
 26514  0056' 1400'              	andwf	(adf4351_write_latch@value+2)^0,w,c
 26515  0058' 6E00'              	movwf	(??_adf4351_write_latch+2)^0,c
 26516  005A' 5000'              	movf	(adf4351_write_latch@mask+3)^0,w,c
 26517  005C' 1400'              	andwf	(adf4351_write_latch@value+3)^0,w,c
 26518  005E' 6E00'              	movwf	(??_adf4351_write_latch+3)^0,c
 26519  0060' 5000'              	movf	??_adf4351_write_latch^0,w,c
 26520  0062' 1000'              	iorwf	(??_adf4351_write_latch+1)^0,w,c
 26521  0064' 1000'              	iorwf	(??_adf4351_write_latch+2)^0,w,c
 26522  0066' 1000'              	iorwf	(??_adf4351_write_latch+3)^0,w,c
 26523  0068' B4D8               	btfsc	status,2,c
 26524  006A' EF00' F000'        	goto	u6641
 26525  006E' EF00' F000'        	goto	u6640
 26526  0072'                    u6641:
 26527  0072' EF00' F000'        	goto	l6345
 26528  0076'                    u6640:
 26529  0076'                    
 26530                           ;src/driver/adf4351.c: 362:             *((PIN_SIO_DATA)->pPORT) |= (PIN_SIO_DATA)->mask
      +                          ;
 26531  0076' 0E00'              	movlw	low (_PIN_SIO_DATA_DEF+4)
 26532  0078' 6EF6               	movwf	tblptrl,c
 26533  007A' 0E00'              	movlw	high (_PIN_SIO_DATA_DEF+4)
 26534  007C' 6EF7               	movwf	tblptrh,c
 26535  007E'                    	if	0	;tblptru may be non-zero
 26536  007E'                    	endif
 26537  007E'                    	if	0	;tblptru may be non-zero
 26538  007E'                    	endif
 26539  007E' 0008               	tblrd		*
 26540  0080' CFF5 F011'         	movff	tablat,??_adf4351_write_latch
 26541  0084' 0E00'              	movlw	low _PIN_SIO_DATA_DEF
 26542  0086' 6EF6               	movwf	tblptrl,c
 26543  0088'                    	if	1	;There is more than 1 active tblptr byte
 26544  0088' 0E00'              	movlw	high _PIN_SIO_DATA_DEF
 26545  008A' 6EF7               	movwf	tblptrh,c
 26546  008C'                    	endif
 26547  008C'                    	if	0	;There are less than 3 active tblptr bytes
 26548  008C'                    	endif
 26549  008C' 0009               	tblrd		*+
 26550  008E' CFF5 F012'         	movff	tablat,??_adf4351_write_latch+1
 26551  0092' 0009               	tblrd		*+
 26552  0094' CFF5 F013'         	movff	tablat,??_adf4351_write_latch+2
 26553  0098' C012' FFD9         	movff	??_adf4351_write_latch+1,fsr2l
 26554  009C' C013' FFDA         	movff	??_adf4351_write_latch+2,fsr2h
 26555  00A0' 5000'              	movf	??_adf4351_write_latch^0,w,c
 26556  00A2' 12DF               	iorwf	indf2,f,c
 26557                           
 26558                           ;src/driver/adf4351.c: 363:         } else {
 26559  00A4' EF00' F000'        	goto	l6347
 26560  00A8'                    l6345:
 26561                           
 26562                           ;src/driver/adf4351.c: 364:             *((PIN_SIO_DATA)->pPORT) &= ~(PIN_SIO_DATA)->mas
      +                          k;
 26563  00A8' 0E00'              	movlw	low (_PIN_SIO_DATA_DEF+4)
 26564  00AA' 6EF6               	movwf	tblptrl,c
 26565  00AC' 0E00'              	movlw	high (_PIN_SIO_DATA_DEF+4)
 26566  00AE' 6EF7               	movwf	tblptrh,c
 26567  00B0'                    	if	0	;tblptru may be non-zero
 26568  00B0'                    	endif
 26569  00B0'                    	if	0	;tblptru may be non-zero
 26570  00B0'                    	endif
 26571  00B0' 0008               	tblrd		*
 26572  00B2' 50F5               	movf	tablat,w,c
 26573  00B4' 0AFF               	xorlw	255
 26574  00B6' 6E00'              	movwf	??_adf4351_write_latch^0,c
 26575  00B8' 0E00'              	movlw	low _PIN_SIO_DATA_DEF
 26576  00BA' 6EF6               	movwf	tblptrl,c
 26577  00BC'                    	if	1	;There is more than 1 active tblptr byte
 26578  00BC' 0E00'              	movlw	high _PIN_SIO_DATA_DEF
 26579  00BE' 6EF7               	movwf	tblptrh,c
 26580  00C0'                    	endif
 26581  00C0'                    	if	0	;There are less than 3 active tblptr bytes
 26582  00C0'                    	endif
 26583  00C0' 0009               	tblrd		*+
 26584  00C2' CFF5 F012'         	movff	tablat,??_adf4351_write_latch+1
 26585  00C6' 0009               	tblrd		*+
 26586  00C8' CFF5 F013'         	movff	tablat,??_adf4351_write_latch+2
 26587  00CC' C012' FFD9         	movff	??_adf4351_write_latch+1,fsr2l
 26588  00D0' C013' FFDA         	movff	??_adf4351_write_latch+2,fsr2h
 26589  00D4' 5000'              	movf	??_adf4351_write_latch^0,w,c
 26590  00D6' 16DF               	andwf	indf2,f,c
 26591  00D8'                    l6347:
 26592                           
 26593                           ;src/driver/adf4351.c: 366:         _delaywdt((unsigned long)((1)*(8000000/4000000.0)));
 26594  00D8' 0004               	clrwdt	
 26595  00DA' F000               	nop		;2 cycle nop
 26596                           
 26597                           ;src/driver/adf4351.c: 367:         *((PIN_SIO_CLK)->pPORT) |= (PIN_SIO_CLK)->mask;
 26598  00DC' 0E00'              	movlw	low (_PIN_SIO_CLK_DEF+4)
 26599  00DE' 6EF6               	movwf	tblptrl,c
 26600  00E0' 0E00'              	movlw	high (_PIN_SIO_CLK_DEF+4)
 26601  00E2' 6EF7               	movwf	tblptrh,c
 26602  00E4'                    	if	0	;tblptru may be non-zero
 26603  00E4'                    	endif
 26604  00E4'                    	if	0	;tblptru may be non-zero
 26605  00E4'                    	endif
 26606  00E4' 0008               	tblrd		*
 26607  00E6' CFF5 F011'         	movff	tablat,??_adf4351_write_latch
 26608  00EA' 0E00'              	movlw	low _PIN_SIO_CLK_DEF
 26609  00EC' 6EF6               	movwf	tblptrl,c
 26610  00EE'                    	if	1	;There is more than 1 active tblptr byte
 26611  00EE' 0E00'              	movlw	high _PIN_SIO_CLK_DEF
 26612  00F0' 6EF7               	movwf	tblptrh,c
 26613  00F2'                    	endif
 26614  00F2'                    	if	0	;There are less than 3 active tblptr bytes
 26615  00F2'                    	endif
 26616  00F2' 0009               	tblrd		*+
 26617  00F4' CFF5 F012'         	movff	tablat,??_adf4351_write_latch+1
 26618  00F8' 0009               	tblrd		*+
 26619  00FA' CFF5 F013'         	movff	tablat,??_adf4351_write_latch+2
 26620  00FE' C012' FFD9         	movff	??_adf4351_write_latch+1,fsr2l
 26621  0102' C013' FFDA         	movff	??_adf4351_write_latch+2,fsr2h
 26622  0106' 5000'              	movf	??_adf4351_write_latch^0,w,c
 26623  0108' 12DF               	iorwf	indf2,f,c
 26624  010A'                    
 26625                           ;src/driver/adf4351.c: 368:         _delaywdt((unsigned long)((1)*(8000000/4000000.0)));
 26626  010A' 0004               	clrwdt	
 26627  010C' F000               	nop		;2 cycle nop
 26628                           
 26629                           ;src/driver/adf4351.c: 369:         *((PIN_SIO_CLK)->pPORT) &= ~(PIN_SIO_CLK)->mask;
 26630  010E' 0E00'              	movlw	low (_PIN_SIO_CLK_DEF+4)
 26631  0110' 6EF6               	movwf	tblptrl,c
 26632  0112' 0E00'              	movlw	high (_PIN_SIO_CLK_DEF+4)
 26633  0114' 6EF7               	movwf	tblptrh,c
 26634  0116'                    	if	0	;tblptru may be non-zero
 26635  0116'                    	endif
 26636  0116'                    	if	0	;tblptru may be non-zero
 26637  0116'                    	endif
 26638  0116' 0008               	tblrd		*
 26639  0118' 50F5               	movf	tablat,w,c
 26640  011A' 0AFF               	xorlw	255
 26641  011C' 6E00'              	movwf	??_adf4351_write_latch^0,c
 26642  011E' 0E00'              	movlw	low _PIN_SIO_CLK_DEF
 26643  0120' 6EF6               	movwf	tblptrl,c
 26644  0122'                    	if	1	;There is more than 1 active tblptr byte
 26645  0122' 0E00'              	movlw	high _PIN_SIO_CLK_DEF
 26646  0124' 6EF7               	movwf	tblptrh,c
 26647  0126'                    	endif
 26648  0126'                    	if	0	;There are less than 3 active tblptr bytes
 26649  0126'                    	endif
 26650  0126' 0009               	tblrd		*+
 26651  0128' CFF5 F012'         	movff	tablat,??_adf4351_write_latch+1
 26652  012C' 0009               	tblrd		*+
 26653  012E' CFF5 F013'         	movff	tablat,??_adf4351_write_latch+2
 26654  0132' C012' FFD9         	movff	??_adf4351_write_latch+1,fsr2l
 26655  0136' C013' FFDA         	movff	??_adf4351_write_latch+2,fsr2h
 26656  013A' 5000'              	movf	??_adf4351_write_latch^0,w,c
 26657  013C' 16DF               	andwf	indf2,f,c
 26658  013E'                    
 26659                           ;src/driver/adf4351.c: 370:         _delaywdt((unsigned long)((1)*(8000000/4000000.0)));
 26660  013E' 0004               	clrwdt	
 26661  0140' F000               	nop		;2 cycle nop
 26662  0142'                    
 26663                           ;src/driver/adf4351.c: 372:         mask >>= 1;
 26664  0142' 90D8               	bcf	status,0,c
 26665  0144' 3200'              	rrcf	(adf4351_write_latch@mask+3)^0,f,c
 26666  0146' 3200'              	rrcf	(adf4351_write_latch@mask+2)^0,f,c
 26667  0148' 3200'              	rrcf	(adf4351_write_latch@mask+1)^0,f,c
 26668  014A' 3200'              	rrcf	adf4351_write_latch@mask^0,f,c
 26669  014C'                    l6355:
 26670                           
 26671                           ;src/driver/adf4351.c: 360:     while(mask) {
 26672  014C' 5000'              	movf	adf4351_write_latch@mask^0,w,c
 26673  014E' 1000'              	iorwf	(adf4351_write_latch@mask+1)^0,w,c
 26674  0150' 1000'              	iorwf	(adf4351_write_latch@mask+2)^0,w,c
 26675  0152' 1000'              	iorwf	(adf4351_write_latch@mask+3)^0,w,c
 26676  0154' A4D8               	btfss	status,2,c
 26677  0156' EF00' F000'        	goto	u6651
 26678  015A' EF00' F000'        	goto	u6650
 26679  015E'                    u6651:
 26680  015E' EF00' F000'        	goto	l6341
 26681  0162'                    u6650:
 26682  0162'                    
 26683                           ;src/driver/adf4351.c: 376:  *((PIN_ADF_LE)->pPORT) |= (PIN_ADF_LE)->mask;
 26684  0162' 0E00'              	movlw	low (_PIN_ADF_LE_DEF+4)
 26685  0164' 6EF6               	movwf	tblptrl,c
 26686  0166' 0E00'              	movlw	high (_PIN_ADF_LE_DEF+4)
 26687  0168' 6EF7               	movwf	tblptrh,c
 26688  016A'                    	if	0	;tblptru may be non-zero
 26689  016A'                    	endif
 26690  016A'                    	if	0	;tblptru may be non-zero
 26691  016A'                    	endif
 26692  016A' 0008               	tblrd		*
 26693  016C' CFF5 F011'         	movff	tablat,??_adf4351_write_latch
 26694  0170' 0E00'              	movlw	low _PIN_ADF_LE_DEF
 26695  0172' 6EF6               	movwf	tblptrl,c
 26696  0174'                    	if	1	;There is more than 1 active tblptr byte
 26697  0174' 0E00'              	movlw	high _PIN_ADF_LE_DEF
 26698  0176' 6EF7               	movwf	tblptrh,c
 26699  0178'                    	endif
 26700  0178'                    	if	0	;There are less than 3 active tblptr bytes
 26701  0178'                    	endif
 26702  0178' 0009               	tblrd		*+
 26703  017A' CFF5 F012'         	movff	tablat,??_adf4351_write_latch+1
 26704  017E' 0009               	tblrd		*+
 26705  0180' CFF5 F013'         	movff	tablat,??_adf4351_write_latch+2
 26706  0184' C012' FFD9         	movff	??_adf4351_write_latch+1,fsr2l
 26707  0188' C013' FFDA         	movff	??_adf4351_write_latch+2,fsr2h
 26708  018C' 5000'              	movf	??_adf4351_write_latch^0,w,c
 26709  018E' 12DF               	iorwf	indf2,f,c
 26710  0190'                    
 26711                           ;src/driver/adf4351.c: 377:  _delaywdt((unsigned long)((1)*(8000000/4000000.0)));
 26712  0190' 0004               	clrwdt	
 26713  0192' F000               	nop		;2 cycle nop
 26714                           
 26715                           ;src/driver/adf4351.c: 378:  *((PIN_ADF_LE)->pPORT) &= ~(PIN_ADF_LE)->mask;
 26716  0194' 0E00'              	movlw	low (_PIN_ADF_LE_DEF+4)
 26717  0196' 6EF6               	movwf	tblptrl,c
 26718  0198' 0E00'              	movlw	high (_PIN_ADF_LE_DEF+4)
 26719  019A' 6EF7               	movwf	tblptrh,c
 26720  019C'                    	if	0	;tblptru may be non-zero
 26721  019C'                    	endif
 26722  019C'                    	if	0	;tblptru may be non-zero
 26723  019C'                    	endif
 26724  019C' 0008               	tblrd		*
 26725  019E' 50F5               	movf	tablat,w,c
 26726  01A0' 0AFF               	xorlw	255
 26727  01A2' 6E00'              	movwf	??_adf4351_write_latch^0,c
 26728  01A4' 0E00'              	movlw	low _PIN_ADF_LE_DEF
 26729  01A6' 6EF6               	movwf	tblptrl,c
 26730  01A8'                    	if	1	;There is more than 1 active tblptr byte
 26731  01A8' 0E00'              	movlw	high _PIN_ADF_LE_DEF
 26732  01AA' 6EF7               	movwf	tblptrh,c
 26733  01AC'                    	endif
 26734  01AC'                    	if	0	;There are less than 3 active tblptr bytes
 26735  01AC'                    	endif
 26736  01AC' 0009               	tblrd		*+
 26737  01AE' CFF5 F012'         	movff	tablat,??_adf4351_write_latch+1
 26738  01B2' 0009               	tblrd		*+
 26739  01B4' CFF5 F013'         	movff	tablat,??_adf4351_write_latch+2
 26740  01B8' C012' FFD9         	movff	??_adf4351_write_latch+1,fsr2l
 26741  01BC' C013' FFDA         	movff	??_adf4351_write_latch+2,fsr2h
 26742  01C0' 5000'              	movf	??_adf4351_write_latch^0,w,c
 26743  01C2' 16DF               	andwf	indf2,f,c
 26744  01C4'                    
 26745                           ;src/driver/adf4351.c: 379:  _delaywdt((unsigned long)((50)*(8000000/4000000.0)));
 26746  01C4' 0E19               	movlw	25
 26747  01C6'                    u14107:
 26748  01C6' 0004               	clrwdt	
 26749  01C8' 2EE8               	decfsz	wreg,f,c
 26750  01CA' D7FD               	bra	u14107
 26751  01CC' 0012               	return		;funcret
 26752  01CE'                    __end_of_adf4351_write_latch:
 26753                           	opt callstack 0
 26754                           
 26755 ;; *************** function _adf4351_init *****************
 26756 ;; Defined at:
 26757 ;;		line 33 in file "src/driver/adf4351.c"
 26758 ;; Parameters:    Size  Location     Type
 26759 ;;  ctx             2   25[COMRAM] PTR struct adf4351_ctx
 26760 ;;		 -> g_adf4351(55), 
 26761 ;; Auto vars:     Size  Location     Type
 26762 ;;		None
 26763 ;; Return value:  Size  Location     Type
 26764 ;;                  1    wreg      void 
 26765 ;; Registers used:
 26766 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26767 ;; Tracked objects:
 26768 ;;		On entry : 0/0
 26769 ;;		On exit  : 0/0
 26770 ;;		Unchanged: 0/0
 26771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 26772 ;;      Params:         2       0       0       0       0       0       0
 26773 ;;      Locals:         0       0       0       0       0       0       0
 26774 ;;      Temps:          3       0       0       0       0       0       0
 26775 ;;      Totals:         5       0       0       0       0       0       0
 26776 ;;Total ram usage:        5 bytes
 26777 ;; Hardware stack levels used:    1
 26778 ;; Hardware stack levels required when called:    3
 26779 ;; This function calls:
 26780 ;;		_adf4351_default
 26781 ;;		_memset
 26782 ;; This function is called by:
 26783 ;;		_main
 26784 ;; This function uses a non-reentrant model
 26785 ;;
 26786                           
 26787                           	psect	text107
 26788  0000'                    __ptext107:
 26789                           	opt callstack 0
 26790  0000'                    _adf4351_init:
 26791                           	opt callstack 27
 26792  0000'                    
 26793                           ;src/driver/adf4351.c: 33: void adf4351_init(adf4351_ctx* ctx);src/driver/adf4351.c: 34:
      +                           {;src/driver/adf4351.c: 35:  memset(ctx, 0, sizeof(*ctx));
 26794  0000' C019' F00D'        	movff	adf4351_init@ctx,memset@dest
 26795  0004' C01A' F00E'        	movff	adf4351_init@ctx+1,memset@dest+1
 26796  0008' 0E00               	movlw	0
 26797  000A' 6E00'              	movwf	(memset@c+1)^0,c
 26798  000C' 0E00               	movlw	0
 26799  000E' 6E00'              	movwf	memset@c^0,c
 26800  0010' 0E00               	movlw	0
 26801  0012' 6E00'              	movwf	(memset@n+1)^0,c
 26802  0014' 0E37               	movlw	55
 26803  0016' 6E00'              	movwf	memset@n^0,c
 26804  0018' EC00' F000'        	call	_memset	;wreg free
 26805  001C'                    
 26806                           ;src/driver/adf4351.c: 38:  ctx->init = 1;
 26807  001C' C019' FFD9         	movff	adf4351_init@ctx,fsr2l
 26808  0020' C01A' FFDA         	movff	adf4351_init@ctx+1,fsr2h
 26809  0024' 0E01               	movlw	1
 26810  0026' 6EDE               	movwf	postinc2,c
 26811  0028' 0E00               	movlw	0
 26812  002A' 6EDD               	movwf	postdec2,c
 26813  002C'                    
 26814                           ;src/driver/adf4351.c: 41:     *((PIN_ADF_LE)->pPORT) &= ~(PIN_ADF_LE)->mask;
 26815  002C' 0E00'              	movlw	low (_PIN_ADF_LE_DEF+4)
 26816  002E' 6EF6               	movwf	tblptrl,c
 26817  0030' 0E00'              	movlw	high (_PIN_ADF_LE_DEF+4)
 26818  0032' 6EF7               	movwf	tblptrh,c
 26819  0034'                    	if	0	;tblptru may be non-zero
 26820  0034'                    	endif
 26821  0034'                    	if	0	;tblptru may be non-zero
 26822  0034'                    	endif
 26823  0034' 0008               	tblrd		*
 26824  0036' 50F5               	movf	tablat,w,c
 26825  0038' 0AFF               	xorlw	255
 26826  003A' 6E00'              	movwf	??_adf4351_init^0,c
 26827  003C' 0E00'              	movlw	low _PIN_ADF_LE_DEF
 26828  003E' 6EF6               	movwf	tblptrl,c
 26829  0040'                    	if	1	;There is more than 1 active tblptr byte
 26830  0040' 0E00'              	movlw	high _PIN_ADF_LE_DEF
 26831  0042' 6EF7               	movwf	tblptrh,c
 26832  0044'                    	endif
 26833  0044'                    	if	0	;There are less than 3 active tblptr bytes
 26834  0044'                    	endif
 26835  0044' 0009               	tblrd		*+
 26836  0046' CFF5 F01C'         	movff	tablat,??_adf4351_init+1
 26837  004A' 0009               	tblrd		*+
 26838  004C' CFF5 F01D'         	movff	tablat,??_adf4351_init+2
 26839  0050' C01C' FFD9         	movff	??_adf4351_init+1,fsr2l
 26840  0054' C01D' FFDA         	movff	??_adf4351_init+2,fsr2h
 26841  0058' 5000'              	movf	??_adf4351_init^0,w,c
 26842  005A' 16DF               	andwf	indf2,f,c
 26843  005C'                    
 26844                           ;src/driver/adf4351.c: 42:     *((PIN_ADF_CE)->pPORT) |= (PIN_ADF_CE)->mask;
 26845  005C' 0E00'              	movlw	low (_PIN_ADF_CE_DEF+4)
 26846  005E' 6EF6               	movwf	tblptrl,c
 26847  0060' 0E00'              	movlw	high (_PIN_ADF_CE_DEF+4)
 26848  0062' 6EF7               	movwf	tblptrh,c
 26849  0064'                    	if	0	;tblptru may be non-zero
 26850  0064'                    	endif
 26851  0064'                    	if	0	;tblptru may be non-zero
 26852  0064'                    	endif
 26853  0064' 0008               	tblrd		*
 26854  0066' CFF5 F01B'         	movff	tablat,??_adf4351_init
 26855  006A' 0E00'              	movlw	low _PIN_ADF_CE_DEF
 26856  006C' 6EF6               	movwf	tblptrl,c
 26857  006E'                    	if	1	;There is more than 1 active tblptr byte
 26858  006E' 0E00'              	movlw	high _PIN_ADF_CE_DEF
 26859  0070' 6EF7               	movwf	tblptrh,c
 26860  0072'                    	endif
 26861  0072'                    	if	0	;There are less than 3 active tblptr bytes
 26862  0072'                    	endif
 26863  0072' 0009               	tblrd		*+
 26864  0074' CFF5 F01C'         	movff	tablat,??_adf4351_init+1
 26865  0078' 0009               	tblrd		*+
 26866  007A' CFF5 F01D'         	movff	tablat,??_adf4351_init+2
 26867  007E' C01C' FFD9         	movff	??_adf4351_init+1,fsr2l
 26868  0082' C01D' FFDA         	movff	??_adf4351_init+2,fsr2h
 26869  0086' 5000'              	movf	??_adf4351_init^0,w,c
 26870  0088' 12DF               	iorwf	indf2,f,c
 26871  008A'                    
 26872                           ;src/driver/adf4351.c: 45:  adf4351_default(ctx);
 26873  008A' C019' F00D'        	movff	adf4351_init@ctx,adf4351_default@ctx
 26874  008E' C01A' F00E'        	movff	adf4351_init@ctx+1,adf4351_default@ctx+1
 26875  0092' EC00' F000'        	call	_adf4351_default	;wreg free
 26876  0096'                    
 26877                           ;src/driver/adf4351.c: 47:     _delaywdt((unsigned long)((100)*(8000000/4000000.0)));
 26878  0096' 0E32               	movlw	50
 26879  0098'                    u14117:
 26880  0098' 0004               	clrwdt	
 26881  009A' 2EE8               	decfsz	wreg,f,c
 26882  009C' D7FD               	bra	u14117
 26883  009E' 0012               	return		;funcret
 26884  00A0'                    __end_of_adf4351_init:
 26885                           	opt callstack 0
 26886                           
 26887 ;; *************** function _memset *****************
 26888 ;; Defined at:
 26889 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 26890 ;; Parameters:    Size  Location     Type
 26891 ;;  dest            2   13[COMRAM] PTR void 
 26892 ;;		 -> g_adf4351(55), g_i2c_bus(8), eval_gps@elem(240), itoa@buffer(12), 
 26893 ;;		 -> print_char@map(8), lcd_clear_screen@buf(128), 
 26894 ;;  c               2   15[COMRAM] int 
 26895 ;;  n               2   17[COMRAM] unsigned int 
 26896 ;; Auto vars:     Size  Location     Type
 26897 ;;  s               2   23[COMRAM] PTR unsigned char 
 26898 ;;		 -> g_adf4351(55), g_i2c_bus(8), eval_gps@elem(240), itoa@buffer(12), 
 26899 ;;		 -> print_char@map(8), lcd_clear_screen@buf(128), 
 26900 ;;  k               2   21[COMRAM] unsigned int 
 26901 ;; Return value:  Size  Location     Type
 26902 ;;                  2   13[COMRAM] PTR void 
 26903 ;; Registers used:
 26904 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26905 ;; Tracked objects:
 26906 ;;		On entry : 0/0
 26907 ;;		On exit  : 0/0
 26908 ;;		Unchanged: 0/0
 26909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 26910 ;;      Params:         6       0       0       0       0       0       0
 26911 ;;      Locals:         4       0       0       0       0       0       0
 26912 ;;      Temps:          2       0       0       0       0       0       0
 26913 ;;      Totals:        12       0       0       0       0       0       0
 26914 ;;Total ram usage:       12 bytes
 26915 ;; Hardware stack levels used:    1
 26916 ;; Hardware stack levels required when called:    2
 26917 ;; This function calls:
 26918 ;;		Nothing
 26919 ;; This function is called by:
 26920 ;;		_adf4351_init
 26921 ;;		_i2c_native_init
 26922 ;;		_lcd_clear_screen
 26923 ;;		_print_char
 26924 ;;		_itoa
 26925 ;;		_eval_gps
 26926 ;; This function uses a non-reentrant model
 26927 ;;
 26928                           
 26929                           	psect	text108
 26930  0000'                    __ptext108:
 26931                           	opt callstack 0
 26932  0000'                    _memset:
 26933                           	opt callstack 25
 26934  0000' C00D' F017'        	movff	memset@dest,memset@s
 26935  0004' C00E' F018'        	movff	memset@dest+1,memset@s+1
 26936  0008' 5000'              	movf	memset@n^0,w,c
 26937  000A' 1000'              	iorwf	(memset@n+1)^0,w,c
 26938  000C' A4D8               	btfss	status,2,c
 26939  000E' EF00' F000'        	goto	u11971
 26940  0012' EF00' F000'        	goto	u11970
 26941  0016'                    u11971:
 26942  0016' EF00' F000'        	goto	l9711
 26943  001A'                    u11970:
 26944  001A' EF00' F000'        	goto	l2155
 26945  001E'                    l9711:
 26946  001E' C017' FFD9         	movff	memset@s,fsr2l
 26947  0022' C018' FFDA         	movff	memset@s+1,fsr2h
 26948  0026' C00F' FFDF         	movff	memset@c,indf2
 26949  002A' 5000'              	movf	memset@n^0,w,c
 26950  002C' 2400'              	addwf	memset@s^0,w,c
 26951  002E' 6E00'              	movwf	??_memset^0,c
 26952  0030' 5000'              	movf	(memset@n+1)^0,w,c
 26953  0032' 2000'              	addwfc	(memset@s+1)^0,w,c
 26954  0034' 6E00'              	movwf	(??_memset+1)^0,c
 26955  0036' 0EFF               	movlw	255
 26956  0038' 2400'              	addwf	??_memset^0,w,c
 26957  003A' 6ED9               	movwf	fsr2l,c
 26958  003C' 0EFF               	movlw	255
 26959  003E' 2000'              	addwfc	(??_memset+1)^0,w,c
 26960  0040' 6EDA               	movwf	fsr2h,c
 26961  0042' C00F' FFDF         	movff	memset@c,indf2
 26962  0046' 5000'              	movf	(memset@n+1)^0,w,c
 26963  0048' E107               	bnz	u11981
 26964  004A' 0E03               	movlw	3
 26965  004C' 5C00'              	subwf	memset@n^0,w,c
 26966  004E' B0D8               	btfsc	status,0,c
 26967  0050' EF00' F000'        	goto	u11981
 26968  0054' EF00' F000'        	goto	u11980
 26969  0058'                    u11981:
 26970  0058' EF00' F000'        	goto	l9717
 26971  005C'                    u11980:
 26972  005C' EF00' F000'        	goto	l2155
 26973  0060'                    l9717:
 26974  0060' EE20 F001          	lfsr	2,1
 26975  0064' 5000'              	movf	memset@s^0,w,c
 26976  0066' 26D9               	addwf	fsr2l,f,c
 26977  0068' 5000'              	movf	(memset@s+1)^0,w,c
 26978  006A' 22DA               	addwfc	fsr2h,f,c
 26979  006C' C00F' FFDF         	movff	memset@c,indf2
 26980  0070' EE20 F002          	lfsr	2,2
 26981  0074' 5000'              	movf	memset@s^0,w,c
 26982  0076' 26D9               	addwf	fsr2l,f,c
 26983  0078' 5000'              	movf	(memset@s+1)^0,w,c
 26984  007A' 22DA               	addwfc	fsr2h,f,c
 26985  007C' C00F' FFDF         	movff	memset@c,indf2
 26986  0080' 5000'              	movf	memset@n^0,w,c
 26987  0082' 2400'              	addwf	memset@s^0,w,c
 26988  0084' 6E00'              	movwf	??_memset^0,c
 26989  0086' 5000'              	movf	(memset@n+1)^0,w,c
 26990  0088' 2000'              	addwfc	(memset@s+1)^0,w,c
 26991  008A' 6E00'              	movwf	(??_memset+1)^0,c
 26992  008C' 0EFE               	movlw	254
 26993  008E' 2400'              	addwf	??_memset^0,w,c
 26994  0090' 6ED9               	movwf	fsr2l,c
 26995  0092' 0EFF               	movlw	255
 26996  0094' 2000'              	addwfc	(??_memset+1)^0,w,c
 26997  0096' 6EDA               	movwf	fsr2h,c
 26998  0098' C00F' FFDF         	movff	memset@c,indf2
 26999  009C' 5000'              	movf	memset@n^0,w,c
 27000  009E' 2400'              	addwf	memset@s^0,w,c
 27001  00A0' 6E00'              	movwf	??_memset^0,c
 27002  00A2' 5000'              	movf	(memset@n+1)^0,w,c
 27003  00A4' 2000'              	addwfc	(memset@s+1)^0,w,c
 27004  00A6' 6E00'              	movwf	(??_memset+1)^0,c
 27005  00A8' 0EFD               	movlw	253
 27006  00AA' 2400'              	addwf	??_memset^0,w,c
 27007  00AC' 6ED9               	movwf	fsr2l,c
 27008  00AE' 0EFF               	movlw	255
 27009  00B0' 2000'              	addwfc	(??_memset+1)^0,w,c
 27010  00B2' 6EDA               	movwf	fsr2h,c
 27011  00B4' C00F' FFDF         	movff	memset@c,indf2
 27012  00B8' 5000'              	movf	(memset@n+1)^0,w,c
 27013  00BA' E107               	bnz	u11991
 27014  00BC' 0E07               	movlw	7
 27015  00BE' 5C00'              	subwf	memset@n^0,w,c
 27016  00C0' B0D8               	btfsc	status,0,c
 27017  00C2' EF00' F000'        	goto	u11991
 27018  00C6' EF00' F000'        	goto	u11990
 27019  00CA'                    u11991:
 27020  00CA' EF00' F000'        	goto	l9723
 27021  00CE'                    u11990:
 27022  00CE' EF00' F000'        	goto	l2155
 27023  00D2'                    l9723:
 27024  00D2' EE20 F003          	lfsr	2,3
 27025  00D6' 5000'              	movf	memset@s^0,w,c
 27026  00D8' 26D9               	addwf	fsr2l,f,c
 27027  00DA' 5000'              	movf	(memset@s+1)^0,w,c
 27028  00DC' 22DA               	addwfc	fsr2h,f,c
 27029  00DE' C00F' FFDF         	movff	memset@c,indf2
 27030  00E2' 5000'              	movf	memset@n^0,w,c
 27031  00E4' 2400'              	addwf	memset@s^0,w,c
 27032  00E6' 6E00'              	movwf	??_memset^0,c
 27033  00E8' 5000'              	movf	(memset@n+1)^0,w,c
 27034  00EA' 2000'              	addwfc	(memset@s+1)^0,w,c
 27035  00EC' 6E00'              	movwf	(??_memset+1)^0,c
 27036  00EE' 0EFC               	movlw	252
 27037  00F0' 2400'              	addwf	??_memset^0,w,c
 27038  00F2' 6ED9               	movwf	fsr2l,c
 27039  00F4' 0EFF               	movlw	255
 27040  00F6' 2000'              	addwfc	(??_memset+1)^0,w,c
 27041  00F8' 6EDA               	movwf	fsr2h,c
 27042  00FA' C00F' FFDF         	movff	memset@c,indf2
 27043  00FE' 5000'              	movf	(memset@n+1)^0,w,c
 27044  0100' E107               	bnz	u12001
 27045  0102' 0E09               	movlw	9
 27046  0104' 5C00'              	subwf	memset@n^0,w,c
 27047  0106' B0D8               	btfsc	status,0,c
 27048  0108' EF00' F000'        	goto	u12001
 27049  010C' EF00' F000'        	goto	u12000
 27050  0110'                    u12001:
 27051  0110' EF00' F000'        	goto	l9729
 27052  0114'                    u12000:
 27053  0114' EF00' F000'        	goto	l2155
 27054  0118'                    l9729:
 27055  0118' C017' F013'        	movff	memset@s,??_memset
 27056  011C' C018' F014'        	movff	memset@s+1,??_memset+1
 27057  0120' 1E00'              	comf	??_memset^0,f,c
 27058  0122' 1E00'              	comf	(??_memset+1)^0,f,c
 27059  0124' 4A00'              	infsnz	??_memset^0,f,c
 27060  0126' 2A00'              	incf	(??_memset+1)^0,f,c
 27061  0128' 0E03               	movlw	3
 27062  012A' 1400'              	andwf	??_memset^0,w,c
 27063  012C' 6E00'              	movwf	memset@k^0,c
 27064  012E' 6A00'              	clrf	(memset@k+1)^0,c
 27065  0130' 5000'              	movf	memset@k^0,w,c
 27066  0132' 2600'              	addwf	memset@s^0,f,c
 27067  0134' 5000'              	movf	(memset@k+1)^0,w,c
 27068  0136' 2200'              	addwfc	(memset@s+1)^0,f,c
 27069  0138' 5000'              	movf	memset@k^0,w,c
 27070  013A' 5E00'              	subwf	memset@n^0,f,c
 27071  013C' 5000'              	movf	(memset@k+1)^0,w,c
 27072  013E' 5A00'              	subwfb	(memset@n+1)^0,f,c
 27073  0140' 0EFC               	movlw	252
 27074  0142' 1600'              	andwf	memset@n^0,f,c
 27075  0144' 0EFF               	movlw	255
 27076  0146' 1600'              	andwf	(memset@n+1)^0,f,c
 27077  0148' EF00' F000'        	goto	l9737
 27078  014C'                    l9731:
 27079  014C' C017' FFD9         	movff	memset@s,fsr2l
 27080  0150' C018' FFDA         	movff	memset@s+1,fsr2h
 27081  0154' C00F' FFDF         	movff	memset@c,indf2
 27082  0158' 0600'              	decf	memset@n^0,f,c
 27083  015A' A0D8               	btfss	status,0,c
 27084  015C' 0600'              	decf	(memset@n+1)^0,f,c
 27085  015E' 4A00'              	infsnz	memset@s^0,f,c
 27086  0160' 2A00'              	incf	(memset@s+1)^0,f,c
 27087  0162'                    l9737:
 27088  0162' 5000'              	movf	memset@n^0,w,c
 27089  0164' 1000'              	iorwf	(memset@n+1)^0,w,c
 27090  0166' A4D8               	btfss	status,2,c
 27091  0168' EF00' F000'        	goto	u12011
 27092  016C' EF00' F000'        	goto	u12010
 27093  0170'                    u12011:
 27094  0170' EF00' F000'        	goto	l9731
 27095  0174'                    u12010:
 27096  0174'                    l2155:
 27097  0174' 0012               	return		;funcret
 27098  0176'                    __end_of_memset:
 27099                           	opt callstack 0
 27100                           
 27101 ;; *************** function _adf4351_default *****************
 27102 ;; Defined at:
 27103 ;;		line 216 in file "src/driver/adf4351.c"
 27104 ;; Parameters:    Size  Location     Type
 27105 ;;  ctx             2   13[COMRAM] PTR struct adf4351_ctx
 27106 ;;		 -> g_adf4351(55), 
 27107 ;; Auto vars:     Size  Location     Type
 27108 ;;		None
 27109 ;; Return value:  Size  Location     Type
 27110 ;;                  1    wreg      void 
 27111 ;; Registers used:
 27112 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27113 ;; Tracked objects:
 27114 ;;		On entry : 0/0
 27115 ;;		On exit  : 0/0
 27116 ;;		Unchanged: 0/0
 27117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 27118 ;;      Params:         2       0       0       0       0       0       0
 27119 ;;      Locals:         0       0       0       0       0       0       0
 27120 ;;      Temps:          0       0       0       0       0       0       0
 27121 ;;      Totals:         2       0       0       0       0       0       0
 27122 ;;Total ram usage:        2 bytes
 27123 ;; Hardware stack levels used:    1
 27124 ;; Hardware stack levels required when called:    2
 27125 ;; This function calls:
 27126 ;;		Nothing
 27127 ;; This function is called by:
 27128 ;;		_adf4351_init
 27129 ;; This function uses a non-reentrant model
 27130 ;;
 27131                           
 27132                           	psect	text109
 27133  0000'                    __ptext109:
 27134                           	opt callstack 0
 27135  0000'                    _adf4351_default:
 27136                           	opt callstack 27
 27137  0000'                    
 27138                           ;src/driver/adf4351.c: 216: static void adf4351_default(adf4351_ctx* ctx);src/driver/adf
      +                          4351.c: 217: {;src/driver/adf4351.c: 218:  ctx->reg1.phase = 1;
 27139  0000' EE20 F007          	lfsr	2,7
 27140  0004' 5000'              	movf	adf4351_default@ctx^0,w,c
 27141  0006' 26D9               	addwf	fsr2l,f,c
 27142  0008' 5000'              	movf	(adf4351_default@ctx+1)^0,w,c
 27143  000A' 22DA               	addwfc	fsr2h,f,c
 27144  000C' 0E01               	movlw	1
 27145  000E' 6EDE               	movwf	postinc2,c
 27146  0010' 0E00               	movlw	0
 27147  0012' 6EDD               	movwf	postdec2,c
 27148                           
 27149                           ;src/driver/adf4351.c: 219:  ctx->reg2.muxout = 6;
 27150  0014' EE20 F00C          	lfsr	2,12
 27151  0018' 5000'              	movf	adf4351_default@ctx^0,w,c
 27152  001A' 26D9               	addwf	fsr2l,f,c
 27153  001C' 5000'              	movf	(adf4351_default@ctx+1)^0,w,c
 27154  001E' 22DA               	addwfc	fsr2h,f,c
 27155  0020' 0E06               	movlw	6
 27156  0022' 6EDF               	movwf	indf2,c
 27157                           
 27158                           ;src/driver/adf4351.c: 220:  ctx->reg2.cpc = 7;
 27159  0024' EE20 F012          	lfsr	2,18
 27160  0028' 5000'              	movf	adf4351_default@ctx^0,w,c
 27161  002A' 26D9               	addwf	fsr2l,f,c
 27162  002C' 5000'              	movf	(adf4351_default@ctx+1)^0,w,c
 27163  002E' 22DA               	addwfc	fsr2h,f,c
 27164  0030' 0E07               	movlw	7
 27165  0032' 6EDF               	movwf	indf2,c
 27166                           
 27167                           ;src/driver/adf4351.c: 221:  ctx->reg2.lownoise = 3;
 27168  0034' EE20 F00B          	lfsr	2,11
 27169  0038' 5000'              	movf	adf4351_default@ctx^0,w,c
 27170  003A' 26D9               	addwf	fsr2l,f,c
 27171  003C' 5000'              	movf	(adf4351_default@ctx+1)^0,w,c
 27172  003E' 22DA               	addwfc	fsr2h,f,c
 27173  0040' 0E03               	movlw	3
 27174  0042' 6EDF               	movwf	indf2,c
 27175                           
 27176                           ;src/driver/adf4351.c: 222:  ctx->reg2.pdpol = 1;
 27177  0044' EE20 F015          	lfsr	2,21
 27178  0048' 5000'              	movf	adf4351_default@ctx^0,w,c
 27179  004A' 26D9               	addwf	fsr2l,f,c
 27180  004C' 5000'              	movf	(adf4351_default@ctx+1)^0,w,c
 27181  004E' 22DA               	addwfc	fsr2h,f,c
 27182  0050' 0E01               	movlw	1
 27183  0052' 6EDF               	movwf	indf2,c
 27184                           
 27185                           ;src/driver/adf4351.c: 223:  ctx->reg4.fbsel = 1;
 27186  0054' EE20 F020          	lfsr	2,32
 27187  0058' 5000'              	movf	adf4351_default@ctx^0,w,c
 27188  005A' 26D9               	addwf	fsr2l,f,c
 27189  005C' 5000'              	movf	(adf4351_default@ctx+1)^0,w,c
 27190  005E' 22DA               	addwfc	fsr2h,f,c
 27191  0060' 0E01               	movlw	1
 27192  0062' 6EDF               	movwf	indf2,c
 27193                           
 27194                           ;src/driver/adf4351.c: 224:  ctx->reg4.rfoutena = 1;
 27195  0064' EE20 F028          	lfsr	2,40
 27196  0068' 5000'              	movf	adf4351_default@ctx^0,w,c
 27197  006A' 26D9               	addwf	fsr2l,f,c
 27198  006C' 5000'              	movf	(adf4351_default@ctx+1)^0,w,c
 27199  006E' 22DA               	addwfc	fsr2h,f,c
 27200  0070' 0E01               	movlw	1
 27201  0072' 6EDF               	movwf	indf2,c
 27202                           
 27203                           ;src/driver/adf4351.c: 225:  ctx->reg4.rfoutpwr = 3;
 27204  0074' EE20 F029          	lfsr	2,41
 27205  0078' 5000'              	movf	adf4351_default@ctx^0,w,c
 27206  007A' 26D9               	addwf	fsr2l,f,c
 27207  007C' 5000'              	movf	(adf4351_default@ctx+1)^0,w,c
 27208  007E' 22DA               	addwfc	fsr2h,f,c
 27209  0080' 0E03               	movlw	3
 27210  0082' 6EDF               	movwf	indf2,c
 27211                           
 27212                           ;src/driver/adf4351.c: 226:     ctx->reg4.vcopd = 1;
 27213  0084' EE20 F023          	lfsr	2,35
 27214  0088' 5000'              	movf	adf4351_default@ctx^0,w,c
 27215  008A' 26D9               	addwf	fsr2l,f,c
 27216  008C' 5000'              	movf	(adf4351_default@ctx+1)^0,w,c
 27217  008E' 22DA               	addwfc	fsr2h,f,c
 27218  0090' 0E01               	movlw	1
 27219  0092' 6EDF               	movwf	indf2,c
 27220                           
 27221                           ;src/driver/adf4351.c: 227:     ctx->reg5.ldpinmod = 1;
 27222  0094' EE20 F02A          	lfsr	2,42
 27223  0098' 5000'              	movf	adf4351_default@ctx^0,w,c
 27224  009A' 26D9               	addwf	fsr2l,f,c
 27225  009C' 5000'              	movf	(adf4351_default@ctx+1)^0,w,c
 27226  009E' 22DA               	addwfc	fsr2h,f,c
 27227  00A0' 0E01               	movlw	1
 27228  00A2' 6EDF               	movwf	indf2,c
 27229  00A4' 0012               	return		;funcret
 27230  00A6'                    __end_of_adf4351_default:
 27231                           	opt callstack 0
 27232                           
 27233 ;; *************** function _global_irq_handler *****************
 27234 ;; Defined at:
 27235 ;;		line 17 in file "src/driver/irq.c"
 27236 ;; Parameters:    Size  Location     Type
 27237 ;;		None
 27238 ;; Auto vars:     Size  Location     Type
 27239 ;;  dummy           1   12[COMRAM] volatile unsigned char 
 27240 ;;  dummy           1   11[COMRAM] volatile unsigned char 
 27241 ;; Return value:  Size  Location     Type
 27242 ;;                  1    wreg      void 
 27243 ;; Registers used:
 27244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 27245 ;; Tracked objects:
 27246 ;;		On entry : 0/0
 27247 ;;		On exit  : 0/0
 27248 ;;		Unchanged: 0/0
 27249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 27250 ;;      Params:         0       0       0       0       0       0       0
 27251 ;;      Locals:         2       0       0       0       0       0       0
 27252 ;;      Temps:          4       0       0       0       0       0       0
 27253 ;;      Totals:         6       0       0       0       0       0       0
 27254 ;;Total ram usage:        6 bytes
 27255 ;; Hardware stack levels used:    1
 27256 ;; Hardware stack levels required when called:    1
 27257 ;; This function calls:
 27258 ;;		_usart_rx_irq_handler
 27259 ;; This function is called by:
 27260 ;;		Interrupt level 2
 27261 ;; This function uses a non-reentrant model
 27262 ;;
 27263                           
 27264                           	psect	intcode
 27265  0000'                    __pintcode:
 27266                           	opt callstack 0
 27267  0000'                    _global_irq_handler:
 27268                           	opt callstack 17
 27269                           
 27270                           ;incstack = 0
 27271  0000' 8200'              	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 27272  0002' ED00' F000'        	call	int_func,f	;refresh shadow registers
 27273                           
 27274                           	psect	intcode_body
 27275  0000'                    __pintcode_body:
 27276                           	opt callstack 17
 27277  0000'                    int_func:
 27278                           	opt callstack 17
 27279  0000' 0006               	pop		; remove dummy address from shadow register refresh
 27280  0002' CFFA F007'         	movff	pclath,??_global_irq_handler
 27281  0006' CFFB F008'         	movff	pclatu,??_global_irq_handler+1
 27282  000A' CFD9 F009'         	movff	fsr2l,??_global_irq_handler+2
 27283  000E' CFDA F00A'         	movff	fsr2h,??_global_irq_handler+3
 27284  0012'                    
 27285                           ;src/driver/irq.c: 19:     if(PIR1bits.RCIF)
 27286  0012' AA9E               	btfss	158,5,c	;volatile
 27287  0014' EF00' F000'        	goto	i2u994_41
 27288  0018' EF00' F000'        	goto	i2u994_40
 27289  001C'                    i2u994_41:
 27290  001C' EF00' F000'        	goto	i2l359
 27291  0020'                    i2u994_40:
 27292  0020'                    
 27293                           ;src/driver/irq.c: 20:  {;src/driver/irq.c: 21:         if(g_irq_handler_info[IRQ_HANDLE
      +                          R_ID_USART].handler)
 27294  0020' 0102               	movlb	2	; () banked
 27295  0022' 5100'              	movf	_g_irq_handler_info& (0+255),w,b
 27296  0024' 1100'              	iorwf	(_g_irq_handler_info+1)& (0+255),w,b
 27297  0026' B4D8               	btfsc	status,2,c
 27298  0028' EF00' F000'        	goto	i2u995_41
 27299  002C' EF00' F000'        	goto	i2u995_40
 27300  0030'                    i2u995_41:
 27301  0030' EF00' F000'        	goto	i2l8511
 27302  0034'                    i2u995_40:
 27303  0034'                    
 27304                           ; BSR set to: 2
 27305                           ;src/driver/irq.c: 22:             g_irq_handler_info[IRQ_HANDLER_ID_USART].handler(g_ir
      +                          q_handler_info[IRQ_HANDLER_ID_USART].udata);
 27306  0034' C002' F000'        	movff	_g_irq_handler_info+2,usart_rx_irq_handler@udata
 27307  0038' C003' F001'        	movff	_g_irq_handler_info+3,usart_rx_irq_handler@udata+1
 27308  003C' D802               	call	i2u996_48
 27309  003E' EF00' F000'        	goto	i2u996_49
 27310  0042'                    i2u996_48:
 27311  0042' 0005               	push	
 27312  0044' 6EFA               	movwf	pclath,c
 27313  0046' 5100'              	movf	_g_irq_handler_info& (0+255),w,b
 27314  0048' 6EFD               	movwf	tosl,c
 27315  004A' 5100'              	movf	(_g_irq_handler_info+1)& (0+255),w,b
 27316  004C' 6EFE               	movwf	tosh,c
 27317  004E' 50F8               	movf	tblptru,w,c
 27318  0050' 6EFF               	movwf	tosu,c
 27319  0052' 50FA               	movf	pclath,w,c
 27320  0054' 0012               	return		;indir
 27321  0056'                    i2u996_49:
 27322  0056'                    i2l8511:
 27323                           
 27324                           ;src/driver/irq.c: 24:   if(INTCONbits.RBIF) {
 27325  0056' A0F2               	btfss	242,0,c	;volatile
 27326  0058' EF00' F000'        	goto	i2u997_41
 27327  005C' EF00' F000'        	goto	i2u997_40
 27328  0060'                    i2u997_41:
 27329  0060' EF00' F000'        	goto	i2l359
 27330  0064'                    i2u997_40:
 27331  0064'                    
 27332                           ;src/driver/irq.c: 25:    volatile u8 dummy = PORTB;
 27333  0064' CF81 F00B'         	movff	3969,global_irq_handler@dummy	;volatile
 27334                           
 27335                           ;src/driver/irq.c: 26:    INTCONbits.RBIF = 0;
 27336  0068' 90F2               	bcf	242,0,c	;volatile
 27337  006A'                    i2l359:
 27338                           
 27339                           ;src/driver/irq.c: 30:     if(INTCONbits.TMR0IF)
 27340  006A' A4F2               	btfss	242,2,c	;volatile
 27341  006C' EF00' F000'        	goto	i2u998_41
 27342  0070' EF00' F000'        	goto	i2u998_40
 27343  0074'                    i2u998_41:
 27344  0074' EF00' F000'        	goto	i2l365
 27345  0078'                    i2u998_40:
 27346  0078'                    
 27347                           ;src/driver/irq.c: 31:  {;src/driver/irq.c: 32:         if(g_irq_handler_info[IRQ_HANDLE
      +                          R_ID_TIMER0].handler)
 27348  0078' 0102               	movlb	2	; () banked
 27349  007A' 5100'              	movf	(_g_irq_handler_info+4)& (0+255),w,b
 27350  007C' 1100'              	iorwf	(_g_irq_handler_info+5)& (0+255),w,b
 27351  007E' B4D8               	btfsc	status,2,c
 27352  0080' EF00' F000'        	goto	i2u999_41
 27353  0084' EF00' F000'        	goto	i2u999_40
 27354  0088'                    i2u999_41:
 27355  0088' EF00' F000'        	goto	i2l8519
 27356  008C'                    i2u999_40:
 27357  008C'                    
 27358                           ; BSR set to: 2
 27359                           ;src/driver/irq.c: 33:             g_irq_handler_info[IRQ_HANDLER_ID_TIMER0].handler(g_i
      +                          rq_handler_info[IRQ_HANDLER_ID_TIMER0].udata);
 27360  008C' C006' F000'        	movff	_g_irq_handler_info+6,usart_rx_irq_handler@udata
 27361  0090' C007' F001'        	movff	_g_irq_handler_info+7,usart_rx_irq_handler@udata+1
 27362  0094' EE20' F000'        	lfsr	2,_g_irq_handler_info+4
 27363  0098' D802               	call	i2u1000_48
 27364  009A' EF00' F000'        	goto	i2u1000_49
 27365  009E'                    i2u1000_48:
 27366  009E' 0005               	push	
 27367  00A0' 6EFA               	movwf	pclath,c
 27368  00A2' 50DE               	movf	postinc2,w,c
 27369  00A4' 6EFD               	movwf	tosl,c
 27370  00A6' 50DE               	movf	postinc2,w,c
 27371  00A8' 6EFE               	movwf	tosh,c
 27372  00AA' 50F8               	movf	tblptru,w,c
 27373  00AC' 6EFF               	movwf	tosu,c
 27374  00AE' 50FA               	movf	pclath,w,c
 27375  00B0' 0012               	return		;indir
 27376  00B2'                    i2u1000_49:
 27377  00B2'                    i2l8519:
 27378                           
 27379                           ;src/driver/irq.c: 35:   if(INTCONbits.TMR0IF) {
 27380  00B2' A4F2               	btfss	242,2,c	;volatile
 27381  00B4' EF00' F000'        	goto	i2u1001_41
 27382  00B8' EF00' F000'        	goto	i2u1001_40
 27383  00BC'                    i2u1001_41:
 27384  00BC' EF00' F000'        	goto	i2l365
 27385  00C0'                    i2u1001_40:
 27386  00C0'                    
 27387                           ;src/driver/irq.c: 36:    volatile u8 dummy = PORTB;
 27388  00C0' CF81 F00C'         	movff	3969,global_irq_handler@dummy_1626	;volatile
 27389                           
 27390                           ;src/driver/irq.c: 37:    INTCONbits.TMR0IF = 0;
 27391  00C4' 94F2               	bcf	242,2,c	;volatile
 27392  00C6'                    i2l365:
 27393  00C6' C00A' FFDA         	movff	??_global_irq_handler+3,fsr2h
 27394  00CA' C009' FFD9         	movff	??_global_irq_handler+2,fsr2l
 27395  00CE' C008' FFFB         	movff	??_global_irq_handler+1,pclatu
 27396  00D2' C007' FFFA         	movff	??_global_irq_handler,pclath
 27397  00D6' 9200'              	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 27398  00D8' 0011               	retfie		f
 27399  00DA'                    __end_of_global_irq_handler:
 27400                           	opt callstack 0
 27401                           
 27402 ;; *************** function _usart_rx_irq_handler *****************
 27403 ;; Defined at:
 27404 ;;		line 76 in file "src/driver/usart.c"
 27405 ;; Parameters:    Size  Location     Type
 27406 ;;  udata           2    0[COMRAM] PTR void 
 27407 ;;		 -> NULL(0), 
 27408 ;; Auto vars:     Size  Location     Type
 27409 ;;  wposn           2    5[COMRAM] volatile int 
 27410 ;;  c               1    4[COMRAM] volatile unsigned char 
 27411 ;; Return value:  Size  Location     Type
 27412 ;;                  1    wreg      void 
 27413 ;; Registers used:
 27414 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27415 ;; Tracked objects:
 27416 ;;		On entry : 0/0
 27417 ;;		On exit  : 0/0
 27418 ;;		Unchanged: 0/0
 27419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 27420 ;;      Params:         2       0       0       0       0       0       0
 27421 ;;      Locals:         3       0       0       0       0       0       0
 27422 ;;      Temps:          2       0       0       0       0       0       0
 27423 ;;      Totals:         7       0       0       0       0       0       0
 27424 ;;Total ram usage:        7 bytes
 27425 ;; Hardware stack levels used:    1
 27426 ;; This function calls:
 27427 ;;		Nothing
 27428 ;; This function is called by:
 27429 ;;		_usart_init
 27430 ;;		_global_irq_handler
 27431 ;; This function uses a non-reentrant model
 27432 ;;
 27433                           
 27434                           	psect	text111
 27435  0000'                    __ptext111:
 27436                           	opt callstack 0
 27437  0000'                    _usart_rx_irq_handler:
 27438                           	opt callstack 17
 27439  0000'                    
 27440                           ;src/driver/usart.c: 76: static void usart_rx_irq_handler(void *udata);src/driver/usart.
      +                          c: 77: {;src/driver/usart.c: 78:     volatile char c;;src/driver/usart.c: 79:     volati
      +                          le int wposn;;src/driver/usart.c: 82:     if(BAUDCONbits.RCIDL == 0) return;
 27441  0000' BCB8               	btfsc	184,6,c	;volatile
 27442  0002' EF00' F000'        	goto	i2u917_41
 27443  0006' EF00' F000'        	goto	i2u917_40
 27444  000A'                    i2u917_41:
 27445  000A' EF00' F000'        	goto	i2l326
 27446  000E'                    i2u917_40:
 27447  000E' EF00' F000'        	goto	i2l327
 27448  0012'                    i2l326:
 27449                           
 27450                           ;src/driver/usart.c: 85:  c = RCREG;
 27451  0012' CFAE F004'         	movff	4014,usart_rx_irq_handler@c	;volatile
 27452                           
 27453                           ;src/driver/usart.c: 88:     if(RCSTAbits.FERR) {
 27454  0016' A4AB               	btfss	171,2,c	;volatile
 27455  0018' EF00' F000'        	goto	i2u918_41
 27456  001C' EF00' F000'        	goto	i2u918_40
 27457  0020'                    i2u918_41:
 27458  0020' EF00' F000'        	goto	i2l328
 27459  0024'                    i2u918_40:
 27460  0024' EF00' F000'        	goto	i2l327
 27461  0028'                    i2l328:
 27462                           
 27463                           ;src/driver/usart.c: 91:     if(RCSTAbits.OERR) {
 27464  0028' A2AB               	btfss	171,1,c	;volatile
 27465  002A' EF00' F000'        	goto	i2u919_41
 27466  002E' EF00' F000'        	goto	i2u919_40
 27467  0032'                    i2u919_41:
 27468  0032' EF00' F000'        	goto	i2l7999
 27469  0036'                    i2u919_40:
 27470  0036'                    
 27471                           ;src/driver/usart.c: 93:         RCSTAbits.CREN = 0;
 27472  0036' 98AB               	bcf	171,4,c	;volatile
 27473                           
 27474                           ;src/driver/usart.c: 94:         RCSTAbits.CREN = 1;
 27475  0038' 88AB               	bsf	171,4,c	;volatile
 27476                           
 27477                           ;src/driver/usart.c: 95:         return;
 27478  003A' EF00' F000'        	goto	i2l327
 27479  003E'                    i2l7999:
 27480                           
 27481                           ;src/driver/usart.c: 99:  wposn = (g_usart_wpos+1) % sizeof(g_usart_buf);
 27482  003E' 0E01               	movlw	1
 27483  0040' 2400'              	addwf	_g_usart_wpos^0,w,c	;volatile
 27484  0042' 6E00'              	movwf	??_usart_rx_irq_handler^0,c
 27485  0044' 0E00               	movlw	0
 27486  0046' 2000'              	addwfc	(_g_usart_wpos+1)^0,w,c	;volatile
 27487  0048' 6E00'              	movwf	(??_usart_rx_irq_handler+1)^0,c
 27488  004A' 0E7F               	movlw	127
 27489  004C' 1400'              	andwf	??_usart_rx_irq_handler^0,w,c
 27490  004E' 6E00'              	movwf	usart_rx_irq_handler@wposn^0,c	;volatile
 27491  0050' 6A00'              	clrf	(usart_rx_irq_handler@wposn+1)^0,c	;volatile
 27492                           
 27493                           ;src/driver/usart.c: 100:  if(wposn != g_usart_rpos) {
 27494  0052' 5000'              	movf	_g_usart_rpos^0,w,c	;volatile
 27495  0054' 1800'              	xorwf	usart_rx_irq_handler@wposn^0,w,c	;volatile
 27496  0056' E109               	bnz	i2u920_40
 27497  0058' 5000'              	movf	(_g_usart_rpos+1)^0,w,c	;volatile
 27498  005A' 1800'              	xorwf	(usart_rx_irq_handler@wposn+1)^0,w,c	;volatile
 27499  005C' B4D8               	btfsc	status,2,c
 27500  005E' EF00' F000'        	goto	i2u920_41
 27501  0062' EF00' F000'        	goto	i2u920_40
 27502  0066'                    i2u920_41:
 27503  0066' EF00' F000'        	goto	i2l327
 27504  006A'                    i2u920_40:
 27505  006A'                    
 27506                           ;src/driver/usart.c: 101:   g_usart_buf[g_usart_wpos] = c;
 27507  006A' 0E00'              	movlw	low _g_usart_buf
 27508  006C' 2400'              	addwf	_g_usart_wpos^0,w,c	;volatile
 27509  006E' 6ED9               	movwf	fsr2l,c
 27510  0070' 0E00'              	movlw	high _g_usart_buf
 27511  0072' 2000'              	addwfc	(_g_usart_wpos+1)^0,w,c	;volatile
 27512  0074' 6EDA               	movwf	fsr2h,c
 27513  0076' C004' FFDF         	movff	usart_rx_irq_handler@c,indf2	;volatile
 27514  007A'                    
 27515                           ;src/driver/usart.c: 102:   g_usart_wpos = wposn;
 27516  007A' C005' F004'        	movff	usart_rx_irq_handler@wposn,_g_usart_wpos	;volatile
 27517  007E' C006' F005'        	movff	usart_rx_irq_handler@wposn+1,_g_usart_wpos+1	;volatile
 27518  0082'                    i2l327:
 27519  0082' 0012               	return		;funcret
 27520  0084'                    __end_of_usart_rx_irq_handler:
 27521                           	opt callstack 0
 27522                           
 27523                           	psect	text112
 27524  0000'                    __ptext112:
 27525                           	opt callstack 0
 27526  0000'                    
 27527                           	psect	rparam
 27528  0000                     
 27529                           	psect	temp
 27530  0000'                    btemp:
 27531                           	opt callstack 0
 27532  0000'                    	ds	1
 27533  0000                     int$flags	set	btemp
 27534  0000                     wtemp8	set	btemp+1
 27535  0000                     ttemp5	set	btemp+1
 27536  0000                     ttemp6	set	btemp+4
 27537  0000                     ttemp7	set	btemp+8
 27538                           tosu	equ	0xFFF
 27539                           tosh	equ	0xFFE
 27540                           tosl	equ	0xFFD
 27541                           stkptr	equ	0xFFC
 27542                           pclatu	equ	0xFFB
 27543                           pclath	equ	0xFFA
 27544                           pcl	equ	0xFF9
 27545                           tblptru	equ	0xFF8
 27546                           tblptrh	equ	0xFF7
 27547                           tblptrl	equ	0xFF6
 27548                           tablat	equ	0xFF5
 27549                           prodh	equ	0xFF4
 27550                           prodl	equ	0xFF3
 27551                           indf0	equ	0xFEF
 27552                           postinc0	equ	0xFEE
 27553                           postdec0	equ	0xFED
 27554                           preinc0	equ	0xFEC
 27555                           plusw0	equ	0xFEB
 27556                           fsr0h	equ	0xFEA
 27557                           fsr0l	equ	0xFE9
 27558                           wreg	equ	0xFE8
 27559                           indf1	equ	0xFE7
 27560                           postinc1	equ	0xFE6
 27561                           postdec1	equ	0xFE5
 27562                           preinc1	equ	0xFE4
 27563                           plusw1	equ	0xFE3
 27564                           fsr1h	equ	0xFE2
 27565                           fsr1l	equ	0xFE1
 27566                           bsr	equ	0xFE0
 27567                           indf2	equ	0xFDF
 27568                           postinc2	equ	0xFDE
 27569                           postdec2	equ	0xFDD
 27570                           preinc2	equ	0xFDC
 27571                           plusw2	equ	0xFDB
 27572                           fsr2h	equ	0xFDA
 27573                           fsr2l	equ	0xFD9
 27574                           status	equ	0xFD8


Data Sizes:
    Strings     1058
    Constant    1188
    Data        207
    BSS         437
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    100     113
    BANK0           128     72     102
    BANK1           256    248     256
    BANK2           256      0     243
    BANK3           256      0     217
    BANK4           256      0     128
    BANK5           256      0       0

Pointer List with Targets:

    g_i2c_bus.setbaud	PTR FTN(PTR struct i2c_dev__,int ,)int  size(2) Largest target is 0

    g_i2c_bus.transfer	PTR FTN(PTR struct i2c_dev__,PTR struct i2c_msg,int ,)int  size(2) Largest target is 0
		 -> i2c_transfer_native(), 

    usart_rx_irq_handler@udata	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    handler$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    adf4351_get_lock@ctx	PTR struct adf4351_ctx size(2) Largest target is 55
		 -> g_adf4351(BANK3[55]), 

    check_ADF5341_status@ctx	PTR struct adf4351_ctx size(2) Largest target is 55
		 -> g_adf4351(BANK3[55]), 

    S1519$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S33$0$1	PTR struct i2c_msg size(2) Largest target is 16
		 -> smbus8_read_byte@msg(BANK0[14]), smbus8_write_data@msg(BANK0[14]), smbus8_write_byte@msg(BANK0[7]), i2c_probe_addr@msg(COMRAM[7]), 

    S33$0$0	PTR struct i2c_dev__ size(2) Largest target is 8
		 -> g_i2c_bus(BANK2[8]), NULL(NULL[0]), 

    __strtoxl@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    __strtoxl@s	PTR const unsigned char  size(2) Largest target is 85
		 -> gpsbuf(BANK3[85]), 

    __strtoxl@cp	PTR const unsigned char  size(2) Largest target is 85
		 -> gpsbuf(BANK3[85]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 85
		 -> gpsbuf(BANK3[85]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_110(CODE[3]), STR_106(CODE[3]), STR_101(CODE[3]), STR_97(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_110(CODE[3]), STR_106(CODE[3]), STR_101(CODE[3]), STR_97(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_94(CODE[13]), STR_93(CODE[31]), STR_92(CODE[2]), STR_91(CODE[26]), 
		 -> STR_90(CODE[15]), STR_40(CODE[18]), STR_37(CODE[17]), STR_36(CODE[21]), 
		 -> STR_35(CODE[28]), STR_34(CODE[11]), STR_33(CODE[13]), STR_32(CODE[27]), 
		 -> STR_31(CODE[20]), STR_30(CODE[13]), STR_29(CODE[9]), STR_28(CODE[12]), 
		 -> STR_27(CODE[15]), STR_26(CODE[9]), STR_25(CODE[11]), STR_24(CODE[15]), 
		 -> STR_23(CODE[32]), STR_22(CODE[16]), STR_21(CODE[18]), STR_20(CODE[16]), 
		 -> STR_19(CODE[15]), STR_18(CODE[32]), STR_17(CODE[16]), STR_16(CODE[18]), 
		 -> STR_15(CODE[16]), STR_14(CODE[15]), STR_13(CODE[32]), STR_12(CODE[16]), 
		 -> STR_11(CODE[18]), STR_10(CODE[20]), STR_9(CODE[18]), STR_8(CODE[8]), 
		 -> STR_7(CODE[39]), STR_6(CODE[25]), STR_5(CODE[25]), STR_4(CODE[20]), 
		 -> STR_3(CODE[12]), STR_2(CODE[14]), STR_1(CODE[24]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_94(CODE[13]), STR_93(CODE[31]), STR_92(CODE[2]), STR_91(CODE[26]), 
		 -> STR_90(CODE[15]), STR_40(CODE[18]), STR_37(CODE[17]), STR_36(CODE[21]), 
		 -> STR_35(CODE[28]), STR_34(CODE[11]), STR_33(CODE[13]), STR_32(CODE[27]), 
		 -> STR_31(CODE[20]), STR_30(CODE[13]), STR_29(CODE[9]), STR_28(CODE[12]), 
		 -> STR_27(CODE[15]), STR_26(CODE[9]), STR_25(CODE[11]), STR_24(CODE[15]), 
		 -> STR_23(CODE[32]), STR_22(CODE[16]), STR_21(CODE[18]), STR_20(CODE[16]), 
		 -> STR_19(CODE[15]), STR_18(CODE[32]), STR_17(CODE[16]), STR_16(CODE[18]), 
		 -> STR_15(CODE[16]), STR_14(CODE[15]), STR_13(CODE[32]), STR_12(CODE[16]), 
		 -> STR_11(CODE[18]), STR_10(CODE[20]), STR_9(CODE[18]), STR_8(CODE[8]), 
		 -> STR_7(CODE[39]), STR_6(CODE[25]), STR_5(CODE[25]), STR_4(CODE[20]), 
		 -> STR_3(CODE[12]), STR_2(CODE[14]), STR_1(CODE[24]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 85
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK2[32]), CalculateGridSquare@grid(BANK2[7]), 
		 -> gpsbuf(BANK3[85]), STR_89(CODE[14]), STR_88(CODE[7]), STR_87(CODE[6]), 
		 -> STR_86(CODE[12]), STR_85(CODE[17]), itoa@buffer(BANK2[12]), STR_84(CODE[5]), 
		 -> STR_83(CODE[5]), STR_82(CODE[7]), STR_81(CODE[7]), STR_80(CODE[8]), 
		 -> STR_79(CODE[5]), GPS_lon(BANK2[15]), GPS_lat(BANK2[15]), STR_78(CODE[4]), 
		 -> STR_77(CODE[4]), STR_76(CODE[6]), STR_75(CODE[5]), STR_74(CODE[4]), 
		 -> STR_73(CODE[4]), STR_72(CODE[10]), GPS_time(BANK2[9]), STR_71(CODE[17]), 
		 -> STR_70(CODE[17]), STR_69(CODE[17]), STR_68(CODE[7]), STR_67(CODE[7]), 
		 -> STR_66(CODE[17]), STR_65(CODE[17]), STR_64(CODE[17]), STR_63(CODE[7]), 
		 -> STR_62(CODE[7]), STR_61(CODE[17]), STR_60(CODE[17]), STR_59(CODE[17]), 
		 -> STR_58(CODE[7]), STR_57(CODE[7]), STR_56(CODE[6]), STR_55(CODE[6]), 
		 -> STR_54(CODE[17]), STR_53(CODE[5]), STR_52(CODE[5]), STR_51(CODE[5]), 
		 -> STR_50(CODE[5]), STR_49(CODE[3]), STR_48(CODE[17]), STR_47(CODE[17]), 
		 -> STR_46(CODE[17]), STR_45(CODE[17]), STR_44(CODE[17]), STR_43(CODE[17]), 
		 -> STR_42(CODE[4]), STR_41(CODE[17]), ssd1306_setpos@x(BANK0[1]), STR_39(CODE[17]), 
		 -> STR_38(CODE[17]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 85
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK2[32]), CalculateGridSquare@grid(BANK2[7]), 
		 -> gpsbuf(BANK3[85]), STR_89(CODE[14]), STR_88(CODE[7]), STR_87(CODE[6]), 
		 -> STR_86(CODE[12]), STR_85(CODE[17]), itoa@buffer(BANK2[12]), STR_84(CODE[5]), 
		 -> STR_83(CODE[5]), STR_82(CODE[7]), STR_81(CODE[7]), STR_80(CODE[8]), 
		 -> STR_79(CODE[5]), GPS_lon(BANK2[15]), GPS_lat(BANK2[15]), STR_78(CODE[4]), 
		 -> STR_77(CODE[4]), STR_76(CODE[6]), STR_75(CODE[5]), STR_74(CODE[4]), 
		 -> STR_73(CODE[4]), STR_72(CODE[10]), GPS_time(BANK2[9]), STR_71(CODE[17]), 
		 -> STR_70(CODE[17]), STR_69(CODE[17]), STR_68(CODE[7]), STR_67(CODE[7]), 
		 -> STR_66(CODE[17]), STR_65(CODE[17]), STR_64(CODE[17]), STR_63(CODE[7]), 
		 -> STR_62(CODE[7]), STR_61(CODE[17]), STR_60(CODE[17]), STR_59(CODE[17]), 
		 -> STR_58(CODE[7]), STR_57(CODE[7]), STR_56(CODE[6]), STR_55(CODE[6]), 
		 -> STR_54(CODE[17]), STR_53(CODE[5]), STR_52(CODE[5]), STR_51(CODE[5]), 
		 -> STR_50(CODE[5]), STR_49(CODE[3]), STR_48(CODE[17]), STR_47(CODE[17]), 
		 -> STR_46(CODE[17]), STR_45(CODE[17]), STR_44(CODE[17]), STR_43(CODE[17]), 
		 -> STR_42(CODE[4]), STR_41(CODE[17]), ssd1306_setpos@x(BANK0[1]), STR_39(CODE[17]), 
		 -> STR_38(CODE[17]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 85
		 -> gpsbuf(BANK3[85]), NULL(NULL[0]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_94(CODE[13]), STR_93(CODE[31]), STR_92(CODE[2]), STR_91(CODE[26]), 
		 -> STR_90(CODE[15]), STR_40(CODE[18]), STR_37(CODE[17]), STR_36(CODE[21]), 
		 -> STR_35(CODE[28]), STR_34(CODE[11]), STR_33(CODE[13]), STR_32(CODE[27]), 
		 -> STR_31(CODE[20]), STR_30(CODE[13]), STR_29(CODE[9]), STR_28(CODE[12]), 
		 -> STR_27(CODE[15]), STR_26(CODE[9]), STR_25(CODE[11]), STR_24(CODE[15]), 
		 -> STR_23(CODE[32]), STR_22(CODE[16]), STR_21(CODE[18]), STR_20(CODE[16]), 
		 -> STR_19(CODE[15]), STR_18(CODE[32]), STR_17(CODE[16]), STR_16(CODE[18]), 
		 -> STR_15(CODE[16]), STR_14(CODE[15]), STR_13(CODE[32]), STR_12(CODE[16]), 
		 -> STR_11(CODE[18]), STR_10(CODE[20]), STR_9(CODE[18]), STR_8(CODE[8]), 
		 -> STR_7(CODE[39]), STR_6(CODE[25]), STR_5(CODE[25]), STR_4(CODE[20]), 
		 -> STR_3(CODE[12]), STR_2(CODE[14]), STR_1(CODE[24]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    memset@dest	PTR void  size(2) Largest target is 240
		 -> g_adf4351(BANK3[55]), g_i2c_bus(BANK2[8]), eval_gps@elem(BANK1[240]), itoa@buffer(BANK2[12]), 
		 -> print_char@map(BANK0[8]), lcd_clear_screen@buf(BANK1[128]), 

    memset@s	PTR unsigned char  size(2) Largest target is 240
		 -> g_adf4351(BANK3[55]), g_i2c_bus(BANK2[8]), eval_gps@elem(BANK1[240]), itoa@buffer(BANK2[12]), 
		 -> print_char@map(BANK0[8]), lcd_clear_screen@buf(BANK1[128]), 

    memcpy@d1	PTR void  size(2) Largest target is 240
		 -> eval_gps@elem(BANK1[240]), GPS_lon(BANK2[15]), GPS_lat(BANK2[15]), show_display@old_GPS_time(BANK2[9]), 
		 -> show_display@old_GPS_lon(BANK2[15]), show_display@old_GPS_lat(BANK2[15]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 240
		 -> eval_gps@elem(BANK1[240]), GPS_lon(BANK2[15]), GPS_lat(BANK2[15]), show_display@old_GPS_time(BANK2[9]), 
		 -> show_display@old_GPS_lon(BANK2[15]), show_display@old_GPS_lat(BANK2[15]), 

    memcpy@s1	PTR const void  size(2) Largest target is 240
		 -> gpsbuf(BANK3[85]), eval_gps@elem(BANK1[240]), GPS_lon(BANK2[15]), GPS_lat(BANK2[15]), 
		 -> GPS_time(BANK2[9]), NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 240
		 -> gpsbuf(BANK3[85]), eval_gps@elem(BANK1[240]), GPS_lon(BANK2[15]), GPS_lat(BANK2[15]), 
		 -> GPS_time(BANK2[9]), NULL(NULL[0]), 

    memcmp@vr	PTR const void  size(2) Largest target is 15
		 -> GPS_lon(BANK2[15]), GPS_lat(BANK2[15]), show_display@old_GPS_time(BANK2[9]), 

    memcmp@r	PTR const unsigned char  size(2) Largest target is 15
		 -> GPS_lon(BANK2[15]), GPS_lat(BANK2[15]), show_display@old_GPS_time(BANK2[9]), 

    memcmp@vl	PTR const void  size(2) Largest target is 15
		 -> GPS_time(BANK2[9]), show_display@old_GPS_lon(BANK2[15]), show_display@old_GPS_lat(BANK2[15]), 

    memcmp@l	PTR const unsigned char  size(2) Largest target is 15
		 -> GPS_time(BANK2[9]), show_display@old_GPS_lon(BANK2[15]), show_display@old_GPS_lat(BANK2[15]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 240
		 -> STR_94(CODE[13]), STR_93(CODE[31]), STR_92(CODE[2]), STR_91(CODE[26]), 
		 -> STR_90(CODE[15]), eval_gps@elem(BANK1[240]), STR_40(CODE[18]), STR_37(CODE[17]), 
		 -> STR_36(CODE[21]), STR_35(CODE[28]), STR_34(CODE[11]), STR_33(CODE[13]), 
		 -> STR_32(CODE[27]), STR_31(CODE[20]), STR_30(CODE[13]), STR_29(CODE[9]), 
		 -> STR_28(CODE[12]), STR_27(CODE[15]), STR_26(CODE[9]), STR_25(CODE[11]), 
		 -> STR_24(CODE[15]), STR_23(CODE[32]), STR_22(CODE[16]), STR_21(CODE[18]), 
		 -> STR_20(CODE[16]), STR_19(CODE[15]), STR_18(CODE[32]), STR_17(CODE[16]), 
		 -> STR_16(CODE[18]), STR_15(CODE[16]), STR_14(CODE[15]), STR_13(CODE[32]), 
		 -> STR_12(CODE[16]), STR_11(CODE[18]), STR_10(CODE[20]), STR_9(CODE[18]), 
		 -> STR_8(CODE[8]), STR_7(CODE[39]), STR_6(CODE[25]), STR_5(CODE[25]), 
		 -> STR_4(CODE[20]), STR_3(CODE[12]), STR_2(CODE[14]), STR_1(CODE[24]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_94(CODE[13]), STR_93(CODE[31]), STR_92(CODE[2]), STR_91(CODE[26]), 
		 -> STR_90(CODE[15]), STR_40(CODE[18]), STR_37(CODE[17]), STR_36(CODE[21]), 
		 -> STR_35(CODE[28]), STR_34(CODE[11]), STR_33(CODE[13]), STR_32(CODE[27]), 
		 -> STR_31(CODE[20]), STR_30(CODE[13]), STR_29(CODE[9]), STR_28(CODE[12]), 
		 -> STR_27(CODE[15]), STR_26(CODE[9]), STR_25(CODE[11]), STR_24(CODE[15]), 
		 -> STR_23(CODE[32]), STR_22(CODE[16]), STR_21(CODE[18]), STR_20(CODE[16]), 
		 -> STR_19(CODE[15]), STR_18(CODE[32]), STR_17(CODE[16]), STR_16(CODE[18]), 
		 -> STR_15(CODE[16]), STR_14(CODE[15]), STR_13(CODE[32]), STR_12(CODE[16]), 
		 -> STR_11(CODE[18]), STR_10(CODE[20]), STR_9(CODE[18]), STR_8(CODE[8]), 
		 -> STR_7(CODE[39]), STR_6(CODE[25]), STR_5(CODE[25]), STR_4(CODE[20]), 
		 -> STR_3(CODE[12]), STR_2(CODE[14]), STR_1(CODE[24]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 39
		 -> STR_94(CODE[13]), STR_93(CODE[31]), STR_92(CODE[2]), STR_91(CODE[26]), 
		 -> STR_90(CODE[15]), STR_40(CODE[18]), STR_37(CODE[17]), STR_36(CODE[21]), 
		 -> STR_35(CODE[28]), STR_34(CODE[11]), STR_33(CODE[13]), STR_32(CODE[27]), 
		 -> STR_31(CODE[20]), STR_30(CODE[13]), STR_29(CODE[9]), STR_28(CODE[12]), 
		 -> STR_27(CODE[15]), STR_26(CODE[9]), STR_25(CODE[11]), STR_24(CODE[15]), 
		 -> STR_23(CODE[32]), STR_22(CODE[16]), STR_21(CODE[18]), STR_20(CODE[16]), 
		 -> STR_19(CODE[15]), STR_18(CODE[32]), STR_17(CODE[16]), STR_16(CODE[18]), 
		 -> STR_15(CODE[16]), STR_14(CODE[15]), STR_13(CODE[32]), STR_12(CODE[16]), 
		 -> STR_11(CODE[18]), STR_10(CODE[20]), STR_9(CODE[18]), STR_8(CODE[8]), 
		 -> STR_7(CODE[39]), STR_6(CODE[25]), STR_5(CODE[25]), STR_4(CODE[20]), 
		 -> STR_3(CODE[12]), STR_2(CODE[14]), STR_1(CODE[24]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), CalculateGridSquare@grid(BANK2[7]), STR_89(CODE[14]), STR_88(CODE[7]), 
		 -> STR_87(CODE[6]), STR_86(CODE[12]), STR_85(CODE[17]), itoa@buffer(BANK2[12]), 
		 -> STR_84(CODE[5]), STR_83(CODE[5]), STR_82(CODE[7]), STR_81(CODE[7]), 
		 -> STR_80(CODE[8]), STR_79(CODE[5]), GPS_lon(BANK2[15]), GPS_lat(BANK2[15]), 
		 -> STR_78(CODE[4]), STR_77(CODE[4]), STR_76(CODE[6]), STR_75(CODE[5]), 
		 -> STR_74(CODE[4]), STR_73(CODE[4]), STR_72(CODE[10]), GPS_time(BANK2[9]), 
		 -> STR_71(CODE[17]), STR_70(CODE[17]), STR_69(CODE[17]), STR_68(CODE[7]), 
		 -> STR_67(CODE[7]), STR_66(CODE[17]), STR_65(CODE[17]), STR_64(CODE[17]), 
		 -> STR_63(CODE[7]), STR_62(CODE[7]), STR_61(CODE[17]), STR_60(CODE[17]), 
		 -> STR_59(CODE[17]), STR_58(CODE[7]), STR_57(CODE[7]), STR_56(CODE[6]), 
		 -> STR_55(CODE[6]), STR_54(CODE[17]), STR_53(CODE[5]), STR_52(CODE[5]), 
		 -> STR_51(CODE[5]), STR_50(CODE[5]), STR_49(CODE[3]), STR_48(CODE[17]), 
		 -> STR_47(CODE[17]), STR_46(CODE[17]), STR_45(CODE[17]), STR_44(CODE[17]), 
		 -> STR_43(CODE[17]), STR_42(CODE[4]), STR_41(CODE[17]), ssd1306_setpos@x(BANK0[1]), 
		 -> STR_39(CODE[17]), STR_38(CODE[17]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), CalculateGridSquare@grid(BANK2[7]), STR_89(CODE[14]), STR_88(CODE[7]), 
		 -> STR_87(CODE[6]), STR_86(CODE[12]), STR_85(CODE[17]), itoa@buffer(BANK2[12]), 
		 -> STR_84(CODE[5]), STR_83(CODE[5]), STR_82(CODE[7]), STR_81(CODE[7]), 
		 -> STR_80(CODE[8]), STR_79(CODE[5]), GPS_lon(BANK2[15]), GPS_lat(BANK2[15]), 
		 -> STR_78(CODE[4]), STR_77(CODE[4]), STR_76(CODE[6]), STR_75(CODE[5]), 
		 -> STR_74(CODE[4]), STR_73(CODE[4]), STR_72(CODE[10]), GPS_time(BANK2[9]), 
		 -> STR_71(CODE[17]), STR_70(CODE[17]), STR_69(CODE[17]), STR_68(CODE[7]), 
		 -> STR_67(CODE[7]), STR_66(CODE[17]), STR_65(CODE[17]), STR_64(CODE[17]), 
		 -> STR_63(CODE[7]), STR_62(CODE[7]), STR_61(CODE[17]), STR_60(CODE[17]), 
		 -> STR_59(CODE[17]), STR_58(CODE[7]), STR_57(CODE[7]), STR_56(CODE[6]), 
		 -> STR_55(CODE[6]), STR_54(CODE[17]), STR_53(CODE[5]), STR_52(CODE[5]), 
		 -> STR_51(CODE[5]), STR_50(CODE[5]), STR_49(CODE[3]), STR_48(CODE[17]), 
		 -> STR_47(CODE[17]), STR_46(CODE[17]), STR_45(CODE[17]), STR_44(CODE[17]), 
		 -> STR_43(CODE[17]), STR_42(CODE[4]), STR_41(CODE[17]), ssd1306_setpos@x(BANK0[1]), 
		 -> STR_39(CODE[17]), STR_38(CODE[17]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), CalculateGridSquare@grid(BANK2[7]), STR_89(CODE[14]), 
		 -> STR_88(CODE[7]), STR_87(CODE[6]), STR_86(CODE[12]), STR_85(CODE[17]), 
		 -> itoa@buffer(BANK2[12]), STR_84(CODE[5]), STR_83(CODE[5]), STR_82(CODE[7]), 
		 -> STR_81(CODE[7]), STR_80(CODE[8]), STR_79(CODE[5]), GPS_lon(BANK2[15]), 
		 -> GPS_lat(BANK2[15]), STR_78(CODE[4]), STR_77(CODE[4]), STR_76(CODE[6]), 
		 -> STR_75(CODE[5]), STR_74(CODE[4]), STR_73(CODE[4]), STR_72(CODE[10]), 
		 -> GPS_time(BANK2[9]), STR_71(CODE[17]), STR_70(CODE[17]), STR_69(CODE[17]), 
		 -> STR_68(CODE[7]), STR_67(CODE[7]), STR_66(CODE[17]), STR_65(CODE[17]), 
		 -> STR_64(CODE[17]), STR_63(CODE[7]), STR_62(CODE[7]), STR_61(CODE[17]), 
		 -> STR_60(CODE[17]), STR_59(CODE[17]), STR_58(CODE[7]), STR_57(CODE[7]), 
		 -> STR_56(CODE[6]), STR_55(CODE[6]), STR_54(CODE[17]), STR_53(CODE[5]), 
		 -> STR_52(CODE[5]), STR_51(CODE[5]), STR_50(CODE[5]), STR_49(CODE[3]), 
		 -> STR_48(CODE[17]), STR_47(CODE[17]), STR_46(CODE[17]), STR_45(CODE[17]), 
		 -> STR_44(CODE[17]), STR_43(CODE[17]), STR_42(CODE[4]), STR_41(CODE[17]), 
		 -> ssd1306_setpos@x(BANK0[1]), STR_39(CODE[17]), STR_38(CODE[17]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    PIN_LNB_FAULT_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_LNB_FAULT_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_LNB_QRG1_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_LNB_QRG1_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_LNB_QRG2_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_LNB_QRG2_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_SJ6_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_SJ6_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_SJ5_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_SJ5_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_SJ4_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_SJ4_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_SJ3_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_SJ3_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_USART_RX_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_USART_RX_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_USART_TX_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_USART_TX_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_I2C_SDA_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_I2C_SDA_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_I2C_SCL_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_I2C_SCL_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_LED2	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_LED2_DEF(CODE[5]), 

    PIN_LED2_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_LED2_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_LED_LNB_GOOD_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_LED_LNB_GOOD_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_LED1	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_LED1_DEF(CODE[5]), 

    PIN_LED1_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_LED1_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_LED_ADF_LOCK_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_LED_ADF_LOCK_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_LED0	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_LED0_DEF(CODE[5]), 

    PIN_LED0_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_LED0_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_LED_CPU_OK_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_LED_CPU_OK_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_LED3	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_LED3_DEF(CODE[5]), 

    PIN_LED3_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_LED3_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_LED_SI_LOCK_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_LED_SI_LOCK_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_SI5328_CS_CA_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_SI5328_CS_CA_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_SI5328_LOL_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_SI5328_LOL_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_SIO_CLK_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_SIO_CLK_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_SIO_DATA_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_SIO_DATA_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_ADF_LE_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_ADF_LE_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_ADF_CE_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_ADF_CE_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_ADF_LOCK_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_ADF_LOCK_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    setADF4351frequency@p	PTR const unsigned long  size(2) Largest target is 40
		 -> freq_table_27_OPT(CODE[40]), freq_table_27_26(CODE[40]), freq_table_25_25(CODE[40]), freq_table_25_24(CODE[40]), 

    g_i2c_bus.ops.setbaud	PTR FTN(PTR struct i2c_dev__,int ,)int  size(2) Largest target is 0

    g_i2c_bus.ops.transfer	PTR FTN(PTR struct i2c_dev__,PTR struct i2c_msg,int ,)int  size(2) Largest target is 2
		 -> i2c_transfer_native(), 

    PIN_USART_RX.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_USART_RX.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_USART_RX	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_USART_RX_DEF(CODE[5]), 

    PIN_USART_TX.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_USART_TX.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_USART_TX	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_USART_TX_DEF(CODE[5]), 

    PIN_LNB_QRG1.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_LNB_QRG1.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_LNB_QRG1	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_LNB_QRG1_DEF(CODE[5]), 

    PIN_LNB_QRG2.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_LNB_QRG2.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_LNB_QRG2	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_LNB_QRG2_DEF(CODE[5]), 

    PIN_SJ6.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_SJ6.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_SJ6	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_SJ6_DEF(CODE[5]), 

    PIN_SJ5.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_SJ5.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_SJ5	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_SJ5_DEF(CODE[5]), 

    PIN_SJ4.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_SJ4.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_SJ4	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_SJ4_DEF(CODE[5]), 

    PIN_SJ3.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_SJ3.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_SJ3	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_SJ3_DEF(CODE[5]), 

    PIN_I2C_SDA.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_I2C_SDA.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_I2C_SDA	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_I2C_SDA_DEF(CODE[5]), 

    PIN_I2C_SCL.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_I2C_SCL.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_I2C_SCL	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_I2C_SCL_DEF(CODE[5]), 

    PIN_LED_CPU_OK.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_LED_CPU_OK.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_LED_CPU_OK	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_LED_CPU_OK_DEF(CODE[5]), 

    PIN_SI5328_CS_CA.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_SI5328_CS_CA.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_SI5328_CS_CA	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_SI5328_CS_CA_DEF(CODE[5]), 

    send_UBX_string@payload	PTR unsigned char  size(2) Largest target is 32
		 -> gps_config_data(BANK2[32]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 85
		 -> gpsbuf(BANK3[85]), NULL(NULL[0]), 

    eval_gps@pe	PTR unsigned char  size(2) Largest target is 85
		 -> gpsbuf(BANK3[85]), NULL(NULL[0]), 

    eval_gps@ps	PTR unsigned char  size(2) Largest target is 85
		 -> gpsbuf(BANK3[85]), NULL(NULL[0]), 

    eval_gps@gpsbuf	PTR unsigned char  size(2) Largest target is 85
		 -> gpsbuf(BANK3[85]), 

    sp__CalculateGridSquare	PTR unsigned char  size(2) Largest target is 7
		 -> CalculateGridSquare@grid(BANK2[7]), 

    show_display@p	PTR unsigned char  size(2) Largest target is 12
		 -> itoa@buffer(BANK2[12]), 

    sp__memcpy	PTR void  size(2) Largest target is 240
		 -> eval_gps@elem(BANK1[240]), GPS_lon(BANK2[15]), GPS_lat(BANK2[15]), show_display@old_GPS_time(BANK2[9]), 
		 -> show_display@old_GPS_lon(BANK2[15]), show_display@old_GPS_lat(BANK2[15]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 12
		 -> itoa@buffer(BANK2[12]), 

    print_string@s	PTR unsigned char  size(2) Largest target is 17
		 -> CalculateGridSquare@grid(BANK2[7]), STR_89(CODE[14]), STR_88(CODE[7]), STR_87(CODE[6]), 
		 -> STR_86(CODE[12]), STR_85(CODE[17]), itoa@buffer(BANK2[12]), STR_84(CODE[5]), 
		 -> STR_83(CODE[5]), STR_82(CODE[7]), STR_81(CODE[7]), STR_80(CODE[8]), 
		 -> STR_79(CODE[5]), GPS_lon(BANK2[15]), GPS_lat(BANK2[15]), STR_78(CODE[4]), 
		 -> STR_77(CODE[4]), STR_76(CODE[6]), STR_75(CODE[5]), STR_74(CODE[4]), 
		 -> STR_73(CODE[4]), STR_72(CODE[10]), GPS_time(BANK2[9]), STR_71(CODE[17]), 
		 -> STR_70(CODE[17]), STR_69(CODE[17]), STR_68(CODE[7]), STR_67(CODE[7]), 
		 -> STR_66(CODE[17]), STR_65(CODE[17]), STR_64(CODE[17]), STR_63(CODE[7]), 
		 -> STR_62(CODE[7]), STR_61(CODE[17]), STR_60(CODE[17]), STR_59(CODE[17]), 
		 -> STR_58(CODE[7]), STR_57(CODE[7]), STR_56(CODE[6]), STR_55(CODE[6]), 
		 -> STR_54(CODE[17]), STR_53(CODE[5]), STR_52(CODE[5]), STR_51(CODE[5]), 
		 -> STR_50(CODE[5]), STR_49(CODE[3]), STR_48(CODE[17]), STR_47(CODE[17]), 
		 -> STR_46(CODE[17]), STR_45(CODE[17]), STR_44(CODE[17]), STR_43(CODE[17]), 
		 -> STR_42(CODE[4]), STR_41(CODE[17]), STR_39(CODE[17]), STR_38(CODE[17]), 

    lcd_draw8x8@buffer	PTR unsigned char  size(2) Largest target is 8
		 -> print_char@map(BANK0[8]), 

    ssd1306_data@data	PTR unsigned char  size(2) Largest target is 128
		 -> print_char@map(BANK0[8]), lcd_clear_screen@buf(BANK1[128]), 

    ssd1306_command@cmd	PTR unsigned char  size(2) Largest target is 27
		 -> ssd1306_setpos@data(BANK0[3]), ssd1306_init_commands(BANK3[27]), 

    lcd_i2c	PTR struct i2c_dev__ size(2) Largest target is 8
		 -> g_i2c_bus(BANK2[8]), NULL(NULL[0]), 

    lcd_init@i2c	PTR struct i2c_dev__ size(2) Largest target is 8
		 -> g_i2c_bus(BANK2[8]), 

    read_reg@i2c	PTR struct i2c_dev__ size(2) Largest target is 8
		 -> g_i2c_bus(BANK2[8]), 

    write_regset@set	PTR const struct . size(2) Largest target is 26
		 -> reg_set_LNB_LO(BANK2[24]), reg_set_univ_CKIN2_XAXB(CODE[24]), reg_set_univ_CKIN1_GPS(CODE[26]), 

    write_regset@i2c	PTR struct i2c_dev__ size(2) Largest target is 8
		 -> g_i2c_bus(BANK2[8]), 

    check_si5328_status@i2c	PTR struct i2c_dev__ size(2) Largest target is 8
		 -> g_i2c_bus(BANK2[8]), 

    PIN_LED_SI_LOCK.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_LED_SI_LOCK.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_LED_SI_LOCK	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_LED_SI_LOCK_DEF(CODE[5]), 

    PIN_SI5328_LOL.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_SI5328_LOL.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_SI5328_LOL	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_SI5328_LOL_DEF(CODE[5]), 

    si5328_checkGPS@i2c	PTR struct i2c_dev__ size(2) Largest target is 8
		 -> g_i2c_bus(BANK2[8]), 

    si5328_perform_ical@i2c	PTR struct i2c_dev__ size(2) Largest target is 8
		 -> g_i2c_bus(BANK2[8]), 

    si5328_set_freq@i2c	PTR struct i2c_dev__ size(2) Largest target is 8
		 -> g_i2c_bus(BANK2[8]), 

    si5328_init@i2c	PTR struct i2c_dev__ size(2) Largest target is 8
		 -> g_i2c_bus(BANK2[8]), 

    set_reg@p	PTR unsigned char  size(2) Largest target is 24
		 -> reg_set_LNB_LO(BANK2[24]), 

    irq_set_handler@handler	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> usart_rx_irq_handler(), 

    S1519$udata	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    g_irq_handler_info.udata	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1519$handler	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> usart_rx_irq_handler(), 

    g_irq_handler_info.handler	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> usart_rx_irq_handler(), 

    irq_set_handler@udata	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    check_LNB_status@i2c	PTR struct i2c_dev__ size(2) Largest target is 8
		 -> g_i2c_bus(BANK2[8]), 

    PIN_LED_LNB_GOOD.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_LED_LNB_GOOD.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_LED_LNB_GOOD	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_LED_LNB_GOOD_DEF(CODE[5]), 

    PIN_LNB_FAULT.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_LNB_FAULT.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_LNB_FAULT	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_LNB_FAULT_DEF(CODE[5]), 

    lnb_do_configure@i2c	PTR struct i2c_dev__ size(2) Largest target is 8
		 -> g_i2c_bus(BANK2[8]), 

    lnb_configure@i2c	PTR struct i2c_dev__ size(2) Largest target is 8
		 -> g_i2c_bus(BANK2[8]), 

    i2c_transfer_native@bdata	PTR unsigned char  size(2) Largest target is 128
		 -> print_char@map(BANK0[8]), lcd_clear_screen@buf(BANK1[128]), ssd1306_setpos@data(BANK0[3]), ssd1306_init_commands(BANK3[27]), 
		 -> read_reg@val(COMRAM[1]), LNB_error(BANK0[1]), lnb_do_configure@value(COMRAM[1]), smbus8_read_byte@reg(COMRAM[1]), 
		 -> smbus8_write_data@reg(COMRAM[1]), smbus8_write_byte@tmp(BANK0[2]), NULL(NULL[0]), 

    i2c_transfer_native@pmsg.data	PTR void  size(2) Largest target is 128
		 -> print_char@map(BANK0[8]), lcd_clear_screen@buf(BANK1[128]), ssd1306_setpos@data(BANK0[3]), ssd1306_init_commands(BANK3[27]), 
		 -> read_reg@val(COMRAM[1]), LNB_error(BANK0[1]), lnb_do_configure@value(COMRAM[1]), smbus8_read_byte@reg(COMRAM[1]), 
		 -> smbus8_write_data@reg(COMRAM[1]), smbus8_write_byte@tmp(BANK0[2]), NULL(NULL[0]), 

    i2c_transfer_native@msg	PTR struct i2c_msg size(2) Largest target is 16
		 -> smbus8_read_byte@msg(BANK0[14]), smbus8_write_data@msg(BANK0[14]), smbus8_write_byte@msg(BANK0[7]), i2c_probe_addr@msg(COMRAM[7]), 

    i2c_transfer_native@pmsg	PTR struct i2c_msg size(2) Largest target is 16
		 -> smbus8_read_byte@msg(BANK0[14]), smbus8_write_data@msg(BANK0[14]), smbus8_write_byte@msg(BANK0[7]), i2c_probe_addr@msg(COMRAM[7]), 

    i2c_transfer_native@dev	PTR struct i2c_dev__ size(2) Largest target is 8
		 -> g_i2c_bus(BANK2[8]), NULL(NULL[0]), 

    i2c_transfer_native@ctx	PTR struct i2c_data_native size(2) Largest target is 8
		 -> g_i2c_bus(BANK2[8]), NULL(NULL[0]), 

    i2c_read@data	PTR unsigned char  size(2) Largest target is 128
		 -> print_char@map(BANK0[8]), lcd_clear_screen@buf(BANK1[128]), ssd1306_setpos@data(BANK0[3]), ssd1306_init_commands(BANK3[27]), 
		 -> read_reg@val(COMRAM[1]), LNB_error(BANK0[1]), lnb_do_configure@value(COMRAM[1]), smbus8_read_byte@reg(COMRAM[1]), 
		 -> smbus8_write_data@reg(COMRAM[1]), smbus8_write_byte@tmp(BANK0[2]), NULL(NULL[0]), 

    i2c_stop@ctx	PTR struct i2c_data_native size(2) Largest target is 8
		 -> g_i2c_bus(BANK2[8]), NULL(NULL[0]), 

    i2c_reset@ctx.ops.setbaud	PTR FTN(PTR struct i2c_dev__,int ,)int  size(2) Largest target is 0

    i2c_reset@ctx.ops.transfer	PTR FTN(PTR struct i2c_dev__,PTR struct i2c_msg,int ,)int  size(2) Largest target is 2
		 -> i2c_transfer_native(), 

    i2c_reset@ctx	PTR struct i2c_data_native size(2) Largest target is 8
		 -> g_i2c_bus(BANK2[8]), NULL(NULL[0]), 

    i2c_native_init@ctx.ops.setbaud	PTR FTN(PTR struct i2c_dev__,int ,)int  size(2) Largest target is 0

    i2c_native_init@ctx.ops.transfer	PTR FTN(PTR struct i2c_dev__,PTR struct i2c_msg,int ,)int  size(2) Largest target is 2
		 -> i2c_transfer_native(), 

    i2c_native_init@ctx	PTR struct i2c_data_native size(2) Largest target is 8
		 -> g_i2c_bus(BANK2[8]), 

    PIN_SIO_DATA.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_SIO_DATA.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_SIO_DATA	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_SIO_DATA_DEF(CODE[5]), 

    PIN_SIO_CLK.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_SIO_CLK.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_SIO_CLK	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_SIO_CLK_DEF(CODE[5]), 

    adf4351_write_reg5@ctx	PTR struct adf4351_ctx size(2) Largest target is 55
		 -> g_adf4351(BANK3[55]), 

    adf4351_write_reg4@ctx	PTR struct adf4351_ctx size(2) Largest target is 55
		 -> g_adf4351(BANK3[55]), 

    adf4351_write_reg3@ctx	PTR struct adf4351_ctx size(2) Largest target is 55
		 -> g_adf4351(BANK3[55]), 

    adf4351_write_reg2@ctx	PTR struct adf4351_ctx size(2) Largest target is 55
		 -> g_adf4351(BANK3[55]), 

    adf4351_write_reg1@ctx	PTR struct adf4351_ctx size(2) Largest target is 55
		 -> g_adf4351(BANK3[55]), 

    adf4351_write_reg0@ctx	PTR struct adf4351_ctx size(2) Largest target is 55
		 -> g_adf4351(BANK3[55]), 

    adf4351_setup@ctx	PTR struct adf4351_ctx size(2) Largest target is 55
		 -> g_adf4351(BANK3[55]), 

    adf4351_default@ctx	PTR struct adf4351_ctx size(2) Largest target is 55
		 -> g_adf4351(BANK3[55]), 

    adf4351_set_tune@ctx	PTR struct adf4351_ctx size(2) Largest target is 55
		 -> g_adf4351(BANK3[55]), 

    adf4351_set_mode@ctx	PTR struct adf4351_ctx size(2) Largest target is 55
		 -> g_adf4351(BANK3[55]), 

    PIN_LED_ADF_LOCK.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_LED_ADF_LOCK.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_LED_ADF_LOCK	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_LED_ADF_LOCK_DEF(CODE[5]), 

    PIN_ADF_LOCK.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_ADF_LOCK.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_ADF_LOCK	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_ADF_LOCK_DEF(CODE[5]), 

    adf4351_calc_counters@ctx	PTR struct adf4351_ctx size(2) Largest target is 55
		 -> g_adf4351(BANK3[55]), 

    adf4351_set_freq@ctx	PTR struct adf4351_ctx size(2) Largest target is 55
		 -> g_adf4351(BANK3[55]), 

    PIN_ADF_CE.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_ADF_CE.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_ADF_CE	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_ADF_CE_DEF(CODE[5]), 

    S154gpio_pin_def$pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    PIN_ADF_LE.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISA(SFR[1]), TRISC(SFR[1]), 

    S154gpio_pin_def$pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_ADF_LE.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_ADF_LE	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_ADF_LE_DEF(CODE[5]), 

    sp__memset	PTR void  size(2) Largest target is 240
		 -> g_adf4351(BANK3[55]), g_i2c_bus(BANK2[8]), eval_gps@elem(BANK1[240]), itoa@buffer(BANK2[12]), 
		 -> print_char@map(BANK0[8]), lcd_clear_screen@buf(BANK1[128]), 

    adf4351_init@ctx	PTR struct adf4351_ctx size(2) Largest target is 55
		 -> g_adf4351(BANK3[55]), 

    smbus8_read_byte@dev	PTR struct i2c_dev__ size(2) Largest target is 8
		 -> g_i2c_bus(BANK2[8]), 

    smbus8_read_byte@data	PTR unsigned char  size(2) Largest target is 1
		 -> read_reg@val(COMRAM[1]), LNB_error(BANK0[1]), lnb_do_configure@value(COMRAM[1]), 

    smbus8_read_byte@msg.data	PTR void  size(2) Largest target is 128
		 -> print_char@map(BANK0[8]), lcd_clear_screen@buf(BANK1[128]), ssd1306_setpos@data(BANK0[3]), ssd1306_init_commands(BANK3[27]), 
		 -> read_reg@val(COMRAM[1]), LNB_error(BANK0[1]), lnb_do_configure@value(COMRAM[1]), smbus8_read_byte@reg(COMRAM[1]), 
		 -> smbus8_write_data@reg(COMRAM[1]), smbus8_write_byte@tmp(BANK0[2]), NULL(NULL[0]), 

    smbus8_write_data@dev	PTR struct i2c_dev__ size(2) Largest target is 8
		 -> g_i2c_bus(BANK2[8]), NULL(NULL[0]), 

    smbus8_write_data@data	PTR const unsigned char  size(2) Largest target is 128
		 -> print_char@map(BANK0[8]), lcd_clear_screen@buf(BANK1[128]), ssd1306_setpos@data(BANK0[3]), ssd1306_init_commands(BANK3[27]), 

    smbus8_write_data@msg.data	PTR void  size(2) Largest target is 128
		 -> print_char@map(BANK0[8]), lcd_clear_screen@buf(BANK1[128]), ssd1306_setpos@data(BANK0[3]), ssd1306_init_commands(BANK3[27]), 
		 -> read_reg@val(COMRAM[1]), LNB_error(BANK0[1]), lnb_do_configure@value(COMRAM[1]), smbus8_read_byte@reg(COMRAM[1]), 
		 -> smbus8_write_data@reg(COMRAM[1]), smbus8_write_byte@tmp(BANK0[2]), NULL(NULL[0]), 

    smbus8_write_byte@dev	PTR struct i2c_dev__ size(2) Largest target is 8
		 -> g_i2c_bus(BANK2[8]), NULL(NULL[0]), 

    msg.data	PTR void  size(2) Largest target is 128
		 -> print_char@map(BANK0[8]), lcd_clear_screen@buf(BANK1[128]), ssd1306_setpos@data(BANK0[3]), ssd1306_init_commands(BANK3[27]), 
		 -> read_reg@val(COMRAM[1]), LNB_error(BANK0[1]), lnb_do_configure@value(COMRAM[1]), smbus8_read_byte@reg(COMRAM[1]), 
		 -> smbus8_write_data@reg(COMRAM[1]), smbus8_write_byte@tmp(BANK0[2]), NULL(NULL[0]), 

    i2c_probe_addr@dev	PTR struct i2c_dev__ size(2) Largest target is 8
		 -> g_i2c_bus(BANK2[8]), 

    S26i2c_msg$data	PTR void  size(2) Largest target is 128
		 -> print_char@map(BANK0[8]), lcd_clear_screen@buf(BANK1[128]), ssd1306_setpos@data(BANK0[3]), ssd1306_init_commands(BANK3[27]), 
		 -> read_reg@val(COMRAM[1]), LNB_error(BANK0[1]), lnb_do_configure@value(COMRAM[1]), smbus8_read_byte@reg(COMRAM[1]), 
		 -> smbus8_write_data@reg(COMRAM[1]), smbus8_write_byte@tmp(BANK0[2]), NULL(NULL[0]), 

    msg.data	PTR void  size(2) Largest target is 128
		 -> print_char@map(BANK0[8]), lcd_clear_screen@buf(BANK1[128]), ssd1306_setpos@data(BANK0[3]), ssd1306_init_commands(BANK3[27]), 
		 -> read_reg@val(COMRAM[1]), LNB_error(BANK0[1]), lnb_do_configure@value(COMRAM[1]), smbus8_read_byte@reg(COMRAM[1]), 
		 -> smbus8_write_data@reg(COMRAM[1]), smbus8_write_byte@tmp(BANK0[2]), NULL(NULL[0]), 

    S33i2c_driver_ops$setbaud	PTR FTN(PTR struct i2c_dev__,int ,)int  size(2) Largest target is 0

    i2c_transfer@dev.setbaud	PTR FTN(PTR struct i2c_dev__,int ,)int  size(2) Largest target is 0

    S33i2c_driver_ops$transfer	PTR FTN(PTR struct i2c_dev__,PTR struct i2c_msg,int ,)int  size(2) Largest target is 2
		 -> i2c_transfer_native(), 

    i2c_transfer@dev.transfer	PTR FTN(PTR struct i2c_dev__,PTR struct i2c_msg,int ,)int  size(2) Largest target is 2
		 -> i2c_transfer_native(), 

    i2c_transfer@msg	PTR struct i2c_msg size(2) Largest target is 16
		 -> smbus8_read_byte@msg(BANK0[14]), smbus8_write_data@msg(BANK0[14]), smbus8_write_byte@msg(BANK0[7]), i2c_probe_addr@msg(COMRAM[7]), 

    i2c_transfer@dev	PTR struct i2c_dev__ size(2) Largest target is 8
		 -> g_i2c_bus(BANK2[8]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_check_ADF5341_status
    _main->_check_LNB_status
    _main->_setADF4351frequency
    _usart_init->___lldiv
    _si5328_init->_write_regset
    _si5328_checkGPS->_write_regset
    _si5328_set_freq->_write_regset
    _set_reg27->_set_reg
    _show_display->_print_string
    _itoa->_memset
    _CalculateGridSquare->___lldiv
    _adf4351_set_freq->_adf4351_calc_counters
    _calc_mixer_corr_value->___aodiv
    _adf4351_calc_counters->___lodiv
    ___lodiv->___omul
    _rx_usart->_rx_gps
    _rx_gps->_eval_gps
    _eval_gps->_strtol
    _strtol->___strtoxl
    ___strtoxl->_toupper
    _lnb_configure->_check_LNB_status
    _lnb_configure->_lnb_do_configure
    _lcd_init->_print_string
    _ssd1306_commandbyte->_smbus8_write_byte
    _smbus8_write_byte->_i2c_transfer
    _lcd_draw8x8->_ssd1306_data
    _lcd_clear_screen->_ssd1306_data
    _ssd1306_setpos->_ssd1306_command
    _ssd1306_command->_smbus8_write_data
    _ssd1306_data->_smbus8_write_data
    _smbus8_write_data->_i2c_transfer
    _i2c_probe_addr->_i2c_transfer
    _init_gps->_send_UBX_string
    _putgps->_usart_putc
    _init_gpios->_check_RXTX
    _i2c_native_init->_i2c_reset
    _check_si5328_status->_read_reg
    _read_reg->_smbus8_read_byte
    _smbus8_read_byte->_i2c_transfer
    _i2c_transfer->_i2c_transfer_native
    _i2c_transfer_native->_i2c_stop
    _i2c_write->_i2c_wait_int
    _i2c_stop->_i2c_reset
    _i2c_reset->___lldiv
    ___lldiv->___lmul
    _i2c_start->_i2c_wait_int
    _i2c_read->_i2c_wait_int
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _stoa->_fputc
    _dtoa->___aodiv
    _pad->_fputs
    _fputs->_fputc
    _fputc->_usart_putc
    _abs->___aomod
    _atoi->___wmul
    ___wmul->___lwdiv
    _adf4351_set_mode->_adf4351_setup
    _adf4351_setup->_adf4351_write_reg0
    _adf4351_setup->_adf4351_write_reg1
    _adf4351_setup->_adf4351_write_reg2
    _adf4351_setup->_adf4351_write_reg3
    _adf4351_write_reg5->_adf4351_write_latch
    _adf4351_write_reg4->_adf4351_write_latch
    _adf4351_write_reg3->_adf4351_write_latch
    _adf4351_write_reg2->_adf4351_write_latch
    _adf4351_write_reg1->_adf4351_write_latch
    _adf4351_write_reg0->_adf4351_write_latch
    _adf4351_init->_memset

Critical Paths under _global_irq_handler in COMRAM

    _global_irq_handler->_usart_rx_irq_handler

Critical Paths under _main in BANK0

    _main->_show_display
    _main->_si5328_init
    _si5328_init->_setQRG
    _si5328_checkGPS->_setQRG
    _setQRG->_si5328_set_freq
    _si5328_set_freq->_write_regset
    _write_regset->_printf
    _si5328_perform_ical->_printf
    _set_reg26->_printf
    _set_reg25->_printf
    _set_reg24->_printf
    _show_display->_print_string
    _setADF4351frequency->_adf4351_set_freq
    _adf4351_set_freq->_printf
    _lnb_configure->_check_LNB_status
    _lnb_do_configure->_printf
    _check_LNB_status->_printf
    _lcd_init->_print_string
    _ssd1306_commandbyte->_smbus8_write_byte
    _print_string->_print_char
    _print_char->_lcd_draw8x8
    _lcd_draw8x8->_ssd1306_setpos
    _lcd_clear_screen->_ssd1306_setpos
    _ssd1306_command->_smbus8_write_data
    _ssd1306_data->_smbus8_write_data
    _init_gps->_send_UBX_string
    _send_UBX_string->_printf
    _check_si5328_status->_printf
    _read_reg->_smbus8_read_byte
    _check_ADF5341_status->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _global_irq_handler in BANK0

    None.

Critical Paths under _main in BANK1

    _show_display->_lcd_clear_screen
    _rx_gps->_eval_gps
    _lcd_init->_lcd_clear_screen
    _init_gps->_send_UBX_string

Critical Paths under _global_irq_handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _global_irq_handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _global_irq_handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _global_irq_handler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _global_irq_handler in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0 1604039
                                             68 BANK0      4     4      0
                       _adf4351_init
                   _adf4351_set_mode
                   _adf4351_set_tune
               _check_ADF5341_status
                   _check_LNB_status
                _check_si5328_status
                    _i2c_native_init
                         _init_gpios
                           _init_gps
                         _init_timer
                           _lcd_init
                      _lnb_configure
                           _rx_usart
                    _secret_settings
                _setADF4351frequency
                             _setQRG
                       _show_display
                    _si5328_checkGPS
                        _si5328_init
                         _usart_init
 ---------------------------------------------------------------------------------
 (1) _usart_init                                           6     2      4    2549
                                             38 COMRAM     6     2      4
                            ___lldiv
                    _irq_set_handler
 ---------------------------------------------------------------------------------
 (2) _irq_set_handler                                      5     1      4     262
                                             13 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _si5328_init                                          7     4      3  330338
                                             61 BANK0      7     4      3
                     _i2c_probe_addr
                             _printf
                             _setQRG
                  _smbus8_write_byte
                       _write_regset
 ---------------------------------------------------------------------------------
 (1) _si5328_checkGPS                                      3     0      3  302601
                                             61 BANK0      3     0      3
                             _printf
                             _setQRG
                       _write_regset
 ---------------------------------------------------------------------------------
 (2) _setQRG                                               5     5      0  222764
                                             56 BANK0      5     5      0
                    _si5328_set_freq
 ---------------------------------------------------------------------------------
 (3) _si5328_set_freq                                      4     0      4  222659
                                             52 BANK0      4     0      4
                             _printf
                          _set_reg24
                          _set_reg25
                          _set_reg26
                          _set_reg27
                _si5328_perform_ical
                       _write_regset
 ---------------------------------------------------------------------------------
 (2) _write_regset                                        11     4      7   48203
                                             97 COMRAM     2     2      0
                                             43 BANK0      9     2      7
                             _printf
                  _smbus8_write_byte
 ---------------------------------------------------------------------------------
 (4) _si5328_perform_ical                                  3     0      3   46419
                                             43 BANK0      3     0      3
                             _printf
                  _smbus8_write_byte
 ---------------------------------------------------------------------------------
 (4) _set_reg27                                            0     0      0     542
                            _set_reg
 ---------------------------------------------------------------------------------
 (4) _set_reg26                                            0     0      0   31872
                             _printf
                            _set_reg
 ---------------------------------------------------------------------------------
 (4) _set_reg25                                            0     0      0   31872
                             _printf
                            _set_reg
 ---------------------------------------------------------------------------------
 (4) _set_reg24                                            0     0      0   31872
                             _printf
                            _set_reg
 ---------------------------------------------------------------------------------
 (5) _set_reg                                              7     7      0     542
                                             13 COMRAM     7     7      0
 ---------------------------------------------------------------------------------
 (1) _show_display                                         6     6      0  132153
                                             62 BANK0      6     6      0
                _CalculateGridSquare
                               _itoa
                   _lcd_clear_screen
                             _memcmp
                             _memcpy
                       _print_string
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _memcmp                                              12     6      6     865
                                             13 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 3     1      2    4508
                                             25 COMRAM     3     1      2
                            ___awdiv
                            ___awmod
                             _memset
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     448
                                             13 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                             13 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _CalculateGridSquare                                 54    52      2    5333
                                             38 COMRAM    54    52      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _setADF4351frequency                                  8     8      0   80962
                                             98 COMRAM     2     2      0
                                             61 BANK0      6     6      0
                   _adf4351_get_lock
                   _adf4351_set_freq
                             _printf
                        _read_switch
 ---------------------------------------------------------------------------------
 (2) _read_switch                                          7     7      0      92
                                             13 COMRAM     7     7      0
 ---------------------------------------------------------------------------------
 (2) _adf4351_set_freq                                    18    12      6   49071
                                             43 BANK0     18    12      6
                            ___aldiv
                            ___lldiv
              _adf4351_calc_counters
                      _adf4351_setup
              _calc_mixer_corr_value
                             _printf
 ---------------------------------------------------------------------------------
 (3) _calc_mixer_corr_value                               32    28      4    3098
                                             39 COMRAM    32    28      4
                            ___aodiv
                             ___omul
                    _getGPSfrequency
 ---------------------------------------------------------------------------------
 (4) _getGPSfrequency                                      8     4      4      29
                                             13 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _adf4351_calc_counters                               36    34      2    5664
                                             62 COMRAM    36    34      2
                             ___lmul
                            ___lodiv
                            ___lwdiv
                             ___omul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___omul                                              24     8     16    1130
                                             13 COMRAM    24     8     16
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     358
                                             13 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___lodiv                                             25     9     16     412
                                             37 COMRAM    25     9     16
                             ___omul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     496
                                             13 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) _adf4351_get_lock                                     5     3      2      76
                                             13 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _secret_settings                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _rx_usart                                             2     2      0   17032
                                             79 COMRAM     2     2      0
                             _rx_gps
                         _usart_getc
 ---------------------------------------------------------------------------------
 (2) _usart_getc                                           6     4      2      23
                                             13 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _rx_gps                                               4     2      2   16944
                                             75 COMRAM     4     2      2
                           _eval_gps
 ---------------------------------------------------------------------------------
 (3) _eval_gps                                           254   252      2   16079
                                             69 COMRAM     6     4      2
                                              0 BANK1    248   248      0
                               _atoi
                             _memcpy
                             _memset
                             _strchr
                             _strlen
                             _strtol
 ---------------------------------------------------------------------------------
 (4) _strtol                                               6     0      6    6434
                                             63 COMRAM     6     0      6
                          ___strtoxl
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (5) ___strtoxl                                           36    29      7    6071
                                             27 COMRAM    36    29      7
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8    2292
                                             13 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) _strchr                                               5     1      4     240
                                             13 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              11     5      6    1967
                                             13 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (1) _lnb_configure                                        7     4      3  151340
                                             47 BANK0      7     4      3
                   _check_LNB_status
                     _i2c_probe_addr
                   _lnb_do_configure
                             _printf
 ---------------------------------------------------------------------------------
 (2) _lnb_do_configure                                     6     3      3   61069
                                             97 COMRAM     3     3      0
                                             43 BANK0      3     0      3
                             _printf
                   _smbus8_read_byte
                  _smbus8_write_byte
 ---------------------------------------------------------------------------------
 (2) _check_LNB_status                                     7     4      3   45754
                                             97 COMRAM     3     3      0
                                             43 BANK0      4     1      3
                             _printf
                   _smbus8_read_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             5     2      3  191246
                                             62 BANK0      5     2      3
                     _i2c_probe_addr
                   _lcd_clear_screen
                       _print_string
                             _printf
                    _ssd1306_command
                _ssd1306_commandbyte
 ---------------------------------------------------------------------------------
 (2) _ssd1306_commandbyte                                  1     1      0   14878
                                             92 COMRAM     1     1      0
                  _smbus8_write_byte
 ---------------------------------------------------------------------------------
 (3) _smbus8_write_byte                                   14     9      5   14847
                                             87 COMRAM     5     0      5
                                              0 BANK0      9     9      0
                       _i2c_transfer
 ---------------------------------------------------------------------------------
 (2) _print_string                                         8     3      5   87317
                                             99 COMRAM     1     1      0
                                             55 BANK0      7     2      5
                _CalculateGridSquare (ARG)
                               _itoa (ARG)
                         _print_char
                             _printf
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _print_char                                          32    29      3   31930
                                             23 BANK0     32    29      3
                        _lcd_draw8x8
                             _memset
 ---------------------------------------------------------------------------------
 (4) _lcd_draw8x8                                          4     0      4   28341
                                             19 BANK0      4     0      4
                       _ssd1306_data
                     _ssd1306_setpos
 ---------------------------------------------------------------------------------
 (2) _lcd_clear_screen                                   130   130      0   30870
                                              0 BANK1    130   130      0
                             _memset
                       _ssd1306_data
                     _ssd1306_setpos
 ---------------------------------------------------------------------------------
 (5) _ssd1306_setpos                                       5     4      1   14190
                                             14 BANK0      5     4      1
                    _ssd1306_command
 ---------------------------------------------------------------------------------
 (6) _ssd1306_command                                      4     0      4   13788
                                             95 COMRAM     4     0      4
                  _smbus8_write_data
 ---------------------------------------------------------------------------------
 (5) _ssd1306_data                                         4     0      4   13788
                                             95 COMRAM     4     0      4
                  _smbus8_write_data
 ---------------------------------------------------------------------------------
 (7) _smbus8_write_data                                   22    14      8   13366
                                             87 COMRAM     8     0      8
                                              0 BANK0     14    14      0
                       _i2c_transfer
 ---------------------------------------------------------------------------------
 (2) _i2c_probe_addr                                      10     7      3   12725
                                             87 COMRAM    10     7      3
                       _i2c_transfer
 ---------------------------------------------------------------------------------
 (1) _init_timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_gps                                             0     0      0   33029
                    _send_UBX_string
 ---------------------------------------------------------------------------------
 (2) _send_UBX_string                                     67    62      5   33029
                                             97 COMRAM     1     1      0
                                             43 BANK0      5     0      5
                                              0 BANK1     61    61      0
                             _printf
                             _putgps
 ---------------------------------------------------------------------------------
 (3) _putgps                                               1     1      0      69
                                             14 COMRAM     1     1      0
                         _usart_putc
 ---------------------------------------------------------------------------------
 (1) _init_gpios                                           3     3      0      46
                                             18 COMRAM     3     3      0
                         _check_RXTX
 ---------------------------------------------------------------------------------
 (2) _check_RXTX                                           5     5      0      46
                                             13 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _i2c_native_init                                      6     0      6    5476
                                             52 COMRAM     6     0      6
                          _i2c_reset
                             _memset
 ---------------------------------------------------------------------------------
 (1) _check_si5328_status                                  9     6      3   46144
                                             43 BANK0      9     6      3
                             _printf
                           _read_reg
 ---------------------------------------------------------------------------------
 (2) _read_reg                                             7     3      4   14312
                                             93 COMRAM     7     3      4
                   _smbus8_read_byte
 ---------------------------------------------------------------------------------
 (3) _smbus8_read_byte                                    20    14      6   13875
                                             87 COMRAM     6     0      6
                                              0 BANK0     14    14      0
                       _i2c_transfer
 ---------------------------------------------------------------------------------
 (4) _i2c_transfer                                         6     0      6   11954
                                             81 COMRAM     6     0      6
                _i2c_transfer_native *
 ---------------------------------------------------------------------------------
 (5) _i2c_transfer_native                                 27    21      6   10719
                                             54 COMRAM    27    21      6
                             ___wmul
                           _i2c_read
                          _i2c_reset
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (6) _i2c_write                                            5     3      2     788
                                             17 COMRAM     5     3      2
                       _i2c_wait_int
 ---------------------------------------------------------------------------------
 (6) _i2c_stop                                             2     0      2    3286
                                             52 COMRAM     2     0      2
                          _i2c_reset
                       _i2c_wait_int
 ---------------------------------------------------------------------------------
 (7) _i2c_reset                                           14    12      2    2504
                                             38 COMRAM    14    12      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8    2101
                                             25 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (6) _i2c_start                                            9     3      6    1126
                                             17 COMRAM     9     3      6
                       _i2c_wait_int
 ---------------------------------------------------------------------------------
 (6) _i2c_read                                             7     3      4     943
                                             17 COMRAM     7     3      4
                       _i2c_wait_int
 ---------------------------------------------------------------------------------
 (7) _i2c_wait_int                                         4     0      4     571
                                             13 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _check_ADF5341_status                                 6     4      2   31516
                                             97 COMRAM     3     3      0
                                             43 BANK0      3     1      2
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              14     4     10   31330
                                             29 BANK0     14     4     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   27349
                                             95 COMRAM     2     2      0
                                             23 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           55    49      6   26768
                                             75 COMRAM    20    14      6
                                              0 BANK0     23    23      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                            _strncmp
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                39    28     11    7637
                                             36 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              8     6      2     602
                                             19 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (8) _islower                                              6     4      2     191
                                             13 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     191
                                             13 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              6     4      2     281
                                             13 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6    1405
                                             13 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    18      4    3242
                                             18 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    8503
                                             39 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    5157
                                             25 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2    1030
                                             13 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1867
                                             18 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                4     0      4    1367
                                             14 COMRAM     4     0      4
                         _usart_putc
 ---------------------------------------------------------------------------------
 (10) _usart_putc                                          1     1      0      38
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             31 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                             13 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16    1525
                                             13 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    2173
                                             26 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     349
                                             13 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     371
                                             13 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     800
                                             20 COMRAM     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _adf4351_set_tune                                     8     2      6     460
                                             13 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _adf4351_set_mode                                     6     2      4    7476
                                             39 COMRAM     6     2      4
                      _adf4351_setup
                 _adf4351_write_reg2
                 _adf4351_write_reg4
 ---------------------------------------------------------------------------------
 (3) _adf4351_setup                                        2     0      2    5111
                                             37 COMRAM     2     0      2
                 _adf4351_write_reg0
                 _adf4351_write_reg1
                 _adf4351_write_reg2
                 _adf4351_write_reg3
                 _adf4351_write_reg4
                 _adf4351_write_reg5
 ---------------------------------------------------------------------------------
 (4) _adf4351_write_reg5                                  11     9      2     668
                                             25 COMRAM    11     9      2
                _adf4351_write_latch
 ---------------------------------------------------------------------------------
 (4) _adf4351_write_reg4                                  11     9      2     951
                                             25 COMRAM    11     9      2
                _adf4351_write_latch
 ---------------------------------------------------------------------------------
 (4) _adf4351_write_reg3                                  12    10      2     783
                                             25 COMRAM    12    10      2
                _adf4351_write_latch
 ---------------------------------------------------------------------------------
 (4) _adf4351_write_reg2                                  12    10      2    1020
                                             25 COMRAM    12    10      2
                _adf4351_write_latch
 ---------------------------------------------------------------------------------
 (4) _adf4351_write_reg1                                  12    10      2     714
                                             25 COMRAM    12    10      2
                _adf4351_write_latch
 ---------------------------------------------------------------------------------
 (4) _adf4351_write_reg0                                  12    10      2     691
                                             25 COMRAM    12    10      2
                _adf4351_write_latch
 ---------------------------------------------------------------------------------
 (5) _adf4351_write_latch                                 12     8      4     524
                                             13 COMRAM    12     8      4
 ---------------------------------------------------------------------------------
 (1) _adf4351_init                                         5     3      2    3116
                                             25 COMRAM     5     3      2
                    _adf4351_default
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                              12     6      6    2637
                                             13 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) _adf4351_default                                      2     0      2     296
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _global_irq_handler                                  6     6      0     176
                                              7 COMRAM     6     6      0
               _usart_rx_irq_handler *
 ---------------------------------------------------------------------------------
 (14) _usart_rx_irq_handler                                7     5      2     174
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adf4351_init
     _adf4351_default
     _memset
   _adf4351_set_mode
     _adf4351_setup
       _adf4351_write_reg0
         _adf4351_write_latch
       _adf4351_write_reg1
         _adf4351_write_latch
       _adf4351_write_reg2
         _adf4351_write_latch
       _adf4351_write_reg3
         _adf4351_write_latch
       _adf4351_write_reg4
         _adf4351_write_latch
       _adf4351_write_reg5
         _adf4351_write_latch
     _adf4351_write_reg2
       _adf4351_write_latch
     _adf4351_write_reg4
       _adf4351_write_latch
   _adf4351_set_tune
   _check_ADF5341_status
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
               ___lwdiv (ARG)
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _usart_putc
               _fputs
                 _fputc
                   _usart_putc
               _strlen
           _fputc
             _usart_putc
           _isdigit
           _stoa
             _fputc
               _usart_putc
             _strlen
           _strncmp
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _usart_putc
               _fputs
                 _fputc
                   _usart_putc
               _strlen
             _toupper
               _islower
   _check_LNB_status
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
               ___lwdiv (ARG)
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _usart_putc
               _fputs
                 _fputc
                   _usart_putc
               _strlen
           _fputc
             _usart_putc
           _isdigit
           _stoa
             _fputc
               _usart_putc
             _strlen
           _strncmp
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _usart_putc
               _fputs
                 _fputc
                   _usart_putc
               _strlen
             _toupper
               _islower
     _smbus8_read_byte
       _i2c_transfer
         _i2c_transfer_native *
           ___wmul
             ___lwdiv (ARG)
           _i2c_read
             _i2c_wait_int
           _i2c_reset
             ___lldiv
               ___lmul (ARG)
           _i2c_start
             _i2c_wait_int
           _i2c_stop
             _i2c_reset
               ___lldiv
                 ___lmul (ARG)
             _i2c_wait_int
           _i2c_write
             _i2c_wait_int
   _check_si5328_status
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
               ___lwdiv (ARG)
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _usart_putc
               _fputs
                 _fputc
                   _usart_putc
               _strlen
           _fputc
             _usart_putc
           _isdigit
           _stoa
             _fputc
               _usart_putc
             _strlen
           _strncmp
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _usart_putc
               _fputs
                 _fputc
                   _usart_putc
               _strlen
             _toupper
               _islower
     _read_reg
       _smbus8_read_byte
         _i2c_transfer
           _i2c_transfer_native *
             ___wmul
               ___lwdiv (ARG)
             _i2c_read
               _i2c_wait_int
             _i2c_reset
               ___lldiv
                 ___lmul (ARG)
             _i2c_start
               _i2c_wait_int
             _i2c_stop
               _i2c_reset
                 ___lldiv
                   ___lmul (ARG)
               _i2c_wait_int
             _i2c_write
               _i2c_wait_int
   _i2c_native_init
     _i2c_reset
       ___lldiv
         ___lmul (ARG)
     _memset
   _init_gpios
     _check_RXTX
   _init_gps
     _send_UBX_string
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
                 ___lwdiv (ARG)
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _usart_putc
                 _fputs
                   _fputc
                     _usart_putc
                 _strlen
             _fputc
               _usart_putc
             _isdigit
             _stoa
               _fputc
                 _usart_putc
               _strlen
             _strncmp
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _usart_putc
                 _fputs
                   _fputc
                     _usart_putc
                 _strlen
               _toupper
                 _islower
       _putgps
         _usart_putc
   _init_timer
   _lcd_init
     _i2c_probe_addr
       _i2c_transfer
         _i2c_transfer_native *
           ___wmul
             ___lwdiv (ARG)
           _i2c_read
             _i2c_wait_int
           _i2c_reset
             ___lldiv
               ___lmul (ARG)
           _i2c_start
             _i2c_wait_int
           _i2c_stop
             _i2c_reset
               ___lldiv
                 ___lmul (ARG)
             _i2c_wait_int
           _i2c_write
             _i2c_wait_int
     _lcd_clear_screen
       _memset
       _ssd1306_data
         _smbus8_write_data
           _i2c_transfer
             _i2c_transfer_native *
               ___wmul
                 ___lwdiv (ARG)
               _i2c_read
                 _i2c_wait_int
               _i2c_reset
                 ___lldiv
                   ___lmul (ARG)
               _i2c_start
                 _i2c_wait_int
               _i2c_stop
                 _i2c_reset
                   ___lldiv
                     ___lmul (ARG)
                 _i2c_wait_int
               _i2c_write
                 _i2c_wait_int
       _ssd1306_setpos
         _ssd1306_command
           _smbus8_write_data
             _i2c_transfer
               _i2c_transfer_native *
                 ___wmul
                   ___lwdiv (ARG)
                 _i2c_read
                   _i2c_wait_int
                 _i2c_reset
                   ___lldiv
                     ___lmul (ARG)
                 _i2c_start
                   _i2c_wait_int
                 _i2c_stop
                   _i2c_reset
                     ___lldiv
                       ___lmul (ARG)
                   _i2c_wait_int
                 _i2c_write
                   _i2c_wait_int
     _print_string
       _CalculateGridSquare (ARG)
         ___lldiv
           ___lmul (ARG)
         ___lmul
       _itoa (ARG)
         ___awdiv
         ___awmod
         _memset
       _print_char (ARG)
         _lcd_draw8x8
           _ssd1306_data
             _smbus8_write_data
               _i2c_transfer
                 _i2c_transfer_native *
                   ___wmul
                     ___lwdiv (ARG)
                   _i2c_read
                     _i2c_wait_int
                   _i2c_reset
                     ___lldiv
                       ___lmul (ARG)
                   _i2c_start
                     _i2c_wait_int
                   _i2c_stop
                     _i2c_reset
                       ___lldiv
                         ___lmul (ARG)
                     _i2c_wait_int
                   _i2c_write
                     _i2c_wait_int
           _ssd1306_setpos
             _ssd1306_command
               _smbus8_write_data
                 _i2c_transfer
                   _i2c_transfer_native *
                     ___wmul
                       ___lwdiv (ARG)
                     _i2c_read
                       _i2c_wait_int
                     _i2c_reset
                       ___lldiv
                         ___lmul (ARG)
                     _i2c_start
                       _i2c_wait_int
                     _i2c_stop
                       _i2c_reset
                         ___lldiv
                           ___lmul (ARG)
                       _i2c_wait_int
                     _i2c_write
                       _i2c_wait_int
         _memset
       _printf (ARG)
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
                 ___lwdiv (ARG)
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _usart_putc
                 _fputs
                   _fputc
                     _usart_putc
                 _strlen
             _fputc
               _usart_putc
             _isdigit
             _stoa
               _fputc
                 _usart_putc
               _strlen
             _strncmp
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _usart_putc
                 _fputs
                   _fputc
                     _usart_putc
                 _strlen
               _toupper
                 _islower
       _strlen (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
               ___lwdiv (ARG)
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _usart_putc
               _fputs
                 _fputc
                   _usart_putc
               _strlen
           _fputc
             _usart_putc
           _isdigit
           _stoa
             _fputc
               _usart_putc
             _strlen
           _strncmp
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _usart_putc
               _fputs
                 _fputc
                   _usart_putc
               _strlen
             _toupper
               _islower
     _ssd1306_command
       _smbus8_write_data
         _i2c_transfer
           _i2c_transfer_native *
             ___wmul
               ___lwdiv (ARG)
             _i2c_read
               _i2c_wait_int
             _i2c_reset
               ___lldiv
                 ___lmul (ARG)
             _i2c_start
               _i2c_wait_int
             _i2c_stop
               _i2c_reset
                 ___lldiv
                   ___lmul (ARG)
               _i2c_wait_int
             _i2c_write
               _i2c_wait_int
     _ssd1306_commandbyte
       _smbus8_write_byte
         _i2c_transfer
           _i2c_transfer_native *
             ___wmul
               ___lwdiv (ARG)
             _i2c_read
               _i2c_wait_int
             _i2c_reset
               ___lldiv
                 ___lmul (ARG)
             _i2c_start
               _i2c_wait_int
             _i2c_stop
               _i2c_reset
                 ___lldiv
                   ___lmul (ARG)
               _i2c_wait_int
             _i2c_write
               _i2c_wait_int
   _lnb_configure
     _check_LNB_status
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
                 ___lwdiv (ARG)
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _usart_putc
                 _fputs
                   _fputc
                     _usart_putc
                 _strlen
             _fputc
               _usart_putc
             _isdigit
             _stoa
               _fputc
                 _usart_putc
               _strlen
             _strncmp
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _usart_putc
                 _fputs
                   _fputc
                     _usart_putc
                 _strlen
               _toupper
                 _islower
       _smbus8_read_byte
         _i2c_transfer
           _i2c_transfer_native *
             ___wmul
               ___lwdiv (ARG)
             _i2c_read
               _i2c_wait_int
             _i2c_reset
               ___lldiv
                 ___lmul (ARG)
             _i2c_start
               _i2c_wait_int
             _i2c_stop
               _i2c_reset
                 ___lldiv
                   ___lmul (ARG)
               _i2c_wait_int
             _i2c_write
               _i2c_wait_int
     _i2c_probe_addr
       _i2c_transfer
         _i2c_transfer_native *
           ___wmul
             ___lwdiv (ARG)
           _i2c_read
             _i2c_wait_int
           _i2c_reset
             ___lldiv
               ___lmul (ARG)
           _i2c_start
             _i2c_wait_int
           _i2c_stop
             _i2c_reset
               ___lldiv
                 ___lmul (ARG)
             _i2c_wait_int
           _i2c_write
             _i2c_wait_int
     _lnb_do_configure
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
                 ___lwdiv (ARG)
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _usart_putc
                 _fputs
                   _fputc
                     _usart_putc
                 _strlen
             _fputc
               _usart_putc
             _isdigit
             _stoa
               _fputc
                 _usart_putc
               _strlen
             _strncmp
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _usart_putc
                 _fputs
                   _fputc
                     _usart_putc
                 _strlen
               _toupper
                 _islower
       _smbus8_read_byte
         _i2c_transfer
           _i2c_transfer_native *
             ___wmul
               ___lwdiv (ARG)
             _i2c_read
               _i2c_wait_int
             _i2c_reset
               ___lldiv
                 ___lmul (ARG)
             _i2c_start
               _i2c_wait_int
             _i2c_stop
               _i2c_reset
                 ___lldiv
                   ___lmul (ARG)
               _i2c_wait_int
             _i2c_write
               _i2c_wait_int
       _smbus8_write_byte
         _i2c_transfer
           _i2c_transfer_native *
             ___wmul
               ___lwdiv (ARG)
             _i2c_read
               _i2c_wait_int
             _i2c_reset
               ___lldiv
                 ___lmul (ARG)
             _i2c_start
               _i2c_wait_int
             _i2c_stop
               _i2c_reset
                 ___lldiv
                   ___lmul (ARG)
               _i2c_wait_int
             _i2c_write
               _i2c_wait_int
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
               ___lwdiv (ARG)
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _usart_putc
               _fputs
                 _fputc
                   _usart_putc
               _strlen
           _fputc
             _usart_putc
           _isdigit
           _stoa
             _fputc
               _usart_putc
             _strlen
           _strncmp
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _usart_putc
               _fputs
                 _fputc
                   _usart_putc
               _strlen
             _toupper
               _islower
   _rx_usart
     _rx_gps
       _eval_gps
         _atoi
           ___wmul
             ___lwdiv (ARG)
           _isdigit
           _isspace
         _memcpy
         _memset
         _strchr
         _strlen
         _strtol
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
           _strlen (ARG)
     _usart_getc
   _secret_settings
   _setADF4351frequency
     _adf4351_get_lock
     _adf4351_set_freq
       ___aldiv
       ___lldiv
         ___lmul (ARG)
       _adf4351_calc_counters
         ___lmul
         ___lodiv
           ___omul (ARG)
         ___lwdiv
         ___omul
         ___wmul
           ___lwdiv (ARG)
       _adf4351_setup
         _adf4351_write_reg0
           _adf4351_write_latch
         _adf4351_write_reg1
           _adf4351_write_latch
         _adf4351_write_reg2
           _adf4351_write_latch
         _adf4351_write_reg3
           _adf4351_write_latch
         _adf4351_write_reg4
           _adf4351_write_latch
         _adf4351_write_reg5
           _adf4351_write_latch
       _calc_mixer_corr_value
         ___aodiv
         ___omul
         _getGPSfrequency
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
                 ___lwdiv (ARG)
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _usart_putc
                 _fputs
                   _fputc
                     _usart_putc
                 _strlen
             _fputc
               _usart_putc
             _isdigit
             _stoa
               _fputc
                 _usart_putc
               _strlen
             _strncmp
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _usart_putc
                 _fputs
                   _fputc
                     _usart_putc
                 _strlen
               _toupper
                 _islower
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
               ___lwdiv (ARG)
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _usart_putc
               _fputs
                 _fputc
                   _usart_putc
               _strlen
           _fputc
             _usart_putc
           _isdigit
           _stoa
             _fputc
               _usart_putc
             _strlen
           _strncmp
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _usart_putc
               _fputs
                 _fputc
                   _usart_putc
               _strlen
             _toupper
               _islower
     _read_switch
   _setQRG
     _si5328_set_freq
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
                 ___lwdiv (ARG)
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _usart_putc
                 _fputs
                   _fputc
                     _usart_putc
                 _strlen
             _fputc
               _usart_putc
             _isdigit
             _stoa
               _fputc
                 _usart_putc
               _strlen
             _strncmp
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _usart_putc
                 _fputs
                   _fputc
                     _usart_putc
                 _strlen
               _toupper
                 _islower
       _set_reg24
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                   ___lwdiv (ARG)
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _usart_putc
                   _fputs
                     _fputc
                       _usart_putc
                   _strlen
               _fputc
                 _usart_putc
               _isdigit
               _stoa
                 _fputc
                   _usart_putc
                 _strlen
               _strncmp
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _usart_putc
                   _fputs
                     _fputc
                       _usart_putc
                   _strlen
                 _toupper
                   _islower
         _set_reg
       _set_reg25
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                   ___lwdiv (ARG)
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _usart_putc
                   _fputs
                     _fputc
                       _usart_putc
                   _strlen
               _fputc
                 _usart_putc
               _isdigit
               _stoa
                 _fputc
                   _usart_putc
                 _strlen
               _strncmp
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _usart_putc
                   _fputs
                     _fputc
                       _usart_putc
                   _strlen
                 _toupper
                   _islower
         _set_reg
       _set_reg26
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                   ___lwdiv (ARG)
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _usart_putc
                   _fputs
                     _fputc
                       _usart_putc
                   _strlen
               _fputc
                 _usart_putc
               _isdigit
               _stoa
                 _fputc
                   _usart_putc
                 _strlen
               _strncmp
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _usart_putc
                   _fputs
                     _fputc
                       _usart_putc
                   _strlen
                 _toupper
                   _islower
         _set_reg
       _set_reg27
         _set_reg
       _si5328_perform_ical
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                   ___lwdiv (ARG)
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _usart_putc
                   _fputs
                     _fputc
                       _usart_putc
                   _strlen
               _fputc
                 _usart_putc
               _isdigit
               _stoa
                 _fputc
                   _usart_putc
                 _strlen
               _strncmp
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _usart_putc
                   _fputs
                     _fputc
                       _usart_putc
                   _strlen
                 _toupper
                   _islower
         _smbus8_write_byte
           _i2c_transfer
             _i2c_transfer_native *
               ___wmul
                 ___lwdiv (ARG)
               _i2c_read
                 _i2c_wait_int
               _i2c_reset
                 ___lldiv
                   ___lmul (ARG)
               _i2c_start
                 _i2c_wait_int
               _i2c_stop
                 _i2c_reset
                   ___lldiv
                     ___lmul (ARG)
                 _i2c_wait_int
               _i2c_write
                 _i2c_wait_int
       _write_regset
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                   ___lwdiv (ARG)
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _usart_putc
                   _fputs
                     _fputc
                       _usart_putc
                   _strlen
               _fputc
                 _usart_putc
               _isdigit
               _stoa
                 _fputc
                   _usart_putc
                 _strlen
               _strncmp
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _usart_putc
                   _fputs
                     _fputc
                       _usart_putc
                   _strlen
                 _toupper
                   _islower
         _smbus8_write_byte
           _i2c_transfer
             _i2c_transfer_native *
               ___wmul
                 ___lwdiv (ARG)
               _i2c_read
                 _i2c_wait_int
               _i2c_reset
                 ___lldiv
                   ___lmul (ARG)
               _i2c_start
                 _i2c_wait_int
               _i2c_stop
                 _i2c_reset
                   ___lldiv
                     ___lmul (ARG)
                 _i2c_wait_int
               _i2c_write
                 _i2c_wait_int
   _show_display
     _CalculateGridSquare
       ___lldiv
         ___lmul (ARG)
       ___lmul
     _itoa
       ___awdiv
       ___awmod
       _memset
     _lcd_clear_screen
       _memset
       _ssd1306_data
         _smbus8_write_data
           _i2c_transfer
             _i2c_transfer_native *
               ___wmul
                 ___lwdiv (ARG)
               _i2c_read
                 _i2c_wait_int
               _i2c_reset
                 ___lldiv
                   ___lmul (ARG)
               _i2c_start
                 _i2c_wait_int
               _i2c_stop
                 _i2c_reset
                   ___lldiv
                     ___lmul (ARG)
                 _i2c_wait_int
               _i2c_write
                 _i2c_wait_int
       _ssd1306_setpos
         _ssd1306_command
           _smbus8_write_data
             _i2c_transfer
               _i2c_transfer_native *
                 ___wmul
                   ___lwdiv (ARG)
                 _i2c_read
                   _i2c_wait_int
                 _i2c_reset
                   ___lldiv
                     ___lmul (ARG)
                 _i2c_start
                   _i2c_wait_int
                 _i2c_stop
                   _i2c_reset
                     ___lldiv
                       ___lmul (ARG)
                   _i2c_wait_int
                 _i2c_write
                   _i2c_wait_int
     _memcmp
     _memcpy
     _print_string
       _CalculateGridSquare (ARG)
         ___lldiv
           ___lmul (ARG)
         ___lmul
       _itoa (ARG)
         ___awdiv
         ___awmod
         _memset
       _print_char (ARG)
         _lcd_draw8x8
           _ssd1306_data
             _smbus8_write_data
               _i2c_transfer
                 _i2c_transfer_native *
                   ___wmul
                     ___lwdiv (ARG)
                   _i2c_read
                     _i2c_wait_int
                   _i2c_reset
                     ___lldiv
                       ___lmul (ARG)
                   _i2c_start
                     _i2c_wait_int
                   _i2c_stop
                     _i2c_reset
                       ___lldiv
                         ___lmul (ARG)
                     _i2c_wait_int
                   _i2c_write
                     _i2c_wait_int
           _ssd1306_setpos
             _ssd1306_command
               _smbus8_write_data
                 _i2c_transfer
                   _i2c_transfer_native *
                     ___wmul
                       ___lwdiv (ARG)
                     _i2c_read
                       _i2c_wait_int
                     _i2c_reset
                       ___lldiv
                         ___lmul (ARG)
                     _i2c_start
                       _i2c_wait_int
                     _i2c_stop
                       _i2c_reset
                         ___lldiv
                           ___lmul (ARG)
                       _i2c_wait_int
                     _i2c_write
                       _i2c_wait_int
         _memset
       _printf (ARG)
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
                 ___lwdiv (ARG)
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _usart_putc
                 _fputs
                   _fputc
                     _usart_putc
                 _strlen
             _fputc
               _usart_putc
             _isdigit
             _stoa
               _fputc
                 _usart_putc
               _strlen
             _strncmp
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _usart_putc
                 _fputs
                   _fputc
                     _usart_putc
                 _strlen
               _toupper
                 _islower
       _strlen (ARG)
     _strlen
   _si5328_checkGPS
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
               ___lwdiv (ARG)
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _usart_putc
               _fputs
                 _fputc
                   _usart_putc
               _strlen
           _fputc
             _usart_putc
           _isdigit
           _stoa
             _fputc
               _usart_putc
             _strlen
           _strncmp
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _usart_putc
               _fputs
                 _fputc
                   _usart_putc
               _strlen
             _toupper
               _islower
     _setQRG
       _si5328_set_freq
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                   ___lwdiv (ARG)
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _usart_putc
                   _fputs
                     _fputc
                       _usart_putc
                   _strlen
               _fputc
                 _usart_putc
               _isdigit
               _stoa
                 _fputc
                   _usart_putc
                 _strlen
               _strncmp
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _usart_putc
                   _fputs
                     _fputc
                       _usart_putc
                   _strlen
                 _toupper
                   _islower
         _set_reg24
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   ___wmul
                     ___lwdiv (ARG)
                   _isdigit
                   _isspace
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _usart_putc
                     _fputs
                       _fputc
                         _usart_putc
                     _strlen
                 _fputc
                   _usart_putc
                 _isdigit
                 _stoa
                   _fputc
                     _usart_putc
                   _strlen
                 _strncmp
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _usart_putc
                     _fputs
                       _fputc
                         _usart_putc
                     _strlen
                   _toupper
                     _islower
           _set_reg
         _set_reg25
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   ___wmul
                     ___lwdiv (ARG)
                   _isdigit
                   _isspace
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _usart_putc
                     _fputs
                       _fputc
                         _usart_putc
                     _strlen
                 _fputc
                   _usart_putc
                 _isdigit
                 _stoa
                   _fputc
                     _usart_putc
                   _strlen
                 _strncmp
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _usart_putc
                     _fputs
                       _fputc
                         _usart_putc
                     _strlen
                   _toupper
                     _islower
           _set_reg
         _set_reg26
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   ___wmul
                     ___lwdiv (ARG)
                   _isdigit
                   _isspace
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _usart_putc
                     _fputs
                       _fputc
                         _usart_putc
                     _strlen
                 _fputc
                   _usart_putc
                 _isdigit
                 _stoa
                   _fputc
                     _usart_putc
                   _strlen
                 _strncmp
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _usart_putc
                     _fputs
                       _fputc
                         _usart_putc
                     _strlen
                   _toupper
                     _islower
           _set_reg
         _set_reg27
           _set_reg
         _si5328_perform_ical
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   ___wmul
                     ___lwdiv (ARG)
                   _isdigit
                   _isspace
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _usart_putc
                     _fputs
                       _fputc
                         _usart_putc
                     _strlen
                 _fputc
                   _usart_putc
                 _isdigit
                 _stoa
                   _fputc
                     _usart_putc
                   _strlen
                 _strncmp
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _usart_putc
                     _fputs
                       _fputc
                         _usart_putc
                     _strlen
                   _toupper
                     _islower
           _smbus8_write_byte
             _i2c_transfer
               _i2c_transfer_native *
                 ___wmul
                   ___lwdiv (ARG)
                 _i2c_read
                   _i2c_wait_int
                 _i2c_reset
                   ___lldiv
                     ___lmul (ARG)
                 _i2c_start
                   _i2c_wait_int
                 _i2c_stop
                   _i2c_reset
                     ___lldiv
                       ___lmul (ARG)
                   _i2c_wait_int
                 _i2c_write
                   _i2c_wait_int
         _write_regset
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   ___wmul
                     ___lwdiv (ARG)
                   _isdigit
                   _isspace
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _usart_putc
                     _fputs
                       _fputc
                         _usart_putc
                     _strlen
                 _fputc
                   _usart_putc
                 _isdigit
                 _stoa
                   _fputc
                     _usart_putc
                   _strlen
                 _strncmp
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _usart_putc
                     _fputs
                       _fputc
                         _usart_putc
                     _strlen
                   _toupper
                     _islower
           _smbus8_write_byte
             _i2c_transfer
               _i2c_transfer_native *
                 ___wmul
                   ___lwdiv (ARG)
                 _i2c_read
                   _i2c_wait_int
                 _i2c_reset
                   ___lldiv
                     ___lmul (ARG)
                 _i2c_start
                   _i2c_wait_int
                 _i2c_stop
                   _i2c_reset
                     ___lldiv
                       ___lmul (ARG)
                   _i2c_wait_int
                 _i2c_write
                   _i2c_wait_int
     _write_regset
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
                 ___lwdiv (ARG)
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _usart_putc
                 _fputs
                   _fputc
                     _usart_putc
                 _strlen
             _fputc
               _usart_putc
             _isdigit
             _stoa
               _fputc
                 _usart_putc
               _strlen
             _strncmp
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _usart_putc
                 _fputs
                   _fputc
                     _usart_putc
                 _strlen
               _toupper
                 _islower
       _smbus8_write_byte
         _i2c_transfer
           _i2c_transfer_native *
             ___wmul
               ___lwdiv (ARG)
             _i2c_read
               _i2c_wait_int
             _i2c_reset
               ___lldiv
                 ___lmul (ARG)
             _i2c_start
               _i2c_wait_int
             _i2c_stop
               _i2c_reset
                 ___lldiv
                   ___lmul (ARG)
               _i2c_wait_int
             _i2c_write
               _i2c_wait_int
   _si5328_init
     _i2c_probe_addr
       _i2c_transfer
         _i2c_transfer_native *
           ___wmul
             ___lwdiv (ARG)
           _i2c_read
             _i2c_wait_int
           _i2c_reset
             ___lldiv
               ___lmul (ARG)
           _i2c_start
             _i2c_wait_int
           _i2c_stop
             _i2c_reset
               ___lldiv
                 ___lmul (ARG)
             _i2c_wait_int
           _i2c_write
             _i2c_wait_int
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
               ___lwdiv (ARG)
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _usart_putc
               _fputs
                 _fputc
                   _usart_putc
               _strlen
           _fputc
             _usart_putc
           _isdigit
           _stoa
             _fputc
               _usart_putc
             _strlen
           _strncmp
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _usart_putc
               _fputs
                 _fputc
                   _usart_putc
               _strlen
             _toupper
               _islower
     _setQRG
       _si5328_set_freq
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                   ___lwdiv (ARG)
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _usart_putc
                   _fputs
                     _fputc
                       _usart_putc
                   _strlen
               _fputc
                 _usart_putc
               _isdigit
               _stoa
                 _fputc
                   _usart_putc
                 _strlen
               _strncmp
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _usart_putc
                   _fputs
                     _fputc
                       _usart_putc
                   _strlen
                 _toupper
                   _islower
         _set_reg24
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   ___wmul
                     ___lwdiv (ARG)
                   _isdigit
                   _isspace
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _usart_putc
                     _fputs
                       _fputc
                         _usart_putc
                     _strlen
                 _fputc
                   _usart_putc
                 _isdigit
                 _stoa
                   _fputc
                     _usart_putc
                   _strlen
                 _strncmp
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _usart_putc
                     _fputs
                       _fputc
                         _usart_putc
                     _strlen
                   _toupper
                     _islower
           _set_reg
         _set_reg25
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   ___wmul
                     ___lwdiv (ARG)
                   _isdigit
                   _isspace
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _usart_putc
                     _fputs
                       _fputc
                         _usart_putc
                     _strlen
                 _fputc
                   _usart_putc
                 _isdigit
                 _stoa
                   _fputc
                     _usart_putc
                   _strlen
                 _strncmp
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _usart_putc
                     _fputs
                       _fputc
                         _usart_putc
                     _strlen
                   _toupper
                     _islower
           _set_reg
         _set_reg26
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   ___wmul
                     ___lwdiv (ARG)
                   _isdigit
                   _isspace
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _usart_putc
                     _fputs
                       _fputc
                         _usart_putc
                     _strlen
                 _fputc
                   _usart_putc
                 _isdigit
                 _stoa
                   _fputc
                     _usart_putc
                   _strlen
                 _strncmp
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _usart_putc
                     _fputs
                       _fputc
                         _usart_putc
                     _strlen
                   _toupper
                     _islower
           _set_reg
         _set_reg27
           _set_reg
         _si5328_perform_ical
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   ___wmul
                     ___lwdiv (ARG)
                   _isdigit
                   _isspace
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _usart_putc
                     _fputs
                       _fputc
                         _usart_putc
                     _strlen
                 _fputc
                   _usart_putc
                 _isdigit
                 _stoa
                   _fputc
                     _usart_putc
                   _strlen
                 _strncmp
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _usart_putc
                     _fputs
                       _fputc
                         _usart_putc
                     _strlen
                   _toupper
                     _islower
           _smbus8_write_byte
             _i2c_transfer
               _i2c_transfer_native *
                 ___wmul
                   ___lwdiv (ARG)
                 _i2c_read
                   _i2c_wait_int
                 _i2c_reset
                   ___lldiv
                     ___lmul (ARG)
                 _i2c_start
                   _i2c_wait_int
                 _i2c_stop
                   _i2c_reset
                     ___lldiv
                       ___lmul (ARG)
                   _i2c_wait_int
                 _i2c_write
                   _i2c_wait_int
         _write_regset
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   ___wmul
                     ___lwdiv (ARG)
                   _isdigit
                   _isspace
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _usart_putc
                     _fputs
                       _fputc
                         _usart_putc
                     _strlen
                 _fputc
                   _usart_putc
                 _isdigit
                 _stoa
                   _fputc
                     _usart_putc
                   _strlen
                 _strncmp
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _usart_putc
                     _fputs
                       _fputc
                         _usart_putc
                     _strlen
                   _toupper
                     _islower
           _smbus8_write_byte
             _i2c_transfer
               _i2c_transfer_native *
                 ___wmul
                   ___lwdiv (ARG)
                 _i2c_read
                   _i2c_wait_int
                 _i2c_reset
                   ___lldiv
                     ___lmul (ARG)
                 _i2c_start
                   _i2c_wait_int
                 _i2c_stop
                   _i2c_reset
                     ___lldiv
                       ___lmul (ARG)
                   _i2c_wait_int
                 _i2c_write
                   _i2c_wait_int
     _smbus8_write_byte
       _i2c_transfer
         _i2c_transfer_native *
           ___wmul
             ___lwdiv (ARG)
           _i2c_read
             _i2c_wait_int
           _i2c_reset
             ___lldiv
               ___lmul (ARG)
           _i2c_start
             _i2c_wait_int
           _i2c_stop
             _i2c_reset
               ___lldiv
                 ___lmul (ARG)
             _i2c_wait_int
           _i2c_write
             _i2c_wait_int
     _write_regset
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
                 ___lwdiv (ARG)
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _usart_putc
                 _fputs
                   _fputc
                     _usart_putc
                 _strlen
             _fputc
               _usart_putc
             _isdigit
             _stoa
               _fputc
                 _usart_putc
               _strlen
             _strncmp
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _usart_putc
                 _fputs
                   _fputc
                     _usart_putc
                 _strlen
               _toupper
                 _islower
       _smbus8_write_byte
         _i2c_transfer
           _i2c_transfer_native *
             ___wmul
               ___lwdiv (ARG)
             _i2c_read
               _i2c_wait_int
             _i2c_reset
               ___lldiv
                 ___lmul (ARG)
             _i2c_start
               _i2c_wait_int
             _i2c_stop
               _i2c_reset
                 ___lldiv
                   ___lmul (ARG)
               _i2c_wait_int
             _i2c_write
               _i2c_wait_int
   _usart_init
     ___lldiv
       ___lmul (ARG)
     _irq_set_handler

 _global_irq_handler (ROOT)
   _usart_rx_irq_handler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      80      13       50.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      D9      11       84.8%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F3       9       94.9%
BITBANK1           100      0       0       6        0.0%
BANK1              100     F8     100       7      100.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     48      66       5       79.7%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     64      71       1       89.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     423      15        0.0%
DATA                 0      0     423       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 19 10:24:50 2020

            _PIN_LED_LNB_GOOD_DEF 00045F                 ??_getGPSfrequency 000011  
           __end_of_adf4351_setup 00004A                    _out_freq_table 000309  
                               l4 000060                                 l7 00003E  
               i2c_probe_addr@dev 000057         adf4351_calc_counters@rest 00004C  
               i2c_probe_addr@msg 00005A                       _SSPSTATbits 000FC7  
                              l10 000048                                l13 000052  
                              l16 00005A                                l71 00031A  
                              l65 00009E                                l90 000046  
                              l77 0001C8                                l87 00033A  
                              l98 0000E6                                _LO 000007  
                    ___awdiv@sign 000012                i2c_probe_addr@addr 000059  
             ___wmul@multiplicand 000016                       __CFG_BORV$3 000000  
                  _PIN_LED_CPU_OK 000339                      __CFG_CP0$OFF 000000  
                    __CFG_CP1$OFF 000000                      __CFG_CP2$OFF 000000  
                    __CFG_CP3$OFF 000000             print_string@underline 00003B  
        __end_of_adf4351_set_freq 00031C          __end_of_adf4351_set_mode 0000BA  
                             l102 0000B8                               l111 000056  
                             l121 0000C6                               l114 0000A4  
                             l125 00010A                               l133 0001C4  
                             l141 00007E                               l117 000048  
                             l205 000036                               l208 00003E  
                             l129 000378                               l137 0002B6  
                             l209 0000BE                               l217 000076  
                             l313 000066                               l323 00005A  
                             l316 00000A                               l180 0000BA  
                             l149 0001CC                               l317 000008  
                             l341 000020                               l181 0000C0  
                             l333 000000                               l190 000050  
                             l238 0002A4                               l174 000054  
                             l319 00001C                               l239 000290  
                             l263 0000A8                               l335 000034  
                             l184 000034                               l344 000008  
                             l272 000136                               l185 000004  
                             l521 00014E                               l433 0001AA  
                             l194 00001C                               l178 0000AA  
                             l282 00010E                               l187 000074  
                             l267 0000FC                               l196 000058  
                             l532 00001E                               l428 00046C  
                             l508 0000C4                               l356 000042  
                             l197 0000E2                               l621 000014  
                             l613 000014                               l518 00014C  
                             l622 00003A                               l614 00003A  
                             l463 00013E                               l632 000060  
                             l608 0000C2                               l712 000482  
                             l448 00012A                               l481 000040  
                             l529 0000DA                               l650 000098  
                             l618 00002E                               l627 00003C  
                             l635 000020                               l644 00015C  
                             l716 00050C                               l741 000082  
                             l733 00095A                               l725 0007E0  
                             l830 00017C                               l478 00013E  
                             l486 0000D4                               l831 000184  
                             l719 00059A                               l495 0000A6  
                             l832 000190                               l488 0000E8  
                             l825 00005E                               l683 000048  
                             l499 000046                               l860 000052  
        __end_of_adf4351_set_tune 000058                               l951 00018C  
                             l871 000206                               l864 000046  
                             l792 00024E                               l784 00035A  
                             l688 000136                               l945 0005CC  
                             l849 00036E                               l689 000A46  
                             l794 000248                               l888 0005B8  
                    __CFG_CPB$OFF 000000                      __CFG_CPD$OFF 000000  
                     __CFG_WDTPS$ 000018                       lcd_init@i2c 00003E  
                             _abs 000000                               _pad 000000  
    __size_of_i2c_transfer_native 000000                     _font8x8_basic 000001  
                     lcd_init@res 000041                      ___awmod@sign 000012  
                             prod 000FF3                               tosl 000FFD  
                             wreg 000FE8                      lcd_draw8x8@x 000015  
                    lcd_draw8x8@y 000016                  _PIN_LED_ADF_LOCK 000349  
         __end_of_irq_set_handler 000044                    read_switch@rb1 000010  
                  read_switch@rb2 000011                    read_switch@rb3 000012  
                  read_switch@rb4 000013                      __CFG_LVP$OFF 000000  
                 _gps_config_data 00001B                   _PIN_LED_SI_LOCK 00033D  
                    __CFG_WDT$OFF 000000                              l1102 0000C2  
                            ?_abs 00001F                              l2110 00003A  
                            l1070 0000D6                              l1303 000080  
                            l2104 0001EE                              l1080 000136  
                            l1305 000088                              l1314 000146  
                            l2130 000036                              l1410 000068  
                            l2202 000030                              l2107 0001F6  
                            l1315 00018E                              l1083 000028  
                            l1067 000008                              l2116 000036  
                            l2124 000050                              l2212 00005C  
                            l1324 000036                              l1084 000042  
                            l1333 0000D4                              l1270 0000C0  
                            l1326 00003E                              l1319 000196  
                            l2207 000054                              l2151 00004E  
                            l1415 00007C                              l1512 000186  
                            l1432 0000A2                              l1416 00009C  
                            l1088 000226                              l2073 000036  
                            l1265 000044                              l1425 000092  
                            l1409 000058                              l2145 000098  
                            l2155 000174                              l1347 000270  
                            l1363 0000F2                              l2076 00003E  
                            l1268 000086                              l1276 00009E  
                            l2252 0001D0                              l1525 000162  
                            l1349 0002D2                              l2181 00004A  
                            l2253 000218                              l1278 0000A6  
                            l1296 0002DC                              l2192 0000DC  
                            l2176 000026                              l2169 000042  
                            l2281 00044E                              l1378 000718  
                            l1394 000058                              l1642 0000AE  
                            l1395 000060                              l2179 000000  
                            l2259 000220                              l2188 00004C  
                            l2277 00039E                              l1477 00010A  
                            l1629 0000C2                              l1398 000024  
                            l2286 000036                              l1843 0000EE  
                            l1836 0000CE                 ??_si5328_checkGPS 000063  
                            ?_pad 000019                              l6311 00002E  
                            l1896 000072                              l6313 000038  
                            l6305 000000                              l1889 00006A  
                            l6401 000148            ??_check_ADF5341_status 000061  
                            l6307 000010                              l6411 000194  
                            l6403 00014C                              l6341 000048  
                            l6309 00001E                              l7301 000076  
                            l6413 0001A6                              l6405 00015E  
                            l6351 00013E                              l6343 000076  
                            l6335 000000                              l7231 000000  
                            l7303 00008C                              l7311 0000A2  
                            l6407 000162                              l6361 0001C4  
                            l6353 000142                              l6345 0000A8  
                            l6337 000010                              l6601 0001E6  
                            l9001 000050                              l7241 000034  
                            l7233 000004                              l7313 0000B2  
                            l7305 000094                              l7321 000004  
                            l6409 000190                              l6347 0000D8  
                            l6355 00014C                              l6339 000040  
                            l6611 00001A                              l6603 000222  
                            l7075 000000                              l9003 000064  
                            l7251 000076                              l7243 000044  
                            l7235 000012                              l7315 0000BA  
                            l7307 000096                              l7331 000034  
                            l7323 000012                              l6371 00003E  
                            l6363 000000                              l6357 000162  
                            l6349 00010A                              l6621 00012A  
                            l6613 00002A                              l6605 000262  
                            l9101 00009E                              l9013 000000  
                            l9005 000068                              l9021 000000  
                            l7421 000000                              l7261 0000C8  
                            l7253 000082                              l7245 000048  
                            l7237 000022                              l6701 00003E  
                            l7309 00009C                              l7341 00007A  
                            l7333 000046                              l7325 00001A  
                            l6381 000098                              l6373 000050  
                            l6365 000004                              l6359 000190  
                            l6631 00026C                              l6623 00016A  
                            l6615 00006A                              l6607 0002A2  
                            l9103 0000AC                              l9111 000112  
                            l9015 00001A                              l9007 000094  
                            l9031 000048                              l7271 0000FA  
                            l7263 0000CA                              l7255 000090  
                            l7247 000058                              l7239 000026  
                            l6703 000042                              l7351 0000A6  
                            l7343 000082                              l7335 00004E  
                            l7327 00001E                              l7319 000000  
                            l6391 0000E8                              l6383 00009C  
                            l6375 000054                              l6367 00000C  
                            l6633 0002A4                              l6625 0001A6  
                            l6617 0000AA                              l6609 000000  
                            l6641 000000                              l9121 000004  
                            l9041 000004                              l9113 000122  
                            l9105 0000DA                              l9009 0000A8  
                            l9201 0000CE                              l9017 000000  
                            l9025 000000                              l8401 0001E0  
                            l7265 0000D4                              l7257 00009A  
                            l7249 00006E                              l7281 00001A  
                            l7345 000088                              l7337 000056  
                            l7329 00002C                              l6393 0000FA  
                            l6385 0000B2                              l6377 000082  
                            l6369 00003A                              l6635 0002E4  
                            l6627 0001E6                              l6619 0000EA  
                            l6651 00001A                              l6643 00001A  
                            l9035 000000                              l9123 000018  
                            l9051 000064                              l9043 000012  
                            l9115 000142                              l9107 0000FA  
                            l9211 00016E                              l9203 0000D4  
                            l9131 000000                              l8411 0002B2  
                            l8403 000206                              l7259 0000B8  
                            l7267 0000DA                              l7291 000040  
                            l7283 00001E                              l7275 000000  
                            l7339 000064                              l7347 00008E  
                            l6395 0000FE                              l6387 0000B6  
                            l6379 000086                              l7365 000000  
                            l6637 000324                              l6629 000226  
                            l6661 000130                              l6653 00002A  
                            l6645 00002A                              l9125 000046  
                            l9141 000000                              l9061 0000AE  
                            l9053 000068                              l9045 000032  
                            l9109 00010C                              l9221 000216  
                            l9213 000174                              l9205 0000DC  
                            l9029 000036                              l9301 000084  
                            l9133 000012                              l8421 000384  
                            l8413 0002E0                              l8405 000234  
                            l7269 0000EA                              l7293 000052  
                            l7285 00002C                              l7277 000004  
                            l7349 00009E                              l6397 000116  
                            l6389 0000E4                              l6671 00002A  
                            l6639 000364                              l6663 000170  
                            l6655 000070                              l6591 0000AA  
                            l6583 000000                              l6647 00006A  
                            l9127 00004A                              l9119 000000  
                            l9151 000096                              l9143 000014  
                            l9071 00011E                              l9063 0000BC  
                            l9055 000074                              l9047 000036  
                            l9039 000000                              l9231 000278  
                            l9223 000230                              l9215 00017A  
                            l9207 0000E6                              l9311 0000C8  
                            l9303 00008E                              l8431 000428  
                            l8423 0003AA                              l8415 000308  
                            l8407 00025C                              l7295 00005A  
                            l7287 000034                              l7279 000012  
                            l6399 00011A                              l6681 00001A  
                            l6673 000070                              l6665 0001B0  
                            l6657 0000B0                              l6649 000000  
                            l6593 0000EA                              l6585 00001A  
                            l9161 0000BE                              l9153 00009A  
                            l9145 000018                              l9073 000130  
                            l9065 0000CE                              l9057 000092  
                            l9049 000044                              l9233 00027E  
                            l9241 0002B4                              l9225 00024A  
                            l9209 0000EC                              l9217 0001DE  
                            l9321 000154                              l9305 000094  
                            l9401 000056                              l9137 00001E  
                            l8441 0004FE                              l8433 000456  
                            l8425 0003AE                              l8417 000336  
                            l8409 00028A                              l6921 000014  
                            l7481 000000                              l7297 000062  
                            l7289 000038                              l6683 00002A  
                            l6675 0000B6                              l6667 000000  
                            l6659 0000F0                              l6595 000126  
                            l6587 00002A                              l9163 0000C6  
                            l9147 00001C                              l9067 0000FC  
                            l9059 00009A                              l9075 000136  
                            l9091 000036                              l9083 000000  
                            l9235 000290                              l9219 0001F8  
                            l9227 000258                              l9251 00002C  
                            l9331 000196                              l9323 000166  
                            l9315 000108                              l9307 00009C  
                            l9411 000074                              l9403 000068  
                            l8443 000524                              l8435 00047C  
                            l8427 0003D4                              l8419 00035E  
                            l6923 000020                              l7491 000050  
                            l7483 000004                              l6691 00000C  
                            l7299 000070                              l6685 000070  
                            l6677 0000F6                              l6669 00001A  
                            l6597 000166                              l6589 00006A  
                            l9173 0001AE                              l9165 00010E  
                            l9157 0000A0                              l9149 00004C  
                            l9077 000146                              l9069 00011C  
                            l9093 000044                              l9085 000004  
                            l9237 00029C                              l9229 00026A  
                            l9253 000034                              l9245 000000  
                            l9341 000262                              l9317 00011A  
                            l9325 00017A                              l9309 0000B8  
                            l9333 0001F4                              l8445 000552  
                            l8437 0004AA                              l8429 000402  
                            l8381 00002C                              l6925 000024  
                            l6941 000026                              l7493 000052  
                            l7485 00001C                              l6693 00001A  
                            l7477 000002                              l6687 0000B2  
                            l6679 000000                              l6599 0001A6  
                            l7911 000030                              l9175 0001C0  
                            l9159 0000B6                              l9079 000166  
                            l9095 000064                              l9087 000012  
                            l9239 0002A4                              l9191 000076  
                            l9183 000000                              l9271 0000EC  
                            l9263 0000AA                              l9255 000048  
                            l9247 000012                              l9343 00027E  
                            l9335 000210                              l9327 00018A  
                            l9503 000676                              l9431 000126  
                            l9423 00008C                              l9415 00007A  
                            l9407 00006E                              l8447 000578  
                            l8439 0004D0                              l8391 00010C  
                            l8383 00005C                              l8375 000000  
                            l6927 000030                              l6919 000000  
                            l6943 000042                              l6935 000000  
                            l7487 000026                              l6951 00001A  
                            l6695 00001E                              l7479 000012  
                            l7913 000060                              l7905 000000  
                            l7921 000000                              l9177 0001D2  
                            l9169 00015C                              l9097 000082  
                            l9089 000032                              l9193 000078  
                            l9185 000020                              l9281 000158  
                            l9273 000120                              l9265 0000BE  
                            l9257 000050                              l9249 00001A  
                            l9361 000044                              l9353 000000  
                            l9345 000284                              l9337 00022E  
                            l9329 000190                              l9521 000706  
                            l9505 00069A                              l9513 0006C8  
                            l9441 0001A6                              l9433 00015C  
                            l9425 0000E0                              l8801 00001E  
                            l8449 0005A6                              l8393 000134  
                            l8385 000084                              l8377 000004  
                            l6929 000034                              l6937 00001A  
                            l9601 0000A8                              l7489 00003C  
                            l6961 00002A                              l6953 00003A  
                            l6697 00002C                              l6689 000000  
                            l7681 000000                              l7915 000070  
                            l7931 000046                              l7923 000012  
                            l9099 00008A                              l8723 000002  
                            l9195 000092                              l9187 000048  
                            l9283 00016C                              l9275 000124  
                            l9267 0000C2                              l9259 00005E  
                            l9363 000060                              l9355 00002A  
                            l9347 000294                              l9339 000248  
                            l9291 000010                              l9515 0006D6  
                            l9507 0006A8                              l9451 000248  
                            l9435 00016A                              l9427 000100  
                            l9419 000080                              l8811 000076  
                            l8803 00003A                              l8731 000010  
                            l7851 0000D8                              l8395 000164  
                            l8387 0000B4                              l8379 000006  
                            l9611 0000D0                              l9603 0000AC  
                            l6971 000094                              l6963 000032  
                            l6955 00004C                              l6947 000000  
                            l6699 000030                              l7691 000068  
                            l7683 000014                              l7917 0000A0  
                            l7909 00001E                              l7925 00001E  
                            l8725 000018                              l8901 00001E  
                            l9197 0000AE                              l9189 000068  
                            l9285 000170                              l9277 000128  
                            l9269 0000E0                              l9365 00007C  
                            l9349 0002AA                              l9293 00002A  
                            l9509 0006BC                              l9461 000334  
                            l9453 000290                              l9445 0001EE  
                            l9437 000178                              l9429 000102  
                            l8821 0000C0                              l8813 00007C  
                            l8805 00004C                              l8741 000052  
                            l8733 000026                              l7845 000056  
                            l7837 000000                              l8397 00018C  
                            l8389 0000DC                              l9381 000022  
                            l9373 000000                              l9541 000016  
                            l9701 00042E                              l9621 000110  
                            l9613 0000E2                              l6973 0000B4  
                            l6965 000046                              l6957 000000  
                            l6981 000008                              l6949 00000C  
                            l7693 000074                              l7685 000022  
                            l6893 000000                              l9711 00001E  
                            l7919 0000AC                              l7927 000026  
                            l8903 000022                              l9199 0000C0  
                            l9367 00008E                              l9359 000036  
                            l8911 000000                              l9295 000054  
                            l9287 000000                              l9471 000448  
                            l9463 0003B6                              l9439 000198  
                            l9447 000200                              l9391 000024  
                            l9519 0006E2                              l9543 000000  
                            l8823 0000CE                              l8815 000098  
                            l8807 00005A                              l8743 000070  
                            l8735 00002E                              l8751 000000  
                            l8831 000000                              l7855 0000E2  
                            l7847 000086                              l7839 00004E  
                            l8399 0001B2                              l9383 000026  
                            l9375 000008                              l9551 000000  
                            l9703 00043E                              l9631 00016A  
                            l9623 000122                              l9615 0000E6  
                            l9607 0000B2                              l6975 0000B6  
                            l6967 000054                              l6959 00000C  
                            l6991 00003E                              l6983 00001A  
                            l7871 000000                              l7687 000034  
                            l6895 00003C                              l9713 00002A  
                            l7929 000036                              l8905 000000  
                            l9369 0000B8                              l9297 00005C  
                            l9289 00000E                              l9481 0004C6  
                            l9457 0002C8                              l9449 000224  
                            l9393 000032                              l9545 000008  
                            l8841 000020                              l8809 00006C  
                            l8745 000080                              l8737 00003A  
                            l8729 000000                              l8761 000012  
                            l8753 000002                              l8833 000004  
                            l8921 00001C                              l7865 000166  
                            l7857 000110                              l7849 00009A  
                            l9385 000036                              l9377 000014  
                            l9537 000000                              l9561 000024  
                            l9553 000008                              l9641 0001AE  
                            l9633 00017C                              l9625 000132  
                            l9617 0000FA                              l9609 0000C4  
                            l6977 0000C8                              l6969 000066  
                            l6993 000054                              l6985 000022  
                            l7873 000110                              l7689 000056  
                            l9801 000000                              l9731 00014C  
                            l9723 0000D2                              l9707 000000  
                            l8907 00001C                              l9299 00007C  
                            l9491 000584                              l9483 0004D4  
                            l9475 000468                              l9467 0003EE  
                            l9459 0002FE                              l9395 000044  
                            l9547 000016                              l8771 000028  
                            l8851 00005C                              l8843 000032  
                            l8827 0000DA                              l8819 0000AE  
                            l8747 000082                              l8739 000048  
                            l8763 00007C                              l8755 00000A  
                            l8835 00002A                              l8931 0000AE  
                            l8923 00003C                              l8915 000000  
                            l7867 00016A                              l7859 000124  
                            l9379 00001C                              l9571 000000  
                            l9555 000014                              l9651 000204  
                            l9635 000184                              l9627 000144  
                            l9643 0001B6                              l6995 00005C  
                            l6987 00002A                              l6979 000000  
                            l9811 000042                              l9803 000012  
                            l9733 000158                              l9725 0000FE  
                            l9717 000060                              l9493 0005BA  
                            l9485 000512                              l9477 00048C  
                            l9469 000412                              l9397 000048  
                            l9389 000000                              l9549 00003C  
                            l9565 000000                              l8861 0000B6  
                            l8853 000082                              l8845 00004C  
                            l8837 000000                              l8749 00008C  
                            l8765 000096                              l8757 00000C  
                            l8941 00010C                              l8933 0000DC  
                            l8925 000050                              l8917 000008  
                            l7869 000186                              l9581 000028  
                            l9557 00001C                              l9661 000292  
                            l9653 000230                              l9645 0001C8  
                            l9637 000198                              l9629 000158  
                            l6997 00005E                              l6989 000038  
                            l9741 000012                              l9821 00008A  
                            l9813 00004C                              l9805 00001E  
                            l9901 0000EC                              l9735 00015E  
                            l9719 0000B8                              l8791 00001A  
                            l9495 0005E0                              l9479 0004B0  
                            l9399 000054                              l9567 00000A  
                            l8783 00006C                              l8775 000042  
                            l8767 000000                              l8855 000084  
                            l8847 00004E                              l8839 000004  
                            l8759 00000E                              l8871 000024  
                            l8943 000124                              l8927 000072  
                            l8919 000010                              l9575 000016  
                            l9559 000020                              l9647 0001E0  
                            l9639 00019C                              l9591 000046  
                            l9583 000000                              l6999 000064  
                            l9751 00004C                              l9743 00001E  
                            l9831 0000BE                              l9823 000094  
                            l9815 00005A                              l9807 000026  
                            l9903 0000FC                              l9911 00010C  
                            l9737 000162                              l9729 000118  
                            l9497 0005F0                              l9489 00054E  
                            l8777 00005E                              l8769 000008  
                            l8857 0000A0                              l8849 00005A  
                            l8873 000036                              l8865 000002  
                            l8961 0001CC                              l8945 00013E  
                            l8953 000174                              l8937 0000F2  
                            l8929 000094                              l9577 000004  
                            l9681 000380                              l9673 000304  
                            l9665 0002C6                              l9657 00026C  
                            l9649 0001F0                              l9593 000056  
                            l9585 000010                              l9761 000094  
                            l9753 00005A                              l9745 000026  
                            l9841 0000FC                              l9833 0000CA  
                            l9825 00009C                              l9817 00006E  
                            l9809 000036                              l9921 000130  
                            l8787 000000                              l8891 000010  
                            l9499 00063A                              l8779 000060  
                            l8795 000002                              l8883 00006E  
                            l8875 000042                              l8867 000004  
                            l8971 000222                              l8947 00015A  
                            l8955 000192                              l8939 0000FA  
                            l9579 000010                              l9691 0003E4  
                            l9683 0003AE                              l9675 000314  
                            l9667 0002D8                              l9659 00027E  
                            l9595 000066                              l9587 000018  
                            l9771 0000CA                              l9763 00009C  
                            l9755 00006E                              l9747 000036  
                            l9739 000000                              l9835 0000D4  
                            l9819 00007E                              l9827 0000AA  
                            l9923 00013A                              l9931 000088  
                            l8789 000014                              l8893 000040  
                            l8797 000004                              l8877 000054  
                            l8869 000008                              l8973 00022A  
                            l8957 0001AA                              l8965 0001E2  
                            l8949 00015E                              l8981 000258  
                            l9693 0003F4                              l9677 000352  
                            l9685 0003BC                              l9669 0002DC  
                            l9597 00006A                              l9589 00002A  
                            l9757 00007E                              l9765 0000AA  
                            l9749 000042                              l9861 00013A  
                            l9837 0000DE                              l9917 00011C  
                            l9941 00000E                              l9933 000092  
                            l9925 000000                              l8887 000000  
                            l8991 000000                              l8799 000016  
                            l8879 000062                              l8983 00026E  
                            l8959 0001C8                              l8967 0001FC  
                            l8975 00022E                              l9951 000000  
                            l9687 0003CC                              l9679 000370  
                            l9599 00007C                              l9695 000404  
                            l9759 00008A                              l9839 0000EC  
                            l9855 00011C                              l9919 000126  
                            l9871 000036                              l9863 000000  
                            l9943 000038                              l9935 0000AC  
                            l9927 00000E                              STR_1 0005AE  
                            STR_2 0007B8                              l8897 000000  
                            l8889 00000C                              l8993 00000E  
                            l8985 000284                              l8977 00024C  
                            l8969 000216                              l9961 000026  
                            l9953 000008                              l9945 000000  
                            l9697 000416                              l9689 0003D4  
                            l9777 0000D8                              l9769 0000BE  
                            l9793 000108                              l9857 000126  
                            l9849 00010C                              l9881 00007E  
                            l9873 000042                              l9865 000012  
                            l9937 0000C6                              l9929 000082  
                            STR_3 000805                              STR_4 000603  
                            l8899 00000C                              l8995 000022  
                            l8987 00029C                              l9963 00002E  
                            l9955 000014                              l9699 000426  
                            l9947 000000                              l9971 00001C  
                            l9795 000112                              l9779 0000E8  
                            l9787 0000F8                              l9859 000130  
                            l9883 00008A                              l9875 00004C  
                            l9867 00001E                              l9939 000000  
                            STR_5 00057C                              STR_6 000595  
                            l8997 000030                              l9965 000036  
                            l9957 00001C                              l9981 0001E0  
                            l9973 000080                              l9797 00011C  
                            l9893 0000BE                              l9885 000094  
                            l9877 00005A                              l9869 000026  
                            STR_7 0004A5                              STR_8 000843  
                            l8999 00003C                              l9959 000022  
                            l9991 000376                              l9983 000238  
                            l9975 0000D8                              l9799 000126  
                            l9895 0000CA                              l9887 00009C  
                            l9879 00006E                              STR_9 00063B  
                            l9993 00039C                              l9985 00028E  
                            l9977 000130                              l9969 000000  
                            l9897 0000D4                              l9889 0000AA  
                            l9995 0003C0                              l9987 0002AE  
                            l9979 000188                              l9899 0000DE  
                            l9997 0003E0                              l9989 000312  
                            l9999 00045C                              _PIE1 000F9D  
                            _PIE2 000FA0                              u7030 00001A  
                            u7031 000016                              u7105 000202  
                            u7130 00001A                              u7131 000016  
                            u7115 000242                              u8100 00006E  
                            u7205 000206                              u7125 000282  
                            u7045 00004A                              u8101 00006A  
                            u8110 000090                              u7215 00024C  
                            u7055 00008A                              u8111 00008C  
                            u8120 0000B8                              u9000 000040  
                            u8200 000012                              u7225 0002C4  
                            u7145 00004A                              u7305 0000D0  
                            u7065 0000CA                              u8121 0000B4  
                            u9001 00003A                              u8201 00000E  
                            u7250 00001A                              u8130 0000EA  
                            u9010 000042                              u8210 00002C  
                            u7235 000304                              u7155 00008A  
                            u7315 000110                              u7075 000146  
                            u7251 000016                              u8131 0000E6  
                            u8211 000028                              u7340 00001A  
                            u6620 00001E                              u9020 000084  
                            u8140 000012                              u8220 000046  
                            u7405 000092                              u7341 000016  
                            u7245 000344                              u7165 0000CA  
                            u7325 000150                              u7085 000186  
                            u6621 00001A                              u9021 00007E  
                            u8141 00000E                              u8221 000042  
                            u7270 00001A                              u6630 000058  
                            u9030 000086                              u8150 00002C  
                            u8230 000064                              u7175 00010A  
                            u7335 000190                              u7271 000016  
                            u7095 0001C6                              u6631 000054  
                            u8151 000028                              u8231 000060  
                            u6640 000076                              u9120 00001A  
                            u8080 000012                              u9040 0000C8  
                            u8160 000052                              u8240 00007A  
                            u6641 000072                              u7185 00014A  
                            u7265 00004A                              u9121 000016  
                            u8081 00000E                              u9041 0000C2  
                            u8161 00004E                              u8241 000076  
                            u6650 000162                              u9130 000030  
                            u8090 000034                              u9050 0000CA  
                            u8170 000070                              u8250 00009E  
                            u6651 00015E                              u7355 000050  
                            u7195 0001C6                              u9131 00002C  
                            u8091 000030                              u8171 00006C  
                            u8251 00009A                              u7380 00001A  
                            u9140 000012                              u8340 000040  
                            u7700 00007C                              u9060 00010C  
                            u8180 00008C                              u7381 000016  
                            u7365 000096                              u7285 000050  
                            u9141 00000E                              u8341 00003A  
                            u7701 000078                              u9061 000106  
                            u8181 000088                              u8350 000042  
                            u9070 00010E                              u8190 0000B2  
                            u7375 0000D6                              u7295 000090  
                            u7711 000006                              u8191 0000AE  
                            u7720 00002A                              u7721 000026  
                    _si5328locked 000008                              u7650 00004E  
                            u7730 000054                              u8450 000012  
                            u7395 000050                              u7651 00004A  
                            u7731 000050                              u8451 00000E  
                            u7660 00001A                              u8460 00001C  
                            u7740 000094                              u7661 000016  
                            u8461 000018                              u7741 000090  
                            u7670 000042                              u7750 00001A  
                            u7671 00003E                              u7751 000016  
                            u7760 000038                              u7761 000034  
                            u7681 000006                              u7770 000054  
                            u7690 00001A                              u7771 000050  
                            u7691 000016                              u8860 000034  
                            u8861 000030                              u8870 000056  
                            u8871 000052                              u8880 000068  
                            u8881 000064                              u8970 0000D8  
                            u8971 0000D4                              u8980 000162  
                            u8981 00015E                              u8990 000186  
                            u8991 000182           adf4351_write_latch@mask 000015  
                 __end_of_PIN_SJ3 000335                   __end_of_PIN_SJ4 000333  
                 __end_of_PIN_SJ5 000331                   __end_of_PIN_SJ6 00032F  
                 _cpu_blink_timer 000000*                             abs@a 00001F  
           __end_of_PIN_LNB_FAULT 000345                              _dbuf 000017  
                            _atoi 000000                              _main 000000  
                            _dtoa 000000                              _itoa 000000  
                    lcd_init@addr 000040                              _prec 000000  
                            _nout 00000E                              pad@i 000020  
                            pad@p 00001D                              fsr0h 000FEA  
                            fsr1h 000FE2                              indf0 000FEF  
                            fsr2h 000FDA                              fsr0l 000FE9  
                            indf1 000FE7                              indf2 000FDF  
                            fsr1l 000FE1                              pad@w 000022  
                            fsr2l 000FD9                              _stoa 000000  
                            btemp 000000                              _xtoa 000000  
          __end_of_PIN_SI5328_LOL 000341                              prodh 000FF4  
                            prodl 000FF3                              start 000000* 
                   __CFG_IESO$OFF 000000                  _PIN_LED_LNB_GOOD 000341  
          __end_of_out_freq_table 00031D                     __CFG_MCLRE$ON 000000  
             lcd_clear_screen@buf 000000                      ___param_bank 000000  
             lcd_clear_screen@row 000081                     ?_i2c_wait_int 00000D  
                   show_display@p 000042            __end_of_PIN_LED_CPU_OK 00033B  
         __size_of_ssd1306_setpos 000000                             ??_abs 000021  
                lnb_configure@i2c 00002F                             ??_pad 00001F  
     __end_of_PIN_LED_SI_LOCK_DEF 000482                  lnb_configure@res 000034  
                   ?_i2c_transfer 000051    __size_of_calc_mixer_corr_value 000000  
                           l10011 000110                             l10003 000000  
                           l10101 000076                             l10021 000312  
                           l10013 000146                             l10005 000050  
                           l10111 000126                             l10103 0000B0  
                           l10015 000202                             l10007 00009A  
                           l10031 000018                             l10025 000002  
                           l10113 000144                             l10105 0000F2  
                           l10017 00028A                             l10009 0000C6  
                           l10201 000064                             l11001 0006C6  
                           l10041 00005C                             l10033 00002C  
                           l10051 00001C                             l10123 00019E  
                           l10115 000162                             l10019 0002D6  
                           l10211 0000EE                             l10203 000076  
                           l11011 00073E                             l11003 0006DA  
                           l10043 000060                             l10035 000030  
                           l10027 000000                             l10061 000042  
                           l10053 000020                             l10141 000260  
                           l10133 000234                             l10125 0001EC  
                           l10117 00016A                             l10109 000108  
                           l10301 00001A                             l10221 000178  
                           l10213 00010C                             l10205 000094  
                           l11101 0000C4                             l11021 0007A2  
                           l11005 0006EE                             l11013 000746  
                           l10045 000082                             l10037 000044  
                           l10029 000014                             l10071 0000E6  
                           l10055 00003C                             l10151 00029A  
                           l10143 000268                             l10127 0001F0  
                           l10119 000186                             l10311 000062  
                           l10303 00002E                             l10231 00024A  
                           l10223 0001A4                             l10215 000128  
                           l10207 0000B2                             l11111 000138  
                           l11103 0000D8                             l11023 0007FA  
                           l11015 00075A                             l11007 00070A  
                           l10047 000096                             l10039 000048  
                           l10081 000136                             l10073 0000F6  
                           l10049 000004                             l10161 0002E6  
                           l10145 00026C                             l10137 000256  
                           l10129 0001FC                             l10401 0002FC  
                           l10321 0000C4                             l10313 000074  
                           l10305 00003A                             l10233 00025A  
                           l10225 0001B8                             l10217 000138  
                           l10209 0000DE                             l11121 0001CC  
                           l11113 000154                             l11105 0000DE  
                           l11041 0008C0                             l11033 000838  
                           l11017 000772                             l11025 0007FE  
                           l11009 000724                             l11201 00015C  
               ??_si5328_set_freq 000063                             l10083 000138  
                           l10075 0000FA                             l10067 000046  
                           l10251 000068                             l10243 000000  
                           l10171 00032E                             l10163 0002EC  
                           l10155 0002B2                             l10147 000274  
                           l10139 00025C                             l10091 000028  
                           l10331 000128                             l10323 0000D8  
                           l10315 000088                             l10307 00004E  
                           l10235 0002E4                             l10227 0001DC  
                           l10219 000164                             l11123 0001EA  
                           l11115 00016C                             l11107 00012A  
                           l11051 000942                             l11043 0008D4  
                           l11035 000866                             l11027 000810  
                           l11019 000784                             l11203 00016E  
                           l10181 000006                             l10085 000148  
                           l10077 000124                             l10069 0000D4  
                           l10261 0000D4                             l10253 00006C  
                           l10245 000020                             l10173 000334  
                           l10165 000308                             l10157 0002B8  
                           l10149 000288                             l10093 00004E  
                           l10333 00013C                             l10325 0000EC  
                           l10317 00009C                             l10309 000054  
                           l10237 0002F0                             l10229 00023A  
                           l11125 0001FE                             l11117 0001B2  
                           l11109 00012E                             l10501 0002C2  
                           l11061 000A0A                             l11053 0009C2  
                           l11045 0008EC                             l11029 000822  
                           l11037 000894                             l10421 00004A  
                           l11205 000172                             l10431 00001C  
                           l11071 000024                             l10183 000012  
                           l10079 000126                             l10263 0000D8  
                           l10255 00008C                             l10247 000032  
                           l10175 000350                             l10167 00030C  
                           l10159 0002CA                             l10095 00005C  
                           l10087 000000                             l11311 000328  
                           l10351 0001AE                             l10335 000150  
                           l10327 000100                             l10319 0000B0  
                           l10239 00030E                             l11127 00021A  
                           l11119 0001B8                             l10511 000366  
                           l10503 0002FE                             l11063 000A0E  
                           l11055 0009D6                             l11047 000914  
                           l11039 0008AE                             l10423 0000A6  
                           l11207 000186                             l11151 000036  
                           l11143 000000                             l11313 0000B2  
                           l10601 00017E                             l11073 00002A  
                           l10185 00001A                             l10441 000004  
                           l10281 000074                             l10273 000000  
                           l10257 00009E                             l10249 000056  
                           l10265 0000FC                             l10177 000354  
                           l10169 000312                             l10097 000064  
                           l10089 000006                             l10361 0001EA  
                           l10353 0001C0                             l10337 000164  
                           l10329 000114                             l10409 000312  
                           l10193 00001E                             l11081 00003A  
                           l10521 000472                             l10513 00039A  
                           l10505 000312                             l11065 000A2A  
                           l11057 0009E8                             l11049 000926  
                           l10425 0000AA                             l10417 000000  
                           l11209 0001BC                             l11161 00008C  
                           l11153 000052                             l11145 000016  
                           l11315 0000F8                             l10611 0001C2  
                           l10603 000182                             l11067 000000  
                           l10179 000000                             l10451 000058  
                           l10443 000020                             l10435 000002  
                           l10283 0000A8                             l10291 00010A  
                           l10275 000046                             l10267 00010E  
                           l10259 0000C2                             l10099 000074  
                           l10371 000248                             l10363 0001FC  
                           l10347 000198                             l10195 000030  
                           l11091 00007A                             l11083 000054  
                           l11075 000004                             l10531 000548  
                           l10523 0004AE                             l10515 0003D6  
                           l10507 000322                             l11059 000A06  
                           l10427 0000BE                             l10419 000046  
                           l11171 0000CE                             l11163 000098  
                           l11155 000064                             l11147 00001E  
                           l10621 00001C                             l10429 000000  
                           l10613 0001D4                             l10605 000196  
                           l11069 000014                             l10445 000024  
                           l10461 00006C                             l10285 0000C4  
                           l10277 000058                             l10269 000120  
                           l10381 00028E                             l10365 00020E  
                           l10357 0001DA                             l10349 00019E  
                           l10197 000040                             l10189 000000  
                           l11085 00005C                             l11077 00000E  
                           l10533 00054E                             l10525 0004E2  
                           l10517 00040A                             l10509 000332  
                           l10701 000062                             l11181 0000EE  
                           l11173 0000D0                             l11165 0000B4  
                           l11157 000068                             l11149 000022  
                           l10623 00002C                             l10631 000000  
                           l10615 0001DA                             l10543 000004  
                           l10463 00006E                             l10455 000000  
                           l10439 000016                             l10287 0000D8  
                           l10279 000068                             l10391 0002B2  
                           l10375 000256                             l10367 000212  
                           l10359 0001DC                             l10295 000000  
                           l10711 000024                             l10199 000050  
                           l11095 00008E                             l11087 00006C  
                           l11079 000020                             l10535 000554  
                           l10527 0004EA                             l10519 00043E  
                           l10471 000048                             l10703 000064  
                           l11191 00012E                             l11183 000104  
                           l11175 0000D2                             l11167 0000C8  
                           l11159 00007A                             l10625 00005C  
                           l10641 0000A6                             l10633 000046  
                           l10801 000148                             l10617 0001F8  
                           l10609 0001B6                             l10561 000072  
                           l10553 000046                             l10545 00000E  
                           l10449 00003A                             l10457 000022  
                           l10289 000106                             l10393 0002C2  
                           l10385 00029E                             l10377 00026A  
                           l10369 000228                             l10297 000004  
                           l10705 000000                             l11097 0000A0  
                           l11089 000072                             l10537 0005AC  
                           l10529 0004F0                             l10481 00006E  
                           l10473 000064                             l10465 000000  
                           l10721 000050                             l10713 000000  
                           l11193 000134                             l11185 000114  
                           l11177 0000D8                             l11169 0000CC  
                           l10627 00008A                             l10619 000000  
                           l10643 0000B2                             l10635 000058  
                           l10651 000038                             l10571 00009E  
                           l10563 000076                             l10555 000058  
                           l10547 000022                             l10459 00002A  
                           l10811 000038                             l10395 0002C4  
                           l10379 00027E                             l10299 000018  
                           l10707 00000C                             l11099 0000B0  
                           l10539 0005B0                             l10491 0001A0  
                           l10483 0000A2                             l10475 000076  
                           l10467 000004                             l10723 000070  
                           l10731 0000DC                             l10715 000018  
                           l11195 000142                             l11187 000126  
                           l11179 0000DC                             l10629 000096  
                           l10645 0000E2                             l10637 000068  
                           l10653 000044                             l10581 0000D6  
                           l10573 0000AE                             l10565 000086  
                           l10557 00005E                             l10549 00002E  
                           l10821 000058                             l10805 000000  
                           l10661 000038                             l10397 0002D6  
                           l10493 0001D0                             l10485 00016C  
                           l10469 000020                             l10901 0002AA  
                           l10741 000032                             l10725 00007E  
                           l10717 00002C                             l11197 000154  
                           l11189 00012A                             l10639 000074  
                           l10647 000000                             l10591 000134  
                           l10583 0000FA                             l10575 0000B2  
                           l10567 00008A                             l10559 000062  
                           l10831 00008E                             l10823 00005C  
                           l10815 000040                             l10807 000018  
                           l10663 000048                             l10655 000000  
                           l10399 0002EA                             l10495 000200  
                           l10487 000180                             l10479 000000  
                           l10911 000302                             l10903 0002BA  
                           l10743 000036                             l10751 00006A  
                           l10735 000000                             l10727 000090  
                           l10719 000038                             l11199 000158  
                           l10649 00001C                             l10593 000146  
                           l10585 0000FE                             l10577 0000C4  
                           l10569 00009A                             l10833 0000AA  
                           l10825 000070                             l10817 000048  
                           l10809 00002C                             l10665 000068  
                           l10657 000018                             l10497 000234  
                           l10489 000190                             l10921 000398  
                           l10913 000316                             l10905 0002D6  
                           l10841 000034                             l10761 0000BE  
                           l10753 00007C                             l10745 000042  
                           l10737 000012                             l10729 0000B4  
                           l10681 00001C                             l10673 000000  
                           l10771 00005C                             l10595 00014C  
                           l10587 000102                             l10579 0000CA  
                           l10827 000076                             l10819 00004C  
                           l10667 000088                             l10659 00002C  
                           l10499 00026A                             l10931 0003B8  
                           l10915 000352                             l10907 0002EE  
                           l10851 000092                             l10843 000044  
                           l10835 000000                             l10763 0000C0  
                           l10755 00008C                             l10747 000064  
                           l10739 000022                             l10691 000026  
                           l10683 00001E                             l10675 000016  
                           l10781 0000B4                             l10773 000060  
                           l10765 000000                             l10597 000150  
                           l10589 000120                             l10829 00007C  
                           l10669 00009C                             l10941 0003D0  
                           l10933 0003BE                             l10917 000364  
                           l10909 0002F2                             l10861 000184  
                           l10853 0000AC                             l10845 000058  
                           l10837 000014                             l10757 000090  
                           l10749 000066                             l10693 000028  
                           l10685 000020                             l10677 000018  
                           l10791 000112                             l10783 0000C0  
                           l10775 000070                             l10767 000006  
                           l10599 00016E                             l10951 00040C  
                           l10943 0003D2                             l10935 0003C0  
                           l10919 000380                             l10927 0003A0  
                           l10863 00018A                             l10855 0000C0  
                           l10847 00005E                             l10871 000194  
                           l10839 000024                             l10759 00009C  
                           l10695 000058                             l10687 000022  
                           l10679 00001A                             l10793 000124  
                           l10785 0000C6                             l10777 00007C  
                           l10769 00004A                             l10961 00046A  
                           l10953 00041E                             l10945 0003D8  
                           l10937 0003CA                             l10929 0003B2  
                           l10881 0001E6                             l10873 0001A4  
                           l10865 00018C                             l10857 0000D4  
                           l10849 000078                             l10697 00005C  
                           l10689 000024                             l10795 000132  
                           l10787 0000F6                             l10779 000082  
                           l10971 000582                             l10955 00042E  
                           l10963 0004D4                             l10939 0003CE  
                           l10947 0003DC                             l10891 00024E  
                           l10883 0001F6                             l10875 0001B4  
                           l10867 00018E                             l10859 00011C  
                           l10699 000060                             l10797 000136  
                           l10789 0000FA                             l10981 0005F4  
                           l10965 0004E4                             l10957 00043E  
                           l10949 0003FA                             l10893 00025E  
                           l10885 000212                             l10877 0001C4  
                           l10799 000144                             l10991 000628  
                           l10975 0005E8                             l10967 0004F4  
                           l10983 0005F8                             l10959 00044E  
                           l10895 00027A                             l10887 000236  
                           l10879 0001D4                             l10993 000656  
                           l10985 0005FC                             l10977 0005EC  
                           l10897 000292                             l10889 00023A  
                           l10995 000670                             l10987 000610  
                           l10979 0005EE                             l10899 000296  
                           l10997 00068C                             l10989 000614  
                           l10999 0006AC     __end_of_calc_mixer_corr_value 00046E  
                 __end_of___aldiv 00010C                   __end_of___aodiv 000188  
                           ?_atoi 00001A                             ?_main 000000  
                           ?_dtoa 000027                   __end_of___aomod 000164  
               _smbus8_write_data 000000                             ?_itoa 000019  
                 __end_of___awdiv 0000C4                             STR_10 0005DB  
                           STR_11 000629                             STR_20 000000  
                           STR_12 00075D                             STR_21 000000  
                           STR_13 0004EC                             STR_22 000000  
                           STR_30 0007E0                             STR_14 00079B  
                           STR_23 000000                             STR_15 00076D  
                           STR_31 0005EF                             STR_24 000000  
                           STR_16 000000                             STR_40 000617  
                           STR_32 000547                             STR_17 000000  
                           STR_25 000811                             STR_33 0007D3  
                           STR_41 000680                             STR_42 0008AB  
                           STR_50 0008A1                             STR_26 00083A  
                           STR_34 00081C                             STR_18 0004CC  
                           STR_19 000000                             STR_51 0008A6  
                           STR_27 00078C                             STR_43 000719  
                           STR_35 00052B                             STR_52 000000  
                           STR_28 0007F9                             STR_60 0006F7  
                           STR_44 00066F                             STR_36 0005C6  
                 __end_of___awmod 0000B0                             STR_61 000000  
                           STR_53 000000                             STR_29 000831  
                           STR_45 0006E6                             STR_37 00064D  
                           STR_70 000000                             STR_62 00084B  
                           STR_38 00074C                             STR_46 0006B3  
                           STR_54 000691                             STR_71 000000  
                           STR_55 000875                             STR_63 000859  
                           STR_39 00073B                             STR_47 0006A2  
                           STR_80 000009                             STR_64 000000  
                           STR_56 000887                             STR_72 000827  
                           STR_48 0006C4                             STR_49 000009  
                           STR_73 0008B3                             STR_57 000860  
                           STR_81 000852                             STR_65 000708  
                           STR_58 00000A                             STR_74 0008B7  
                           STR_82 00086E                             STR_90 00077D  
                           STR_66 0006D5                             STR_67 000000  
                           STR_83 000897                             STR_75 00088D  
                           STR_59 00065E                             STR_91 000562  
                           STR_92 00000F                             STR_84 000892  
                           STR_76 00087B                             STR_69 000000  
                           STR_77 0008AF                             STR_85 00072A  
                           STR_93 00050C                             STR_78 000000  
                           STR_86 0007ED                             STR_94 0007C6  
                           STR_95 0008BE                             STR_79 00089C  
                           STR_87 000881                             STR_88 000867  
                           STR_97 000000                             STR_89 0007AA  
                           STR_99 0008C1                             ?_stoa 000012  
               _smbus8_write_byte 000000       check_si5328_status@lastlock 00000E  
                 __end_of___lldiv 0000A4                             u10100 000070  
                           u10101 00006C                       i2c_read@ack 000013  
                           u11000 000048                             u10200 00006C  
                           u10120 000096                             u11001 000044  
                           u10201 000068                             u10121 000092  
                           u11010 000076                             u10130 000028  
                           u10210 0000AA                             u11011 000072  
                           u10131 000024                             u10211 0000A6  
                           u10115 000040                             u11100 00026A  
                           u11020 000092                             u10140 000042  
                           u10220 0000C0                             u10300 000036  
                           u11101 000266                             u11021 00008E  
                           u10141 00003E                             u10221 0000BC  
                           u10301 000032                             u10070 000018  
                           u11110 000278                             u11030 0000C0  
                           u10150 000050                             u10230 0000CE  
                           u10310 000054                             u10071 000014  
                           u11111 000274                             u11031 0000BC  
                           u10151 00004C                             u10231 0000CA  
                           u10311 000050                             u12000 000114  
                           u11120 000290                             u11040 0000CE  
                           u11200 000146                             u10160 00005E  
                           u10080 000026                             u10240 00002A  
                           u10320 000062                             u10400 00008E  
                           u12001 000110                             u11121 00028C  
                           u11041 0000CA                             u11201 000142  
                           u10161 00005A                             u10081 000022  
                           u10241 000026                             u10321 00005E  
                           u10401 000088                             u12010 000174  
                           u10170 000014                             u10330 000030  
                           u11050 0001F8                             u11210 000154  
                           u10250 000032                             u10090 000048  
                           u10410 000090                             u12011 000170  
                           u10171 000010                             u11051 0001F4  
                           u11211 000150                             u11131 00000A  
                           u10251 00002E                             u10091 000044  
                           u10340 000040                             u11060 000216  
                           u11220 00018E                             u11140 00002C  
                           u11300 00014E                             u10260 00004C  
                           u10180 000016                             u10500 0001FC  
                           u10420 0000AE                             u12020 000012  
                           u12100 00006E                             u10341 00003C  
                           u11061 000212                             u11221 00018A  
                           u11141 000028                             u11301 000148  
                           u10261 000048                             u10181 000012  
                           u10501 0001F8                             u10421 0000AA  
                           u12021 00000E                             u12101 00006A  
                           u10350 000042                             u11070 000230  
                           u11150 00005E                             u11310 000150  
                           u11230 00000E                             u10270 000072  
                           u10190 00004C                             u10510 000216  
                           u10430 0000EE                             u12030 000036  
                           u12110 00007E                             u10351 00003E  
                           u11071 00022C                             u11151 00005A  
                           u11231 00000A                             u10271 00006A  
                           u10191 000048                             u10511 000212  
                           u10431 0000EA                             u12031 000032  
                           u12111 00007A                             u11080 00024A  
                           u11160 00007C                             u11400 00002A  
                           u10600 000030                             u10360 000030  
                           u11320 000166                             u11240 00002A  
                           u10520 00024C                             u10440 00010C  
                           u13000 0002FC                             u12040 00006E  
                           u12120 0000BA                             u12200 00003A  
                           u10337 000026                             u11081 000246  
                           u11161 000078                             u11401 000026  
                           u10601 00002A                             u10361 00002A  
                           u11321 000162                             u11241 000026  
                           u10521 000248                             u10441 000108  
                           u13001 0002F8                             u12041 00006A  
                           u12121 0000B6                             u11090 000258  
                           u11170 0000A6                             u11410 000060  
                           u10610 000032                             u10370 000032  
                           u11330 0001CE                             u11250 000054  
                           u10290 0000B2                             u10530 00026E  
                           u10450 000138                             u13010 00030E  
                           u12050 00007E                             u12130 0000FC  
                           u12210 00006A                             u11091 000254  
                           u11171 0000A2                             u11411 00005C  
                           u11251 000050                             u10291 0000AE  
                           u10531 00026A                             u10451 000132  
                           u13011 00030A                   __end_of___lodiv 0000F0  
                           u12051 00007A                             u12131 0000F8  
                           u10700 000044                             u11180 0000E0  
                           u11420 00007C                             u10620 000034  
                           u11340 000210                             u11260 0000B8  
                           u11500 0001E6                             u10540 000284  
                           u10460 00013A                             u10380 00006C  
                           u13100 000098                             u12060 0000BA  
                           u12140 000012                             u12220 000082  
                           u13020 000042                   ___awdiv@divisor 00000F  
                           u10701 000040                             u11181 0000DC  
                           u11421 000078                             u10621 00002E  
                           u11341 00020C                             u11261 0000B4  
                           u11501 0001E0                             u10541 000280  
                           u10381 000066                             u13101 000094  
                           u12061 0000B6                             u12141 00000E  
                           u12221 00007E                             u13021 00003C  
                           u10550 00000E                             u11190 00010C  
                           u11430 00008E                             u10630 000036  
                           u11350 00022E                             u11270 000102  
                           u11510 0001E8                             u10470 000170  
                           u10390 00006E                             u13110 000076  
                           u12070 0000E8                             u12150 000036  
                           u12230 0000AC                             u12310 000014  
                           u13030 000044                             u10711 00006E  
                           u10551 00000A                             u11431 00008A  
                           u11351 00022A                             u11335 0001BC  
                           u11271 0000FC                             u10471 00016C  
                           u13111 000072                             u12071 0000E4  
                           u12151 000032                             u12231 0000A8  
                           u12207 000030                             u12311 000010  
                           ?_xtoa 000024                             u10720 000092  
                           u10800 0000DA                             u10560 000030  
                           u11440 0000B8                             u10640 000030  
                           u11360 000248                             u11280 000104  
                           u11600 000584                             u11520 000200  
                           u13200 000040                             u10288 000074  
                           u10480 00018E                             u12400 0000F6  
                           u13120 000180                             u12080 000012  
                           u12160 00006E                             u12240 0000C6  
                           u12320 00002C                             u13040 00008A  
                           u14000 000114                             u10721 00008E  
                           u10801 0000D6                             u10561 00002C  
                           u11441 0000B4                             u10641 00002A  
                           u11361 000244                             u11601 000580  
                           u11521 0001FC                             u13201 00003A  
                           u10481 00018A                             u12401 0000F2  
                           u12305 0000E4                             u13121 00017C  
                           u12081 00000E                             u12161 00006A  
                           u12241 0000C2                             u12217 000060  
                           u12321 000028                             u13041 000084  
                           u14001 000110                             u10730 0000BC  
                           u10810 000122                             u10570 000086  
                           u10650 000032                             u11370 000262  
                           u11290 00011A                             u11610 0005BA  
                           u11530 000224                             u11450 000024  
                           u13210 000042                             u10490 0001DE  
                           u13130 000312                             u12090 000036  
                           u12170 00007E                             u12250 000038  
                           u12330 000044                             u13050 00008C  
                           u14010 000126                             u10731 0000B8  
                           u10811 00011E                             u10571 000082  
                           u11371 00025E                             u11291 000116  
                           u11611 0005B6                             u11531 000220  
                           u11451 000020                             u10491 0001DA  
                           u13131 00030E                             u12091 000032  
                           u12171 00007A                             u12251 000034  
                           u12331 000040                             u14011 000122  
                           u10820 000018                             u10900 0000B2  
                           u10740 0000FC                             u10580 000094  
                           u10660 000048                             u11380 000270  
                           u11620 00069A                             u11540 000248  
                           u11460 0000F2                             u13220 000058  
                           u13140 000022                             u12420 000136  
                           u11700 0000C4                             u12500 000162  
                           u12260 00039C                             u12180 0000BA  
                           u12340 00005C                             u13060 0000A6  
                           u13300 000022                             u14020 00016E  
                           u10821 000014                             u10901 0000AE  
                           u10741 0000F8                             u10581 000090  
                           u11197 000102                             u10661 000044  
                           u11381 00026C                             u11621 000696  
                           u11541 000244                             u11461 0000EE  
                           u13221 000054                             u13141 00001E  
                           u12421 000132                             u11701 0000C0  
                           u12501 00015E                             u12261 000398  
                           u12181 0000B6                             u12341 000058  
                           u13061 0000A2                             u13301 00001E  
                           u14021 00016A                             u10670 000030  
                           u10830 000046                             u10910 0000E6  
                           u10750 000146                             u10590 00001A  
                           u11390 00027E                             u11550 0002FE  
                           u11470 000100                             u13230 000068  
                           u13150 000042                             u11630 000010  
                           u12430 000148                             u12414 00010C  
                           u12350 00001C                             u13070 000012  
                           u11710 0000E2                             u12510 00019A  
                           u12270 000050                             u12190 0000FC  
                           u13310 000032                             u14030 000186  
                           u10671 00002A                             u10831 000042  
                           u10751 000142                             u10591 000016  
                           u11391 00027A                             u11551 0002FA  
                           u11471 0000FC                             u13231 000064  
                           u13151 00003E                             u11631 00000C  
                           u12431 000144                             u12415 000108  
                           u12351 000018                             u13071 00000E  
                           u11711 0000DE                             u12511 000196  
                           u12271 00004C                             u12191 0000F8  
                           u13311 00002E                             u14031 000182  
                           u10680 000032                             u10920 000142  
                           u10760 000012                             u11560 000334  
                           u11480 000126                             u11640 000058  
                           u10840 000012                             u13400 000144  
                           u13160 000120                             u13080 000036  
                           u13240 00002C                             u11800 0001E0  
                           u11720 00010C                             u12520 000230  
                           u12440 000028                             u12600 0000B2  
                           u13320 00007C                             u10761 00000E  
                           u11561 000330                             u11481 000122  
                           u11641 000054                             u10841 00000E  
                           u13401 000140                             u13161 00011C  
                           u13081 000032                             u13241 000028  
                           u11801 0001DC                             u11721 000108  
                           u12521 00022C                             u12441 000024  
                           u12601 0000AE                             u13321 000078  
                           u10930 000184                             u10690 000012  
                           u10770 000044                             u11570 000412  
                           u11490 00016A                             u13170 00016E  
                           u11650 000010                             u12370 0000D0  
                           u13090 000068                             u13410 00002C  
                           u13250 000088                             u11810 0001F0  
                           u11730 000122                             u12530 000244  
                           u12450 00004A                             u12290 0000C6  
                           u12610 000164                             u13330 00008C  
                           u14107 0001C6                             u10691 00000E  
                           u10771 000040                             u11571 00040E  
                           u11491 000166                             u13171 00016A  
                           u11651 00000C                             u12371 0000CA  
                           u13411 000028                             u13251 000084  
                           u11811 0001EC                             u11731 00011E  
                           u12531 000240                             u12451 000046  
                           u12291 0000C2                             u12611 000160  
                           u13331 000088                             u10940 0001A8  
                           u10860 00003C                             u10780 000082  
                           u11580 00048C                             u13340 000046  
                           u13180 0001B2                             u12380 0000D2  
                           u12364 0000B2                             u13420 00008E  
                           u12700 000042                             u11900 000370  
                           u11820 000266                             u11740 000144  
                           u11660 00002A                             u12540 000288  
                           u12460 0000B0                             u13260 000020  
                           u12620 0001A4                             u13500 0001A4  
                           u14117 000098                             u10941 0001A2  
                           u10917 0000DC                             u10781 00007E  
                           u11581 000488                             u13341 000040  
                           u13181 0001AE                             u12365 0000AE  
                           u13421 00008A                             u11901 00036C  
                           u11821 000260                             u11741 000140  
                           u11661 000026                             u12541 000284  
                           u12461 0000AC                             u13261 00001C  
                           u12285 00006E                             u12621 0001A0  
                           u13501 0001A0                             u10950 0001AA  
                           u10870 00004C                             u10790 0000AC  
                           u11590 0004B0                             u13350 000048  
                           u13190 0001F8                             u12390 0000E6  
                           u12710 000058                             u11910 000380  
                           u11830 000268                             u11750 000158  
                           u11670 000042                             u12550 00029A  
                           u12470 000104                             u12630 00030E  
                           u13510 0001B4                             u13430 000014  
                           u13270 00002C                             u10927 000138  
                           u10871 000048                             u10791 0000A8  
                           u11591 0004AC                             u13191 0001F4  
                           u12391 0000E2                             u12711 000054  
                           u11911 00037C                             u11751 000154  
                           u11671 00003E                             u12551 000296  
                           u12471 000100                             u12631 00030A  
                           u13511 0001B0                             u13431 000010  
                           u14047 00005C                             u13271 000028  
                           u10960 0001C0                             u10880 000074  
                           u13360 00005C                             u12720 000068  
                           u12640 000032                             u11920 00039E  
                           u11840 00027E                             u11760 00016A  
                           u11680 00007C                             u12480 000126  
                           u12800 0000C4                             u12560 00001A  
                           u13600 000302                             u13520 0001C4  
                           u13440 000024                             u13280 000090  
                           u10961 0001BC                             u10937 00017A  
                           u13361 000058                             u13097 00005E  
                           u12721 000064                             u12641 00002E  
                           u11921 00039A                             u11841 00027A  
                           u11761 000166                             u11681 000078  
                           u12481 000122                             u12801 0000C0  
                           u12561 000016                             u14057 00015E  
                           u13601 0002FE                             u13521 0001C0  
                           u13441 000020                             u13281 00008C  
                           u10970 0001D2                             u10890 000096  
                           u10858 000044                             u13370 000070  
                           u12650 000068                             u11930 0003E4  
                           u11850 0002C0                             u11770 00017C  
                           u11690 0000A8                             u12490 000144  
                           u12810 0000D8                             u12730 000018  
                           u12570 000040                             u13610 000316  
                           u13530 0001D4                             u13450 000034  
                           u13290 000012                             u10971 0001CE  
                           u10891 000092                             u10867 000032  
                           u10859 000058                             u13371 00006C  
                           u12651 000064                             u11931 0003E0  
                           u11851 0002BA                             u11771 000178  
                           u11691 0000A4                             u12491 000140  
                           u12811 0000D4                             u12731 000014  
                           u12571 00003C                             u14067 0001BE  
                           u13611 000312                             u13531 0001D0  
                           u13451 000030                             u13291 00000E  
                           u10980 000030                             u13380 000124  
                           u12660 00009E                             u11940 0003F4  
                           u11860 0002C2                             u11780 0001AE  
                           u12900 0001C0                             u12820 0000EC  
                           u12740 00002E                             u12580 000050  
                           u13700 0004F4                             u13620 000364  
                           u13540 0001E6                             u13460 000044  
                           u10981 00002A                             u13381 000120  
                           u12661 00009A                             u14077 000054  
                           u11941 0003F0                             u11781 0001AA  
                           u12901 0001BC                             u12821 0000E8  
                           u12741 00002A                             u12581 00004C  
                           u13701 0004F0                             u13621 000360  
                           u13541 0001E2                             u13461 000040  
                           u10990 000032                             u13390 000132  
                           u12670 0000D4                             u11950 000416  
                           u11870 0002D8                             u11790 0001C8  
                           u12910 0001D6                             u12830 000100  
                           u12750 00004E                             u12590 000094  
                           u13710 000610                             u13630 0003B2  
                           u13550 0001F6                             u13470 000058  
                           u10887 00006A                             u13391 00012E  
                           u14087 00008C                             u12671 0000D0  
                           u11951 000412                             u11871 0002D4  
                           u11791 0001C4                             u12911 0001D2  
                           u12831 0000FC                             u12751 00004A  
                           u12591 000090                             u13711 00060C  
                           u13631 0003AE                             u13551 0001F2  
                           u13471 000054                             u12680 00010E  
                           u11960 000426                             u11880 000300  
                           u12920 0001FC                             u12840 000114  
                           u12760 000074                             u13800 000866  
                           u13720 000628                             u13640 00040C  
                           u13560 00024E                             u13480 0000C0  
                           u14097 000116                             u12681 00010A  
                           u11961 000422                             u11881 0002FC  
                           u12921 0001F8                             u12841 000110  
                           u12761 000070                             u13801 000862  
                           u13721 000624                             u13641 000408  
                           u13561 00024A                             u13481 0000BC  
                           u11970 00001A                             u12690 000040  
                           u11890 000314                             u12930 000228  
                           u12850 000128                             u12770 000088  
                           u13810 000894                             u13730 000656  
                           u13650 00041E                             u13570 00025E  
                           u13490 0000D4                             u11971 000016  
                           u12691 00003A                             u11891 000310  
                           u12931 000224                             u12851 000124  
                           u12771 000084                             u13811 000890  
                           u13731 000652                             u13651 00041A  
                           u13571 00025A                             u13491 0000D0  
                           u11980 00005C                             u12940 000248  
                           u12860 00013C                             u12780 00009C  
                           u13900 00006C                             u13820 000926  
                           u13740 0006AC                             u13660 00042E  
                           u13580 0002AA                             u11981 000058  
                           u12941 000244                             u12861 000138  
                           u12781 000098                             u13901 000068  
                           u13821 000922                             u13741 0006A8  
                           u13661 00042A                             u13581 0002A6  
                           u11990 0000CE                             u12950 00026A  
                           u12870 000150                             u12790 0000B0  
                           u13910 00008A                             u13830 0009D6  
                           u13750 00075A                             u13670 00043E  
                           u13590 0002BA                             u11991 0000CA  
                           u12951 000266                             u12871 00014C  
                           u12791 0000AC                             u13911 000086  
                           u13831 0009D2                             u13751 000756  
                           u13671 00043A                             u13591 0002B6  
                           u12960 00027E                             u12880 000164  
                           u13920 0000A0                             u13840 0009E8  
                           u13760 000784                             u13680 00044E  
                           u12961 00027A                             u12881 000160  
                           u13921 00009C                             u13841 0009E4  
                           u13761 000780                             u13681 00044A  
                           u13850 000014                             u12970 0002AE  
                           u12890 000178                             u13930 0000B0  
                           u13770 000810                             u13690 0004E4  
                           u13851 000010                             u12971 0002AA  
                           u12891 000174                             u13931 0000AC  
                           u13771 00080C                             u13691 0004E0  
                           u13860 000024                             u12980 0002D6  
                           u13940 0000C4                             u13780 000822  
                           u13861 000020                             u12981 0002D2  
                           u13941 0000C0                             u13781 00081E  
                           u12990 0002EA                             u13950 0000D8  
                           u13870 000020                             u13790 000834  
                           u12991 0002E6                             u13951 0000D4  
                           u13871 00001C                             u13791 000830  
                           u13960 0001EA                             u13880 00003A  
                           u13961 0001E6                             u13881 000036  
                           u13970 0001FE                             u13890 000054  
                           u13971 0001FA                             u13891 000050  
                           u13980 00021A                             u13981 000216  
                           u13990 000016                             u13991 000012  
                     i2c_read@res 000016                   __end_of___lwdiv 000074  
                           i2l326 000012                             i2l327 000082  
                           i2l328 000028                             i2l365 0000C6  
                           i2l359 00006A                   ___awdiv@counter 000011  
                           _RCREG 000FAE                      vfpfcnvrt@fmt 00004D  
                    vfpfcnvrt@llu 00000E                             _SPBRG 000FAF  
                           _PORTA 000F80                             _PORTB 000F81  
                           _PORTC 000F82                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                __end_of_PIN_LED0 000323                  __end_of_PIN_LED1 000321  
                __end_of_PIN_LED2 00031F                  __end_of_PIN_LED3 000325  
                           _TXREG 000FAD                ?_smbus8_write_data 000057  
                   __CFG_PWRT$OFF 000000          adf4351_write_latch@value 00000D  
              ?_smbus8_write_byte 000057                     __CFG_WRT0$OFF 000000  
                   ?_ssd1306_data 00005F                     __CFG_WRT1$OFF 000000  
                   __CFG_WRT2$OFF 000000               ___lmul@multiplicand 000011  
                   __CFG_WRT3$OFF 000000                    __CFG_EBTR0$OFF 000000  
                  __CFG_FCMEN$OFF 000000              irq_set_handler@udata 00000F  
                  __CFG_EBTR1$OFF 000000                    __CFG_EBTR2$OFF 000000  
                  __CFG_EBTR3$OFF 000000          __end_of_lnb_do_configure 000138  
             print_char@underline 000019                     __CFG_WRTB$OFF 000000  
                   __CFG_WRTC$OFF 000000                i2c_native_init@ctx 000034  
                   __CFG_WRTD$OFF 000000                ssd1306_command@cmd 00005F  
              ssd1306_command@len 000061                    __CFG_EBTRB$OFF 000000  
                           _g_ipc 000010                             _flags 000002  
                           _p_len 000012                             _errno 00000C  
                           _fputc 000000                   __end_of_isalpha 00003C  
                           _fputs 000000                   __end_of_isdigit 000038  
                           atoi@n 000027                             pad@fp 000019  
                           atoi@s 00001A                             _width 000000  
                    ?_read_switch 000000                     print_char@idx 000034  
                           dtoa@d 000029                     print_char@map 00002A  
                           dtoa@i 000049                             dtoa@n 000041  
                           dtoa@p 00003B                             dtoa@s 00003F  
                           dtoa@w 00003D               ??_smbus8_write_data 00005F  
                 __end_of_islower 000038                   __end_of_isspace 000052  
                _lcd_clear_screen 000000               ??_smbus8_write_byte 00005C  
                           itoa@c 00001B                   __end_of_isupper 000038  
                           pclath 000FFA                   __end_of_set_reg 0001AC  
                           tablat 000FF5            si5328_perform_ical@i2c 00002B  
                           plusw1 000FE3                             plusw2 000FDB  
                     i2c_stop@ctx 000034                             stoa@i 00001E  
                           stoa@l 000026                             stoa@p 000024  
                           stoa@s 000014                             stoa@w 000020  
                           ttemp5 000001                             ttemp6 000004  
                           ttemp7 000008                             status 000FD8  
                           wtemp8 000001                             xtoa@c 000049  
                           xtoa@d 000026                             xtoa@i 000047  
                           xtoa@n 00003F                             xtoa@p 00003B  
                           xtoa@w 00003D                             xtoa@x 00002E  
           _adf4351_set_freq$3878 000035                    _i2c_reset$1141 00002C  
                 ssd1306_data@len 000061                   __end_of_strncmp 0000DE  
                 __end_of_toupper 00005E                  ___lodiv@dividend 000025  
                 _actualADFswitch 00000C                  ?_adf4351_default 00000D  
                    _toupper$3548 000019                   _send_UBX_string 000000  
                 __initialization 000000          __size_of_ssd1306_command 000000  
                  ??_i2c_wait_int 000011                      __end_of_atoi 0001F8  
                    __end_of_main 0001F4                      __end_of_dtoa 0002DE  
                    __end_of_itoa 000084                      __end_of_stoa 000198  
                    __end_of_xtoa 0002D4                  __end_of_i2c_read 0000C0  
                  ??_i2c_transfer 000057               lnb_do_configure@i2c 00002B  
                __end_of_i2c_stop 000038         __end_of_smbus8_write_data 000054  
             lnb_do_configure@res 000062            __size_of_lnb_configure 000000  
       __end_of_smbus8_write_byte 00004A             usart_rx_irq_handler@c 000004  
           __size_of_write_regset 000000                            ??_atoi 00001C  
                          ??_main 000044                            ??_dtoa 000031  
                          ??_itoa 00001B             usart_init@spbrg_value 00002A  
               lnb_configure@addr 000031                            ??_stoa 000016  
                          ??_xtoa 00002F                     __activetblptr 000002  
         fp__usart_rx_irq_handler 000000           __end_of_PIN_LED_SI_LOCK 00033F  
 __end_of_reg_set_univ_CKIN2_XAXB 000423                    ??_ssd1306_data 000063  
               ?_check_LNB_status 00002B                  ___lodiv@quotient 000035  
                ?_irq_set_handler 00000D                 ??_secret_settings 000000  
                 ssd1306_setpos@x 000012                   ssd1306_setpos@y 00000E  
                   print_string@i 000063                     print_string@s 000037  
                   print_string@x 000039                     print_string@y 00003A  
                  _i2c_probe_addr 000000           ??_adf4351_calc_counters 000040  
              ??_check_LNB_status 000061                            ?_fputc 00000E  
                          STR_101 000000                            STR_110 000000  
                          ?_fputs 000012                            STR_104 0008C4  
                          STR_106 000000                            STR_108 0008BB  
                ___awdiv@dividend 00000D      check_si5328_status@lastinput 00000D  
                    i2c_read@data 000011               _si5328_perform_ical 000000  
                          i2l8001 00006A                            i2l8003 00007A  
                          i2l8511 000056                            i2l8521 0000C0  
                          i2l8513 000064                            i2l8505 000012  
                          i2l8515 000078                            i2l8507 000020  
                          i2l8517 00008C                            i2l8509 000034  
                          i2l8519 0000B2                            i2l7991 000000  
                          i2l7997 000036                            i2l7999 00003E  
                          _OSCCON 000FD3                     vfpfcnvrt@done 000002  
         check_ADF5341_status@ctx 00002B                            _SPBRGH 000FB0  
                          _WDTCON 000FD1                __size_of_i2c_reset 000000  
                          _SSPADD 000FC8                            _SSPBUF 000FC9  
              __size_of_i2c_start 000000                __size_of_i2c_write 000000  
     __end_of_setADF4351frequency 000228                    __CFG_XINST$OFF 000000  
            __size_of_lcd_draw8x8 000000                      _write_regset 000000  
                    ___strtoxl@cp 00003C                      vfprintf@cfmt 00005F  
                __end_of_lcd_init 0000C4                 _ext10MHzReference 00000B  
             i2c_native_init@baud 000036                            ___lmul 000000  
                          ___omul 000000                         ??___aldiv 000015  
                       ??___aodiv 00001D                  _PIN_LNB_QRG1_DEF 000428  
                _PIN_LNB_QRG2_DEF 00042D                         ??___aomod 00001D  
                          ___wmul 000000                write_regset@errors 000032  
                    i2c_reset@ctx 000026                         ??___awdiv 000011  
                    i2c_reset@reg 000030                    __CFG_STVREN$ON 000000  
                       ??___awmod 000011                  __end_of_eval_gps 00035C  
                _freq_table_25_24 0003C9                  _freq_table_25_25 0003A1  
                          _g_freq 000008                  _freq_table_27_26 000379  
                       ??___lldiv 000021                         ??___lodiv 000035  
            ?_si5328_perform_ical 00002B                         ??___lwdiv 000011  
                          _g_pout 00000E             _ssd1306_init_commands 000000  
     __size_of_global_irq_handler 000000                            _memcmp 000000  
                          _memcpy 000000                            _gpsbuf 000032  
                __end_of_init_gps 000048                            _memset 000000  
                          _setQRG 000000                  ___strtoxl@endptr 00001D  
                          clear_0 000090                            clear_1 00009C  
                          clear_2 0000A8                            clear_3 0000C2  
                          clear_4 0000CE                  __end_of_read_reg 000020  
                ___awdiv@quotient 000013                   ___awmod@divisor 00000F  
                 _i2c_native_init 000000                            _ubx_id 000016  
                 ___awmod@counter 000011                            _printf 000000  
                          pad@buf 00001B                            _rx_gps 000000  
    __size_of_adf4351_write_latch 000000                            _putgps 000000  
        __end_of_PIN_SI5328_CS_CA 00033D                            dtoa@fp 000027  
                          _strchr 000000                  ___strtoxl@prev_a 000026  
                          _strlen 000000                   _PIN_SIO_CLK_DEF 00048C  
                          _strtol 000000                    print_char@xpos 000017  
                  print_char@ypos 000018                _g_irq_handler_info 000000  
                          fputc@c 00000E                _adf4351_write_reg0 000000  
              _adf4351_write_reg1 000000                _adf4351_write_reg2 000000  
              _adf4351_write_reg3 000000                _adf4351_write_reg4 000000  
              _adf4351_write_reg5 000000                            fputs@c 000016  
                          fputs@i 000017                      __pdataCOMRAM 000000  
          __end_of_i2c_probe_addr 000040                            fputs@s 000012  
                       ??_isalpha 00000F                         ??_isdigit 00000F  
              _PIN_LED_CPU_OK_DEF 000473                si5328_checkGPS@i2c 00003D  
                       ??_islower 00000F                      i2c_start@rep 000013  
                    i2c_start@res 000018                      __mediumconst 000000* 
                       ??_isspace 00000F                            tblptrh 000FF7  
                       ??_isupper 00000F                            tblptrl 000FF6  
                          tblptru 000FF8      __size_of_ssd1306_commandbyte 000000  
                    eval_gps@eidx 0000F5                      eval_gps@elem 000000  
                       ??_set_reg 00000D           si5328_perform_ical@addr 00002D  
      i2c_transfer_native@wantack 000043                       read_reg@i2c 00005D  
     __end_of_check_si5328_status 000150                            stoa@cp 000022  
                          stoa@fp 000012                  __end_of_vfprintf 000062  
                     read_reg@reg 000060                       read_reg@val 000063  
                __end_of_rx_usart 000036                            xtoa@fp 000024  
             ?_adf4351_write_reg0 000019               ?_adf4351_write_reg1 000019  
             ?_adf4351_write_reg2 000019               ?_adf4351_write_reg3 000019  
             ?_adf4351_write_reg4 000019                         ??_strncmp 000013  
             ?_adf4351_write_reg5 000019                         ??_toupper 000015  
                ssd1306_data@data 00005F                     _lnb_configure 000000  
                 _getGPSfrequency 000000           __end_of_send_UBX_string 000208  
                    i2c_write@res 000014                        __accesstop 000000* 
         __end_of__initialization 0000D4  show_display@old_adf4351_lockstat 000004  
                 __CFG_PBADEN$OFF 000000                     ___rparam_used 000001  
             _i2c_transfer_native 000000         CalculateGridSquare@latmid 000048  
               ?_adf4351_get_lock 00000D         CalculateGridSquare@lonmid 000038  
        __end_of_PIN_LED_ADF_LOCK 00034B                       setQRG@newLO 00003C  
                   ?_adf4351_init 000019                    __pcstackCOMRAM 000000  
              __size_of___strtoxl 000000                      __pidataBANK0 000000  
                    __pidataBANK1 000000                      __pidataBANK2 000000  
                    __pidataBANK3 000000                    _ssd1306_setpos 000000  
              ??_adf4351_get_lock 00000F             ??_si5328_perform_ical 000061  
                 write_regset@i2c 00002B              ??_adf4351_write_reg0 00001B  
            ??_adf4351_write_reg1 00001B              ??_adf4351_write_reg2 00001B  
            ??_adf4351_write_reg3 00001B              ??_adf4351_write_reg4 00001B  
            ??_adf4351_write_reg5 00001B                   write_regset@len 000030  
                 write_regset@set 00002E                     __end_of_fputc 000022  
                   __end_of_fputs 000044        __size_of_smbus8_write_data 000000  
       __size_of_smbus8_read_byte 000000        __size_of_smbus8_write_byte 000000  
               ??_ssd1306_command 000063     __size_of_usart_rx_irq_handler 000000  
                 _si5328_checkGPS 000000                 __end_of_i2c_reset 0000C2  
               __end_of_i2c_start 0000E4                 ?_adf4351_set_freq 00002B  
            lnb_do_configure@addr 00002D                 __end_of_i2c_write 000078  
               ?_adf4351_set_mode 000027          show_display@old_GPS_lock 00000B  
        show_display@old_GPS_time 00008F                 ?_adf4351_set_tune 00000D  
            ?_i2c_transfer_native 000036                 getGPSfrequency@gf 000011  
                 ?_i2c_probe_addr 000057          __end_of_PIN_LED_LNB_GOOD 000343  
              ??_adf4351_set_freq 000031                ??_adf4351_set_mode 00002B  
              ??_adf4351_set_tune 000013      __size_of_CalculateGridSquare 000000  
            __end_of_i2c_wait_int 000076                           ??_fputc 000012  
                         ??_fputs 000016                    ?_lnb_configure 00002F  
                      _check_RXTX 000000                        __pbssBANK0 000000  
                      __pbssBANK1 000000                        __pbssBANK2 000000  
                      __pbssBANK3 000000                        __pbssBANK4 000000  
            __end_of_i2c_transfer 000062      show_display@old_LNB_laststat 000006  
                       ?_i2c_read 000011                     rx_gps@len_lsb 000010  
                   ??_si5328_init 000040                         ?_i2c_stop 000034  
            __size_of_read_switch 000000        _adf4351_calc_counters$3879 000050  
                 _si5328_set_freq 000000      __end_of_PIN_LED_ADF_LOCK_DEF 00046E  
            __end_of_ssd1306_data 00003C                    ??_adf4351_init 00001B  
          __end_of_ssd1306_setpos 00003E    adf4351_calc_counters@Nmal10000 00005A  
         __end_of_i2c_native_init 000056          CalculateGridSquare@latgf 000040  
        CalculateGridSquare@longf 000030                ssd1306_setpos@data 00000F  
                         ?___lmul 00000D                           ?___omul 00000D  
         __end_of_PIN_SIO_CLK_DEF 000491                           ?___wmul 000014  
              show_display@outqrg 000040           si5328_set_freq@freq_MHz 000037  
        __end_of_lcd_clear_screen 000062                           ?_memcmp 00000D  
                         ?_memcpy 00000D                           ?_memset 00000D  
             ___omul@multiplicand 000015                    ___lmul@product 000015  
                         ?_setQRG 000000                    usart_init@baud 000026  
              __size_of_set_reg24 000000                __size_of_set_reg25 000000  
              __size_of_set_reg26 000000                __size_of_set_reg27 000000  
                         ?_printf 00001D                           ?_rx_gps 00004B  
          show_display@old_lnbqrg 000008                           ?_putgps 000000  
                         ?_strchr 00000D                           ?_strlen 00000D  
                         ?_strtol 00003F             ??_i2c_transfer_native 00003C  
               _PIN_LNB_FAULT_DEF 000423            show_display@old_outqrg 000014  
         __end_of_getGPSfrequency 000054                __size_of_vfpfcnvrt 000000  
                         _GPS_fix 000009                           _GPS_lat 000080  
                         _GPS_lon 000071                           _GPS_sat 000005  
                         _PIN_SJ3 000333                           _PIN_SJ4 000331  
                         _PIN_SJ5 00032F                           _PIN_SJ6 00032D  
                         _OSCTUNE 000F9B             setADF4351frequency@sw 000042  
        check_ADF5341_status@stat 00002D                 ?_lnb_do_configure 00002B  
               __end_of___strtoxl 000450                 send_UBX_string@id 00002B  
              __end_of_PIN_ADF_CE 00034F                __end_of_PIN_ADF_LE 000351  
                       ?_lcd_init 00003E            __size_of_adf4351_setup 000000  
              ??_lnb_do_configure 000061                         ?_eval_gps 000045  
                      ??_i2c_read 000015            irq_set_handler@handler 00000D  
                ?_send_UBX_string 00002B                        ??_i2c_stop 000036  
   __size_of_check_ADF5341_status 000000                         ?_init_gps 000000  
                       ?_read_reg 00005D                           __Hparam 000000  
                 ?_ssd1306_setpos 00000E                           __Lparam 000000  
             __end_of_si5328_init 0000EA           __end_of_si5328_checkGPS 0000C6  
                         ___aldiv 000000                           ___aodiv 000000  
                         ___aomod 000000                           ___awdiv 000000  
                 __size_of___lmul 000000                           ___awmod 000000  
                 __size_of___omul 000000                           ___lldiv 000000  
                 __size_of___wmul 000000                           ___lodiv 000000  
                         ___lwdiv 000000                         ?_vfprintf 000017  
                 _secret_settings 000000*                        ?_rx_usart 000000  
                      _init_gpios 000000                           __pcinit 000000  
                 __size_of_memcmp 000000                   __size_of_memcpy 000000  
                      _init_timer 000000*                  __size_of_memset 000000  
                 __size_of_setQRG 000000         __end_of_PIN_LNB_FAULT_DEF 000428  
                         __ramtop 000000*                          _lcd_i2c 000002  
               _freq_table_27_OPT 000351                           __ptext0 000000  
                         __ptext1 000000                           __ptext2 000000  
                         __ptext3 000000                           __ptext4 000000  
                         __ptext5 000000                           __ptext6 000000  
                         __ptext7 000000                           __ptext8 000000  
                         __ptext9 000000                   __size_of_printf 000000  
          check_si5328_status@i2c 00002B                   __size_of_rx_gps 000000  
                         _booting 000004                   __size_of_putgps 000000  
                 __size_of_strchr 000000                   __size_of_strlen 000000  
          check_si5328_status@res 000033            check_si5328_status@ret 000031  
           adf4351_set_freq@fcorr 000039                   __size_of_strtol 000000  
                    __size_of_abs 000000                      __size_of_pad 000000  
                         _isalpha 000000                           _isdigit 000000  
           _calc_mixer_corr_value 000000                  ___awmod@dividend 00000D  
                ___aldiv@dividend 00000D                           _islower 000000  
                         _payload 000000                           _isspace 000000  
                         _isupper 000000                           _set_reg 000000  
                _PIN_SIO_DATA_DEF 000491                           _ubx_ack 00000B  
                 ??_lnb_configure 000032                           _ubx_len 000000  
                         _use_GPS 00001A                           atoi@neg 000020  
          i2c_transfer_native@ack 00003D            i2c_transfer_native@dev 000036  
        __end_of_PIN_LNB_QRG1_DEF 00042D          __end_of_PIN_LNB_QRG2_DEF 000432  
          i2c_transfer_native@ctx 000049            i2c_transfer_native@msg 000038  
          i2c_transfer_native@res 00004D            i2c_transfer_native@num 00003A  
                      ??_lcd_init 000064                       ?_check_RXTX 000000  
        __end_of_freq_table_25_24 0003F1          __end_of_freq_table_25_25 0003C9  
        __end_of_freq_table_27_26 0003A1                           _strncmp 000000  
                  __pintcode_body 000000                           _toupper 000000  
  __size_of_adf4351_calc_counters 000000              end_of_initialization 0000D4  
   __end_of_adf4351_calc_counters 00033C           __end_of_si5328_set_freq 0000A8  
                    _g_usart_rpos 000006                        ??_eval_gps 000047  
                    _g_usart_wpos 000004                           memcmp@l 000015  
                         memcmp@n 000011                           memcmp@r 000017  
                  ___omul@product 00001D                           memcpy@d 000013  
                         memcpy@n 000011                           memcpy@s 000015  
                         fputc@fp 000010                           memset@c 00000F  
                         memset@k 000015                           memset@n 000011  
                         memset@s 000017                 __end_of_set_reg24 00012C  
               __end_of_set_reg25 000140                 __end_of_set_reg26 000140  
               __end_of_set_reg27 000042                     __Lmediumconst 000000* 
             _adf4351_write_latch 000000                        ??_init_gps 000062  
                         int_func 000000                           fputs@fp 000014  
                      ??_read_reg 000061                         i2u1001_40 0000C0  
                       i2u1000_48 00009E                         i2u1001_41 0000BC  
                       i2u1000_49 0000B2               adf4351_get_lock@ctx 00000D  
       __size_of_check_LNB_status 000000                     i2c_start@addr 000017  
             si5328_checkGPS@addr 00003F                     i2c_start@read 000011  
                 ___lldiv@divisor 00001D                 eval_gps@chksumgps 0000F0  
                 ___lldiv@counter 000025                  main@old_GPS_lock 000002  
             _ssd1306_commandbyte 000000                         _LNB_error 00000D  
               __end_of_vfpfcnvrt 00071A            _reg_set_univ_CKIN1_GPS 0003F1  
                ?_i2c_native_init 000034                         _RCSTAbits 000FAB  
                ___aldiv@quotient 000017                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
                         rx_gps@c 00004B                     _adf4351_setup 000000  
                    read_reg@addr 00005F                        ??_vfprintf 00005F  
                         putgps@c 00000E         __end_of_freq_table_27_OPT 000379  
                _smbus8_read_byte 000000                           strchr@c 00000F  
                         strchr@s 00000D          __size_of_adf4351_default 000000  
                      ??_rx_usart 00004F                           strlen@a 00000F  
                         strlen@s 00000D                     ?_show_display 000000  
                         strtol@s 00003F              ?_adf4351_write_latch 00000D  
             send_UBX_string@CK_A 00003A               send_UBX_string@CK_B 000039  
                      _print_char 000000             __size_of_i2c_wait_int 000000  
            __end_of_PIN_ADF_LOCK 00034D                     i2c_write@data 000013  
            ?_ssd1306_commandbyte 000000                  ?_getGPSfrequency 00000D  
           __size_of_i2c_transfer 000000              __end_of_adf4351_init 0000A0  
            _PIN_LED_ADF_LOCK_DEF 000469                      strtol@endptr 000041  
                   ?_print_string 000037                    _NC1_LS_reg3233 000000  
            __end_of_PIN_LED0_DEF 000473              __end_of_PIN_LED1_DEF 000469  
            __end_of_PIN_LED2_DEF 00045F              __end_of_PIN_LED3_DEF 00047D  
       calc_mixer_corr_value@fgps 00003F            adf4351_write_reg0@data 000021  
          adf4351_write_reg1@data 000021            adf4351_write_reg2@data 000021  
          adf4351_write_reg3@data 000021            adf4351_write_reg4@data 000020  
          adf4351_write_reg5@data 000020             __size_of_ssd1306_data 000000  
        adf4351_set_tune@lownoise 000011                       _si5328_init 000000  
        __size_of_irq_set_handler 000000                     ??_lcd_draw8x8 000063  
                       _TXSTAbits 000FAC                     _PIN_LNB_FAULT 000343  
      CalculateGridSquare@lat_min 000058                        _usart_getc 000000  
                      _usart_init 000000                        _usart_putc 000000  
                     print_char@b 000033                       print_char@c 000032  
                     print_char@x 000035                       print_char@y 000036  
            __end_of_PIN_LNB_QRG1 00032B              __end_of_PIN_LNB_QRG2 00032D  
                 _ssd1306_command 000000        CalculateGridSquare@lon_min 000050  
             _CalculateGridSquare 000000        __end_of_global_irq_handler 0000DA  
                  ?_adf4351_setup 000025                  ?_si5328_checkGPS 00003D  
                    _i2c_wait_int 000000                    _NC2_LS_reg3536 000012  
            __end_of_PIN_SIO_DATA 000347                    __end_of___lmul 00006A  
                  __end_of___omul 00009E      __size_of_setADF4351frequency 000000  
                  ??_show_display 00003E                       vfpfcnvrt@ap 00004F  
                     vfpfcnvrt@cp 000000                       vfpfcnvrt@fp 00004B  
                     vfpfcnvrt@ll 000006                  ??_i2c_probe_addr 00005A  
                  __end_of___wmul 000026               __size_of_check_RXTX 000000  
                     ?_init_gpios 000000                       _BAUDCONbits 000FB8  
                   __pidataCOMRAM 000000             ??_adf4351_write_latch 000011  
                    _i2c_transfer 000000                       ?_init_timer 000000  
                write_regset@addr 00002D              __end_of_PIN_USART_RX 000327  
            __end_of_PIN_USART_TX 000329                    __end_of_memcmp 00009A  
                  __end_of_memcpy 000050                    __end_of_memset 000176  
                  __end_of_setQRG 0000C4            ?_calc_mixer_corr_value 000027  
           __end_of_font8x8_basic 000309                    __end_of_printf 000028  
          lcd_clear_screen@ystart 000080                        eval_gps@pe 0000F3  
                      eval_gps@ps 0000F6                    __end_of_rx_gps 000370  
                  __end_of_putgps 00000A                    __end_of_strchr 00004C  
                  __end_of_strlen 00004E         __size_of_adf4351_get_lock 000000  
                  __end_of_strtol 000032             ??_ssd1306_commandbyte 00005C  
             start_initialization 000000                   ___lodiv@divisor 00002D  
                 ___lodiv@counter 00003D                      _ssd1306_data 000000  
            ?_CalculateGridSquare 000026                         _i2c_reset 000000  
         global_irq_handler@dummy 00000B                  _PIN_USART_RX_DEF 000446  
                     __end_of_abs 000040                         _i2c_start 000000  
                _PIN_USART_TX_DEF 00044B                       __end_of_pad 0000C2  
                  ??_print_string 00003C                         _i2c_write 000000  
                  _gps_init_timer 000000*                 ?_si5328_set_freq 000034  
    __end_of_usart_rx_irq_handler 000084                  show_display@xpos 00003F  
           lnb_do_configure@value 000061         __size_of_adf4351_set_freq 000000  
               ___omul@multiplier 00000D         __size_of_adf4351_set_mode 000000  
    __size_of_check_si5328_status 000000                  __CFG_OSC$INTIO67 000000  
       __size_of_adf4351_set_tune 000000       __end_of_si5328_perform_ical 000048  
               __size_of_i2c_read 000000                       _N31_reg4445 000002  
               __size_of_i2c_stop 000000              _adf4351_set_tune$505 000013  
                     _N32_reg4748 000018                       ___strtoxl@a 000038  
                     ___strtoxl@c 00003E                       ___strtoxl@s 00001B  
                     vfprintf@fmt 000019                          ??___lmul 000015  
                        ??___omul 00001D      __end_of_PIN_SI5328_CS_CA_DEF 000487  
      setADF4351frequency@timeout 00003E                          ??___wmul 000018  
             __end_of_lcd_draw8x8 000022        calc_mixer_corr_value@curLO 000033  
                 ___strtoxl@limit 000032       __size_of_adf4351_write_reg0 000000  
     __size_of_adf4351_write_reg1 000000       __size_of_adf4351_write_reg2 000000  
     __size_of_adf4351_write_reg3 000000       __size_of_adf4351_write_reg4 000000  
     __size_of_adf4351_write_reg5 000000              i2c_transfer_native@i 000045  
                     __pdataBANK0 000000                       __pdataBANK1 000000  
                     __pdataBANK2 000000                       __pdataBANK3 000000  
                      itoa@buffer 000037                  __CFG_LPT1OSC$OFF 000000  
                        ??_memcmp 000013                          ??_memcpy 000013  
                        ??_memset 000013                          ??_setQRG 000038  
               ?_lcd_clear_screen 000000                        memset@dest 00000D  
                        ??_printf 000061                          ??_rx_gps 00004D  
            check_LNB_status@addr 00002D                          ??_putgps 00000E  
                        ??_strchr 000011                          ??_strlen 00000F  
    show_display@old_si5328locked 000005                          ??_strtol 000045  
            check_LNB_status@stat 00002E                       ?_print_char 000017  
              ??_lcd_clear_screen 000063       adf4351_calc_counters@vfoout 000052  
                     __pbssCOMRAM 000000                 ??_adf4351_default 00000F  
           ??_CalculateGridSquare 000028                         _g_i2c_bus 000043  
                   __pcstackBANK0 000000                     __pcstackBANK1 000000  
              adf4351_default@ctx 00000D                  ___aodiv@dividend 00000D  
                      ?_i2c_reset 000026                        ?_i2c_start 000011  
                      ?_i2c_write 000011                 irq_set_handler@id 000011  
                       _g_adf4351 000087                     ??_read_switch 00000D  
     CalculateGridSquare@latrest1 000044           show_display@old_GPS_fix 00000A  
         show_display@old_GPS_lat 000062           show_display@old_GPS_lon 000053  
         show_display@old_GPS_sat 000007           __end_of_ssd1306_command 00003C  
                ??_ssd1306_setpos 000063                         ___strtoxl 000000  
               __size_of_lcd_init 000000               __size_of_init_gpios 000000  
     CalculateGridSquare@lonrest1 000034               ssd1306_setpos@F3137 00000B  
               __size_of_eval_gps 000000                         _atoi$3426 000022  
                       _atoi$3427 000026                         _atoi$3428 000024  
      __end_of_PIN_SI5328_LOL_DEF 00048C                       ?_usart_getc 00000D  
                _check_LNB_status 000000                       ?_usart_init 000026  
                     ?_usart_putc 000000                  ?_secret_settings 000000  
               __size_of_init_gps 000000                   ??_adf4351_setup 000027  
             _PIN_LED_SI_LOCK_DEF 00047D                     usart_getc@res 000011  
               __size_of_read_reg 000000                  ___lwdiv@dividend 00000D  
                       _dtoa$2913 000039                 __CFG_CCP2MX$PORTC 000000  
       __size_of_lnb_do_configure 000000          __end_of_PIN_SIO_DATA_DEF 000496  
         CalculateGridSquare@grid 00004B           CalculateGridSquare@latm 00003C  
         CalculateGridSquare@lonm 00002C                         __pintcode 000000  
               ??_irq_set_handler 000011                     __pmediumconst 000000  
                        ?___aldiv 00000D                          ?___aodiv 00000D  
                        ?___aomod 00000D                          ?___awdiv 00000D  
                       __ptext100 000000                         __ptext101 000000  
                       __ptext102 000000                  ___aodiv@quotient 00001F  
                       __ptext111 000000                         __ptext103 000000  
                       __ptext112 000000                         __ptext104 000000  
                       __ptext105 000000                         __ptext106 000000  
                       __ptext107 000000                         __ptext108 000000  
                       __ptext109 000000                          ?___awmod 00000D  
                     usart_putc@c 00000D       __end_of_i2c_transfer_native 0002A6  
                        ?___lldiv 000019                          ?___lodiv 000025  
                        ?___lwdiv 00000D      __end_of_check_ADF5341_status 0000E8  
            setADF4351frequency@p 000040             __size_of_adf4351_init 000000  
                send_UBX_string@i 000033                 __size_of_vfprintf 000000  
                _PIN_ADF_LOCK_DEF 0004A0                 __size_of_rx_usart 000000  
                        ?_isalpha 00000D                          ?_isdigit 00000D  
                i2c_start@wantack 000015                          ?_islower 00000D  
                        ?_isspace 00000D                       _N2L_reg4142 000000  
                        ?_isupper 00000D                   si5328_init@addr 00003F  
                        ?_set_reg 000000          adf4351_calc_counters@INT 000048  
                ___lwdiv@quotient 000011                         _currentLO 00000A  
                    ??_check_RXTX 00000D                    __size_of_fputc 000000  
        adf4351_calc_counters@ctx 00003E                    __size_of_fputs 000000  
                       _gpsbufidx 000000                          ?_strncmp 00000D  
                        ?_toupper 000013           show_display@old_ubx_ack 000009  
            adf4351_set_freq@freq 00002D          __end_of_smbus8_read_byte 00005C  
            __end_of_show_display 000A48               ___strtoxl@conv_done 000031  
                 ___aldiv@divisor 000011                        ?___strtoxl 00001B  
                      set_reg@idx 000013               i2c_wait_int@timeout 00000D  
                 ___aldiv@counter 000015                    ___wmul@product 000018  
                     _g_usart_buf 000000                       _lcd_draw8x8 000000  
                        _PIE1bits 000F9D               __end_of_read_switch 000138  
             __size_of_print_char 000000                      _PIN_ADF_LOCK 00034B  
                   ?_write_regset 00002B                         _set_reg24 000000  
                       _set_reg25 000000                         _set_reg26 000000  
                       _set_reg27 000000                          _PIR1bits 000F9E  
                        i2u920_40 00006A                          i2u920_41 000066  
                        _PIN_LED0 000321                          _GPS_lock 00000C  
                        _PIN_LED1 00031F                          _PIN_LED2 00031D  
                        _PIN_LED3 000323                          i2u917_40 00000E  
                        i2u917_41 00000A                          i2u918_40 000024  
                        i2u918_41 000020               ___strtoxl@is_signed 000021  
                        i2u919_40 000036                          i2u919_41 000032  
                        _GPS_time 000098                      _adf4351_init 000000  
                        _RCONbits 000FD0                          i2u994_40 000020  
                        i2u994_41 00001C                          i2u995_40 000034  
                        i2u995_41 000030                          i2u997_40 000064  
                        i2u996_48 000042                          i2u997_41 000060  
                        i2u996_49 000056                          i2u998_40 000078  
                        i2u998_41 000074          __size_of_send_UBX_string 000000  
                        i2u999_40 00008C                          i2u999_41 000088  
                       _ubx_class 000005                      _LNB_laststat 00000F  
            __end_of_print_string 00009A                  adf4351_setup@ctx 000025  
          ssd1306_commandbyte@cmd 00005C                      _PIN_LED0_DEF 00046E  
                    _PIN_LED1_DEF 000464                      _PIN_LED2_DEF 00045A  
                    _PIN_LED3_DEF 000478               __end_of_PIN_I2C_SDA 000337  
             __end_of_PIN_I2C_SCL 000339                send_UBX_string@idx 00003B  
              send_UBX_string@len 00002C                         _vfpfcnvrt 000000  
              __end_of_check_RXTX 00018E                         _xtoa$2934 000037  
                       _xtoa$2935 000039              _usart_rx_irq_handler 000000  
                      _ADCON1bits 000FC1                 ___wmul@multiplier 000014  
           adf4351_write_reg0@ctx 000019             adf4351_write_reg1@ctx 000019  
           adf4351_write_reg2@ctx 000019             adf4351_write_reg3@ctx 000019  
           adf4351_write_reg4@ctx 000019             adf4351_write_reg5@ctx 000019  
        i2c_transfer_native@bdata 000047                  _adf4351_get_lock 000000  
        i2c_transfer_native@inmsg 00003F               __size_of_usart_getc 000000  
                    _PIN_LNB_QRG1 000329                      _PIN_LNB_QRG2 00032B  
             __size_of_usart_init 000000               __end_of_PIN_SJ3_DEF 000446  
             __end_of_PIN_SJ4_DEF 000441               __size_of_usart_putc 000000  
             __end_of_PIN_SJ5_DEF 00043C               __end_of_PIN_SJ6_DEF 000437  
                     ??_i2c_reset 000028                       ??_i2c_start 000017  
                    _isspace$3453 000013                       ??_i2c_write 000013  
             si5328_set_freq@addr 000036               __end_of_PIN_SIO_CLK 000349  
                      vfpfcnvrt@c 000016             __end_of_lnb_configure 0000AA  
               ___lmul@multiplier 00000D                       _INTCON2bits 000FF1  
                       copy_data0 000014                         copy_data1 000034  
                       copy_data2 00006C              _PIN_SI5328_CS_CA_DEF 000482  
                    _PIN_SIO_DATA 000345                  _adf4351_lockstat 00000A  
             _setADF4351frequency 000000                         eval_gps@i 0000F2  
                ?_ssd1306_command 00005F                          _i2c_read 000000  
            adf4351_set_tune@pout 000010                    ___strtoxl$3570 00002A  
                  ___strtoxl$3571 000030                    ___strtoxl$3572 00002C  
                  ___strtoxl$3573 00002E    __end_of_reg_set_univ_CKIN1_GPS 00040B  
                        _i2c_stop 000000                      ?_si5328_init 00003D  
                    _PIN_USART_RX 000325                      _PIN_USART_TX 000327  
                _adf4351_set_freq 000000                  _adf4351_set_mode 000000  
           _adf4351_calc_counters 000000                  _adf4351_set_tune 000000  
                      rx_gps@stat 000004                    ??_write_regset 000061  
                        __Hrparam 000000*                       ?_set_reg24 000000  
                      ?_set_reg25 000000                        ?_set_reg26 000000  
                      ?_set_reg27 000000                         memcpy@tmp 000017  
                      vfprintf@ap 00001B                          __Lrparam 000000* 
                      vfprintf@fp 000017                       check_RXTX@i 000010  
        __end_of_PIN_USART_RX_DEF 00044B                __CFG_BOREN$SBORDIS 000000  
                  ___strtoxl@base 00001F          __end_of_PIN_USART_TX_DEF 000450  
                  ___strtoxl@sign 000036                    ___strtoxl@skip 000037  
             check_LNB_status@i2c 00002B                         itoa@value 000019  
                __size_of___aldiv 000000                  __size_of___aodiv 000000  
         ??_calc_mixer_corr_value 00002B              ?_setADF4351frequency 000000  
                __size_of___aomod 000000                  __size_of___awdiv 000000  
                __size_of___awmod 000000       si5328_checkGPS@old_GPS_lock 000007  
                    ??_init_gpios 000012                  __size_of___lldiv 000000  
                __size_of___lodiv 000000                        ?_vfpfcnvrt 00004B  
                __size_of___lwdiv 000000                      ??_init_timer 000000  
           ?_usart_rx_irq_handler 000000                   _PIN_I2C_SDA_DEF 000450  
                 ___aodiv@divisor 000015                   _PIN_I2C_SCL_DEF 000455  
                 ___aodiv@counter 00001D                        _N1HS_reg25 000014  
    global_irq_handler@dummy_1626 00000C               _check_si5328_status 000000  
        __size_of_i2c_native_init 000000                        _N2HS_reg40 000016  
              _global_irq_handler 000000      __end_of_PIN_LED_LNB_GOOD_DEF 000464  
                __size_of_isalpha 000000                  __size_of_isdigit 000000  
                 ___lwdiv@divisor 00000F            CalculateGridSquare@lat 000054  
          CalculateGridSquare@lon 00004C                  __size_of_islower 000000  
                __size_of_isspace 000000                   ___lwdiv@counter 000013  
                        __ptext10 000000                          __ptext11 000000  
                        __ptext20 000000                          __ptext12 000000  
                        __ptext21 000000                          __ptext13 000000  
                        __ptext30 000000                          __ptext22 000000  
                        __ptext14 000000                          __ptext31 000000  
                        __ptext23 000000                          __ptext15 000000  
                        __ptext40 000000                          __ptext32 000000  
                        __ptext24 000000                          __ptext16 000000  
                        __ptext41 000000                          __ptext33 000000  
                        __ptext25 000000                          __ptext17 000000  
                        __ptext50 000000                          __ptext42 000000  
                        __ptext34 000000                          __ptext26 000000  
                        __ptext18 000000                          __ptext51 000000  
                        __ptext43 000000                          __ptext35 000000  
                        __ptext27 000000                          __ptext19 000000  
                        __ptext60 000000                          __ptext52 000000  
                        __ptext44 000000                          __ptext36 000000  
                        __ptext28 000000                          __ptext61 000000  
                        __ptext53 000000                          __ptext45 000000  
                        __ptext37 000000                          __ptext29 000000  
                        __ptext70 000000                          __ptext62 000000  
                        __ptext54 000000                          __ptext46 000000  
                        __ptext38 000000                          __ptext71 000000  
                        __ptext63 000000                          __ptext55 000000  
                        __ptext47 000000                          __ptext39 000000  
                        __ptext80 000000                          __ptext72 000000  
                        __ptext64 000000                          __ptext56 000000  
                        __ptext48 000000                          __ptext81 000000  
                        __ptext73 000000                          __ptext65 000000  
                        __ptext57 000000                          __ptext49 000000  
                        __ptext90 000000                          __ptext82 000000  
                        __ptext74 000000                          __ptext66 000000  
                        __ptext58 000000                          __ptext91 000000  
                        __ptext83 000000                          __ptext75 000000  
                        __ptext67 000000                          __ptext59 000000  
                        __ptext92 000000                          __ptext84 000000  
                        __ptext76 000000                          __ptext68 000000  
                        __ptext93 000000                          __ptext85 000000  
                        __ptext77 000000                          __ptext69 000000  
                        __ptext94 000000                          __ptext86 000000  
                        __ptext78 000000                          __ptext95 000000  
                        __ptext87 000000                          __ptext79 000000  
                        __ptext96 000000                          __ptext88 000000  
                        __ptext97 000000                          __ptext89 000000  
                        __ptext98 000000                          __ptext99 000000  
                __size_of_isupper 000000                  __size_of_set_reg 000000  
                        _lcd_addr 000009                          _lcd_init 000000  
                     _read_switch 000000               ?_global_irq_handler 000000  
         check_si5328_status@addr 00002D           check_si5328_status@lock 000032  
                        _eval_gps 000000                  __size_of_strncmp 000000  
                __size_of_toupper 000000                    si5328_init@i2c 00003D  
                 adf4351_init@ctx 000019                       ??___strtoxl 000022  
                  si5328_init@res 000042              _check_ADF5341_status 000000  
        __size_of_getGPSfrequency 000000                     __size_of_atoi 000000  
                        _init_gps 000000                     __size_of_main 000000  
                   __size_of_dtoa 000000              ?_check_si5328_status 00002B  
                   __size_of_itoa 000000                          _read_reg 000000  
              __end_of_init_gpios 0005CE                     __size_of_stoa 000000  
                   __size_of_xtoa 000000               adf4351_set_freq@ctx 00002B  
                 i2c_transfer@dev 000051                   i2c_transfer@msg 000053  
                 i2c_transfer@num 000055                       _PIN_I2C_SDA 000335  
                     _PIN_I2C_SCL 000337               adf4351_set_mode@ctx 000027  
                _lnb_do_configure 000000       __end_of_adf4351_write_latch 0001CE  
                       stoa@F1139 000000              smbus8_read_byte@addr 000059  
            smbus8_read_byte@data 00005B                          int$flags 000000  
                      strtol@base 000043                   _adf4351_default 000000  
           ??_setADF4351frequency 000062              ??_global_irq_handler 000007  
                        _vfprintf 000000                         printf@fmt 00001D  
                        _rx_usart 000000           i2c_transfer_native@left 00004B  
         i2c_transfer_native@read 000041       __end_of_ssd1306_commandbyte 000030  
                        main@lock 000047           i2c_transfer_native@pmsg 00004F  
                     _PIN_SJ3_DEF 000441                       _PIN_SJ4_DEF 00043C  
                     _PIN_SJ5_DEF 000437                       _PIN_SJ6_DEF 000432  
              si5328_set_freq@i2c 000034                  ___aomod@dividend 00000D  
               ??_send_UBX_string 000061                      ??_print_char 00001A  
                     _PIN_SIO_CLK 000347               adf4351_set_tune@icp 00000F  
             adf4351_set_tune@ctx 00000D          __end_of_check_LNB_status 000110  
        __size_of_si5328_checkGPS 000000                   _adf4351_set_qrg 000000* 
                  _vfpfcnvrt$2949 000004                        _INTCONbits 000FF2  
                        memcmp@vl 00000D                          memcmp@vr 00000F  
                        memcpy@d1 00000D                          memcpy@s1 00000F  
                   _lcd_available 000008             __size_of_show_display 000000  
                        isalpha@c 00000D                          isdigit@c 00000D  
                        setQRG@sw 00003B            adf4351_set_mode@enable 000029  
           smbus8_write_data@addr 000059             smbus8_write_data@data 00005B  
                        intlevel2 000000*                        rx_usart@c 00004F  
       __size_of_lcd_clear_screen 000000            ?_adf4351_calc_counters 00003E  
                 _irq_set_handler 000000             ?_check_ADF5341_status 00002B  
           ??_check_si5328_status 00002E                    _PIN_ADF_CE_DEF 00049B  
                        islower@c 00000D                          isspace@c 00000D  
                ___lldiv@dividend 000019                    _PIN_ADF_LE_DEF 000496  
        __end_of_PIN_ADF_LOCK_DEF 0004A5                      ??_usart_getc 00000F  
                    ??_usart_init 00002A             __size_of_print_string 000000  
                    ??_usart_putc 00000D                          isupper@c 00000D  
                       strncmp@_l 00000D                         strncmp@_r 00000F  
                        set_reg@p 000011                    _reg_set_LNB_LO 00003B  
                      _OSCCONbits 000FD3                       ??_set_reg24 000061  
                     ??_set_reg25 000061                       ??_set_reg26 000061  
                     ??_set_reg27 000014                __end_of_print_char 00015E  
                      _PIN_ADF_CE 00034D                    eval_gps@chksum 0000F1  
                      _PIN_ADF_LE 00034F          __size_of_si5328_set_freq 000000  
      __end_of_adf4351_write_reg0 0000C8        __end_of_adf4351_write_reg1 00010C  
      __end_of_adf4351_write_reg2 00037A        __end_of_adf4351_write_reg3 0001C6  
      __end_of_adf4351_write_reg4 0002B8        __end_of_adf4351_write_reg5 000080  
         __end_of_PIN_I2C_SDA_DEF 000455        __end_of_PIN_LED_CPU_OK_DEF 000478  
             smbus8_read_byte@dev 000057           __end_of_PIN_I2C_SCL_DEF 00045A  
             smbus8_read_byte@reg 00005A                    eval_gps@gpsbuf 000045  
             smbus8_read_byte@msg 000000           _reg_set_univ_CKIN2_XAXB 00040B  
                        printf@ap 000029      __size_of_si5328_perform_ical 000000  
          ??_usart_rx_irq_handler 000002                   ___aomod@divisor 000015  
                     ??_vfpfcnvrt 000051                          stoa@nuls 000017  
                 ___aomod@counter 00001D       __end_of_CalculateGridSquare 0005BA  
              _PIN_SI5328_LOL_DEF 000487                      _show_display 000000  
           smbus8_write_byte@addr 000059          setADF4351frequency@force 00003D  
            smbus8_write_data@dev 000057             smbus8_write_byte@data 00005B  
            smbus8_write_data@len 00005D              smbus8_write_data@reg 00005A  
            smbus8_write_data@msg 000000                  ___lldiv@quotient 000021  
           send_UBX_string@i_2074 000035            fp__i2c_transfer_native 000000  
           send_UBX_string@i_2075 000037            send_UBX_string@payload 00002E  
                        strncmp@l 000014                          strncmp@n 000011  
                     _special_cfg 000000*                         strncmp@r 000016  
            __end_of_write_regset 0000DC                          toupper@c 000013  
                    ___aldiv@sign 000016                __end_of_usart_getc 00005C  
              __end_of_usart_init 000068                __end_of_usart_putc 00001E  
                     _SSPCON1bits 000FC6                       _SSPCON2bits 000FC5  
         __size_of_i2c_probe_addr 000000                       _tcxo_no_GPS 000000* 
               ??_i2c_native_init 00003A        si5328_checkGPS@old_ubx_ack 000006  
                    _print_string 000000            __end_of_PIN_ADF_CE_DEF 0004A0  
            smbus8_write_byte@dev 000057                      ___aodiv@sign 00001E  
            smbus8_write_byte@reg 00005A              smbus8_write_byte@msg 000002  
           send_UBX_string@giveup 000003              smbus8_write_byte@tmp 000000  
          __end_of_PIN_ADF_LE_DEF 00049B                 ?_smbus8_read_byte 000057  
                _PIN_SI5328_CS_CA 00033B         usart_rx_irq_handler@udata 000000  
            send_UBX_string@class 000032                  i2c_write@wantack 000011  
                    ?_lcd_draw8x8 000013            calc_mixer_corr_value@v 00003B  
       usart_rx_irq_handler@wposn 000005                ??_smbus8_read_byte 00005D  
         __end_of_adf4351_default 0000A6              send_UBX_string@txbuf 000000  
                    ___aomod@sign 00001E              __size_of_si5328_init 000000  
        __end_of_adf4351_get_lock 000048                 lcd_draw8x8@buffer 000013  
                  _PIN_SI5328_LOL 00033F  
