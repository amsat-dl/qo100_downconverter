

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Oct 18 14:07:49 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F2520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1,inline
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   115                           	psect	text96,global,reloc=2,class=CODE,delta=1
   116                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   117                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   118                           	psect	text98,global,reloc=2,class=CODE,delta=1
   119                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   122                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   123  0000                     
   124                           ; Version 2.10
   125                           ; Generated 31/07/2019 GMT
   126                           ; 
   127                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   128                           ; All rights reserved.
   129                           ; 
   130                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   131                           ; 
   132                           ; Redistribution and use in source and binary forms, with or without modification, are
   133                           ; permitted provided that the following conditions are met:
   134                           ; 
   135                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   136                           ;        conditions and the following disclaimer.
   137                           ; 
   138                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   139                           ;        of conditions and the following disclaimer in the documentation and/or other
   140                           ;        materials provided with the distribution.
   141                           ; 
   142                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   143                           ;        software without specific prior written permission.
   144                           ; 
   145                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   146                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   147                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   148                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   149                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   150                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   151                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   152                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   153                           ; 
   154                           ; 
   155                           ; Code-generator required, PIC18F2520 Definitions
   156                           ; 
   157                           ; SFR Addresses
   158  0000                     
   159                           	psect	idataBANK1
   160  0063D2                     __pidataBANK1:
   161                           	opt callstack 0
   162                           
   163                           ;initializer for _LO
   164  0063D2  18                 	db	24
   165  0063D3  19                 	db	25
   166  0063D4  1A                 	db	26
   167  0063D5  1B                 	db	27
   168                           
   169                           ;initializer for ssd1306_setpos@F3126
   170  0063D6  B0                 	db	176
   171  0063D7  02                 	db	2
   172  0063D8  10                 	db	16
   173                           
   174                           ;initializer for _g_pout
   175  0063D9  0001               	dw	1
   176                           
   177                           ;initializer for _g_ipc
   178  0063DB  0005               	dw	5
   179                           
   180                           ;initializer for _gpsbufidx
   181  0063DD  FF                 	db	255
   182                           
   183                           ;initializer for show_display@old_GPS_sat
   184  0063DE  FF                 	db	255
   185                           
   186                           ;initializer for show_display@old_GPS_lock
   187  0063DF  FF                 	db	255
   188                           
   189                           ;initializer for _actualADFswitch
   190  0063E0  FF                 	db	255
   191                           
   192                           ;initializer for check_si5328_status@lastinput
   193  0063E1  FF                 	db	255
   194                           
   195                           ;initializer for check_si5328_status@lastlock
   196  0063E2  FF                 	db	255
   197                           
   198                           ;initializer for _currentLO
   199  0063E3  18                 	db	24
   200                           
   201                           ;initializer for _GPS_lon
   202  0063E4  20                 	db	32
   203  0063E5  20                 	db	32
   204  0063E6  20                 	db	32
   205  0063E7  20                 	db	32
   206  0063E8  20                 	db	32
   207  0063E9  20                 	db	32
   208  0063EA  20                 	db	32
   209  0063EB  20                 	db	32
   210  0063EC  00                 	db	0
   211  0063ED  00                 	db	0
   212  0063EE  00                 	db	0
   213  0063EF  00                 	db	0
   214  0063F0  00                 	db	0
   215  0063F1  00                 	db	0
   216  0063F2  00                 	db	0
   217                           
   218                           ;initializer for _GPS_lat
   219  0063F3  20                 	db	32
   220  0063F4  20                 	db	32
   221  0063F5  20                 	db	32
   222  0063F6  20                 	db	32
   223  0063F7  20                 	db	32
   224  0063F8  20                 	db	32
   225  0063F9  20                 	db	32
   226  0063FA  20                 	db	32
   227  0063FB  00                 	db	0
   228  0063FC  00                 	db	0
   229  0063FD  00                 	db	0
   230  0063FE  00                 	db	0
   231  0063FF  00                 	db	0
   232  006400  00                 	db	0
   233  006401  00                 	db	0
   234                           
   235                           ;initializer for _reg_set_LNB_LO_24
   236  006402  19                 	db	25
   237  006403  20                 	db	32
   238  006404  21                 	db	33
   239  006405  27                 	db	39
   240  006406  24                 	db	36
   241  006407  17                 	db	23
   242  006408  29                 	db	41
   243  006409  00                 	db	0
   244  00640A  2A                 	db	42
   245  00640B  EF                 	db	239
   246                           
   247                           	psect	idataBANK2
   248  005F04                     __pidataBANK2:
   249                           	opt callstack 0
   250                           
   251                           ;initializer for _ssd1306_init_commands
   252  005F04  AE                 	db	174
   253  005F05  D5                 	db	213
   254  005F06  80                 	db	128
   255  005F07  A8                 	db	168
   256  005F08  3F                 	db	63
   257  005F09  D3                 	db	211
   258  005F0A  00                 	db	0
   259  005F0B  40                 	db	64
   260  005F0C  8D                 	db	141
   261  005F0D  14                 	db	20
   262  005F0E  20                 	db	32
   263  005F0F  00                 	db	0
   264  005F10  A1                 	db	161
   265  005F11  C8                 	db	200
   266  005F12  DA                 	db	218
   267  005F13  12                 	db	18
   268  005F14  81                 	db	129
   269  005F15  CF                 	db	207
   270  005F16  D9                 	db	217
   271  005F17  F1                 	db	241
   272  005F18  DB                 	db	219
   273  005F19  40                 	db	64
   274  005F1A  A4                 	db	164
   275  005F1B  A6                 	db	166
   276  005F1C  C0                 	db	192
   277  005F1D  A0                 	db	160
   278  005F1E  AF                 	db	175
   279                           
   280                           ;initializer for show_display@old_GPS_lon
   281  005F1F  20                 	db	32
   282  005F20  20                 	db	32
   283  005F21  20                 	db	32
   284  005F22  20                 	db	32
   285  005F23  20                 	db	32
   286  005F24  20                 	db	32
   287  005F25  20                 	db	32
   288  005F26  20                 	db	32
   289  005F27  20                 	db	32
   290  005F28  20                 	db	32
   291  005F29  20                 	db	32
   292  005F2A  20                 	db	32
   293  005F2B  20                 	db	32
   294  005F2C  00                 	db	0
   295  005F2D  00                 	db	0
   296                           
   297                           ;initializer for show_display@old_GPS_lat
   298  005F2E  20                 	db	32
   299  005F2F  20                 	db	32
   300  005F30  20                 	db	32
   301  005F31  20                 	db	32
   302  005F32  20                 	db	32
   303  005F33  20                 	db	32
   304  005F34  20                 	db	32
   305  005F35  20                 	db	32
   306  005F36  20                 	db	32
   307  005F37  20                 	db	32
   308  005F38  20                 	db	32
   309  005F39  20                 	db	32
   310  005F3A  20                 	db	32
   311  005F3B  00                 	db	0
   312  005F3C  00                 	db	0
   313                           
   314                           ;initializer for _reg_set_LNB_LO_27
   315  005F3D  19                 	db	25
   316  005F3E  C0                 	db	192
   317  005F3F  21                 	db	33
   318  005F40  15                 	db	21
   319  005F41  24                 	db	36
   320  005F42  0D                 	db	13
   321  005F43  29                 	db	41
   322  005F44  01                 	db	1
   323  005F45  2A                 	db	42
   324  005F46  17                 	db	23
   325                           
   326                           ;initializer for _reg_set_LNB_LO_26
   327  005F47  19                 	db	25
   328  005F48  20                 	db	32
   329  005F49  21                 	db	33
   330  005F4A  27                 	db	39
   331  005F4B  24                 	db	36
   332  005F4C  19                 	db	25
   333  005F4D  29                 	db	41
   334  005F4E  01                 	db	1
   335  005F4F  2A                 	db	42
   336  005F50  03                 	db	3
   337                           
   338                           ;initializer for _reg_set_LNB_LO_25
   339  005F51  19                 	db	25
   340  005F52  00                 	db	0
   341  005F53  21                 	db	33
   342  005F54  2F                 	db	47
   343  005F55  24                 	db	36
   344  005F56  1D                 	db	29
   345  005F57  29                 	db	41
   346  005F58  00                 	db	0
   347  005F59  2A                 	db	42
   348  005F5A  EF                 	db	239
   349                           
   350                           	psect	mediumconst
   351  007426                     __pmediumconst:
   352                           	opt callstack 0
   353  007426  00                 	db	0
   354  007427                     _font8x8_basic:
   355                           	opt callstack 0
   356  007427  00                 	db	0
   357  007428  00                 	db	0
   358  007429  00                 	db	0
   359  00742A  00                 	db	0
   360  00742B  00                 	db	0
   361  00742C  00                 	db	0
   362  00742D  00                 	db	0
   363  00742E  00                 	db	0
   364  00742F  18                 	db	24
   365  007430  3C                 	db	60
   366  007431  3C                 	db	60
   367  007432  18                 	db	24
   368  007433  18                 	db	24
   369  007434  00                 	db	0
   370  007435  18                 	db	24
   371  007436  00                 	db	0
   372  007437  36                 	db	54
   373  007438  36                 	db	54
   374  007439  00                 	db	0
   375  00743A  00                 	db	0
   376  00743B  00                 	db	0
   377  00743C  00                 	db	0
   378  00743D  00                 	db	0
   379  00743E  00                 	db	0
   380  00743F  36                 	db	54
   381  007440  36                 	db	54
   382  007441  7F                 	db	127
   383  007442  36                 	db	54
   384  007443  7F                 	db	127
   385  007444  36                 	db	54
   386  007445  36                 	db	54
   387  007446  00                 	db	0
   388  007447  0C                 	db	12
   389  007448  3E                 	db	62
   390  007449  03                 	db	3
   391  00744A  1E                 	db	30
   392  00744B  30                 	db	48
   393  00744C  1F                 	db	31
   394  00744D  0C                 	db	12
   395  00744E  00                 	db	0
   396  00744F  00                 	db	0
   397  007450  63                 	db	99
   398  007451  33                 	db	51
   399  007452  18                 	db	24
   400  007453  0C                 	db	12
   401  007454  66                 	db	102
   402  007455  63                 	db	99
   403  007456  00                 	db	0
   404  007457  1C                 	db	28
   405  007458  36                 	db	54
   406  007459  1C                 	db	28
   407  00745A  6E                 	db	110
   408  00745B  3B                 	db	59
   409  00745C  33                 	db	51
   410  00745D  6E                 	db	110
   411  00745E  00                 	db	0
   412  00745F  06                 	db	6
   413  007460  06                 	db	6
   414  007461  03                 	db	3
   415  007462  00                 	db	0
   416  007463  00                 	db	0
   417  007464  00                 	db	0
   418  007465  00                 	db	0
   419  007466  00                 	db	0
   420  007467  18                 	db	24
   421  007468  0C                 	db	12
   422  007469  06                 	db	6
   423  00746A  06                 	db	6
   424  00746B  06                 	db	6
   425  00746C  0C                 	db	12
   426  00746D  18                 	db	24
   427  00746E  00                 	db	0
   428  00746F  06                 	db	6
   429  007470  0C                 	db	12
   430  007471  18                 	db	24
   431  007472  18                 	db	24
   432  007473  18                 	db	24
   433  007474  0C                 	db	12
   434  007475  06                 	db	6
   435  007476  00                 	db	0
   436  007477  00                 	db	0
   437  007478  66                 	db	102
   438  007479  3C                 	db	60
   439  00747A  FF                 	db	255
   440  00747B  3C                 	db	60
   441  00747C  66                 	db	102
   442  00747D  00                 	db	0
   443  00747E  00                 	db	0
   444  00747F  00                 	db	0
   445  007480  0C                 	db	12
   446  007481  0C                 	db	12
   447  007482  3F                 	db	63
   448  007483  0C                 	db	12
   449  007484  0C                 	db	12
   450  007485  00                 	db	0
   451  007486  00                 	db	0
   452  007487  00                 	db	0
   453  007488  00                 	db	0
   454  007489  00                 	db	0
   455  00748A  00                 	db	0
   456  00748B  00                 	db	0
   457  00748C  0C                 	db	12
   458  00748D  0C                 	db	12
   459  00748E  06                 	db	6
   460  00748F  00                 	db	0
   461  007490  00                 	db	0
   462  007491  00                 	db	0
   463  007492  3F                 	db	63
   464  007493  00                 	db	0
   465  007494  00                 	db	0
   466  007495  00                 	db	0
   467  007496  00                 	db	0
   468  007497  00                 	db	0
   469  007498  00                 	db	0
   470  007499  00                 	db	0
   471  00749A  00                 	db	0
   472  00749B  00                 	db	0
   473  00749C  0C                 	db	12
   474  00749D  0C                 	db	12
   475  00749E  00                 	db	0
   476  00749F  60                 	db	96
   477  0074A0  30                 	db	48
   478  0074A1  18                 	db	24
   479  0074A2  0C                 	db	12
   480  0074A3  06                 	db	6
   481  0074A4  03                 	db	3
   482  0074A5  01                 	db	1
   483  0074A6  00                 	db	0
   484  0074A7  3E                 	db	62
   485  0074A8  63                 	db	99
   486  0074A9  73                 	db	115
   487  0074AA  7B                 	db	123
   488  0074AB  6F                 	db	111
   489  0074AC  67                 	db	103
   490  0074AD  3E                 	db	62
   491  0074AE  00                 	db	0
   492  0074AF  0C                 	db	12
   493  0074B0  0E                 	db	14
   494  0074B1  0C                 	db	12
   495  0074B2  0C                 	db	12
   496  0074B3  0C                 	db	12
   497  0074B4  0C                 	db	12
   498  0074B5  3F                 	db	63
   499  0074B6  00                 	db	0
   500  0074B7  1E                 	db	30
   501  0074B8  33                 	db	51
   502  0074B9  30                 	db	48
   503  0074BA  1C                 	db	28
   504  0074BB  06                 	db	6
   505  0074BC  33                 	db	51
   506  0074BD  3F                 	db	63
   507  0074BE  00                 	db	0
   508  0074BF  1E                 	db	30
   509  0074C0  33                 	db	51
   510  0074C1  30                 	db	48
   511  0074C2  1C                 	db	28
   512  0074C3  30                 	db	48
   513  0074C4  33                 	db	51
   514  0074C5  1E                 	db	30
   515  0074C6  00                 	db	0
   516  0074C7  38                 	db	56
   517  0074C8  3C                 	db	60
   518  0074C9  36                 	db	54
   519  0074CA  33                 	db	51
   520  0074CB  7F                 	db	127
   521  0074CC  30                 	db	48
   522  0074CD  78                 	db	120
   523  0074CE  00                 	db	0
   524  0074CF  3F                 	db	63
   525  0074D0  03                 	db	3
   526  0074D1  1F                 	db	31
   527  0074D2  30                 	db	48
   528  0074D3  30                 	db	48
   529  0074D4  33                 	db	51
   530  0074D5  1E                 	db	30
   531  0074D6  00                 	db	0
   532  0074D7  1C                 	db	28
   533  0074D8  06                 	db	6
   534  0074D9  03                 	db	3
   535  0074DA  1F                 	db	31
   536  0074DB  33                 	db	51
   537  0074DC  33                 	db	51
   538  0074DD  1E                 	db	30
   539  0074DE  00                 	db	0
   540  0074DF  3F                 	db	63
   541  0074E0  33                 	db	51
   542  0074E1  30                 	db	48
   543  0074E2  18                 	db	24
   544  0074E3  0C                 	db	12
   545  0074E4  0C                 	db	12
   546  0074E5  0C                 	db	12
   547  0074E6  00                 	db	0
   548  0074E7  1E                 	db	30
   549  0074E8  33                 	db	51
   550  0074E9  33                 	db	51
   551  0074EA  1E                 	db	30
   552  0074EB  33                 	db	51
   553  0074EC  33                 	db	51
   554  0074ED  1E                 	db	30
   555  0074EE  00                 	db	0
   556  0074EF  1E                 	db	30
   557  0074F0  33                 	db	51
   558  0074F1  33                 	db	51
   559  0074F2  3E                 	db	62
   560  0074F3  30                 	db	48
   561  0074F4  18                 	db	24
   562  0074F5  0E                 	db	14
   563  0074F6  00                 	db	0
   564  0074F7  00                 	db	0
   565  0074F8  0C                 	db	12
   566  0074F9  0C                 	db	12
   567  0074FA  00                 	db	0
   568  0074FB  00                 	db	0
   569  0074FC  0C                 	db	12
   570  0074FD  0C                 	db	12
   571  0074FE  00                 	db	0
   572  0074FF  00                 	db	0
   573  007500  0C                 	db	12
   574  007501  0C                 	db	12
   575  007502  00                 	db	0
   576  007503  00                 	db	0
   577  007504  0C                 	db	12
   578  007505  0C                 	db	12
   579  007506  06                 	db	6
   580  007507  18                 	db	24
   581  007508  0C                 	db	12
   582  007509  06                 	db	6
   583  00750A  03                 	db	3
   584  00750B  06                 	db	6
   585  00750C  0C                 	db	12
   586  00750D  18                 	db	24
   587  00750E  00                 	db	0
   588  00750F  00                 	db	0
   589  007510  00                 	db	0
   590  007511  3F                 	db	63
   591  007512  00                 	db	0
   592  007513  00                 	db	0
   593  007514  3F                 	db	63
   594  007515  00                 	db	0
   595  007516  00                 	db	0
   596  007517  06                 	db	6
   597  007518  0C                 	db	12
   598  007519  18                 	db	24
   599  00751A  30                 	db	48
   600  00751B  18                 	db	24
   601  00751C  0C                 	db	12
   602  00751D  06                 	db	6
   603  00751E  00                 	db	0
   604  00751F  1E                 	db	30
   605  007520  33                 	db	51
   606  007521  30                 	db	48
   607  007522  18                 	db	24
   608  007523  0C                 	db	12
   609  007524  00                 	db	0
   610  007525  0C                 	db	12
   611  007526  00                 	db	0
   612  007527  3E                 	db	62
   613  007528  63                 	db	99
   614  007529  7B                 	db	123
   615  00752A  7B                 	db	123
   616  00752B  7B                 	db	123
   617  00752C  03                 	db	3
   618  00752D  1E                 	db	30
   619  00752E  00                 	db	0
   620  00752F  0C                 	db	12
   621  007530  1E                 	db	30
   622  007531  33                 	db	51
   623  007532  33                 	db	51
   624  007533  3F                 	db	63
   625  007534  33                 	db	51
   626  007535  33                 	db	51
   627  007536  00                 	db	0
   628  007537  3F                 	db	63
   629  007538  66                 	db	102
   630  007539  66                 	db	102
   631  00753A  3E                 	db	62
   632  00753B  66                 	db	102
   633  00753C  66                 	db	102
   634  00753D  3F                 	db	63
   635  00753E  00                 	db	0
   636  00753F  3C                 	db	60
   637  007540  66                 	db	102
   638  007541  03                 	db	3
   639  007542  03                 	db	3
   640  007543  03                 	db	3
   641  007544  66                 	db	102
   642  007545  3C                 	db	60
   643  007546  00                 	db	0
   644  007547  1F                 	db	31
   645  007548  36                 	db	54
   646  007549  66                 	db	102
   647  00754A  66                 	db	102
   648  00754B  66                 	db	102
   649  00754C  36                 	db	54
   650  00754D  1F                 	db	31
   651  00754E  00                 	db	0
   652  00754F  7F                 	db	127
   653  007550  46                 	db	70
   654  007551  16                 	db	22
   655  007552  1E                 	db	30
   656  007553  16                 	db	22
   657  007554  46                 	db	70
   658  007555  7F                 	db	127
   659  007556  00                 	db	0
   660  007557  7F                 	db	127
   661  007558  46                 	db	70
   662  007559  16                 	db	22
   663  00755A  1E                 	db	30
   664  00755B  16                 	db	22
   665  00755C  06                 	db	6
   666  00755D  0F                 	db	15
   667  00755E  00                 	db	0
   668  00755F  3C                 	db	60
   669  007560  66                 	db	102
   670  007561  03                 	db	3
   671  007562  03                 	db	3
   672  007563  73                 	db	115
   673  007564  66                 	db	102
   674  007565  7C                 	db	124
   675  007566  00                 	db	0
   676  007567  33                 	db	51
   677  007568  33                 	db	51
   678  007569  33                 	db	51
   679  00756A  3F                 	db	63
   680  00756B  33                 	db	51
   681  00756C  33                 	db	51
   682  00756D  33                 	db	51
   683  00756E  00                 	db	0
   684  00756F  1E                 	db	30
   685  007570  0C                 	db	12
   686  007571  0C                 	db	12
   687  007572  0C                 	db	12
   688  007573  0C                 	db	12
   689  007574  0C                 	db	12
   690  007575  1E                 	db	30
   691  007576  00                 	db	0
   692  007577  78                 	db	120
   693  007578  30                 	db	48
   694  007579  30                 	db	48
   695  00757A  30                 	db	48
   696  00757B  33                 	db	51
   697  00757C  33                 	db	51
   698  00757D  1E                 	db	30
   699  00757E  00                 	db	0
   700  00757F  67                 	db	103
   701  007580  66                 	db	102
   702  007581  36                 	db	54
   703  007582  1E                 	db	30
   704  007583  36                 	db	54
   705  007584  66                 	db	102
   706  007585  67                 	db	103
   707  007586  00                 	db	0
   708  007587  0F                 	db	15
   709  007588  06                 	db	6
   710  007589  06                 	db	6
   711  00758A  06                 	db	6
   712  00758B  46                 	db	70
   713  00758C  66                 	db	102
   714  00758D  7F                 	db	127
   715  00758E  00                 	db	0
   716  00758F  63                 	db	99
   717  007590  77                 	db	119
   718  007591  7F                 	db	127
   719  007592  7F                 	db	127
   720  007593  6B                 	db	107
   721  007594  63                 	db	99
   722  007595  63                 	db	99
   723  007596  00                 	db	0
   724  007597  63                 	db	99
   725  007598  67                 	db	103
   726  007599  6F                 	db	111
   727  00759A  7B                 	db	123
   728  00759B  73                 	db	115
   729  00759C  63                 	db	99
   730  00759D  63                 	db	99
   731  00759E  00                 	db	0
   732  00759F  1C                 	db	28
   733  0075A0  36                 	db	54
   734  0075A1  63                 	db	99
   735  0075A2  63                 	db	99
   736  0075A3  63                 	db	99
   737  0075A4  36                 	db	54
   738  0075A5  1C                 	db	28
   739  0075A6  00                 	db	0
   740  0075A7  3F                 	db	63
   741  0075A8  66                 	db	102
   742  0075A9  66                 	db	102
   743  0075AA  3E                 	db	62
   744  0075AB  06                 	db	6
   745  0075AC  06                 	db	6
   746  0075AD  0F                 	db	15
   747  0075AE  00                 	db	0
   748  0075AF  1E                 	db	30
   749  0075B0  33                 	db	51
   750  0075B1  33                 	db	51
   751  0075B2  33                 	db	51
   752  0075B3  3B                 	db	59
   753  0075B4  1E                 	db	30
   754  0075B5  38                 	db	56
   755  0075B6  00                 	db	0
   756  0075B7  3F                 	db	63
   757  0075B8  66                 	db	102
   758  0075B9  66                 	db	102
   759  0075BA  3E                 	db	62
   760  0075BB  36                 	db	54
   761  0075BC  66                 	db	102
   762  0075BD  67                 	db	103
   763  0075BE  00                 	db	0
   764  0075BF  1E                 	db	30
   765  0075C0  33                 	db	51
   766  0075C1  07                 	db	7
   767  0075C2  0E                 	db	14
   768  0075C3  38                 	db	56
   769  0075C4  33                 	db	51
   770  0075C5  1E                 	db	30
   771  0075C6  00                 	db	0
   772  0075C7  3F                 	db	63
   773  0075C8  2D                 	db	45
   774  0075C9  0C                 	db	12
   775  0075CA  0C                 	db	12
   776  0075CB  0C                 	db	12
   777  0075CC  0C                 	db	12
   778  0075CD  1E                 	db	30
   779  0075CE  00                 	db	0
   780  0075CF  33                 	db	51
   781  0075D0  33                 	db	51
   782  0075D1  33                 	db	51
   783  0075D2  33                 	db	51
   784  0075D3  33                 	db	51
   785  0075D4  33                 	db	51
   786  0075D5  3F                 	db	63
   787  0075D6  00                 	db	0
   788  0075D7  33                 	db	51
   789  0075D8  33                 	db	51
   790  0075D9  33                 	db	51
   791  0075DA  33                 	db	51
   792  0075DB  33                 	db	51
   793  0075DC  1E                 	db	30
   794  0075DD  0C                 	db	12
   795  0075DE  00                 	db	0
   796  0075DF  63                 	db	99
   797  0075E0  63                 	db	99
   798  0075E1  63                 	db	99
   799  0075E2  6B                 	db	107
   800  0075E3  7F                 	db	127
   801  0075E4  77                 	db	119
   802  0075E5  63                 	db	99
   803  0075E6  00                 	db	0
   804  0075E7  63                 	db	99
   805  0075E8  63                 	db	99
   806  0075E9  36                 	db	54
   807  0075EA  1C                 	db	28
   808  0075EB  1C                 	db	28
   809  0075EC  36                 	db	54
   810  0075ED  63                 	db	99
   811  0075EE  00                 	db	0
   812  0075EF  33                 	db	51
   813  0075F0  33                 	db	51
   814  0075F1  33                 	db	51
   815  0075F2  1E                 	db	30
   816  0075F3  0C                 	db	12
   817  0075F4  0C                 	db	12
   818  0075F5  1E                 	db	30
   819  0075F6  00                 	db	0
   820  0075F7  7F                 	db	127
   821  0075F8  63                 	db	99
   822  0075F9  31                 	db	49
   823  0075FA  18                 	db	24
   824  0075FB  4C                 	db	76
   825  0075FC  66                 	db	102
   826  0075FD  7F                 	db	127
   827  0075FE  00                 	db	0
   828  0075FF  1E                 	db	30
   829  007600  06                 	db	6
   830  007601  06                 	db	6
   831  007602  06                 	db	6
   832  007603  06                 	db	6
   833  007604  06                 	db	6
   834  007605  1E                 	db	30
   835  007606  00                 	db	0
   836  007607  03                 	db	3
   837  007608  06                 	db	6
   838  007609  0C                 	db	12
   839  00760A  18                 	db	24
   840  00760B  30                 	db	48
   841  00760C  60                 	db	96
   842  00760D  40                 	db	64
   843  00760E  00                 	db	0
   844  00760F  1E                 	db	30
   845  007610  18                 	db	24
   846  007611  18                 	db	24
   847  007612  18                 	db	24
   848  007613  18                 	db	24
   849  007614  18                 	db	24
   850  007615  1E                 	db	30
   851  007616  00                 	db	0
   852  007617  08                 	db	8
   853  007618  1C                 	db	28
   854  007619  36                 	db	54
   855  00761A  63                 	db	99
   856  00761B  00                 	db	0
   857  00761C  00                 	db	0
   858  00761D  00                 	db	0
   859  00761E  00                 	db	0
   860  00761F  00                 	db	0
   861  007620  00                 	db	0
   862  007621  00                 	db	0
   863  007622  00                 	db	0
   864  007623  00                 	db	0
   865  007624  00                 	db	0
   866  007625  00                 	db	0
   867  007626  FF                 	db	255
   868  007627  0C                 	db	12
   869  007628  0C                 	db	12
   870  007629  18                 	db	24
   871  00762A  00                 	db	0
   872  00762B  00                 	db	0
   873  00762C  00                 	db	0
   874  00762D  00                 	db	0
   875  00762E  00                 	db	0
   876  00762F  00                 	db	0
   877  007630  00                 	db	0
   878  007631  1E                 	db	30
   879  007632  30                 	db	48
   880  007633  3E                 	db	62
   881  007634  33                 	db	51
   882  007635  6E                 	db	110
   883  007636  00                 	db	0
   884  007637  07                 	db	7
   885  007638  06                 	db	6
   886  007639  06                 	db	6
   887  00763A  3E                 	db	62
   888  00763B  66                 	db	102
   889  00763C  66                 	db	102
   890  00763D  3B                 	db	59
   891  00763E  00                 	db	0
   892  00763F  00                 	db	0
   893  007640  00                 	db	0
   894  007641  1E                 	db	30
   895  007642  33                 	db	51
   896  007643  03                 	db	3
   897  007644  33                 	db	51
   898  007645  1E                 	db	30
   899  007646  00                 	db	0
   900  007647  38                 	db	56
   901  007648  30                 	db	48
   902  007649  30                 	db	48
   903  00764A  3E                 	db	62
   904  00764B  33                 	db	51
   905  00764C  33                 	db	51
   906  00764D  6E                 	db	110
   907  00764E  00                 	db	0
   908  00764F  00                 	db	0
   909  007650  00                 	db	0
   910  007651  1E                 	db	30
   911  007652  33                 	db	51
   912  007653  3F                 	db	63
   913  007654  03                 	db	3
   914  007655  1E                 	db	30
   915  007656  00                 	db	0
   916  007657  1C                 	db	28
   917  007658  36                 	db	54
   918  007659  06                 	db	6
   919  00765A  0F                 	db	15
   920  00765B  06                 	db	6
   921  00765C  06                 	db	6
   922  00765D  0F                 	db	15
   923  00765E  00                 	db	0
   924  00765F  00                 	db	0
   925  007660  00                 	db	0
   926  007661  6E                 	db	110
   927  007662  33                 	db	51
   928  007663  33                 	db	51
   929  007664  3E                 	db	62
   930  007665  30                 	db	48
   931  007666  1F                 	db	31
   932  007667  07                 	db	7
   933  007668  06                 	db	6
   934  007669  36                 	db	54
   935  00766A  6E                 	db	110
   936  00766B  66                 	db	102
   937  00766C  66                 	db	102
   938  00766D  67                 	db	103
   939  00766E  00                 	db	0
   940  00766F  0C                 	db	12
   941  007670  00                 	db	0
   942  007671  0E                 	db	14
   943  007672  0C                 	db	12
   944  007673  0C                 	db	12
   945  007674  0C                 	db	12
   946  007675  1E                 	db	30
   947  007676  00                 	db	0
   948  007677  30                 	db	48
   949  007678  00                 	db	0
   950  007679  30                 	db	48
   951  00767A  30                 	db	48
   952  00767B  30                 	db	48
   953  00767C  33                 	db	51
   954  00767D  33                 	db	51
   955  00767E  1E                 	db	30
   956  00767F  07                 	db	7
   957  007680  06                 	db	6
   958  007681  66                 	db	102
   959  007682  36                 	db	54
   960  007683  1E                 	db	30
   961  007684  36                 	db	54
   962  007685  67                 	db	103
   963  007686  00                 	db	0
   964  007687  0E                 	db	14
   965  007688  0C                 	db	12
   966  007689  0C                 	db	12
   967  00768A  0C                 	db	12
   968  00768B  0C                 	db	12
   969  00768C  0C                 	db	12
   970  00768D  1E                 	db	30
   971  00768E  00                 	db	0
   972  00768F  00                 	db	0
   973  007690  00                 	db	0
   974  007691  33                 	db	51
   975  007692  7F                 	db	127
   976  007693  7F                 	db	127
   977  007694  6B                 	db	107
   978  007695  63                 	db	99
   979  007696  00                 	db	0
   980  007697  00                 	db	0
   981  007698  00                 	db	0
   982  007699  1F                 	db	31
   983  00769A  33                 	db	51
   984  00769B  33                 	db	51
   985  00769C  33                 	db	51
   986  00769D  33                 	db	51
   987  00769E  00                 	db	0
   988  00769F  00                 	db	0
   989  0076A0  00                 	db	0
   990  0076A1  1E                 	db	30
   991  0076A2  33                 	db	51
   992  0076A3  33                 	db	51
   993  0076A4  33                 	db	51
   994  0076A5  1E                 	db	30
   995  0076A6  00                 	db	0
   996  0076A7  00                 	db	0
   997  0076A8  00                 	db	0
   998  0076A9  3B                 	db	59
   999  0076AA  66                 	db	102
  1000  0076AB  66                 	db	102
  1001  0076AC  3E                 	db	62
  1002  0076AD  06                 	db	6
  1003  0076AE  0F                 	db	15
  1004  0076AF  00                 	db	0
  1005  0076B0  00                 	db	0
  1006  0076B1  6E                 	db	110
  1007  0076B2  33                 	db	51
  1008  0076B3  33                 	db	51
  1009  0076B4  3E                 	db	62
  1010  0076B5  30                 	db	48
  1011  0076B6  78                 	db	120
  1012  0076B7  00                 	db	0
  1013  0076B8  00                 	db	0
  1014  0076B9  3B                 	db	59
  1015  0076BA  6E                 	db	110
  1016  0076BB  66                 	db	102
  1017  0076BC  06                 	db	6
  1018  0076BD  0F                 	db	15
  1019  0076BE  00                 	db	0
  1020  0076BF  00                 	db	0
  1021  0076C0  00                 	db	0
  1022  0076C1  3E                 	db	62
  1023  0076C2  03                 	db	3
  1024  0076C3  1E                 	db	30
  1025  0076C4  30                 	db	48
  1026  0076C5  1F                 	db	31
  1027  0076C6  00                 	db	0
  1028  0076C7  08                 	db	8
  1029  0076C8  0C                 	db	12
  1030  0076C9  3E                 	db	62
  1031  0076CA  0C                 	db	12
  1032  0076CB  0C                 	db	12
  1033  0076CC  2C                 	db	44
  1034  0076CD  18                 	db	24
  1035  0076CE  00                 	db	0
  1036  0076CF  00                 	db	0
  1037  0076D0  00                 	db	0
  1038  0076D1  33                 	db	51
  1039  0076D2  33                 	db	51
  1040  0076D3  33                 	db	51
  1041  0076D4  33                 	db	51
  1042  0076D5  6E                 	db	110
  1043  0076D6  00                 	db	0
  1044  0076D7  00                 	db	0
  1045  0076D8  00                 	db	0
  1046  0076D9  33                 	db	51
  1047  0076DA  33                 	db	51
  1048  0076DB  33                 	db	51
  1049  0076DC  1E                 	db	30
  1050  0076DD  0C                 	db	12
  1051  0076DE  00                 	db	0
  1052  0076DF  00                 	db	0
  1053  0076E0  00                 	db	0
  1054  0076E1  63                 	db	99
  1055  0076E2  6B                 	db	107
  1056  0076E3  7F                 	db	127
  1057  0076E4  7F                 	db	127
  1058  0076E5  36                 	db	54
  1059  0076E6  00                 	db	0
  1060  0076E7  00                 	db	0
  1061  0076E8  00                 	db	0
  1062  0076E9  63                 	db	99
  1063  0076EA  36                 	db	54
  1064  0076EB  1C                 	db	28
  1065  0076EC  36                 	db	54
  1066  0076ED  63                 	db	99
  1067  0076EE  00                 	db	0
  1068  0076EF  00                 	db	0
  1069  0076F0  00                 	db	0
  1070  0076F1  33                 	db	51
  1071  0076F2  33                 	db	51
  1072  0076F3  33                 	db	51
  1073  0076F4  3E                 	db	62
  1074  0076F5  30                 	db	48
  1075  0076F6  1F                 	db	31
  1076  0076F7  00                 	db	0
  1077  0076F8  00                 	db	0
  1078  0076F9  3F                 	db	63
  1079  0076FA  19                 	db	25
  1080  0076FB  0C                 	db	12
  1081  0076FC  26                 	db	38
  1082  0076FD  3F                 	db	63
  1083  0076FE  00                 	db	0
  1084  0076FF  38                 	db	56
  1085  007700  0C                 	db	12
  1086  007701  0C                 	db	12
  1087  007702  07                 	db	7
  1088  007703  0C                 	db	12
  1089  007704  0C                 	db	12
  1090  007705  38                 	db	56
  1091  007706  00                 	db	0
  1092  007707  18                 	db	24
  1093  007708  18                 	db	24
  1094  007709  18                 	db	24
  1095  00770A  00                 	db	0
  1096  00770B  18                 	db	24
  1097  00770C  18                 	db	24
  1098  00770D  18                 	db	24
  1099  00770E  00                 	db	0
  1100  00770F  07                 	db	7
  1101  007710  0C                 	db	12
  1102  007711  0C                 	db	12
  1103  007712  38                 	db	56
  1104  007713  0C                 	db	12
  1105  007714  0C                 	db	12
  1106  007715  07                 	db	7
  1107  007716  00                 	db	0
  1108  007717  6E                 	db	110
  1109  007718  3B                 	db	59
  1110  007719  00                 	db	0
  1111  00771A  00                 	db	0
  1112  00771B  00                 	db	0
  1113  00771C  00                 	db	0
  1114  00771D  00                 	db	0
  1115  00771E  00                 	db	0
  1116  00771F  00                 	db	0
  1117  007720  00                 	db	0
  1118  007721  00                 	db	0
  1119  007722  00                 	db	0
  1120  007723  00                 	db	0
  1121  007724  00                 	db	0
  1122  007725  00                 	db	0
  1123  007726  00                 	db	0
  1124  007727  00                 	db	0
  1125  007728  00                 	db	0
  1126  007729  00                 	db	0
  1127  00772A  00                 	db	0
  1128  00772B  00                 	db	0
  1129  00772C  00                 	db	0
  1130  00772D  00                 	db	0
  1131  00772E  00                 	db	0
  1132  00772F                     __end_of_font8x8_basic:
  1133                           	opt callstack 0
  1134  00772F  00                 	db	0
  1135  007730  01                 	db	1
  1136  007731  00                 	db	0
  1137  007732  00                 	db	0
  1138  007733  32                 	db	50
  1139  007734  00                 	db	0
  1140  007735  00                 	db	0
  1141  007736  00                 	db	0
  1142  007737  01                 	db	1
  1143  007738  00                 	db	0
  1144  007739  00                 	db	0
  1145  00773A  00                 	db	0
  1146  00773B  01                 	db	1
  1147  00773C  00                 	db	0
  1148  00773D  00                 	db	0
  1149  00773E  00                 	db	0
  1150  00773F  80                 	db	128
  1151  007740  96                 	db	150
  1152  007741  98                 	db	152
  1153  007742  00                 	db	0
  1154  007743  32                 	db	50
  1155  007744  00                 	db	0
  1156  007745  00                 	db	0
  1157  007746  00                 	db	0
  1158  007747  32                 	db	50
  1159  007748  00                 	db	0
  1160  007749  00                 	db	0
  1161  00774A  00                 	db	0
  1162  00774B  00                 	db	0
  1163  00774C  00                 	db	0
  1164  00774D  00                 	db	0
  1165  00774E  00                 	db	0
  1166  00774F  EF                 	db	239
  1167  007750  00                 	db	0
  1168  007751  00                 	db	0
  1169  007752  00                 	db	0
  1170  007753                     __end_of_gps_activate10MHz_payload:
  1171                           	opt callstack 0
  1172  007753                     _out_freq_table:
  1173                           	opt callstack 0
  1174  007753  0003               	dw	3
  1175  007755  0015               	dw	21
  1176  007757  001C               	dw	28
  1177  007759  001D               	dw	29
  1178  00775B  0032               	dw	50
  1179  00775D  0046               	dw	70
  1180  00775F  0090               	dw	144
  1181  007761  0091               	dw	145
  1182  007763  01B3               	dw	435
  1183  007765  01B7               	dw	439
  1184  007767                     __end_of_out_freq_table:
  1185                           	opt callstack 0
  1186  007767                     _PIN_LED2:
  1187                           	opt callstack 0
  1188  007767  AC                 	db	low _PIN_LED2_DEF
  1189  007768  78                 	db	high _PIN_LED2_DEF
  1190  007769                     __end_of_PIN_LED2:
  1191                           	opt callstack 0
  1192  007769                     _PIN_LED1:
  1193                           	opt callstack 0
  1194  007769  B6                 	db	low _PIN_LED1_DEF
  1195  00776A  78                 	db	high _PIN_LED1_DEF
  1196  00776B                     __end_of_PIN_LED1:
  1197                           	opt callstack 0
  1198  00776B                     _PIN_LED0:
  1199                           	opt callstack 0
  1200  00776B  C0                 	db	low _PIN_LED0_DEF
  1201  00776C  78                 	db	high _PIN_LED0_DEF
  1202  00776D                     __end_of_PIN_LED0:
  1203                           	opt callstack 0
  1204  00776D                     _PIN_LED3:
  1205                           	opt callstack 0
  1206  00776D  CA                 	db	low _PIN_LED3_DEF
  1207  00776E  78                 	db	high _PIN_LED3_DEF
  1208  00776F                     __end_of_PIN_LED3:
  1209                           	opt callstack 0
  1210  00776F  7A                 	db	low _PIN_LNB_QRG1_DEF
  1211  007770  78                 	db	high _PIN_LNB_QRG1_DEF
  1212  007771                     __end_of_PIN_LNB_QRG1:
  1213                           	opt callstack 0
  1214  007771  7F                 	db	low _PIN_LNB_QRG2_DEF
  1215  007772  78                 	db	high _PIN_LNB_QRG2_DEF
  1216  007773                     __end_of_PIN_LNB_QRG2:
  1217                           	opt callstack 0
  1218  007773  84                 	db	low _PIN_SJ6_DEF
  1219  007774  78                 	db	high _PIN_SJ6_DEF
  1220  007775                     __end_of_PIN_SJ6:
  1221                           	opt callstack 0
  1222  007775  89                 	db	low _PIN_SJ5_DEF
  1223  007776  78                 	db	high _PIN_SJ5_DEF
  1224  007777                     __end_of_PIN_SJ5:
  1225                           	opt callstack 0
  1226  007777  8E                 	db	low _PIN_SJ4_DEF
  1227  007778  78                 	db	high _PIN_SJ4_DEF
  1228  007779                     __end_of_PIN_SJ4:
  1229                           	opt callstack 0
  1230  007779  93                 	db	low _PIN_SJ3_DEF
  1231  00777A  78                 	db	high _PIN_SJ3_DEF
  1232  00777B                     __end_of_PIN_SJ3:
  1233                           	opt callstack 0
  1234  00777B  98                 	db	low _PIN_USART_RX_DEF
  1235  00777C  78                 	db	high _PIN_USART_RX_DEF
  1236  00777D                     __end_of_PIN_USART_RX:
  1237                           	opt callstack 0
  1238  00777D  9D                 	db	low _PIN_USART_TX_DEF
  1239  00777E  78                 	db	high _PIN_USART_TX_DEF
  1240  00777F                     __end_of_PIN_USART_TX:
  1241                           	opt callstack 0
  1242  00777F  A2                 	db	low _PIN_I2C_SDA_DEF
  1243  007780  78                 	db	high _PIN_I2C_SDA_DEF
  1244  007781                     __end_of_PIN_I2C_SDA:
  1245                           	opt callstack 0
  1246  007781  A7                 	db	low _PIN_I2C_SCL_DEF
  1247  007782  78                 	db	high _PIN_I2C_SCL_DEF
  1248  007783                     __end_of_PIN_I2C_SCL:
  1249                           	opt callstack 0
  1250  007783  C5                 	db	low _PIN_LED_CPU_OK_DEF
  1251  007784  78                 	db	high _PIN_LED_CPU_OK_DEF
  1252  007785                     __end_of_PIN_LED_CPU_OK:
  1253                           	opt callstack 0
  1254  007785  D4                 	db	low _PIN_SI5328_CS_CA_DEF
  1255  007786  78                 	db	high _PIN_SI5328_CS_CA_DEF
  1256  007787                     __end_of_PIN_SI5328_CS_CA:
  1257                           	opt callstack 0
  1258  007787  CF                 	db	low _PIN_LED_SI_LOCK_DEF
  1259  007788  78                 	db	high _PIN_LED_SI_LOCK_DEF
  1260  007789                     __end_of_PIN_LED_SI_LOCK:
  1261                           	opt callstack 0
  1262  007789  D9                 	db	low _PIN_SI5328_LOL_DEF
  1263  00778A  78                 	db	high _PIN_SI5328_LOL_DEF
  1264  00778B                     __end_of_PIN_SI5328_LOL:
  1265                           	opt callstack 0
  1266  00778B  B1                 	db	low _PIN_LED_LNB_GOOD_DEF
  1267  00778C  78                 	db	high _PIN_LED_LNB_GOOD_DEF
  1268  00778D                     __end_of_PIN_LED_LNB_GOOD:
  1269                           	opt callstack 0
  1270  00778D  75                 	db	low _PIN_LNB_FAULT_DEF
  1271  00778E  78                 	db	high _PIN_LNB_FAULT_DEF
  1272  00778F                     __end_of_PIN_LNB_FAULT:
  1273                           	opt callstack 0
  1274  00778F  E3                 	db	low _PIN_SIO_DATA_DEF
  1275  007790  78                 	db	high _PIN_SIO_DATA_DEF
  1276  007791                     __end_of_PIN_SIO_DATA:
  1277                           	opt callstack 0
  1278  007791  DE                 	db	low _PIN_SIO_CLK_DEF
  1279  007792  78                 	db	high _PIN_SIO_CLK_DEF
  1280  007793                     __end_of_PIN_SIO_CLK:
  1281                           	opt callstack 0
  1282  007793  BB                 	db	low _PIN_LED_ADF_LOCK_DEF
  1283  007794  78                 	db	high _PIN_LED_ADF_LOCK_DEF
  1284  007795                     __end_of_PIN_LED_ADF_LOCK:
  1285                           	opt callstack 0
  1286  007795  F2                 	db	low _PIN_ADF_LOCK_DEF
  1287  007796  78                 	db	high _PIN_ADF_LOCK_DEF
  1288  007797                     __end_of_PIN_ADF_LOCK:
  1289                           	opt callstack 0
  1290  007797  ED                 	db	low _PIN_ADF_CE_DEF
  1291  007798  78                 	db	high _PIN_ADF_CE_DEF
  1292  007799                     __end_of_PIN_ADF_CE:
  1293                           	opt callstack 0
  1294  007799  E8                 	db	low _PIN_ADF_LE_DEF
  1295  00779A  78                 	db	high _PIN_ADF_LE_DEF
  1296  00779B                     __end_of_PIN_ADF_LE:
  1297                           	opt callstack 0
  1298  00779B                     _reg_set_univ:
  1299                           	opt callstack 0
  1300  00779B  00                 	db	0
  1301  00779C  54                 	db	84
  1302  00779D  01                 	db	1
  1303  00779E  E4                 	db	228
  1304  00779F  02                 	db	2
  1305  0077A0  42                 	db	66
  1306  0077A1  03                 	db	3
  1307  0077A2  45                 	db	69
  1308  0077A3  04                 	db	4
  1309  0077A4  97                 	db	151
  1310  0077A5  06                 	db	6
  1311  0077A6  15                 	db	21
  1312  0077A7  09                 	db	9
  1313  0077A8  C8                 	db	200
  1314  0077A9  13                 	db	19
  1315  0077AA  28                 	db	40
  1316  0077AB  14                 	db	20
  1317  0077AC  3E                 	db	62
  1318  0077AD  15                 	db	21
  1319  0077AE  FC                 	db	252
  1320  0077AF  37                 	db	55
  1321  0077B0  08                 	db	8
  1322  0077B1  89                 	db	137
  1323  0077B2  01                 	db	1
  1324  0077B3  2B                 	db	43
  1325  0077B4  00                 	db	0
  1326  0077B5  2C                 	db	44
  1327  0077B6  00                 	db	0
  1328  0077B7  2D                 	db	45
  1329  0077B8  04                 	db	4
  1330  0077B9  2E                 	db	46
  1331  0077BA  00                 	db	0
  1332  0077BB  2F                 	db	47
  1333  0077BC  00                 	db	0
  1334  0077BD  30                 	db	48
  1335  0077BE  13                 	db	19
  1336  0077BF  28                 	db	40
  1337  0077C0  C0                 	db	192
  1338  0077C1  29                 	db	41
  1339  0077C2  00                 	db	0
  1340  0077C3  2A                 	db	42
  1341  0077C4  EF                 	db	239
  1342  0077C5  19                 	db	25
  1343  0077C6  20                 	db	32
  1344  0077C7  1F                 	db	31
  1345  0077C8  00                 	db	0
  1346  0077C9  20                 	db	32
  1347  0077CA  00                 	db	0
  1348  0077CB  21                 	db	33
  1349  0077CC  27                 	db	39
  1350  0077CD  22                 	db	34
  1351  0077CE  00                 	db	0
  1352  0077CF  23                 	db	35
  1353  0077D0  00                 	db	0
  1354  0077D1  24                 	db	36
  1355  0077D2  17                 	db	23
  1356  0077D3  8B                 	db	139
  1357  0077D4  FC                 	db	252
  1358  0077D5                     __end_of_reg_set_univ:
  1359                           	opt callstack 0
  1360  0077D5                     _freq_table_27_OPT:
  1361                           	opt callstack 0
  1362  0077D5  BF00               	dw	48896
  1363  0077D7  0013               	dw	19
  1364  0077D9  78B0               	dw	30896
  1365  0077DB  0013               	dw	19
  1366  0077DD  5D58               	dw	23896
  1367  0077DF  0013               	dw	19
  1368  0077E1  5970               	dw	22896
  1369  0077E3  0013               	dw	19
  1370  0077E5  0768               	dw	1896
  1371  0077E7  0013               	dw	19
  1372  0077E9  B948               	dw	47432
  1373  0077EB  0012               	dw	18
  1374  0077ED  9838               	dw	38968
  1375  0077EF  0011               	dw	17
  1376  0077F1  9450               	dw	37968
  1377  0077F3  0011               	dw	17
  1378  0077F5  2780               	dw	10112
  1379  0077F7  000D               	dw	13
  1380  0077F9  17E0               	dw	6112
  1381  0077FB  000D               	dw	13
  1382  0077FD                     __end_of_freq_table_27_OPT:
  1383                           	opt callstack 0
  1384  0077FD                     _freq_table_27_26:
  1385                           	opt callstack 0
  1386  0077FD  BD97               	dw	48535
  1387  0077FF  0010               	dw	16
  1388  007801  7747               	dw	30535
  1389  007803  0010               	dw	16
  1390  007805  5BEF               	dw	23535
  1391  007807  0010               	dw	16
  1392  007809  5807               	dw	22535
  1393  00780B  0010               	dw	16
  1394  00780D  05FF               	dw	1535
  1395  00780F  0010               	dw	16
  1396  007811  B7DF               	dw	47071
  1397  007813  000F               	dw	15
  1398  007815  96CF               	dw	38607
  1399  007817  000E               	dw	14
  1400  007819  92E7               	dw	37607
  1401  00781B  000E               	dw	14
  1402  00781D  2617               	dw	9751
  1403  00781F  000A               	dw	10
  1404  007821  1677               	dw	5751
  1405  007823  000A               	dw	10
  1406  007825                     __end_of_freq_table_27_26:
  1407                           	opt callstack 0
  1408  007825                     _freq_table_25_25:
  1409                           	opt callstack 0
  1410  007825  3B00               	dw	15104
  1411  007827  000B               	dw	11
  1412  007829  F4B0               	dw	62640
  1413  00782B  000A               	dw	10
  1414  00782D  D958               	dw	55640
  1415  00782F  000A               	dw	10
  1416  007831  D570               	dw	54640
  1417  007833  000A               	dw	10
  1418  007835  8368               	dw	33640
  1419  007837  000A               	dw	10
  1420  007839  3548               	dw	13640
  1421  00783B  000A               	dw	10
  1422  00783D  1438               	dw	5176
  1423  00783F  0009               	dw	9
  1424  007841  1050               	dw	4176
  1425  007843  0009               	dw	9
  1426  007845  A380               	dw	41856
  1427  007847  0004               	dw	4
  1428  007849  93E0               	dw	37856
  1429  00784B  0004               	dw	4
  1430  00784D                     __end_of_freq_table_25_25:
  1431                           	opt callstack 0
  1432  00784D                     _freq_table_25_24:
  1433                           	opt callstack 0
  1434  00784D  2E70               	dw	11888
  1435  00784F  0011               	dw	17
  1436  007851  E820               	dw	59424
  1437  007853  0010               	dw	16
  1438  007855  CCC8               	dw	52424
  1439  007857  0010               	dw	16
  1440  007859  C8E0               	dw	51424
  1441  00785B  0010               	dw	16
  1442  00785D  76D8               	dw	30424
  1443  00785F  0010               	dw	16
  1444  007861  28B8               	dw	10424
  1445  007863  0010               	dw	16
  1446  007865  07A8               	dw	1960
  1447  007867  000F               	dw	15
  1448  007869  03C0               	dw	960
  1449  00786B  000F               	dw	15
  1450  00786D  96F0               	dw	38640
  1451  00786F  000A               	dw	10
  1452  007871  8750               	dw	34640
  1453  007873  000A               	dw	10
  1454  007875                     __end_of_freq_table_25_24:
  1455                           	opt callstack 0
  1456  007875                     _PIN_LNB_FAULT_DEF:
  1457                           	opt callstack 0
  1458  007875  82                 	db	130
  1459  007876  0F                 	db	15
  1460  007877  94                 	db	148
  1461  007878  0F                 	db	15
  1462  007879  20                 	db	32
  1463  00787A                     __end_of_PIN_LNB_FAULT_DEF:
  1464                           	opt callstack 0
  1465  00787A                     _PIN_LNB_QRG1_DEF:
  1466                           	opt callstack 0
  1467  00787A  81                 	db	129
  1468  00787B  0F                 	db	15
  1469  00787C  93                 	db	147
  1470  00787D  0F                 	db	15
  1471  00787E  20                 	db	32
  1472  00787F                     __end_of_PIN_LNB_QRG1_DEF:
  1473                           	opt callstack 0
  1474  00787F                     _PIN_LNB_QRG2_DEF:
  1475                           	opt callstack 0
  1476  00787F  81                 	db	129
  1477  007880  0F                 	db	15
  1478  007881  93                 	db	147
  1479  007882  0F                 	db	15
  1480  007883  01                 	db	1
  1481  007884                     __end_of_PIN_LNB_QRG2_DEF:
  1482                           	opt callstack 0
  1483  007884                     _PIN_SJ6_DEF:
  1484                           	opt callstack 0
  1485  007884  81                 	db	129
  1486  007885  0F                 	db	15
  1487  007886  93                 	db	147
  1488  007887  0F                 	db	15
  1489  007888  10                 	db	16
  1490  007889                     __end_of_PIN_SJ6_DEF:
  1491                           	opt callstack 0
  1492  007889                     _PIN_SJ5_DEF:
  1493                           	opt callstack 0
  1494  007889  81                 	db	129
  1495  00788A  0F                 	db	15
  1496  00788B  93                 	db	147
  1497  00788C  0F                 	db	15
  1498  00788D  08                 	db	8
  1499  00788E                     __end_of_PIN_SJ5_DEF:
  1500                           	opt callstack 0
  1501  00788E                     _PIN_SJ4_DEF:
  1502                           	opt callstack 0
  1503  00788E  81                 	db	129
  1504  00788F  0F                 	db	15
  1505  007890  93                 	db	147
  1506  007891  0F                 	db	15
  1507  007892  04                 	db	4
  1508  007893                     __end_of_PIN_SJ4_DEF:
  1509                           	opt callstack 0
  1510  007893                     _PIN_SJ3_DEF:
  1511                           	opt callstack 0
  1512  007893  81                 	db	129
  1513  007894  0F                 	db	15
  1514  007895  93                 	db	147
  1515  007896  0F                 	db	15
  1516  007897  02                 	db	2
  1517  007898                     __end_of_PIN_SJ3_DEF:
  1518                           	opt callstack 0
  1519  007898                     _PIN_USART_RX_DEF:
  1520                           	opt callstack 0
  1521  007898  82                 	db	130
  1522  007899  0F                 	db	15
  1523  00789A  94                 	db	148
  1524  00789B  0F                 	db	15
  1525  00789C  80                 	db	128
  1526  00789D                     __end_of_PIN_USART_RX_DEF:
  1527                           	opt callstack 0
  1528  00789D                     _PIN_USART_TX_DEF:
  1529                           	opt callstack 0
  1530  00789D  82                 	db	130
  1531  00789E  0F                 	db	15
  1532  00789F  94                 	db	148
  1533  0078A0  0F                 	db	15
  1534  0078A1  40                 	db	64
  1535  0078A2                     __end_of_PIN_USART_TX_DEF:
  1536                           	opt callstack 0
  1537  0078A2                     _PIN_I2C_SDA_DEF:
  1538                           	opt callstack 0
  1539  0078A2  82                 	db	130
  1540  0078A3  0F                 	db	15
  1541  0078A4  94                 	db	148
  1542  0078A5  0F                 	db	15
  1543  0078A6  10                 	db	16
  1544  0078A7                     __end_of_PIN_I2C_SDA_DEF:
  1545                           	opt callstack 0
  1546  0078A7                     _PIN_I2C_SCL_DEF:
  1547                           	opt callstack 0
  1548  0078A7  82                 	db	130
  1549  0078A8  0F                 	db	15
  1550  0078A9  94                 	db	148
  1551  0078AA  0F                 	db	15
  1552  0078AB  08                 	db	8
  1553  0078AC                     __end_of_PIN_I2C_SCL_DEF:
  1554                           	opt callstack 0
  1555  0078AC                     _PIN_LED2_DEF:
  1556  0078AC  82                 	db	130
  1557  0078AD  0F                 	db	15
  1558  0078AE  94                 	db	148
  1559  0078AF  0F                 	db	15
  1560  0078B0  04                 	db	4
  1561  0078B1                     __end_of_PIN_LED2_DEF:
  1562                           	opt callstack 0
  1563  0078B1                     _PIN_LED_LNB_GOOD_DEF:
  1564                           	opt callstack 0
  1565  0078B1  82                 	db	130
  1566  0078B2  0F                 	db	15
  1567  0078B3  94                 	db	148
  1568  0078B4  0F                 	db	15
  1569  0078B5  04                 	db	4
  1570  0078B6                     __end_of_PIN_LED_LNB_GOOD_DEF:
  1571                           	opt callstack 0
  1572  0078B6                     _PIN_LED1_DEF:
  1573  0078B6  82                 	db	130
  1574  0078B7  0F                 	db	15
  1575  0078B8  94                 	db	148
  1576  0078B9  0F                 	db	15
  1577  0078BA  02                 	db	2
  1578  0078BB                     __end_of_PIN_LED1_DEF:
  1579                           	opt callstack 0
  1580  0078BB                     _PIN_LED_ADF_LOCK_DEF:
  1581                           	opt callstack 0
  1582  0078BB  82                 	db	130
  1583  0078BC  0F                 	db	15
  1584  0078BD  94                 	db	148
  1585  0078BE  0F                 	db	15
  1586  0078BF  02                 	db	2
  1587  0078C0                     __end_of_PIN_LED_ADF_LOCK_DEF:
  1588                           	opt callstack 0
  1589  0078C0                     _PIN_LED0_DEF:
  1590  0078C0  82                 	db	130
  1591  0078C1  0F                 	db	15
  1592  0078C2  94                 	db	148
  1593  0078C3  0F                 	db	15
  1594  0078C4  01                 	db	1
  1595  0078C5                     __end_of_PIN_LED0_DEF:
  1596                           	opt callstack 0
  1597  0078C5                     _PIN_LED_CPU_OK_DEF:
  1598                           	opt callstack 0
  1599  0078C5  82                 	db	130
  1600  0078C6  0F                 	db	15
  1601  0078C7  94                 	db	148
  1602  0078C8  0F                 	db	15
  1603  0078C9  01                 	db	1
  1604  0078CA                     __end_of_PIN_LED_CPU_OK_DEF:
  1605                           	opt callstack 0
  1606  0078CA                     _PIN_LED3_DEF:
  1607  0078CA  80                 	db	128
  1608  0078CB  0F                 	db	15
  1609  0078CC  92                 	db	146
  1610  0078CD  0F                 	db	15
  1611  0078CE  40                 	db	64
  1612  0078CF                     __end_of_PIN_LED3_DEF:
  1613                           	opt callstack 0
  1614  0078CF                     _PIN_LED_SI_LOCK_DEF:
  1615                           	opt callstack 0
  1616  0078CF  80                 	db	128
  1617  0078D0  0F                 	db	15
  1618  0078D1  92                 	db	146
  1619  0078D2  0F                 	db	15
  1620  0078D3  40                 	db	64
  1621  0078D4                     __end_of_PIN_LED_SI_LOCK_DEF:
  1622                           	opt callstack 0
  1623  0078D4                     _PIN_SI5328_CS_CA_DEF:
  1624                           	opt callstack 0
  1625  0078D4  80                 	db	128
  1626  0078D5  0F                 	db	15
  1627  0078D6  92                 	db	146
  1628  0078D7  0F                 	db	15
  1629  0078D8  80                 	db	128
  1630  0078D9                     __end_of_PIN_SI5328_CS_CA_DEF:
  1631                           	opt callstack 0
  1632  0078D9                     _PIN_SI5328_LOL_DEF:
  1633                           	opt callstack 0
  1634  0078D9  80                 	db	128
  1635  0078DA  0F                 	db	15
  1636  0078DB  92                 	db	146
  1637  0078DC  0F                 	db	15
  1638  0078DD  20                 	db	32
  1639  0078DE                     __end_of_PIN_SI5328_LOL_DEF:
  1640                           	opt callstack 0
  1641  0078DE                     _PIN_SIO_CLK_DEF:
  1642                           	opt callstack 0
  1643  0078DE  80                 	db	128
  1644  0078DF  0F                 	db	15
  1645  0078E0  92                 	db	146
  1646  0078E1  0F                 	db	15
  1647  0078E2  10                 	db	16
  1648  0078E3                     __end_of_PIN_SIO_CLK_DEF:
  1649                           	opt callstack 0
  1650  0078E3                     _PIN_SIO_DATA_DEF:
  1651                           	opt callstack 0
  1652  0078E3  80                 	db	128
  1653  0078E4  0F                 	db	15
  1654  0078E5  92                 	db	146
  1655  0078E6  0F                 	db	15
  1656  0078E7  08                 	db	8
  1657  0078E8                     __end_of_PIN_SIO_DATA_DEF:
  1658                           	opt callstack 0
  1659  0078E8                     _PIN_ADF_LE_DEF:
  1660                           	opt callstack 0
  1661  0078E8  80                 	db	128
  1662  0078E9  0F                 	db	15
  1663  0078EA  92                 	db	146
  1664  0078EB  0F                 	db	15
  1665  0078EC  04                 	db	4
  1666  0078ED                     __end_of_PIN_ADF_LE_DEF:
  1667                           	opt callstack 0
  1668  0078ED                     _PIN_ADF_CE_DEF:
  1669                           	opt callstack 0
  1670  0078ED  80                 	db	128
  1671  0078EE  0F                 	db	15
  1672  0078EF  92                 	db	146
  1673  0078F0  0F                 	db	15
  1674  0078F1  02                 	db	2
  1675  0078F2                     __end_of_PIN_ADF_CE_DEF:
  1676                           	opt callstack 0
  1677  0078F2                     _PIN_ADF_LOCK_DEF:
  1678                           	opt callstack 0
  1679  0078F2  80                 	db	128
  1680  0078F3  0F                 	db	15
  1681  0078F4  92                 	db	146
  1682  0078F5  0F                 	db	15
  1683  0078F6  01                 	db	1
  1684  0078F7                     __end_of_PIN_ADF_LOCK_DEF:
  1685                           	opt callstack 0
  1686  0000                     _OSCTUNE	set	3995
  1687  0000                     _PORTCbits	set	3970
  1688  0000                     _TRISB	set	3987
  1689  0000                     _TRISC	set	3988
  1690  0000                     _PORTC	set	3970
  1691  0000                     _TRISA	set	3986
  1692  0000                     _PORTA	set	3968
  1693  0000                     _PORTB	set	3969
  1694  0000                     _WDTCON	set	4049
  1695  0000                     _RCONbits	set	4048
  1696  0000                     _PIE2	set	4000
  1697  0000                     _PIE1	set	3997
  1698  0000                     _OSCCONbits	set	4051
  1699  0000                     _OSCCON	set	4051
  1700  0000                     _ADCON1bits	set	4033
  1701  0000                     _RCREG	set	4014
  1702  0000                     _TXREG	set	4013
  1703  0000                     _PIE1bits	set	3997
  1704  0000                     _SPBRG	set	4015
  1705  0000                     _SPBRGH	set	4016
  1706  0000                     _BAUDCONbits	set	4024
  1707  0000                     _RCSTAbits	set	4011
  1708  0000                     _TXSTAbits	set	4012
  1709  0000                     _SSPBUF	set	4041
  1710  0000                     _SSPCON2bits	set	4037
  1711  0000                     _PIR1bits	set	3998
  1712  0000                     _SSPADD	set	4040
  1713  0000                     _SSPSTATbits	set	4039
  1714  0000                     _SSPCON1bits	set	4038
  1715  0000                     _INTCON2bits	set	4081
  1716  0000                     _INTCONbits	set	4082
  1717  0078F7                     STR_3:
  1718  0078F7  41                 	db	65	;'A'
  1719  0078F8  44                 	db	68	;'D'
  1720  0078F9  46                 	db	70	;'F'
  1721  0078FA  34                 	db	52	;'4'
  1722  0078FB  33                 	db	51	;'3'
  1723  0078FC  35                 	db	53	;'5'
  1724  0078FD  31                 	db	49	;'1'
  1725  0078FE  3A                 	db	58	;':'
  1726  0078FF  20                 	db	32
  1727  007900  43                 	db	67	;'C'
  1728  007901  61                 	db	97	;'a'
  1729  007902  6E                 	db	110	;'n'
  1730  007903  6E                 	db	110	;'n'
  1731  007904  6F                 	db	111	;'o'
  1732  007905  74                 	db	116	;'t'
  1733  007906  20                 	db	32
  1734  007907  72                 	db	114	;'r'
  1735  007908  65                 	db	101	;'e'
  1736  007909  61                 	db	97	;'a'
  1737  00790A  63                 	db	99	;'c'
  1738  00790B  68                 	db	104	;'h'
  1739  00790C  20                 	db	32
  1740  00790D  50                 	db	80	;'P'
  1741  00790E  46                 	db	70	;'F'
  1742  00790F  44                 	db	68	;'D'
  1743  007910  20                 	db	32
  1744  007911  6F                 	db	111	;'o'
  1745  007912  66                 	db	102	;'f'
  1746  007913  20                 	db	32
  1747  007914  25                 	db	37
  1748  007915  69                 	db	105	;'i'
  1749  007916  20                 	db	32
  1750  007917  6B                 	db	107	;'k'
  1751  007918  48                 	db	72	;'H'
  1752  007919  7A                 	db	122	;'z'
  1753  00791A  20                 	db	32
  1754  00791B  77                 	db	119	;'w'
  1755  00791C  69                 	db	105	;'i'
  1756  00791D  74                 	db	116	;'t'
  1757  00791E  68                 	db	104	;'h'
  1758  00791F  20                 	db	32
  1759  007920  52                 	db	82	;'R'
  1760  007921  45                 	db	69	;'E'
  1761  007922  46                 	db	70	;'F'
  1762  007923  20                 	db	32
  1763  007924  6F                 	db	111	;'o'
  1764  007925  66                 	db	102	;'f'
  1765  007926  20                 	db	32
  1766  007927  25                 	db	37
  1767  007928  69                 	db	105	;'i'
  1768  007929  20                 	db	32
  1769  00792A  6B                 	db	107	;'k'
  1770  00792B  48                 	db	72	;'H'
  1771  00792C  7A                 	db	122	;'z'
  1772  00792D  20                 	db	32
  1773  00792E  28                 	db	40
  1774  00792F  6E                 	db	110	;'n'
  1775  007930  6F                 	db	111	;'o'
  1776  007931  74                 	db	116	;'t'
  1777  007932  20                 	db	32
  1778  007933  64                 	db	100	;'d'
  1779  007934  69                 	db	105	;'i'
  1780  007935  76                 	db	118	;'v'
  1781  007936  69                 	db	105	;'i'
  1782  007937  64                 	db	100	;'d'
  1783  007938  65                 	db	101	;'e'
  1784  007939  61                 	db	97	;'a'
  1785  00793A  62                 	db	98	;'b'
  1786  00793B  6C                 	db	108	;'l'
  1787  00793C  65                 	db	101	;'e'
  1788  00793D  29                 	db	41
  1789  00793E  2E                 	db	46
  1790  00793F  0A                 	db	10
  1791  007940  00                 	db	0
  1792  007941                     STR_4:
  1793  007941  41                 	db	65	;'A'
  1794  007942  44                 	db	68	;'D'
  1795  007943  46                 	db	70	;'F'
  1796  007944  34                 	db	52	;'4'
  1797  007945  33                 	db	51	;'3'
  1798  007946  35                 	db	53	;'5'
  1799  007947  31                 	db	49	;'1'
  1800  007948  3A                 	db	58	;':'
  1801  007949  20                 	db	32
  1802  00794A  43                 	db	67	;'C'
  1803  00794B  61                 	db	97	;'a'
  1804  00794C  6E                 	db	110	;'n'
  1805  00794D  6E                 	db	110	;'n'
  1806  00794E  6F                 	db	111	;'o'
  1807  00794F  74                 	db	116	;'t'
  1808  007950  20                 	db	32
  1809  007951  72                 	db	114	;'r'
  1810  007952  65                 	db	101	;'e'
  1811  007953  61                 	db	97	;'a'
  1812  007954  63                 	db	99	;'c'
  1813  007955  68                 	db	104	;'h'
  1814  007956  20                 	db	32
  1815  007957  50                 	db	80	;'P'
  1816  007958  46                 	db	70	;'F'
  1817  007959  44                 	db	68	;'D'
  1818  00795A  20                 	db	32
  1819  00795B  6F                 	db	111	;'o'
  1820  00795C  66                 	db	102	;'f'
  1821  00795D  20                 	db	32
  1822  00795E  25                 	db	37
  1823  00795F  69                 	db	105	;'i'
  1824  007960  20                 	db	32
  1825  007961  6B                 	db	107	;'k'
  1826  007962  48                 	db	72	;'H'
  1827  007963  7A                 	db	122	;'z'
  1828  007964  20                 	db	32
  1829  007965  77                 	db	119	;'w'
  1830  007966  69                 	db	105	;'i'
  1831  007967  74                 	db	116	;'t'
  1832  007968  68                 	db	104	;'h'
  1833  007969  20                 	db	32
  1834  00796A  52                 	db	82	;'R'
  1835  00796B  45                 	db	69	;'E'
  1836  00796C  46                 	db	70	;'F'
  1837  00796D  20                 	db	32
  1838  00796E  6F                 	db	111	;'o'
  1839  00796F  66                 	db	102	;'f'
  1840  007970  20                 	db	32
  1841  007971  25                 	db	37
  1842  007972  69                 	db	105	;'i'
  1843  007973  20                 	db	32
  1844  007974  6B                 	db	107	;'k'
  1845  007975  48                 	db	72	;'H'
  1846  007976  7A                 	db	122	;'z'
  1847  007977  20                 	db	32
  1848  007978  28                 	db	40
  1849  007979  64                 	db	100	;'d'
  1850  00797A  69                 	db	105	;'i'
  1851  00797B  76                 	db	118	;'v'
  1852  00797C  20                 	db	32
  1853  00797D  74                 	db	116	;'t'
  1854  00797E  6F                 	db	111	;'o'
  1855  00797F  6F                 	db	111	;'o'
  1856  007980  20                 	db	32
  1857  007981  68                 	db	104	;'h'
  1858  007982  69                 	db	105	;'i'
  1859  007983  67                 	db	103	;'g'
  1860  007984  68                 	db	104	;'h'
  1861  007985  29                 	db	41
  1862  007986  2E                 	db	46
  1863  007987  0A                 	db	10
  1864  007988  00                 	db	0
  1865  007989                     STR_65:
  1866  007989  73                 	db	115	;'s'
  1867  00798A  65                 	db	101	;'e'
  1868  00798B  74                 	db	116	;'t'
  1869  00798C  20                 	db	32
  1870  00798D  41                 	db	65	;'A'
  1871  00798E  44                 	db	68	;'D'
  1872  00798F  46                 	db	70	;'F'
  1873  007990  34                 	db	52	;'4'
  1874  007991  33                 	db	51	;'3'
  1875  007992  35                 	db	53	;'5'
  1876  007993  31                 	db	49	;'1'
  1877  007994  20                 	db	32
  1878  007995  66                 	db	102	;'f'
  1879  007996  72                 	db	114	;'r'
  1880  007997  65                 	db	101	;'e'
  1881  007998  71                 	db	113	;'q'
  1882  007999  75                 	db	117	;'u'
  1883  00799A  65                 	db	101	;'e'
  1884  00799B  6E                 	db	110	;'n'
  1885  00799C  63                 	db	99	;'c'
  1886  00799D  79                 	db	121	;'y'
  1887  00799E  20                 	db	32
  1888  00799F  66                 	db	102	;'f'
  1889  0079A0  6F                 	db	111	;'o'
  1890  0079A1  72                 	db	114	;'r'
  1891  0079A2  20                 	db	32
  1892  0079A3  4C                 	db	76	;'L'
  1893  0079A4  4E                 	db	78	;'N'
  1894  0079A5  42                 	db	66	;'B'
  1895  0079A6  4C                 	db	76	;'L'
  1896  0079A7  4F                 	db	79	;'O'
  1897  0079A8  3A                 	db	58	;':'
  1898  0079A9  25                 	db	37
  1899  0079AA  64                 	db	100	;'d'
  1900  0079AB  20                 	db	32
  1901  0079AC  4D                 	db	77	;'M'
  1902  0079AD  48                 	db	72	;'H'
  1903  0079AE  7A                 	db	122	;'z'
  1904  0079AF  0A                 	db	10
  1905  0079B0  73                 	db	115	;'s'
  1906  0079B1  77                 	db	119	;'w'
  1907  0079B2  69                 	db	105	;'i'
  1908  0079B3  74                 	db	116	;'t'
  1909  0079B4  63                 	db	99	;'c'
  1910  0079B5  68                 	db	104	;'h'
  1911  0079B6  20                 	db	32
  1912  0079B7  70                 	db	112	;'p'
  1913  0079B8  6F                 	db	111	;'o'
  1914  0079B9  73                 	db	115	;'s'
  1915  0079BA  20                 	db	32
  1916  0079BB  25                 	db	37
  1917  0079BC  64                 	db	100	;'d'
  1918  0079BD  20                 	db	32
  1919  0079BE  3D                 	db	61	;'='
  1920  0079BF  20                 	db	32
  1921  0079C0  66                 	db	102	;'f'
  1922  0079C1  72                 	db	114	;'r'
  1923  0079C2  65                 	db	101	;'e'
  1924  0079C3  71                 	db	113	;'q'
  1925  0079C4  3A                 	db	58	;':'
  1926  0079C5  25                 	db	37
  1927  0079C6  6C                 	db	108	;'l'
  1928  0079C7  64                 	db	100	;'d'
  1929  0079C8  20                 	db	32
  1930  0079C9  6B                 	db	107	;'k'
  1931  0079CA  48                 	db	72	;'H'
  1932  0079CB  7A                 	db	122	;'z'
  1933  0079CC  0A                 	db	10
  1934  0079CD  00                 	db	0
  1935  0079CE                     STR_5:
  1936  0079CE  41                 	db	65	;'A'
  1937  0079CF  44                 	db	68	;'D'
  1938  0079D0  46                 	db	70	;'F'
  1939  0079D1  34                 	db	52	;'4'
  1940  0079D2  33                 	db	51	;'3'
  1941  0079D3  35                 	db	53	;'5'
  1942  0079D4  31                 	db	49	;'1'
  1943  0079D5  3A                 	db	58	;':'
  1944  0079D6  20                 	db	32
  1945  0079D7  43                 	db	67	;'C'
  1946  0079D8  61                 	db	97	;'a'
  1947  0079D9  6E                 	db	110	;'n'
  1948  0079DA  6E                 	db	110	;'n'
  1949  0079DB  6F                 	db	111	;'o'
  1950  0079DC  74                 	db	116	;'t'
  1951  0079DD  20                 	db	32
  1952  0079DE  75                 	db	117	;'u'
  1953  0079DF  73                 	db	115	;'s'
  1954  0079E0  65                 	db	101	;'e'
  1955  0079E1  20                 	db	32
  1956  0079E2  70                 	db	112	;'p'
  1957  0079E3  66                 	db	102	;'f'
  1958  0079E4  64                 	db	100	;'d'
  1959  0079E5  20                 	db	32
  1960  0079E6  6F                 	db	111	;'o'
  1961  0079E7  66                 	db	102	;'f'
  1962  0079E8  20                 	db	32
  1963  0079E9  25                 	db	37
  1964  0079EA  6C                 	db	108	;'l'
  1965  0079EB  75                 	db	117	;'u'
  1966  0079EC  20                 	db	32
  1967  0079ED  6B                 	db	107	;'k'
  1968  0079EE  48                 	db	72	;'H'
  1969  0079EF  7A                 	db	122	;'z'
  1970  0079F0  20                 	db	32
  1971  0079F1  28                 	db	40
  1972  0079F2  62                 	db	98	;'b'
  1973  0079F3  73                 	db	115	;'s'
  1974  0079F4  63                 	db	99	;'c'
  1975  0079F5  64                 	db	100	;'d'
  1976  0079F6  69                 	db	105	;'i'
  1977  0079F7  76                 	db	118	;'v'
  1978  0079F8  20                 	db	32
  1979  0079F9  74                 	db	116	;'t'
  1980  0079FA  6F                 	db	111	;'o'
  1981  0079FB  6F                 	db	111	;'o'
  1982  0079FC  20                 	db	32
  1983  0079FD  68                 	db	104	;'h'
  1984  0079FE  69                 	db	105	;'i'
  1985  0079FF  67                 	db	103	;'g'
  1986  007A00  68                 	db	104	;'h'
  1987  007A01  29                 	db	41
  1988  007A02  2E                 	db	46
  1989  007A03  0A                 	db	10
  1990  007A04  00                 	db	0
  1991  007A05                     STR_66:
  1992  007A05  41                 	db	65	;'A'
  1993  007A06  44                 	db	68	;'D'
  1994  007A07  46                 	db	70	;'F'
  1995  007A08  34                 	db	52	;'4'
  1996  007A09  33                 	db	51	;'3'
  1997  007A0A  35                 	db	53	;'5'
  1998  007A0B  31                 	db	49	;'1'
  1999  007A0C  20                 	db	32
  2000  007A0D  6C                 	db	108	;'l'
  2001  007A0E  6F                 	db	111	;'o'
  2002  007A0F  63                 	db	99	;'c'
  2003  007A10  6B                 	db	107	;'k'
  2004  007A11  20                 	db	32
  2005  007A12  74                 	db	116	;'t'
  2006  007A13  69                 	db	105	;'i'
  2007  007A14  6D                 	db	109	;'m'
  2008  007A15  65                 	db	101	;'e'
  2009  007A16  64                 	db	100	;'d'
  2010  007A17  20                 	db	32
  2011  007A18  6F                 	db	111	;'o'
  2012  007A19  75                 	db	117	;'u'
  2013  007A1A  74                 	db	116	;'t'
  2014  007A1B  20                 	db	32
  2015  007A1C  61                 	db	97	;'a'
  2016  007A1D  66                 	db	102	;'f'
  2017  007A1E  74                 	db	116	;'t'
  2018  007A1F  65                 	db	101	;'e'
  2019  007A20  72                 	db	114	;'r'
  2020  007A21  20                 	db	32
  2021  007A22  66                 	db	102	;'f'
  2022  007A23  72                 	db	114	;'r'
  2023  007A24  65                 	db	101	;'e'
  2024  007A25  71                 	db	113	;'q'
  2025  007A26  75                 	db	117	;'u'
  2026  007A27  65                 	db	101	;'e'
  2027  007A28  6E                 	db	110	;'n'
  2028  007A29  63                 	db	99	;'c'
  2029  007A2A  79                 	db	121	;'y'
  2030  007A2B  20                 	db	32
  2031  007A2C  73                 	db	115	;'s'
  2032  007A2D  65                 	db	101	;'e'
  2033  007A2E  74                 	db	116	;'t'
  2034  007A2F  74                 	db	116	;'t'
  2035  007A30  69                 	db	105	;'i'
  2036  007A31  6E                 	db	110	;'n'
  2037  007A32  67                 	db	103	;'g'
  2038  007A33  0A                 	db	10
  2039  007A34  00                 	db	0
  2040  007A35                     STR_19:
  2041  007A35  53                 	db	83	;'S'
  2042  007A36  69                 	db	105	;'i'
  2043  007A37  35                 	db	53	;'5'
  2044  007A38  33                 	db	51	;'3'
  2045  007A39  32                 	db	50	;'2'
  2046  007A3A  38                 	db	56	;'8'
  2047  007A3B  20                 	db	32
  2048  007A3C  4C                 	db	76	;'L'
  2049  007A3D  4E                 	db	78	;'N'
  2050  007A3E  42                 	db	66	;'B'
  2051  007A3F  20                 	db	32
  2052  007A40  6F                 	db	111	;'o'
  2053  007A41  75                 	db	117	;'u'
  2054  007A42  74                 	db	116	;'t'
  2055  007A43  70                 	db	112	;'p'
  2056  007A44  75                 	db	117	;'u'
  2057  007A45  74                 	db	116	;'t'
  2058  007A46  20                 	db	32
  2059  007A47  66                 	db	102	;'f'
  2060  007A48  72                 	db	114	;'r'
  2061  007A49  65                 	db	101	;'e'
  2062  007A4A  71                 	db	113	;'q'
  2063  007A4B  75                 	db	117	;'u'
  2064  007A4C  65                 	db	101	;'e'
  2065  007A4D  6E                 	db	110	;'n'
  2066  007A4E  63                 	db	99	;'c'
  2067  007A4F  79                 	db	121	;'y'
  2068  007A50  20                 	db	32
  2069  007A51  73                 	db	115	;'s'
  2070  007A52  65                 	db	101	;'e'
  2071  007A53  74                 	db	116	;'t'
  2072  007A54  20                 	db	32
  2073  007A55  74                 	db	116	;'t'
  2074  007A56  6F                 	db	111	;'o'
  2075  007A57  20                 	db	32
  2076  007A58  25                 	db	37
  2077  007A59  64                 	db	100	;'d'
  2078  007A5A  20                 	db	32
  2079  007A5B  4D                 	db	77	;'M'
  2080  007A5C  48                 	db	72	;'H'
  2081  007A5D  7A                 	db	122	;'z'
  2082  007A5E  0A                 	db	10
  2083  007A5F  00                 	db	0
  2084  007A60                     STR_64:
  2085  007A60  0A                 	db	10
  2086  007A61  57                 	db	87	;'W'
  2087  007A62  65                 	db	101	;'e'
  2088  007A63  6C                 	db	108	;'l'
  2089  007A64  63                 	db	99	;'c'
  2090  007A65  6F                 	db	111	;'o'
  2091  007A66  6D                 	db	109	;'m'
  2092  007A67  65                 	db	101	;'e'
  2093  007A68  20                 	db	32
  2094  007A69  41                 	db	65	;'A'
  2095  007A6A  4D                 	db	77	;'M'
  2096  007A6B  53                 	db	83	;'S'
  2097  007A6C  41                 	db	65	;'A'
  2098  007A6D  54                 	db	84	;'T'
  2099  007A6E  20                 	db	32
  2100  007A6F  44                 	db	68	;'D'
  2101  007A70  4C                 	db	76	;'L'
  2102  007A71  20                 	db	32
  2103  007A72  44                 	db	68	;'D'
  2104  007A73  6F                 	db	111	;'o'
  2105  007A74  77                 	db	119	;'w'
  2106  007A75  6E                 	db	110	;'n'
  2107  007A76  43                 	db	67	;'C'
  2108  007A77  6F                 	db	111	;'o'
  2109  007A78  6E                 	db	110	;'n'
  2110  007A79  76                 	db	118	;'v'
  2111  007A7A  65                 	db	101	;'e'
  2112  007A7B  72                 	db	114	;'r'
  2113  007A7C  74                 	db	116	;'t'
  2114  007A7D  65                 	db	101	;'e'
  2115  007A7E  72                 	db	114	;'r'
  2116  007A7F  20                 	db	32
  2117  007A80  42                 	db	66	;'B'
  2118  007A81  6F                 	db	111	;'o'
  2119  007A82  61                 	db	97	;'a'
  2120  007A83  72                 	db	114	;'r'
  2121  007A84  64                 	db	100	;'d'
  2122  007A85  0A                 	db	10
  2123  007A86  0A                 	db	10
  2124  007A87  00                 	db	0
  2125  007A88                     STR_27:
  2126  007A88  53                 	db	83	;'S'
  2127  007A89  69                 	db	105	;'i'
  2128  007A8A  35                 	db	53	;'5'
  2129  007A8B  33                 	db	51	;'3'
  2130  007A8C  32                 	db	50	;'2'
  2131  007A8D  38                 	db	56	;'8'
  2132  007A8E  3A                 	db	58	;':'
  2133  007A8F  20                 	db	32
  2134  007A90  49                 	db	73	;'I'
  2135  007A91  6E                 	db	110	;'n'
  2136  007A92  70                 	db	112	;'p'
  2137  007A93  75                 	db	117	;'u'
  2138  007A94  74                 	db	116	;'t'
  2139  007A95  20                 	db	32
  2140  007A96  3D                 	db	61	;'='
  2141  007A97  20                 	db	32
  2142  007A98  43                 	db	67	;'C'
  2143  007A99  4B                 	db	75	;'K'
  2144  007A9A  49                 	db	73	;'I'
  2145  007A9B  4E                 	db	78	;'N'
  2146  007A9C  32                 	db	50	;'2'
  2147  007A9D  20                 	db	32
  2148  007A9E  28                 	db	40
  2149  007A9F  54                 	db	84	;'T'
  2150  007AA0  43                 	db	67	;'C'
  2151  007AA1  58                 	db	88	;'X'
  2152  007AA2  4F                 	db	79	;'O'
  2153  007AA3  2F                 	db	47
  2154  007AA4  4F                 	db	79	;'O'
  2155  007AA5  43                 	db	67	;'C'
  2156  007AA6  58                 	db	88	;'X'
  2157  007AA7  4F                 	db	79	;'O'
  2158  007AA8  29                 	db	41
  2159  007AA9  0A                 	db	10
  2160  007AAA  00                 	db	0
  2161  007AAB                     STR_13:
  2162  007AAB  46                 	db	70	;'F'
  2163  007AAC  61                 	db	97	;'a'
  2164  007AAD  69                 	db	105	;'i'
  2165  007AAE  6C                 	db	108	;'l'
  2166  007AAF  65                 	db	101	;'e'
  2167  007AB0  64                 	db	100	;'d'
  2168  007AB1  20                 	db	32
  2169  007AB2  74                 	db	116	;'t'
  2170  007AB3  6F                 	db	111	;'o'
  2171  007AB4  20                 	db	32
  2172  007AB5  63                 	db	99	;'c'
  2173  007AB6  6F                 	db	111	;'o'
  2174  007AB7  6E                 	db	110	;'n'
  2175  007AB8  66                 	db	102	;'f'
  2176  007AB9  69                 	db	105	;'i'
  2177  007ABA  67                 	db	103	;'g'
  2178  007ABB  75                 	db	117	;'u'
  2179  007ABC  72                 	db	114	;'r'
  2180  007ABD  65                 	db	101	;'e'
  2181  007ABE  20                 	db	32
  2182  007ABF  4C                 	db	76	;'L'
  2183  007AC0  4E                 	db	78	;'N'
  2184  007AC1  42                 	db	66	;'B'
  2185  007AC2  20                 	db	32
  2186  007AC3  43                 	db	67	;'C'
  2187  007AC4  68                 	db	104	;'h'
  2188  007AC5  69                 	db	105	;'i'
  2189  007AC6  70                 	db	112	;'p'
  2190  007AC7  20                 	db	32
  2191  007AC8  28                 	db	40
  2192  007AC9  25                 	db	37
  2193  007ACA  69                 	db	105	;'i'
  2194  007ACB  29                 	db	41
  2195  007ACC  0A                 	db	10
  2196  007ACD  00                 	db	0
  2197  007ACE                     STR_25:
  2198  007ACE  53                 	db	83	;'S'
  2199  007ACF  69                 	db	105	;'i'
  2200  007AD0  35                 	db	53	;'5'
  2201  007AD1  33                 	db	51	;'3'
  2202  007AD2  32                 	db	50	;'2'
  2203  007AD3  38                 	db	56	;'8'
  2204  007AD4  3A                 	db	58	;':'
  2205  007AD5  20                 	db	32
  2206  007AD6  49                 	db	73	;'I'
  2207  007AD7  6E                 	db	110	;'n'
  2208  007AD8  70                 	db	112	;'p'
  2209  007AD9  75                 	db	117	;'u'
  2210  007ADA  74                 	db	116	;'t'
  2211  007ADB  20                 	db	32
  2212  007ADC  3D                 	db	61	;'='
  2213  007ADD  20                 	db	32
  2214  007ADE  64                 	db	100	;'d'
  2215  007ADF  69                 	db	105	;'i'
  2216  007AE0  73                 	db	115	;'s'
  2217  007AE1  63                 	db	99	;'c'
  2218  007AE2  6F                 	db	111	;'o'
  2219  007AE3  6E                 	db	110	;'n'
  2220  007AE4  6E                 	db	110	;'n'
  2221  007AE5  65                 	db	101	;'e'
  2222  007AE6  63                 	db	99	;'c'
  2223  007AE7  74                 	db	116	;'t'
  2224  007AE8  65                 	db	101	;'e'
  2225  007AE9  64                 	db	100	;'d'
  2226  007AEA  20                 	db	32
  2227  007AEB  21                 	db	33
  2228  007AEC  0A                 	db	10
  2229  007AED  00                 	db	0
  2230  007AEE                     STR_28:
  2231  007AEE  53                 	db	83	;'S'
  2232  007AEF  69                 	db	105	;'i'
  2233  007AF0  35                 	db	53	;'5'
  2234  007AF1  33                 	db	51	;'3'
  2235  007AF2  32                 	db	50	;'2'
  2236  007AF3  38                 	db	56	;'8'
  2237  007AF4  20                 	db	32
  2238  007AF5  77                 	db	119	;'w'
  2239  007AF6  72                 	db	114	;'r'
  2240  007AF7  69                 	db	105	;'i'
  2241  007AF8  74                 	db	116	;'t'
  2242  007AF9  65                 	db	101	;'e'
  2243  007AFA  5F                 	db	95	;'_'
  2244  007AFB  72                 	db	114	;'r'
  2245  007AFC  65                 	db	101	;'e'
  2246  007AFD  67                 	db	103	;'g'
  2247  007AFE  73                 	db	115	;'s'
  2248  007AFF  65                 	db	101	;'e'
  2249  007B00  74                 	db	116	;'t'
  2250  007B01  20                 	db	32
  2251  007B02  25                 	db	37
  2252  007B03  69                 	db	105	;'i'
  2253  007B04  20                 	db	32
  2254  007B05  65                 	db	101	;'e'
  2255  007B06  72                 	db	114	;'r'
  2256  007B07  72                 	db	114	;'r'
  2257  007B08  6F                 	db	111	;'o'
  2258  007B09  72                 	db	114	;'r'
  2259  007B0A  73                 	db	115	;'s'
  2260  007B0B  2E                 	db	46
  2261  007B0C  0A                 	db	10
  2262  007B0D  00                 	db	0
  2263  007B0E                     STR_26:
  2264  007B0E  53                 	db	83	;'S'
  2265  007B0F  69                 	db	105	;'i'
  2266  007B10  35                 	db	53	;'5'
  2267  007B11  33                 	db	51	;'3'
  2268  007B12  32                 	db	50	;'2'
  2269  007B13  38                 	db	56	;'8'
  2270  007B14  3A                 	db	58	;':'
  2271  007B15  20                 	db	32
  2272  007B16  49                 	db	73	;'I'
  2273  007B17  6E                 	db	110	;'n'
  2274  007B18  70                 	db	112	;'p'
  2275  007B19  75                 	db	117	;'u'
  2276  007B1A  74                 	db	116	;'t'
  2277  007B1B  20                 	db	32
  2278  007B1C  3D                 	db	61	;'='
  2279  007B1D  20                 	db	32
  2280  007B1E  43                 	db	67	;'C'
  2281  007B1F  4B                 	db	75	;'K'
  2282  007B20  49                 	db	73	;'I'
  2283  007B21  4E                 	db	78	;'N'
  2284  007B22  31                 	db	49	;'1'
  2285  007B23  20                 	db	32
  2286  007B24  28                 	db	40
  2287  007B25  47                 	db	71	;'G'
  2288  007B26  50                 	db	80	;'P'
  2289  007B27  53                 	db	83	;'S'
  2290  007B28  29                 	db	41
  2291  007B29  0A                 	db	10
  2292  007B2A  00                 	db	0
  2293  007B2B  0A                 	db	10
  2294  007B2C  3D                 	db	61	;'='
  2295  007B2D  3D                 	db	61	;'='
  2296  007B2E  3D                 	db	61	;'='
  2297  007B2F  20                 	db	32
  2298  007B30  41                 	db	65	;'A'
  2299  007B31  44                 	db	68	;'D'
  2300  007B32  46                 	db	70	;'F'
  2301  007B33  34                 	db	52	;'4'
  2302  007B34  33                 	db	51	;'3'
  2303  007B35  35                 	db	53	;'5'
  2304  007B36  31                 	db	49	;'1'
  2305  007B37  20                 	db	32
  2306  007B38  72                 	db	114	;'r'
  2307  007B39  65                 	db	101	;'e'
  2308  007B3A  67                 	db	103	;'g'
  2309  007B3B  69                 	db	105	;'i'
  2310  007B3C  73                 	db	115	;'s'
  2311  007B3D  74                 	db	116	;'t'
  2312  007B3E  65                 	db	101	;'e'
  2313  007B3F  72                 	db	114	;'r'
  2314  007B40  73                 	db	115	;'s'
  2315  007B41  20                 	db	32
  2316  007B42  3D                 	db	61	;'='
  2317  007B43  3D                 	db	61	;'='
  2318  007B44  3D                 	db	61	;'='
  2319  007B45  0A                 	db	10
  2320  007B46  00                 	db	0
  2321  007B47                     STR_22:
  2322  007B47  53                 	db	83	;'S'
  2323  007B48  69                 	db	105	;'i'
  2324  007B49  35                 	db	53	;'5'
  2325  007B4A  33                 	db	51	;'3'
  2326  007B4B  32                 	db	50	;'2'
  2327  007B4C  38                 	db	56	;'8'
  2328  007B4D  20                 	db	32
  2329  007B4E  49                 	db	73	;'I'
  2330  007B4F  43                 	db	67	;'C'
  2331  007B50  41                 	db	65	;'A'
  2332  007B51  4C                 	db	76	;'L'
  2333  007B52  20                 	db	32
  2334  007B53  77                 	db	119	;'w'
  2335  007B54  72                 	db	114	;'r'
  2336  007B55  69                 	db	105	;'i'
  2337  007B56  74                 	db	116	;'t'
  2338  007B57  65                 	db	101	;'e'
  2339  007B58  20                 	db	32
  2340  007B59  66                 	db	102	;'f'
  2341  007B5A  61                 	db	97	;'a'
  2342  007B5B  69                 	db	105	;'i'
  2343  007B5C  6C                 	db	108	;'l'
  2344  007B5D  65                 	db	101	;'e'
  2345  007B5E  64                 	db	100	;'d'
  2346  007B5F  2E                 	db	46
  2347  007B60  0A                 	db	10
  2348  007B61  00                 	db	0
  2349  007B62                     STR_29:
  2350  007B62  4F                 	db	79	;'O'
  2351  007B63  4C                 	db	76	;'L'
  2352  007B64  45                 	db	69	;'E'
  2353  007B65  44                 	db	68	;'D'
  2354  007B66  20                 	db	32
  2355  007B67  64                 	db	100	;'d'
  2356  007B68  69                 	db	105	;'i'
  2357  007B69  73                 	db	115	;'s'
  2358  007B6A  70                 	db	112	;'p'
  2359  007B6B  6C                 	db	108	;'l'
  2360  007B6C  61                 	db	97	;'a'
  2361  007B6D  79                 	db	121	;'y'
  2362  007B6E  20                 	db	32
  2363  007B6F  6E                 	db	110	;'n'
  2364  007B70  6F                 	db	111	;'o'
  2365  007B71  74                 	db	116	;'t'
  2366  007B72  20                 	db	32
  2367  007B73  66                 	db	102	;'f'
  2368  007B74  6F                 	db	111	;'o'
  2369  007B75  75                 	db	117	;'u'
  2370  007B76  6E                 	db	110	;'n'
  2371  007B77  64                 	db	100	;'d'
  2372  007B78  2E                 	db	46
  2373  007B79  0A                 	db	10
  2374  007B7A  00                 	db	0
  2375  007B7B  41                 	db	65	;'A'
  2376  007B7C  44                 	db	68	;'D'
  2377  007B7D  46                 	db	70	;'F'
  2378  007B7E  34                 	db	52	;'4'
  2379  007B7F  33                 	db	51	;'3'
  2380  007B80  35                 	db	53	;'5'
  2381  007B81  31                 	db	49	;'1'
  2382  007B82  20                 	db	32
  2383  007B83  6E                 	db	110	;'n'
  2384  007B84  6F                 	db	111	;'o'
  2385  007B85  74                 	db	116	;'t'
  2386  007B86  20                 	db	32
  2387  007B87  69                 	db	105	;'i'
  2388  007B88  6E                 	db	110	;'n'
  2389  007B89  69                 	db	105	;'i'
  2390  007B8A  74                 	db	116	;'t'
  2391  007B8B  69                 	db	105	;'i'
  2392  007B8C  61                 	db	97	;'a'
  2393  007B8D  6C                 	db	108	;'l'
  2394  007B8E  69                 	db	105	;'i'
  2395  007B8F  7A                 	db	122	;'z'
  2396  007B90  65                 	db	101	;'e'
  2397  007B91  64                 	db	100	;'d'
  2398  007B92  0A                 	db	10
  2399  007B93  00                 	db	0
  2400  007B94                     STR_21:
  2401  007B94  53                 	db	83	;'S'
  2402  007B95  69                 	db	105	;'i'
  2403  007B96  35                 	db	53	;'5'
  2404  007B97  33                 	db	51	;'3'
  2405  007B98  32                 	db	50	;'2'
  2406  007B99  38                 	db	56	;'8'
  2407  007B9A  20                 	db	32
  2408  007B9B  49                 	db	73	;'I'
  2409  007B9C  43                 	db	67	;'C'
  2410  007B9D  41                 	db	65	;'A'
  2411  007B9E  4C                 	db	76	;'L'
  2412  007B9F  20                 	db	32
  2413  007BA0  69                 	db	105	;'i'
  2414  007BA1  6E                 	db	110	;'n'
  2415  007BA2  20                 	db	32
  2416  007BA3  70                 	db	112	;'p'
  2417  007BA4  72                 	db	114	;'r'
  2418  007BA5  6F                 	db	111	;'o'
  2419  007BA6  63                 	db	99	;'c'
  2420  007BA7  65                 	db	101	;'e'
  2421  007BA8  73                 	db	115	;'s'
  2422  007BA9  73                 	db	115	;'s'
  2423  007BAA  0A                 	db	10
  2424  007BAB  00                 	db	0
  2425  007BAC                     STR_15:
  2426  007BAC  4C                 	db	76	;'L'
  2427  007BAD  4E                 	db	78	;'N'
  2428  007BAE  42                 	db	66	;'B'
  2429  007BAF  48                 	db	72	;'H'
  2430  007BB0  32                 	db	50	;'2'
  2431  007BB1  36                 	db	54	;'6'
  2432  007BB2  50                 	db	80	;'P'
  2433  007BB3  51                 	db	81	;'Q'
  2434  007BB4  52                 	db	82	;'R'
  2435  007BB5  20                 	db	32
  2436  007BB6  65                 	db	101	;'e'
  2437  007BB7  72                 	db	114	;'r'
  2438  007BB8  72                 	db	114	;'r'
  2439  007BB9  6F                 	db	111	;'o'
  2440  007BBA  72                 	db	114	;'r'
  2441  007BBB  3A                 	db	58	;':'
  2442  007BBC  20                 	db	32
  2443  007BBD  25                 	db	37
  2444  007BBE  30                 	db	48	;'0'
  2445  007BBF  32                 	db	50	;'2'
  2446  007BC0  58                 	db	88	;'X'
  2447  007BC1  0A                 	db	10
  2448  007BC2  00                 	db	0
  2449  007BC3  6E                 	db	110	;'n'
  2450  007BC4  6F                 	db	111	;'o'
  2451  007BC5  74                 	db	116	;'t'
  2452  007BC6  20                 	db	32
  2453  007BC7  69                 	db	105	;'i'
  2454  007BC8  6D                 	db	109	;'m'
  2455  007BC9  70                 	db	112	;'p'
  2456  007BCA  6C                 	db	108	;'l'
  2457  007BCB  65                 	db	101	;'e'
  2458  007BCC  6D                 	db	109	;'m'
  2459  007BCD  65                 	db	101	;'e'
  2460  007BCE  6E                 	db	110	;'n'
  2461  007BCF  74                 	db	116	;'t'
  2462  007BD0  65                 	db	101	;'e'
  2463  007BD1  64                 	db	100	;'d'
  2464  007BD2  20                 	db	32
  2465  007BD3  79                 	db	121	;'y'
  2466  007BD4  65                 	db	101	;'e'
  2467  007BD5  74                 	db	116	;'t'
  2468  007BD6  21                 	db	33
  2469  007BD7  0A                 	db	10
  2470  007BD8  00                 	db	0
  2471  007BD9                     STR_30:
  2472  007BD9  4F                 	db	79	;'O'
  2473  007BDA  4C                 	db	76	;'L'
  2474  007BDB  45                 	db	69	;'E'
  2475  007BDC  44                 	db	68	;'D'
  2476  007BDD  20                 	db	32
  2477  007BDE  64                 	db	100	;'d'
  2478  007BDF  69                 	db	105	;'i'
  2479  007BE0  73                 	db	115	;'s'
  2480  007BE1  70                 	db	112	;'p'
  2481  007BE2  6C                 	db	108	;'l'
  2482  007BE3  61                 	db	97	;'a'
  2483  007BE4  79                 	db	121	;'y'
  2484  007BE5  20                 	db	32
  2485  007BE6  66                 	db	102	;'f'
  2486  007BE7  6F                 	db	111	;'o'
  2487  007BE8  75                 	db	117	;'u'
  2488  007BE9  6E                 	db	110	;'n'
  2489  007BEA  64                 	db	100	;'d'
  2490  007BEB  21                 	db	33
  2491  007BEC  0A                 	db	10
  2492  007BED  00                 	db	0
  2493  007BEE                     STR_11:
  2494  007BEE  4C                 	db	76	;'L'
  2495  007BEF  4E                 	db	78	;'N'
  2496  007BF0  42                 	db	66	;'B'
  2497  007BF1  20                 	db	32
  2498  007BF2  43                 	db	67	;'C'
  2499  007BF3  68                 	db	104	;'h'
  2500  007BF4  69                 	db	105	;'i'
  2501  007BF5  70                 	db	112	;'p'
  2502  007BF6  20                 	db	32
  2503  007BF7  6E                 	db	110	;'n'
  2504  007BF8  6F                 	db	111	;'o'
  2505  007BF9  74                 	db	116	;'t'
  2506  007BFA  20                 	db	32
  2507  007BFB  66                 	db	102	;'f'
  2508  007BFC  6F                 	db	111	;'o'
  2509  007BFD  75                 	db	117	;'u'
  2510  007BFE  6E                 	db	110	;'n'
  2511  007BFF  64                 	db	100	;'d'
  2512  007C00  21                 	db	33
  2513  007C01  0A                 	db	10
  2514  007C02  00                 	db	0
  2515  007C03                     STR_12:
  2516  007C03  4C                 	db	76	;'L'
  2517  007C04  4E                 	db	78	;'N'
  2518  007C05  42                 	db	66	;'B'
  2519  007C06  20                 	db	32
  2520  007C07  43                 	db	67	;'C'
  2521  007C08  68                 	db	104	;'h'
  2522  007C09  69                 	db	105	;'i'
  2523  007C0A  70                 	db	112	;'p'
  2524  007C0B  20                 	db	32
  2525  007C0C  63                 	db	99	;'c'
  2526  007C0D  6F                 	db	111	;'o'
  2527  007C0E  6E                 	db	110	;'n'
  2528  007C0F  66                 	db	102	;'f'
  2529  007C10  69                 	db	105	;'i'
  2530  007C11  67                 	db	103	;'g'
  2531  007C12  75                 	db	117	;'u'
  2532  007C13  72                 	db	114	;'r'
  2533  007C14  65                 	db	101	;'e'
  2534  007C15  64                 	db	100	;'d'
  2535  007C16  0A                 	db	10
  2536  007C17  00                 	db	0
  2537  007C18                     STR_18:
  2538  007C18  53                 	db	83	;'S'
  2539  007C19  69                 	db	105	;'i'
  2540  007C1A  35                 	db	53	;'5'
  2541  007C1B  33                 	db	51	;'3'
  2542  007C1C  32                 	db	50	;'2'
  2543  007C1D  38                 	db	56	;'8'
  2544  007C1E  20                 	db	32
  2545  007C1F  6E                 	db	110	;'n'
  2546  007C20  6F                 	db	111	;'o'
  2547  007C21  74                 	db	116	;'t'
  2548  007C22  20                 	db	32
  2549  007C23  66                 	db	102	;'f'
  2550  007C24  6F                 	db	111	;'o'
  2551  007C25  75                 	db	117	;'u'
  2552  007C26  6E                 	db	110	;'n'
  2553  007C27  64                 	db	100	;'d'
  2554  007C28  21                 	db	33
  2555  007C29  0A                 	db	10
  2556  007C2A  00                 	db	0
  2557  007C2B                     STR_1:
  2558  007C2B  41                 	db	65	;'A'
  2559  007C2C  44                 	db	68	;'D'
  2560  007C2D  46                 	db	70	;'F'
  2561  007C2E  34                 	db	52	;'4'
  2562  007C2F  33                 	db	51	;'3'
  2563  007C30  35                 	db	53	;'5'
  2564  007C31  31                 	db	49	;'1'
  2565  007C32  20                 	db	32
  2566  007C33  75                 	db	117	;'u'
  2567  007C34  6E                 	db	110	;'n'
  2568  007C35  6C                 	db	108	;'l'
  2569  007C36  6F                 	db	111	;'o'
  2570  007C37  63                 	db	99	;'c'
  2571  007C38  6B                 	db	107	;'k'
  2572  007C39  65                 	db	101	;'e'
  2573  007C3A  64                 	db	100	;'d'
  2574  007C3B  0A                 	db	10
  2575  007C3C  00                 	db	0
  2576  007C3D                     STR_46:
  2577  007C3D  20                 	db	32
  2578  007C3E  20                 	db	32
  2579  007C3F  20                 	db	32
  2580  007C40  20                 	db	32
  2581  007C41  20                 	db	32
  2582  007C42  20                 	db	32
  2583  007C43  20                 	db	32
  2584  007C44  20                 	db	32
  2585  007C45  20                 	db	32
  2586  007C46  20                 	db	32
  2587  007C47  20                 	db	32
  2588  007C48  20                 	db	32
  2589  007C49  20                 	db	32
  2590  007C4A  20                 	db	32
  2591  007C4B  20                 	db	32
  2592  007C4C  20                 	db	32
  2593  007C4D  00                 	db	0
  2594  007C4E                     STR_38:
  2595  007C4E  53                 	db	83	;'S'
  2596  007C4F  79                 	db	121	;'y'
  2597  007C50  73                 	db	115	;'s'
  2598  007C51  63                 	db	99	;'c'
  2599  007C52  6C                 	db	108	;'l'
  2600  007C53  6F                 	db	111	;'o'
  2601  007C54  63                 	db	99	;'c'
  2602  007C55  6B                 	db	107	;'k'
  2603  007C56  20                 	db	32
  2604  007C57  3A                 	db	58	;':'
  2605  007C58  20                 	db	32
  2606  007C59  20                 	db	32
  2607  007C5A  20                 	db	32
  2608  007C5B  20                 	db	32
  2609  007C5C  20                 	db	32
  2610  007C5D  20                 	db	32
  2611  007C5E  00                 	db	0
  2612  007C5F                     STR_37:
  2613  007C5F  4C                 	db	76	;'L'
  2614  007C60  4E                 	db	78	;'N'
  2615  007C61  42                 	db	66	;'B'
  2616  007C62  2D                 	db	45
  2617  007C63  70                 	db	112	;'p'
  2618  007C64  6F                 	db	111	;'o'
  2619  007C65  77                 	db	119	;'w'
  2620  007C66  65                 	db	101	;'e'
  2621  007C67  72                 	db	114	;'r'
  2622  007C68  3A                 	db	58	;':'
  2623  007C69  20                 	db	32
  2624  007C6A  20                 	db	32
  2625  007C6B  20                 	db	32
  2626  007C6C  20                 	db	32
  2627  007C6D  20                 	db	32
  2628  007C6E  20                 	db	32
  2629  007C6F  00                 	db	0
  2630  007C70                     STR_39:
  2631  007C70  44                 	db	68	;'D'
  2632  007C71  6F                 	db	111	;'o'
  2633  007C72  77                 	db	119	;'w'
  2634  007C73  6E                 	db	110	;'n'
  2635  007C74  6D                 	db	109	;'m'
  2636  007C75  69                 	db	105	;'i'
  2637  007C76  78                 	db	120	;'x'
  2638  007C77  65                 	db	101	;'e'
  2639  007C78  72                 	db	114	;'r'
  2640  007C79  3A                 	db	58	;':'
  2641  007C7A  20                 	db	32
  2642  007C7B  20                 	db	32
  2643  007C7C  20                 	db	32
  2644  007C7D  20                 	db	32
  2645  007C7E  20                 	db	32
  2646  007C7F  20                 	db	32
  2647  007C80  00                 	db	0
  2648  007C81                     STR_47:
  2649  007C81  53                 	db	83	;'S'
  2650  007C82  79                 	db	121	;'y'
  2651  007C83  73                 	db	115	;'s'
  2652  007C84  74                 	db	116	;'t'
  2653  007C85  65                 	db	101	;'e'
  2654  007C86  6D                 	db	109	;'m'
  2655  007C87  20                 	db	32
  2656  007C88  72                 	db	114	;'r'
  2657  007C89  65                 	db	101	;'e'
  2658  007C8A  61                 	db	97	;'a'
  2659  007C8B  64                 	db	100	;'d'
  2660  007C8C  79                 	db	121	;'y'
  2661  007C8D  20                 	db	32
  2662  007C8E  20                 	db	32
  2663  007C8F  20                 	db	32
  2664  007C90  20                 	db	32
  2665  007C91  00                 	db	0
  2666  007C92                     STR_36:
  2667  007C92  53                 	db	83	;'S'
  2668  007C93  79                 	db	121	;'y'
  2669  007C94  73                 	db	115	;'s'
  2670  007C95  74                 	db	116	;'t'
  2671  007C96  65                 	db	101	;'e'
  2672  007C97  6D                 	db	109	;'m'
  2673  007C98  20                 	db	32
  2674  007C99  53                 	db	83	;'S'
  2675  007C9A  45                 	db	69	;'E'
  2676  007C9B  54                 	db	84	;'T'
  2677  007C9C  55                 	db	85	;'U'
  2678  007C9D  50                 	db	80	;'P'
  2679  007C9E  20                 	db	32
  2680  007C9F  2E                 	db	46
  2681  007CA0  2E                 	db	46
  2682  007CA1  2E                 	db	46
  2683  007CA2  00                 	db	0
  2684  007CA3                     STR_31:
  2685  007CA3  41                 	db	65	;'A'
  2686  007CA4  4D                 	db	77	;'M'
  2687  007CA5  53                 	db	83	;'S'
  2688  007CA6  41                 	db	65	;'A'
  2689  007CA7  54                 	db	84	;'T'
  2690  007CA8  2D                 	db	45
  2691  007CA9  44                 	db	68	;'D'
  2692  007CAA  4C                 	db	76	;'L'
  2693  007CAB  20                 	db	32
  2694  007CAC  20                 	db	32
  2695  007CAD  51                 	db	81	;'Q'
  2696  007CAE  4F                 	db	79	;'O'
  2697  007CAF  2D                 	db	45
  2698  007CB0  31                 	db	49	;'1'
  2699  007CB1  30                 	db	48	;'0'
  2700  007CB2  30                 	db	48	;'0'
  2701  007CB3  00                 	db	0
  2702  007CB4                     STR_14:
  2703  007CB4  4C                 	db	76	;'L'
  2704  007CB5  4E                 	db	78	;'N'
  2705  007CB6  42                 	db	66	;'B'
  2706  007CB7  48                 	db	72	;'H'
  2707  007CB8  32                 	db	50	;'2'
  2708  007CB9  36                 	db	54	;'6'
  2709  007CBA  50                 	db	80	;'P'
  2710  007CBB  51                 	db	81	;'Q'
  2711  007CBC  52                 	db	82	;'R'
  2712  007CBD  20                 	db	32
  2713  007CBE  3A                 	db	58	;':'
  2714  007CBF  20                 	db	32
  2715  007CC0  4F                 	db	79	;'O'
  2716  007CC1  4B                 	db	75	;'K'
  2717  007CC2  0A                 	db	10
  2718  007CC3  00                 	db	0
  2719  007CC4                     STR_10:
  2720  007CC4  4C                 	db	76	;'L'
  2721  007CC5  4E                 	db	78	;'N'
  2722  007CC6  42                 	db	66	;'B'
  2723  007CC7  20                 	db	32
  2724  007CC8  43                 	db	67	;'C'
  2725  007CC9  68                 	db	104	;'h'
  2726  007CCA  69                 	db	105	;'i'
  2727  007CCB  70                 	db	112	;'p'
  2728  007CCC  20                 	db	32
  2729  007CCD  66                 	db	102	;'f'
  2730  007CCE  6F                 	db	111	;'o'
  2731  007CCF  75                 	db	117	;'u'
  2732  007CD0  6E                 	db	110	;'n'
  2733  007CD1  64                 	db	100	;'d'
  2734  007CD2  0A                 	db	10
  2735  007CD3  00                 	db	0
  2736  007CD4                     STR_2:
  2737  007CD4  41                 	db	65	;'A'
  2738  007CD5  44                 	db	68	;'D'
  2739  007CD6  46                 	db	70	;'F'
  2740  007CD7  34                 	db	52	;'4'
  2741  007CD8  33                 	db	51	;'3'
  2742  007CD9  35                 	db	53	;'5'
  2743  007CDA  31                 	db	49	;'1'
  2744  007CDB  20                 	db	32
  2745  007CDC  6C                 	db	108	;'l'
  2746  007CDD  6F                 	db	111	;'o'
  2747  007CDE  63                 	db	99	;'c'
  2748  007CDF  6B                 	db	107	;'k'
  2749  007CE0  65                 	db	101	;'e'
  2750  007CE1  64                 	db	100	;'d'
  2751  007CE2  0A                 	db	10
  2752  007CE3  00                 	db	0
  2753  007CE4                     STR_33:
  2754  007CE4  47                 	db	71	;'G'
  2755  007CE5  50                 	db	80	;'P'
  2756  007CE6  53                 	db	83	;'S'
  2757  007CE7  2F                 	db	47
  2758  007CE8  4F                 	db	79	;'O'
  2759  007CE9  43                 	db	67	;'C'
  2760  007CEA  58                 	db	88	;'X'
  2761  007CEB  4F                 	db	79	;'O'
  2762  007CEC  20                 	db	32
  2763  007CED  63                 	db	99	;'c'
  2764  007CEE  6C                 	db	108	;'l'
  2765  007CEF  6F                 	db	111	;'o'
  2766  007CF0  63                 	db	99	;'c'
  2767  007CF1  6B                 	db	107	;'k'
  2768  007CF2  00                 	db	0
  2769  007CF3                     STR_34:
  2770  007CF3  4C                 	db	76	;'L'
  2771  007CF4  4E                 	db	78	;'N'
  2772  007CF5  42                 	db	66	;'B'
  2773  007CF6  20                 	db	32
  2774  007CF7  43                 	db	67	;'C'
  2775  007CF8  6F                 	db	111	;'o'
  2776  007CF9  6E                 	db	110	;'n'
  2777  007CFA  74                 	db	116	;'t'
  2778  007CFB  72                 	db	114	;'r'
  2779  007CFC  6F                 	db	111	;'o'
  2780  007CFD  6C                 	db	108	;'l'
  2781  007CFE  6C                 	db	108	;'l'
  2782  007CFF  65                 	db	101	;'e'
  2783  007D00  72                 	db	114	;'r'
  2784  007D01  00                 	db	0
  2785  007D02                     STR_16:
  2786  007D02  53                 	db	83	;'S'
  2787  007D03  69                 	db	105	;'i'
  2788  007D04  35                 	db	53	;'5'
  2789  007D05  33                 	db	51	;'3'
  2790  007D06  32                 	db	50	;'2'
  2791  007D07  38                 	db	56	;'8'
  2792  007D08  20                 	db	32
  2793  007D09  66                 	db	102	;'f'
  2794  007D0A  6F                 	db	111	;'o'
  2795  007D0B  75                 	db	117	;'u'
  2796  007D0C  6E                 	db	110	;'n'
  2797  007D0D  64                 	db	100	;'d'
  2798  007D0E  2E                 	db	46
  2799  007D0F  0A                 	db	10
  2800  007D10  00                 	db	0
  2801  007D11                     STR_35:
  2802  007D11  44                 	db	68	;'D'
  2803  007D12  6F                 	db	111	;'o'
  2804  007D13  77                 	db	119	;'w'
  2805  007D14  6E                 	db	110	;'n'
  2806  007D15  63                 	db	99	;'c'
  2807  007D16  6F                 	db	111	;'o'
  2808  007D17  6E                 	db	110	;'n'
  2809  007D18  76                 	db	118	;'v'
  2810  007D19  65                 	db	101	;'e'
  2811  007D1A  72                 	db	114	;'r'
  2812  007D1B  74                 	db	116	;'t'
  2813  007D1C  65                 	db	101	;'e'
  2814  007D1D  72                 	db	114	;'r'
  2815  007D1E  00                 	db	0
  2816  007D1F                     STR_23:
  2817  007D1F  50                 	db	80	;'P'
  2818  007D20  4C                 	db	76	;'L'
  2819  007D21  4C                 	db	76	;'L'
  2820  007D22  20                 	db	32
  2821  007D23  75                 	db	117	;'u'
  2822  007D24  6E                 	db	110	;'n'
  2823  007D25  6C                 	db	108	;'l'
  2824  007D26  6F                 	db	111	;'o'
  2825  007D27  63                 	db	99	;'c'
  2826  007D28  6B                 	db	107	;'k'
  2827  007D29  65                 	db	101	;'e'
  2828  007D2A  64                 	db	100	;'d'
  2829  007D2B  0A                 	db	10
  2830  007D2C  00                 	db	0
  2831  007D2D                     STR_20:
  2832  007D2D  53                 	db	83	;'S'
  2833  007D2E  69                 	db	105	;'i'
  2834  007D2F  35                 	db	53	;'5'
  2835  007D30  33                 	db	51	;'3'
  2836  007D31  32                 	db	50	;'2'
  2837  007D32  38                 	db	56	;'8'
  2838  007D33  20                 	db	32
  2839  007D34  69                 	db	105	;'i'
  2840  007D35  63                 	db	99	;'c'
  2841  007D36  61                 	db	97	;'a'
  2842  007D37  6C                 	db	108	;'l'
  2843  007D38  0A                 	db	10
  2844  007D39  00                 	db	0
  2845  007D3A                     STR_17:
  2846  007D3A  53                 	db	83	;'S'
  2847  007D3B  69                 	db	105	;'i'
  2848  007D3C  35                 	db	53	;'5'
  2849  007D3D  33                 	db	51	;'3'
  2850  007D3E  32                 	db	50	;'2'
  2851  007D3F  38                 	db	56	;'8'
  2852  007D40  20                 	db	32
  2853  007D41  69                 	db	105	;'i'
  2854  007D42  6E                 	db	110	;'n'
  2855  007D43  69                 	db	105	;'i'
  2856  007D44  74                 	db	116	;'t'
  2857  007D45  0A                 	db	10
  2858  007D46  00                 	db	0
  2859  007D47                     STR_32:
  2860  007D47  57                 	db	87	;'W'
  2861  007D48  45                 	db	69	;'E'
  2862  007D49  4C                 	db	76	;'L'
  2863  007D4A  43                 	db	67	;'C'
  2864  007D4B  4F                 	db	79	;'O'
  2865  007D4C  4D                 	db	77	;'M'
  2866  007D4D  45                 	db	69	;'E'
  2867  007D4E  20                 	db	32
  2868  007D4F  74                 	db	116	;'t'
  2869  007D50  6F                 	db	111	;'o'
  2870  007D51  3A                 	db	58	;':'
  2871  007D52  00                 	db	0
  2872  007D53                     STR_24:
  2873  007D53  50                 	db	80	;'P'
  2874  007D54  4C                 	db	76	;'L'
  2875  007D55  4C                 	db	76	;'L'
  2876  007D56  20                 	db	32
  2877  007D57  6C                 	db	108	;'l'
  2878  007D58  6F                 	db	111	;'o'
  2879  007D59  63                 	db	99	;'c'
  2880  007D5A  6B                 	db	107	;'k'
  2881  007D5B  65                 	db	101	;'e'
  2882  007D5C  64                 	db	100	;'d'
  2883  007D5D  0A                 	db	10
  2884  007D5E  00                 	db	0
  2885  007D5F                     STR_53:
  2886  007D5F  4F                 	db	79	;'O'
  2887  007D60  55                 	db	85	;'U'
  2888  007D61  54                 	db	84	;'T'
  2889  007D62  3A                 	db	58	;':'
  2890  007D63  20                 	db	32
  2891  007D64  20                 	db	32
  2892  007D65  20                 	db	32
  2893  007D66  20                 	db	32
  2894  007D67  20                 	db	32
  2895  007D68  00                 	db	0
  2896  007D69                     STR_49:
  2897  007D69  20                 	db	32
  2898  007D6A  47                 	db	71	;'G'
  2899  007D6B  50                 	db	80	;'P'
  2900  007D6C  53                 	db	83	;'S'
  2901  007D6D  20                 	db	32
  2902  007D6E  20                 	db	32
  2903  007D6F  00                 	db	0
  2904  007D70                     STR_45:
  2905  007D70  4F                 	db	79	;'O'
  2906  007D71  2F                 	db	47
  2907  007D72  54                 	db	84	;'T'
  2908  007D73  43                 	db	67	;'C'
  2909  007D74  58                 	db	88	;'X'
  2910  007D75  4F                 	db	79	;'O'
  2911  007D76  00                 	db	0
  2912  007D77                     STR_57:
  2913  007D77  32                 	db	50	;'2'
  2914  007D78  35                 	db	53	;'5'
  2915  007D79  2E                 	db	46
  2916  007D7A  34                 	db	52	;'4'
  2917  007D7B  35                 	db	53	;'5'
  2918  007D7C  00                 	db	0
  2919  007D7D                     STR_56:
  2920  007D7D  4C                 	db	76	;'L'
  2921  007D7E  4E                 	db	78	;'N'
  2922  007D7F  42                 	db	66	;'B'
  2923  007D80  3A                 	db	58	;':'
  2924  007D81  00                 	db	0
  2925  007D82                     STR_63:
  2926  007D82  4C                 	db	76	;'L'
  2927  007D83  4F                 	db	79	;'O'
  2928  007D84  4E                 	db	78	;'N'
  2929  007D85  3A                 	db	58	;':'
  2930  007D86  00                 	db	0
  2931  007D87                     STR_62:
  2932  007D87  4C                 	db	76	;'L'
  2933  007D88  41                 	db	65	;'A'
  2934  007D89  54                 	db	84	;'T'
  2935  007D8A  3A                 	db	58	;':'
  2936  007D8B  00                 	db	0
  2937  007D8C                     STR_60:
  2938  007D8C  53                 	db	83	;'S'
  2939  007D8D  41                 	db	65	;'A'
  2940  007D8E  54                 	db	84	;'T'
  2941  007D8F  3A                 	db	58	;':'
  2942  007D90  00                 	db	0
  2943  007D91                     STR_41:
  2944  007D91  4C                 	db	76	;'L'
  2945  007D92  4F                 	db	79	;'O'
  2946  007D93  43                 	db	67	;'C'
  2947  007D94  4B                 	db	75	;'K'
  2948  007D95  00                 	db	0
  2949  007D96                     STR_42:
  2950  007D96  77                 	db	119	;'w'
  2951  007D97  61                 	db	97	;'a'
  2952  007D98  69                 	db	105	;'i'
  2953  007D99  74                 	db	116	;'t'
  2954  007D9A  00                 	db	0
  2955  007D9B                     STR_9:
  2956  007D9B  62                 	db	98	;'b'
  2957  007D9C  6C                 	db	108	;'l'
  2958  007D9D  61                 	db	97	;'a'
  2959  007D9E  0A                 	db	10
  2960  007D9F  00                 	db	0
  2961  007DA0                     STR_58:
  2962  007DA0  2E                 	db	46
  2963  007DA1  30                 	db	48	;'0'
  2964  007DA2  30                 	db	48	;'0'
  2965  007DA3  00                 	db	0
  2966  007DA4                     STR_54:
  2967  007DA4  2E                 	db	46
  2968  007DA5  35                 	db	53	;'5'
  2969  007DA6  35                 	db	53	;'5'
  2970  007DA7  00                 	db	0
  2971  007DA8                     STR_55:
  2972  007DA8  4D                 	db	77	;'M'
  2973  007DA9  48                 	db	72	;'H'
  2974  007DAA  7A                 	db	122	;'z'
  2975  007DAB  00                 	db	0
  2976  007DAC                     STR_85:
  2977  007DAC  6C                 	db	108	;'l'
  2978  007DAD  58                 	db	88	;'X'
  2979  007DAE  00                 	db	0
  2980  007DAF                     STR_67:
  2981  007DAF  6C                 	db	108	;'l'
  2982  007DB0  64                 	db	100	;'d'
  2983  007DB1  00                 	db	0
  2984  007DB2                     STR_71:
  2985  007DB2  6C                 	db	108	;'l'
  2986  007DB3  69                 	db	105	;'i'
  2987  007DB4  00                 	db	0
  2988  007DB5                     STR_76:
  2989  007DB5  6C                 	db	108	;'l'
  2990  007DB6  75                 	db	117	;'u'
  2991  007DB7  00                 	db	0
  2992  007DB8                     STR_81:
  2993  007DB8  6C                 	db	108	;'l'
  2994  007DB9  78                 	db	120	;'x'
  2995  007DBA  00                 	db	0
  2996  007DBB                     STR_40:
  2997  007DBB  4F                 	db	79	;'O'
  2998  007DBC  4B                 	db	75	;'K'
  2999  007DBD  00                 	db	0
  3000  0000                     
  3001                           ; #config settings
  3002  007DBE  00                 	db	0	; dummy byte at the end
  3003  0000                     
  3004                           	psect	cinit
  3005  0059C4                     __pcinit:
  3006                           	opt callstack 0
  3007  0059C4                     start_initialization:
  3008                           	opt callstack 0
  3009  0059C4                     __initialization:
  3010                           	opt callstack 0
  3011                           
  3012                           ; Initialize objects allocated to BANK2 (87 bytes)
  3013                           ; load TBLPTR registers with __pidataBANK2
  3014  0059C4  0E04               	movlw	low __pidataBANK2
  3015  0059C6  6EF6               	movwf	tblptrl,c
  3016  0059C8  0E5F               	movlw	high __pidataBANK2
  3017  0059CA  6EF7               	movwf	tblptrh,c
  3018  0059CC  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  3019  0059CE  6EF8               	movwf	tblptru,c
  3020  0059D0  EE02  F089         	lfsr	0,__pdataBANK2
  3021  0059D4  EE10 F057          	lfsr	1,87
  3022  0059D8                     copy_data0:
  3023  0059D8  0009               	tblrd		*+
  3024  0059DA  CFF5 FFEE          	movff	tablat,postinc0
  3025  0059DE  50E5               	movf	postdec1,w,c
  3026  0059E0  50E1               	movf	fsr1l,w,c
  3027  0059E2  E1FA               	bnz	copy_data0
  3028                           
  3029                           ; Initialize objects allocated to BANK1 (58 bytes)
  3030                           ; load TBLPTR registers with __pidataBANK1
  3031  0059E4  0ED2               	movlw	low __pidataBANK1
  3032  0059E6  6EF6               	movwf	tblptrl,c
  3033  0059E8  0E63               	movlw	high __pidataBANK1
  3034  0059EA  6EF7               	movwf	tblptrh,c
  3035  0059EC  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  3036  0059EE  6EF8               	movwf	tblptru,c
  3037  0059F0  EE01  F0C5         	lfsr	0,__pdataBANK1
  3038  0059F4  EE10 F03A          	lfsr	1,58
  3039  0059F8                     copy_data1:
  3040  0059F8  0009               	tblrd		*+
  3041  0059FA  CFF5 FFEE          	movff	tablat,postinc0
  3042  0059FE  50E5               	movf	postdec1,w,c
  3043  005A00  50E1               	movf	fsr1l,w,c
  3044  005A02  E1FA               	bnz	copy_data1
  3045                           
  3046                           ; Clear objects allocated to BANK3 (213 bytes)
  3047  005A04  EE03  F000         	lfsr	0,__pbssBANK3
  3048  005A08  0ED5               	movlw	213
  3049  005A0A                     clear_0:
  3050  005A0A  6AEE               	clrf	postinc0,c
  3051  005A0C  06E8               	decf	wreg,f,c
  3052  005A0E  E1FD               	bnz	clear_0
  3053                           
  3054                           ; Clear objects allocated to BANK2 (137 bytes)
  3055  005A10  EE02  F000         	lfsr	0,__pbssBANK2
  3056  005A14  0E89               	movlw	137
  3057  005A16                     clear_1:
  3058  005A16  6AEE               	clrf	postinc0,c
  3059  005A18  06E8               	decf	wreg,f,c
  3060  005A1A  E1FD               	bnz	clear_1
  3061                           
  3062                           ; Clear objects allocated to BANK1 (61 bytes)
  3063  005A1C  EE01  F088         	lfsr	0,__pbssBANK1
  3064  005A20  0E3D               	movlw	61
  3065  005A22                     clear_2:
  3066  005A22  6AEE               	clrf	postinc0,c
  3067  005A24  06E8               	decf	wreg,f,c
  3068  005A26  E1FD               	bnz	clear_2
  3069                           
  3070                           ; Clear objects allocated to COMRAM (12 bytes)
  3071  005A28  EE00  F067         	lfsr	0,__pbssCOMRAM
  3072  005A2C  0E0C               	movlw	12
  3073  005A2E                     clear_3:
  3074  005A2E  6AEE               	clrf	postinc0,c
  3075  005A30  06E8               	decf	wreg,f,c
  3076  005A32  E1FD               	bnz	clear_3
  3077  005A34                     end_of_initialization:
  3078                           	opt callstack 0
  3079  005A34                     __end_of__initialization:
  3080                           	opt callstack 0
  3081  005A34  9073               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3082  005A36  9273               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3083  005A38  0E00               	movlw	low (__Lmediumconst shr (0+16))
  3084  005A3A  6EF8               	movwf	tblptru,c
  3085  005A3C  0100               	movlb	0
  3086  005A3E  EF77  F01E         	goto	_main	;jump to C main() function
  3087                           
  3088                           	psect	bssCOMRAM
  3089  000067                     __pbssCOMRAM:
  3090                           	opt callstack 0
  3091  000067                     _prec:
  3092                           	opt callstack 0
  3093  000067                     	ds	2
  3094  000069                     _flags:
  3095                           	opt callstack 0
  3096  000069                     	ds	2
  3097  00006B                     _g_usart_wpos:
  3098                           	opt callstack 0
  3099  00006B                     	ds	2
  3100  00006D                     _g_usart_rpos:
  3101                           	opt callstack 0
  3102  00006D                     	ds	2
  3103  00006F                     _lcd_available:
  3104                           	opt callstack 0
  3105  00006F                     	ds	1
  3106  000070                     _lcd_addr:
  3107                           	opt callstack 0
  3108  000070                     	ds	1
  3109  000071                     _LNB_laststat:
  3110                           	opt callstack 0
  3111  000071                     	ds	1
  3112  000072                     _adf4351_lockstat:
  3113                           	opt callstack 0
  3114  000072                     	ds	1
  3115                           
  3116                           	psect	bssBANK1
  3117  000188                     __pbssBANK1:
  3118                           	opt callstack 0
  3119  000188                     	ds	4
  3120  00018C                     _g_irq_handler_info:
  3121                           	opt callstack 0
  3122  00018C                     	ds	4
  3123  000190                     _g_freq:
  3124                           	opt callstack 0
  3125  000190                     	ds	4
  3126  000194                     _errno:
  3127                           	opt callstack 0
  3128  000194                     	ds	2
  3129  000196                     _nout:
  3130                           	opt callstack 0
  3131  000196                     	ds	2
  3132  000198                     _width:
  3133                           	opt callstack 0
  3134  000198                     	ds	2
  3135  00019A                     send_UBX_string@ubxdel:
  3136                           	opt callstack 0
  3137  00019A                     	ds	2
  3138  00019C                     rx_gps@len_lsb:
  3139                           	opt callstack 0
  3140  00019C                     	ds	2
  3141  00019E                     _p_len:
  3142                           	opt callstack 0
  3143  00019E                     	ds	2
  3144  0001A0                     _ubx_len:
  3145                           	opt callstack 0
  3146  0001A0                     	ds	2
  3147  0001A2                     show_display@old_outqrg:
  3148                           	opt callstack 0
  3149  0001A2                     	ds	2
  3150  0001A4                     _lcd_i2c:
  3151                           	opt callstack 0
  3152  0001A4                     	ds	2
  3153  0001A6                     rx_gps@stat:
  3154                           	opt callstack 0
  3155  0001A6                     	ds	1
  3156  0001A7                     _datamode:
  3157                           	opt callstack 0
  3158  0001A7                     	ds	1
  3159  0001A8                     _ubx_id:
  3160                           	opt callstack 0
  3161  0001A8                     	ds	1
  3162  0001A9                     _ubx_class:
  3163                           	opt callstack 0
  3164  0001A9                     	ds	1
  3165  0001AA                     _ubx_ack:
  3166                           	opt callstack 0
  3167  0001AA                     	ds	1
  3168  0001AB                     show_display@old_lnbqrg:
  3169                           	opt callstack 0
  3170  0001AB                     	ds	1
  3171  0001AC                     _booting:
  3172                           	opt callstack 0
  3173  0001AC                     	ds	1
  3174  0001AD                     _GPS_sat:
  3175                           	opt callstack 0
  3176  0001AD                     	ds	1
  3177  0001AE                     _GPS_lock:
  3178                           	opt callstack 0
  3179  0001AE                     	ds	1
  3180  0001AF                     _si5328locked:
  3181                           	opt callstack 0
  3182  0001AF                     	ds	1
  3183  0001B0                     itoa@buffer:
  3184                           	opt callstack 0
  3185  0001B0                     	ds	12
  3186  0001BC                     _g_i2c_bus:
  3187                           	opt callstack 0
  3188  0001BC                     	ds	8
  3189  0001C4                     _LNB_error:
  3190                           	opt callstack 0
  3191  0001C4                     	ds	1
  3192                           
  3193                           	psect	dataBANK1
  3194  0001C5                     __pdataBANK1:
  3195                           	opt callstack 0
  3196  0001C5                     _LO:
  3197                           	opt callstack 0
  3198  0001C5                     	ds	4
  3199  0001C9                     ssd1306_setpos@F3126:
  3200                           	opt callstack 0
  3201  0001C9                     	ds	3
  3202  0001CC                     	ds	2
  3203  0001CE                     	ds	2
  3204  0001D0                     _gpsbufidx:
  3205                           	opt callstack 0
  3206  0001D0                     	ds	1
  3207  0001D1                     show_display@old_GPS_sat:
  3208                           	opt callstack 0
  3209  0001D1                     	ds	1
  3210  0001D2                     show_display@old_GPS_lock:
  3211                           	opt callstack 0
  3212  0001D2                     	ds	1
  3213  0001D3                     _actualADFswitch:
  3214                           	opt callstack 0
  3215  0001D3                     	ds	1
  3216  0001D4                     check_si5328_status@lastinput:
  3217                           	opt callstack 0
  3218  0001D4                     	ds	1
  3219  0001D5                     check_si5328_status@lastlock:
  3220                           	opt callstack 0
  3221  0001D5                     	ds	1
  3222  0001D6                     _currentLO:
  3223                           	opt callstack 0
  3224  0001D6                     	ds	1
  3225  0001D7                     _GPS_lon:
  3226                           	opt callstack 0
  3227  0001D7                     	ds	15
  3228  0001E6                     _GPS_lat:
  3229                           	opt callstack 0
  3230  0001E6                     	ds	15
  3231  0001F5                     _reg_set_LNB_LO_24:
  3232                           	opt callstack 0
  3233  0001F5                     	ds	10
  3234                           
  3235                           	psect	bssBANK2
  3236  000200                     __pbssBANK2:
  3237                           	opt callstack 0
  3238  000200                     _payload:
  3239                           	opt callstack 0
  3240  000200                     	ds	50
  3241  000232                     _g_adf4351:
  3242                           	opt callstack 0
  3243  000232                     	ds	55
  3244  000269                     _dbuf:
  3245                           	opt callstack 0
  3246  000269                     	ds	32
  3247                           
  3248                           	psect	dataBANK2
  3249  000289                     __pdataBANK2:
  3250                           	opt callstack 0
  3251  000289                     _ssd1306_init_commands:
  3252                           	opt callstack 0
  3253  000289                     	ds	27
  3254  0002A4                     show_display@old_GPS_lon:
  3255                           	opt callstack 0
  3256  0002A4                     	ds	15
  3257  0002B3                     show_display@old_GPS_lat:
  3258                           	opt callstack 0
  3259  0002B3                     	ds	15
  3260  0002C2                     _reg_set_LNB_LO_27:
  3261                           	opt callstack 0
  3262  0002C2                     	ds	10
  3263  0002CC                     _reg_set_LNB_LO_26:
  3264                           	opt callstack 0
  3265  0002CC                     	ds	10
  3266  0002D6                     _reg_set_LNB_LO_25:
  3267                           	opt callstack 0
  3268  0002D6                     	ds	10
  3269                           
  3270                           	psect	bssBANK3
  3271  000300                     __pbssBANK3:
  3272                           	opt callstack 0
  3273  000300                     _g_usart_buf:
  3274                           	opt callstack 0
  3275  000300                     	ds	128
  3276  000380                     _gpsbuf:
  3277                           	opt callstack 0
  3278  000380                     	ds	85
  3279                           
  3280                           	psect	cstackBANK2
  3281  0002E0                     __pcstackBANK2:
  3282                           	opt callstack 0
  3283  0002E0                     show_display@xpos:
  3284                           	opt callstack 0
  3285                           
  3286                           ; 1 bytes @ 0x0
  3287  0002E0                     	ds	1
  3288  0002E1                     show_display@outqrg:
  3289                           	opt callstack 0
  3290                           
  3291                           ; 2 bytes @ 0x1
  3292  0002E1                     	ds	2
  3293  0002E3                     show_display@p:
  3294                           	opt callstack 0
  3295                           
  3296                           ; 2 bytes @ 0x3
  3297  0002E3                     	ds	2
  3298  0002E5                     show_display@lnbqrg:
  3299                           	opt callstack 0
  3300                           
  3301                           ; 1 bytes @ 0x5
  3302  0002E5                     	ds	1
  3303                           
  3304                           	psect	cstackBANK1
  3305  000100                     __pcstackBANK1:
  3306                           	opt callstack 0
  3307  000100                     ??_print_char:
  3308  000100                     lcd_clear_screen@buf:
  3309                           	opt callstack 0
  3310                           
  3311                           ; 128 bytes @ 0x0
  3312  000100                     	ds	16
  3313  000110                     print_string@s:
  3314                           	opt callstack 0
  3315                           
  3316                           ; 2 bytes @ 0x10
  3317  000110                     	ds	2
  3318  000112                     print_string@x:
  3319                           	opt callstack 0
  3320                           
  3321                           ; 1 bytes @ 0x12
  3322  000112                     	ds	1
  3323  000113                     print_string@y:
  3324                           	opt callstack 0
  3325                           
  3326                           ; 1 bytes @ 0x13
  3327  000113                     	ds	1
  3328  000114                     print_string@underline:
  3329                           	opt callstack 0
  3330                           
  3331                           ; 1 bytes @ 0x14
  3332  000114                     	ds	1
  3333  000115                     print_string@i:
  3334                           	opt callstack 0
  3335                           
  3336                           ; 1 bytes @ 0x15
  3337  000115                     	ds	107
  3338  000180                     lcd_clear_screen@ystart:
  3339                           	opt callstack 0
  3340                           
  3341                           ; 1 bytes @ 0x80
  3342  000180                     	ds	1
  3343  000181                     lcd_clear_screen@row:
  3344                           	opt callstack 0
  3345                           
  3346                           ; 1 bytes @ 0x81
  3347  000181                     	ds	1
  3348  000182                     ??_show_display:
  3349  000182                     lcd_init@i2c:
  3350                           	opt callstack 0
  3351                           
  3352                           ; 2 bytes @ 0x82
  3353  000182                     	ds	2
  3354  000184                     lcd_init@addr:
  3355                           	opt callstack 0
  3356                           
  3357                           ; 1 bytes @ 0x84
  3358  000184                     	ds	1
  3359  000185                     lcd_init@res:
  3360                           	opt callstack 0
  3361                           
  3362                           ; 2 bytes @ 0x85
  3363  000185                     	ds	2
  3364  000187                     main@lock:
  3365                           	opt callstack 0
  3366                           
  3367                           ; 1 bytes @ 0x87
  3368  000187                     	ds	1
  3369                           
  3370                           	psect	cstackBANK0
  3371  000080                     __pcstackBANK0:
  3372                           	opt callstack 0
  3373  000080                     vfpfcnvrt@done:
  3374                           	opt callstack 0
  3375                           
  3376                           ; 2 bytes @ 0x0
  3377  000080                     	ds	2
  3378  000082                     _vfpfcnvrt$3280:
  3379                           	opt callstack 0
  3380                           
  3381                           ; 2 bytes @ 0x2
  3382  000082                     	ds	2
  3383  000084                     vfpfcnvrt@ll:
  3384                           	opt callstack 0
  3385                           
  3386                           ; 8 bytes @ 0x4
  3387  000084                     	ds	8
  3388  00008C                     vfpfcnvrt@c:
  3389                           	opt callstack 0
  3390                           
  3391                           ; 1 bytes @ 0xC
  3392  00008C                     	ds	1
  3393  00008D                     vfpfcnvrt@llu:
  3394                           	opt callstack 0
  3395                           
  3396                           ; 8 bytes @ 0xD
  3397  00008D                     	ds	8
  3398  000095                     ?_printf:
  3399                           	opt callstack 0
  3400  000095                     printf@fmt:
  3401                           	opt callstack 0
  3402                           
  3403                           ; 2 bytes @ 0x15
  3404  000095                     	ds	12
  3405  0000A1                     printf@ap:
  3406                           	opt callstack 0
  3407                           
  3408                           ; 2 bytes @ 0x21
  3409  0000A1                     	ds	2
  3410  0000A3                     ?_i2c_read:
  3411                           	opt callstack 0
  3412  0000A3                     check_ADF5341_status@ctx:
  3413                           	opt callstack 0
  3414  0000A3                     adf4351_calc_rcnt_block@ctx:
  3415                           	opt callstack 0
  3416  0000A3                     i2c_read@data:
  3417                           	opt callstack 0
  3418                           
  3419                           ; 2 bytes @ 0x23
  3420  0000A3                     	ds	2
  3421  0000A5                     ??_check_ADF5341_status:
  3422  0000A5                     i2c_read@ack:
  3423                           	opt callstack 0
  3424  0000A5                     adf4351_calc_rcnt_block@bscdiv:
  3425                           	opt callstack 0
  3426                           
  3427                           ; 4 bytes @ 0x25
  3428  0000A5                     	ds	2
  3429  0000A7                     ??_i2c_read:
  3430                           
  3431                           ; 1 bytes @ 0x27
  3432  0000A7                     	ds	1
  3433  0000A8                     check_ADF5341_status@stat:
  3434                           	opt callstack 0
  3435  0000A8                     i2c_read@res:
  3436                           	opt callstack 0
  3437                           
  3438                           ; 2 bytes @ 0x28
  3439  0000A8                     	ds	1
  3440  0000A9                     adf4351_calc_rcnt_block@div:
  3441                           	opt callstack 0
  3442                           
  3443                           ; 2 bytes @ 0x29
  3444  0000A9                     	ds	1
  3445  0000AA                     ?_i2c_transfer_native:
  3446                           	opt callstack 0
  3447  0000AA                     i2c_transfer_native@dev:
  3448                           	opt callstack 0
  3449                           
  3450                           ; 2 bytes @ 0x2A
  3451  0000AA                     	ds	1
  3452  0000AB                     adf4351_set_freq@ctx:
  3453                           	opt callstack 0
  3454                           
  3455                           ; 2 bytes @ 0x2B
  3456  0000AB                     	ds	1
  3457  0000AC                     i2c_transfer_native@msg:
  3458                           	opt callstack 0
  3459                           
  3460                           ; 2 bytes @ 0x2C
  3461  0000AC                     	ds	1
  3462  0000AD                     adf4351_set_freq@freq:
  3463                           	opt callstack 0
  3464                           
  3465                           ; 4 bytes @ 0x2D
  3466  0000AD                     	ds	1
  3467  0000AE                     i2c_transfer_native@num:
  3468                           	opt callstack 0
  3469                           
  3470                           ; 2 bytes @ 0x2E
  3471  0000AE                     	ds	2
  3472  0000B0                     ??_i2c_transfer_native:
  3473                           
  3474                           ; 1 bytes @ 0x30
  3475  0000B0                     	ds	1
  3476  0000B1                     i2c_transfer_native@ack:
  3477                           	opt callstack 0
  3478                           
  3479                           ; 2 bytes @ 0x31
  3480  0000B1                     	ds	2
  3481  0000B3                     ??_setADF4351frequency:
  3482  0000B3                     i2c_transfer_native@inmsg:
  3483                           	opt callstack 0
  3484                           
  3485                           ; 2 bytes @ 0x33
  3486  0000B3                     	ds	2
  3487  0000B5                     setADF4351frequency@force:
  3488                           	opt callstack 0
  3489  0000B5                     i2c_transfer_native@read:
  3490                           	opt callstack 0
  3491                           
  3492                           ; 2 bytes @ 0x35
  3493  0000B5                     	ds	1
  3494  0000B6                     setADF4351frequency@timeout:
  3495                           	opt callstack 0
  3496                           
  3497                           ; 2 bytes @ 0x36
  3498  0000B6                     	ds	1
  3499  0000B7                     i2c_transfer_native@wantack:
  3500                           	opt callstack 0
  3501                           
  3502                           ; 2 bytes @ 0x37
  3503  0000B7                     	ds	1
  3504  0000B8                     setADF4351frequency@p:
  3505                           	opt callstack 0
  3506                           
  3507                           ; 2 bytes @ 0x38
  3508  0000B8                     	ds	1
  3509  0000B9                     i2c_transfer_native@i:
  3510                           	opt callstack 0
  3511                           
  3512                           ; 2 bytes @ 0x39
  3513  0000B9                     	ds	1
  3514  0000BA                     setADF4351frequency@sw:
  3515                           	opt callstack 0
  3516                           
  3517                           ; 1 bytes @ 0x3A
  3518  0000BA                     	ds	1
  3519  0000BB                     i2c_transfer_native@bdata:
  3520                           	opt callstack 0
  3521                           
  3522                           ; 2 bytes @ 0x3B
  3523  0000BB                     	ds	2
  3524  0000BD                     i2c_transfer_native@ctx:
  3525                           	opt callstack 0
  3526                           
  3527                           ; 2 bytes @ 0x3D
  3528  0000BD                     	ds	2
  3529  0000BF                     i2c_transfer_native@left:
  3530                           	opt callstack 0
  3531                           
  3532                           ; 2 bytes @ 0x3F
  3533  0000BF                     	ds	2
  3534  0000C1                     i2c_transfer_native@res:
  3535                           	opt callstack 0
  3536                           
  3537                           ; 2 bytes @ 0x41
  3538  0000C1                     	ds	2
  3539  0000C3                     i2c_transfer_native@pmsg:
  3540                           	opt callstack 0
  3541                           
  3542                           ; 2 bytes @ 0x43
  3543  0000C3                     	ds	2
  3544  0000C5                     ?_i2c_transfer:
  3545                           	opt callstack 0
  3546  0000C5                     i2c_transfer@dev:
  3547                           	opt callstack 0
  3548                           
  3549                           ; 2 bytes @ 0x45
  3550  0000C5                     	ds	2
  3551  0000C7                     i2c_transfer@msg:
  3552                           	opt callstack 0
  3553                           
  3554                           ; 2 bytes @ 0x47
  3555  0000C7                     	ds	2
  3556  0000C9                     i2c_transfer@num:
  3557                           	opt callstack 0
  3558                           
  3559                           ; 2 bytes @ 0x49
  3560  0000C9                     	ds	2
  3561  0000CB                     ?_i2c_probe_addr:
  3562                           	opt callstack 0
  3563  0000CB                     ?_smbus8_write_byte:
  3564                           	opt callstack 0
  3565  0000CB                     ?_smbus8_read_byte:
  3566                           	opt callstack 0
  3567  0000CB                     i2c_probe_addr@dev:
  3568                           	opt callstack 0
  3569  0000CB                     smbus8_write_byte@dev:
  3570                           	opt callstack 0
  3571  0000CB                     smbus8_write_data@dev:
  3572                           	opt callstack 0
  3573  0000CB                     smbus8_read_byte@dev:
  3574                           	opt callstack 0
  3575                           
  3576                           ; 2 bytes @ 0x4B
  3577  0000CB                     	ds	2
  3578  0000CD                     i2c_probe_addr@addr:
  3579                           	opt callstack 0
  3580  0000CD                     smbus8_write_byte@addr:
  3581                           	opt callstack 0
  3582  0000CD                     smbus8_write_data@addr:
  3583                           	opt callstack 0
  3584  0000CD                     smbus8_read_byte@addr:
  3585                           	opt callstack 0
  3586                           
  3587                           ; 1 bytes @ 0x4D
  3588  0000CD                     	ds	1
  3589  0000CE                     smbus8_write_byte@reg:
  3590                           	opt callstack 0
  3591  0000CE                     smbus8_write_data@reg:
  3592                           	opt callstack 0
  3593  0000CE                     smbus8_read_byte@reg:
  3594                           	opt callstack 0
  3595  0000CE                     i2c_probe_addr@msg:
  3596                           	opt callstack 0
  3597                           
  3598                           ; 7 bytes @ 0x4E
  3599  0000CE                     	ds	1
  3600  0000CF                     smbus8_write_byte@data:
  3601                           	opt callstack 0
  3602  0000CF                     smbus8_write_data@data:
  3603                           	opt callstack 0
  3604  0000CF                     smbus8_read_byte@data:
  3605                           	opt callstack 0
  3606                           
  3607                           ; 2 bytes @ 0x4F
  3608  0000CF                     	ds	1
  3609  0000D0                     smbus8_write_byte@tmp:
  3610                           	opt callstack 0
  3611                           
  3612                           ; 2 bytes @ 0x50
  3613  0000D0                     	ds	1
  3614  0000D1                     smbus8_write_data@len:
  3615                           	opt callstack 0
  3616  0000D1                     smbus8_read_byte@msg:
  3617                           	opt callstack 0
  3618                           
  3619                           ; 14 bytes @ 0x51
  3620  0000D1                     	ds	1
  3621  0000D2                     smbus8_write_byte@msg:
  3622                           	opt callstack 0
  3623                           
  3624                           ; 7 bytes @ 0x52
  3625  0000D2                     	ds	1
  3626  0000D3                     smbus8_write_data@msg:
  3627                           	opt callstack 0
  3628                           
  3629                           ; 14 bytes @ 0x53
  3630  0000D3                     	ds	6
  3631  0000D9                     ssd1306_commandbyte@cmd:
  3632                           	opt callstack 0
  3633  0000D9                     si5328_perform_ical@i2c:
  3634                           	opt callstack 0
  3635  0000D9                     write_regset@i2c:
  3636                           	opt callstack 0
  3637                           
  3638                           ; 2 bytes @ 0x59
  3639  0000D9                     	ds	2
  3640  0000DB                     si5328_perform_ical@addr:
  3641                           	opt callstack 0
  3642  0000DB                     write_regset@addr:
  3643                           	opt callstack 0
  3644                           
  3645                           ; 1 bytes @ 0x5B
  3646  0000DB                     	ds	1
  3647  0000DC                     write_regset@set:
  3648                           	opt callstack 0
  3649                           
  3650                           ; 2 bytes @ 0x5C
  3651  0000DC                     	ds	2
  3652  0000DE                     write_regset@len:
  3653                           	opt callstack 0
  3654                           
  3655                           ; 2 bytes @ 0x5E
  3656  0000DE                     	ds	1
  3657  0000DF                     lnb_do_configure@i2c:
  3658                           	opt callstack 0
  3659  0000DF                     check_LNB_status@i2c:
  3660                           	opt callstack 0
  3661  0000DF                     read_reg@i2c:
  3662                           	opt callstack 0
  3663                           
  3664                           ; 2 bytes @ 0x5F
  3665  0000DF                     	ds	1
  3666  0000E0                     ??_write_regset:
  3667                           
  3668                           ; 1 bytes @ 0x60
  3669  0000E0                     	ds	1
  3670  0000E1                     lnb_do_configure@addr:
  3671                           	opt callstack 0
  3672  0000E1                     check_LNB_status@addr:
  3673                           	opt callstack 0
  3674  0000E1                     read_reg@addr:
  3675                           	opt callstack 0
  3676  0000E1                     ssd1306_command@cmd:
  3677                           	opt callstack 0
  3678  0000E1                     ssd1306_data@data:
  3679                           	opt callstack 0
  3680                           
  3681                           ; 2 bytes @ 0x61
  3682  0000E1                     	ds	1
  3683  0000E2                     ??_check_LNB_status:
  3684  0000E2                     lnb_do_configure@value:
  3685                           	opt callstack 0
  3686  0000E2                     read_reg@reg:
  3687                           	opt callstack 0
  3688  0000E2                     write_regset@errors:
  3689                           	opt callstack 0
  3690                           
  3691                           ; 2 bytes @ 0x62
  3692  0000E2                     	ds	1
  3693  0000E3                     lnb_do_configure@res:
  3694                           	opt callstack 0
  3695  0000E3                     ssd1306_command@len:
  3696                           	opt callstack 0
  3697  0000E3                     ssd1306_data@len:
  3698                           	opt callstack 0
  3699                           
  3700                           ; 2 bytes @ 0x63
  3701  0000E3                     	ds	1
  3702  0000E4                     si5328_init@i2c:
  3703                           	opt callstack 0
  3704  0000E4                     si5328_set_freq@i2c:
  3705                           	opt callstack 0
  3706                           
  3707                           ; 2 bytes @ 0x64
  3708  0000E4                     	ds	1
  3709  0000E5                     check_LNB_status@stat:
  3710                           	opt callstack 0
  3711  0000E5                     read_reg@val:
  3712                           	opt callstack 0
  3713  0000E5                     ssd1306_setpos@y:
  3714                           	opt callstack 0
  3715                           
  3716                           ; 1 bytes @ 0x65
  3717  0000E5                     	ds	1
  3718  0000E6                     si5328_init@addr:
  3719                           	opt callstack 0
  3720  0000E6                     si5328_set_freq@addr:
  3721                           	opt callstack 0
  3722  0000E6                     lnb_configure@i2c:
  3723                           	opt callstack 0
  3724  0000E6                     check_si5328_status@i2c:
  3725                           	opt callstack 0
  3726  0000E6                     ssd1306_setpos@data:
  3727                           	opt callstack 0
  3728                           
  3729                           ; 3 bytes @ 0x66
  3730  0000E6                     	ds	1
  3731  0000E7                     ??_si5328_init:
  3732  0000E7                     si5328_set_freq@freq_MHz:
  3733                           	opt callstack 0
  3734                           
  3735                           ; 1 bytes @ 0x67
  3736  0000E7                     	ds	1
  3737  0000E8                     lnb_configure@addr:
  3738                           	opt callstack 0
  3739  0000E8                     check_si5328_status@addr:
  3740                           	opt callstack 0
  3741  0000E8                     si5328_set_freq@p:
  3742                           	opt callstack 0
  3743                           
  3744                           ; 2 bytes @ 0x68
  3745  0000E8                     	ds	1
  3746  0000E9                     ??_lnb_configure:
  3747  0000E9                     ??_check_si5328_status:
  3748  0000E9                     ssd1306_setpos@x:
  3749                           	opt callstack 0
  3750  0000E9                     si5328_init@res:
  3751                           	opt callstack 0
  3752                           
  3753                           ; 2 bytes @ 0x69
  3754  0000E9                     	ds	1
  3755  0000EA                     ??_setQRG:
  3756  0000EA                     lcd_draw8x8@buffer:
  3757                           	opt callstack 0
  3758                           
  3759                           ; 2 bytes @ 0x6A
  3760  0000EA                     	ds	1
  3761  0000EB                     lnb_configure@res:
  3762                           	opt callstack 0
  3763                           
  3764                           ; 2 bytes @ 0x6B
  3765  0000EB                     	ds	1
  3766  0000EC                     check_si5328_status@ret:
  3767                           	opt callstack 0
  3768  0000EC                     lcd_draw8x8@x:
  3769                           	opt callstack 0
  3770                           
  3771                           ; 1 bytes @ 0x6C
  3772  0000EC                     	ds	1
  3773  0000ED                     check_si5328_status@lock:
  3774                           	opt callstack 0
  3775  0000ED                     lcd_draw8x8@y:
  3776                           	opt callstack 0
  3777  0000ED                     setQRG@newLO:
  3778                           	opt callstack 0
  3779                           
  3780                           ; 1 bytes @ 0x6D
  3781  0000ED                     	ds	1
  3782  0000EE                     check_si5328_status@res:
  3783                           	opt callstack 0
  3784  0000EE                     print_char@xpos:
  3785                           	opt callstack 0
  3786  0000EE                     setQRG@sw:
  3787                           	opt callstack 0
  3788                           
  3789                           ; 1 bytes @ 0x6E
  3790  0000EE                     	ds	1
  3791  0000EF                     print_char@ypos:
  3792                           	opt callstack 0
  3793                           
  3794                           ; 1 bytes @ 0x6F
  3795  0000EF                     	ds	1
  3796  0000F0                     print_char@underline:
  3797                           	opt callstack 0
  3798                           
  3799                           ; 1 bytes @ 0x70
  3800  0000F0                     	ds	1
  3801  0000F1                     print_char@map:
  3802                           	opt callstack 0
  3803                           
  3804                           ; 8 bytes @ 0x71
  3805  0000F1                     	ds	8
  3806  0000F9                     print_char@c:
  3807                           	opt callstack 0
  3808                           
  3809                           ; 1 bytes @ 0x79
  3810  0000F9                     	ds	1
  3811  0000FA                     print_char@b:
  3812                           	opt callstack 0
  3813                           
  3814                           ; 1 bytes @ 0x7A
  3815  0000FA                     	ds	1
  3816  0000FB                     print_char@idx:
  3817                           	opt callstack 0
  3818                           
  3819                           ; 1 bytes @ 0x7B
  3820  0000FB                     	ds	1
  3821  0000FC                     print_char@x:
  3822                           	opt callstack 0
  3823                           
  3824                           ; 1 bytes @ 0x7C
  3825  0000FC                     	ds	1
  3826  0000FD                     print_char@y:
  3827                           	opt callstack 0
  3828                           
  3829                           ; 1 bytes @ 0x7D
  3830  0000FD                     	ds	1
  3831  0000FE                     ??_print_string:
  3832                           
  3833                           ; 1 bytes @ 0x7E
  3834  0000FE                     	ds	2
  3835                           
  3836                           	psect	cstackCOMRAM
  3837  000001                     __pcstackCOMRAM:
  3838                           	opt callstack 0
  3839  000001                     usart_rx_irq_handler@udata:
  3840                           	opt callstack 0
  3841                           
  3842                           ; 2 bytes @ 0x0
  3843  000001                     	ds	2
  3844  000003                     ??_usart_rx_irq_handler:
  3845                           
  3846                           ; 1 bytes @ 0x2
  3847  000003                     	ds	2
  3848  000005                     usart_rx_irq_handler@c:
  3849                           	opt callstack 0
  3850                           
  3851                           ; 1 bytes @ 0x4
  3852  000005                     	ds	1
  3853  000006                     usart_rx_irq_handler@wposn:
  3854                           	opt callstack 0
  3855                           
  3856                           ; 2 bytes @ 0x5
  3857  000006                     	ds	2
  3858  000008                     ??_global_irq_handler:
  3859                           
  3860                           ; 1 bytes @ 0x7
  3861  000008                     	ds	4
  3862  00000C                     global_irq_handler@dummy:
  3863                           	opt callstack 0
  3864                           
  3865                           ; 1 bytes @ 0xB
  3866  00000C                     	ds	1
  3867  00000D                     ??_init_gpios:
  3868  00000D                     ??_read_switch:
  3869  00000D                     ?_strlen:
  3870                           	opt callstack 0
  3871  00000D                     ?_memcmp:
  3872                           	opt callstack 0
  3873  00000D                     ?_isupper:
  3874                           	opt callstack 0
  3875  00000D                     ?_isalpha:
  3876                           	opt callstack 0
  3877  00000D                     ?_isdigit:
  3878                           	opt callstack 0
  3879  00000D                     ?_strncmp:
  3880                           	opt callstack 0
  3881  00000D                     ?_isspace:
  3882                           	opt callstack 0
  3883  00000D                     ?_islower:
  3884                           	opt callstack 0
  3885  00000D                     ?_adf4351_get_lock:
  3886                           	opt callstack 0
  3887  00000D                     ?_i2c_wait_int:
  3888                           	opt callstack 0
  3889  00000D                     ?_usart_getc:
  3890                           	opt callstack 0
  3891  00000D                     ?___wmul:
  3892                           	opt callstack 0
  3893  00000D                     ?___awdiv:
  3894                           	opt callstack 0
  3895  00000D                     ?___awmod:
  3896                           	opt callstack 0
  3897  00000D                     ?___lldiv:
  3898                           	opt callstack 0
  3899  00000D                     ?___llmod:
  3900                           	opt callstack 0
  3901  00000D                     ?___aodiv:
  3902                           	opt callstack 0
  3903  00000D                     ?___aomod:
  3904                           	opt callstack 0
  3905  00000D                     ?___lodiv:
  3906                           	opt callstack 0
  3907  00000D                     ?___lomod:
  3908                           	opt callstack 0
  3909  00000D                     usart_putc@c:
  3910                           	opt callstack 0
  3911  00000D                     adf4351_get_lock@ctx:
  3912                           	opt callstack 0
  3913  00000D                     adf4351_set_tune@ctx:
  3914                           	opt callstack 0
  3915  00000D                     adf4351_default@ctx:
  3916                           	opt callstack 0
  3917  00000D                     adf4351_calc_vco_core_freq@ctx:
  3918                           	opt callstack 0
  3919  00000D                     irq_set_handler@handler:
  3920                           	opt callstack 0
  3921  00000D                     rx_gps@c:
  3922                           	opt callstack 0
  3923  00000D                     ___wmul@multiplier:
  3924                           	opt callstack 0
  3925  00000D                     ___awdiv@dividend:
  3926                           	opt callstack 0
  3927  00000D                     ___awmod@dividend:
  3928                           	opt callstack 0
  3929  00000D                     isalpha@c:
  3930                           	opt callstack 0
  3931  00000D                     isdigit@c:
  3932                           	opt callstack 0
  3933  00000D                     isspace@c:
  3934                           	opt callstack 0
  3935  00000D                     isupper@c:
  3936                           	opt callstack 0
  3937  00000D                     memcmp@vl:
  3938                           	opt callstack 0
  3939  00000D                     memcpy@d1:
  3940                           	opt callstack 0
  3941  00000D                     memset@dest:
  3942                           	opt callstack 0
  3943  00000D                     strlen@s:
  3944                           	opt callstack 0
  3945  00000D                     strncmp@_l:
  3946                           	opt callstack 0
  3947  00000D                     islower@c:
  3948                           	opt callstack 0
  3949  00000D                     adf4351_write_latch@value:
  3950                           	opt callstack 0
  3951  00000D                     i2c_wait_int@timeout:
  3952                           	opt callstack 0
  3953  00000D                     ___lldiv@dividend:
  3954                           	opt callstack 0
  3955  00000D                     ___llmod@dividend:
  3956                           	opt callstack 0
  3957  00000D                     ___aodiv@dividend:
  3958                           	opt callstack 0
  3959  00000D                     ___aomod@dividend:
  3960                           	opt callstack 0
  3961  00000D                     ___lodiv@dividend:
  3962                           	opt callstack 0
  3963  00000D                     ___lomod@dividend:
  3964                           	opt callstack 0
  3965                           
  3966                           ; 8 bytes @ 0xC
  3967  00000D                     	ds	1
  3968  00000E                     putgps@c:
  3969                           	opt callstack 0
  3970  00000E                     fputc@c:
  3971                           	opt callstack 0
  3972                           
  3973                           ; 2 bytes @ 0xD
  3974  00000E                     	ds	1
  3975  00000F                     ??_rx_gps:
  3976  00000F                     ??_isupper:
  3977  00000F                     ??_isalpha:
  3978  00000F                     ??_isdigit:
  3979  00000F                     ??_isspace:
  3980  00000F                     ??_islower:
  3981  00000F                     ??_adf4351_get_lock:
  3982  00000F                     ??_usart_getc:
  3983  00000F                     adf4351_set_tune@icp:
  3984                           	opt callstack 0
  3985  00000F                     send_UBX_string@id:
  3986                           	opt callstack 0
  3987  00000F                     irq_set_handler@udata:
  3988                           	opt callstack 0
  3989  00000F                     ___wmul@multiplicand:
  3990                           	opt callstack 0
  3991  00000F                     ___awdiv@divisor:
  3992                           	opt callstack 0
  3993  00000F                     ___awmod@divisor:
  3994                           	opt callstack 0
  3995  00000F                     memcmp@vr:
  3996                           	opt callstack 0
  3997  00000F                     memcpy@s1:
  3998                           	opt callstack 0
  3999  00000F                     memset@c:
  4000                           	opt callstack 0
  4001  00000F                     strlen@a:
  4002                           	opt callstack 0
  4003  00000F                     strncmp@_r:
  4004                           	opt callstack 0
  4005  00000F                     adf4351_calc_vco_core_freq@rf_out_freq:
  4006                           	opt callstack 0
  4007                           
  4008                           ; 4 bytes @ 0xE
  4009  00000F                     	ds	1
  4010  000010                     adf4351_set_tune@pout:
  4011                           	opt callstack 0
  4012  000010                     read_switch@rb1:
  4013                           	opt callstack 0
  4014  000010                     fputc@fp:
  4015                           	opt callstack 0
  4016  000010                     send_UBX_string@len:
  4017                           	opt callstack 0
  4018                           
  4019                           ; 2 bytes @ 0xF
  4020  000010                     	ds	1
  4021  000011                     ??_adf4351_write_latch:
  4022  000011                     ?_i2c_start:
  4023                           	opt callstack 0
  4024  000011                     ?_i2c_write:
  4025                           	opt callstack 0
  4026  000011                     irq_set_handler@id:
  4027                           	opt callstack 0
  4028  000011                     read_switch@rb2:
  4029                           	opt callstack 0
  4030  000011                     ___awdiv@counter:
  4031                           	opt callstack 0
  4032  000011                     ___awmod@counter:
  4033                           	opt callstack 0
  4034  000011                     adf4351_set_tune@lownoise:
  4035                           	opt callstack 0
  4036  000011                     i2c_start@read:
  4037                           	opt callstack 0
  4038  000011                     i2c_write@wantack:
  4039                           	opt callstack 0
  4040  000011                     usart_getc@res:
  4041                           	opt callstack 0
  4042  000011                     ___wmul@product:
  4043                           	opt callstack 0
  4044  000011                     memcmp@n:
  4045                           	opt callstack 0
  4046  000011                     memcpy@n:
  4047                           	opt callstack 0
  4048  000011                     memset@n:
  4049                           	opt callstack 0
  4050  000011                     strncmp@n:
  4051                           	opt callstack 0
  4052  000011                     ___lldiv@divisor:
  4053                           	opt callstack 0
  4054  000011                     ___llmod@divisor:
  4055                           	opt callstack 0
  4056                           
  4057                           ; 4 bytes @ 0x10
  4058  000011                     	ds	1
  4059  000012                     read_switch@rb3:
  4060                           	opt callstack 0
  4061  000012                     ___awdiv@sign:
  4062                           	opt callstack 0
  4063  000012                     ___awmod@sign:
  4064                           	opt callstack 0
  4065  000012                     send_UBX_string@payload:
  4066                           	opt callstack 0
  4067  000012                     fputs@s:
  4068                           	opt callstack 0
  4069                           
  4070                           ; 2 bytes @ 0x11
  4071  000012                     	ds	1
  4072  000013                     ??_memset:
  4073  000013                     ??_memcmp:
  4074  000013                     ??_strncmp:
  4075  000013                     ?_toupper:
  4076                           	opt callstack 0
  4077  000013                     i2c_write@data:
  4078                           	opt callstack 0
  4079  000013                     read_switch@rb4:
  4080                           	opt callstack 0
  4081  000013                     _isspace$3789:
  4082                           	opt callstack 0
  4083  000013                     memcpy@tmp:
  4084                           	opt callstack 0
  4085  000013                     _adf4351_set_tune$675:
  4086                           	opt callstack 0
  4087  000013                     i2c_start@rep:
  4088                           	opt callstack 0
  4089  000013                     rx_usart@c:
  4090                           	opt callstack 0
  4091  000013                     ___awdiv@quotient:
  4092                           	opt callstack 0
  4093  000013                     toupper@c:
  4094                           	opt callstack 0
  4095                           
  4096                           ; 2 bytes @ 0x12
  4097  000013                     	ds	1
  4098  000014                     ??_send_UBX_string:
  4099  000014                     ?_atoi:
  4100                           	opt callstack 0
  4101  000014                     i2c_write@res:
  4102                           	opt callstack 0
  4103  000014                     atoi@s:
  4104                           	opt callstack 0
  4105  000014                     memcpy@d:
  4106                           	opt callstack 0
  4107  000014                     fputs@fp:
  4108                           	opt callstack 0
  4109  000014                     strncmp@l:
  4110                           	opt callstack 0
  4111                           
  4112                           ; 2 bytes @ 0x13
  4113  000014                     	ds	1
  4114  000015                     ??_toupper:
  4115  000015                     ___llmod@counter:
  4116                           	opt callstack 0
  4117  000015                     i2c_start@wantack:
  4118                           	opt callstack 0
  4119  000015                     memcmp@l:
  4120                           	opt callstack 0
  4121  000015                     memset@k:
  4122                           	opt callstack 0
  4123  000015                     adf4351_write_latch@mask:
  4124                           	opt callstack 0
  4125  000015                     ___lldiv@quotient:
  4126                           	opt callstack 0
  4127  000015                     ___aodiv@divisor:
  4128                           	opt callstack 0
  4129  000015                     ___aomod@divisor:
  4130                           	opt callstack 0
  4131  000015                     ___lodiv@divisor:
  4132                           	opt callstack 0
  4133  000015                     ___lomod@divisor:
  4134                           	opt callstack 0
  4135  000015                     send_UBX_string@txbuf:
  4136                           	opt callstack 0
  4137                           
  4138                           ; 50 bytes @ 0x14
  4139  000015                     	ds	1
  4140  000016                     ??_atoi:
  4141  000016                     ?_gcd:
  4142                           	opt callstack 0
  4143  000016                     fputs@c:
  4144                           	opt callstack 0
  4145  000016                     memcpy@s:
  4146                           	opt callstack 0
  4147  000016                     strncmp@r:
  4148                           	opt callstack 0
  4149  000016                     gcd@a:
  4150                           	opt callstack 0
  4151                           
  4152                           ; 4 bytes @ 0x15
  4153  000016                     	ds	1
  4154  000017                     i2c_start@addr:
  4155                           	opt callstack 0
  4156  000017                     adf4351_calc_vco_core_freq@div:
  4157                           	opt callstack 0
  4158  000017                     memcmp@r:
  4159                           	opt callstack 0
  4160  000017                     memset@s:
  4161                           	opt callstack 0
  4162  000017                     fputs@i:
  4163                           	opt callstack 0
  4164                           
  4165                           ; 2 bytes @ 0x16
  4166  000017                     	ds	1
  4167  000018                     i2c_start@res:
  4168                           	opt callstack 0
  4169                           
  4170                           ; 2 bytes @ 0x17
  4171  000018                     	ds	1
  4172  000019                     ?_itoa:
  4173                           	opt callstack 0
  4174  000019                     ?_pad:
  4175                           	opt callstack 0
  4176  000019                     ___lldiv@counter:
  4177                           	opt callstack 0
  4178  000019                     adf4351_init@ctx:
  4179                           	opt callstack 0
  4180  000019                     adf4351_write_reg0@ctx:
  4181                           	opt callstack 0
  4182  000019                     adf4351_write_reg1@ctx:
  4183                           	opt callstack 0
  4184  000019                     adf4351_write_reg2@ctx:
  4185                           	opt callstack 0
  4186  000019                     adf4351_write_reg3@ctx:
  4187                           	opt callstack 0
  4188  000019                     adf4351_write_reg4@ctx:
  4189                           	opt callstack 0
  4190  000019                     adf4351_write_reg5@ctx:
  4191                           	opt callstack 0
  4192  000019                     itoa@value:
  4193                           	opt callstack 0
  4194  000019                     pad@fp:
  4195                           	opt callstack 0
  4196  000019                     _toupper$3884:
  4197                           	opt callstack 0
  4198                           
  4199                           ; 2 bytes @ 0x18
  4200  000019                     	ds	1
  4201  00001A                     i2c_reset@ctx:
  4202                           	opt callstack 0
  4203  00001A                     atoi@neg:
  4204                           	opt callstack 0
  4205  00001A                     gcd@b:
  4206                           	opt callstack 0
  4207  00001A                     usart_init@baud:
  4208                           	opt callstack 0
  4209                           
  4210                           ; 4 bytes @ 0x19
  4211  00001A                     	ds	1
  4212  00001B                     ??_adf4351_write_reg4:
  4213  00001B                     ??_adf4351_write_reg2:
  4214  00001B                     ??_adf4351_write_reg5:
  4215  00001B                     ??_adf4351_write_reg3:
  4216  00001B                     ??_adf4351_write_reg1:
  4217  00001B                     ??_adf4351_write_reg0:
  4218  00001B                     itoa@c:
  4219                           	opt callstack 0
  4220  00001B                     pad@buf:
  4221                           	opt callstack 0
  4222  00001B                     adf4351_init@ref:
  4223                           	opt callstack 0
  4224                           
  4225                           ; 4 bytes @ 0x1A
  4226  00001B                     	ds	1
  4227  00001C                     ??_i2c_reset:
  4228  00001C                     _atoi$3762:
  4229                           	opt callstack 0
  4230                           
  4231                           ; 2 bytes @ 0x1B
  4232  00001C                     	ds	1
  4233  00001D                     ___aodiv@counter:
  4234                           	opt callstack 0
  4235  00001D                     ___aomod@counter:
  4236                           	opt callstack 0
  4237  00001D                     ___lomod@counter:
  4238                           	opt callstack 0
  4239  00001D                     pad@p:
  4240                           	opt callstack 0
  4241  00001D                     ___lodiv@quotient:
  4242                           	opt callstack 0
  4243                           
  4244                           ; 8 bytes @ 0x1C
  4245  00001D                     	ds	1
  4246  00001E                     ___aodiv@sign:
  4247                           	opt callstack 0
  4248  00001E                     ___aomod@sign:
  4249                           	opt callstack 0
  4250  00001E                     usart_init@spbrg_value:
  4251                           	opt callstack 0
  4252  00001E                     _atoi$3764:
  4253                           	opt callstack 0
  4254  00001E                     gcd@c:
  4255                           	opt callstack 0
  4256                           
  4257                           ; 4 bytes @ 0x1D
  4258  00001E                     	ds	1
  4259  00001F                     ??_pad:
  4260  00001F                     ?_abs:
  4261                           	opt callstack 0
  4262  00001F                     abs@a:
  4263                           	opt callstack 0
  4264  00001F                     adf4351_init@pfd:
  4265                           	opt callstack 0
  4266  00001F                     ___aodiv@quotient:
  4267                           	opt callstack 0
  4268                           
  4269                           ; 8 bytes @ 0x1E
  4270  00001F                     	ds	1
  4271  000020                     _atoi$3763:
  4272                           	opt callstack 0
  4273  000020                     pad@i:
  4274                           	opt callstack 0
  4275  000020                     adf4351_write_reg4@data:
  4276                           	opt callstack 0
  4277  000020                     adf4351_write_reg5@data:
  4278                           	opt callstack 0
  4279  000020                     _i2c_reset$1596:
  4280                           	opt callstack 0
  4281                           
  4282                           ; 4 bytes @ 0x1F
  4283  000020                     	ds	1
  4284  000021                     ??_abs:
  4285  000021                     atoi@n:
  4286                           	opt callstack 0
  4287  000021                     adf4351_write_reg0@data:
  4288                           	opt callstack 0
  4289  000021                     adf4351_write_reg1@data:
  4290                           	opt callstack 0
  4291  000021                     adf4351_write_reg2@data:
  4292                           	opt callstack 0
  4293  000021                     adf4351_write_reg3@data:
  4294                           	opt callstack 0
  4295                           
  4296                           ; 4 bytes @ 0x20
  4297  000021                     	ds	1
  4298  000022                     adf4351_calc_counters@ctx:
  4299                           	opt callstack 0
  4300  000022                     pad@w:
  4301                           	opt callstack 0
  4302                           
  4303                           ; 2 bytes @ 0x21
  4304  000022                     	ds	1
  4305  000023                     ??_adf4351_init:
  4306                           
  4307                           ; 1 bytes @ 0x22
  4308  000023                     	ds	1
  4309  000024                     ?_xtoa:
  4310                           	opt callstack 0
  4311  000024                     xtoa@fp:
  4312                           	opt callstack 0
  4313  000024                     adf4351_calc_counters@remainder:
  4314                           	opt callstack 0
  4315  000024                     i2c_reset@reg:
  4316                           	opt callstack 0
  4317                           
  4318                           ; 4 bytes @ 0x23
  4319  000024                     	ds	1
  4320  000025                     ___lodiv@counter:
  4321                           	opt callstack 0
  4322  000025                     adf4351_setup@ctx:
  4323                           	opt callstack 0
  4324                           
  4325                           ; 2 bytes @ 0x24
  4326  000025                     	ds	1
  4327  000026                     ?_utoa:
  4328                           	opt callstack 0
  4329  000026                     utoa@fp:
  4330                           	opt callstack 0
  4331  000026                     xtoa@d:
  4332                           	opt callstack 0
  4333                           
  4334                           ; 8 bytes @ 0x25
  4335  000026                     	ds	1
  4336  000027                     ?_dtoa:
  4337                           	opt callstack 0
  4338  000027                     adf4351_set_mode@ctx:
  4339                           	opt callstack 0
  4340  000027                     dtoa@fp:
  4341                           	opt callstack 0
  4342                           
  4343                           ; 2 bytes @ 0x26
  4344  000027                     	ds	1
  4345  000028                     i2c_native_init@ctx:
  4346                           	opt callstack 0
  4347  000028                     i2c_stop@ctx:
  4348                           	opt callstack 0
  4349  000028                     adf4351_calc_counters@div:
  4350                           	opt callstack 0
  4351  000028                     utoa@d:
  4352                           	opt callstack 0
  4353                           
  4354                           ; 8 bytes @ 0x27
  4355  000028                     	ds	1
  4356  000029                     adf4351_set_mode@enable:
  4357                           	opt callstack 0
  4358  000029                     dtoa@d:
  4359                           	opt callstack 0
  4360                           
  4361                           ; 8 bytes @ 0x28
  4362  000029                     	ds	1
  4363  00002A                     i2c_native_init@baud:
  4364                           	opt callstack 0
  4365                           
  4366                           ; 4 bytes @ 0x29
  4367  00002A                     	ds	1
  4368  00002B                     
  4369                           ; 1 bytes @ 0x2A
  4370  00002B                     	ds	1
  4371  00002C                     adf4351_calc_counters@integer:
  4372                           	opt callstack 0
  4373                           
  4374                           ; 4 bytes @ 0x2B
  4375  00002C                     	ds	2
  4376  00002E                     xtoa@x:
  4377                           	opt callstack 0
  4378                           
  4379                           ; 1 bytes @ 0x2D
  4380  00002E                     	ds	1
  4381  00002F                     ??_xtoa:
  4382                           
  4383                           ; 1 bytes @ 0x2E
  4384  00002F                     	ds	1
  4385  000030                     ??_utoa:
  4386  000030                     adf4351_calc_counters@mod:
  4387                           	opt callstack 0
  4388                           
  4389                           ; 4 bytes @ 0x2F
  4390  000030                     	ds	1
  4391  000031                     ??_dtoa:
  4392                           
  4393                           ; 1 bytes @ 0x30
  4394  000031                     	ds	3
  4395  000034                     adf4351_calc_counters@frac:
  4396                           	opt callstack 0
  4397                           
  4398                           ; 4 bytes @ 0x33
  4399  000034                     	ds	3
  4400  000037                     _xtoa$3265:
  4401                           	opt callstack 0
  4402                           
  4403                           ; 2 bytes @ 0x36
  4404  000037                     	ds	1
  4405  000038                     utoa@p:
  4406                           	opt callstack 0
  4407                           
  4408                           ; 2 bytes @ 0x37
  4409  000038                     	ds	1
  4410  000039                     _dtoa$3247:
  4411                           	opt callstack 0
  4412  000039                     _xtoa$3266:
  4413                           	opt callstack 0
  4414                           
  4415                           ; 2 bytes @ 0x38
  4416  000039                     	ds	1
  4417  00003A                     utoa@w:
  4418                           	opt callstack 0
  4419                           
  4420                           ; 2 bytes @ 0x39
  4421  00003A                     	ds	1
  4422  00003B                     dtoa@p:
  4423                           	opt callstack 0
  4424  00003B                     xtoa@p:
  4425                           	opt callstack 0
  4426                           
  4427                           ; 2 bytes @ 0x3A
  4428  00003B                     	ds	1
  4429  00003C                     utoa@n:
  4430                           	opt callstack 0
  4431                           
  4432                           ; 8 bytes @ 0x3B
  4433  00003C                     	ds	1
  4434  00003D                     dtoa@w:
  4435                           	opt callstack 0
  4436  00003D                     xtoa@w:
  4437                           	opt callstack 0
  4438                           
  4439                           ; 2 bytes @ 0x3C
  4440  00003D                     	ds	2
  4441  00003F                     dtoa@s:
  4442                           	opt callstack 0
  4443  00003F                     xtoa@n:
  4444                           	opt callstack 0
  4445                           
  4446                           ; 8 bytes @ 0x3E
  4447  00003F                     	ds	2
  4448  000041                     dtoa@n:
  4449                           	opt callstack 0
  4450                           
  4451                           ; 8 bytes @ 0x40
  4452  000041                     	ds	3
  4453  000044                     utoa@i:
  4454                           	opt callstack 0
  4455                           
  4456                           ; 2 bytes @ 0x43
  4457  000044                     	ds	3
  4458  000047                     send_UBX_string@class:
  4459                           	opt callstack 0
  4460  000047                     xtoa@i:
  4461                           	opt callstack 0
  4462                           
  4463                           ; 2 bytes @ 0x46
  4464  000047                     	ds	1
  4465  000048                     send_UBX_string@i:
  4466                           	opt callstack 0
  4467                           
  4468                           ; 2 bytes @ 0x47
  4469  000048                     	ds	1
  4470  000049                     dtoa@i:
  4471                           	opt callstack 0
  4472  000049                     xtoa@c:
  4473                           	opt callstack 0
  4474                           
  4475                           ; 2 bytes @ 0x48
  4476  000049                     	ds	1
  4477  00004A                     send_UBX_string@i_2444:
  4478                           	opt callstack 0
  4479                           
  4480                           ; 2 bytes @ 0x49
  4481  00004A                     	ds	1
  4482  00004B                     ?_vfpfcnvrt:
  4483                           	opt callstack 0
  4484  00004B                     vfpfcnvrt@fp:
  4485                           	opt callstack 0
  4486                           
  4487                           ; 2 bytes @ 0x4A
  4488  00004B                     	ds	1
  4489  00004C                     send_UBX_string@i_2445:
  4490                           	opt callstack 0
  4491                           
  4492                           ; 2 bytes @ 0x4B
  4493  00004C                     	ds	1
  4494  00004D                     vfpfcnvrt@fmt:
  4495                           	opt callstack 0
  4496                           
  4497                           ; 2 bytes @ 0x4C
  4498  00004D                     	ds	1
  4499  00004E                     send_UBX_string@CK_B:
  4500                           	opt callstack 0
  4501                           
  4502                           ; 1 bytes @ 0x4D
  4503  00004E                     	ds	1
  4504  00004F                     send_UBX_string@CK_A:
  4505                           	opt callstack 0
  4506  00004F                     vfpfcnvrt@ap:
  4507                           	opt callstack 0
  4508                           
  4509                           ; 2 bytes @ 0x4E
  4510  00004F                     	ds	1
  4511  000050                     send_UBX_string@idx:
  4512                           	opt callstack 0
  4513                           
  4514                           ; 2 bytes @ 0x4F
  4515  000050                     	ds	1
  4516  000051                     ??_vfpfcnvrt:
  4517                           
  4518                           ; 1 bytes @ 0x50
  4519  000051                     	ds	1
  4520  000052                     
  4521                           ; 1 bytes @ 0x51
  4522  000052                     	ds	13
  4523  00005F                     ?_vfprintf:
  4524                           	opt callstack 0
  4525  00005F                     vfprintf@fp:
  4526                           	opt callstack 0
  4527                           
  4528                           ; 2 bytes @ 0x5E
  4529  00005F                     	ds	2
  4530  000061                     vfprintf@fmt:
  4531                           	opt callstack 0
  4532                           
  4533                           ; 2 bytes @ 0x60
  4534  000061                     	ds	2
  4535  000063                     vfprintf@ap:
  4536                           	opt callstack 0
  4537                           
  4538                           ; 2 bytes @ 0x62
  4539  000063                     	ds	2
  4540  000065                     vfprintf@cfmt:
  4541                           	opt callstack 0
  4542                           
  4543                           ; 2 bytes @ 0x64
  4544  000065                     	ds	2
  4545  000067                     
  4546                           ; 1 bytes @ 0x66
  4547 ;;
  4548 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4549 ;;
  4550 ;; *************** function _main *****************
  4551 ;; Defined at:
  4552 ;;		line 45 in file "src/main.c"
  4553 ;; Parameters:    Size  Location     Type
  4554 ;;		None
  4555 ;; Auto vars:     Size  Location     Type
  4556 ;;  lock            1  135[BANK1 ] unsigned char 
  4557 ;; Return value:  Size  Location     Type
  4558 ;;                  1    wreg      void 
  4559 ;; Registers used:
  4560 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  4561 ;; Tracked objects:
  4562 ;;		On entry : 0/0
  4563 ;;		On exit  : 0/0
  4564 ;;		Unchanged: 0/0
  4565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4566 ;;      Params:         0       0       0       0       0       0       0
  4567 ;;      Locals:         0       0       1       0       0       0       0
  4568 ;;      Temps:          0       0       0       0       0       0       0
  4569 ;;      Totals:         0       0       1       0       0       0       0
  4570 ;;Total ram usage:        1 bytes
  4571 ;; Hardware stack levels required when called:   20
  4572 ;; This function calls:
  4573 ;;		_adf4351_init
  4574 ;;		_adf4351_set_mode
  4575 ;;		_adf4351_set_tune
  4576 ;;		_check_ADF5341_status
  4577 ;;		_check_LNB_status
  4578 ;;		_check_si5328_status
  4579 ;;		_i2c_native_init
  4580 ;;		_init_gpios
  4581 ;;		_init_gps
  4582 ;;		_lcd_init
  4583 ;;		_lnb_configure
  4584 ;;		_printf
  4585 ;;		_rx_usart
  4586 ;;		_setADF4351frequency
  4587 ;;		_setQRG
  4588 ;;		_show_display
  4589 ;;		_si5328_init
  4590 ;;		_usart_init
  4591 ;; This function is called by:
  4592 ;;		Startup code after reset
  4593 ;; This function uses a non-reentrant model
  4594 ;;
  4595                           
  4596                           	psect	text0
  4597  003CEE                     __ptext0:
  4598                           	opt callstack 0
  4599  003CEE                     _main:
  4600                           	opt callstack 11
  4601  003CEE                     
  4602                           ;src/main.c: 47:  static u32 running = 0;;src/main.c: 50:     OSCTUNE = 0x80;
  4603  003CEE  0E80               	movlw	128
  4604  003CF0  6E9B               	movwf	155,c	;volatile
  4605                           
  4606                           ;src/main.c: 51:     OSCCON = 0xF2;
  4607  003CF2  0EF2               	movlw	242
  4608  003CF4  6ED3               	movwf	211,c	;volatile
  4609  003CF6                     l976:
  4610  003CF6  A4D3               	btfss	211,2,c	;volatile
  4611  003CF8  EF80  F01E         	goto	u11741
  4612  003CFC  EF82  F01E         	goto	u11740
  4613  003D00                     u11741:
  4614  003D00  EF7B  F01E         	goto	l976
  4615  003D04                     u11740:
  4616  003D04                     
  4617                           ;src/main.c: 57:     PIE1 = 0;
  4618  003D04  0E00               	movlw	0
  4619  003D06  6E9D               	movwf	157,c	;volatile
  4620                           
  4621                           ;src/main.c: 58:     PIE2 = 0;
  4622  003D08  0E00               	movlw	0
  4623  003D0A  6EA0               	movwf	160,c	;volatile
  4624  003D0C                     
  4625                           ;src/main.c: 61:     init_gpios();
  4626  003D0C  EC73  F007         	call	_init_gpios	;wreg free
  4627  003D10                     
  4628                           ;src/main.c: 64:     usart_init(9600);
  4629  003D10  0E80               	movlw	128
  4630  003D12  6E1A               	movwf	usart_init@baud^0,c
  4631  003D14  0E25               	movlw	37
  4632  003D16  6E1B               	movwf	(usart_init@baud+1)^0,c
  4633  003D18  0E00               	movlw	0
  4634  003D1A  6E1C               	movwf	(usart_init@baud+2)^0,c
  4635  003D1C  0E00               	movlw	0
  4636  003D1E  6E1D               	movwf	(usart_init@baud+3)^0,c
  4637  003D20  ECD6  F02D         	call	_usart_init	;wreg free
  4638  003D24                     
  4639                           ;src/main.c: 67:     printf("\nWelcome AMSAT DL DownConverter Board\n\n");
  4640  003D24  0E60               	movlw	low STR_64
  4641  003D26  0100               	movlb	0	; () banked
  4642  003D28  6F95               	movwf	printf@fmt& (0+255),b
  4643  003D2A  0E7A               	movlw	high STR_64
  4644  003D2C  6F96               	movwf	(printf@fmt+1)& (0+255),b
  4645  003D2E  ECA7  F032         	call	_printf	;wreg free
  4646  003D32                     
  4647                           ;src/main.c: 70:     i2c_native_init(&g_i2c_bus, 100000);
  4648  003D32  0EBC               	movlw	low _g_i2c_bus
  4649  003D34  6E28               	movwf	i2c_native_init@ctx^0,c
  4650  003D36  0E01               	movlw	high _g_i2c_bus
  4651  003D38  6E29               	movwf	(i2c_native_init@ctx+1)^0,c
  4652  003D3A  0EA0               	movlw	160
  4653  003D3C  6E2A               	movwf	i2c_native_init@baud^0,c
  4654  003D3E  0E86               	movlw	134
  4655  003D40  6E2B               	movwf	(i2c_native_init@baud+1)^0,c
  4656  003D42  0E01               	movlw	1
  4657  003D44  6E2C               	movwf	(i2c_native_init@baud+2)^0,c
  4658  003D46  0E00               	movlw	0
  4659  003D48  6E2D               	movwf	(i2c_native_init@baud+3)^0,c
  4660  003D4A  ECAE  F02F         	call	_i2c_native_init	;wreg free
  4661  003D4E                     
  4662                           ;src/main.c: 73:  lcd_init(&g_i2c_bus,0x3c);
  4663  003D4E  0EBC               	movlw	low _g_i2c_bus
  4664  003D50  0101               	movlb	1	; () banked
  4665  003D52  6F82               	movwf	lcd_init@i2c& (0+255),b
  4666  003D54  0E01               	movlw	high _g_i2c_bus
  4667  003D56  6F83               	movwf	(lcd_init@i2c+1)& (0+255),b
  4668  003D58  0E3C               	movlw	60
  4669  003D5A  6F84               	movwf	lcd_init@addr& (0+255),b
  4670  003D5C  EC84  F022         	call	_lcd_init	;wreg free
  4671  003D60                     
  4672                           ;src/main.c: 76:  lnb_configure(&g_i2c_bus, 0x08);
  4673  003D60  0EBC               	movlw	low _g_i2c_bus
  4674  003D62  0100               	movlb	0	; () banked
  4675  003D64  6FE6               	movwf	lnb_configure@i2c& (0+255),b
  4676  003D66  0E01               	movlw	high _g_i2c_bus
  4677  003D68  6FE7               	movwf	(lnb_configure@i2c+1)& (0+255),b
  4678  003D6A  0E08               	movlw	8
  4679  003D6C  6FE8               	movwf	lnb_configure@addr& (0+255),b
  4680  003D6E  EC07  F02A         	call	_lnb_configure	;wreg free
  4681  003D72                     
  4682                           ;src/main.c: 81:     si5328_init(&g_i2c_bus, 0x68);
  4683  003D72  0EBC               	movlw	low _g_i2c_bus
  4684  003D74  0100               	movlb	0	; () banked
  4685  003D76  6FE4               	movwf	si5328_init@i2c& (0+255),b
  4686  003D78  0E01               	movlw	high _g_i2c_bus
  4687  003D7A  6FE5               	movwf	(si5328_init@i2c+1)& (0+255),b
  4688  003D7C  0E68               	movlw	104
  4689  003D7E  6FE6               	movwf	si5328_init@addr& (0+255),b
  4690  003D80  EC27  F026         	call	_si5328_init	;wreg free
  4691  003D84                     
  4692                           ;src/main.c: 87:     adf4351_init(&g_adf4351, 40000ULL, 40000ULL);
  4693  003D84  0E32               	movlw	low _g_adf4351
  4694  003D86  6E19               	movwf	adf4351_init@ctx^0,c
  4695  003D88  0E02               	movlw	high _g_adf4351
  4696  003D8A  6E1A               	movwf	(adf4351_init@ctx+1)^0,c
  4697  003D8C  0E40               	movlw	64
  4698  003D8E  6E1B               	movwf	adf4351_init@ref^0,c
  4699  003D90  0E9C               	movlw	156
  4700  003D92  6E1C               	movwf	(adf4351_init@ref+1)^0,c
  4701  003D94  0E00               	movlw	0
  4702  003D96  6E1D               	movwf	(adf4351_init@ref+2)^0,c
  4703  003D98  0E00               	movlw	0
  4704  003D9A  6E1E               	movwf	(adf4351_init@ref+3)^0,c
  4705  003D9C  0E40               	movlw	64
  4706  003D9E  6E1F               	movwf	adf4351_init@pfd^0,c
  4707  003DA0  0E9C               	movlw	156
  4708  003DA2  6E20               	movwf	(adf4351_init@pfd+1)^0,c
  4709  003DA4  0E00               	movlw	0
  4710  003DA6  6E21               	movwf	(adf4351_init@pfd+2)^0,c
  4711  003DA8  0E00               	movlw	0
  4712  003DAA  6E22               	movwf	(adf4351_init@pfd+3)^0,c
  4713  003DAC  EC93  F026         	call	_adf4351_init	;wreg free
  4714  003DB0                     
  4715                           ;src/main.c: 91:     adf4351_set_tune(&g_adf4351, g_ipc, g_pout, 1);
  4716  003DB0  0E32               	movlw	low _g_adf4351
  4717  003DB2  6E0D               	movwf	adf4351_set_tune@ctx^0,c
  4718  003DB4  0E02               	movlw	high _g_adf4351
  4719  003DB6  6E0E               	movwf	(adf4351_set_tune@ctx+1)^0,c
  4720  003DB8  0E05               	movlw	5
  4721  003DBA  6E0F               	movwf	adf4351_set_tune@icp^0,c
  4722  003DBC  0E01               	movlw	1
  4723  003DBE  6E10               	movwf	adf4351_set_tune@pout^0,c
  4724  003DC0  0E00               	movlw	0
  4725  003DC2  6E12               	movwf	(adf4351_set_tune@lownoise+1)^0,c
  4726  003DC4  0E01               	movlw	1
  4727  003DC6  6E11               	movwf	adf4351_set_tune@lownoise^0,c
  4728  003DC8  EC56  F02F         	call	_adf4351_set_tune	;wreg free
  4729  003DCC                     
  4730                           ;src/main.c: 94:     adf4351_set_mode(&g_adf4351, 1);
  4731  003DCC  0E32               	movlw	low _g_adf4351
  4732  003DCE  6E27               	movwf	adf4351_set_mode@ctx^0,c
  4733  003DD0  0E02               	movlw	high _g_adf4351
  4734  003DD2  6E28               	movwf	(adf4351_set_mode@ctx+1)^0,c
  4735  003DD4  0E00               	movlw	0
  4736  003DD6  6E2A               	movwf	(adf4351_set_mode@enable+1)^0,c
  4737  003DD8  0E01               	movlw	1
  4738  003DDA  6E29               	movwf	adf4351_set_mode@enable^0,c
  4739  003DDC  EC52  F029         	call	_adf4351_set_mode	;wreg free
  4740  003DE0                     
  4741                           ;src/main.c: 97:     RCONbits.IPEN = 0;
  4742  003DE0  9ED0               	bcf	208,7,c	;volatile
  4743  003DE2                     
  4744                           ;src/main.c: 99:     INTCONbits.PEIE = 1;
  4745  003DE2  8CF2               	bsf	242,6,c	;volatile
  4746  003DE4                     
  4747                           ;src/main.c: 101:     INTCONbits.GIE = 1;
  4748  003DE4  8EF2               	bsf	242,7,c	;volatile
  4749  003DE6                     l10028:
  4750                           
  4751                           ;src/main.c: 105:  {;src/main.c: 107:         WDTCON=1;
  4752  003DE6  0E01               	movlw	1
  4753  003DE8  6ED1               	movwf	209,c	;volatile
  4754  003DEA  0004               	clrwdt		;# 
  4755  003DEC                     
  4756                           ;src/main.c: 113:         setQRG();
  4757  003DEC  ECEA  F020         	call	_setQRG	;wreg free
  4758  003DF0                     
  4759                           ;src/main.c: 116:   u8 lock = check_si5328_status(&g_i2c_bus, 0x68);
  4760  003DF0  0EBC               	movlw	low _g_i2c_bus
  4761  003DF2  0100               	movlb	0	; () banked
  4762  003DF4  6FE6               	movwf	check_si5328_status@i2c& (0+255),b
  4763  003DF6  0E01               	movlw	high _g_i2c_bus
  4764  003DF8  6FE7               	movwf	(check_si5328_status@i2c+1)& (0+255),b
  4765  003DFA  0E68               	movlw	104
  4766  003DFC  6FE8               	movwf	check_si5328_status@addr& (0+255),b
  4767  003DFE  ECC5  F01A         	call	_check_si5328_status	;wreg free
  4768  003E02  0101               	movlb	1	; () banked
  4769  003E04  6F87               	movwf	main@lock& (0+255),b
  4770  003E06                     
  4771                           ; BSR set to: 1
  4772                           ;src/main.c: 120:         setADF4351frequency(lock);
  4773  003E06  5187               	movf	main@lock& (0+255),w,b
  4774  003E08  EC22  F019         	call	_setADF4351frequency
  4775  003E0C                     
  4776                           ;src/main.c: 123:   check_ADF5341_status(&g_adf4351);
  4777  003E0C  0E32               	movlw	low _g_adf4351
  4778  003E0E  0100               	movlb	0	; () banked
  4779  003E10  6FA3               	movwf	check_ADF5341_status@ctx& (0+255),b
  4780  003E12  0E02               	movlw	high _g_adf4351
  4781  003E14  6FA4               	movwf	(check_ADF5341_status@ctx+1)& (0+255),b
  4782  003E16  EC7F  F023         	call	_check_ADF5341_status	;wreg free
  4783  003E1A                     
  4784                           ;src/main.c: 126:   check_LNB_status(&g_i2c_bus, 0x08);
  4785  003E1A  0EBC               	movlw	low _g_i2c_bus
  4786  003E1C  0100               	movlb	0	; () banked
  4787  003E1E  6FDF               	movwf	check_LNB_status@i2c& (0+255),b
  4788  003E20  0E01               	movlw	high _g_i2c_bus
  4789  003E22  6FE0               	movwf	(check_LNB_status@i2c+1)& (0+255),b
  4790  003E24  0E08               	movlw	8
  4791  003E26  6FE1               	movwf	check_LNB_status@addr& (0+255),b
  4792  003E28  EC75  F021         	call	_check_LNB_status	;wreg free
  4793  003E2C                     
  4794                           ;src/main.c: 129:         rx_usart();
  4795  003E2C  EC90  F032         	call	_rx_usart	;wreg free
  4796  003E30                     
  4797                           ;src/main.c: 132:   show_display();
  4798  003E30  EC14  F004         	call	_show_display	;wreg free
  4799  003E34                     
  4800                           ;src/main.c: 135:   init_gps();
  4801  003E34  ECF2  F032         	call	_init_gps	;wreg free
  4802  003E38  EFF3  F01E         	goto	l10028
  4803  003E3C  EF07  F000         	goto	start
  4804  003E40                     __end_of_main:
  4805                           	opt callstack 0
  4806                           
  4807 ;; *************** function _usart_init *****************
  4808 ;; Defined at:
  4809 ;;		line 14 in file "src/driver/usart.c"
  4810 ;; Parameters:    Size  Location     Type
  4811 ;;  baud            4   25[COMRAM] unsigned long 
  4812 ;; Auto vars:     Size  Location     Type
  4813 ;;  spbrg_value     2   29[COMRAM] unsigned short 
  4814 ;; Return value:  Size  Location     Type
  4815 ;;                  1    wreg      void 
  4816 ;; Registers used:
  4817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4818 ;; Tracked objects:
  4819 ;;		On entry : 0/0
  4820 ;;		On exit  : 0/0
  4821 ;;		Unchanged: 0/0
  4822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4823 ;;      Params:         4       0       0       0       0       0       0
  4824 ;;      Locals:         2       0       0       0       0       0       0
  4825 ;;      Temps:          0       0       0       0       0       0       0
  4826 ;;      Totals:         6       0       0       0       0       0       0
  4827 ;;Total ram usage:        6 bytes
  4828 ;; Hardware stack levels used:    1
  4829 ;; Hardware stack levels required when called:    3
  4830 ;; This function calls:
  4831 ;;		___lldiv
  4832 ;;		_irq_set_handler
  4833 ;; This function is called by:
  4834 ;;		_main
  4835 ;; This function uses a non-reentrant model
  4836 ;;
  4837                           
  4838                           	psect	text1
  4839  005BAC                     __ptext1:
  4840                           	opt callstack 0
  4841  005BAC                     _usart_init:
  4842                           	opt callstack 27
  4843  005BAC                     
  4844                           ;src/driver/usart.c: 14: void usart_init(u32 baud);src/driver/usart.c: 15: {;src/driver/
      +                          usart.c: 16:     irq_set_handler(IRQ_HANDLER_ID_USART, usart_rx_irq_handler, ((void*)0))
      +                          ;
  4845  005BAC  0EC0               	movlw	low _usart_rx_irq_handler
  4846  005BAE  6E0D               	movwf	irq_set_handler@handler^0,c
  4847  005BB0  0E58               	movlw	high _usart_rx_irq_handler
  4848  005BB2  6E0E               	movwf	(irq_set_handler@handler+1)^0,c
  4849  005BB4  0E00               	movlw	0
  4850  005BB6  6E0F               	movwf	irq_set_handler@udata^0,c
  4851  005BB8  0E00               	movlw	0
  4852  005BBA  6E10               	movwf	(irq_set_handler@udata+1)^0,c
  4853  005BBC  0E00               	movlw	0
  4854  005BBE  ECE9  F030         	call	_irq_set_handler
  4855  005BC2                     
  4856                           ;src/driver/usart.c: 17:     TXSTAbits.TX9 = 0;
  4857  005BC2  9CAC               	bcf	172,6,c	;volatile
  4858  005BC4                     
  4859                           ;src/driver/usart.c: 18:     TXSTAbits.SENDB = 0;
  4860  005BC4  96AC               	bcf	172,3,c	;volatile
  4861  005BC6                     
  4862                           ;src/driver/usart.c: 19:     TXSTAbits.BRGH = 1;
  4863  005BC6  84AC               	bsf	172,2,c	;volatile
  4864  005BC8                     
  4865                           ;src/driver/usart.c: 20:     TXSTAbits.TXEN = 1;
  4866  005BC8  8AAC               	bsf	172,5,c	;volatile
  4867  005BCA                     
  4868                           ;src/driver/usart.c: 23:     RCSTAbits.RX9 = 0;
  4869  005BCA  9CAB               	bcf	171,6,c	;volatile
  4870  005BCC                     
  4871                           ;src/driver/usart.c: 24:     RCSTAbits.CREN = 1;
  4872  005BCC  88AB               	bsf	171,4,c	;volatile
  4873  005BCE                     
  4874                           ;src/driver/usart.c: 25:     RCSTAbits.ADDEN = 0;
  4875  005BCE  96AB               	bcf	171,3,c	;volatile
  4876  005BD0                     
  4877                           ;src/driver/usart.c: 27:     BAUDCONbits.BRG16 = 1;
  4878  005BD0  86B8               	bsf	184,3,c	;volatile
  4879  005BD2                     
  4880                           ;src/driver/usart.c: 28:     BAUDCONbits.ABDEN = 0;
  4881  005BD2  90B8               	bcf	184,0,c	;volatile
  4882  005BD4                     
  4883                           ;src/driver/usart.c: 30:     u16 spbrg_value = ((8000000/4) / baud) - 1;
  4884  005BD4  0E80               	movlw	128
  4885  005BD6  6E0D               	movwf	___lldiv@dividend^0,c
  4886  005BD8  0E84               	movlw	132
  4887  005BDA  6E0E               	movwf	(___lldiv@dividend+1)^0,c
  4888  005BDC  0E1E               	movlw	30
  4889  005BDE  6E0F               	movwf	(___lldiv@dividend+2)^0,c
  4890  005BE0  0E00               	movlw	0
  4891  005BE2  6E10               	movwf	(___lldiv@dividend+3)^0,c
  4892  005BE4  C01A  F011         	movff	usart_init@baud,___lldiv@divisor
  4893  005BE8  C01B  F012         	movff	usart_init@baud+1,___lldiv@divisor+1
  4894  005BEC  C01C  F013         	movff	usart_init@baud+2,___lldiv@divisor+2
  4895  005BF0  C01D  F014         	movff	usart_init@baud+3,___lldiv@divisor+3
  4896  005BF4  ECAF  F02A         	call	___lldiv	;wreg free
  4897  005BF8  0EFF               	movlw	255
  4898  005BFA  240D               	addwf	?___lldiv^0,w,c
  4899  005BFC  6E1E               	movwf	usart_init@spbrg_value^0,c
  4900  005BFE  0EFF               	movlw	255
  4901  005C00  200E               	addwfc	(?___lldiv+1)^0,w,c
  4902  005C02  6E1F               	movwf	(usart_init@spbrg_value+1)^0,c
  4903  005C04                     
  4904                           ;src/driver/usart.c: 32:     SPBRGH = (spbrg_value>>8)&0xFF;
  4905  005C04  501F               	movf	(usart_init@spbrg_value+1)^0,w,c
  4906  005C06  6EB0               	movwf	176,c	;volatile
  4907  005C08                     
  4908                           ;src/driver/usart.c: 33:     SPBRG = (spbrg_value>>0)&0xFF;
  4909  005C08  C01E  FFAF         	movff	usart_init@spbrg_value,4015	;volatile
  4910  005C0C                     
  4911                           ;src/driver/usart.c: 35:     TXSTAbits.SYNC = 0;
  4912  005C0C  98AC               	bcf	172,4,c	;volatile
  4913  005C0E                     
  4914                           ;src/driver/usart.c: 36:     RCSTAbits.SPEN = 1;
  4915  005C0E  8EAB               	bsf	171,7,c	;volatile
  4916  005C10                     
  4917                           ;src/driver/usart.c: 38:     PIE1bits.RCIE = 1;
  4918  005C10  8A9D               	bsf	157,5,c	;volatile
  4919  005C12  0012               	return		;funcret
  4920  005C14                     __end_of_usart_init:
  4921                           	opt callstack 0
  4922                           
  4923 ;; *************** function _irq_set_handler *****************
  4924 ;; Defined at:
  4925 ;;		line 9 in file "src/driver/irq.c"
  4926 ;; Parameters:    Size  Location     Type
  4927 ;;  id              1    wreg     enum E2251
  4928 ;;  handler         2   12[COMRAM] PTR FTN(PTR void ,)void 
  4929 ;;		 -> usart_rx_irq_handler(1), 
  4930 ;;  udata           2   14[COMRAM] PTR void 
  4931 ;;		 -> NULL(0), 
  4932 ;; Auto vars:     Size  Location     Type
  4933 ;;  id              1   16[COMRAM] enum E2251
  4934 ;; Return value:  Size  Location     Type
  4935 ;;                  1    wreg      void 
  4936 ;; Registers used:
  4937 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4938 ;; Tracked objects:
  4939 ;;		On entry : 0/0
  4940 ;;		On exit  : 0/0
  4941 ;;		Unchanged: 0/0
  4942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4943 ;;      Params:         4       0       0       0       0       0       0
  4944 ;;      Locals:         1       0       0       0       0       0       0
  4945 ;;      Temps:          0       0       0       0       0       0       0
  4946 ;;      Totals:         5       0       0       0       0       0       0
  4947 ;;Total ram usage:        5 bytes
  4948 ;; Hardware stack levels used:    1
  4949 ;; Hardware stack levels required when called:    2
  4950 ;; This function calls:
  4951 ;;		Nothing
  4952 ;; This function is called by:
  4953 ;;		_usart_init
  4954 ;; This function uses a non-reentrant model
  4955 ;;
  4956                           
  4957                           	psect	text2
  4958  0061D2                     __ptext2:
  4959                           	opt callstack 0
  4960  0061D2                     _irq_set_handler:
  4961                           	opt callstack 27
  4962                           
  4963                           ;incstack = 0
  4964                           ;irq_set_handler@id stored from wreg
  4965  0061D2  6E11               	movwf	irq_set_handler@id^0,c
  4966  0061D4                     
  4967                           ;src/driver/irq.c: 9: void irq_set_handler(IRQ_HANDLER_ID id, irq_handler_func handler, 
      +                          void *udata);src/driver/irq.c: 10: {;src/driver/irq.c: 11:     if(id < IRQ_HANDLER_ID_CN
      +                          T) {
  4968  0061D4  5011               	movf	irq_set_handler@id^0,w,c
  4969  0061D6  A4D8               	btfss	status,2,c
  4970  0061D8  EFF0  F030         	goto	u6891
  4971  0061DC  EFF2  F030         	goto	u6890
  4972  0061E0                     u6891:
  4973  0061E0  EF0A  F031         	goto	l458
  4974  0061E4                     u6890:
  4975  0061E4                     
  4976                           ;src/driver/irq.c: 12:         g_irq_handler_info[id].udata = udata;
  4977  0061E4  5011               	movf	irq_set_handler@id^0,w,c
  4978  0061E6  0D04               	mullw	4
  4979  0061E8  0E8E               	movlw	low (_g_irq_handler_info+2)
  4980  0061EA  24F3               	addwf	243,w,c
  4981  0061EC  6ED9               	movwf	fsr2l,c
  4982  0061EE  0E01               	movlw	high (_g_irq_handler_info+2)
  4983  0061F0  20F4               	addwfc	prodh,w,c
  4984  0061F2  6EDA               	movwf	fsr2h,c
  4985  0061F4  C00F  FFDE         	movff	irq_set_handler@udata,postinc2
  4986  0061F8  C010  FFDD         	movff	irq_set_handler@udata+1,postdec2
  4987                           
  4988                           ;src/driver/irq.c: 13:         g_irq_handler_info[id].handler = handler;
  4989  0061FC  5011               	movf	irq_set_handler@id^0,w,c
  4990  0061FE  0D04               	mullw	4
  4991  006200  0E8C               	movlw	low _g_irq_handler_info
  4992  006202  24F3               	addwf	243,w,c
  4993  006204  6ED9               	movwf	fsr2l,c
  4994  006206  0E01               	movlw	high _g_irq_handler_info
  4995  006208  20F4               	addwfc	prodh,w,c
  4996  00620A  6EDA               	movwf	fsr2h,c
  4997  00620C  C00D  FFDE         	movff	irq_set_handler@handler,postinc2
  4998  006210  C00E  FFDD         	movff	irq_set_handler@handler+1,postdec2
  4999  006214                     l458:
  5000  006214  0012               	return		;funcret
  5001  006216                     __end_of_irq_set_handler:
  5002                           	opt callstack 0
  5003                           
  5004 ;; *************** function _si5328_init *****************
  5005 ;; Defined at:
  5006 ;;		line 174 in file "src/driver/si5328.c"
  5007 ;; Parameters:    Size  Location     Type
  5008 ;;  i2c             2  100[BANK0 ] PTR struct i2c_dev__
  5009 ;;		 -> g_i2c_bus(8), 
  5010 ;;  addr            1  102[BANK0 ] unsigned char 
  5011 ;; Auto vars:     Size  Location     Type
  5012 ;;  res             2  105[BANK0 ] int 
  5013 ;; Return value:  Size  Location     Type
  5014 ;;                  2  100[BANK0 ] int 
  5015 ;; Registers used:
  5016 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5017 ;; Tracked objects:
  5018 ;;		On entry : 0/0
  5019 ;;		On exit  : 0/0
  5020 ;;		Unchanged: 0/0
  5021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5022 ;;      Params:         0       3       0       0       0       0       0
  5023 ;;      Locals:         0       2       0       0       0       0       0
  5024 ;;      Temps:          0       2       0       0       0       0       0
  5025 ;;      Totals:         0       7       0       0       0       0       0
  5026 ;;Total ram usage:        7 bytes
  5027 ;; Hardware stack levels used:    1
  5028 ;; Hardware stack levels required when called:   15
  5029 ;; This function calls:
  5030 ;;		_i2c_probe_addr
  5031 ;;		_printf
  5032 ;;		_si5328_perform_ical
  5033 ;;		_smbus8_write_byte
  5034 ;;		_write_regset
  5035 ;; This function is called by:
  5036 ;;		_main
  5037 ;; This function uses a non-reentrant model
  5038 ;;
  5039                           
  5040                           	psect	text3
  5041  004C4E                     __ptext3:
  5042                           	opt callstack 0
  5043  004C4E                     _si5328_init:
  5044                           	opt callstack 15
  5045  004C4E                     
  5046                           ;src/driver/si5328.c: 174: int si5328_init(i2c_dev i2c, u8 addr);src/driver/si5328.c: 17
      +                          5: {;src/driver/si5328.c: 176:     int res = i2c_probe_addr(i2c, addr);
  5047  004C4E  C0E4  F0CB         	movff	si5328_init@i2c,i2c_probe_addr@dev
  5048  004C52  C0E5  F0CC         	movff	si5328_init@i2c+1,i2c_probe_addr@dev+1
  5049  004C56  C0E6  F0CD         	movff	si5328_init@addr,i2c_probe_addr@addr
  5050  004C5A  EC2D  F031         	call	_i2c_probe_addr	;wreg free
  5051  004C5E  C0CB  F0E9         	movff	?_i2c_probe_addr,si5328_init@res
  5052  004C62  C0CC  F0EA         	movff	?_i2c_probe_addr+1,si5328_init@res+1
  5053  004C66                     
  5054                           ;src/driver/si5328.c: 177:     if(res == 0)
  5055  004C66  0100               	movlb	0	; () banked
  5056  004C68  51E9               	movf	si5328_init@res& (0+255),w,b
  5057  004C6A  11EA               	iorwf	(si5328_init@res+1)& (0+255),w,b
  5058  004C6C  A4D8               	btfss	status,2,c
  5059  004C6E  EF3B  F026         	goto	u11051
  5060  004C72  EF3D  F026         	goto	u11050
  5061  004C76                     u11051:
  5062  004C76  EF8C  F026         	goto	l9348
  5063  004C7A                     u11050:
  5064  004C7A                     
  5065                           ; BSR set to: 0
  5066                           ;src/driver/si5328.c: 178:  {;src/driver/si5328.c: 179:         printf("Si5328 found.\n"
      +                          );
  5067  004C7A  0E02               	movlw	low STR_16
  5068  004C7C  6F95               	movwf	printf@fmt& (0+255),b
  5069  004C7E  0E7D               	movlw	high STR_16
  5070  004C80  6F96               	movwf	(printf@fmt+1)& (0+255),b
  5071  004C82  ECA7  F032         	call	_printf	;wreg free
  5072  004C86                     
  5073                           ;src/driver/si5328.c: 180:   smbus8_write_byte(i2c, addr, 136, 0x80);
  5074  004C86  C0E4  F0CB         	movff	si5328_init@i2c,smbus8_write_byte@dev
  5075  004C8A  C0E5  F0CC         	movff	si5328_init@i2c+1,smbus8_write_byte@dev+1
  5076  004C8E  C0E6  F0CD         	movff	si5328_init@addr,smbus8_write_byte@addr
  5077  004C92  0E88               	movlw	136
  5078  004C94  0100               	movlb	0	; () banked
  5079  004C96  6FCE               	movwf	smbus8_write_byte@reg& (0+255),b
  5080  004C98  0E80               	movlw	128
  5081  004C9A  6FCF               	movwf	smbus8_write_byte@data& (0+255),b
  5082  004C9C  EC7B  F030         	call	_smbus8_write_byte	;wreg free
  5083  004CA0                     
  5084                           ;src/driver/si5328.c: 181:   _delaywdt((unsigned long)((100)*(8000000/4000.0)));
  5085  004CA0  0E01               	movlw	1
  5086  004CA2  0100               	movlb	0	; () banked
  5087  004CA4  6FE8               	movwf	(??_si5328_init+1)& (0+255),b
  5088  004CA6  0EC3               	movlw	195
  5089  004CA8  6FE7               	movwf	??_si5328_init& (0+255),b
  5090  004CAA  0EEC               	movlw	236
  5091  004CAC                     u12067:
  5092  004CAC  0004               	clrwdt	
  5093  004CAE  2EE8               	decfsz	wreg,f,c
  5094  004CB0  D7FD               	bra	u12067
  5095  004CB2  2FE7               	decfsz	??_si5328_init& (0+255),f,b
  5096  004CB4  D7FB               	bra	u12067
  5097  004CB6  2FE8               	decfsz	(??_si5328_init+1)& (0+255),f,b
  5098  004CB8  D7F9               	bra	u12067
  5099  004CBA  0004               	clrwdt	
  5100  004CBC  F000               	nop	
  5101  004CBE  0004               	clrwdt	
  5102  004CC0                     
  5103                           ;src/driver/si5328.c: 183:   printf("Si5328 init\n");
  5104  004CC0  0E3A               	movlw	low STR_17
  5105  004CC2  0100               	movlb	0	; () banked
  5106  004CC4  6F95               	movwf	printf@fmt& (0+255),b
  5107  004CC6  0E7D               	movlw	high STR_17
  5108  004CC8  6F96               	movwf	(printf@fmt+1)& (0+255),b
  5109  004CCA  ECA7  F032         	call	_printf	;wreg free
  5110  004CCE                     
  5111                           ;src/driver/si5328.c: 184:         write_regset(i2c, addr, reg_set_univ, (sizeof(reg_set
      +                          _univ)/sizeof(reg_set_univ[0])));
  5112  004CCE  C0E4  F0D9         	movff	si5328_init@i2c,write_regset@i2c
  5113  004CD2  C0E5  F0DA         	movff	si5328_init@i2c+1,write_regset@i2c+1
  5114  004CD6  C0E6  F0DB         	movff	si5328_init@addr,write_regset@addr
  5115  004CDA  0E9B               	movlw	low _reg_set_univ
  5116  004CDC  0100               	movlb	0	; () banked
  5117  004CDE  6FDC               	movwf	write_regset@set& (0+255),b
  5118  004CE0  0E77               	movlw	high _reg_set_univ
  5119  004CE2  6FDD               	movwf	(write_regset@set+1)& (0+255),b
  5120  004CE4  0E00               	movlw	0
  5121  004CE6  6FDF               	movwf	(write_regset@len+1)& (0+255),b
  5122  004CE8  0E1D               	movlw	29
  5123  004CEA  6FDE               	movwf	write_regset@len& (0+255),b
  5124  004CEC  ECB9  F025         	call	_write_regset	;wreg free
  5125                           
  5126                           ;src/driver/si5328.c: 186:   _delaywdt((unsigned long)((10)*(8000000/4000.0)));
  5127  004CF0  0E14               	movlw	20
  5128  004CF2  0100               	movlb	0	; () banked
  5129  004CF4  6FE7               	movwf	??_si5328_init& (0+255),b
  5130  004CF6  0E7D               	movlw	125
  5131  004CF8                     u12077:
  5132  004CF8  0004               	clrwdt	
  5133  004CFA  2EE8               	decfsz	wreg,f,c
  5134  004CFC  D7FD               	bra	u12077
  5135  004CFE  2FE7               	decfsz	??_si5328_init& (0+255),f,b
  5136  004D00  D7FB               	bra	u12077
  5137  004D02  0004               	clrwdt	
  5138  004D04                     
  5139                           ;src/driver/si5328.c: 187:         si5328_perform_ical(i2c, addr);
  5140  004D04  C0E4  F0D9         	movff	si5328_init@i2c,si5328_perform_ical@i2c
  5141  004D08  C0E5  F0DA         	movff	si5328_init@i2c+1,si5328_perform_ical@i2c+1
  5142  004D0C  C0E6  F0DB         	movff	si5328_init@addr,si5328_perform_ical@addr
  5143  004D10  ECFC  F02E         	call	_si5328_perform_ical	;wreg free
  5144                           
  5145                           ;src/driver/si5328.c: 188:     }
  5146  004D14  EF92  F026         	goto	l503
  5147  004D18                     l9348:
  5148                           
  5149                           ; BSR set to: 0
  5150                           ;src/driver/si5328.c: 190:  {;src/driver/si5328.c: 191:         printf("Si5328 not found
      +                          !\n");
  5151  004D18  0E18               	movlw	low STR_18
  5152  004D1A  6F95               	movwf	printf@fmt& (0+255),b
  5153  004D1C  0E7C               	movlw	high STR_18
  5154  004D1E  6F96               	movwf	(printf@fmt+1)& (0+255),b
  5155  004D20  ECA7  F032         	call	_printf	;wreg free
  5156  004D24                     l503:
  5157  004D24  0012               	return		;funcret
  5158  004D26                     __end_of_si5328_init:
  5159                           	opt callstack 0
  5160                           
  5161 ;; *************** function _show_display *****************
  5162 ;; Defined at:
  5163 ;;		line 210 in file "src/driver/lcd.c"
  5164 ;; Parameters:    Size  Location     Type
  5165 ;;		None
  5166 ;; Auto vars:     Size  Location     Type
  5167 ;;  p               2    3[BANK2 ] PTR unsigned char 
  5168 ;;		 -> itoa@buffer(12), 
  5169 ;;  outqrg          2    1[BANK2 ] unsigned short 
  5170 ;;  lnbqrg          1    5[BANK2 ] unsigned char 
  5171 ;;  xpos            1    0[BANK2 ] unsigned char 
  5172 ;; Return value:  Size  Location     Type
  5173 ;;                  1    wreg      void 
  5174 ;; Registers used:
  5175 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5176 ;; Tracked objects:
  5177 ;;		On entry : 0/0
  5178 ;;		On exit  : 0/0
  5179 ;;		Unchanged: 0/0
  5180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5181 ;;      Params:         0       0       0       0       0       0       0
  5182 ;;      Locals:         0       0       0       6       0       0       0
  5183 ;;      Temps:          0       0       2       0       0       0       0
  5184 ;;      Totals:         0       0       2       6       0       0       0
  5185 ;;Total ram usage:        8 bytes
  5186 ;; Hardware stack levels used:    1
  5187 ;; Hardware stack levels required when called:   19
  5188 ;; This function calls:
  5189 ;;		_itoa
  5190 ;;		_lcd_clear_screen
  5191 ;;		_memcmp
  5192 ;;		_memcpy
  5193 ;;		_print_string
  5194 ;;		_strlen
  5195 ;; This function is called by:
  5196 ;;		_main
  5197 ;; This function uses a non-reentrant model
  5198 ;;
  5199                           
  5200                           	psect	text4
  5201  000828                     __ptext4:
  5202                           	opt callstack 0
  5203  000828                     _show_display:
  5204                           	opt callstack 11
  5205  000828                     
  5206                           ;src/driver/lcd.c: 212:  if(!lcd_available) return;
  5207  000828  506F               	movf	_lcd_available^0,w,c
  5208  00082A  A4D8               	btfss	status,2,c
  5209  00082C  EF1A  F004         	goto	u11161
  5210  000830  EF1C  F004         	goto	u11160
  5211  000834                     u11161:
  5212  000834  EF1E  F004         	goto	l9438
  5213  000838                     u11160:
  5214  000838  EF72  F007         	goto	l659
  5215  00083C                     l9438:
  5216                           
  5217                           ;src/driver/lcd.c: 214:  static u8 old_GPS_lock = 0xff;;src/driver/lcd.c: 215:  static u
      +                          16 old_outqrg = 0;;src/driver/lcd.c: 216:  static u8 old_lnbqrg = 0;;src/driver/lcd.c: 2
      +                          17:  static u8 old_GPS_sat = 0xff;;src/driver/lcd.c: 218:  static char old_GPS_lat[15] =
      +                           {"             "};;src/driver/lcd.c: 219:  static char old_GPS_lon[15] = {"            
      +                           "};;src/driver/lcd.c: 222:  if(booting == 2 && (!adf4351_lockstat || !si5328locked || !
      +                          LNB_laststat))
  5218  00083C  0E02               	movlw	2
  5219  00083E  0101               	movlb	1	; () banked
  5220  000840  19AC               	xorwf	_booting& (0+255),w,b
  5221  000842  A4D8               	btfss	status,2,c
  5222  000844  EF26  F004         	goto	u11171
  5223  000848  EF28  F004         	goto	u11170
  5224  00084C                     u11171:
  5225  00084C  EF42  F004         	goto	l672
  5226  000850                     u11170:
  5227  000850                     
  5228                           ; BSR set to: 1
  5229  000850  5072               	movf	_adf4351_lockstat^0,w,c
  5230  000852  B4D8               	btfsc	status,2,c
  5231  000854  EF2E  F004         	goto	u11181
  5232  000858  EF30  F004         	goto	u11180
  5233  00085C                     u11181:
  5234  00085C  EF40  F004         	goto	l9446
  5235  000860                     u11180:
  5236  000860                     
  5237                           ; BSR set to: 1
  5238  000860  51AF               	movf	_si5328locked& (0+255),w,b
  5239  000862  B4D8               	btfsc	status,2,c
  5240  000864  EF36  F004         	goto	u11191
  5241  000868  EF38  F004         	goto	u11190
  5242  00086C                     u11191:
  5243  00086C  EF40  F004         	goto	l9446
  5244  000870                     u11190:
  5245  000870                     
  5246                           ; BSR set to: 1
  5247  000870  5071               	movf	_LNB_laststat^0,w,c
  5248  000872  A4D8               	btfss	status,2,c
  5249  000874  EF3E  F004         	goto	u11201
  5250  000878  EF40  F004         	goto	u11200
  5251  00087C                     u11201:
  5252  00087C  EF42  F004         	goto	l672
  5253  000880                     u11200:
  5254  000880                     l9446:
  5255                           
  5256                           ; BSR set to: 1
  5257                           ;src/driver/lcd.c: 223:   booting = 0;
  5258  000880  0E00               	movlw	0
  5259  000882  6FAC               	movwf	_booting& (0+255),b
  5260  000884                     l672:
  5261                           
  5262                           ; BSR set to: 1
  5263                           ;src/driver/lcd.c: 225:  if(booting == 0)
  5264  000884  51AC               	movf	_booting& (0+255),w,b
  5265  000886  A4D8               	btfss	status,2,c
  5266  000888  EF48  F004         	goto	u11211
  5267  00088C  EF4A  F004         	goto	u11210
  5268  000890                     u11211:
  5269  000890  EF86  F004         	goto	l9454
  5270  000894                     u11210:
  5271  000894                     
  5272                           ; BSR set to: 1
  5273                           ;src/driver/lcd.c: 226:  {;src/driver/lcd.c: 228:   lcd_clear_screen(1);
  5274  000894  0E01               	movlw	1
  5275  000896  EC0A  F02E         	call	_lcd_clear_screen
  5276                           
  5277                           ;src/driver/lcd.c: 229:   print_string("System SETUP ...",0,2,0);
  5278  00089A  0E92               	movlw	low STR_36
  5279  00089C  0101               	movlb	1	; () banked
  5280  00089E  6F10               	movwf	print_string@s& (0+255),b
  5281  0008A0  0E7C               	movlw	high STR_36
  5282  0008A2  6F11               	movwf	(print_string@s+1)& (0+255),b
  5283  0008A4  0E00               	movlw	0
  5284  0008A6  6F12               	movwf	print_string@x& (0+255),b
  5285  0008A8  0E02               	movlw	2
  5286  0008AA  6F13               	movwf	print_string@y& (0+255),b
  5287  0008AC  0E00               	movlw	0
  5288  0008AE  6F14               	movwf	print_string@underline& (0+255),b
  5289  0008B0  EC95  F02B         	call	_print_string	;wreg free
  5290                           
  5291                           ;src/driver/lcd.c: 230:   print_string("LNB-power:      ",0,4,0);
  5292  0008B4  0E5F               	movlw	low STR_37
  5293  0008B6  0101               	movlb	1	; () banked
  5294  0008B8  6F10               	movwf	print_string@s& (0+255),b
  5295  0008BA  0E7C               	movlw	high STR_37
  5296  0008BC  6F11               	movwf	(print_string@s+1)& (0+255),b
  5297  0008BE  0E00               	movlw	0
  5298  0008C0  6F12               	movwf	print_string@x& (0+255),b
  5299  0008C2  0E04               	movlw	4
  5300  0008C4  6F13               	movwf	print_string@y& (0+255),b
  5301  0008C6  0E00               	movlw	0
  5302  0008C8  6F14               	movwf	print_string@underline& (0+255),b
  5303  0008CA  EC95  F02B         	call	_print_string	;wreg free
  5304                           
  5305                           ;src/driver/lcd.c: 231:   print_string("Sysclock :      ",0,5,0);
  5306  0008CE  0E4E               	movlw	low STR_38
  5307  0008D0  0101               	movlb	1	; () banked
  5308  0008D2  6F10               	movwf	print_string@s& (0+255),b
  5309  0008D4  0E7C               	movlw	high STR_38
  5310  0008D6  6F11               	movwf	(print_string@s+1)& (0+255),b
  5311  0008D8  0E00               	movlw	0
  5312  0008DA  6F12               	movwf	print_string@x& (0+255),b
  5313  0008DC  0E05               	movlw	5
  5314  0008DE  6F13               	movwf	print_string@y& (0+255),b
  5315  0008E0  0E00               	movlw	0
  5316  0008E2  6F14               	movwf	print_string@underline& (0+255),b
  5317  0008E4  EC95  F02B         	call	_print_string	;wreg free
  5318                           
  5319                           ;src/driver/lcd.c: 232:   print_string("Downmixer:      ",0,6,0);
  5320  0008E8  0E70               	movlw	low STR_39
  5321  0008EA  0101               	movlb	1	; () banked
  5322  0008EC  6F10               	movwf	print_string@s& (0+255),b
  5323  0008EE  0E7C               	movlw	high STR_39
  5324  0008F0  6F11               	movwf	(print_string@s+1)& (0+255),b
  5325  0008F2  0E00               	movlw	0
  5326  0008F4  6F12               	movwf	print_string@x& (0+255),b
  5327  0008F6  0E06               	movlw	6
  5328  0008F8  6F13               	movwf	print_string@y& (0+255),b
  5329  0008FA  0E00               	movlw	0
  5330  0008FC  6F14               	movwf	print_string@underline& (0+255),b
  5331  0008FE  EC95  F02B         	call	_print_string	;wreg free
  5332  000902                     
  5333                           ;src/driver/lcd.c: 233:   booting = 1;
  5334  000902  0E01               	movlw	1
  5335  000904  0101               	movlb	1	; () banked
  5336  000906  6FAC               	movwf	_booting& (0+255),b
  5337  000908  EF72  F007         	goto	l659
  5338  00090C                     l9454:
  5339                           
  5340                           ; BSR set to: 1
  5341                           ;src/driver/lcd.c: 238:  adf4351_lockstat = 1;
  5342  00090C  0E01               	movlw	1
  5343  00090E  6E72               	movwf	_adf4351_lockstat^0,c
  5344                           
  5345                           ;src/driver/lcd.c: 239:  si5328locked = 1;
  5346  000910  0E01               	movlw	1
  5347  000912  6FAF               	movwf	_si5328locked& (0+255),b
  5348                           
  5349                           ;src/driver/lcd.c: 240:  LNB_laststat = 1;
  5350  000914  0E01               	movlw	1
  5351  000916  6E71               	movwf	_LNB_laststat^0,c
  5352  000918                     
  5353                           ; BSR set to: 1
  5354                           ;src/driver/lcd.c: 243:  if(booting == 1 && (!adf4351_lockstat || !si5328locked || !LNB_
      +                          laststat))
  5355  000918  05AC               	decf	_booting& (0+255),w,b
  5356  00091A  A4D8               	btfss	status,2,c
  5357  00091C  EF92  F004         	goto	u11221
  5358  000920  EF94  F004         	goto	u11220
  5359  000924                     u11221:
  5360  000924  EF2D  F005         	goto	l9488
  5361  000928                     u11220:
  5362  000928                     
  5363                           ; BSR set to: 1
  5364  000928  5072               	movf	_adf4351_lockstat^0,w,c
  5365  00092A  B4D8               	btfsc	status,2,c
  5366  00092C  EF9A  F004         	goto	u11231
  5367  000930  EF9C  F004         	goto	u11230
  5368  000934                     u11231:
  5369  000934  EFAC  F004         	goto	l9464
  5370  000938                     u11230:
  5371  000938                     
  5372                           ; BSR set to: 1
  5373  000938  51AF               	movf	_si5328locked& (0+255),w,b
  5374  00093A  B4D8               	btfsc	status,2,c
  5375  00093C  EFA2  F004         	goto	u11241
  5376  000940  EFA4  F004         	goto	u11240
  5377  000944                     u11241:
  5378  000944  EFAC  F004         	goto	l9464
  5379  000948                     u11240:
  5380  000948                     
  5381                           ; BSR set to: 1
  5382  000948  5071               	movf	_LNB_laststat^0,w,c
  5383  00094A  A4D8               	btfss	status,2,c
  5384  00094C  EFAA  F004         	goto	u11251
  5385  000950  EFAC  F004         	goto	u11250
  5386  000954                     u11251:
  5387  000954  EF2D  F005         	goto	l9488
  5388  000958                     u11250:
  5389  000958                     l9464:
  5390                           
  5391                           ; BSR set to: 1
  5392                           ;src/driver/lcd.c: 244:  {;src/driver/lcd.c: 246:   if(LNB_laststat) print_string("OK",1
      +                          1*8,4,0); else print_string(itoa(LNB_error),11*8,4,0);
  5393  000958  5071               	movf	_LNB_laststat^0,w,c
  5394  00095A  B4D8               	btfsc	status,2,c
  5395  00095C  EFB2  F004         	goto	u11261
  5396  000960  EFB4  F004         	goto	u11260
  5397  000964                     u11261:
  5398  000964  EFC2  F004         	goto	l9468
  5399  000968                     u11260:
  5400  000968                     
  5401                           ; BSR set to: 1
  5402  000968  0EBB               	movlw	low STR_40
  5403  00096A  6F10               	movwf	print_string@s& (0+255),b
  5404  00096C  0E7D               	movlw	high STR_40
  5405  00096E  6F11               	movwf	(print_string@s+1)& (0+255),b
  5406  000970  0E58               	movlw	88
  5407  000972  6F12               	movwf	print_string@x& (0+255),b
  5408  000974  0E04               	movlw	4
  5409  000976  6F13               	movwf	print_string@y& (0+255),b
  5410  000978  0E00               	movlw	0
  5411  00097A  6F14               	movwf	print_string@underline& (0+255),b
  5412  00097C  EC95  F02B         	call	_print_string	;wreg free
  5413  000980  EFD4  F004         	goto	l9470
  5414  000984                     l9468:
  5415                           
  5416                           ; BSR set to: 1
  5417  000984  C1C4  F019         	movff	_LNB_error,itoa@value
  5418  000988  6A1A               	clrf	(itoa@value+1)^0,c
  5419  00098A  EC1E  F02C         	call	_itoa	;wreg free
  5420  00098E  C019  F110         	movff	?_itoa,print_string@s
  5421  000992  C01A  F111         	movff	?_itoa+1,print_string@s+1
  5422  000996  0E58               	movlw	88
  5423  000998  0101               	movlb	1	; () banked
  5424  00099A  6F12               	movwf	print_string@x& (0+255),b
  5425  00099C  0E04               	movlw	4
  5426  00099E  6F13               	movwf	print_string@y& (0+255),b
  5427  0009A0  0E00               	movlw	0
  5428  0009A2  6F14               	movwf	print_string@underline& (0+255),b
  5429  0009A4  EC95  F02B         	call	_print_string	;wreg free
  5430  0009A8                     l9470:
  5431                           
  5432                           ;src/driver/lcd.c: 247:   if(si5328locked) print_string("LOCK",11*8,5,0); else print_str
      +                          ing("wait",11*8,5,0);
  5433  0009A8  0101               	movlb	1	; () banked
  5434  0009AA  51AF               	movf	_si5328locked& (0+255),w,b
  5435  0009AC  B4D8               	btfsc	status,2,c
  5436  0009AE  EFDB  F004         	goto	u11271
  5437  0009B2  EFDD  F004         	goto	u11270
  5438  0009B6                     u11271:
  5439  0009B6  EFEB  F004         	goto	l9474
  5440  0009BA                     u11270:
  5441  0009BA                     
  5442                           ; BSR set to: 1
  5443  0009BA  0E91               	movlw	low STR_41
  5444  0009BC  6F10               	movwf	print_string@s& (0+255),b
  5445  0009BE  0E7D               	movlw	high STR_41
  5446  0009C0  6F11               	movwf	(print_string@s+1)& (0+255),b
  5447  0009C2  0E58               	movlw	88
  5448  0009C4  6F12               	movwf	print_string@x& (0+255),b
  5449  0009C6  0E05               	movlw	5
  5450  0009C8  6F13               	movwf	print_string@y& (0+255),b
  5451  0009CA  0E00               	movlw	0
  5452  0009CC  6F14               	movwf	print_string@underline& (0+255),b
  5453  0009CE  EC95  F02B         	call	_print_string	;wreg free
  5454  0009D2  EFF7  F004         	goto	l9476
  5455  0009D6                     l9474:
  5456                           
  5457                           ; BSR set to: 1
  5458  0009D6  0E96               	movlw	low STR_42
  5459  0009D8  6F10               	movwf	print_string@s& (0+255),b
  5460  0009DA  0E7D               	movlw	high STR_42
  5461  0009DC  6F11               	movwf	(print_string@s+1)& (0+255),b
  5462  0009DE  0E58               	movlw	88
  5463  0009E0  6F12               	movwf	print_string@x& (0+255),b
  5464  0009E2  0E05               	movlw	5
  5465  0009E4  6F13               	movwf	print_string@y& (0+255),b
  5466  0009E6  0E00               	movlw	0
  5467  0009E8  6F14               	movwf	print_string@underline& (0+255),b
  5468  0009EA  EC95  F02B         	call	_print_string	;wreg free
  5469  0009EE                     l9476:
  5470                           
  5471                           ;src/driver/lcd.c: 248:   if(adf4351_lockstat) print_string("LOCK",11*8,6,0); else print
      +                          _string("wait",11*8,6,0);
  5472  0009EE  5072               	movf	_adf4351_lockstat^0,w,c
  5473  0009F0  B4D8               	btfsc	status,2,c
  5474  0009F2  EFFD  F004         	goto	u11281
  5475  0009F6  EFFF  F004         	goto	u11280
  5476  0009FA                     u11281:
  5477  0009FA  EF0E  F005         	goto	l9480
  5478  0009FE                     u11280:
  5479  0009FE  0E91               	movlw	low STR_41
  5480  000A00  0101               	movlb	1	; () banked
  5481  000A02  6F10               	movwf	print_string@s& (0+255),b
  5482  000A04  0E7D               	movlw	high STR_41
  5483  000A06  6F11               	movwf	(print_string@s+1)& (0+255),b
  5484  000A08  0E58               	movlw	88
  5485  000A0A  6F12               	movwf	print_string@x& (0+255),b
  5486  000A0C  0E06               	movlw	6
  5487  000A0E  6F13               	movwf	print_string@y& (0+255),b
  5488  000A10  0E00               	movlw	0
  5489  000A12  6F14               	movwf	print_string@underline& (0+255),b
  5490  000A14  EC95  F02B         	call	_print_string	;wreg free
  5491  000A18  EF1B  F005         	goto	l9482
  5492  000A1C                     l9480:
  5493  000A1C  0E96               	movlw	low STR_42
  5494  000A1E  0101               	movlb	1	; () banked
  5495  000A20  6F10               	movwf	print_string@s& (0+255),b
  5496  000A22  0E7D               	movlw	high STR_42
  5497  000A24  6F11               	movwf	(print_string@s+1)& (0+255),b
  5498  000A26  0E58               	movlw	88
  5499  000A28  6F12               	movwf	print_string@x& (0+255),b
  5500  000A2A  0E06               	movlw	6
  5501  000A2C  6F13               	movwf	print_string@y& (0+255),b
  5502  000A2E  0E00               	movlw	0
  5503  000A30  6F14               	movwf	print_string@underline& (0+255),b
  5504  000A32  EC95  F02B         	call	_print_string	;wreg free
  5505  000A36                     l9482:
  5506                           
  5507                           ;src/driver/lcd.c: 249:   _delaywdt((unsigned long)((1000)*(8000000/4000.0)));
  5508  000A36  0E08               	movlw	8
  5509  000A38  0101               	movlb	1	; () banked
  5510  000A3A  6F83               	movwf	(??_show_display+1)& (0+255),b
  5511  000A3C  0E9E               	movlw	158
  5512  000A3E  6F82               	movwf	??_show_display& (0+255),b
  5513  000A40  0E4B               	movlw	75
  5514  000A42                     u12087:
  5515  000A42  0004               	clrwdt	
  5516  000A44  2EE8               	decfsz	wreg,f,c
  5517  000A46  D7FD               	bra	u12087
  5518  000A48  2F82               	decfsz	??_show_display& (0+255),f,b
  5519  000A4A  D7FB               	bra	u12087
  5520  000A4C  2F83               	decfsz	(??_show_display+1)& (0+255),f,b
  5521  000A4E  D7F9               	bra	u12087
  5522  000A50  0004               	clrwdt	
  5523  000A52  F000               	nop	
  5524  000A54  0004               	clrwdt	
  5525  000A56  EF72  F007         	goto	l659
  5526  000A5A                     l9488:
  5527                           
  5528                           ; BSR set to: 1
  5529                           ;src/driver/lcd.c: 253:  {;src/driver/lcd.c: 254:   if(booting != 2)
  5530  000A5A  0E02               	movlw	2
  5531  000A5C  19AC               	xorwf	_booting& (0+255),w,b
  5532  000A5E  B4D8               	btfsc	status,2,c
  5533  000A60  EF34  F005         	goto	u11291
  5534  000A64  EF36  F005         	goto	u11290
  5535  000A68                     u11291:
  5536  000A68  EF49  F005         	goto	l9506
  5537  000A6C                     u11290:
  5538  000A6C                     
  5539                           ; BSR set to: 1
  5540                           ;src/driver/lcd.c: 255:   {;src/driver/lcd.c: 257:    lcd_clear_screen(1);
  5541  000A6C  0E01               	movlw	1
  5542  000A6E  EC0A  F02E         	call	_lcd_clear_screen
  5543  000A72                     
  5544                           ;src/driver/lcd.c: 258:    booting = 2;
  5545  000A72  0E02               	movlw	2
  5546  000A74  0101               	movlb	1	; () banked
  5547  000A76  6FAC               	movwf	_booting& (0+255),b
  5548  000A78                     
  5549                           ; BSR set to: 1
  5550                           ;src/driver/lcd.c: 259:    old_GPS_lock = 0xff;
  5551  000A78  69D2               	setf	show_display@old_GPS_lock& (0+255),b
  5552  000A7A                     
  5553                           ; BSR set to: 1
  5554                           ;src/driver/lcd.c: 260:    old_outqrg = 0;
  5555  000A7A  0E00               	movlw	0
  5556  000A7C  6FA3               	movwf	(show_display@old_outqrg+1)& (0+255),b
  5557  000A7E  0E00               	movlw	0
  5558  000A80  6FA2               	movwf	show_display@old_outqrg& (0+255),b
  5559  000A82                     
  5560                           ; BSR set to: 1
  5561                           ;src/driver/lcd.c: 261:    old_lnbqrg = 0;
  5562  000A82  0E00               	movlw	0
  5563  000A84  6FAB               	movwf	show_display@old_lnbqrg& (0+255),b
  5564  000A86                     
  5565                           ; BSR set to: 1
  5566                           ;src/driver/lcd.c: 262:    old_GPS_sat = 0xff;
  5567  000A86  69D1               	setf	show_display@old_GPS_sat& (0+255),b
  5568  000A88                     
  5569                           ; BSR set to: 1
  5570                           ;src/driver/lcd.c: 263:    *old_GPS_lat = 0;
  5571  000A88  0E00               	movlw	0
  5572  000A8A  0102               	movlb	2	; () banked
  5573  000A8C  6FB3               	movwf	show_display@old_GPS_lat& (0+255),b
  5574  000A8E                     
  5575                           ; BSR set to: 2
  5576                           ;src/driver/lcd.c: 264:    *old_GPS_lon = 0;
  5577  000A8E  0E00               	movlw	0
  5578  000A90  6FA4               	movwf	show_display@old_GPS_lon& (0+255),b
  5579  000A92                     l9506:
  5580                           
  5581                           ;src/driver/lcd.c: 270:  char *p;;src/driver/lcd.c: 271:  u8 xpos;;src/driver/lcd.c: 273
      +                          :  u16 outqrg = out_freq_table[actualADFswitch];
  5582  000A92  0101               	movlb	1	; () banked
  5583  000A94  51D3               	movf	_actualADFswitch& (0+255),w,b
  5584  000A96  0D02               	mullw	2
  5585  000A98  0E53               	movlw	low _out_freq_table
  5586  000A9A  24F3               	addwf	243,w,c
  5587  000A9C  6EF6               	movwf	tblptrl,c
  5588  000A9E  0E77               	movlw	high _out_freq_table
  5589  000AA0  20F4               	addwfc	244,w,c
  5590  000AA2  6EF7               	movwf	tblptrh,c
  5591  000AA4                     	if	0	;There are less than 3 active tblptr bytes
  5592  000AA4                     	endif
  5593  000AA4  0009               	tblrd		*+
  5594  000AA6  CFF5 F2E1          	movff	tablat,show_display@outqrg
  5595  000AAA  000A               	tblrd		*-
  5596  000AAC  CFF5 F2E2          	movff	tablat,show_display@outqrg+1
  5597  000AB0                     
  5598                           ; BSR set to: 1
  5599                           ;src/driver/lcd.c: 274:  u8 lnbqrg = LO[currentLO-24];
  5600  000AB0  0EAD               	movlw	low (_LO+65512)
  5601  000AB2  25D6               	addwf	_currentLO& (0+255),w,b
  5602  000AB4  6ED9               	movwf	fsr2l,c
  5603  000AB6  6ADA               	clrf	fsr2h,c
  5604  000AB8  0E01               	movlw	high (_LO+65512)
  5605  000ABA  22DA               	addwfc	fsr2h,f,c
  5606  000ABC  50DF               	movf	indf2,w,c
  5607  000ABE  0102               	movlb	2	; () banked
  5608  000AC0  6FE5               	movwf	show_display@lnbqrg& (0+255),b
  5609  000AC2                     
  5610                           ; BSR set to: 2
  5611                           ;src/driver/lcd.c: 276:  if(old_GPS_lock != GPS_lock)
  5612  000AC2  0101               	movlb	1	; () banked
  5613  000AC4  51AE               	movf	_GPS_lock& (0+255),w,b
  5614  000AC6  19D2               	xorwf	show_display@old_GPS_lock& (0+255),w,b
  5615  000AC8  B4D8               	btfsc	status,2,c
  5616  000ACA  EF69  F005         	goto	u11301
  5617  000ACE  EF6B  F005         	goto	u11300
  5618  000AD2                     u11301:
  5619  000AD2  EFE4  F005         	goto	l9526
  5620  000AD6                     u11300:
  5621  000AD6                     
  5622                           ; BSR set to: 1
  5623                           ;src/driver/lcd.c: 277:  {;src/driver/lcd.c: 278:   if(!GPS_lock)
  5624  000AD6  51AE               	movf	_GPS_lock& (0+255),w,b
  5625  000AD8  A4D8               	btfss	status,2,c
  5626  000ADA  EF71  F005         	goto	u11311
  5627  000ADE  EF73  F005         	goto	u11310
  5628  000AE2                     u11311:
  5629  000AE2  EFA8  F005         	goto	l9516
  5630  000AE6                     u11310:
  5631  000AE6                     
  5632                           ; BSR set to: 1
  5633                           ;src/driver/lcd.c: 279:   {;src/driver/lcd.c: 280:    print_string("O/TCXO",10*8,0,0);
  5634  000AE6  0E70               	movlw	low STR_45
  5635  000AE8  6F10               	movwf	print_string@s& (0+255),b
  5636  000AEA  0E7D               	movlw	high STR_45
  5637  000AEC  6F11               	movwf	(print_string@s+1)& (0+255),b
  5638  000AEE  0E50               	movlw	80
  5639  000AF0  6F12               	movwf	print_string@x& (0+255),b
  5640  000AF2  0E00               	movlw	0
  5641  000AF4  6F13               	movwf	print_string@y& (0+255),b
  5642  000AF6  0E00               	movlw	0
  5643  000AF8  6F14               	movwf	print_string@underline& (0+255),b
  5644  000AFA  EC95  F02B         	call	_print_string	;wreg free
  5645                           
  5646                           ;src/driver/lcd.c: 282:    print_string("                ",0,5,0);
  5647  000AFE  0E3D               	movlw	low STR_46
  5648  000B00  0101               	movlb	1	; () banked
  5649  000B02  6F10               	movwf	print_string@s& (0+255),b
  5650  000B04  0E7C               	movlw	high STR_46
  5651  000B06  6F11               	movwf	(print_string@s+1)& (0+255),b
  5652  000B08  0E00               	movlw	0
  5653  000B0A  6F12               	movwf	print_string@x& (0+255),b
  5654  000B0C  0E05               	movlw	5
  5655  000B0E  6F13               	movwf	print_string@y& (0+255),b
  5656  000B10  0E00               	movlw	0
  5657  000B12  6F14               	movwf	print_string@underline& (0+255),b
  5658  000B14  EC95  F02B         	call	_print_string	;wreg free
  5659                           
  5660                           ;src/driver/lcd.c: 283:    print_string("System ready    ",0,6,0);
  5661  000B18  0E81               	movlw	low STR_47
  5662  000B1A  0101               	movlb	1	; () banked
  5663  000B1C  6F10               	movwf	print_string@s& (0+255),b
  5664  000B1E  0E7C               	movlw	high STR_47
  5665  000B20  6F11               	movwf	(print_string@s+1)& (0+255),b
  5666  000B22  0E00               	movlw	0
  5667  000B24  6F12               	movwf	print_string@x& (0+255),b
  5668  000B26  0E06               	movlw	6
  5669  000B28  6F13               	movwf	print_string@y& (0+255),b
  5670  000B2A  0E00               	movlw	0
  5671  000B2C  6F14               	movwf	print_string@underline& (0+255),b
  5672  000B2E  EC95  F02B         	call	_print_string	;wreg free
  5673                           
  5674                           ;src/driver/lcd.c: 284:    print_string("                ",0,7,0);
  5675  000B32  0E3D               	movlw	low STR_46
  5676  000B34  0101               	movlb	1	; () banked
  5677  000B36  6F10               	movwf	print_string@s& (0+255),b
  5678  000B38  0E7C               	movlw	high STR_46
  5679  000B3A  6F11               	movwf	(print_string@s+1)& (0+255),b
  5680  000B3C  0E00               	movlw	0
  5681  000B3E  6F12               	movwf	print_string@x& (0+255),b
  5682  000B40  0E07               	movlw	7
  5683  000B42  6F13               	movwf	print_string@y& (0+255),b
  5684  000B44  0E00               	movlw	0
  5685  000B46  6F14               	movwf	print_string@underline& (0+255),b
  5686  000B48  EC95  F02B         	call	_print_string	;wreg free
  5687                           
  5688                           ;src/driver/lcd.c: 285:   }
  5689  000B4C  EFE2  F005         	goto	l9524
  5690  000B50                     l9516:
  5691                           
  5692                           ; BSR set to: 1
  5693                           ;src/driver/lcd.c: 287:   {;src/driver/lcd.c: 288:    print_string(" GPS  ",10*8,0,0);
  5694  000B50  0E69               	movlw	low STR_49
  5695  000B52  6F10               	movwf	print_string@s& (0+255),b
  5696  000B54  0E7D               	movlw	high STR_49
  5697  000B56  6F11               	movwf	(print_string@s+1)& (0+255),b
  5698  000B58  0E50               	movlw	80
  5699  000B5A  6F12               	movwf	print_string@x& (0+255),b
  5700  000B5C  0E00               	movlw	0
  5701  000B5E  6F13               	movwf	print_string@y& (0+255),b
  5702  000B60  0E00               	movlw	0
  5703  000B62  6F14               	movwf	print_string@underline& (0+255),b
  5704  000B64  EC95  F02B         	call	_print_string	;wreg free
  5705                           
  5706                           ;src/driver/lcd.c: 289:    print_string("                ",0,5,0);
  5707  000B68  0E3D               	movlw	low STR_46
  5708  000B6A  0101               	movlb	1	; () banked
  5709  000B6C  6F10               	movwf	print_string@s& (0+255),b
  5710  000B6E  0E7C               	movlw	high STR_46
  5711  000B70  6F11               	movwf	(print_string@s+1)& (0+255),b
  5712  000B72  0E00               	movlw	0
  5713  000B74  6F12               	movwf	print_string@x& (0+255),b
  5714  000B76  0E05               	movlw	5
  5715  000B78  6F13               	movwf	print_string@y& (0+255),b
  5716  000B7A  0E00               	movlw	0
  5717  000B7C  6F14               	movwf	print_string@underline& (0+255),b
  5718  000B7E  EC95  F02B         	call	_print_string	;wreg free
  5719                           
  5720                           ;src/driver/lcd.c: 290:    print_string("                ",0,6,0);
  5721  000B82  0E3D               	movlw	low STR_46
  5722  000B84  0101               	movlb	1	; () banked
  5723  000B86  6F10               	movwf	print_string@s& (0+255),b
  5724  000B88  0E7C               	movlw	high STR_46
  5725  000B8A  6F11               	movwf	(print_string@s+1)& (0+255),b
  5726  000B8C  0E00               	movlw	0
  5727  000B8E  6F12               	movwf	print_string@x& (0+255),b
  5728  000B90  0E06               	movlw	6
  5729  000B92  6F13               	movwf	print_string@y& (0+255),b
  5730  000B94  0E00               	movlw	0
  5731  000B96  6F14               	movwf	print_string@underline& (0+255),b
  5732  000B98  EC95  F02B         	call	_print_string	;wreg free
  5733                           
  5734                           ;src/driver/lcd.c: 291:    print_string("                ",0,7,0);
  5735  000B9C  0E3D               	movlw	low STR_46
  5736  000B9E  0101               	movlb	1	; () banked
  5737  000BA0  6F10               	movwf	print_string@s& (0+255),b
  5738  000BA2  0E7C               	movlw	high STR_46
  5739  000BA4  6F11               	movwf	(print_string@s+1)& (0+255),b
  5740  000BA6  0E00               	movlw	0
  5741  000BA8  6F12               	movwf	print_string@x& (0+255),b
  5742  000BAA  0E07               	movlw	7
  5743  000BAC  6F13               	movwf	print_string@y& (0+255),b
  5744  000BAE  0E00               	movlw	0
  5745  000BB0  6F14               	movwf	print_string@underline& (0+255),b
  5746  000BB2  EC95  F02B         	call	_print_string	;wreg free
  5747  000BB6                     
  5748                           ;src/driver/lcd.c: 292:    old_GPS_sat = 0xff;
  5749  000BB6  0101               	movlb	1	; () banked
  5750  000BB8  69D1               	setf	show_display@old_GPS_sat& (0+255),b
  5751  000BBA                     
  5752                           ; BSR set to: 1
  5753                           ;src/driver/lcd.c: 293:    *old_GPS_lat = 0;
  5754  000BBA  0E00               	movlw	0
  5755  000BBC  0102               	movlb	2	; () banked
  5756  000BBE  6FB3               	movwf	show_display@old_GPS_lat& (0+255),b
  5757  000BC0                     
  5758                           ; BSR set to: 2
  5759                           ;src/driver/lcd.c: 294:    *old_GPS_lon = 0;
  5760  000BC0  0E00               	movlw	0
  5761  000BC2  6FA4               	movwf	show_display@old_GPS_lon& (0+255),b
  5762  000BC4                     l9524:
  5763                           
  5764                           ;src/driver/lcd.c: 297:   old_GPS_lock = GPS_lock;
  5765  000BC4  C1AE  F1D2         	movff	_GPS_lock,show_display@old_GPS_lock
  5766  000BC8                     l9526:
  5767                           
  5768                           ;src/driver/lcd.c: 300:  if(old_outqrg != outqrg)
  5769  000BC8  0102               	movlb	2	; () banked
  5770  000BCA  51E1               	movf	show_display@outqrg& (0+255),w,b
  5771  000BCC  0101               	movlb	1	; () banked
  5772  000BCE  19A2               	xorwf	show_display@old_outqrg& (0+255),w,b
  5773  000BD0  E10B               	bnz	u11320
  5774  000BD2  0102               	movlb	2	; () banked
  5775  000BD4  51E2               	movf	(show_display@outqrg+1)& (0+255),w,b
  5776  000BD6  0101               	movlb	1	; () banked
  5777  000BD8  19A3               	xorwf	(show_display@old_outqrg+1)& (0+255),w,b
  5778  000BDA  B4D8               	btfsc	status,2,c
  5779  000BDC  EFF2  F005         	goto	u11321
  5780  000BE0  EFF4  F005         	goto	u11320
  5781  000BE4                     u11321:
  5782  000BE4  EF41  F006         	goto	l9542
  5783  000BE8                     u11320:
  5784  000BE8                     
  5785                           ; BSR set to: 1
  5786                           ;src/driver/lcd.c: 301:  {;src/driver/lcd.c: 302:   print_string("OUT:     ",0,3,0);
  5787  000BE8  0E5F               	movlw	low STR_53
  5788  000BEA  6F10               	movwf	print_string@s& (0+255),b
  5789  000BEC  0E7D               	movlw	high STR_53
  5790  000BEE  6F11               	movwf	(print_string@s+1)& (0+255),b
  5791  000BF0  0E00               	movlw	0
  5792  000BF2  6F12               	movwf	print_string@x& (0+255),b
  5793  000BF4  0E03               	movlw	3
  5794  000BF6  6F13               	movwf	print_string@y& (0+255),b
  5795  000BF8  0E00               	movlw	0
  5796  000BFA  6F14               	movwf	print_string@underline& (0+255),b
  5797  000BFC  EC95  F02B         	call	_print_string	;wreg free
  5798  000C00                     
  5799                           ;src/driver/lcd.c: 303:   p = itoa(outqrg);
  5800  000C00  C2E1  F019         	movff	show_display@outqrg,itoa@value
  5801  000C04  C2E2  F01A         	movff	show_display@outqrg+1,itoa@value+1
  5802  000C08  EC1E  F02C         	call	_itoa	;wreg free
  5803  000C0C  C019  F2E3         	movff	?_itoa,show_display@p
  5804  000C10  C01A  F2E4         	movff	?_itoa+1,show_display@p+1
  5805  000C14                     
  5806                           ;src/driver/lcd.c: 304:   xpos = 8-strlen(p);
  5807  000C14  C2E3  F00D         	movff	show_display@p,strlen@s
  5808  000C18  C2E4  F00E         	movff	show_display@p+1,strlen@s+1
  5809  000C1C  EC54  F030         	call	_strlen	;wreg free
  5810  000C20  500D               	movf	?_strlen^0,w,c
  5811  000C22  0808               	sublw	8
  5812  000C24  0102               	movlb	2	; () banked
  5813  000C26  6FE0               	movwf	show_display@xpos& (0+255),b
  5814  000C28                     
  5815                           ; BSR set to: 2
  5816                           ;src/driver/lcd.c: 305:   print_string(p, xpos*8, 3, 0);
  5817  000C28  C2E3  F110         	movff	show_display@p,print_string@s
  5818  000C2C  C2E4  F111         	movff	show_display@p+1,print_string@s+1
  5819  000C30  51E0               	movf	show_display@xpos& (0+255),w,b
  5820  000C32  0D08               	mullw	8
  5821  000C34  CFF3 F112          	movff	prodl,print_string@x
  5822  000C38  0E03               	movlw	3
  5823  000C3A  0101               	movlb	1	; () banked
  5824  000C3C  6F13               	movwf	print_string@y& (0+255),b
  5825  000C3E  0E00               	movlw	0
  5826  000C40  6F14               	movwf	print_string@underline& (0+255),b
  5827  000C42  EC95  F02B         	call	_print_string	;wreg free
  5828  000C46                     
  5829                           ;src/driver/lcd.c: 306:   print_string(".55", 8*8, 3, 0);
  5830  000C46  0EA4               	movlw	low STR_54
  5831  000C48  0101               	movlb	1	; () banked
  5832  000C4A  6F10               	movwf	print_string@s& (0+255),b
  5833  000C4C  0E7D               	movlw	high STR_54
  5834  000C4E  6F11               	movwf	(print_string@s+1)& (0+255),b
  5835  000C50  0E40               	movlw	64
  5836  000C52  6F12               	movwf	print_string@x& (0+255),b
  5837  000C54  0E03               	movlw	3
  5838  000C56  6F13               	movwf	print_string@y& (0+255),b
  5839  000C58  0E00               	movlw	0
  5840  000C5A  6F14               	movwf	print_string@underline& (0+255),b
  5841  000C5C  EC95  F02B         	call	_print_string	;wreg free
  5842  000C60                     
  5843                           ;src/driver/lcd.c: 307:   print_string("MHz",12*8,3,0);
  5844  000C60  0EA8               	movlw	low STR_55
  5845  000C62  0101               	movlb	1	; () banked
  5846  000C64  6F10               	movwf	print_string@s& (0+255),b
  5847  000C66  0E7D               	movlw	high STR_55
  5848  000C68  6F11               	movwf	(print_string@s+1)& (0+255),b
  5849  000C6A  0E60               	movlw	96
  5850  000C6C  6F12               	movwf	print_string@x& (0+255),b
  5851  000C6E  0E03               	movlw	3
  5852  000C70  6F13               	movwf	print_string@y& (0+255),b
  5853  000C72  0E00               	movlw	0
  5854  000C74  6F14               	movwf	print_string@underline& (0+255),b
  5855  000C76  EC95  F02B         	call	_print_string	;wreg free
  5856  000C7A                     
  5857                           ;src/driver/lcd.c: 309:   old_outqrg = outqrg;
  5858  000C7A  C2E1  F1A2         	movff	show_display@outqrg,show_display@old_outqrg
  5859  000C7E  C2E2  F1A3         	movff	show_display@outqrg+1,show_display@old_outqrg+1
  5860  000C82                     l9542:
  5861                           
  5862                           ;src/driver/lcd.c: 312:  if(old_lnbqrg != lnbqrg)
  5863  000C82  0102               	movlb	2	; () banked
  5864  000C84  51E5               	movf	show_display@lnbqrg& (0+255),w,b
  5865  000C86  0101               	movlb	1	; () banked
  5866  000C88  19AB               	xorwf	show_display@old_lnbqrg& (0+255),w,b
  5867  000C8A  B4D8               	btfsc	status,2,c
  5868  000C8C  EF4A  F006         	goto	u11331
  5869  000C90  EF4C  F006         	goto	u11330
  5870  000C94                     u11331:
  5871  000C94  EF9F  F006         	goto	l9554
  5872  000C98                     u11330:
  5873  000C98                     
  5874                           ; BSR set to: 1
  5875                           ;src/driver/lcd.c: 313:  {;src/driver/lcd.c: 314:   print_string("LNB:",0,4,0);
  5876  000C98  0E7D               	movlw	low STR_56
  5877  000C9A  6F10               	movwf	print_string@s& (0+255),b
  5878  000C9C  0E7D               	movlw	high STR_56
  5879  000C9E  6F11               	movwf	(print_string@s+1)& (0+255),b
  5880  000CA0  0E00               	movlw	0
  5881  000CA2  6F12               	movwf	print_string@x& (0+255),b
  5882  000CA4  0E04               	movlw	4
  5883  000CA6  6F13               	movwf	print_string@y& (0+255),b
  5884  000CA8  0E00               	movlw	0
  5885  000CAA  6F14               	movwf	print_string@underline& (0+255),b
  5886  000CAC  EC95  F02B         	call	_print_string	;wreg free
  5887  000CB0                     
  5888                           ;src/driver/lcd.c: 315:   if(lnbqrg == 27)
  5889  000CB0  0E1B               	movlw	27
  5890  000CB2  0102               	movlb	2	; () banked
  5891  000CB4  19E5               	xorwf	show_display@lnbqrg& (0+255),w,b
  5892  000CB6  A4D8               	btfss	status,2,c
  5893  000CB8  EF60  F006         	goto	u11341
  5894  000CBC  EF62  F006         	goto	u11340
  5895  000CC0                     u11341:
  5896  000CC0  EF71  F006         	goto	l9550
  5897  000CC4                     u11340:
  5898  000CC4                     
  5899                           ; BSR set to: 2
  5900                           ;src/driver/lcd.c: 316:    print_string("25.45", 6*8, 4, 0);
  5901  000CC4  0E77               	movlw	low STR_57
  5902  000CC6  0101               	movlb	1	; () banked
  5903  000CC8  6F10               	movwf	print_string@s& (0+255),b
  5904  000CCA  0E7D               	movlw	high STR_57
  5905  000CCC  6F11               	movwf	(print_string@s+1)& (0+255),b
  5906  000CCE  0E30               	movlw	48
  5907  000CD0  6F12               	movwf	print_string@x& (0+255),b
  5908  000CD2  0E04               	movlw	4
  5909  000CD4  6F13               	movwf	print_string@y& (0+255),b
  5910  000CD6  0E00               	movlw	0
  5911  000CD8  6F14               	movwf	print_string@underline& (0+255),b
  5912  000CDA  EC95  F02B         	call	_print_string	;wreg free
  5913  000CDE  EF90  F006         	goto	l693
  5914  000CE2                     l9550:
  5915                           
  5916                           ; BSR set to: 2
  5917                           ;src/driver/lcd.c: 318:   {;src/driver/lcd.c: 319:    print_string(itoa(lnbqrg), 6*8, 4,
      +                           0);
  5918  000CE2  C2E5  F019         	movff	show_display@lnbqrg,itoa@value
  5919  000CE6  6A1A               	clrf	(itoa@value+1)^0,c
  5920  000CE8  EC1E  F02C         	call	_itoa	;wreg free
  5921  000CEC  C019  F110         	movff	?_itoa,print_string@s
  5922  000CF0  C01A  F111         	movff	?_itoa+1,print_string@s+1
  5923  000CF4  0E30               	movlw	48
  5924  000CF6  0101               	movlb	1	; () banked
  5925  000CF8  6F12               	movwf	print_string@x& (0+255),b
  5926  000CFA  0E04               	movlw	4
  5927  000CFC  6F13               	movwf	print_string@y& (0+255),b
  5928  000CFE  0E00               	movlw	0
  5929  000D00  6F14               	movwf	print_string@underline& (0+255),b
  5930  000D02  EC95  F02B         	call	_print_string	;wreg free
  5931                           
  5932                           ;src/driver/lcd.c: 320:    print_string(".00", 8*8, 4, 0);
  5933  000D06  0EA0               	movlw	low STR_58
  5934  000D08  0101               	movlb	1	; () banked
  5935  000D0A  6F10               	movwf	print_string@s& (0+255),b
  5936  000D0C  0E7D               	movlw	high STR_58
  5937  000D0E  6F11               	movwf	(print_string@s+1)& (0+255),b
  5938  000D10  0E40               	movlw	64
  5939  000D12  6F12               	movwf	print_string@x& (0+255),b
  5940  000D14  0E04               	movlw	4
  5941  000D16  6F13               	movwf	print_string@y& (0+255),b
  5942  000D18  0E00               	movlw	0
  5943  000D1A  6F14               	movwf	print_string@underline& (0+255),b
  5944  000D1C  EC95  F02B         	call	_print_string	;wreg free
  5945  000D20                     l693:
  5946                           
  5947                           ;src/driver/lcd.c: 322:   print_string("MHz",12*8,4,0);
  5948  000D20  0EA8               	movlw	low STR_55
  5949  000D22  0101               	movlb	1	; () banked
  5950  000D24  6F10               	movwf	print_string@s& (0+255),b
  5951  000D26  0E7D               	movlw	high STR_55
  5952  000D28  6F11               	movwf	(print_string@s+1)& (0+255),b
  5953  000D2A  0E60               	movlw	96
  5954  000D2C  6F12               	movwf	print_string@x& (0+255),b
  5955  000D2E  0E04               	movlw	4
  5956  000D30  6F13               	movwf	print_string@y& (0+255),b
  5957  000D32  0E00               	movlw	0
  5958  000D34  6F14               	movwf	print_string@underline& (0+255),b
  5959  000D36  EC95  F02B         	call	_print_string	;wreg free
  5960  000D3A                     
  5961                           ;src/driver/lcd.c: 324:   old_lnbqrg = lnbqrg;
  5962  000D3A  C2E5  F1AB         	movff	show_display@lnbqrg,show_display@old_lnbqrg
  5963  000D3E                     l9554:
  5964                           
  5965                           ;src/driver/lcd.c: 327:  if(GPS_lock)
  5966  000D3E  0101               	movlb	1	; () banked
  5967  000D40  51AE               	movf	_GPS_lock& (0+255),w,b
  5968  000D42  B4D8               	btfsc	status,2,c
  5969  000D44  EFA6  F006         	goto	u11351
  5970  000D48  EFA8  F006         	goto	u11350
  5971  000D4C                     u11351:
  5972  000D4C  EF72  F007         	goto	l659
  5973  000D50                     u11350:
  5974  000D50                     
  5975                           ; BSR set to: 1
  5976                           ;src/driver/lcd.c: 328:  {;src/driver/lcd.c: 329:   if(old_GPS_sat != GPS_sat)
  5977  000D50  51AD               	movf	_GPS_sat& (0+255),w,b
  5978  000D52  19D1               	xorwf	show_display@old_GPS_sat& (0+255),w,b
  5979  000D54  B4D8               	btfsc	status,2,c
  5980  000D56  EFAF  F006         	goto	u11361
  5981  000D5A  EFB1  F006         	goto	u11360
  5982  000D5E                     u11361:
  5983  000D5E  EFF4  F006         	goto	l9570
  5984  000D62                     u11360:
  5985  000D62                     
  5986                           ; BSR set to: 1
  5987                           ;src/driver/lcd.c: 330:   {;src/driver/lcd.c: 331:    print_string("SAT:",0,5,0);
  5988  000D62  0E8C               	movlw	low STR_60
  5989  000D64  6F10               	movwf	print_string@s& (0+255),b
  5990  000D66  0E7D               	movlw	high STR_60
  5991  000D68  6F11               	movwf	(print_string@s+1)& (0+255),b
  5992  000D6A  0E00               	movlw	0
  5993  000D6C  6F12               	movwf	print_string@x& (0+255),b
  5994  000D6E  0E05               	movlw	5
  5995  000D70  6F13               	movwf	print_string@y& (0+255),b
  5996  000D72  0E00               	movlw	0
  5997  000D74  6F14               	movwf	print_string@underline& (0+255),b
  5998  000D76  EC95  F02B         	call	_print_string	;wreg free
  5999  000D7A                     
  6000                           ;src/driver/lcd.c: 332:    p = itoa(GPS_sat);
  6001  000D7A  C1AD  F019         	movff	_GPS_sat,itoa@value
  6002  000D7E  6A1A               	clrf	(itoa@value+1)^0,c
  6003  000D80  EC1E  F02C         	call	_itoa	;wreg free
  6004  000D84  C019  F2E3         	movff	?_itoa,show_display@p
  6005  000D88  C01A  F2E4         	movff	?_itoa+1,show_display@p+1
  6006  000D8C                     
  6007                           ;src/driver/lcd.c: 333:    xpos = 8-strlen(p);
  6008  000D8C  C2E3  F00D         	movff	show_display@p,strlen@s
  6009  000D90  C2E4  F00E         	movff	show_display@p+1,strlen@s+1
  6010  000D94  EC54  F030         	call	_strlen	;wreg free
  6011  000D98  500D               	movf	?_strlen^0,w,c
  6012  000D9A  0808               	sublw	8
  6013  000D9C  0102               	movlb	2	; () banked
  6014  000D9E  6FE0               	movwf	show_display@xpos& (0+255),b
  6015  000DA0                     
  6016                           ; BSR set to: 2
  6017                           ;src/driver/lcd.c: 334:    print_string("       ",4*8,5,0);
  6018  000DA0  0E46               	movlw	low (STR_46+9)
  6019  000DA2  0101               	movlb	1	; () banked
  6020  000DA4  6F10               	movwf	print_string@s& (0+255),b
  6021  000DA6  0E7C               	movlw	high (STR_46+9)
  6022  000DA8  6F11               	movwf	(print_string@s+1)& (0+255),b
  6023  000DAA  0E20               	movlw	32
  6024  000DAC  6F12               	movwf	print_string@x& (0+255),b
  6025  000DAE  0E05               	movlw	5
  6026  000DB0  6F13               	movwf	print_string@y& (0+255),b
  6027  000DB2  0E00               	movlw	0
  6028  000DB4  6F14               	movwf	print_string@underline& (0+255),b
  6029  000DB6  EC95  F02B         	call	_print_string	;wreg free
  6030  000DBA                     
  6031                           ;src/driver/lcd.c: 335:    print_string(itoa(GPS_sat),xpos*8,5,0);
  6032  000DBA  C1AD  F019         	movff	_GPS_sat,itoa@value
  6033  000DBE  6A1A               	clrf	(itoa@value+1)^0,c
  6034  000DC0  EC1E  F02C         	call	_itoa	;wreg free
  6035  000DC4  C019  F110         	movff	?_itoa,print_string@s
  6036  000DC8  C01A  F111         	movff	?_itoa+1,print_string@s+1
  6037  000DCC  0102               	movlb	2	; () banked
  6038  000DCE  51E0               	movf	show_display@xpos& (0+255),w,b
  6039  000DD0  0D08               	mullw	8
  6040  000DD2  CFF3 F112          	movff	prodl,print_string@x
  6041  000DD6  0E05               	movlw	5
  6042  000DD8  0101               	movlb	1	; () banked
  6043  000DDA  6F13               	movwf	print_string@y& (0+255),b
  6044  000DDC  0E00               	movlw	0
  6045  000DDE  6F14               	movwf	print_string@underline& (0+255),b
  6046  000DE0  EC95  F02B         	call	_print_string	;wreg free
  6047  000DE4                     
  6048                           ;src/driver/lcd.c: 337:    old_GPS_sat = GPS_sat;
  6049  000DE4  C1AD  F1D1         	movff	_GPS_sat,show_display@old_GPS_sat
  6050  000DE8                     l9570:
  6051                           
  6052                           ;src/driver/lcd.c: 340:   if(memcmp(old_GPS_lat,GPS_lat,15))
  6053  000DE8  0EB3               	movlw	low show_display@old_GPS_lat
  6054  000DEA  6E0D               	movwf	memcmp@vl^0,c
  6055  000DEC  0E02               	movlw	high show_display@old_GPS_lat
  6056  000DEE  6E0E               	movwf	(memcmp@vl+1)^0,c
  6057  000DF0  0EE6               	movlw	low _GPS_lat
  6058  000DF2  6E0F               	movwf	memcmp@vr^0,c
  6059  000DF4  0E01               	movlw	high _GPS_lat
  6060  000DF6  6E10               	movwf	(memcmp@vr+1)^0,c
  6061  000DF8  0E00               	movlw	0
  6062  000DFA  6E12               	movwf	(memcmp@n+1)^0,c
  6063  000DFC  0E0F               	movlw	15
  6064  000DFE  6E11               	movwf	memcmp@n^0,c
  6065  000E00  EC01  F02B         	call	_memcmp	;wreg free
  6066  000E04  500D               	movf	?_memcmp^0,w,c
  6067  000E06  100E               	iorwf	(?_memcmp+1)^0,w,c
  6068  000E08  B4D8               	btfsc	status,2,c
  6069  000E0A  EF09  F007         	goto	u11371
  6070  000E0E  EF0B  F007         	goto	u11370
  6071  000E12                     u11371:
  6072  000E12  EF33  F007         	goto	l9576
  6073  000E16                     u11370:
  6074  000E16                     
  6075                           ;src/driver/lcd.c: 341:   {;src/driver/lcd.c: 342:    print_string("LAT:",0,6,0);
  6076  000E16  0E87               	movlw	low STR_62
  6077  000E18  0101               	movlb	1	; () banked
  6078  000E1A  6F10               	movwf	print_string@s& (0+255),b
  6079  000E1C  0E7D               	movlw	high STR_62
  6080  000E1E  6F11               	movwf	(print_string@s+1)& (0+255),b
  6081  000E20  0E00               	movlw	0
  6082  000E22  6F12               	movwf	print_string@x& (0+255),b
  6083  000E24  0E06               	movlw	6
  6084  000E26  6F13               	movwf	print_string@y& (0+255),b
  6085  000E28  0E00               	movlw	0
  6086  000E2A  6F14               	movwf	print_string@underline& (0+255),b
  6087  000E2C  EC95  F02B         	call	_print_string	;wreg free
  6088                           
  6089                           ;src/driver/lcd.c: 343:    print_string(GPS_lat,8*6,6,0);
  6090  000E30  0EE6               	movlw	low _GPS_lat
  6091  000E32  0101               	movlb	1	; () banked
  6092  000E34  6F10               	movwf	print_string@s& (0+255),b
  6093  000E36  0E01               	movlw	high _GPS_lat
  6094  000E38  6F11               	movwf	(print_string@s+1)& (0+255),b
  6095  000E3A  0E30               	movlw	48
  6096  000E3C  6F12               	movwf	print_string@x& (0+255),b
  6097  000E3E  0E06               	movlw	6
  6098  000E40  6F13               	movwf	print_string@y& (0+255),b
  6099  000E42  0E00               	movlw	0
  6100  000E44  6F14               	movwf	print_string@underline& (0+255),b
  6101  000E46  EC95  F02B         	call	_print_string	;wreg free
  6102  000E4A                     
  6103                           ;src/driver/lcd.c: 345:    memcpy(old_GPS_lat,GPS_lat,15);
  6104  000E4A  0EB3               	movlw	low show_display@old_GPS_lat
  6105  000E4C  6E0D               	movwf	memcpy@d1^0,c
  6106  000E4E  0E02               	movlw	high show_display@old_GPS_lat
  6107  000E50  6E0E               	movwf	(memcpy@d1+1)^0,c
  6108  000E52  0EE6               	movlw	low _GPS_lat
  6109  000E54  6E0F               	movwf	memcpy@s1^0,c
  6110  000E56  0E01               	movlw	high _GPS_lat
  6111  000E58  6E10               	movwf	(memcpy@s1+1)^0,c
  6112  000E5A  0E00               	movlw	0
  6113  000E5C  6E12               	movwf	(memcpy@n+1)^0,c
  6114  000E5E  0E0F               	movlw	15
  6115  000E60  6E11               	movwf	memcpy@n^0,c
  6116  000E62  EC2C  F030         	call	_memcpy	;wreg free
  6117  000E66                     l9576:
  6118                           
  6119                           ;src/driver/lcd.c: 348:   if(memcmp(old_GPS_lon,GPS_lon,15))
  6120  000E66  0EA4               	movlw	low show_display@old_GPS_lon
  6121  000E68  6E0D               	movwf	memcmp@vl^0,c
  6122  000E6A  0E02               	movlw	high show_display@old_GPS_lon
  6123  000E6C  6E0E               	movwf	(memcmp@vl+1)^0,c
  6124  000E6E  0ED7               	movlw	low _GPS_lon
  6125  000E70  6E0F               	movwf	memcmp@vr^0,c
  6126  000E72  0E01               	movlw	high _GPS_lon
  6127  000E74  6E10               	movwf	(memcmp@vr+1)^0,c
  6128  000E76  0E00               	movlw	0
  6129  000E78  6E12               	movwf	(memcmp@n+1)^0,c
  6130  000E7A  0E0F               	movlw	15
  6131  000E7C  6E11               	movwf	memcmp@n^0,c
  6132  000E7E  EC01  F02B         	call	_memcmp	;wreg free
  6133  000E82  500D               	movf	?_memcmp^0,w,c
  6134  000E84  100E               	iorwf	(?_memcmp+1)^0,w,c
  6135  000E86  B4D8               	btfsc	status,2,c
  6136  000E88  EF48  F007         	goto	u11381
  6137  000E8C  EF4A  F007         	goto	u11380
  6138  000E90                     u11381:
  6139  000E90  EF72  F007         	goto	l659
  6140  000E94                     u11380:
  6141  000E94                     
  6142                           ;src/driver/lcd.c: 349:   {;src/driver/lcd.c: 350:    print_string("LON:",0,7,0);
  6143  000E94  0E82               	movlw	low STR_63
  6144  000E96  0101               	movlb	1	; () banked
  6145  000E98  6F10               	movwf	print_string@s& (0+255),b
  6146  000E9A  0E7D               	movlw	high STR_63
  6147  000E9C  6F11               	movwf	(print_string@s+1)& (0+255),b
  6148  000E9E  0E00               	movlw	0
  6149  000EA0  6F12               	movwf	print_string@x& (0+255),b
  6150  000EA2  0E07               	movlw	7
  6151  000EA4  6F13               	movwf	print_string@y& (0+255),b
  6152  000EA6  0E00               	movlw	0
  6153  000EA8  6F14               	movwf	print_string@underline& (0+255),b
  6154  000EAA  EC95  F02B         	call	_print_string	;wreg free
  6155                           
  6156                           ;src/driver/lcd.c: 351:    print_string(GPS_lon,8*5,7,0);
  6157  000EAE  0ED7               	movlw	low _GPS_lon
  6158  000EB0  0101               	movlb	1	; () banked
  6159  000EB2  6F10               	movwf	print_string@s& (0+255),b
  6160  000EB4  0E01               	movlw	high _GPS_lon
  6161  000EB6  6F11               	movwf	(print_string@s+1)& (0+255),b
  6162  000EB8  0E28               	movlw	40
  6163  000EBA  6F12               	movwf	print_string@x& (0+255),b
  6164  000EBC  0E07               	movlw	7
  6165  000EBE  6F13               	movwf	print_string@y& (0+255),b
  6166  000EC0  0E00               	movlw	0
  6167  000EC2  6F14               	movwf	print_string@underline& (0+255),b
  6168  000EC4  EC95  F02B         	call	_print_string	;wreg free
  6169  000EC8                     
  6170                           ;src/driver/lcd.c: 353:    memcpy(old_GPS_lon,GPS_lon,15);
  6171  000EC8  0EA4               	movlw	low show_display@old_GPS_lon
  6172  000ECA  6E0D               	movwf	memcpy@d1^0,c
  6173  000ECC  0E02               	movlw	high show_display@old_GPS_lon
  6174  000ECE  6E0E               	movwf	(memcpy@d1+1)^0,c
  6175  000ED0  0ED7               	movlw	low _GPS_lon
  6176  000ED2  6E0F               	movwf	memcpy@s1^0,c
  6177  000ED4  0E01               	movlw	high _GPS_lon
  6178  000ED6  6E10               	movwf	(memcpy@s1+1)^0,c
  6179  000ED8  0E00               	movlw	0
  6180  000EDA  6E12               	movwf	(memcpy@n+1)^0,c
  6181  000EDC  0E0F               	movlw	15
  6182  000EDE  6E11               	movwf	memcpy@n^0,c
  6183  000EE0  EC2C  F030         	call	_memcpy	;wreg free
  6184  000EE4                     l659:
  6185  000EE4  0012               	return		;funcret
  6186  000EE6                     __end_of_show_display:
  6187                           	opt callstack 0
  6188                           
  6189 ;; *************** function _memcpy *****************
  6190 ;; Defined at:
  6191 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memcpy.c"
  6192 ;; Parameters:    Size  Location     Type
  6193 ;;  d1              2   12[COMRAM] PTR void 
  6194 ;;		 -> eval_gps@elem(240), GPS_lon(15), GPS_lat(15), show_display@old_GPS_lon(15), 
  6195 ;;		 -> show_display@old_GPS_lat(15), 
  6196 ;;  s1              2   14[COMRAM] PTR const void 
  6197 ;;		 -> eval_gps@elem(240), GPS_lon(15), GPS_lat(15), NULL(0), 
  6198 ;;  n               2   16[COMRAM] unsigned int 
  6199 ;; Auto vars:     Size  Location     Type
  6200 ;;  s               2   21[COMRAM] PTR const unsigned char 
  6201 ;;		 -> eval_gps@elem(240), GPS_lon(15), GPS_lat(15), NULL(0), 
  6202 ;;  d               2   19[COMRAM] PTR unsigned char 
  6203 ;;		 -> eval_gps@elem(240), GPS_lon(15), GPS_lat(15), show_display@old_GPS_lon(15), 
  6204 ;;		 -> show_display@old_GPS_lat(15), 
  6205 ;;  tmp             1   18[COMRAM] unsigned char 
  6206 ;; Return value:  Size  Location     Type
  6207 ;;                  2   12[COMRAM] PTR void 
  6208 ;; Registers used:
  6209 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6210 ;; Tracked objects:
  6211 ;;		On entry : 0/0
  6212 ;;		On exit  : 0/0
  6213 ;;		Unchanged: 0/0
  6214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6215 ;;      Params:         6       0       0       0       0       0       0
  6216 ;;      Locals:         5       0       0       0       0       0       0
  6217 ;;      Temps:          0       0       0       0       0       0       0
  6218 ;;      Totals:        11       0       0       0       0       0       0
  6219 ;;Total ram usage:       11 bytes
  6220 ;; Hardware stack levels used:    1
  6221 ;; Hardware stack levels required when called:    2
  6222 ;; This function calls:
  6223 ;;		Nothing
  6224 ;; This function is called by:
  6225 ;;		_show_display
  6226 ;;		_eval_gps
  6227 ;; This function uses a non-reentrant model
  6228 ;;
  6229                           
  6230                           	psect	text5
  6231  006058                     __ptext5:
  6232                           	opt callstack 0
  6233  006058                     _memcpy:
  6234                           	opt callstack 27
  6235  006058  C00F  F016         	movff	memcpy@s1,memcpy@s
  6236  00605C  C010  F017         	movff	memcpy@s1+1,memcpy@s+1
  6237  006060  C00D  F014         	movff	memcpy@d1,memcpy@d
  6238  006064  C00E  F015         	movff	memcpy@d1+1,memcpy@d+1
  6239  006068  EF46  F030         	goto	l9176
  6240  00606C                     l9168:
  6241  00606C  C016  FFD9         	movff	memcpy@s,fsr2l
  6242  006070  C017  FFDA         	movff	memcpy@s+1,fsr2h
  6243  006074  50DF               	movf	indf2,w,c
  6244  006076  6E13               	movwf	memcpy@tmp^0,c
  6245  006078  4A16               	infsnz	memcpy@s^0,f,c
  6246  00607A  2A17               	incf	(memcpy@s+1)^0,f,c
  6247  00607C  C014  FFD9         	movff	memcpy@d,fsr2l
  6248  006080  C015  FFDA         	movff	memcpy@d+1,fsr2h
  6249  006084  C013  FFDF         	movff	memcpy@tmp,indf2
  6250  006088  4A14               	infsnz	memcpy@d^0,f,c
  6251  00608A  2A15               	incf	(memcpy@d+1)^0,f,c
  6252  00608C                     l9176:
  6253  00608C  0611               	decf	memcpy@n^0,f,c
  6254  00608E  A0D8               	btfss	status,0,c
  6255  006090  0612               	decf	(memcpy@n+1)^0,f,c
  6256  006092  2811               	incf	memcpy@n^0,w,c
  6257  006094  E106               	bnz	u10941
  6258  006096  2812               	incf	(memcpy@n+1)^0,w,c
  6259  006098  A4D8               	btfss	status,2,c
  6260  00609A  EF51  F030         	goto	u10941
  6261  00609E  EF53  F030         	goto	u10940
  6262  0060A2                     u10941:
  6263  0060A2  EF36  F030         	goto	l9168
  6264  0060A6                     u10940:
  6265  0060A6  0012               	return		;funcret
  6266  0060A8                     __end_of_memcpy:
  6267                           	opt callstack 0
  6268                           
  6269 ;; *************** function _memcmp *****************
  6270 ;; Defined at:
  6271 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memcmp.c"
  6272 ;; Parameters:    Size  Location     Type
  6273 ;;  vl              2   12[COMRAM] PTR const void 
  6274 ;;		 -> show_display@old_GPS_lon(15), show_display@old_GPS_lat(15), 
  6275 ;;  vr              2   14[COMRAM] PTR const void 
  6276 ;;		 -> GPS_lon(15), GPS_lat(15), 
  6277 ;;  n               2   16[COMRAM] unsigned int 
  6278 ;; Auto vars:     Size  Location     Type
  6279 ;;  r               2   22[COMRAM] PTR const unsigned char 
  6280 ;;		 -> GPS_lon(15), GPS_lat(15), 
  6281 ;;  l               2   20[COMRAM] PTR const unsigned char 
  6282 ;;		 -> show_display@old_GPS_lon(15), show_display@old_GPS_lat(15), 
  6283 ;; Return value:  Size  Location     Type
  6284 ;;                  2   12[COMRAM] int 
  6285 ;; Registers used:
  6286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6287 ;; Tracked objects:
  6288 ;;		On entry : 0/0
  6289 ;;		On exit  : 0/0
  6290 ;;		Unchanged: 0/0
  6291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6292 ;;      Params:         6       0       0       0       0       0       0
  6293 ;;      Locals:         4       0       0       0       0       0       0
  6294 ;;      Temps:          2       0       0       0       0       0       0
  6295 ;;      Totals:        12       0       0       0       0       0       0
  6296 ;;Total ram usage:       12 bytes
  6297 ;; Hardware stack levels used:    1
  6298 ;; Hardware stack levels required when called:    2
  6299 ;; This function calls:
  6300 ;;		Nothing
  6301 ;; This function is called by:
  6302 ;;		_show_display
  6303 ;; This function uses a non-reentrant model
  6304 ;;
  6305                           
  6306                           	psect	text6
  6307  005602                     __ptext6:
  6308                           	opt callstack 0
  6309  005602                     _memcmp:
  6310                           	opt callstack 27
  6311  005602  C00D  F015         	movff	memcmp@vl,memcmp@l
  6312  005606  C00E  F016         	movff	memcmp@vl+1,memcmp@l+1
  6313  00560A  C00F  F017         	movff	memcmp@vr,memcmp@r
  6314  00560E  C010  F018         	movff	memcmp@vr+1,memcmp@r+1
  6315  005612  EF12  F02B         	goto	l9154
  6316  005616                     l9152:
  6317  005616  0611               	decf	memcmp@n^0,f,c
  6318  005618  A0D8               	btfss	status,0,c
  6319  00561A  0612               	decf	(memcmp@n+1)^0,f,c
  6320  00561C  4A15               	infsnz	memcmp@l^0,f,c
  6321  00561E  2A16               	incf	(memcmp@l+1)^0,f,c
  6322  005620  4A17               	infsnz	memcmp@r^0,f,c
  6323  005622  2A18               	incf	(memcmp@r+1)^0,f,c
  6324  005624                     l9154:
  6325  005624  5011               	movf	memcmp@n^0,w,c
  6326  005626  1012               	iorwf	(memcmp@n+1)^0,w,c
  6327  005628  B4D8               	btfsc	status,2,c
  6328  00562A  EF19  F02B         	goto	u10911
  6329  00562E  EF1B  F02B         	goto	u10910
  6330  005632                     u10911:
  6331  005632  EF2C  F02B         	goto	l9158
  6332  005636                     u10910:
  6333  005636  C017  FFD9         	movff	memcmp@r,fsr2l
  6334  00563A  C018  FFDA         	movff	memcmp@r+1,fsr2h
  6335  00563E  C015  FFE1         	movff	memcmp@l,fsr1l
  6336  005642  C016  FFE2         	movff	memcmp@l+1,fsr1h
  6337  005646  50DE               	movf	postinc2,w,c
  6338  005648  18E6               	xorwf	postinc1,w,c
  6339  00564A  B4D8               	btfsc	status,2,c
  6340  00564C  EF2A  F02B         	goto	u10921
  6341  005650  EF2C  F02B         	goto	u10920
  6342  005654                     u10921:
  6343  005654  EF0B  F02B         	goto	l9152
  6344  005658                     u10920:
  6345  005658                     l9158:
  6346  005658  5011               	movf	memcmp@n^0,w,c
  6347  00565A  1012               	iorwf	(memcmp@n+1)^0,w,c
  6348  00565C  A4D8               	btfss	status,2,c
  6349  00565E  EF33  F02B         	goto	u10931
  6350  005662  EF35  F02B         	goto	u10930
  6351  005666                     u10931:
  6352  005666  EF3B  F02B         	goto	l9162
  6353  00566A                     u10930:
  6354  00566A  0E00               	movlw	0
  6355  00566C  6E0E               	movwf	(?_memcmp+1)^0,c
  6356  00566E  0E00               	movlw	0
  6357  005670  6E0D               	movwf	?_memcmp^0,c
  6358  005672  EF4D  F02B         	goto	l2044
  6359  005676                     l9162:
  6360  005676  C015  FFD9         	movff	memcmp@l,fsr2l
  6361  00567A  C016  FFDA         	movff	memcmp@l+1,fsr2h
  6362  00567E  50DF               	movf	indf2,w,c
  6363  005680  6E13               	movwf	??_memcmp^0,c
  6364  005682  C017  FFD9         	movff	memcmp@r,fsr2l
  6365  005686  C018  FFDA         	movff	memcmp@r+1,fsr2h
  6366  00568A  50DF               	movf	indf2,w,c
  6367  00568C  6E14               	movwf	(??_memcmp+1)^0,c
  6368  00568E  5014               	movf	(??_memcmp+1)^0,w,c
  6369  005690  5C13               	subwf	??_memcmp^0,w,c
  6370  005692  6E0D               	movwf	?_memcmp^0,c
  6371  005694  6A0E               	clrf	(?_memcmp+1)^0,c
  6372  005696  A0D8               	btfss	status,0,c
  6373  005698  060E               	decf	(?_memcmp+1)^0,f,c
  6374  00569A                     l2044:
  6375  00569A  0012               	return		;funcret
  6376  00569C                     __end_of_memcmp:
  6377                           	opt callstack 0
  6378                           
  6379 ;; *************** function _itoa *****************
  6380 ;; Defined at:
  6381 ;;		line 359 in file "src/driver/lcd.c"
  6382 ;; Parameters:    Size  Location     Type
  6383 ;;  value           2   24[COMRAM] int 
  6384 ;; Auto vars:     Size  Location     Type
  6385 ;;  c               1   26[COMRAM] unsigned char 
  6386 ;; Return value:  Size  Location     Type
  6387 ;;                  2   24[COMRAM] PTR unsigned char 
  6388 ;; Registers used:
  6389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6390 ;; Tracked objects:
  6391 ;;		On entry : 0/0
  6392 ;;		On exit  : 0/0
  6393 ;;		Unchanged: 0/0
  6394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6395 ;;      Params:         2       0       0       0       0       0       0
  6396 ;;      Locals:         1       0       0       0       0       0       0
  6397 ;;      Temps:          0       0       0       0       0       0       0
  6398 ;;      Totals:         3       0       0       0       0       0       0
  6399 ;;Total ram usage:        3 bytes
  6400 ;; Hardware stack levels used:    1
  6401 ;; Hardware stack levels required when called:    3
  6402 ;; This function calls:
  6403 ;;		___awdiv
  6404 ;;		___awmod
  6405 ;;		_memset
  6406 ;; This function is called by:
  6407 ;;		_show_display
  6408 ;; This function uses a non-reentrant model
  6409 ;;
  6410                           
  6411                           	psect	text7
  6412  00583C                     __ptext7:
  6413                           	opt callstack 0
  6414  00583C                     _itoa:
  6415                           	opt callstack 26
  6416  00583C                     
  6417                           ;src/driver/lcd.c: 359: char *itoa(int value);src/driver/lcd.c: 360: {;src/driver/lcd.c:
      +                           361:  static char buffer[12];;src/driver/lcd.c: 362:  u8 c = sizeof(buffer)-1;
  6418  00583C  0E0B               	movlw	11
  6419  00583E  6E1B               	movwf	itoa@c^0,c
  6420  005840                     
  6421                           ;src/driver/lcd.c: 364:  memset(buffer,0,sizeof(buffer));
  6422  005840  0EB0               	movlw	low itoa@buffer
  6423  005842  6E0D               	movwf	memset@dest^0,c
  6424  005844  0E01               	movlw	high itoa@buffer
  6425  005846  6E0E               	movwf	(memset@dest+1)^0,c
  6426  005848  0E00               	movlw	0
  6427  00584A  6E10               	movwf	(memset@c+1)^0,c
  6428  00584C  0E00               	movlw	0
  6429  00584E  6E0F               	movwf	memset@c^0,c
  6430  005850  0E00               	movlw	0
  6431  005852  6E12               	movwf	(memset@n+1)^0,c
  6432  005854  0E0C               	movlw	12
  6433  005856  6E11               	movwf	memset@n^0,c
  6434  005858  EC56  F01C         	call	_memset	;wreg free
  6435  00585C                     l9140:
  6436                           
  6437                           ;src/driver/lcd.c: 367:  {;src/driver/lcd.c: 368:   buffer[--c] = (value % 10) + '0';
  6438  00585C  061B               	decf	itoa@c^0,f,c
  6439  00585E  0EB0               	movlw	low itoa@buffer
  6440  005860  241B               	addwf	itoa@c^0,w,c
  6441  005862  6ED9               	movwf	fsr2l,c
  6442  005864  6ADA               	clrf	fsr2h,c
  6443  005866  0E01               	movlw	high itoa@buffer
  6444  005868  22DA               	addwfc	fsr2h,f,c
  6445  00586A  C019  F00D         	movff	itoa@value,___awmod@dividend
  6446  00586E  C01A  F00E         	movff	itoa@value+1,___awmod@dividend+1
  6447  005872  0E00               	movlw	0
  6448  005874  6E10               	movwf	(___awmod@divisor+1)^0,c
  6449  005876  0E0A               	movlw	10
  6450  005878  6E0F               	movwf	___awmod@divisor^0,c
  6451  00587A  ECAF  F029         	call	___awmod	;wreg free
  6452  00587E  500D               	movf	?___awmod^0,w,c
  6453  005880  0F30               	addlw	48
  6454  005882  6EDF               	movwf	indf2,c
  6455  005884                     
  6456                           ;src/driver/lcd.c: 369:   value /= 10;
  6457  005884  C019  F00D         	movff	itoa@value,___awdiv@dividend
  6458  005888  C01A  F00E         	movff	itoa@value+1,___awdiv@dividend+1
  6459  00588C  0E00               	movlw	0
  6460  00588E  6E10               	movwf	(___awdiv@divisor+1)^0,c
  6461  005890  0E0A               	movlw	10
  6462  005892  6E0F               	movwf	___awdiv@divisor^0,c
  6463  005894  EC30  F028         	call	___awdiv	;wreg free
  6464  005898  C00D  F019         	movff	?___awdiv,itoa@value
  6465  00589C  C00E  F01A         	movff	?___awdiv+1,itoa@value+1
  6466  0058A0                     
  6467                           ;src/driver/lcd.c: 370:  } while (value);
  6468  0058A0  5019               	movf	itoa@value^0,w,c
  6469  0058A2  101A               	iorwf	(itoa@value+1)^0,w,c
  6470  0058A4  A4D8               	btfss	status,2,c
  6471  0058A6  EF57  F02C         	goto	u10901
  6472  0058AA  EF59  F02C         	goto	u10900
  6473  0058AE                     u10901:
  6474  0058AE  EF2E  F02C         	goto	l9140
  6475  0058B2                     u10900:
  6476  0058B2                     
  6477                           ;src/driver/lcd.c: 372:  return &buffer[c];
  6478  0058B2  0EB0               	movlw	low itoa@buffer
  6479  0058B4  241B               	addwf	itoa@c^0,w,c
  6480  0058B6  6E19               	movwf	?_itoa^0,c
  6481  0058B8  6A1A               	clrf	(?_itoa+1)^0,c
  6482  0058BA  0E01               	movlw	high itoa@buffer
  6483  0058BC  221A               	addwfc	(?_itoa+1)^0,f,c
  6484  0058BE  0012               	return		;funcret
  6485  0058C0                     __end_of_itoa:
  6486                           	opt callstack 0
  6487                           
  6488 ;; *************** function ___awmod *****************
  6489 ;; Defined at:
  6490 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
  6491 ;; Parameters:    Size  Location     Type
  6492 ;;  dividend        2   12[COMRAM] int 
  6493 ;;  divisor         2   14[COMRAM] int 
  6494 ;; Auto vars:     Size  Location     Type
  6495 ;;  sign            1   17[COMRAM] unsigned char 
  6496 ;;  counter         1   16[COMRAM] unsigned char 
  6497 ;; Return value:  Size  Location     Type
  6498 ;;                  2   12[COMRAM] int 
  6499 ;; Registers used:
  6500 ;;		wreg, status,2, status,0
  6501 ;; Tracked objects:
  6502 ;;		On entry : 0/0
  6503 ;;		On exit  : 0/0
  6504 ;;		Unchanged: 0/0
  6505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6506 ;;      Params:         4       0       0       0       0       0       0
  6507 ;;      Locals:         2       0       0       0       0       0       0
  6508 ;;      Temps:          0       0       0       0       0       0       0
  6509 ;;      Totals:         6       0       0       0       0       0       0
  6510 ;;Total ram usage:        6 bytes
  6511 ;; Hardware stack levels used:    1
  6512 ;; Hardware stack levels required when called:    2
  6513 ;; This function calls:
  6514 ;;		Nothing
  6515 ;; This function is called by:
  6516 ;;		_itoa
  6517 ;; This function uses a non-reentrant model
  6518 ;;
  6519                           
  6520                           	psect	text8
  6521  00535E                     __ptext8:
  6522                           	opt callstack 0
  6523  00535E                     ___awmod:
  6524                           	opt callstack 26
  6525  00535E  0E00               	movlw	0
  6526  005360  6E12               	movwf	___awmod@sign^0,c
  6527  005362  BE0E               	btfsc	(___awmod@dividend+1)^0,7,c
  6528  005364  EFB8  F029         	goto	u10640
  6529  005368  EFB6  F029         	goto	u10641
  6530  00536C                     u10641:
  6531  00536C  EFBE  F029         	goto	l8980
  6532  005370                     u10640:
  6533  005370  6C0D               	negf	___awmod@dividend^0,c
  6534  005372  1E0E               	comf	(___awmod@dividend+1)^0,f,c
  6535  005374  B0D8               	btfsc	status,0,c
  6536  005376  2A0E               	incf	(___awmod@dividend+1)^0,f,c
  6537  005378  0E01               	movlw	1
  6538  00537A  6E12               	movwf	___awmod@sign^0,c
  6539  00537C                     l8980:
  6540  00537C  BE10               	btfsc	(___awmod@divisor+1)^0,7,c
  6541  00537E  EFC5  F029         	goto	u10650
  6542  005382  EFC3  F029         	goto	u10651
  6543  005386                     u10651:
  6544  005386  EFC9  F029         	goto	l8984
  6545  00538A                     u10650:
  6546  00538A  6C0F               	negf	___awmod@divisor^0,c
  6547  00538C  1E10               	comf	(___awmod@divisor+1)^0,f,c
  6548  00538E  B0D8               	btfsc	status,0,c
  6549  005390  2A10               	incf	(___awmod@divisor+1)^0,f,c
  6550  005392                     l8984:
  6551  005392  500F               	movf	___awmod@divisor^0,w,c
  6552  005394  1010               	iorwf	(___awmod@divisor+1)^0,w,c
  6553  005396  B4D8               	btfsc	status,2,c
  6554  005398  EFD0  F029         	goto	u10661
  6555  00539C  EFD2  F029         	goto	u10660
  6556  0053A0                     u10661:
  6557  0053A0  EFF6  F029         	goto	l9000
  6558  0053A4                     u10660:
  6559  0053A4  0E01               	movlw	1
  6560  0053A6  6E11               	movwf	___awmod@counter^0,c
  6561  0053A8  EFDA  F029         	goto	l8990
  6562  0053AC                     l8988:
  6563  0053AC  90D8               	bcf	status,0,c
  6564  0053AE  360F               	rlcf	___awmod@divisor^0,f,c
  6565  0053B0  3610               	rlcf	(___awmod@divisor+1)^0,f,c
  6566  0053B2  2A11               	incf	___awmod@counter^0,f,c
  6567  0053B4                     l8990:
  6568  0053B4  AE10               	btfss	(___awmod@divisor+1)^0,7,c
  6569  0053B6  EFDF  F029         	goto	u10671
  6570  0053BA  EFE1  F029         	goto	u10670
  6571  0053BE                     u10671:
  6572  0053BE  EFD6  F029         	goto	l8988
  6573  0053C2                     u10670:
  6574  0053C2                     l8992:
  6575  0053C2  500F               	movf	___awmod@divisor^0,w,c
  6576  0053C4  5C0D               	subwf	___awmod@dividend^0,w,c
  6577  0053C6  5010               	movf	(___awmod@divisor+1)^0,w,c
  6578  0053C8  580E               	subwfb	(___awmod@dividend+1)^0,w,c
  6579  0053CA  A0D8               	btfss	status,0,c
  6580  0053CC  EFEA  F029         	goto	u10681
  6581  0053D0  EFEC  F029         	goto	u10680
  6582  0053D4                     u10681:
  6583  0053D4  EFF0  F029         	goto	l8996
  6584  0053D8                     u10680:
  6585  0053D8  500F               	movf	___awmod@divisor^0,w,c
  6586  0053DA  5E0D               	subwf	___awmod@dividend^0,f,c
  6587  0053DC  5010               	movf	(___awmod@divisor+1)^0,w,c
  6588  0053DE  5A0E               	subwfb	(___awmod@dividend+1)^0,f,c
  6589  0053E0                     l8996:
  6590  0053E0  90D8               	bcf	status,0,c
  6591  0053E2  3210               	rrcf	(___awmod@divisor+1)^0,f,c
  6592  0053E4  320F               	rrcf	___awmod@divisor^0,f,c
  6593  0053E6  2E11               	decfsz	___awmod@counter^0,f,c
  6594  0053E8  EFE1  F029         	goto	l8992
  6595  0053EC                     l9000:
  6596  0053EC  5012               	movf	___awmod@sign^0,w,c
  6597  0053EE  B4D8               	btfsc	status,2,c
  6598  0053F0  EFFC  F029         	goto	u10691
  6599  0053F4  EFFE  F029         	goto	u10690
  6600  0053F8                     u10691:
  6601  0053F8  EF02  F02A         	goto	l9004
  6602  0053FC                     u10690:
  6603  0053FC  6C0D               	negf	___awmod@dividend^0,c
  6604  0053FE  1E0E               	comf	(___awmod@dividend+1)^0,f,c
  6605  005400  B0D8               	btfsc	status,0,c
  6606  005402  2A0E               	incf	(___awmod@dividend+1)^0,f,c
  6607  005404                     l9004:
  6608  005404  C00D  F00D         	movff	___awmod@dividend,?___awmod
  6609  005408  C00E  F00E         	movff	___awmod@dividend+1,?___awmod+1
  6610  00540C  0012               	return		;funcret
  6611  00540E                     __end_of___awmod:
  6612                           	opt callstack 0
  6613                           
  6614 ;; *************** function _setQRG *****************
  6615 ;; Defined at:
  6616 ;;		line 201 in file "src/main.c"
  6617 ;; Parameters:    Size  Location     Type
  6618 ;;		None
  6619 ;; Auto vars:     Size  Location     Type
  6620 ;;  sw              1  110[BANK0 ] unsigned char 
  6621 ;;  newLO           1  109[BANK0 ] unsigned char 
  6622 ;; Return value:  Size  Location     Type
  6623 ;;                  1    wreg      void 
  6624 ;; Registers used:
  6625 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6626 ;; Tracked objects:
  6627 ;;		On entry : 0/0
  6628 ;;		On exit  : 0/0
  6629 ;;		Unchanged: 0/0
  6630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6631 ;;      Params:         0       0       0       0       0       0       0
  6632 ;;      Locals:         0       2       0       0       0       0       0
  6633 ;;      Temps:          0       3       0       0       0       0       0
  6634 ;;      Totals:         0       5       0       0       0       0       0
  6635 ;;Total ram usage:        5 bytes
  6636 ;; Hardware stack levels used:    1
  6637 ;; Hardware stack levels required when called:   16
  6638 ;; This function calls:
  6639 ;;		_si5328_set_freq
  6640 ;; This function is called by:
  6641 ;;		_main
  6642 ;; This function uses a non-reentrant model
  6643 ;;
  6644                           
  6645                           	psect	text9
  6646  0041D4                     __ptext9:
  6647                           	opt callstack 0
  6648  0041D4                     _setQRG:
  6649                           	opt callstack 14
  6650  0041D4                     
  6651                           ;src/main.c: 203:  u8 sw;;src/main.c: 204:  u8 newLO;;src/main.c: 207:     sw = ((*((PIN
      +                          _LNB_QRG2)->pPORT) & (PIN_LNB_QRG2)->mask) != 0)?1:0;
  6652  0041D4  0E83               	movlw	low (_PIN_LNB_QRG2_DEF+4)
  6653  0041D6  6EF6               	movwf	tblptrl,c
  6654  0041D8  0E78               	movlw	high (_PIN_LNB_QRG2_DEF+4)
  6655  0041DA  6EF7               	movwf	tblptrh,c
  6656  0041DC                     	if	0	;tblptru may be non-zero
  6657  0041DC                     	endif
  6658  0041DC                     	if	0	;tblptru may be non-zero
  6659  0041DC                     	endif
  6660  0041DC  0008               	tblrd		*
  6661  0041DE  CFF5 F0EA          	movff	tablat,??_setQRG
  6662  0041E2  0E7F               	movlw	low _PIN_LNB_QRG2_DEF
  6663  0041E4  6EF6               	movwf	tblptrl,c
  6664  0041E6                     	if	1	;There is more than 1 active tblptr byte
  6665  0041E6  0E78               	movlw	high _PIN_LNB_QRG2_DEF
  6666  0041E8  6EF7               	movwf	tblptrh,c
  6667  0041EA                     	endif
  6668  0041EA                     	if	0	;There are less than 3 active tblptr bytes
  6669  0041EA                     	endif
  6670  0041EA  0009               	tblrd		*+
  6671  0041EC  CFF5 F0EB          	movff	tablat,??_setQRG+1
  6672  0041F0  0009               	tblrd		*+
  6673  0041F2  CFF5 F0EC          	movff	tablat,??_setQRG+2
  6674  0041F6  C0EB  FFD9         	movff	??_setQRG+1,fsr2l
  6675  0041FA  C0EC  FFDA         	movff	??_setQRG+2,fsr2h
  6676  0041FE  50DF               	movf	indf2,w,c
  6677  004200  0100               	movlb	0	; () banked
  6678  004202  15EA               	andwf	??_setQRG& (0+255),w,b
  6679  004204  0900               	iorlw	0
  6680  004206  A4D8               	btfss	status,2,c
  6681  004208  EF08  F021         	goto	u11391
  6682  00420C  EF0B  F021         	goto	u11390
  6683  004210                     u11391:
  6684  004210  0E01               	movlw	1
  6685  004212  EF0C  F021         	goto	u11400
  6686  004216                     u11390:
  6687  004216  0E00               	movlw	0
  6688  004218                     u11400:
  6689  004218  6FEE               	movwf	setQRG@sw& (0+255),b
  6690  00421A                     
  6691                           ; BSR set to: 0
  6692                           ;src/main.c: 208:  sw <<= 1;
  6693  00421A  90D8               	bcf	status,0,c
  6694  00421C  37EE               	rlcf	setQRG@sw& (0+255),f,b
  6695  00421E                     
  6696                           ; BSR set to: 0
  6697                           ;src/main.c: 209:     sw |= ((*((PIN_LNB_QRG1)->pPORT) & (PIN_LNB_QRG1)->mask) != 0)?1:0
      +                          ;
  6698  00421E  0E7E               	movlw	low (_PIN_LNB_QRG1_DEF+4)
  6699  004220  6EF6               	movwf	tblptrl,c
  6700  004222  0E78               	movlw	high (_PIN_LNB_QRG1_DEF+4)
  6701  004224  6EF7               	movwf	tblptrh,c
  6702  004226                     	if	0	;tblptru may be non-zero
  6703  004226                     	endif
  6704  004226                     	if	0	;tblptru may be non-zero
  6705  004226                     	endif
  6706  004226  0008               	tblrd		*
  6707  004228  CFF5 F0EA          	movff	tablat,??_setQRG
  6708  00422C  0E7A               	movlw	low _PIN_LNB_QRG1_DEF
  6709  00422E  6EF6               	movwf	tblptrl,c
  6710  004230                     	if	1	;There is more than 1 active tblptr byte
  6711  004230  0E78               	movlw	high _PIN_LNB_QRG1_DEF
  6712  004232  6EF7               	movwf	tblptrh,c
  6713  004234                     	endif
  6714  004234                     	if	0	;There are less than 3 active tblptr bytes
  6715  004234                     	endif
  6716  004234  0009               	tblrd		*+
  6717  004236  CFF5 F0EB          	movff	tablat,??_setQRG+1
  6718  00423A  0009               	tblrd		*+
  6719  00423C  CFF5 F0EC          	movff	tablat,??_setQRG+2
  6720  004240  C0EB  FFD9         	movff	??_setQRG+1,fsr2l
  6721  004244  C0EC  FFDA         	movff	??_setQRG+2,fsr2h
  6722  004248  50DF               	movf	indf2,w,c
  6723  00424A  15EA               	andwf	??_setQRG& (0+255),w,b
  6724  00424C  0900               	iorlw	0
  6725  00424E  A4D8               	btfss	status,2,c
  6726  004250  EF2C  F021         	goto	u11411
  6727  004254  EF2F  F021         	goto	u11410
  6728  004258                     u11411:
  6729  004258  0E01               	movlw	1
  6730  00425A  EF30  F021         	goto	u11420
  6731  00425E                     u11410:
  6732  00425E  0E00               	movlw	0
  6733  004260                     u11420:
  6734  004260  13EE               	iorwf	setQRG@sw& (0+255),f,b
  6735                           
  6736                           ;src/main.c: 211:  if(sw == 3) newLO = 24;
  6737  004262  0E03               	movlw	3
  6738  004264  19EE               	xorwf	setQRG@sw& (0+255),w,b
  6739  004266  A4D8               	btfss	status,2,c
  6740  004268  EF38  F021         	goto	u11431
  6741  00426C  EF3A  F021         	goto	u11430
  6742  004270                     u11431:
  6743  004270  EF3C  F021         	goto	l9592
  6744  004274                     u11430:
  6745  004274                     
  6746                           ; BSR set to: 0
  6747  004274  0E18               	movlw	24
  6748  004276  6FED               	movwf	setQRG@newLO& (0+255),b
  6749  004278                     l9592:
  6750                           
  6751                           ; BSR set to: 0
  6752                           ;src/main.c: 212:  if(sw == 2) newLO = 25;
  6753  004278  0E02               	movlw	2
  6754  00427A  19EE               	xorwf	setQRG@sw& (0+255),w,b
  6755  00427C  A4D8               	btfss	status,2,c
  6756  00427E  EF43  F021         	goto	u11441
  6757  004282  EF45  F021         	goto	u11440
  6758  004286                     u11441:
  6759  004286  EF47  F021         	goto	l9596
  6760  00428A                     u11440:
  6761  00428A                     
  6762                           ; BSR set to: 0
  6763  00428A  0E19               	movlw	25
  6764  00428C  6FED               	movwf	setQRG@newLO& (0+255),b
  6765  00428E                     l9596:
  6766                           
  6767                           ; BSR set to: 0
  6768                           ;src/main.c: 213:  if(sw == 1) newLO = 26;
  6769  00428E  05EE               	decf	setQRG@sw& (0+255),w,b
  6770  004290  A4D8               	btfss	status,2,c
  6771  004292  EF4D  F021         	goto	u11451
  6772  004296  EF4F  F021         	goto	u11450
  6773  00429A                     u11451:
  6774  00429A  EF51  F021         	goto	l1005
  6775  00429E                     u11450:
  6776  00429E                     
  6777                           ; BSR set to: 0
  6778  00429E  0E1A               	movlw	26
  6779  0042A0  6FED               	movwf	setQRG@newLO& (0+255),b
  6780  0042A2                     l1005:
  6781                           
  6782                           ; BSR set to: 0
  6783                           ;src/main.c: 214:  if(sw == 0) newLO = 27;
  6784  0042A2  51EE               	movf	setQRG@sw& (0+255),w,b
  6785  0042A4  A4D8               	btfss	status,2,c
  6786  0042A6  EF57  F021         	goto	u11461
  6787  0042AA  EF59  F021         	goto	u11460
  6788  0042AE                     u11461:
  6789  0042AE  EF5B  F021         	goto	l9602
  6790  0042B2                     u11460:
  6791  0042B2                     
  6792                           ; BSR set to: 0
  6793  0042B2  0E1B               	movlw	27
  6794  0042B4  6FED               	movwf	setQRG@newLO& (0+255),b
  6795  0042B6                     l9602:
  6796                           
  6797                           ; BSR set to: 0
  6798                           ;src/main.c: 216:  if(newLO != currentLO)
  6799  0042B6  0101               	movlb	1	; () banked
  6800  0042B8  51D6               	movf	_currentLO& (0+255),w,b
  6801  0042BA  0100               	movlb	0	; () banked
  6802  0042BC  19ED               	xorwf	setQRG@newLO& (0+255),w,b
  6803  0042BE  B4D8               	btfsc	status,2,c
  6804  0042C0  EF64  F021         	goto	u11471
  6805  0042C4  EF66  F021         	goto	u11470
  6806  0042C8                     u11471:
  6807  0042C8  EF74  F021         	goto	l1008
  6808  0042CC                     u11470:
  6809  0042CC                     
  6810                           ; BSR set to: 0
  6811                           ;src/main.c: 217:  {;src/main.c: 219:   currentLO = newLO;
  6812  0042CC  C0ED  F1D6         	movff	setQRG@newLO,_currentLO
  6813  0042D0                     
  6814                           ; BSR set to: 0
  6815                           ;src/main.c: 220:   si5328_set_freq(&g_i2c_bus, 0x68, currentLO);
  6816  0042D0  0EBC               	movlw	low _g_i2c_bus
  6817  0042D2  6FE4               	movwf	si5328_set_freq@i2c& (0+255),b
  6818  0042D4  0E01               	movlw	high _g_i2c_bus
  6819  0042D6  6FE5               	movwf	(si5328_set_freq@i2c+1)& (0+255),b
  6820  0042D8  0E68               	movlw	104
  6821  0042DA  6FE6               	movwf	si5328_set_freq@addr& (0+255),b
  6822  0042DC  C1D6  F0E7         	movff	_currentLO,si5328_set_freq@freq_MHz
  6823  0042E0  EC67  F027         	call	_si5328_set_freq	;wreg free
  6824  0042E4                     
  6825                           ;src/main.c: 223:   actualADFswitch = 0xff;
  6826  0042E4  0101               	movlb	1	; () banked
  6827  0042E6  69D3               	setf	_actualADFswitch& (0+255),b
  6828  0042E8                     l1008:
  6829  0042E8  0012               	return		;funcret
  6830  0042EA                     __end_of_setQRG:
  6831                           	opt callstack 0
  6832                           
  6833 ;; *************** function _si5328_set_freq *****************
  6834 ;; Defined at:
  6835 ;;		line 197 in file "src/driver/si5328.c"
  6836 ;; Parameters:    Size  Location     Type
  6837 ;;  i2c             2  100[BANK0 ] PTR struct i2c_dev__
  6838 ;;		 -> g_i2c_bus(8), 
  6839 ;;  addr            1  102[BANK0 ] unsigned char 
  6840 ;;  freq_MHz        1  103[BANK0 ] unsigned char 
  6841 ;; Auto vars:     Size  Location     Type
  6842 ;;  p               2  104[BANK0 ] PTR struct .
  6843 ;;		 -> reg_set_LNB_LO_27(10), reg_set_LNB_LO_26(10), reg_set_LNB_LO_25(10), reg_set_LNB_LO_24(10), 
  6844 ;;		 -> NULL(0), 
  6845 ;; Return value:  Size  Location     Type
  6846 ;;                  1    wreg      void 
  6847 ;; Registers used:
  6848 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6849 ;; Tracked objects:
  6850 ;;		On entry : 0/0
  6851 ;;		On exit  : 0/0
  6852 ;;		Unchanged: 0/0
  6853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6854 ;;      Params:         0       4       0       0       0       0       0
  6855 ;;      Locals:         0       2       0       0       0       0       0
  6856 ;;      Temps:          0       0       0       0       0       0       0
  6857 ;;      Totals:         0       6       0       0       0       0       0
  6858 ;;Total ram usage:        6 bytes
  6859 ;; Hardware stack levels used:    1
  6860 ;; Hardware stack levels required when called:   15
  6861 ;; This function calls:
  6862 ;;		_printf
  6863 ;;		_si5328_perform_ical
  6864 ;;		_write_regset
  6865 ;; This function is called by:
  6866 ;;		_setQRG
  6867 ;; This function uses a non-reentrant model
  6868 ;;
  6869                           
  6870                           	psect	text10
  6871  004ECE                     __ptext10:
  6872                           	opt callstack 0
  6873  004ECE                     _si5328_set_freq:
  6874                           	opt callstack 14
  6875  004ECE                     
  6876                           ;src/driver/si5328.c: 197: void si5328_set_freq(i2c_dev i2c, u8 addr, u8 freq_MHz);src/d
      +                          river/si5328.c: 198: {;src/driver/si5328.c: 199:  reg_set *p = ((void*)0);
  6877  004ECE  0E00               	movlw	0
  6878  004ED0  0100               	movlb	0	; () banked
  6879  004ED2  6FE8               	movwf	si5328_set_freq@p& (0+255),b
  6880  004ED4  0E00               	movlw	0
  6881  004ED6  6FE9               	movwf	(si5328_set_freq@p+1)& (0+255),b
  6882                           
  6883                           ;src/driver/si5328.c: 201:  if(freq_MHz == 24) p= reg_set_LNB_LO_24;
  6884  004ED8  0E18               	movlw	24
  6885  004EDA  19E7               	xorwf	si5328_set_freq@freq_MHz& (0+255),w,b
  6886  004EDC  A4D8               	btfss	status,2,c
  6887  004EDE  EF73  F027         	goto	u10811
  6888  004EE2  EF75  F027         	goto	u10810
  6889  004EE6                     u10811:
  6890  004EE6  EF79  F027         	goto	l506
  6891  004EEA                     u10810:
  6892  004EEA                     
  6893                           ; BSR set to: 0
  6894  004EEA  0EF5               	movlw	low _reg_set_LNB_LO_24
  6895  004EEC  6FE8               	movwf	si5328_set_freq@p& (0+255),b
  6896  004EEE  0E01               	movlw	high _reg_set_LNB_LO_24
  6897  004EF0  6FE9               	movwf	(si5328_set_freq@p+1)& (0+255),b
  6898  004EF2                     l506:
  6899                           
  6900                           ; BSR set to: 0
  6901                           ;src/driver/si5328.c: 202:  if(freq_MHz == 25) p= reg_set_LNB_LO_25;
  6902  004EF2  0E19               	movlw	25
  6903  004EF4  19E7               	xorwf	si5328_set_freq@freq_MHz& (0+255),w,b
  6904  004EF6  A4D8               	btfss	status,2,c
  6905  004EF8  EF80  F027         	goto	u10821
  6906  004EFC  EF82  F027         	goto	u10820
  6907  004F00                     u10821:
  6908  004F00  EF86  F027         	goto	l507
  6909  004F04                     u10820:
  6910  004F04                     
  6911                           ; BSR set to: 0
  6912  004F04  0ED6               	movlw	low _reg_set_LNB_LO_25
  6913  004F06  6FE8               	movwf	si5328_set_freq@p& (0+255),b
  6914  004F08  0E02               	movlw	high _reg_set_LNB_LO_25
  6915  004F0A  6FE9               	movwf	(si5328_set_freq@p+1)& (0+255),b
  6916  004F0C                     l507:
  6917                           
  6918                           ; BSR set to: 0
  6919                           ;src/driver/si5328.c: 203:  if(freq_MHz == 26) p= reg_set_LNB_LO_26;
  6920  004F0C  0E1A               	movlw	26
  6921  004F0E  19E7               	xorwf	si5328_set_freq@freq_MHz& (0+255),w,b
  6922  004F10  A4D8               	btfss	status,2,c
  6923  004F12  EF8D  F027         	goto	u10831
  6924  004F16  EF8F  F027         	goto	u10830
  6925  004F1A                     u10831:
  6926  004F1A  EF93  F027         	goto	l508
  6927  004F1E                     u10830:
  6928  004F1E                     
  6929                           ; BSR set to: 0
  6930  004F1E  0ECC               	movlw	low _reg_set_LNB_LO_26
  6931  004F20  6FE8               	movwf	si5328_set_freq@p& (0+255),b
  6932  004F22  0E02               	movlw	high _reg_set_LNB_LO_26
  6933  004F24  6FE9               	movwf	(si5328_set_freq@p+1)& (0+255),b
  6934  004F26                     l508:
  6935                           
  6936                           ; BSR set to: 0
  6937                           ;src/driver/si5328.c: 204:  if(freq_MHz == 27) p= reg_set_LNB_LO_27;
  6938  004F26  0E1B               	movlw	27
  6939  004F28  19E7               	xorwf	si5328_set_freq@freq_MHz& (0+255),w,b
  6940  004F2A  A4D8               	btfss	status,2,c
  6941  004F2C  EF9A  F027         	goto	u10841
  6942  004F30  EF9C  F027         	goto	u10840
  6943  004F34                     u10841:
  6944  004F34  EFA0  F027         	goto	l509
  6945  004F38                     u10840:
  6946  004F38                     
  6947                           ; BSR set to: 0
  6948  004F38  0EC2               	movlw	low _reg_set_LNB_LO_27
  6949  004F3A  6FE8               	movwf	si5328_set_freq@p& (0+255),b
  6950  004F3C  0E02               	movlw	high _reg_set_LNB_LO_27
  6951  004F3E  6FE9               	movwf	(si5328_set_freq@p+1)& (0+255),b
  6952  004F40                     l509:
  6953                           
  6954                           ; BSR set to: 0
  6955                           ;src/driver/si5328.c: 206:  if(p != ((void*)0)) {
  6956  004F40  51E8               	movf	si5328_set_freq@p& (0+255),w,b
  6957  004F42  11E9               	iorwf	(si5328_set_freq@p+1)& (0+255),w,b
  6958  004F44  B4D8               	btfsc	status,2,c
  6959  004F46  EFA7  F027         	goto	u10851
  6960  004F4A  EFA9  F027         	goto	u10850
  6961  004F4E                     u10851:
  6962  004F4E  EFCB  F027         	goto	l511
  6963  004F52                     u10850:
  6964  004F52                     
  6965                           ; BSR set to: 0
  6966                           ;src/driver/si5328.c: 207:   write_regset(i2c, addr, p, (sizeof(reg_set_LNB_LO_24)/sizeo
      +                          f(reg_set_LNB_LO_24[0])));
  6967  004F52  C0E4  F0D9         	movff	si5328_set_freq@i2c,write_regset@i2c
  6968  004F56  C0E5  F0DA         	movff	si5328_set_freq@i2c+1,write_regset@i2c+1
  6969  004F5A  C0E6  F0DB         	movff	si5328_set_freq@addr,write_regset@addr
  6970  004F5E  C0E8  F0DC         	movff	si5328_set_freq@p,write_regset@set
  6971  004F62  C0E9  F0DD         	movff	si5328_set_freq@p+1,write_regset@set+1
  6972  004F66  0E00               	movlw	0
  6973  004F68  6FDF               	movwf	(write_regset@len+1)& (0+255),b
  6974  004F6A  0E05               	movlw	5
  6975  004F6C  6FDE               	movwf	write_regset@len& (0+255),b
  6976  004F6E  ECB9  F025         	call	_write_regset	;wreg free
  6977  004F72                     
  6978                           ;src/driver/si5328.c: 208:   printf("Si5328 LNB output frequency set to %d MHz\n",freq_M
      +                          Hz);
  6979  004F72  0E35               	movlw	low STR_19
  6980  004F74  0100               	movlb	0	; () banked
  6981  004F76  6F95               	movwf	printf@fmt& (0+255),b
  6982  004F78  0E7A               	movlw	high STR_19
  6983  004F7A  6F96               	movwf	(printf@fmt+1)& (0+255),b
  6984  004F7C  C0E7  F097         	movff	si5328_set_freq@freq_MHz,?_printf+2
  6985  004F80  6B98               	clrf	(?_printf+3)& (0+255),b
  6986  004F82  ECA7  F032         	call	_printf	;wreg free
  6987  004F86                     
  6988                           ;src/driver/si5328.c: 209:   si5328_perform_ical(i2c, addr);
  6989  004F86  C0E4  F0D9         	movff	si5328_set_freq@i2c,si5328_perform_ical@i2c
  6990  004F8A  C0E5  F0DA         	movff	si5328_set_freq@i2c+1,si5328_perform_ical@i2c+1
  6991  004F8E  C0E6  F0DB         	movff	si5328_set_freq@addr,si5328_perform_ical@addr
  6992  004F92  ECFC  F02E         	call	_si5328_perform_ical	;wreg free
  6993  004F96                     l511:
  6994  004F96  0012               	return		;funcret
  6995  004F98                     __end_of_si5328_set_freq:
  6996                           	opt callstack 0
  6997                           
  6998 ;; *************** function _write_regset *****************
  6999 ;; Defined at:
  7000 ;;		line 328 in file "src/driver/si5328.c"
  7001 ;; Parameters:    Size  Location     Type
  7002 ;;  i2c             2   89[BANK0 ] PTR struct i2c_dev__
  7003 ;;		 -> g_i2c_bus(8), 
  7004 ;;  addr            1   91[BANK0 ] unsigned char 
  7005 ;;  set             2   92[BANK0 ] PTR const struct .
  7006 ;;		 -> reg_set_LNB_LO_27(10), reg_set_LNB_LO_26(10), reg_set_LNB_LO_25(10), reg_set_LNB_LO_24(10), 
  7007 ;;		 -> reg_set_univ(58), NULL(0), 
  7008 ;;  len             2   94[BANK0 ] unsigned short 
  7009 ;; Auto vars:     Size  Location     Type
  7010 ;;  errors          2   98[BANK0 ] int 
  7011 ;; Return value:  Size  Location     Type
  7012 ;;                  1    wreg      void 
  7013 ;; Registers used:
  7014 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7015 ;; Tracked objects:
  7016 ;;		On entry : 0/0
  7017 ;;		On exit  : 0/0
  7018 ;;		Unchanged: 0/0
  7019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7020 ;;      Params:         0       7       0       0       0       0       0
  7021 ;;      Locals:         0       2       0       0       0       0       0
  7022 ;;      Temps:          0       2       0       0       0       0       0
  7023 ;;      Totals:         0      11       0       0       0       0       0
  7024 ;;Total ram usage:       11 bytes
  7025 ;; Hardware stack levels used:    1
  7026 ;; Hardware stack levels required when called:   14
  7027 ;; This function calls:
  7028 ;;		_printf
  7029 ;;		_smbus8_write_byte
  7030 ;; This function is called by:
  7031 ;;		_si5328_init
  7032 ;;		_si5328_set_freq
  7033 ;; This function uses a non-reentrant model
  7034 ;;
  7035                           
  7036                           	psect	text11
  7037  004B72                     __ptext11:
  7038                           	opt callstack 0
  7039  004B72                     _write_regset:
  7040                           	opt callstack 15
  7041  004B72                     
  7042                           ;src/driver/si5328.c: 328: static void write_regset(i2c_dev i2c, u8 addr, const reg_set 
      +                          *set, u16 len);src/driver/si5328.c: 329: {;src/driver/si5328.c: 330:     int errors = 0;
  7043  004B72  0E00               	movlw	0
  7044  004B74  0100               	movlb	0	; () banked
  7045  004B76  6FE3               	movwf	(write_regset@errors+1)& (0+255),b
  7046  004B78  0E00               	movlw	0
  7047  004B7A  6FE2               	movwf	write_regset@errors& (0+255),b
  7048                           
  7049                           ;src/driver/si5328.c: 332:     while(len--) {
  7050  004B7C  EF02  F026         	goto	l8920
  7051  004B80                     l8914:
  7052                           
  7053                           ; BSR set to: 0
  7054                           ;src/driver/si5328.c: 333:         if (0 != smbus8_write_byte(i2c, addr, set->addr, set-
      +                          >value)) errors++;
  7055  004B80  C0D9  F0CB         	movff	write_regset@i2c,smbus8_write_byte@dev
  7056  004B84  C0DA  F0CC         	movff	write_regset@i2c+1,smbus8_write_byte@dev+1
  7057  004B88  C0DB  F0CD         	movff	write_regset@addr,smbus8_write_byte@addr
  7058  004B8C  C0DC  FFF6         	movff	write_regset@set,tblptrl
  7059  004B90  C0DD  FFF7         	movff	write_regset@set+1,tblptrh
  7060  004B94  6AF8               	clrf	tblptru,c
  7061  004B96  0E05               	movlw	(high __ramtop+-1)
  7062  004B98  64F7               	cpfsgt	tblptrh,c
  7063  004B9A  D003               	bra	u10497
  7064  004B9C  0008               	tblrd		*
  7065  004B9E  50F5               	movf	tablat,w,c
  7066  004BA0  D005               	bra	u10490
  7067  004BA2                     u10497:
  7068  004BA2  CFF6 FFE9          	movff	tblptrl,fsr0l
  7069  004BA6  CFF7 FFEA          	movff	tblptrh,fsr0h
  7070  004BAA  50EF               	movf	indf0,w,c
  7071  004BAC                     u10490:
  7072  004BAC  0100               	movlb	0	; () banked
  7073  004BAE  6FCE               	movwf	smbus8_write_byte@reg& (0+255),b
  7074  004BB0  0E01               	movlw	1
  7075  004BB2  25DC               	addwf	write_regset@set& (0+255),w,b
  7076  004BB4  6FE0               	movwf	??_write_regset& (0+255),b
  7077  004BB6  0E00               	movlw	0
  7078  004BB8  21DD               	addwfc	(write_regset@set+1)& (0+255),w,b
  7079  004BBA  6FE1               	movwf	(??_write_regset+1)& (0+255),b
  7080  004BBC  C0E0  FFF6         	movff	??_write_regset,tblptrl
  7081  004BC0  C0E1  FFF7         	movff	??_write_regset+1,tblptrh
  7082  004BC4  6AF8               	clrf	tblptru,c
  7083  004BC6  0E05               	movlw	(high __ramtop+-1)
  7084  004BC8  64F7               	cpfsgt	tblptrh,c
  7085  004BCA  D003               	bra	u10507
  7086  004BCC  0008               	tblrd		*
  7087  004BCE  50F5               	movf	tablat,w,c
  7088  004BD0  D005               	bra	u10500
  7089  004BD2                     u10507:
  7090  004BD2  CFF6 FFE9          	movff	tblptrl,fsr0l
  7091  004BD6  CFF7 FFEA          	movff	tblptrh,fsr0h
  7092  004BDA  50EF               	movf	indf0,w,c
  7093  004BDC                     u10500:
  7094  004BDC  0100               	movlb	0	; () banked
  7095  004BDE  6FCF               	movwf	smbus8_write_byte@data& (0+255),b
  7096  004BE0  EC7B  F030         	call	_smbus8_write_byte	;wreg free
  7097  004BE4  0100               	movlb	0	; () banked
  7098  004BE6  51CB               	movf	?_smbus8_write_byte& (0+255),w,b
  7099  004BE8  11CC               	iorwf	(?_smbus8_write_byte+1)& (0+255),w,b
  7100  004BEA  B4D8               	btfsc	status,2,c
  7101  004BEC  EFFA  F025         	goto	u10511
  7102  004BF0  EFFC  F025         	goto	u10510
  7103  004BF4                     u10511:
  7104  004BF4  EFFE  F025         	goto	l8918
  7105  004BF8                     u10510:
  7106  004BF8                     
  7107                           ; BSR set to: 0
  7108  004BF8  4BE2               	infsnz	write_regset@errors& (0+255),f,b
  7109  004BFA  2BE3               	incf	(write_regset@errors+1)& (0+255),f,b
  7110  004BFC                     l8918:
  7111                           
  7112                           ; BSR set to: 0
  7113                           ;src/driver/si5328.c: 334:         set++;
  7114  004BFC  0E02               	movlw	2
  7115  004BFE  27DC               	addwf	write_regset@set& (0+255),f,b
  7116  004C00  0E00               	movlw	0
  7117  004C02  23DD               	addwfc	(write_regset@set+1)& (0+255),f,b
  7118  004C04                     l8920:
  7119                           
  7120                           ; BSR set to: 0
  7121                           ;src/driver/si5328.c: 332:     while(len--) {
  7122  004C04  07DE               	decf	write_regset@len& (0+255),f,b
  7123  004C06  A0D8               	btfss	status,0,c
  7124  004C08  07DF               	decf	(write_regset@len+1)& (0+255),f,b
  7125  004C0A  29DE               	incf	write_regset@len& (0+255),w,b
  7126  004C0C  E106               	bnz	u10521
  7127  004C0E  29DF               	incf	(write_regset@len+1)& (0+255),w,b
  7128  004C10  A4D8               	btfss	status,2,c
  7129  004C12  EF0D  F026         	goto	u10521
  7130  004C16  EF0F  F026         	goto	u10520
  7131  004C1A                     u10521:
  7132  004C1A  EFC0  F025         	goto	l8914
  7133  004C1E                     u10520:
  7134  004C1E                     
  7135                           ; BSR set to: 0
  7136                           ;src/driver/si5328.c: 337:   if(errors > 0)
  7137  004C1E  BFE3               	btfsc	(write_regset@errors+1)& (0+255),7,b
  7138  004C20  EF1A  F026         	goto	u10531
  7139  004C24  51E3               	movf	(write_regset@errors+1)& (0+255),w,b
  7140  004C26  E108               	bnz	u10530
  7141  004C28  05E2               	decf	write_regset@errors& (0+255),w,b
  7142  004C2A  A0D8               	btfss	status,0,c
  7143  004C2C  EF1A  F026         	goto	u10531
  7144  004C30  EF1C  F026         	goto	u10530
  7145  004C34                     u10531:
  7146  004C34  EF26  F026         	goto	l538
  7147  004C38                     u10530:
  7148  004C38                     
  7149                           ; BSR set to: 0
  7150                           ;src/driver/si5328.c: 338:  {;src/driver/si5328.c: 339:   printf("Si5328 write_regset %i
      +                           errors.\n", errors);
  7151  004C38  0EEE               	movlw	low STR_28
  7152  004C3A  6F95               	movwf	printf@fmt& (0+255),b
  7153  004C3C  0E7A               	movlw	high STR_28
  7154  004C3E  6F96               	movwf	(printf@fmt+1)& (0+255),b
  7155  004C40  C0E2  F097         	movff	write_regset@errors,?_printf+2
  7156  004C44  C0E3  F098         	movff	write_regset@errors+1,?_printf+3
  7157  004C48  ECA7  F032         	call	_printf	;wreg free
  7158  004C4C                     l538:
  7159  004C4C  0012               	return		;funcret
  7160  004C4E                     __end_of_write_regset:
  7161                           	opt callstack 0
  7162                           
  7163 ;; *************** function _si5328_perform_ical *****************
  7164 ;; Defined at:
  7165 ;;		line 248 in file "src/driver/si5328.c"
  7166 ;; Parameters:    Size  Location     Type
  7167 ;;  i2c             2   89[BANK0 ] PTR struct i2c_dev__
  7168 ;;		 -> g_i2c_bus(8), 
  7169 ;;  addr            1   91[BANK0 ] unsigned char 
  7170 ;; Auto vars:     Size  Location     Type
  7171 ;;		None
  7172 ;; Return value:  Size  Location     Type
  7173 ;;                  1    wreg      void 
  7174 ;; Registers used:
  7175 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7176 ;; Tracked objects:
  7177 ;;		On entry : 0/0
  7178 ;;		On exit  : 0/0
  7179 ;;		Unchanged: 0/0
  7180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7181 ;;      Params:         0       3       0       0       0       0       0
  7182 ;;      Locals:         0       0       0       0       0       0       0
  7183 ;;      Temps:          0       0       0       0       0       0       0
  7184 ;;      Totals:         0       3       0       0       0       0       0
  7185 ;;Total ram usage:        3 bytes
  7186 ;; Hardware stack levels used:    1
  7187 ;; Hardware stack levels required when called:   14
  7188 ;; This function calls:
  7189 ;;		_printf
  7190 ;;		_smbus8_write_byte
  7191 ;; This function is called by:
  7192 ;;		_si5328_init
  7193 ;;		_si5328_set_freq
  7194 ;; This function uses a non-reentrant model
  7195 ;;
  7196                           
  7197                           	psect	text12
  7198  005DF8                     __ptext12:
  7199                           	opt callstack 0
  7200  005DF8                     _si5328_perform_ical:
  7201                           	opt callstack 15
  7202  005DF8                     
  7203                           ;src/driver/si5328.c: 248: static void si5328_perform_ical(i2c_dev i2c, u8 addr);src/dri
      +                          ver/si5328.c: 249: {;src/driver/si5328.c: 250:  printf("Si5328 ical\n");
  7204  005DF8  0E2D               	movlw	low STR_20
  7205  005DFA  0100               	movlb	0	; () banked
  7206  005DFC  6F95               	movwf	printf@fmt& (0+255),b
  7207  005DFE  0E7D               	movlw	high STR_20
  7208  005E00  6F96               	movwf	(printf@fmt+1)& (0+255),b
  7209  005E02  ECA7  F032         	call	_printf	;wreg free
  7210  005E06                     
  7211                           ;src/driver/si5328.c: 251:  if (smbus8_write_byte(i2c, addr, 136, 0x40) == 0)
  7212  005E06  C0D9  F0CB         	movff	si5328_perform_ical@i2c,smbus8_write_byte@dev
  7213  005E0A  C0DA  F0CC         	movff	si5328_perform_ical@i2c+1,smbus8_write_byte@dev+1
  7214  005E0E  C0DB  F0CD         	movff	si5328_perform_ical@addr,smbus8_write_byte@addr
  7215  005E12  0E88               	movlw	136
  7216  005E14  0100               	movlb	0	; () banked
  7217  005E16  6FCE               	movwf	smbus8_write_byte@reg& (0+255),b
  7218  005E18  0E40               	movlw	64
  7219  005E1A  6FCF               	movwf	smbus8_write_byte@data& (0+255),b
  7220  005E1C  EC7B  F030         	call	_smbus8_write_byte	;wreg free
  7221  005E20  0100               	movlb	0	; () banked
  7222  005E22  51CB               	movf	?_smbus8_write_byte& (0+255),w,b
  7223  005E24  11CC               	iorwf	(?_smbus8_write_byte+1)& (0+255),w,b
  7224  005E26  A4D8               	btfss	status,2,c
  7225  005E28  EF18  F02F         	goto	u10541
  7226  005E2C  EF1A  F02F         	goto	u10540
  7227  005E30                     u10541:
  7228  005E30  EF22  F02F         	goto	l8932
  7229  005E34                     u10540:
  7230  005E34                     
  7231                           ; BSR set to: 0
  7232                           ;src/driver/si5328.c: 252:  {;src/driver/si5328.c: 253:   printf("Si5328 ICAL in process
      +                          \n");
  7233  005E34  0E94               	movlw	low STR_21
  7234  005E36  6F95               	movwf	printf@fmt& (0+255),b
  7235  005E38  0E7B               	movlw	high STR_21
  7236  005E3A  6F96               	movwf	(printf@fmt+1)& (0+255),b
  7237  005E3C  ECA7  F032         	call	_printf	;wreg free
  7238                           
  7239                           ;src/driver/si5328.c: 254:  }
  7240  005E40  EF28  F02F         	goto	l516
  7241  005E44                     l8932:
  7242                           
  7243                           ; BSR set to: 0
  7244                           ;src/driver/si5328.c: 256:  {;src/driver/si5328.c: 257:   printf("Si5328 ICAL write fail
      +                          ed.\n");
  7245  005E44  0E47               	movlw	low STR_22
  7246  005E46  6F95               	movwf	printf@fmt& (0+255),b
  7247  005E48  0E7B               	movlw	high STR_22
  7248  005E4A  6F96               	movwf	(printf@fmt+1)& (0+255),b
  7249  005E4C  ECA7  F032         	call	_printf	;wreg free
  7250  005E50                     l516:
  7251  005E50  0012               	return		;funcret
  7252  005E52                     __end_of_si5328_perform_ical:
  7253                           	opt callstack 0
  7254                           
  7255 ;; *************** function _setADF4351frequency *****************
  7256 ;; Defined at:
  7257 ;;		line 173 in file "src/main.c"
  7258 ;; Parameters:    Size  Location     Type
  7259 ;;  force           1    wreg     unsigned char 
  7260 ;; Auto vars:     Size  Location     Type
  7261 ;;  force           1   53[BANK0 ] unsigned char 
  7262 ;;  timeout         2   54[BANK0 ] int 
  7263 ;;  p               2   56[BANK0 ] PTR const unsigned long 
  7264 ;;		 -> freq_table_27_OPT(40), freq_table_27_26(40), freq_table_25_25(40), freq_table_25_24(40), 
  7265 ;;  sw              1   58[BANK0 ] unsigned char 
  7266 ;; Return value:  Size  Location     Type
  7267 ;;                  1    wreg      void 
  7268 ;; Registers used:
  7269 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7270 ;; Tracked objects:
  7271 ;;		On entry : 0/0
  7272 ;;		On exit  : 0/0
  7273 ;;		Unchanged: 0/0
  7274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7275 ;;      Params:         0       0       0       0       0       0       0
  7276 ;;      Locals:         0       6       0       0       0       0       0
  7277 ;;      Temps:          0       2       0       0       0       0       0
  7278 ;;      Totals:         0       8       0       0       0       0       0
  7279 ;;Total ram usage:        8 bytes
  7280 ;; Hardware stack levels used:    1
  7281 ;; Hardware stack levels required when called:   12
  7282 ;; This function calls:
  7283 ;;		_adf4351_get_lock
  7284 ;;		_adf4351_set_freq
  7285 ;;		_printf
  7286 ;;		_read_switch
  7287 ;; This function is called by:
  7288 ;;		_main
  7289 ;; This function uses a non-reentrant model
  7290 ;;
  7291                           
  7292                           	psect	text13
  7293  003244                     __ptext13:
  7294                           	opt callstack 0
  7295  003244                     _setADF4351frequency:
  7296                           	opt callstack 18
  7297                           
  7298                           ;incstack = 0
  7299                           ;setADF4351frequency@force stored from wreg
  7300  003244  0100               	movlb	0	; () banked
  7301  003246  6FB5               	movwf	setADF4351frequency@force& (0+255),b
  7302  003248                     
  7303                           ;src/main.c: 173: static void setADF4351frequency(u8 force);src/main.c: 174: {;src/main.
      +                          c: 175:  const u32 *p = freq_table_25_24;
  7304  003248  0E4D               	movlw	low _freq_table_25_24
  7305  00324A  0100               	movlb	0	; () banked
  7306  00324C  6FB8               	movwf	setADF4351frequency@p& (0+255),b
  7307  00324E  0E78               	movlw	high _freq_table_25_24
  7308  003250  6FB9               	movwf	(setADF4351frequency@p+1)& (0+255),b
  7309  003252                     
  7310                           ; BSR set to: 0
  7311                           ;src/main.c: 176:  if(currentLO == 25) p = freq_table_25_25;
  7312  003252  0E19               	movlw	25
  7313  003254  0101               	movlb	1	; () banked
  7314  003256  19D6               	xorwf	_currentLO& (0+255),w,b
  7315  003258  A4D8               	btfss	status,2,c
  7316  00325A  EF31  F019         	goto	u11481
  7317  00325E  EF33  F019         	goto	u11480
  7318  003262                     u11481:
  7319  003262  EF38  F019         	goto	l988
  7320  003266                     u11480:
  7321  003266                     
  7322                           ; BSR set to: 1
  7323  003266  0E25               	movlw	low _freq_table_25_25
  7324  003268  0100               	movlb	0	; () banked
  7325  00326A  6FB8               	movwf	setADF4351frequency@p& (0+255),b
  7326  00326C  0E78               	movlw	high _freq_table_25_25
  7327  00326E  6FB9               	movwf	(setADF4351frequency@p+1)& (0+255),b
  7328  003270                     l988:
  7329                           
  7330                           ;src/main.c: 177:  if(currentLO == 26) p = freq_table_27_26;
  7331  003270  0E1A               	movlw	26
  7332  003272  0101               	movlb	1	; () banked
  7333  003274  19D6               	xorwf	_currentLO& (0+255),w,b
  7334  003276  A4D8               	btfss	status,2,c
  7335  003278  EF40  F019         	goto	u11491
  7336  00327C  EF42  F019         	goto	u11490
  7337  003280                     u11491:
  7338  003280  EF47  F019         	goto	l989
  7339  003284                     u11490:
  7340  003284                     
  7341                           ; BSR set to: 1
  7342  003284  0EFD               	movlw	low _freq_table_27_26
  7343  003286  0100               	movlb	0	; () banked
  7344  003288  6FB8               	movwf	setADF4351frequency@p& (0+255),b
  7345  00328A  0E77               	movlw	high _freq_table_27_26
  7346  00328C  6FB9               	movwf	(setADF4351frequency@p+1)& (0+255),b
  7347  00328E                     l989:
  7348                           
  7349                           ;src/main.c: 178:  if(currentLO == 27) p = freq_table_27_OPT;
  7350  00328E  0E1B               	movlw	27
  7351  003290  0101               	movlb	1	; () banked
  7352  003292  19D6               	xorwf	_currentLO& (0+255),w,b
  7353  003294  A4D8               	btfss	status,2,c
  7354  003296  EF4F  F019         	goto	u11501
  7355  00329A  EF51  F019         	goto	u11500
  7356  00329E                     u11501:
  7357  00329E  EF56  F019         	goto	l9620
  7358  0032A2                     u11500:
  7359  0032A2                     
  7360                           ; BSR set to: 1
  7361  0032A2  0ED5               	movlw	low _freq_table_27_OPT
  7362  0032A4  0100               	movlb	0	; () banked
  7363  0032A6  6FB8               	movwf	setADF4351frequency@p& (0+255),b
  7364  0032A8  0E77               	movlw	high _freq_table_27_OPT
  7365  0032AA  6FB9               	movwf	(setADF4351frequency@p+1)& (0+255),b
  7366  0032AC                     l9620:
  7367                           
  7368                           ;src/main.c: 180:  u8 sw = read_switch();
  7369  0032AC  ECC0  F01F         	call	_read_switch	;wreg free
  7370  0032B0  0100               	movlb	0	; () banked
  7371  0032B2  6FBA               	movwf	setADF4351frequency@sw& (0+255),b
  7372  0032B4                     
  7373                           ; BSR set to: 0
  7374                           ;src/main.c: 182:  if(sw != actualADFswitch || force)
  7375  0032B4  0101               	movlb	1	; () banked
  7376  0032B6  51D3               	movf	_actualADFswitch& (0+255),w,b
  7377  0032B8  0100               	movlb	0	; () banked
  7378  0032BA  19BA               	xorwf	setADF4351frequency@sw& (0+255),w,b
  7379  0032BC  A4D8               	btfss	status,2,c
  7380  0032BE  EF63  F019         	goto	u11511
  7381  0032C2  EF65  F019         	goto	u11510
  7382  0032C6                     u11511:
  7383  0032C6  EF6D  F019         	goto	l9626
  7384  0032CA                     u11510:
  7385  0032CA                     
  7386                           ; BSR set to: 0
  7387  0032CA  51B5               	movf	setADF4351frequency@force& (0+255),w,b
  7388  0032CC  B4D8               	btfsc	status,2,c
  7389  0032CE  EF6B  F019         	goto	u11521
  7390  0032D2  EF6D  F019         	goto	u11520
  7391  0032D6                     u11521:
  7392  0032D6  EFF6  F019         	goto	l1000
  7393  0032DA                     u11520:
  7394  0032DA                     l9626:
  7395                           
  7396                           ; BSR set to: 0
  7397                           ;src/main.c: 183:  {;src/main.c: 184:   printf("set ADF4351 frequency for LNBLO:%d MHz\n
      +                          switch pos %d = freq:%ld kHz\n",currentLO,sw,p[sw]);
  7398  0032DA  0E89               	movlw	low STR_65
  7399  0032DC  6F95               	movwf	printf@fmt& (0+255),b
  7400  0032DE  0E79               	movlw	high STR_65
  7401  0032E0  6F96               	movwf	(printf@fmt+1)& (0+255),b
  7402  0032E2  C1D6  F097         	movff	_currentLO,?_printf+2
  7403  0032E6  6B98               	clrf	(?_printf+3)& (0+255),b
  7404  0032E8  C0BA  F099         	movff	setADF4351frequency@sw,?_printf+4
  7405  0032EC  6B9A               	clrf	(?_printf+5)& (0+255),b
  7406  0032EE  51BA               	movf	setADF4351frequency@sw& (0+255),w,b
  7407  0032F0  0D04               	mullw	4
  7408  0032F2  C0B8  F0B3         	movff	setADF4351frequency@p,??_setADF4351frequency
  7409  0032F6  C0B9  F0B4         	movff	setADF4351frequency@p+1,??_setADF4351frequency+1
  7410  0032FA  50F3               	movf	243,w,c
  7411  0032FC  27B3               	addwf	??_setADF4351frequency& (0+255),f,b
  7412  0032FE  50F4               	movf	244,w,c
  7413  003300  23B4               	addwfc	(??_setADF4351frequency+1)& (0+255),f,b
  7414  003302  C0B3  FFF6         	movff	??_setADF4351frequency,tblptrl
  7415  003306  C0B4  FFF7         	movff	??_setADF4351frequency+1,tblptrh
  7416  00330A                     	if	0	;tblptru may be non-zero
  7417  00330A                     	endif
  7418  00330A                     	if	0	;tblptru may be non-zero
  7419  00330A                     	endif
  7420  00330A  0009               	tblrd		*+
  7421  00330C  CFF5 F09B          	movff	tablat,?_printf+6
  7422  003310  0009               	tblrd		*+
  7423  003312  CFF5 F09C          	movff	tablat,?_printf+7
  7424  003316  0009               	tblrd		*+
  7425  003318  CFF5 F09D          	movff	tablat,?_printf+8
  7426  00331C  000A               	tblrd		*-
  7427  00331E  CFF5 F09E          	movff	tablat,?_printf+9
  7428  003322  ECA7  F032         	call	_printf	;wreg free
  7429  003326                     
  7430                           ;src/main.c: 185:   actualADFswitch = sw;
  7431  003326  C0BA  F1D3         	movff	setADF4351frequency@sw,_actualADFswitch
  7432  00332A                     
  7433                           ;src/main.c: 187:   int timeout = 1000;
  7434  00332A  0E03               	movlw	3
  7435  00332C  0100               	movlb	0	; () banked
  7436  00332E  6FB7               	movwf	(setADF4351frequency@timeout+1)& (0+255),b
  7437  003330  0EE8               	movlw	232
  7438  003332  6FB6               	movwf	setADF4351frequency@timeout& (0+255),b
  7439  003334                     
  7440                           ; BSR set to: 0
  7441                           ;src/main.c: 189:         adf4351_set_freq(&g_adf4351, p[sw]);
  7442  003334  0E32               	movlw	low _g_adf4351
  7443  003336  6FAB               	movwf	adf4351_set_freq@ctx& (0+255),b
  7444  003338  0E02               	movlw	high _g_adf4351
  7445  00333A  6FAC               	movwf	(adf4351_set_freq@ctx+1)& (0+255),b
  7446  00333C  51BA               	movf	setADF4351frequency@sw& (0+255),w,b
  7447  00333E  0D04               	mullw	4
  7448  003340  C0B8  F0B3         	movff	setADF4351frequency@p,??_setADF4351frequency
  7449  003344  C0B9  F0B4         	movff	setADF4351frequency@p+1,??_setADF4351frequency+1
  7450  003348  50F3               	movf	243,w,c
  7451  00334A  27B3               	addwf	??_setADF4351frequency& (0+255),f,b
  7452  00334C  50F4               	movf	244,w,c
  7453  00334E  23B4               	addwfc	(??_setADF4351frequency+1)& (0+255),f,b
  7454  003350  C0B3  FFF6         	movff	??_setADF4351frequency,tblptrl
  7455  003354  C0B4  FFF7         	movff	??_setADF4351frequency+1,tblptrh
  7456  003358                     	if	0	;tblptru may be non-zero
  7457  003358                     	endif
  7458  003358                     	if	0	;tblptru may be non-zero
  7459  003358                     	endif
  7460  003358  0009               	tblrd		*+
  7461  00335A  CFF5 F0AD          	movff	tablat,adf4351_set_freq@freq
  7462  00335E  0009               	tblrd		*+
  7463  003360  CFF5 F0AE          	movff	tablat,adf4351_set_freq@freq+1
  7464  003364  0009               	tblrd		*+
  7465  003366  CFF5 F0AF          	movff	tablat,adf4351_set_freq@freq+2
  7466  00336A  000A               	tblrd		*-
  7467  00336C  CFF5 F0B0          	movff	tablat,adf4351_set_freq@freq+3
  7468  003370  EC4E  F02B         	call	_adf4351_set_freq	;wreg free
  7469                           
  7470                           ;src/main.c: 190:         while((adf4351_get_lock(&g_adf4351) == 0) && timeout)
  7471  003374  EFC9  F019         	goto	l9638
  7472  003378                     l9634:
  7473                           
  7474                           ; BSR set to: 0
  7475                           ;src/main.c: 191:   {;src/main.c: 192:             timeout--;
  7476  003378  07B6               	decf	setADF4351frequency@timeout& (0+255),f,b
  7477  00337A  A0D8               	btfss	status,0,c
  7478  00337C  07B7               	decf	(setADF4351frequency@timeout+1)& (0+255),f,b
  7479  00337E                     
  7480                           ; BSR set to: 0
  7481                           ;src/main.c: 193:             _delaywdt((unsigned long)((1)*(8000000/4000.0)));
  7482  00337E  0E02               	movlw	2
  7483  003380  0100               	movlb	0	; () banked
  7484  003382  6FB3               	movwf	??_setADF4351frequency& (0+255),b
  7485  003384  0EF2               	movlw	242
  7486  003386                     u12097:
  7487  003386  0004               	clrwdt	
  7488  003388  2EE8               	decfsz	wreg,f,c
  7489  00338A  D7FD               	bra	u12097
  7490  00338C  2FB3               	decfsz	??_setADF4351frequency& (0+255),f,b
  7491  00338E  D7FB               	bra	u12097
  7492  003390  0004               	clrwdt	
  7493  003392                     l9638:
  7494                           
  7495                           ;src/main.c: 190:         while((adf4351_get_lock(&g_adf4351) == 0) && timeout)
  7496  003392  0E32               	movlw	low _g_adf4351
  7497  003394  6E0D               	movwf	adf4351_get_lock@ctx^0,c
  7498  003396  0E02               	movlw	high _g_adf4351
  7499  003398  6E0E               	movwf	(adf4351_get_lock@ctx+1)^0,c
  7500  00339A  ECC5  F030         	call	_adf4351_get_lock	;wreg free
  7501  00339E  500D               	movf	?_adf4351_get_lock^0,w,c
  7502  0033A0  100E               	iorwf	(?_adf4351_get_lock+1)^0,w,c
  7503  0033A2  A4D8               	btfss	status,2,c
  7504  0033A4  EFD6  F019         	goto	u11531
  7505  0033A8  EFD8  F019         	goto	u11530
  7506  0033AC                     u11531:
  7507  0033AC  EFE2  F019         	goto	l9642
  7508  0033B0                     u11530:
  7509  0033B0  0100               	movlb	0	; () banked
  7510  0033B2  51B6               	movf	setADF4351frequency@timeout& (0+255),w,b
  7511  0033B4  11B7               	iorwf	(setADF4351frequency@timeout+1)& (0+255),w,b
  7512  0033B6  A4D8               	btfss	status,2,c
  7513  0033B8  EFE0  F019         	goto	u11541
  7514  0033BC  EFE2  F019         	goto	u11540
  7515  0033C0                     u11541:
  7516  0033C0  EFBC  F019         	goto	l9634
  7517  0033C4                     u11540:
  7518  0033C4                     l9642:
  7519                           
  7520                           ;src/main.c: 195:         if(timeout <= 0)
  7521  0033C4  0100               	movlb	0	; () banked
  7522  0033C6  BFB7               	btfsc	(setADF4351frequency@timeout+1)& (0+255),7,b
  7523  0033C8  EFF0  F019         	goto	u11550
  7524  0033CC  51B7               	movf	(setADF4351frequency@timeout+1)& (0+255),w,b
  7525  0033CE  E106               	bnz	u11551
  7526  0033D0  05B6               	decf	setADF4351frequency@timeout& (0+255),w,b
  7527  0033D2  B0D8               	btfsc	status,0,c
  7528  0033D4  EFEE  F019         	goto	u11551
  7529  0033D8  EFF0  F019         	goto	u11550
  7530  0033DC                     u11551:
  7531  0033DC  EFF6  F019         	goto	l1000
  7532  0033E0                     u11550:
  7533  0033E0                     
  7534                           ; BSR set to: 0
  7535                           ;src/main.c: 196:             printf("ADF4351 lock timed out after frequency setting\n")
      +                          ;
  7536  0033E0  0E05               	movlw	low STR_66
  7537  0033E2  6F95               	movwf	printf@fmt& (0+255),b
  7538  0033E4  0E7A               	movlw	high STR_66
  7539  0033E6  6F96               	movwf	(printf@fmt+1)& (0+255),b
  7540  0033E8  ECA7  F032         	call	_printf	;wreg free
  7541  0033EC                     l1000:
  7542  0033EC  0012               	return		;funcret
  7543  0033EE                     __end_of_setADF4351frequency:
  7544                           	opt callstack 0
  7545                           
  7546 ;; *************** function _read_switch *****************
  7547 ;; Defined at:
  7548 ;;		line 160 in file "src/main.c"
  7549 ;; Parameters:    Size  Location     Type
  7550 ;;		None
  7551 ;; Auto vars:     Size  Location     Type
  7552 ;;  rb4             1   18[COMRAM] unsigned char 
  7553 ;;  rb3             1   17[COMRAM] unsigned char 
  7554 ;;  rb2             1   16[COMRAM] unsigned char 
  7555 ;;  rb1             1   15[COMRAM] unsigned char 
  7556 ;; Return value:  Size  Location     Type
  7557 ;;                  1    wreg      unsigned char 
  7558 ;; Registers used:
  7559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7560 ;; Tracked objects:
  7561 ;;		On entry : 0/0
  7562 ;;		On exit  : 0/0
  7563 ;;		Unchanged: 0/0
  7564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7565 ;;      Params:         0       0       0       0       0       0       0
  7566 ;;      Locals:         4       0       0       0       0       0       0
  7567 ;;      Temps:          3       0       0       0       0       0       0
  7568 ;;      Totals:         7       0       0       0       0       0       0
  7569 ;;Total ram usage:        7 bytes
  7570 ;; Hardware stack levels used:    1
  7571 ;; Hardware stack levels required when called:    2
  7572 ;; This function calls:
  7573 ;;		Nothing
  7574 ;; This function is called by:
  7575 ;;		_setADF4351frequency
  7576 ;; This function uses a non-reentrant model
  7577 ;;
  7578                           
  7579                           	psect	text14
  7580  003F80                     __ptext14:
  7581                           	opt callstack 0
  7582  003F80                     _read_switch:
  7583                           	opt callstack 27
  7584  003F80                     
  7585                           ;src/main.c: 162:     u8 rb1, rb2, rb3, rb4;;src/main.c: 165:     rb1 = ((*((PIN_SJ3)->p
      +                          PORT) & (PIN_SJ3)->mask) != 0)?0:1;
  7586  003F80  0E97               	movlw	low (_PIN_SJ3_DEF+4)
  7587  003F82  6EF6               	movwf	tblptrl,c
  7588  003F84  0E78               	movlw	high (_PIN_SJ3_DEF+4)
  7589  003F86  6EF7               	movwf	tblptrh,c
  7590  003F88                     	if	0	;tblptru may be non-zero
  7591  003F88                     	endif
  7592  003F88                     	if	0	;tblptru may be non-zero
  7593  003F88                     	endif
  7594  003F88  0008               	tblrd		*
  7595  003F8A  CFF5 F00D          	movff	tablat,??_read_switch
  7596  003F8E  0E93               	movlw	low _PIN_SJ3_DEF
  7597  003F90  6EF6               	movwf	tblptrl,c
  7598  003F92                     	if	1	;There is more than 1 active tblptr byte
  7599  003F92  0E78               	movlw	high _PIN_SJ3_DEF
  7600  003F94  6EF7               	movwf	tblptrh,c
  7601  003F96                     	endif
  7602  003F96                     	if	0	;There are less than 3 active tblptr bytes
  7603  003F96                     	endif
  7604  003F96  0009               	tblrd		*+
  7605  003F98  CFF5 F00E          	movff	tablat,??_read_switch+1
  7606  003F9C  0009               	tblrd		*+
  7607  003F9E  CFF5 F00F          	movff	tablat,??_read_switch+2
  7608  003FA2  C00E  FFD9         	movff	??_read_switch+1,fsr2l
  7609  003FA6  C00F  FFDA         	movff	??_read_switch+2,fsr2h
  7610  003FAA  50DF               	movf	indf2,w,c
  7611  003FAC  140D               	andwf	??_read_switch^0,w,c
  7612  003FAE  0900               	iorlw	0
  7613  003FB0  B4D8               	btfsc	status,2,c
  7614  003FB2  EFDD  F01F         	goto	u7251
  7615  003FB6  EFE0  F01F         	goto	u7250
  7616  003FBA                     u7251:
  7617  003FBA  0E01               	movlw	1
  7618  003FBC  EFE1  F01F         	goto	u7260
  7619  003FC0                     u7250:
  7620  003FC0  0E00               	movlw	0
  7621  003FC2                     u7260:
  7622  003FC2  6E10               	movwf	read_switch@rb1^0,c
  7623                           
  7624                           ;src/main.c: 166:     rb2 = ((*((PIN_SJ4)->pPORT) & (PIN_SJ4)->mask) != 0)?0:1;
  7625  003FC4  0E92               	movlw	low (_PIN_SJ4_DEF+4)
  7626  003FC6  6EF6               	movwf	tblptrl,c
  7627  003FC8  0E78               	movlw	high (_PIN_SJ4_DEF+4)
  7628  003FCA  6EF7               	movwf	tblptrh,c
  7629  003FCC                     	if	0	;tblptru may be non-zero
  7630  003FCC                     	endif
  7631  003FCC                     	if	0	;tblptru may be non-zero
  7632  003FCC                     	endif
  7633  003FCC  0008               	tblrd		*
  7634  003FCE  CFF5 F00D          	movff	tablat,??_read_switch
  7635  003FD2  0E8E               	movlw	low _PIN_SJ4_DEF
  7636  003FD4  6EF6               	movwf	tblptrl,c
  7637  003FD6                     	if	1	;There is more than 1 active tblptr byte
  7638  003FD6  0E78               	movlw	high _PIN_SJ4_DEF
  7639  003FD8  6EF7               	movwf	tblptrh,c
  7640  003FDA                     	endif
  7641  003FDA                     	if	0	;There are less than 3 active tblptr bytes
  7642  003FDA                     	endif
  7643  003FDA  0009               	tblrd		*+
  7644  003FDC  CFF5 F00E          	movff	tablat,??_read_switch+1
  7645  003FE0  0009               	tblrd		*+
  7646  003FE2  CFF5 F00F          	movff	tablat,??_read_switch+2
  7647  003FE6  C00E  FFD9         	movff	??_read_switch+1,fsr2l
  7648  003FEA  C00F  FFDA         	movff	??_read_switch+2,fsr2h
  7649  003FEE  50DF               	movf	indf2,w,c
  7650  003FF0  140D               	andwf	??_read_switch^0,w,c
  7651  003FF2  0900               	iorlw	0
  7652  003FF4  B4D8               	btfsc	status,2,c
  7653  003FF6  EFFF  F01F         	goto	u7271
  7654  003FFA  EF02  F020         	goto	u7270
  7655  003FFE                     u7271:
  7656  003FFE  0E01               	movlw	1
  7657  004000  EF03  F020         	goto	u7280
  7658  004004                     u7270:
  7659  004004  0E00               	movlw	0
  7660  004006                     u7280:
  7661  004006  6E11               	movwf	read_switch@rb2^0,c
  7662                           
  7663                           ;src/main.c: 167:     rb3 = ((*((PIN_SJ5)->pPORT) & (PIN_SJ5)->mask) != 0)?0:1;
  7664  004008  0E8D               	movlw	low (_PIN_SJ5_DEF+4)
  7665  00400A  6EF6               	movwf	tblptrl,c
  7666  00400C  0E78               	movlw	high (_PIN_SJ5_DEF+4)
  7667  00400E  6EF7               	movwf	tblptrh,c
  7668  004010                     	if	0	;tblptru may be non-zero
  7669  004010                     	endif
  7670  004010                     	if	0	;tblptru may be non-zero
  7671  004010                     	endif
  7672  004010  0008               	tblrd		*
  7673  004012  CFF5 F00D          	movff	tablat,??_read_switch
  7674  004016  0E89               	movlw	low _PIN_SJ5_DEF
  7675  004018  6EF6               	movwf	tblptrl,c
  7676  00401A                     	if	1	;There is more than 1 active tblptr byte
  7677  00401A  0E78               	movlw	high _PIN_SJ5_DEF
  7678  00401C  6EF7               	movwf	tblptrh,c
  7679  00401E                     	endif
  7680  00401E                     	if	0	;There are less than 3 active tblptr bytes
  7681  00401E                     	endif
  7682  00401E  0009               	tblrd		*+
  7683  004020  CFF5 F00E          	movff	tablat,??_read_switch+1
  7684  004024  0009               	tblrd		*+
  7685  004026  CFF5 F00F          	movff	tablat,??_read_switch+2
  7686  00402A  C00E  FFD9         	movff	??_read_switch+1,fsr2l
  7687  00402E  C00F  FFDA         	movff	??_read_switch+2,fsr2h
  7688  004032  50DF               	movf	indf2,w,c
  7689  004034  140D               	andwf	??_read_switch^0,w,c
  7690  004036  0900               	iorlw	0
  7691  004038  B4D8               	btfsc	status,2,c
  7692  00403A  EF21  F020         	goto	u7291
  7693  00403E  EF24  F020         	goto	u7290
  7694  004042                     u7291:
  7695  004042  0E01               	movlw	1
  7696  004044  EF25  F020         	goto	u7300
  7697  004048                     u7290:
  7698  004048  0E00               	movlw	0
  7699  00404A                     u7300:
  7700  00404A  6E12               	movwf	read_switch@rb3^0,c
  7701                           
  7702                           ;src/main.c: 168:     rb4 = ((*((PIN_SJ6)->pPORT) & (PIN_SJ6)->mask) != 0)?0:1;
  7703  00404C  0E88               	movlw	low (_PIN_SJ6_DEF+4)
  7704  00404E  6EF6               	movwf	tblptrl,c
  7705  004050  0E78               	movlw	high (_PIN_SJ6_DEF+4)
  7706  004052  6EF7               	movwf	tblptrh,c
  7707  004054                     	if	0	;tblptru may be non-zero
  7708  004054                     	endif
  7709  004054                     	if	0	;tblptru may be non-zero
  7710  004054                     	endif
  7711  004054  0008               	tblrd		*
  7712  004056  CFF5 F00D          	movff	tablat,??_read_switch
  7713  00405A  0E84               	movlw	low _PIN_SJ6_DEF
  7714  00405C  6EF6               	movwf	tblptrl,c
  7715  00405E                     	if	1	;There is more than 1 active tblptr byte
  7716  00405E  0E78               	movlw	high _PIN_SJ6_DEF
  7717  004060  6EF7               	movwf	tblptrh,c
  7718  004062                     	endif
  7719  004062                     	if	0	;There are less than 3 active tblptr bytes
  7720  004062                     	endif
  7721  004062  0009               	tblrd		*+
  7722  004064  CFF5 F00E          	movff	tablat,??_read_switch+1
  7723  004068  0009               	tblrd		*+
  7724  00406A  CFF5 F00F          	movff	tablat,??_read_switch+2
  7725  00406E  C00E  FFD9         	movff	??_read_switch+1,fsr2l
  7726  004072  C00F  FFDA         	movff	??_read_switch+2,fsr2h
  7727  004076  50DF               	movf	indf2,w,c
  7728  004078  140D               	andwf	??_read_switch^0,w,c
  7729  00407A  0900               	iorlw	0
  7730  00407C  B4D8               	btfsc	status,2,c
  7731  00407E  EF43  F020         	goto	u7311
  7732  004082  EF46  F020         	goto	u7310
  7733  004086                     u7311:
  7734  004086  0E01               	movlw	1
  7735  004088  EF47  F020         	goto	u7320
  7736  00408C                     u7310:
  7737  00408C  0E00               	movlw	0
  7738  00408E                     u7320:
  7739  00408E  6E13               	movwf	read_switch@rb4^0,c
  7740  004090                     
  7741                           ;src/main.c: 170:     return (rb4<<0) | (rb3<<1) | (rb2<<2) | (rb1<<3);
  7742  004090  C010  F00D         	movff	read_switch@rb1,??_read_switch
  7743  004094  90D8               	bcf	status,0,c
  7744  004096  360D               	rlcf	??_read_switch^0,f,c
  7745  004098  90D8               	bcf	status,0,c
  7746  00409A  360D               	rlcf	??_read_switch^0,f,c
  7747  00409C  90D8               	bcf	status,0,c
  7748  00409E  360D               	rlcf	??_read_switch^0,f,c
  7749  0040A0  C011  F00E         	movff	read_switch@rb2,??_read_switch+1
  7750  0040A4  90D8               	bcf	status,0,c
  7751  0040A6  360E               	rlcf	(??_read_switch+1)^0,f,c
  7752  0040A8  90D8               	bcf	status,0,c
  7753  0040AA  360E               	rlcf	(??_read_switch+1)^0,f,c
  7754  0040AC  5012               	movf	read_switch@rb3^0,w,c
  7755  0040AE  2412               	addwf	read_switch@rb3^0,w,c
  7756  0040B0  100E               	iorwf	(??_read_switch+1)^0,w,c
  7757  0040B2  100D               	iorwf	??_read_switch^0,w,c
  7758  0040B4  1013               	iorwf	read_switch@rb4^0,w,c
  7759  0040B6  0012               	return		;funcret
  7760  0040B8                     __end_of_read_switch:
  7761                           	opt callstack 0
  7762                           
  7763 ;; *************** function _adf4351_set_freq *****************
  7764 ;; Defined at:
  7765 ;;		line 54 in file "src/driver/adf4351.c"
  7766 ;; Parameters:    Size  Location     Type
  7767 ;;  ctx             2   43[BANK0 ] PTR struct adf4351_ctx
  7768 ;;		 -> g_adf4351(55), 
  7769 ;;  freq            4   45[BANK0 ] unsigned long 
  7770 ;; Auto vars:     Size  Location     Type
  7771 ;;		None
  7772 ;; Return value:  Size  Location     Type
  7773 ;;                  2   43[BANK0 ] int 
  7774 ;; Registers used:
  7775 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7776 ;; Tracked objects:
  7777 ;;		On entry : 0/0
  7778 ;;		On exit  : 0/0
  7779 ;;		Unchanged: 0/0
  7780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7781 ;;      Params:         0       6       0       0       0       0       0
  7782 ;;      Locals:         0       0       0       0       0       0       0
  7783 ;;      Temps:          0       2       0       0       0       0       0
  7784 ;;      Totals:         0       8       0       0       0       0       0
  7785 ;;Total ram usage:        8 bytes
  7786 ;; Hardware stack levels used:    1
  7787 ;; Hardware stack levels required when called:   11
  7788 ;; This function calls:
  7789 ;;		_adf4351_calc_counters
  7790 ;;		_adf4351_calc_rcnt_block
  7791 ;;		_adf4351_calc_vco_core_freq
  7792 ;;		_adf4351_setup
  7793 ;; This function is called by:
  7794 ;;		_setADF4351frequency
  7795 ;; This function uses a non-reentrant model
  7796 ;;
  7797                           
  7798                           	psect	text15
  7799  00569C                     __ptext15:
  7800                           	opt callstack 0
  7801  00569C                     _adf4351_set_freq:
  7802                           	opt callstack 18
  7803  00569C                     
  7804                           ;src/driver/adf4351.c: 54: int adf4351_set_freq(adf4351_ctx* ctx, u32 freq);src/driver/a
      +                          df4351.c: 55: {;src/driver/adf4351.c: 57:  if(!ctx->init) return -3;
  7805  00569C  C0AB  FFD9         	movff	adf4351_set_freq@ctx,fsr2l
  7806  0056A0  C0AC  FFDA         	movff	adf4351_set_freq@ctx+1,fsr2h
  7807  0056A4  50DE               	movf	postinc2,w,c
  7808  0056A6  10DE               	iorwf	postinc2,w,c
  7809  0056A8  A4D8               	btfss	status,2,c
  7810  0056AA  EF59  F02B         	goto	u10701
  7811  0056AE  EF5B  F02B         	goto	u10700
  7812  0056B2                     u10701:
  7813  0056B2  EF5D  F02B         	goto	l136
  7814  0056B6                     u10700:
  7815  0056B6  EF94  F02B         	goto	l137
  7816  0056BA                     l136:
  7817                           
  7818                           ;src/driver/adf4351.c: 58:     g_freq = freq;
  7819  0056BA  C0AD  F190         	movff	adf4351_set_freq@freq,_g_freq
  7820  0056BE  C0AE  F191         	movff	adf4351_set_freq@freq+1,_g_freq+1
  7821  0056C2  C0AF  F192         	movff	adf4351_set_freq@freq+2,_g_freq+2
  7822  0056C6  C0B0  F193         	movff	adf4351_set_freq@freq+3,_g_freq+3
  7823  0056CA                     
  7824                           ;src/driver/adf4351.c: 60:  adf4351_calc_vco_core_freq(ctx, freq);
  7825  0056CA  C0AB  F00D         	movff	adf4351_set_freq@ctx,adf4351_calc_vco_core_freq@ctx
  7826  0056CE  C0AC  F00E         	movff	adf4351_set_freq@ctx+1,adf4351_calc_vco_core_freq@ctx+1
  7827  0056D2  C0AD  F00F         	movff	adf4351_set_freq@freq,adf4351_calc_vco_core_freq@rf_out_freq
  7828  0056D6  C0AE  F010         	movff	adf4351_set_freq@freq+1,adf4351_calc_vco_core_freq@rf_out_freq+1
  7829  0056DA  C0AF  F011         	movff	adf4351_set_freq@freq+2,adf4351_calc_vco_core_freq@rf_out_freq+2
  7830  0056DE  C0B0  F012         	movff	adf4351_set_freq@freq+3,adf4351_calc_vco_core_freq@rf_out_freq+3
  7831  0056E2  EC5C  F020         	call	_adf4351_calc_vco_core_freq	;wreg free
  7832  0056E6                     
  7833                           ;src/driver/adf4351.c: 61:  adf4351_calc_rcnt_block(ctx);
  7834  0056E6  C0AB  F0A3         	movff	adf4351_set_freq@ctx,adf4351_calc_rcnt_block@ctx
  7835  0056EA  C0AC  F0A4         	movff	adf4351_set_freq@ctx+1,adf4351_calc_rcnt_block@ctx+1
  7836  0056EE  EC3B  F00C         	call	_adf4351_calc_rcnt_block	;wreg free
  7837  0056F2                     
  7838                           ;src/driver/adf4351.c: 62:  adf4351_calc_counters(ctx);
  7839  0056F2  C0AB  F022         	movff	adf4351_set_freq@ctx,adf4351_calc_counters@ctx
  7840  0056F6  C0AC  F023         	movff	adf4351_set_freq@ctx+1,adf4351_calc_counters@ctx+1
  7841  0056FA  EC3B  F013         	call	_adf4351_calc_counters	;wreg free
  7842  0056FE                     
  7843                           ;src/driver/adf4351.c: 64:  if(ctx->reg4.vcopd == 0) {
  7844  0056FE  0100               	movlb	0	; () banked
  7845  005700  EE20 F023          	lfsr	2,35
  7846  005704  51AB               	movf	adf4351_set_freq@ctx& (0+255),w,b
  7847  005706  26D9               	addwf	fsr2l,f,c
  7848  005708  51AC               	movf	(adf4351_set_freq@ctx+1)& (0+255),w,b
  7849  00570A  22DA               	addwfc	fsr2h,f,c
  7850  00570C  50DF               	movf	indf2,w,c
  7851  00570E  A4D8               	btfss	status,2,c
  7852  005710  EF8C  F02B         	goto	u10711
  7853  005714  EF8E  F02B         	goto	u10710
  7854  005718                     u10711:
  7855  005718  EF94  F02B         	goto	l137
  7856  00571C                     u10710:
  7857  00571C                     
  7858                           ; BSR set to: 0
  7859                           ;src/driver/adf4351.c: 65:   adf4351_setup(ctx);
  7860  00571C  C0AB  F025         	movff	adf4351_set_freq@ctx,adf4351_setup@ctx
  7861  005720  C0AC  F026         	movff	adf4351_set_freq@ctx+1,adf4351_setup@ctx+1
  7862  005724  ECA0  F030         	call	_adf4351_setup	;wreg free
  7863  005728                     l137:
  7864  005728  0012               	return		;funcret
  7865  00572A                     __end_of_adf4351_set_freq:
  7866                           	opt callstack 0
  7867                           
  7868 ;; *************** function _adf4351_calc_vco_core_freq *****************
  7869 ;; Defined at:
  7870 ;;		line 252 in file "src/driver/adf4351.c"
  7871 ;; Parameters:    Size  Location     Type
  7872 ;;  ctx             2   12[COMRAM] PTR struct adf4351_ctx
  7873 ;;		 -> g_adf4351(55), 
  7874 ;;  rf_out_freq     4   14[COMRAM] unsigned long 
  7875 ;; Auto vars:     Size  Location     Type
  7876 ;;  div             2   22[COMRAM] int 
  7877 ;; Return value:  Size  Location     Type
  7878 ;;                  2   12[COMRAM] int 
  7879 ;; Registers used:
  7880 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7881 ;; Tracked objects:
  7882 ;;		On entry : 0/0
  7883 ;;		On exit  : 0/0
  7884 ;;		Unchanged: 0/0
  7885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7886 ;;      Params:         6       0       0       0       0       0       0
  7887 ;;      Locals:         2       0       0       0       0       0       0
  7888 ;;      Temps:          4       0       0       0       0       0       0
  7889 ;;      Totals:        12       0       0       0       0       0       0
  7890 ;;Total ram usage:       12 bytes
  7891 ;; Hardware stack levels used:    1
  7892 ;; Hardware stack levels required when called:    2
  7893 ;; This function calls:
  7894 ;;		Nothing
  7895 ;; This function is called by:
  7896 ;;		_adf4351_set_freq
  7897 ;; This function uses a non-reentrant model
  7898 ;;
  7899                           
  7900                           	psect	text16
  7901  0040B8                     __ptext16:
  7902                           	opt callstack 0
  7903  0040B8                     _adf4351_calc_vco_core_freq:
  7904                           	opt callstack 26
  7905  0040B8                     
  7906                           ;src/driver/adf4351.c: 252: static int adf4351_calc_vco_core_freq(adf4351_ctx* ctx, u32 
      +                          rf_out_freq);src/driver/adf4351.c: 253: {;src/driver/adf4351.c: 254:  int div = 0;
  7907  0040B8  0E00               	movlw	0
  7908  0040BA  6E18               	movwf	(adf4351_calc_vco_core_freq@div+1)^0,c
  7909  0040BC  0E00               	movlw	0
  7910  0040BE  6E17               	movwf	adf4351_calc_vco_core_freq@div^0,c
  7911  0040C0                     
  7912                           ;src/driver/adf4351.c: 256:  if (rf_out_freq > 4400000)
  7913  0040C0  5012               	movf	(adf4351_calc_vco_core_freq@rf_out_freq+3)^0,w,c
  7914  0040C2  E10D               	bnz	u6370
  7915  0040C4  0E81               	movlw	129
  7916  0040C6  5C0F               	subwf	adf4351_calc_vco_core_freq@rf_out_freq^0,w,c
  7917  0040C8  0E23               	movlw	35
  7918  0040CA  5810               	subwfb	(adf4351_calc_vco_core_freq@rf_out_freq+1)^0,w,c
  7919  0040CC  0E43               	movlw	67
  7920  0040CE  5811               	subwfb	(adf4351_calc_vco_core_freq@rf_out_freq+2)^0,w,c
  7921  0040D0  A0D8               	btfss	status,0,c
  7922  0040D2  EF6D  F020         	goto	u6371
  7923  0040D6  EF6F  F020         	goto	u6370
  7924  0040DA                     u6371:
  7925  0040DA  EF78  F020         	goto	l6090
  7926  0040DE                     u6370:
  7927  0040DE  EFE9  F020         	goto	l192
  7928  0040E2                     l6088:
  7929                           
  7930                           ;src/driver/adf4351.c: 260:   rf_out_freq *= 2;
  7931  0040E2  90D8               	bcf	status,0,c
  7932  0040E4  360F               	rlcf	adf4351_calc_vco_core_freq@rf_out_freq^0,f,c
  7933  0040E6  3610               	rlcf	(adf4351_calc_vco_core_freq@rf_out_freq+1)^0,f,c
  7934  0040E8  3611               	rlcf	(adf4351_calc_vco_core_freq@rf_out_freq+2)^0,f,c
  7935  0040EA  3612               	rlcf	(adf4351_calc_vco_core_freq@rf_out_freq+3)^0,f,c
  7936                           
  7937                           ;src/driver/adf4351.c: 261:   div += 1;
  7938  0040EC  4A17               	infsnz	adf4351_calc_vco_core_freq@div^0,f,c
  7939  0040EE  2A18               	incf	(adf4351_calc_vco_core_freq@div+1)^0,f,c
  7940  0040F0                     l6090:
  7941                           
  7942                           ;src/driver/adf4351.c: 259:  while ((rf_out_freq <= 2200000) && (div <= 4)) {
  7943  0040F0  5012               	movf	(adf4351_calc_vco_core_freq@rf_out_freq+3)^0,w,c
  7944  0040F2  E10B               	bnz	u6381
  7945  0040F4  0EC1               	movlw	193
  7946  0040F6  5C0F               	subwf	adf4351_calc_vco_core_freq@rf_out_freq^0,w,c
  7947  0040F8  0E91               	movlw	145
  7948  0040FA  5810               	subwfb	(adf4351_calc_vco_core_freq@rf_out_freq+1)^0,w,c
  7949  0040FC  0E21               	movlw	33
  7950  0040FE  5811               	subwfb	(adf4351_calc_vco_core_freq@rf_out_freq+2)^0,w,c
  7951  004100  B0D8               	btfsc	status,0,c
  7952  004102  EF85  F020         	goto	u6381
  7953  004106  EF87  F020         	goto	u6380
  7954  00410A                     u6381:
  7955  00410A  EF95  F020         	goto	l6094
  7956  00410E                     u6380:
  7957  00410E  BE18               	btfsc	(adf4351_calc_vco_core_freq@div+1)^0,7,c
  7958  004110  EF93  F020         	goto	u6391
  7959  004114  5018               	movf	(adf4351_calc_vco_core_freq@div+1)^0,w,c
  7960  004116  E109               	bnz	u6390
  7961  004118  0E05               	movlw	5
  7962  00411A  5C17               	subwf	adf4351_calc_vco_core_freq@div^0,w,c
  7963  00411C  A0D8               	btfss	status,0,c
  7964  00411E  EF93  F020         	goto	u6391
  7965  004122  EF95  F020         	goto	u6390
  7966  004126                     u6391:
  7967  004126  EF71  F020         	goto	l6088
  7968  00412A                     u6390:
  7969  00412A                     l6094:
  7970                           
  7971                           ;src/driver/adf4351.c: 264:  if ((rf_out_freq <= 2200000) || (div > 4)) {
  7972  00412A  5012               	movf	(adf4351_calc_vco_core_freq@rf_out_freq+3)^0,w,c
  7973  00412C  E10D               	bnz	u6400
  7974  00412E  0EC1               	movlw	193
  7975  004130  5C0F               	subwf	adf4351_calc_vco_core_freq@rf_out_freq^0,w,c
  7976  004132  0E91               	movlw	145
  7977  004134  5810               	subwfb	(adf4351_calc_vco_core_freq@rf_out_freq+1)^0,w,c
  7978  004136  0E21               	movlw	33
  7979  004138  5811               	subwfb	(adf4351_calc_vco_core_freq@rf_out_freq+2)^0,w,c
  7980  00413A  A0D8               	btfss	status,0,c
  7981  00413C  EFA2  F020         	goto	u6401
  7982  004140  EFA4  F020         	goto	u6400
  7983  004144                     u6401:
  7984  004144  EFE9  F020         	goto	l192
  7985  004148                     u6400:
  7986  004148  BE18               	btfsc	(adf4351_calc_vco_core_freq@div+1)^0,7,c
  7987  00414A  EFB0  F020         	goto	u6411
  7988  00414E  5018               	movf	(adf4351_calc_vco_core_freq@div+1)^0,w,c
  7989  004150  E109               	bnz	u6410
  7990  004152  0E05               	movlw	5
  7991  004154  5C17               	subwf	adf4351_calc_vco_core_freq@div^0,w,c
  7992  004156  A0D8               	btfss	status,0,c
  7993  004158  EFB0  F020         	goto	u6411
  7994  00415C  EFB2  F020         	goto	u6410
  7995  004160                     u6411:
  7996  004160  EFB4  F020         	goto	l6098
  7997  004164                     u6410:
  7998  004164  EFE9  F020         	goto	l192
  7999  004168                     l6098:
  8000                           
  8001                           ;src/driver/adf4351.c: 268:  ctx->vco_freq = rf_out_freq;
  8002  004168  EE20 F033          	lfsr	2,51
  8003  00416C  500D               	movf	adf4351_calc_vco_core_freq@ctx^0,w,c
  8004  00416E  26D9               	addwf	fsr2l,f,c
  8005  004170  500E               	movf	(adf4351_calc_vco_core_freq@ctx+1)^0,w,c
  8006  004172  22DA               	addwfc	fsr2h,f,c
  8007  004174  C00F  FFDE         	movff	adf4351_calc_vco_core_freq@rf_out_freq,postinc2
  8008  004178  C010  FFDE         	movff	adf4351_calc_vco_core_freq@rf_out_freq+1,postinc2
  8009  00417C  C011  FFDE         	movff	adf4351_calc_vco_core_freq@rf_out_freq+2,postinc2
  8010  004180  C012  FFDE         	movff	adf4351_calc_vco_core_freq@rf_out_freq+3,postinc2
  8011  004184                     
  8012                           ;src/driver/adf4351.c: 269:     ctx->reg1.prescaler = (ctx->vco_freq>3600000)?1:0;
  8013  004184  EE20 F006          	lfsr	2,6
  8014  004188  500D               	movf	adf4351_calc_vco_core_freq@ctx^0,w,c
  8015  00418A  26D9               	addwf	fsr2l,f,c
  8016  00418C  500E               	movf	(adf4351_calc_vco_core_freq@ctx+1)^0,w,c
  8017  00418E  22DA               	addwfc	fsr2h,f,c
  8018  004190  EE10 F033          	lfsr	1,51
  8019  004194  500D               	movf	adf4351_calc_vco_core_freq@ctx^0,w,c
  8020  004196  26E1               	addwf	fsr1l,f,c
  8021  004198  500E               	movf	(adf4351_calc_vco_core_freq@ctx+1)^0,w,c
  8022  00419A  22E2               	addwfc	fsr1h,f,c
  8023  00419C  0E03               	movlw	3
  8024  00419E  50E3               	movf	plusw1,w,c
  8025  0041A0  E10B               	bnz	u6421
  8026  0041A2  0E81               	movlw	129
  8027  0041A4  5CE6               	subwf	postinc1,w,c
  8028  0041A6  0EEE               	movlw	238
  8029  0041A8  58E6               	subwfb	postinc1,w,c
  8030  0041AA  0E36               	movlw	54
  8031  0041AC  58E6               	subwfb	postinc1,w,c
  8032  0041AE  B0D8               	btfsc	status,0,c
  8033  0041B0  EFDC  F020         	goto	u6421
  8034  0041B4  EFDF  F020         	goto	u6420
  8035  0041B8                     u6421:
  8036  0041B8  0E01               	movlw	1
  8037  0041BA  EFE0  F020         	goto	u6430
  8038  0041BE                     u6420:
  8039  0041BE  0E00               	movlw	0
  8040  0041C0                     u6430:
  8041  0041C0  6EDF               	movwf	indf2,c
  8042  0041C2                     
  8043                           ;src/driver/adf4351.c: 270:  ctx->reg4.divsel = div;
  8044  0041C2  EE20 F021          	lfsr	2,33
  8045  0041C6  500D               	movf	adf4351_calc_vco_core_freq@ctx^0,w,c
  8046  0041C8  26D9               	addwf	fsr2l,f,c
  8047  0041CA  500E               	movf	(adf4351_calc_vco_core_freq@ctx+1)^0,w,c
  8048  0041CC  22DA               	addwfc	fsr2h,f,c
  8049  0041CE  C017  FFDF         	movff	adf4351_calc_vco_core_freq@div,indf2
  8050  0041D2                     l192:
  8051  0041D2  0012               	return		;funcret
  8052  0041D4                     __end_of_adf4351_calc_vco_core_freq:
  8053                           	opt callstack 0
  8054                           
  8055 ;; *************** function _adf4351_calc_rcnt_block *****************
  8056 ;; Defined at:
  8057 ;;		line 207 in file "src/driver/adf4351.c"
  8058 ;; Parameters:    Size  Location     Type
  8059 ;;  ctx             2   35[BANK0 ] PTR struct adf4351_ctx
  8060 ;;		 -> g_adf4351(55), 
  8061 ;; Auto vars:     Size  Location     Type
  8062 ;;  bscdiv          4   37[BANK0 ] unsigned long 
  8063 ;;  div             2   41[BANK0 ] int 
  8064 ;; Return value:  Size  Location     Type
  8065 ;;                  2   35[BANK0 ] int 
  8066 ;; Registers used:
  8067 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8068 ;; Tracked objects:
  8069 ;;		On entry : 0/0
  8070 ;;		On exit  : 0/0
  8071 ;;		Unchanged: 0/0
  8072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8073 ;;      Params:         0       2       0       0       0       0       0
  8074 ;;      Locals:         0       6       0       0       0       0       0
  8075 ;;      Temps:          0       0       0       0       0       0       0
  8076 ;;      Totals:         0       8       0       0       0       0       0
  8077 ;;Total ram usage:        8 bytes
  8078 ;; Hardware stack levels used:    1
  8079 ;; Hardware stack levels required when called:   10
  8080 ;; This function calls:
  8081 ;;		___awdiv
  8082 ;;		___lldiv
  8083 ;;		___llmod
  8084 ;;		_printf
  8085 ;; This function is called by:
  8086 ;;		_adf4351_set_freq
  8087 ;; This function uses a non-reentrant model
  8088 ;;
  8089                           
  8090                           	psect	text17
  8091  001876                     __ptext17:
  8092                           	opt callstack 0
  8093  001876                     _adf4351_calc_rcnt_block:
  8094                           	opt callstack 18
  8095  001876                     
  8096                           ;src/driver/adf4351.c: 207: static int adf4351_calc_rcnt_block(adf4351_ctx* ctx);src/dri
      +                          ver/adf4351.c: 208: {;src/driver/adf4351.c: 209:  int div;;src/driver/adf4351.c: 210:   
      +                            u32 bscdiv;;src/driver/adf4351.c: 214:  div = ctx->ref / ctx->pfd;
  8097  001876  0100               	movlb	0	; () banked
  8098  001878  EE20 F02B          	lfsr	2,43
  8099  00187C  51A3               	movf	adf4351_calc_rcnt_block@ctx& (0+255),w,b
  8100  00187E  26D9               	addwf	fsr2l,f,c
  8101  001880  51A4               	movf	(adf4351_calc_rcnt_block@ctx+1)& (0+255),w,b
  8102  001882  22DA               	addwfc	fsr2h,f,c
  8103  001884  CFDE F00D          	movff	postinc2,___lldiv@dividend
  8104  001888  CFDE F00E          	movff	postinc2,___lldiv@dividend+1
  8105  00188C  CFDE F00F          	movff	postinc2,___lldiv@dividend+2
  8106  001890  CFDE F010          	movff	postinc2,___lldiv@dividend+3
  8107  001894  EE20 F02F          	lfsr	2,47
  8108  001898  51A3               	movf	adf4351_calc_rcnt_block@ctx& (0+255),w,b
  8109  00189A  26D9               	addwf	fsr2l,f,c
  8110  00189C  51A4               	movf	(adf4351_calc_rcnt_block@ctx+1)& (0+255),w,b
  8111  00189E  22DA               	addwfc	fsr2h,f,c
  8112  0018A0  CFDE F011          	movff	postinc2,___lldiv@divisor
  8113  0018A4  CFDE F012          	movff	postinc2,___lldiv@divisor+1
  8114  0018A8  CFDE F013          	movff	postinc2,___lldiv@divisor+2
  8115  0018AC  CFDE F014          	movff	postinc2,___lldiv@divisor+3
  8116  0018B0  ECAF  F02A         	call	___lldiv	;wreg free
  8117  0018B4  C00D  F0A9         	movff	?___lldiv,adf4351_calc_rcnt_block@div
  8118  0018B8  C00E  F0AA         	movff	?___lldiv+1,adf4351_calc_rcnt_block@div+1
  8119                           
  8120                           ;src/driver/adf4351.c: 216:  if (ctx->ref % ctx->pfd) {
  8121  0018BC  0100               	movlb	0	; () banked
  8122  0018BE  EE20 F02B          	lfsr	2,43
  8123  0018C2  51A3               	movf	adf4351_calc_rcnt_block@ctx& (0+255),w,b
  8124  0018C4  26D9               	addwf	fsr2l,f,c
  8125  0018C6  51A4               	movf	(adf4351_calc_rcnt_block@ctx+1)& (0+255),w,b
  8126  0018C8  22DA               	addwfc	fsr2h,f,c
  8127  0018CA  CFDE F00D          	movff	postinc2,___llmod@dividend
  8128  0018CE  CFDE F00E          	movff	postinc2,___llmod@dividend+1
  8129  0018D2  CFDE F00F          	movff	postinc2,___llmod@dividend+2
  8130  0018D6  CFDE F010          	movff	postinc2,___llmod@dividend+3
  8131  0018DA  EE20 F02F          	lfsr	2,47
  8132  0018DE  51A3               	movf	adf4351_calc_rcnt_block@ctx& (0+255),w,b
  8133  0018E0  26D9               	addwf	fsr2l,f,c
  8134  0018E2  51A4               	movf	(adf4351_calc_rcnt_block@ctx+1)& (0+255),w,b
  8135  0018E4  22DA               	addwfc	fsr2h,f,c
  8136  0018E6  CFDE F011          	movff	postinc2,___llmod@divisor
  8137  0018EA  CFDE F012          	movff	postinc2,___llmod@divisor+1
  8138  0018EE  CFDE F013          	movff	postinc2,___llmod@divisor+2
  8139  0018F2  CFDE F014          	movff	postinc2,___llmod@divisor+3
  8140  0018F6  ECDA  F02B         	call	___llmod	;wreg free
  8141  0018FA  500D               	movf	?___llmod^0,w,c
  8142  0018FC  100E               	iorwf	(?___llmod+1)^0,w,c
  8143  0018FE  100F               	iorwf	(?___llmod+2)^0,w,c
  8144  001900  1010               	iorwf	(?___llmod+3)^0,w,c
  8145  001902  B4D8               	btfsc	status,2,c
  8146  001904  EF86  F00C         	goto	u10381
  8147  001908  EF88  F00C         	goto	u10380
  8148  00190C                     u10381:
  8149  00190C  EFAD  F00C         	goto	l8852
  8150  001910                     u10380:
  8151  001910                     
  8152                           ;src/driver/adf4351.c: 217:   printf("ADF4351: Cannot reach PFD of %i kHz with REF of %i
      +                           kHz (not divideable).\n", ctx->pfd, ctx->ref);
  8153  001910  0EF7               	movlw	low STR_3
  8154  001912  0100               	movlb	0	; () banked
  8155  001914  6F95               	movwf	printf@fmt& (0+255),b
  8156  001916  0E78               	movlw	high STR_3
  8157  001918  6F96               	movwf	(printf@fmt+1)& (0+255),b
  8158  00191A  EE20 F02F          	lfsr	2,47
  8159  00191E  51A3               	movf	adf4351_calc_rcnt_block@ctx& (0+255),w,b
  8160  001920  26D9               	addwf	fsr2l,f,c
  8161  001922  51A4               	movf	(adf4351_calc_rcnt_block@ctx+1)& (0+255),w,b
  8162  001924  22DA               	addwfc	fsr2h,f,c
  8163  001926  CFDE F097          	movff	postinc2,?_printf+2
  8164  00192A  CFDE F098          	movff	postinc2,?_printf+3
  8165  00192E  CFDE F099          	movff	postinc2,?_printf+4
  8166  001932  CFDE F09A          	movff	postinc2,?_printf+5
  8167  001936  EE20 F02B          	lfsr	2,43
  8168  00193A  51A3               	movf	adf4351_calc_rcnt_block@ctx& (0+255),w,b
  8169  00193C  26D9               	addwf	fsr2l,f,c
  8170  00193E  51A4               	movf	(adf4351_calc_rcnt_block@ctx+1)& (0+255),w,b
  8171  001940  22DA               	addwfc	fsr2h,f,c
  8172  001942  CFDE F09B          	movff	postinc2,?_printf+6
  8173  001946  CFDE F09C          	movff	postinc2,?_printf+7
  8174  00194A  CFDE F09D          	movff	postinc2,?_printf+8
  8175  00194E  CFDE F09E          	movff	postinc2,?_printf+9
  8176  001952  ECA7  F032         	call	_printf	;wreg free
  8177  001956  EFAC  F00D         	goto	l183
  8178  00195A                     l8852:
  8179                           
  8180                           ;src/driver/adf4351.c: 221:  if (div >= 1024) {
  8181  00195A  0100               	movlb	0	; () banked
  8182  00195C  BFAA               	btfsc	(adf4351_calc_rcnt_block@div+1)& (0+255),7,b
  8183  00195E  EFB8  F00C         	goto	u10391
  8184  001962  0E04               	movlw	4
  8185  001964  5DAA               	subwf	(adf4351_calc_rcnt_block@div+1)& (0+255),w,b
  8186  001966  A0D8               	btfss	status,0,c
  8187  001968  EFB8  F00C         	goto	u10391
  8188  00196C  EFBA  F00C         	goto	u10390
  8189  001970                     u10391:
  8190  001970  EFDE  F00C         	goto	l184
  8191  001974                     u10390:
  8192  001974                     
  8193                           ; BSR set to: 0
  8194                           ;src/driver/adf4351.c: 222:   printf("ADF4351: Cannot reach PFD of %i kHz with REF of %i
      +                           kHz (div too high).\n", ctx->pfd, ctx->ref);
  8195  001974  0E41               	movlw	low STR_4
  8196  001976  6F95               	movwf	printf@fmt& (0+255),b
  8197  001978  0E79               	movlw	high STR_4
  8198  00197A  6F96               	movwf	(printf@fmt+1)& (0+255),b
  8199  00197C  EE20 F02F          	lfsr	2,47
  8200  001980  51A3               	movf	adf4351_calc_rcnt_block@ctx& (0+255),w,b
  8201  001982  26D9               	addwf	fsr2l,f,c
  8202  001984  51A4               	movf	(adf4351_calc_rcnt_block@ctx+1)& (0+255),w,b
  8203  001986  22DA               	addwfc	fsr2h,f,c
  8204  001988  CFDE F097          	movff	postinc2,?_printf+2
  8205  00198C  CFDE F098          	movff	postinc2,?_printf+3
  8206  001990  CFDE F099          	movff	postinc2,?_printf+4
  8207  001994  CFDE F09A          	movff	postinc2,?_printf+5
  8208  001998  EE20 F02B          	lfsr	2,43
  8209  00199C  51A3               	movf	adf4351_calc_rcnt_block@ctx& (0+255),w,b
  8210  00199E  26D9               	addwf	fsr2l,f,c
  8211  0019A0  51A4               	movf	(adf4351_calc_rcnt_block@ctx+1)& (0+255),w,b
  8212  0019A2  22DA               	addwfc	fsr2h,f,c
  8213  0019A4  CFDE F09B          	movff	postinc2,?_printf+6
  8214  0019A8  CFDE F09C          	movff	postinc2,?_printf+7
  8215  0019AC  CFDE F09D          	movff	postinc2,?_printf+8
  8216  0019B0  CFDE F09E          	movff	postinc2,?_printf+9
  8217  0019B4  ECA7  F032         	call	_printf	;wreg free
  8218  0019B8  EFAC  F00D         	goto	l183
  8219  0019BC                     l184:
  8220                           
  8221                           ; BSR set to: 0
  8222                           ;src/driver/adf4351.c: 227:  if((div%2)==0) {
  8223  0019BC  B1A9               	btfsc	adf4351_calc_rcnt_block@div& (0+255),0,b
  8224  0019BE  EFE3  F00C         	goto	u10401
  8225  0019C2  EFE5  F00C         	goto	u10400
  8226  0019C6                     u10401:
  8227  0019C6  EF04  F00D         	goto	l8862
  8228  0019CA                     u10400:
  8229  0019CA                     
  8230                           ; BSR set to: 0
  8231                           ;src/driver/adf4351.c: 228:   ctx->reg2.rcnt = div/2;
  8232  0019CA  C0A9  F00D         	movff	adf4351_calc_rcnt_block@div,___awdiv@dividend
  8233  0019CE  C0AA  F00E         	movff	adf4351_calc_rcnt_block@div+1,___awdiv@dividend+1
  8234  0019D2  0E00               	movlw	0
  8235  0019D4  6E10               	movwf	(___awdiv@divisor+1)^0,c
  8236  0019D6  0E02               	movlw	2
  8237  0019D8  6E0F               	movwf	___awdiv@divisor^0,c
  8238  0019DA  EC30  F028         	call	___awdiv	;wreg free
  8239  0019DE  0100               	movlb	0	; () banked
  8240  0019E0  EE20 F00F          	lfsr	2,15
  8241  0019E4  51A3               	movf	adf4351_calc_rcnt_block@ctx& (0+255),w,b
  8242  0019E6  26D9               	addwf	fsr2l,f,c
  8243  0019E8  51A4               	movf	(adf4351_calc_rcnt_block@ctx+1)& (0+255),w,b
  8244  0019EA  22DA               	addwfc	fsr2h,f,c
  8245  0019EC  C00D  FFDE         	movff	?___awdiv,postinc2
  8246  0019F0  C00E  FFDD         	movff	?___awdiv+1,postdec2
  8247  0019F4                     
  8248                           ; BSR set to: 0
  8249                           ;src/driver/adf4351.c: 229:   ctx->reg2.refdiv = 1;
  8250  0019F4  EE20 F00E          	lfsr	2,14
  8251  0019F8  51A3               	movf	adf4351_calc_rcnt_block@ctx& (0+255),w,b
  8252  0019FA  26D9               	addwf	fsr2l,f,c
  8253  0019FC  51A4               	movf	(adf4351_calc_rcnt_block@ctx+1)& (0+255),w,b
  8254  0019FE  22DA               	addwfc	fsr2h,f,c
  8255  001A00  0E01               	movlw	1
  8256  001A02  6EDF               	movwf	indf2,c
  8257                           
  8258                           ;src/driver/adf4351.c: 230:  } else {
  8259  001A04  EF16  F00D         	goto	l186
  8260  001A08                     l8862:
  8261                           
  8262                           ; BSR set to: 0
  8263                           ;src/driver/adf4351.c: 231:   ctx->reg2.rcnt = div;
  8264  001A08  EE20 F00F          	lfsr	2,15
  8265  001A0C  51A3               	movf	adf4351_calc_rcnt_block@ctx& (0+255),w,b
  8266  001A0E  26D9               	addwf	fsr2l,f,c
  8267  001A10  51A4               	movf	(adf4351_calc_rcnt_block@ctx+1)& (0+255),w,b
  8268  001A12  22DA               	addwfc	fsr2h,f,c
  8269  001A14  C0A9  FFDE         	movff	adf4351_calc_rcnt_block@div,postinc2
  8270  001A18  C0AA  FFDD         	movff	adf4351_calc_rcnt_block@div+1,postdec2
  8271                           
  8272                           ;src/driver/adf4351.c: 232:   ctx->reg2.refdiv = 0;
  8273  001A1C  EE20 F00E          	lfsr	2,14
  8274  001A20  51A3               	movf	adf4351_calc_rcnt_block@ctx& (0+255),w,b
  8275  001A22  26D9               	addwf	fsr2l,f,c
  8276  001A24  51A4               	movf	(adf4351_calc_rcnt_block@ctx+1)& (0+255),w,b
  8277  001A26  22DA               	addwfc	fsr2h,f,c
  8278  001A28  0E00               	movlw	0
  8279  001A2A  6EDF               	movwf	indf2,c
  8280  001A2C                     l186:
  8281                           
  8282                           ; BSR set to: 0
  8283                           ;src/driver/adf4351.c: 234:  ctx->reg3.bscm = 0;
  8284  001A2C  EE20 F019          	lfsr	2,25
  8285  001A30  51A3               	movf	adf4351_calc_rcnt_block@ctx& (0+255),w,b
  8286  001A32  26D9               	addwf	fsr2l,f,c
  8287  001A34  51A4               	movf	(adf4351_calc_rcnt_block@ctx+1)& (0+255),w,b
  8288  001A36  22DA               	addwfc	fsr2h,f,c
  8289  001A38  0E00               	movlw	0
  8290  001A3A  6EDF               	movwf	indf2,c
  8291  001A3C                     
  8292                           ; BSR set to: 0
  8293                           ;src/driver/adf4351.c: 235:  bscdiv = ((ctx->pfd-1) / 125) + 1;
  8294  001A3C  EE20 F02F          	lfsr	2,47
  8295  001A40  51A3               	movf	adf4351_calc_rcnt_block@ctx& (0+255),w,b
  8296  001A42  26D9               	addwf	fsr2l,f,c
  8297  001A44  51A4               	movf	(adf4351_calc_rcnt_block@ctx+1)& (0+255),w,b
  8298  001A46  22DA               	addwfc	fsr2h,f,c
  8299  001A48  0EFF               	movlw	255
  8300  001A4A  24DE               	addwf	postinc2,w,c
  8301  001A4C  6E0D               	movwf	___lldiv@dividend^0,c
  8302  001A4E  0EFF               	movlw	255
  8303  001A50  20DE               	addwfc	postinc2,w,c
  8304  001A52  6E0E               	movwf	(___lldiv@dividend+1)^0,c
  8305  001A54  0EFF               	movlw	255
  8306  001A56  20DE               	addwfc	postinc2,w,c
  8307  001A58  6E0F               	movwf	(___lldiv@dividend+2)^0,c
  8308  001A5A  0EFF               	movlw	255
  8309  001A5C  20DE               	addwfc	postinc2,w,c
  8310  001A5E  6E10               	movwf	(___lldiv@dividend+3)^0,c
  8311  001A60  0E7D               	movlw	125
  8312  001A62  6E11               	movwf	___lldiv@divisor^0,c
  8313  001A64  0E00               	movlw	0
  8314  001A66  6E12               	movwf	(___lldiv@divisor+1)^0,c
  8315  001A68  0E00               	movlw	0
  8316  001A6A  6E13               	movwf	(___lldiv@divisor+2)^0,c
  8317  001A6C  0E00               	movlw	0
  8318  001A6E  6E14               	movwf	(___lldiv@divisor+3)^0,c
  8319  001A70  ECAF  F02A         	call	___lldiv	;wreg free
  8320  001A74  0E01               	movlw	1
  8321  001A76  240D               	addwf	?___lldiv^0,w,c
  8322  001A78  0100               	movlb	0	; () banked
  8323  001A7A  6FA5               	movwf	adf4351_calc_rcnt_block@bscdiv& (0+255),b
  8324  001A7C  0E00               	movlw	0
  8325  001A7E  200E               	addwfc	(?___lldiv+1)^0,w,c
  8326  001A80  6FA6               	movwf	(adf4351_calc_rcnt_block@bscdiv+1)& (0+255),b
  8327  001A82  0E00               	movlw	0
  8328  001A84  200F               	addwfc	(?___lldiv+2)^0,w,c
  8329  001A86  6FA7               	movwf	(adf4351_calc_rcnt_block@bscdiv+2)& (0+255),b
  8330  001A88  0E00               	movlw	0
  8331  001A8A  2010               	addwfc	(?___lldiv+3)^0,w,c
  8332  001A8C  6FA8               	movwf	(adf4351_calc_rcnt_block@bscdiv+3)& (0+255),b
  8333  001A8E                     
  8334                           ; BSR set to: 0
  8335                           ;src/driver/adf4351.c: 237:  if (bscdiv > 255) {
  8336  001A8E  51A8               	movf	(adf4351_calc_rcnt_block@bscdiv+3)& (0+255),w,b
  8337  001A90  11A7               	iorwf	(adf4351_calc_rcnt_block@bscdiv+2)& (0+255),w,b
  8338  001A92  E108               	bnz	u10410
  8339  001A94  05A6               	decf	(adf4351_calc_rcnt_block@bscdiv+1)& (0+255),w,b
  8340  001A96  A0D8               	btfss	status,0,c
  8341  001A98  EF50  F00D         	goto	u10411
  8342  001A9C  EF52  F00D         	goto	u10410
  8343  001AA0                     u10411:
  8344  001AA0  EF83  F00D         	goto	l8872
  8345  001AA4                     u10410:
  8346  001AA4                     
  8347                           ; BSR set to: 0
  8348                           ;src/driver/adf4351.c: 238:   ctx->reg3.bscm = 1;
  8349  001AA4  EE20 F019          	lfsr	2,25
  8350  001AA8  51A3               	movf	adf4351_calc_rcnt_block@ctx& (0+255),w,b
  8351  001AAA  26D9               	addwf	fsr2l,f,c
  8352  001AAC  51A4               	movf	(adf4351_calc_rcnt_block@ctx+1)& (0+255),w,b
  8353  001AAE  22DA               	addwfc	fsr2h,f,c
  8354  001AB0  0E01               	movlw	1
  8355  001AB2  6EDF               	movwf	indf2,c
  8356  001AB4                     
  8357                           ; BSR set to: 0
  8358                           ;src/driver/adf4351.c: 239:   bscdiv = ((ctx->pfd-1) / 250) + 1;
  8359  001AB4  EE20 F02F          	lfsr	2,47
  8360  001AB8  51A3               	movf	adf4351_calc_rcnt_block@ctx& (0+255),w,b
  8361  001ABA  26D9               	addwf	fsr2l,f,c
  8362  001ABC  51A4               	movf	(adf4351_calc_rcnt_block@ctx+1)& (0+255),w,b
  8363  001ABE  22DA               	addwfc	fsr2h,f,c
  8364  001AC0  0EFF               	movlw	255
  8365  001AC2  24DE               	addwf	postinc2,w,c
  8366  001AC4  6E0D               	movwf	___lldiv@dividend^0,c
  8367  001AC6  0EFF               	movlw	255
  8368  001AC8  20DE               	addwfc	postinc2,w,c
  8369  001ACA  6E0E               	movwf	(___lldiv@dividend+1)^0,c
  8370  001ACC  0EFF               	movlw	255
  8371  001ACE  20DE               	addwfc	postinc2,w,c
  8372  001AD0  6E0F               	movwf	(___lldiv@dividend+2)^0,c
  8373  001AD2  0EFF               	movlw	255
  8374  001AD4  20DE               	addwfc	postinc2,w,c
  8375  001AD6  6E10               	movwf	(___lldiv@dividend+3)^0,c
  8376  001AD8  0EFA               	movlw	250
  8377  001ADA  6E11               	movwf	___lldiv@divisor^0,c
  8378  001ADC  0E00               	movlw	0
  8379  001ADE  6E12               	movwf	(___lldiv@divisor+1)^0,c
  8380  001AE0  0E00               	movlw	0
  8381  001AE2  6E13               	movwf	(___lldiv@divisor+2)^0,c
  8382  001AE4  0E00               	movlw	0
  8383  001AE6  6E14               	movwf	(___lldiv@divisor+3)^0,c
  8384  001AE8  ECAF  F02A         	call	___lldiv	;wreg free
  8385  001AEC  0E01               	movlw	1
  8386  001AEE  240D               	addwf	?___lldiv^0,w,c
  8387  001AF0  0100               	movlb	0	; () banked
  8388  001AF2  6FA5               	movwf	adf4351_calc_rcnt_block@bscdiv& (0+255),b
  8389  001AF4  0E00               	movlw	0
  8390  001AF6  200E               	addwfc	(?___lldiv+1)^0,w,c
  8391  001AF8  6FA6               	movwf	(adf4351_calc_rcnt_block@bscdiv+1)& (0+255),b
  8392  001AFA  0E00               	movlw	0
  8393  001AFC  200F               	addwfc	(?___lldiv+2)^0,w,c
  8394  001AFE  6FA7               	movwf	(adf4351_calc_rcnt_block@bscdiv+2)& (0+255),b
  8395  001B00  0E00               	movlw	0
  8396  001B02  2010               	addwfc	(?___lldiv+3)^0,w,c
  8397  001B04  6FA8               	movwf	(adf4351_calc_rcnt_block@bscdiv+3)& (0+255),b
  8398  001B06                     l8872:
  8399                           
  8400                           ; BSR set to: 0
  8401                           ;src/driver/adf4351.c: 242:  if (bscdiv > 255) {
  8402  001B06  51A8               	movf	(adf4351_calc_rcnt_block@bscdiv+3)& (0+255),w,b
  8403  001B08  11A7               	iorwf	(adf4351_calc_rcnt_block@bscdiv+2)& (0+255),w,b
  8404  001B0A  E108               	bnz	u10420
  8405  001B0C  05A6               	decf	(adf4351_calc_rcnt_block@bscdiv+1)& (0+255),w,b
  8406  001B0E  A0D8               	btfss	status,0,c
  8407  001B10  EF8C  F00D         	goto	u10421
  8408  001B14  EF8E  F00D         	goto	u10420
  8409  001B18                     u10421:
  8410  001B18  EFA4  F00D         	goto	l8878
  8411  001B1C                     u10420:
  8412  001B1C                     
  8413                           ; BSR set to: 0
  8414                           ;src/driver/adf4351.c: 243:   printf("ADF4351: Cannot use pfd of %lu kHz (bscdiv too hig
      +                          h).\n", ctx->pfd);
  8415  001B1C  0ECE               	movlw	low STR_5
  8416  001B1E  6F95               	movwf	printf@fmt& (0+255),b
  8417  001B20  0E79               	movlw	high STR_5
  8418  001B22  6F96               	movwf	(printf@fmt+1)& (0+255),b
  8419  001B24  EE20 F02F          	lfsr	2,47
  8420  001B28  51A3               	movf	adf4351_calc_rcnt_block@ctx& (0+255),w,b
  8421  001B2A  26D9               	addwf	fsr2l,f,c
  8422  001B2C  51A4               	movf	(adf4351_calc_rcnt_block@ctx+1)& (0+255),w,b
  8423  001B2E  22DA               	addwfc	fsr2h,f,c
  8424  001B30  CFDE F097          	movff	postinc2,?_printf+2
  8425  001B34  CFDE F098          	movff	postinc2,?_printf+3
  8426  001B38  CFDE F099          	movff	postinc2,?_printf+4
  8427  001B3C  CFDE F09A          	movff	postinc2,?_printf+5
  8428  001B40  ECA7  F032         	call	_printf	;wreg free
  8429  001B44  EFAC  F00D         	goto	l183
  8430  001B48                     l8878:
  8431                           
  8432                           ; BSR set to: 0
  8433                           ;src/driver/adf4351.c: 247:     ctx->reg4.bsclkdiv = bscdiv;
  8434  001B48  EE20 F022          	lfsr	2,34
  8435  001B4C  51A3               	movf	adf4351_calc_rcnt_block@ctx& (0+255),w,b
  8436  001B4E  26D9               	addwf	fsr2l,f,c
  8437  001B50  51A4               	movf	(adf4351_calc_rcnt_block@ctx+1)& (0+255),w,b
  8438  001B52  22DA               	addwfc	fsr2h,f,c
  8439  001B54  C0A5  FFDF         	movff	adf4351_calc_rcnt_block@bscdiv,indf2
  8440  001B58                     l183:
  8441  001B58  0012               	return		;funcret
  8442  001B5A                     __end_of_adf4351_calc_rcnt_block:
  8443                           	opt callstack 0
  8444                           
  8445 ;; *************** function ___awdiv *****************
  8446 ;; Defined at:
  8447 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
  8448 ;; Parameters:    Size  Location     Type
  8449 ;;  dividend        2   12[COMRAM] int 
  8450 ;;  divisor         2   14[COMRAM] int 
  8451 ;; Auto vars:     Size  Location     Type
  8452 ;;  quotient        2   18[COMRAM] int 
  8453 ;;  sign            1   17[COMRAM] unsigned char 
  8454 ;;  counter         1   16[COMRAM] unsigned char 
  8455 ;; Return value:  Size  Location     Type
  8456 ;;                  2   12[COMRAM] int 
  8457 ;; Registers used:
  8458 ;;		wreg, status,2, status,0
  8459 ;; Tracked objects:
  8460 ;;		On entry : 0/0
  8461 ;;		On exit  : 0/0
  8462 ;;		Unchanged: 0/0
  8463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8464 ;;      Params:         4       0       0       0       0       0       0
  8465 ;;      Locals:         4       0       0       0       0       0       0
  8466 ;;      Temps:          0       0       0       0       0       0       0
  8467 ;;      Totals:         8       0       0       0       0       0       0
  8468 ;;Total ram usage:        8 bytes
  8469 ;; Hardware stack levels used:    1
  8470 ;; Hardware stack levels required when called:    2
  8471 ;; This function calls:
  8472 ;;		Nothing
  8473 ;; This function is called by:
  8474 ;;		_adf4351_calc_rcnt_block
  8475 ;;		_itoa
  8476 ;; This function uses a non-reentrant model
  8477 ;;
  8478                           
  8479                           	psect	text18
  8480  005060                     __ptext18:
  8481                           	opt callstack 0
  8482  005060                     ___awdiv:
  8483                           	opt callstack 26
  8484  005060  0E00               	movlw	0
  8485  005062  6E12               	movwf	___awdiv@sign^0,c
  8486  005064  BE10               	btfsc	(___awdiv@divisor+1)^0,7,c
  8487  005066  EF39  F028         	goto	u10320
  8488  00506A  EF37  F028         	goto	u10321
  8489  00506E                     u10321:
  8490  00506E  EF3F  F028         	goto	l8792
  8491  005072                     u10320:
  8492  005072  6C0F               	negf	___awdiv@divisor^0,c
  8493  005074  1E10               	comf	(___awdiv@divisor+1)^0,f,c
  8494  005076  B0D8               	btfsc	status,0,c
  8495  005078  2A10               	incf	(___awdiv@divisor+1)^0,f,c
  8496  00507A  0E01               	movlw	1
  8497  00507C  6E12               	movwf	___awdiv@sign^0,c
  8498  00507E                     l8792:
  8499  00507E  BE0E               	btfsc	(___awdiv@dividend+1)^0,7,c
  8500  005080  EF46  F028         	goto	u10330
  8501  005084  EF44  F028         	goto	u10331
  8502  005088                     u10331:
  8503  005088  EF4C  F028         	goto	l8798
  8504  00508C                     u10330:
  8505  00508C  6C0D               	negf	___awdiv@dividend^0,c
  8506  00508E  1E0E               	comf	(___awdiv@dividend+1)^0,f,c
  8507  005090  B0D8               	btfsc	status,0,c
  8508  005092  2A0E               	incf	(___awdiv@dividend+1)^0,f,c
  8509  005094  0E01               	movlw	1
  8510  005096  1A12               	xorwf	___awdiv@sign^0,f,c
  8511  005098                     l8798:
  8512  005098  0E00               	movlw	0
  8513  00509A  6E14               	movwf	(___awdiv@quotient+1)^0,c
  8514  00509C  0E00               	movlw	0
  8515  00509E  6E13               	movwf	___awdiv@quotient^0,c
  8516  0050A0  500F               	movf	___awdiv@divisor^0,w,c
  8517  0050A2  1010               	iorwf	(___awdiv@divisor+1)^0,w,c
  8518  0050A4  B4D8               	btfsc	status,2,c
  8519  0050A6  EF57  F028         	goto	u10341
  8520  0050AA  EF59  F028         	goto	u10340
  8521  0050AE                     u10341:
  8522  0050AE  EF81  F028         	goto	l8820
  8523  0050B2                     u10340:
  8524  0050B2  0E01               	movlw	1
  8525  0050B4  6E11               	movwf	___awdiv@counter^0,c
  8526  0050B6  EF61  F028         	goto	l8806
  8527  0050BA                     l8804:
  8528  0050BA  90D8               	bcf	status,0,c
  8529  0050BC  360F               	rlcf	___awdiv@divisor^0,f,c
  8530  0050BE  3610               	rlcf	(___awdiv@divisor+1)^0,f,c
  8531  0050C0  2A11               	incf	___awdiv@counter^0,f,c
  8532  0050C2                     l8806:
  8533  0050C2  AE10               	btfss	(___awdiv@divisor+1)^0,7,c
  8534  0050C4  EF66  F028         	goto	u10351
  8535  0050C8  EF68  F028         	goto	u10350
  8536  0050CC                     u10351:
  8537  0050CC  EF5D  F028         	goto	l8804
  8538  0050D0                     u10350:
  8539  0050D0                     l8808:
  8540  0050D0  90D8               	bcf	status,0,c
  8541  0050D2  3613               	rlcf	___awdiv@quotient^0,f,c
  8542  0050D4  3614               	rlcf	(___awdiv@quotient+1)^0,f,c
  8543  0050D6  500F               	movf	___awdiv@divisor^0,w,c
  8544  0050D8  5C0D               	subwf	___awdiv@dividend^0,w,c
  8545  0050DA  5010               	movf	(___awdiv@divisor+1)^0,w,c
  8546  0050DC  580E               	subwfb	(___awdiv@dividend+1)^0,w,c
  8547  0050DE  A0D8               	btfss	status,0,c
  8548  0050E0  EF74  F028         	goto	u10361
  8549  0050E4  EF76  F028         	goto	u10360
  8550  0050E8                     u10361:
  8551  0050E8  EF7B  F028         	goto	l8816
  8552  0050EC                     u10360:
  8553  0050EC  500F               	movf	___awdiv@divisor^0,w,c
  8554  0050EE  5E0D               	subwf	___awdiv@dividend^0,f,c
  8555  0050F0  5010               	movf	(___awdiv@divisor+1)^0,w,c
  8556  0050F2  5A0E               	subwfb	(___awdiv@dividend+1)^0,f,c
  8557  0050F4  8013               	bsf	___awdiv@quotient^0,0,c
  8558  0050F6                     l8816:
  8559  0050F6  90D8               	bcf	status,0,c
  8560  0050F8  3210               	rrcf	(___awdiv@divisor+1)^0,f,c
  8561  0050FA  320F               	rrcf	___awdiv@divisor^0,f,c
  8562  0050FC  2E11               	decfsz	___awdiv@counter^0,f,c
  8563  0050FE  EF68  F028         	goto	l8808
  8564  005102                     l8820:
  8565  005102  5012               	movf	___awdiv@sign^0,w,c
  8566  005104  B4D8               	btfsc	status,2,c
  8567  005106  EF87  F028         	goto	u10371
  8568  00510A  EF89  F028         	goto	u10370
  8569  00510E                     u10371:
  8570  00510E  EF8D  F028         	goto	l8824
  8571  005112                     u10370:
  8572  005112  6C13               	negf	___awdiv@quotient^0,c
  8573  005114  1E14               	comf	(___awdiv@quotient+1)^0,f,c
  8574  005116  B0D8               	btfsc	status,0,c
  8575  005118  2A14               	incf	(___awdiv@quotient+1)^0,f,c
  8576  00511A                     l8824:
  8577  00511A  C013  F00D         	movff	___awdiv@quotient,?___awdiv
  8578  00511E  C014  F00E         	movff	___awdiv@quotient+1,?___awdiv+1
  8579  005122  0012               	return		;funcret
  8580  005124                     __end_of___awdiv:
  8581                           	opt callstack 0
  8582                           
  8583 ;; *************** function _adf4351_calc_counters *****************
  8584 ;; Defined at:
  8585 ;;		line 168 in file "src/driver/adf4351.c"
  8586 ;; Parameters:    Size  Location     Type
  8587 ;;  ctx             2   33[COMRAM] PTR struct adf4351_ctx
  8588 ;;		 -> g_adf4351(55), 
  8589 ;; Auto vars:     Size  Location     Type
  8590 ;;  div             4   39[COMRAM] unsigned long 
  8591 ;;  frac            4   51[COMRAM] unsigned long 
  8592 ;;  mod             4   47[COMRAM] unsigned long 
  8593 ;;  integer         4   43[COMRAM] unsigned long 
  8594 ;;  remainder       4   35[COMRAM] unsigned long 
  8595 ;; Return value:  Size  Location     Type
  8596 ;;                  2   33[COMRAM] int 
  8597 ;; Registers used:
  8598 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8599 ;; Tracked objects:
  8600 ;;		On entry : 0/0
  8601 ;;		On exit  : 0/0
  8602 ;;		Unchanged: 0/0
  8603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8604 ;;      Params:         2       0       0       0       0       0       0
  8605 ;;      Locals:        20       0       0       0       0       0       0
  8606 ;;      Temps:          0       0       0       0       0       0       0
  8607 ;;      Totals:        22       0       0       0       0       0       0
  8608 ;;Total ram usage:       22 bytes
  8609 ;; Hardware stack levels used:    1
  8610 ;; Hardware stack levels required when called:    4
  8611 ;; This function calls:
  8612 ;;		___lldiv
  8613 ;;		___llmod
  8614 ;;		_gcd
  8615 ;; This function is called by:
  8616 ;;		_adf4351_set_freq
  8617 ;; This function uses a non-reentrant model
  8618 ;;
  8619                           
  8620                           	psect	text19
  8621  002676                     __ptext19:
  8622                           	opt callstack 0
  8623  002676                     _adf4351_calc_counters:
  8624                           	opt callstack 24
  8625  002676                     
  8626                           ;src/driver/adf4351.c: 168: static int adf4351_calc_counters(adf4351_ctx* ctx);src/drive
      +                          r/adf4351.c: 169: {;src/driver/adf4351.c: 170:  u32 integer, frac, mod, remainder;;src/d
      +                          river/adf4351.c: 173:  integer = ctx->vco_freq / ctx->pfd;
  8627  002676  EE20 F033          	lfsr	2,51
  8628  00267A  5022               	movf	adf4351_calc_counters@ctx^0,w,c
  8629  00267C  26D9               	addwf	fsr2l,f,c
  8630  00267E  5023               	movf	(adf4351_calc_counters@ctx+1)^0,w,c
  8631  002680  22DA               	addwfc	fsr2h,f,c
  8632  002682  CFDE F00D          	movff	postinc2,___lldiv@dividend
  8633  002686  CFDE F00E          	movff	postinc2,___lldiv@dividend+1
  8634  00268A  CFDE F00F          	movff	postinc2,___lldiv@dividend+2
  8635  00268E  CFDE F010          	movff	postinc2,___lldiv@dividend+3
  8636  002692  EE20 F02F          	lfsr	2,47
  8637  002696  5022               	movf	adf4351_calc_counters@ctx^0,w,c
  8638  002698  26D9               	addwf	fsr2l,f,c
  8639  00269A  5023               	movf	(adf4351_calc_counters@ctx+1)^0,w,c
  8640  00269C  22DA               	addwfc	fsr2h,f,c
  8641  00269E  CFDE F011          	movff	postinc2,___lldiv@divisor
  8642  0026A2  CFDE F012          	movff	postinc2,___lldiv@divisor+1
  8643  0026A6  CFDE F013          	movff	postinc2,___lldiv@divisor+2
  8644  0026AA  CFDE F014          	movff	postinc2,___lldiv@divisor+3
  8645  0026AE  ECAF  F02A         	call	___lldiv	;wreg free
  8646  0026B2  C00D  F02C         	movff	?___lldiv,adf4351_calc_counters@integer
  8647  0026B6  C00E  F02D         	movff	?___lldiv+1,adf4351_calc_counters@integer+1
  8648  0026BA  C00F  F02E         	movff	?___lldiv+2,adf4351_calc_counters@integer+2
  8649  0026BE  C010  F02F         	movff	?___lldiv+3,adf4351_calc_counters@integer+3
  8650                           
  8651                           ;src/driver/adf4351.c: 174:  remainder = ctx->vco_freq % ctx->pfd;
  8652  0026C2  EE20 F033          	lfsr	2,51
  8653  0026C6  5022               	movf	adf4351_calc_counters@ctx^0,w,c
  8654  0026C8  26D9               	addwf	fsr2l,f,c
  8655  0026CA  5023               	movf	(adf4351_calc_counters@ctx+1)^0,w,c
  8656  0026CC  22DA               	addwfc	fsr2h,f,c
  8657  0026CE  CFDE F00D          	movff	postinc2,___llmod@dividend
  8658  0026D2  CFDE F00E          	movff	postinc2,___llmod@dividend+1
  8659  0026D6  CFDE F00F          	movff	postinc2,___llmod@dividend+2
  8660  0026DA  CFDE F010          	movff	postinc2,___llmod@dividend+3
  8661  0026DE  EE20 F02F          	lfsr	2,47
  8662  0026E2  5022               	movf	adf4351_calc_counters@ctx^0,w,c
  8663  0026E4  26D9               	addwf	fsr2l,f,c
  8664  0026E6  5023               	movf	(adf4351_calc_counters@ctx+1)^0,w,c
  8665  0026E8  22DA               	addwfc	fsr2h,f,c
  8666  0026EA  CFDE F011          	movff	postinc2,___llmod@divisor
  8667  0026EE  CFDE F012          	movff	postinc2,___llmod@divisor+1
  8668  0026F2  CFDE F013          	movff	postinc2,___llmod@divisor+2
  8669  0026F6  CFDE F014          	movff	postinc2,___llmod@divisor+3
  8670  0026FA  ECDA  F02B         	call	___llmod	;wreg free
  8671  0026FE  C00D  F024         	movff	?___llmod,adf4351_calc_counters@remainder
  8672  002702  C00E  F025         	movff	?___llmod+1,adf4351_calc_counters@remainder+1
  8673  002706  C00F  F026         	movff	?___llmod+2,adf4351_calc_counters@remainder+2
  8674  00270A  C010  F027         	movff	?___llmod+3,adf4351_calc_counters@remainder+3
  8675  00270E                     
  8676                           ;src/driver/adf4351.c: 177:  if ((integer < 23) || (integer > 65535))
  8677  00270E  502F               	movf	(adf4351_calc_counters@integer+3)^0,w,c
  8678  002710  102E               	iorwf	(adf4351_calc_counters@integer+2)^0,w,c
  8679  002712  102D               	iorwf	(adf4351_calc_counters@integer+1)^0,w,c
  8680  002714  E109               	bnz	u10430
  8681  002716  0E17               	movlw	23
  8682  002718  5C2C               	subwf	adf4351_calc_counters@integer^0,w,c
  8683  00271A  A0D8               	btfss	status,0,c
  8684  00271C  EF92  F013         	goto	u10431
  8685  002720  EF94  F013         	goto	u10430
  8686  002724                     u10431:
  8687  002724  EF6B  F014         	goto	l174
  8688  002728                     u10430:
  8689  002728  502F               	movf	(adf4351_calc_counters@integer+3)^0,w,c
  8690  00272A  E108               	bnz	u10440
  8691  00272C  042E               	decf	(adf4351_calc_counters@integer+2)^0,w,c
  8692  00272E  A0D8               	btfss	status,0,c
  8693  002730  EF9C  F013         	goto	u10441
  8694  002734  EF9E  F013         	goto	u10440
  8695  002738                     u10441:
  8696  002738  EFA0  F013         	goto	l171
  8697  00273C                     u10440:
  8698  00273C  EF6B  F014         	goto	l174
  8699  002740                     l171:
  8700                           
  8701                           ;src/driver/adf4351.c: 180:  frac = remainder;
  8702  002740  C024  F034         	movff	adf4351_calc_counters@remainder,adf4351_calc_counters@frac
  8703  002744  C025  F035         	movff	adf4351_calc_counters@remainder+1,adf4351_calc_counters@frac+1
  8704  002748  C026  F036         	movff	adf4351_calc_counters@remainder+2,adf4351_calc_counters@frac+2
  8705  00274C  C027  F037         	movff	adf4351_calc_counters@remainder+3,adf4351_calc_counters@frac+3
  8706  002750                     
  8707                           ;src/driver/adf4351.c: 181:  mod = ctx->pfd;
  8708  002750  EE20 F02F          	lfsr	2,47
  8709  002754  5022               	movf	adf4351_calc_counters@ctx^0,w,c
  8710  002756  26D9               	addwf	fsr2l,f,c
  8711  002758  5023               	movf	(adf4351_calc_counters@ctx+1)^0,w,c
  8712  00275A  22DA               	addwfc	fsr2h,f,c
  8713  00275C  CFDE F030          	movff	postinc2,adf4351_calc_counters@mod
  8714  002760  CFDE F031          	movff	postinc2,adf4351_calc_counters@mod+1
  8715  002764  CFDE F032          	movff	postinc2,adf4351_calc_counters@mod+2
  8716  002768  CFDE F033          	movff	postinc2,adf4351_calc_counters@mod+3
  8717                           
  8718                           ;src/driver/adf4351.c: 183:  while (mod >= 4096) {
  8719  00276C  EFC2  F013         	goto	l8892
  8720  002770                     l8890:
  8721                           
  8722                           ;src/driver/adf4351.c: 184:   frac /= 2;
  8723  002770  90D8               	bcf	status,0,c
  8724  002772  3237               	rrcf	(adf4351_calc_counters@frac+3)^0,f,c
  8725  002774  3236               	rrcf	(adf4351_calc_counters@frac+2)^0,f,c
  8726  002776  3235               	rrcf	(adf4351_calc_counters@frac+1)^0,f,c
  8727  002778  3234               	rrcf	adf4351_calc_counters@frac^0,f,c
  8728                           
  8729                           ;src/driver/adf4351.c: 185:   mod /= 2;
  8730  00277A  90D8               	bcf	status,0,c
  8731  00277C  3233               	rrcf	(adf4351_calc_counters@mod+3)^0,f,c
  8732  00277E  3232               	rrcf	(adf4351_calc_counters@mod+2)^0,f,c
  8733  002780  3231               	rrcf	(adf4351_calc_counters@mod+1)^0,f,c
  8734  002782  3230               	rrcf	adf4351_calc_counters@mod^0,f,c
  8735  002784                     l8892:
  8736                           
  8737                           ;src/driver/adf4351.c: 183:  while (mod >= 4096) {
  8738  002784  5033               	movf	(adf4351_calc_counters@mod+3)^0,w,c
  8739  002786  1032               	iorwf	(adf4351_calc_counters@mod+2)^0,w,c
  8740  002788  E107               	bnz	u10451
  8741  00278A  0E10               	movlw	16
  8742  00278C  5C31               	subwf	(adf4351_calc_counters@mod+1)^0,w,c
  8743  00278E  B0D8               	btfsc	status,0,c
  8744  002790  EFCC  F013         	goto	u10451
  8745  002794  EFCE  F013         	goto	u10450
  8746  002798                     u10451:
  8747  002798  EFB8  F013         	goto	l8890
  8748  00279C                     u10450:
  8749  00279C                     
  8750                           ;src/driver/adf4351.c: 188:  if(frac) {
  8751  00279C  5034               	movf	adf4351_calc_counters@frac^0,w,c
  8752  00279E  1035               	iorwf	(adf4351_calc_counters@frac+1)^0,w,c
  8753  0027A0  1036               	iorwf	(adf4351_calc_counters@frac+2)^0,w,c
  8754  0027A2  1037               	iorwf	(adf4351_calc_counters@frac+3)^0,w,c
  8755  0027A4  B4D8               	btfsc	status,2,c
  8756  0027A6  EFD7  F013         	goto	u10461
  8757  0027AA  EFD9  F013         	goto	u10460
  8758  0027AE                     u10461:
  8759  0027AE  EF29  F014         	goto	l8898
  8760  0027B2                     u10460:
  8761  0027B2                     
  8762                           ;src/driver/adf4351.c: 190:   u32 div = gcd(mod, frac);
  8763  0027B2  C030  F016         	movff	adf4351_calc_counters@mod,gcd@a
  8764  0027B6  C031  F017         	movff	adf4351_calc_counters@mod+1,gcd@a+1
  8765  0027BA  C032  F018         	movff	adf4351_calc_counters@mod+2,gcd@a+2
  8766  0027BE  C033  F019         	movff	adf4351_calc_counters@mod+3,gcd@a+3
  8767  0027C2  C034  F01A         	movff	adf4351_calc_counters@frac,gcd@b
  8768  0027C6  C035  F01B         	movff	adf4351_calc_counters@frac+1,gcd@b+1
  8769  0027CA  C036  F01C         	movff	adf4351_calc_counters@frac+2,gcd@b+2
  8770  0027CE  C037  F01D         	movff	adf4351_calc_counters@frac+3,gcd@b+3
  8771  0027D2  ECF5  F023         	call	_gcd	;wreg free
  8772  0027D6  C016  F028         	movff	?_gcd,adf4351_calc_counters@div
  8773  0027DA  C017  F029         	movff	?_gcd+1,adf4351_calc_counters@div+1
  8774  0027DE  C018  F02A         	movff	?_gcd+2,adf4351_calc_counters@div+2
  8775  0027E2  C019  F02B         	movff	?_gcd+3,adf4351_calc_counters@div+3
  8776                           
  8777                           ;src/driver/adf4351.c: 191:   frac /= div;
  8778  0027E6  C034  F00D         	movff	adf4351_calc_counters@frac,___lldiv@dividend
  8779  0027EA  C035  F00E         	movff	adf4351_calc_counters@frac+1,___lldiv@dividend+1
  8780  0027EE  C036  F00F         	movff	adf4351_calc_counters@frac+2,___lldiv@dividend+2
  8781  0027F2  C037  F010         	movff	adf4351_calc_counters@frac+3,___lldiv@dividend+3
  8782  0027F6  C028  F011         	movff	adf4351_calc_counters@div,___lldiv@divisor
  8783  0027FA  C029  F012         	movff	adf4351_calc_counters@div+1,___lldiv@divisor+1
  8784  0027FE  C02A  F013         	movff	adf4351_calc_counters@div+2,___lldiv@divisor+2
  8785  002802  C02B  F014         	movff	adf4351_calc_counters@div+3,___lldiv@divisor+3
  8786  002806  ECAF  F02A         	call	___lldiv	;wreg free
  8787  00280A  C00D  F034         	movff	?___lldiv,adf4351_calc_counters@frac
  8788  00280E  C00E  F035         	movff	?___lldiv+1,adf4351_calc_counters@frac+1
  8789  002812  C00F  F036         	movff	?___lldiv+2,adf4351_calc_counters@frac+2
  8790  002816  C010  F037         	movff	?___lldiv+3,adf4351_calc_counters@frac+3
  8791                           
  8792                           ;src/driver/adf4351.c: 192:   mod /= div;
  8793  00281A  C030  F00D         	movff	adf4351_calc_counters@mod,___lldiv@dividend
  8794  00281E  C031  F00E         	movff	adf4351_calc_counters@mod+1,___lldiv@dividend+1
  8795  002822  C032  F00F         	movff	adf4351_calc_counters@mod+2,___lldiv@dividend+2
  8796  002826  C033  F010         	movff	adf4351_calc_counters@mod+3,___lldiv@dividend+3
  8797  00282A  C028  F011         	movff	adf4351_calc_counters@div,___lldiv@divisor
  8798  00282E  C029  F012         	movff	adf4351_calc_counters@div+1,___lldiv@divisor+1
  8799  002832  C02A  F013         	movff	adf4351_calc_counters@div+2,___lldiv@divisor+2
  8800  002836  C02B  F014         	movff	adf4351_calc_counters@div+3,___lldiv@divisor+3
  8801  00283A  ECAF  F02A         	call	___lldiv	;wreg free
  8802  00283E  C00D  F030         	movff	?___lldiv,adf4351_calc_counters@mod
  8803  002842  C00E  F031         	movff	?___lldiv+1,adf4351_calc_counters@mod+1
  8804  002846  C00F  F032         	movff	?___lldiv+2,adf4351_calc_counters@mod+2
  8805  00284A  C010  F033         	movff	?___lldiv+3,adf4351_calc_counters@mod+3
  8806                           
  8807                           ;src/driver/adf4351.c: 193:  } else {
  8808  00284E  EF39  F014         	goto	l8900
  8809  002852                     l8898:
  8810                           
  8811                           ;src/driver/adf4351.c: 195:   frac = 0;
  8812  002852  0E00               	movlw	0
  8813  002854  6E34               	movwf	adf4351_calc_counters@frac^0,c
  8814  002856  0E00               	movlw	0
  8815  002858  6E35               	movwf	(adf4351_calc_counters@frac+1)^0,c
  8816  00285A  0E00               	movlw	0
  8817  00285C  6E36               	movwf	(adf4351_calc_counters@frac+2)^0,c
  8818  00285E  0E00               	movlw	0
  8819  002860  6E37               	movwf	(adf4351_calc_counters@frac+3)^0,c
  8820                           
  8821                           ;src/driver/adf4351.c: 196:   mod = 2;
  8822  002862  0E02               	movlw	2
  8823  002864  6E30               	movwf	adf4351_calc_counters@mod^0,c
  8824  002866  0E00               	movlw	0
  8825  002868  6E31               	movwf	(adf4351_calc_counters@mod+1)^0,c
  8826  00286A  0E00               	movlw	0
  8827  00286C  6E32               	movwf	(adf4351_calc_counters@mod+2)^0,c
  8828  00286E  0E00               	movlw	0
  8829  002870  6E33               	movwf	(adf4351_calc_counters@mod+3)^0,c
  8830  002872                     l8900:
  8831                           
  8832                           ;src/driver/adf4351.c: 199:  ctx->reg0.integer = integer;
  8833  002872  EE20 F002          	lfsr	2,2
  8834  002876  5022               	movf	adf4351_calc_counters@ctx^0,w,c
  8835  002878  26D9               	addwf	fsr2l,f,c
  8836  00287A  5023               	movf	(adf4351_calc_counters@ctx+1)^0,w,c
  8837  00287C  22DA               	addwfc	fsr2h,f,c
  8838  00287E  C02C  FFDE         	movff	adf4351_calc_counters@integer,postinc2
  8839  002882  C02D  FFDD         	movff	adf4351_calc_counters@integer+1,postdec2
  8840  002886                     
  8841                           ;src/driver/adf4351.c: 200:  ctx->reg0.frac = frac;
  8842  002886  EE20 F004          	lfsr	2,4
  8843  00288A  5022               	movf	adf4351_calc_counters@ctx^0,w,c
  8844  00288C  26D9               	addwf	fsr2l,f,c
  8845  00288E  5023               	movf	(adf4351_calc_counters@ctx+1)^0,w,c
  8846  002890  22DA               	addwfc	fsr2h,f,c
  8847  002892  C034  FFDE         	movff	adf4351_calc_counters@frac,postinc2
  8848  002896  C035  FFDD         	movff	adf4351_calc_counters@frac+1,postdec2
  8849  00289A                     
  8850                           ;src/driver/adf4351.c: 201:     ctx->reg1.mod = mod;
  8851  00289A  EE20 F009          	lfsr	2,9
  8852  00289E  5022               	movf	adf4351_calc_counters@ctx^0,w,c
  8853  0028A0  26D9               	addwf	fsr2l,f,c
  8854  0028A2  5023               	movf	(adf4351_calc_counters@ctx+1)^0,w,c
  8855  0028A4  22DA               	addwfc	fsr2h,f,c
  8856  0028A6  C030  FFDE         	movff	adf4351_calc_counters@mod,postinc2
  8857  0028AA  C031  FFDD         	movff	adf4351_calc_counters@mod+1,postdec2
  8858  0028AE                     
  8859                           ;src/driver/adf4351.c: 202:     ctx->reg2.ldf = frac?0:1;
  8860  0028AE  EE20 F013          	lfsr	2,19
  8861  0028B2  5022               	movf	adf4351_calc_counters@ctx^0,w,c
  8862  0028B4  26D9               	addwf	fsr2l,f,c
  8863  0028B6  5023               	movf	(adf4351_calc_counters@ctx+1)^0,w,c
  8864  0028B8  22DA               	addwfc	fsr2h,f,c
  8865  0028BA  5034               	movf	adf4351_calc_counters@frac^0,w,c
  8866  0028BC  1035               	iorwf	(adf4351_calc_counters@frac+1)^0,w,c
  8867  0028BE  1036               	iorwf	(adf4351_calc_counters@frac+2)^0,w,c
  8868  0028C0  1037               	iorwf	(adf4351_calc_counters@frac+3)^0,w,c
  8869  0028C2  B4D8               	btfsc	status,2,c
  8870  0028C4  EF66  F014         	goto	u10471
  8871  0028C8  EF69  F014         	goto	u10470
  8872  0028CC                     u10471:
  8873  0028CC  0E01               	movlw	1
  8874  0028CE  EF6A  F014         	goto	u10480
  8875  0028D2                     u10470:
  8876  0028D2  0E00               	movlw	0
  8877  0028D4                     u10480:
  8878  0028D4  6EDF               	movwf	indf2,c
  8879  0028D6                     l174:
  8880  0028D6  0012               	return		;funcret
  8881  0028D8                     __end_of_adf4351_calc_counters:
  8882                           	opt callstack 0
  8883                           
  8884 ;; *************** function _gcd *****************
  8885 ;; Defined at:
  8886 ;;		line 383 in file "src/driver/adf4351.c"
  8887 ;; Parameters:    Size  Location     Type
  8888 ;;  a               4   21[COMRAM] unsigned long 
  8889 ;;  b               4   25[COMRAM] unsigned long 
  8890 ;; Auto vars:     Size  Location     Type
  8891 ;;  c               4   29[COMRAM] unsigned long 
  8892 ;; Return value:  Size  Location     Type
  8893 ;;                  4   21[COMRAM] unsigned long 
  8894 ;; Registers used:
  8895 ;;		wreg, status,2, status,0, cstack
  8896 ;; Tracked objects:
  8897 ;;		On entry : 0/0
  8898 ;;		On exit  : 0/0
  8899 ;;		Unchanged: 0/0
  8900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8901 ;;      Params:         8       0       0       0       0       0       0
  8902 ;;      Locals:         4       0       0       0       0       0       0
  8903 ;;      Temps:          0       0       0       0       0       0       0
  8904 ;;      Totals:        12       0       0       0       0       0       0
  8905 ;;Total ram usage:       12 bytes
  8906 ;; Hardware stack levels used:    1
  8907 ;; Hardware stack levels required when called:    3
  8908 ;; This function calls:
  8909 ;;		___llmod
  8910 ;; This function is called by:
  8911 ;;		_adf4351_calc_counters
  8912 ;; This function uses a non-reentrant model
  8913 ;;
  8914                           
  8915                           	psect	text20
  8916  0047EA                     __ptext20:
  8917                           	opt callstack 0
  8918  0047EA                     _gcd:
  8919                           	opt callstack 24
  8920  0047EA                     
  8921                           ;src/driver/adf4351.c: 383: static __attribute__((inline)) u32 gcd(u32 a, u32 b);src/dri
      +                          ver/adf4351.c: 384: {;src/driver/adf4351.c: 385:     while((a%b) != 0) {
  8922  0047EA  EF42  F024         	goto	l231
  8923  0047EE                     l232:
  8924                           
  8925                           ;src/driver/adf4351.c: 386:         u32 c = a;
  8926  0047EE  C016  F01E         	movff	gcd@a,gcd@c
  8927  0047F2  C017  F01F         	movff	gcd@a+1,gcd@c+1
  8928  0047F6  C018  F020         	movff	gcd@a+2,gcd@c+2
  8929  0047FA  C019  F021         	movff	gcd@a+3,gcd@c+3
  8930  0047FE                     
  8931                           ;src/driver/adf4351.c: 388:         if(a < b) {
  8932  0047FE  501A               	movf	gcd@b^0,w,c
  8933  004800  5C16               	subwf	gcd@a^0,w,c
  8934  004802  501B               	movf	(gcd@b+1)^0,w,c
  8935  004804  5817               	subwfb	(gcd@a+1)^0,w,c
  8936  004806  501C               	movf	(gcd@b+2)^0,w,c
  8937  004808  5818               	subwfb	(gcd@a+2)^0,w,c
  8938  00480A  501D               	movf	(gcd@b+3)^0,w,c
  8939  00480C  5819               	subwfb	(gcd@a+3)^0,w,c
  8940  00480E  B0D8               	btfsc	status,0,c
  8941  004810  EF0C  F024         	goto	u6291
  8942  004814  EF0E  F024         	goto	u6290
  8943  004818                     u6291:
  8944  004818  EF20  F024         	goto	l233
  8945  00481C                     u6290:
  8946  00481C                     
  8947                           ;src/driver/adf4351.c: 389:             a = b;
  8948  00481C  C01A  F016         	movff	gcd@b,gcd@a
  8949  004820  C01B  F017         	movff	gcd@b+1,gcd@a+1
  8950  004824  C01C  F018         	movff	gcd@b+2,gcd@a+2
  8951  004828  C01D  F019         	movff	gcd@b+3,gcd@a+3
  8952                           
  8953                           ;src/driver/adf4351.c: 390:             b = c;
  8954  00482C  C01E  F01A         	movff	gcd@c,gcd@b
  8955  004830  C01F  F01B         	movff	gcd@c+1,gcd@b+1
  8956  004834  C020  F01C         	movff	gcd@c+2,gcd@b+2
  8957  004838  C021  F01D         	movff	gcd@c+3,gcd@b+3
  8958                           
  8959                           ;src/driver/adf4351.c: 391:         } else {
  8960  00483C  EF42  F024         	goto	l231
  8961  004840                     l233:
  8962                           
  8963                           ;src/driver/adf4351.c: 392:             a = b;
  8964  004840  C01A  F016         	movff	gcd@b,gcd@a
  8965  004844  C01B  F017         	movff	gcd@b+1,gcd@a+1
  8966  004848  C01C  F018         	movff	gcd@b+2,gcd@a+2
  8967  00484C  C01D  F019         	movff	gcd@b+3,gcd@a+3
  8968  004850                     
  8969                           ;src/driver/adf4351.c: 393:             b = c%b;
  8970  004850  C01E  F00D         	movff	gcd@c,___llmod@dividend
  8971  004854  C01F  F00E         	movff	gcd@c+1,___llmod@dividend+1
  8972  004858  C020  F00F         	movff	gcd@c+2,___llmod@dividend+2
  8973  00485C  C021  F010         	movff	gcd@c+3,___llmod@dividend+3
  8974  004860  C01A  F011         	movff	gcd@b,___llmod@divisor
  8975  004864  C01B  F012         	movff	gcd@b+1,___llmod@divisor+1
  8976  004868  C01C  F013         	movff	gcd@b+2,___llmod@divisor+2
  8977  00486C  C01D  F014         	movff	gcd@b+3,___llmod@divisor+3
  8978  004870  ECDA  F02B         	call	___llmod	;wreg free
  8979  004874  C00D  F01A         	movff	?___llmod,gcd@b
  8980  004878  C00E  F01B         	movff	?___llmod+1,gcd@b+1
  8981  00487C  C00F  F01C         	movff	?___llmod+2,gcd@b+2
  8982  004880  C010  F01D         	movff	?___llmod+3,gcd@b+3
  8983  004884                     l231:
  8984                           
  8985                           ;src/driver/adf4351.c: 385:     while((a%b) != 0) {
  8986  004884  C016  F00D         	movff	gcd@a,___llmod@dividend
  8987  004888  C017  F00E         	movff	gcd@a+1,___llmod@dividend+1
  8988  00488C  C018  F00F         	movff	gcd@a+2,___llmod@dividend+2
  8989  004890  C019  F010         	movff	gcd@a+3,___llmod@dividend+3
  8990  004894  C01A  F011         	movff	gcd@b,___llmod@divisor
  8991  004898  C01B  F012         	movff	gcd@b+1,___llmod@divisor+1
  8992  00489C  C01C  F013         	movff	gcd@b+2,___llmod@divisor+2
  8993  0048A0  C01D  F014         	movff	gcd@b+3,___llmod@divisor+3
  8994  0048A4  ECDA  F02B         	call	___llmod	;wreg free
  8995  0048A8  500D               	movf	?___llmod^0,w,c
  8996  0048AA  100E               	iorwf	(?___llmod+1)^0,w,c
  8997  0048AC  100F               	iorwf	(?___llmod+2)^0,w,c
  8998  0048AE  1010               	iorwf	(?___llmod+3)^0,w,c
  8999  0048B0  A4D8               	btfss	status,2,c
  9000  0048B2  EF5D  F024         	goto	u6301
  9001  0048B6  EF5F  F024         	goto	u6300
  9002  0048BA                     u6301:
  9003  0048BA  EFF7  F023         	goto	l232
  9004  0048BE                     u6300:
  9005  0048BE                     
  9006                           ;src/driver/adf4351.c: 397:     return b;
  9007  0048BE  C01A  F016         	movff	gcd@b,?_gcd
  9008  0048C2  C01B  F017         	movff	gcd@b+1,?_gcd+1
  9009  0048C6  C01C  F018         	movff	gcd@b+2,?_gcd+2
  9010  0048CA  C01D  F019         	movff	gcd@b+3,?_gcd+3
  9011  0048CE  0012               	return		;funcret
  9012  0048D0                     __end_of_gcd:
  9013                           	opt callstack 0
  9014                           
  9015 ;; *************** function ___llmod *****************
  9016 ;; Defined at:
  9017 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/llmod.c"
  9018 ;; Parameters:    Size  Location     Type
  9019 ;;  dividend        4   12[COMRAM] unsigned long 
  9020 ;;  divisor         4   16[COMRAM] unsigned long 
  9021 ;; Auto vars:     Size  Location     Type
  9022 ;;  counter         1   20[COMRAM] unsigned char 
  9023 ;; Return value:  Size  Location     Type
  9024 ;;                  4   12[COMRAM] unsigned long 
  9025 ;; Registers used:
  9026 ;;		wreg, status,2, status,0
  9027 ;; Tracked objects:
  9028 ;;		On entry : 0/0
  9029 ;;		On exit  : 0/0
  9030 ;;		Unchanged: 0/0
  9031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9032 ;;      Params:         8       0       0       0       0       0       0
  9033 ;;      Locals:         1       0       0       0       0       0       0
  9034 ;;      Temps:          0       0       0       0       0       0       0
  9035 ;;      Totals:         9       0       0       0       0       0       0
  9036 ;;Total ram usage:        9 bytes
  9037 ;; Hardware stack levels used:    1
  9038 ;; Hardware stack levels required when called:    2
  9039 ;; This function calls:
  9040 ;;		Nothing
  9041 ;; This function is called by:
  9042 ;;		_adf4351_calc_counters
  9043 ;;		_adf4351_calc_rcnt_block
  9044 ;;		_gcd
  9045 ;; This function uses a non-reentrant model
  9046 ;;
  9047                           
  9048                           	psect	text21
  9049  0057B4                     __ptext21:
  9050                           	opt callstack 0
  9051  0057B4                     ___llmod:
  9052                           	opt callstack 25
  9053  0057B4  5011               	movf	___llmod@divisor^0,w,c
  9054  0057B6  1012               	iorwf	(___llmod@divisor+1)^0,w,c
  9055  0057B8  1013               	iorwf	(___llmod@divisor+2)^0,w,c
  9056  0057BA  1014               	iorwf	(___llmod@divisor+3)^0,w,c
  9057  0057BC  B4D8               	btfsc	status,2,c
  9058  0057BE  EFE3  F02B         	goto	u5831
  9059  0057C2  EFE5  F02B         	goto	u5830
  9060  0057C6                     u5831:
  9061  0057C6  EF15  F02C         	goto	l1717
  9062  0057CA                     u5830:
  9063  0057CA  0E01               	movlw	1
  9064  0057CC  6E15               	movwf	___llmod@counter^0,c
  9065  0057CE  EFEF  F02B         	goto	l5848
  9066  0057D2                     l5846:
  9067  0057D2  90D8               	bcf	status,0,c
  9068  0057D4  3611               	rlcf	___llmod@divisor^0,f,c
  9069  0057D6  3612               	rlcf	(___llmod@divisor+1)^0,f,c
  9070  0057D8  3613               	rlcf	(___llmod@divisor+2)^0,f,c
  9071  0057DA  3614               	rlcf	(___llmod@divisor+3)^0,f,c
  9072  0057DC  2A15               	incf	___llmod@counter^0,f,c
  9073  0057DE                     l5848:
  9074  0057DE  AE14               	btfss	(___llmod@divisor+3)^0,7,c
  9075  0057E0  EFF4  F02B         	goto	u5841
  9076  0057E4  EFF6  F02B         	goto	u5840
  9077  0057E8                     u5841:
  9078  0057E8  EFE9  F02B         	goto	l5846
  9079  0057EC                     u5840:
  9080  0057EC                     l5850:
  9081  0057EC  5011               	movf	___llmod@divisor^0,w,c
  9082  0057EE  5C0D               	subwf	___llmod@dividend^0,w,c
  9083  0057F0  5012               	movf	(___llmod@divisor+1)^0,w,c
  9084  0057F2  580E               	subwfb	(___llmod@dividend+1)^0,w,c
  9085  0057F4  5013               	movf	(___llmod@divisor+2)^0,w,c
  9086  0057F6  580F               	subwfb	(___llmod@dividend+2)^0,w,c
  9087  0057F8  5014               	movf	(___llmod@divisor+3)^0,w,c
  9088  0057FA  5810               	subwfb	(___llmod@dividend+3)^0,w,c
  9089  0057FC  A0D8               	btfss	status,0,c
  9090  0057FE  EF03  F02C         	goto	u5851
  9091  005802  EF05  F02C         	goto	u5850
  9092  005806                     u5851:
  9093  005806  EF0D  F02C         	goto	l5854
  9094  00580A                     u5850:
  9095  00580A  5011               	movf	___llmod@divisor^0,w,c
  9096  00580C  5E0D               	subwf	___llmod@dividend^0,f,c
  9097  00580E  5012               	movf	(___llmod@divisor+1)^0,w,c
  9098  005810  5A0E               	subwfb	(___llmod@dividend+1)^0,f,c
  9099  005812  5013               	movf	(___llmod@divisor+2)^0,w,c
  9100  005814  5A0F               	subwfb	(___llmod@dividend+2)^0,f,c
  9101  005816  5014               	movf	(___llmod@divisor+3)^0,w,c
  9102  005818  5A10               	subwfb	(___llmod@dividend+3)^0,f,c
  9103  00581A                     l5854:
  9104  00581A  90D8               	bcf	status,0,c
  9105  00581C  3214               	rrcf	(___llmod@divisor+3)^0,f,c
  9106  00581E  3213               	rrcf	(___llmod@divisor+2)^0,f,c
  9107  005820  3212               	rrcf	(___llmod@divisor+1)^0,f,c
  9108  005822  3211               	rrcf	___llmod@divisor^0,f,c
  9109  005824  2E15               	decfsz	___llmod@counter^0,f,c
  9110  005826  EFF6  F02B         	goto	l5850
  9111  00582A                     l1717:
  9112  00582A  C00D  F00D         	movff	___llmod@dividend,?___llmod
  9113  00582E  C00E  F00E         	movff	___llmod@dividend+1,?___llmod+1
  9114  005832  C00F  F00F         	movff	___llmod@dividend+2,?___llmod+2
  9115  005836  C010  F010         	movff	___llmod@dividend+3,?___llmod+3
  9116  00583A  0012               	return		;funcret
  9117  00583C                     __end_of___llmod:
  9118                           	opt callstack 0
  9119                           
  9120 ;; *************** function _adf4351_get_lock *****************
  9121 ;; Defined at:
  9122 ;;		line 72 in file "src/driver/adf4351.c"
  9123 ;; Parameters:    Size  Location     Type
  9124 ;;  ctx             2   12[COMRAM] PTR struct adf4351_ctx
  9125 ;;		 -> g_adf4351(55), 
  9126 ;; Auto vars:     Size  Location     Type
  9127 ;;		None
  9128 ;; Return value:  Size  Location     Type
  9129 ;;                  2   12[COMRAM] int 
  9130 ;; Registers used:
  9131 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9132 ;; Tracked objects:
  9133 ;;		On entry : 0/0
  9134 ;;		On exit  : 0/0
  9135 ;;		Unchanged: 0/0
  9136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9137 ;;      Params:         2       0       0       0       0       0       0
  9138 ;;      Locals:         0       0       0       0       0       0       0
  9139 ;;      Temps:          3       0       0       0       0       0       0
  9140 ;;      Totals:         5       0       0       0       0       0       0
  9141 ;;Total ram usage:        5 bytes
  9142 ;; Hardware stack levels used:    1
  9143 ;; Hardware stack levels required when called:    2
  9144 ;; This function calls:
  9145 ;;		Nothing
  9146 ;; This function is called by:
  9147 ;;		_setADF4351frequency
  9148 ;; This function uses a non-reentrant model
  9149 ;;
  9150                           
  9151                           	psect	text22
  9152  00618A                     __ptext22:
  9153                           	opt callstack 0
  9154  00618A                     _adf4351_get_lock:
  9155                           	opt callstack 27
  9156  00618A                     
  9157                           ;src/driver/adf4351.c: 72: BOOL adf4351_get_lock(adf4351_ctx* ctx);src/driver/adf4351.c:
      +                           73: {;src/driver/adf4351.c: 74:  return (((*((PIN_ADF_LOCK)->pPORT) & (PIN_ADF_LOCK)->m
      +                          ask) != 0)==0)?0:1;
  9158  00618A  0EF6               	movlw	low (_PIN_ADF_LOCK_DEF+4)
  9159  00618C  6EF6               	movwf	tblptrl,c
  9160  00618E  0E78               	movlw	high (_PIN_ADF_LOCK_DEF+4)
  9161  006190  6EF7               	movwf	tblptrh,c
  9162  006192                     	if	0	;tblptru may be non-zero
  9163  006192                     	endif
  9164  006192                     	if	0	;tblptru may be non-zero
  9165  006192                     	endif
  9166  006192  0008               	tblrd		*
  9167  006194  CFF5 F00F          	movff	tablat,??_adf4351_get_lock
  9168  006198  0EF2               	movlw	low _PIN_ADF_LOCK_DEF
  9169  00619A  6EF6               	movwf	tblptrl,c
  9170  00619C                     	if	1	;There is more than 1 active tblptr byte
  9171  00619C  0E78               	movlw	high _PIN_ADF_LOCK_DEF
  9172  00619E  6EF7               	movwf	tblptrh,c
  9173  0061A0                     	endif
  9174  0061A0                     	if	0	;There are less than 3 active tblptr bytes
  9175  0061A0                     	endif
  9176  0061A0  0009               	tblrd		*+
  9177  0061A2  CFF5 F010          	movff	tablat,??_adf4351_get_lock+1
  9178  0061A6  0009               	tblrd		*+
  9179  0061A8  CFF5 F011          	movff	tablat,??_adf4351_get_lock+2
  9180  0061AC  C010  FFD9         	movff	??_adf4351_get_lock+1,fsr2l
  9181  0061B0  C011  FFDA         	movff	??_adf4351_get_lock+2,fsr2h
  9182  0061B4  50DF               	movf	indf2,w,c
  9183  0061B6  140F               	andwf	??_adf4351_get_lock^0,w,c
  9184  0061B8  0900               	iorlw	0
  9185  0061BA  A4D8               	btfss	status,2,c
  9186  0061BC  EFE2  F030         	goto	u6781
  9187  0061C0  EFE5  F030         	goto	u6780
  9188  0061C4                     u6781:
  9189  0061C4  0E01               	movlw	1
  9190  0061C6  EFE6  F030         	goto	u6790
  9191  0061CA                     u6780:
  9192  0061CA  0E00               	movlw	0
  9193  0061CC                     u6790:
  9194  0061CC  6E0D               	movwf	?_adf4351_get_lock^0,c
  9195  0061CE  6A0E               	clrf	(?_adf4351_get_lock+1)^0,c
  9196  0061D0  0012               	return		;funcret
  9197  0061D2                     __end_of_adf4351_get_lock:
  9198                           	opt callstack 0
  9199                           
  9200 ;; *************** function _rx_usart *****************
  9201 ;; Defined at:
  9202 ;;		line 103 in file "src/driver/usart.c"
  9203 ;; Parameters:    Size  Location     Type
  9204 ;;		None
  9205 ;; Auto vars:     Size  Location     Type
  9206 ;;  c               2   18[COMRAM] int 
  9207 ;; Return value:  Size  Location     Type
  9208 ;;                  1    wreg      void 
  9209 ;; Registers used:
  9210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9211 ;; Tracked objects:
  9212 ;;		On entry : 0/0
  9213 ;;		On exit  : 0/0
  9214 ;;		Unchanged: 0/0
  9215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9216 ;;      Params:         0       0       0       0       0       0       0
  9217 ;;      Locals:         2       0       0       0       0       0       0
  9218 ;;      Temps:          0       0       0       0       0       0       0
  9219 ;;      Totals:         2       0       0       0       0       0       0
  9220 ;;Total ram usage:        2 bytes
  9221 ;; Hardware stack levels used:    1
  9222 ;; Hardware stack levels required when called:    3
  9223 ;; This function calls:
  9224 ;;		_rx_gps
  9225 ;;		_usart_getc
  9226 ;; This function is called by:
  9227 ;;		_main
  9228 ;; This function uses a non-reentrant model
  9229 ;;
  9230                           
  9231                           	psect	text23
  9232  006520                     __ptext23:
  9233                           	opt callstack 0
  9234  006520                     _rx_usart:
  9235                           	opt callstack 27
  9236  006520                     
  9237                           ;src/driver/usart.c: 105:     int c = usart_getc();
  9238  006520  EC29  F02F         	call	_usart_getc	;wreg free
  9239  006524  C00D  F013         	movff	?_usart_getc,rx_usart@c
  9240  006528  C00E  F014         	movff	?_usart_getc+1,rx_usart@c+1
  9241  00652C                     
  9242                           ;src/driver/usart.c: 106:  if(c != -1)
  9243  00652C  2813               	incf	rx_usart@c^0,w,c
  9244  00652E  E108               	bnz	u7460
  9245  006530  2814               	incf	(rx_usart@c+1)^0,w,c
  9246  006532  B4D8               	btfsc	status,2,c
  9247  006534  EF9E  F032         	goto	u7461
  9248  006538  EFA0  F032         	goto	u7460
  9249  00653C                     u7461:
  9250  00653C  EFA6  F032         	goto	l439
  9251  006540                     u7460:
  9252  006540                     
  9253                           ;src/driver/usart.c: 107:  {;src/driver/usart.c: 108:   rx_gps(c);
  9254  006540  C013  F00D         	movff	rx_usart@c,rx_gps@c
  9255  006544  C014  F00E         	movff	rx_usart@c+1,rx_gps@c+1
  9256  006548  EC68  F016         	call	_rx_gps	;wreg free
  9257  00654C                     l439:
  9258  00654C  0012               	return		;funcret
  9259  00654E                     __end_of_rx_usart:
  9260                           	opt callstack 0
  9261                           
  9262 ;; *************** function _usart_getc *****************
  9263 ;; Defined at:
  9264 ;;		line 52 in file "src/driver/usart.c"
  9265 ;; Parameters:    Size  Location     Type
  9266 ;;		None
  9267 ;; Auto vars:     Size  Location     Type
  9268 ;;  res             2   16[COMRAM] int 
  9269 ;; Return value:  Size  Location     Type
  9270 ;;                  2   12[COMRAM] int 
  9271 ;; Registers used:
  9272 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9273 ;; Tracked objects:
  9274 ;;		On entry : 0/0
  9275 ;;		On exit  : 0/0
  9276 ;;		Unchanged: 0/0
  9277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9278 ;;      Params:         2       0       0       0       0       0       0
  9279 ;;      Locals:         2       0       0       0       0       0       0
  9280 ;;      Temps:          2       0       0       0       0       0       0
  9281 ;;      Totals:         6       0       0       0       0       0       0
  9282 ;;Total ram usage:        6 bytes
  9283 ;; Hardware stack levels used:    1
  9284 ;; Hardware stack levels required when called:    2
  9285 ;; This function calls:
  9286 ;;		Nothing
  9287 ;; This function is called by:
  9288 ;;		_rx_usart
  9289 ;; This function uses a non-reentrant model
  9290 ;;
  9291                           
  9292                           	psect	text24
  9293  005E52                     __ptext24:
  9294                           	opt callstack 0
  9295  005E52                     _usart_getc:
  9296                           	opt callstack 27
  9297  005E52                     
  9298                           ;src/driver/usart.c: 54:  int res;;src/driver/usart.c: 56:  PIE1bits.RCIE = 0;
  9299  005E52  9A9D               	bcf	157,5,c	;volatile
  9300  005E54                     
  9301                           ;src/driver/usart.c: 58:  if(g_usart_wpos == g_usart_rpos)
  9302  005E54  506D               	movf	_g_usart_rpos^0,w,c	;volatile
  9303  005E56  186B               	xorwf	_g_usart_wpos^0,w,c	;volatile
  9304  005E58  E107               	bnz	u6901
  9305  005E5A  506E               	movf	(_g_usart_rpos+1)^0,w,c	;volatile
  9306  005E5C  186C               	xorwf	(_g_usart_wpos+1)^0,w,c	;volatile
  9307  005E5E  A4D8               	btfss	status,2,c
  9308  005E60  EF34  F02F         	goto	u6901
  9309  005E64  EF36  F02F         	goto	u6900
  9310  005E68                     u6901:
  9311  005E68  EF3B  F02F         	goto	l6364
  9312  005E6C                     u6900:
  9313  005E6C                     
  9314                           ;src/driver/usart.c: 59:  {;src/driver/usart.c: 60:   PIE1bits.RCIE = 1;
  9315  005E6C  8A9D               	bsf	157,5,c	;volatile
  9316                           
  9317                           ;src/driver/usart.c: 61:   return -1;
  9318  005E6E  680D               	setf	?_usart_getc^0,c
  9319  005E70  680E               	setf	(?_usart_getc+1)^0,c
  9320  005E72  EF55  F02F         	goto	l428
  9321  005E76                     l6364:
  9322                           
  9323                           ;src/driver/usart.c: 65:  res = g_usart_buf[g_usart_rpos];
  9324  005E76  0E00               	movlw	low _g_usart_buf
  9325  005E78  246D               	addwf	_g_usart_rpos^0,w,c	;volatile
  9326  005E7A  6ED9               	movwf	fsr2l,c
  9327  005E7C  0E03               	movlw	high _g_usart_buf
  9328  005E7E  206E               	addwfc	(_g_usart_rpos+1)^0,w,c	;volatile
  9329  005E80  6EDA               	movwf	fsr2h,c
  9330  005E82  50DF               	movf	indf2,w,c
  9331  005E84  6E0F               	movwf	??_usart_getc^0,c
  9332  005E86  500F               	movf	??_usart_getc^0,w,c
  9333  005E88  6E11               	movwf	usart_getc@res^0,c
  9334  005E8A  6A12               	clrf	(usart_getc@res+1)^0,c
  9335  005E8C                     
  9336                           ;src/driver/usart.c: 66:  g_usart_rpos = (g_usart_rpos+1) % sizeof(g_usart_buf);
  9337  005E8C  0E01               	movlw	1
  9338  005E8E  246D               	addwf	_g_usart_rpos^0,w,c	;volatile
  9339  005E90  6E0F               	movwf	??_usart_getc^0,c
  9340  005E92  0E00               	movlw	0
  9341  005E94  206E               	addwfc	(_g_usart_rpos+1)^0,w,c	;volatile
  9342  005E96  6E10               	movwf	(??_usart_getc+1)^0,c
  9343  005E98  0E7F               	movlw	127
  9344  005E9A  140F               	andwf	??_usart_getc^0,w,c
  9345  005E9C  6E6D               	movwf	_g_usart_rpos^0,c	;volatile
  9346  005E9E  6A6E               	clrf	(_g_usart_rpos+1)^0,c	;volatile
  9347  005EA0                     
  9348                           ;src/driver/usart.c: 68:  PIE1bits.RCIE = 1;
  9349  005EA0  8A9D               	bsf	157,5,c	;volatile
  9350  005EA2                     
  9351                           ;src/driver/usart.c: 69:  return res;
  9352  005EA2  C011  F00D         	movff	usart_getc@res,?_usart_getc
  9353  005EA6  C012  F00E         	movff	usart_getc@res+1,?_usart_getc+1
  9354  005EAA                     l428:
  9355  005EAA  0012               	return		;funcret
  9356  005EAC                     __end_of_usart_getc:
  9357                           	opt callstack 0
  9358                           
  9359 ;; *************** function _rx_gps *****************
  9360 ;; Defined at:
  9361 ;;		line 98 in file "src/gps.c"
  9362 ;; Parameters:    Size  Location     Type
  9363 ;;  c               2   12[COMRAM] int 
  9364 ;; Auto vars:     Size  Location     Type
  9365 ;;		None
  9366 ;; Return value:  Size  Location     Type
  9367 ;;                  1    wreg      void 
  9368 ;; Registers used:
  9369 ;;		wreg, status,2, status,0
  9370 ;; Tracked objects:
  9371 ;;		On entry : 0/0
  9372 ;;		On exit  : 0/0
  9373 ;;		Unchanged: 0/0
  9374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9375 ;;      Params:         2       0       0       0       0       0       0
  9376 ;;      Locals:         0       0       0       0       0       0       0
  9377 ;;      Temps:          2       0       0       0       0       0       0
  9378 ;;      Totals:         4       0       0       0       0       0       0
  9379 ;;Total ram usage:        4 bytes
  9380 ;; Hardware stack levels used:    1
  9381 ;; Hardware stack levels required when called:    2
  9382 ;; This function calls:
  9383 ;;		Nothing
  9384 ;; This function is called by:
  9385 ;;		_rx_usart
  9386 ;; This function uses a non-reentrant model
  9387 ;;
  9388                           
  9389                           	psect	text25
  9390  002CD0                     __ptext25:
  9391                           	opt callstack 0
  9392  002CD0                     _rx_gps:
  9393                           	opt callstack 27
  9394  002CD0                     
  9395                           ;src/gps.c: 98: void rx_gps(int c);src/gps.c: 99: {;src/gps.c: 100: static u8 stat = 0;;
      +                          src/gps.c: 101: static u16 len_lsb;;src/gps.c: 103:  switch(stat)
  9396  002CD0  EF2D  F017         	goto	l6432
  9397  002CD4                     l6376:
  9398                           
  9399                           ; BSR set to: 1
  9400                           ;src/gps.c: 106:   if(c == 0xb5)
  9401  002CD4  0EB5               	movlw	181
  9402  002CD6  180D               	xorwf	rx_gps@c^0,w,c
  9403  002CD8  100E               	iorwf	(rx_gps@c+1)^0,w,c
  9404  002CDA  A4D8               	btfss	status,2,c
  9405  002CDC  EF72  F016         	goto	u6911
  9406  002CE0  EF74  F016         	goto	u6910
  9407  002CE4                     u6911:
  9408  002CE4  EF57  F017         	goto	l784
  9409  002CE8                     u6910:
  9410  002CE8                     l6378:
  9411                           
  9412                           ; BSR set to: 1
  9413                           ;src/gps.c: 107:    stat++;
  9414  002CE8  2BA6               	incf	rx_gps@stat& (0+255),f,b
  9415  002CEA  EF57  F017         	goto	l784
  9416  002CEE                     l6380:
  9417                           
  9418                           ; BSR set to: 1
  9419                           ;src/gps.c: 111:   if(c == 0x62)
  9420  002CEE  0E62               	movlw	98
  9421  002CF0  180D               	xorwf	rx_gps@c^0,w,c
  9422  002CF2  100E               	iorwf	(rx_gps@c+1)^0,w,c
  9423  002CF4  A4D8               	btfss	status,2,c
  9424  002CF6  EF7F  F016         	goto	u6921
  9425  002CFA  EF81  F016         	goto	u6920
  9426  002CFE                     u6921:
  9427  002CFE  EF83  F016         	goto	l6384
  9428  002D02                     u6920:
  9429  002D02  EF74  F016         	goto	l6378
  9430  002D06                     l6384:
  9431                           
  9432                           ; BSR set to: 1
  9433                           ;src/gps.c: 114:    stat = 0;
  9434  002D06  0E00               	movlw	0
  9435  002D08  6FA6               	movwf	rx_gps@stat& (0+255),b
  9436  002D0A  EF57  F017         	goto	l784
  9437  002D0E                     l775:
  9438                           
  9439                           ; BSR set to: 1
  9440                           ;src/gps.c: 118:   ubx_class = c;
  9441  002D0E  C00D  F1A9         	movff	rx_gps@c,_ubx_class
  9442  002D12                     
  9443                           ; BSR set to: 1
  9444                           ;src/gps.c: 119:   if(c==1 || c==2 || c==4 || c==5 || c==6 || c==9 || c==0x0a || c==0x0b
      +                           || c==0x0d || c==0x10 || c==0x13 || c==0x21 || c==0x27 || c==0x28)
  9445  002D12  040D               	decf	rx_gps@c^0,w,c
  9446  002D14  100E               	iorwf	(rx_gps@c+1)^0,w,c
  9447  002D16  B4D8               	btfsc	status,2,c
  9448  002D18  EF90  F016         	goto	u6931
  9449  002D1C  EF92  F016         	goto	u6930
  9450  002D20                     u6931:
  9451  002D20  EF74  F016         	goto	l6378
  9452  002D24                     u6930:
  9453  002D24                     
  9454                           ; BSR set to: 1
  9455  002D24  0E02               	movlw	2
  9456  002D26  180D               	xorwf	rx_gps@c^0,w,c
  9457  002D28  100E               	iorwf	(rx_gps@c+1)^0,w,c
  9458  002D2A  B4D8               	btfsc	status,2,c
  9459  002D2C  EF9A  F016         	goto	u6941
  9460  002D30  EF9C  F016         	goto	u6940
  9461  002D34                     u6941:
  9462  002D34  EF74  F016         	goto	l6378
  9463  002D38                     u6940:
  9464  002D38                     
  9465                           ; BSR set to: 1
  9466  002D38  0E04               	movlw	4
  9467  002D3A  180D               	xorwf	rx_gps@c^0,w,c
  9468  002D3C  100E               	iorwf	(rx_gps@c+1)^0,w,c
  9469  002D3E  B4D8               	btfsc	status,2,c
  9470  002D40  EFA4  F016         	goto	u6951
  9471  002D44  EFA6  F016         	goto	u6950
  9472  002D48                     u6951:
  9473  002D48  EF74  F016         	goto	l6378
  9474  002D4C                     u6950:
  9475  002D4C                     
  9476                           ; BSR set to: 1
  9477  002D4C  0E05               	movlw	5
  9478  002D4E  180D               	xorwf	rx_gps@c^0,w,c
  9479  002D50  100E               	iorwf	(rx_gps@c+1)^0,w,c
  9480  002D52  B4D8               	btfsc	status,2,c
  9481  002D54  EFAE  F016         	goto	u6961
  9482  002D58  EFB0  F016         	goto	u6960
  9483  002D5C                     u6961:
  9484  002D5C  EF74  F016         	goto	l6378
  9485  002D60                     u6960:
  9486  002D60                     
  9487                           ; BSR set to: 1
  9488  002D60  0E06               	movlw	6
  9489  002D62  180D               	xorwf	rx_gps@c^0,w,c
  9490  002D64  100E               	iorwf	(rx_gps@c+1)^0,w,c
  9491  002D66  B4D8               	btfsc	status,2,c
  9492  002D68  EFB8  F016         	goto	u6971
  9493  002D6C  EFBA  F016         	goto	u6970
  9494  002D70                     u6971:
  9495  002D70  EF74  F016         	goto	l6378
  9496  002D74                     u6970:
  9497  002D74                     
  9498                           ; BSR set to: 1
  9499  002D74  0E09               	movlw	9
  9500  002D76  180D               	xorwf	rx_gps@c^0,w,c
  9501  002D78  100E               	iorwf	(rx_gps@c+1)^0,w,c
  9502  002D7A  B4D8               	btfsc	status,2,c
  9503  002D7C  EFC2  F016         	goto	u6981
  9504  002D80  EFC4  F016         	goto	u6980
  9505  002D84                     u6981:
  9506  002D84  EF74  F016         	goto	l6378
  9507  002D88                     u6980:
  9508  002D88                     
  9509                           ; BSR set to: 1
  9510  002D88  0E0A               	movlw	10
  9511  002D8A  180D               	xorwf	rx_gps@c^0,w,c
  9512  002D8C  100E               	iorwf	(rx_gps@c+1)^0,w,c
  9513  002D8E  B4D8               	btfsc	status,2,c
  9514  002D90  EFCC  F016         	goto	u6991
  9515  002D94  EFCE  F016         	goto	u6990
  9516  002D98                     u6991:
  9517  002D98  EF74  F016         	goto	l6378
  9518  002D9C                     u6990:
  9519  002D9C                     
  9520                           ; BSR set to: 1
  9521  002D9C  0E0B               	movlw	11
  9522  002D9E  180D               	xorwf	rx_gps@c^0,w,c
  9523  002DA0  100E               	iorwf	(rx_gps@c+1)^0,w,c
  9524  002DA2  B4D8               	btfsc	status,2,c
  9525  002DA4  EFD6  F016         	goto	u7001
  9526  002DA8  EFD8  F016         	goto	u7000
  9527  002DAC                     u7001:
  9528  002DAC  EF74  F016         	goto	l6378
  9529  002DB0                     u7000:
  9530  002DB0                     
  9531                           ; BSR set to: 1
  9532  002DB0  0E0D               	movlw	13
  9533  002DB2  180D               	xorwf	rx_gps@c^0,w,c
  9534  002DB4  100E               	iorwf	(rx_gps@c+1)^0,w,c
  9535  002DB6  B4D8               	btfsc	status,2,c
  9536  002DB8  EFE0  F016         	goto	u7011
  9537  002DBC  EFE2  F016         	goto	u7010
  9538  002DC0                     u7011:
  9539  002DC0  EF74  F016         	goto	l6378
  9540  002DC4                     u7010:
  9541  002DC4                     
  9542                           ; BSR set to: 1
  9543  002DC4  0E10               	movlw	16
  9544  002DC6  180D               	xorwf	rx_gps@c^0,w,c
  9545  002DC8  100E               	iorwf	(rx_gps@c+1)^0,w,c
  9546  002DCA  B4D8               	btfsc	status,2,c
  9547  002DCC  EFEA  F016         	goto	u7021
  9548  002DD0  EFEC  F016         	goto	u7020
  9549  002DD4                     u7021:
  9550  002DD4  EF74  F016         	goto	l6378
  9551  002DD8                     u7020:
  9552  002DD8                     
  9553                           ; BSR set to: 1
  9554  002DD8  0E13               	movlw	19
  9555  002DDA  180D               	xorwf	rx_gps@c^0,w,c
  9556  002DDC  100E               	iorwf	(rx_gps@c+1)^0,w,c
  9557  002DDE  B4D8               	btfsc	status,2,c
  9558  002DE0  EFF4  F016         	goto	u7031
  9559  002DE4  EFF6  F016         	goto	u7030
  9560  002DE8                     u7031:
  9561  002DE8  EF74  F016         	goto	l6378
  9562  002DEC                     u7030:
  9563  002DEC                     
  9564                           ; BSR set to: 1
  9565  002DEC  0E21               	movlw	33
  9566  002DEE  180D               	xorwf	rx_gps@c^0,w,c
  9567  002DF0  100E               	iorwf	(rx_gps@c+1)^0,w,c
  9568  002DF2  B4D8               	btfsc	status,2,c
  9569  002DF4  EFFE  F016         	goto	u7041
  9570  002DF8  EF00  F017         	goto	u7040
  9571  002DFC                     u7041:
  9572  002DFC  EF74  F016         	goto	l6378
  9573  002E00                     u7040:
  9574  002E00                     
  9575                           ; BSR set to: 1
  9576  002E00  0E27               	movlw	39
  9577  002E02  180D               	xorwf	rx_gps@c^0,w,c
  9578  002E04  100E               	iorwf	(rx_gps@c+1)^0,w,c
  9579  002E06  B4D8               	btfsc	status,2,c
  9580  002E08  EF08  F017         	goto	u7051
  9581  002E0C  EF0A  F017         	goto	u7050
  9582  002E10                     u7051:
  9583  002E10  EF74  F016         	goto	l6378
  9584  002E14                     u7050:
  9585  002E14                     
  9586                           ; BSR set to: 1
  9587  002E14  0E28               	movlw	40
  9588  002E16  180D               	xorwf	rx_gps@c^0,w,c
  9589  002E18  100E               	iorwf	(rx_gps@c+1)^0,w,c
  9590  002E1A  A4D8               	btfss	status,2,c
  9591  002E1C  EF12  F017         	goto	u7061
  9592  002E20  EF14  F017         	goto	u7060
  9593  002E24                     u7061:
  9594  002E24  EF83  F016         	goto	l6384
  9595  002E28                     u7060:
  9596  002E28  EF74  F016         	goto	l6378
  9597  002E2C                     l780:
  9598                           
  9599                           ; BSR set to: 1
  9600                           ;src/gps.c: 126:   ubx_id = c;
  9601  002E2C  C00D  F1A8         	movff	rx_gps@c,_ubx_id
  9602  002E30  EF74  F016         	goto	l6378
  9603  002E34                     l781:
  9604                           
  9605                           ; BSR set to: 1
  9606                           ;src/gps.c: 131:   len_lsb = c;
  9607  002E34  C00D  F19C         	movff	rx_gps@c,rx_gps@len_lsb
  9608  002E38  C00E  F19D         	movff	rx_gps@c+1,rx_gps@len_lsb+1
  9609  002E3C  EF74  F016         	goto	l6378
  9610  002E40                     l782:
  9611                           
  9612                           ; BSR set to: 1
  9613                           ;src/gps.c: 136:   ubx_len = c;
  9614  002E40  C00D  F1A0         	movff	rx_gps@c,_ubx_len
  9615  002E44  C00E  F1A1         	movff	rx_gps@c+1,_ubx_len+1
  9616  002E48                     
  9617                           ; BSR set to: 1
  9618                           ;src/gps.c: 137:   ubx_len <<= 8;
  9619  002E48  51A0               	movf	_ubx_len& (0+255),w,b
  9620  002E4A  6FA1               	movwf	(_ubx_len+1)& (0+255),b
  9621  002E4C  6BA0               	clrf	_ubx_len& (0+255),b
  9622  002E4E                     
  9623                           ; BSR set to: 1
  9624                           ;src/gps.c: 138:   ubx_len |= len_lsb;
  9625  002E4E  519C               	movf	rx_gps@len_lsb& (0+255),w,b
  9626  002E50  13A0               	iorwf	_ubx_len& (0+255),f,b
  9627  002E52  519D               	movf	(rx_gps@len_lsb+1)& (0+255),w,b
  9628  002E54  13A1               	iorwf	(_ubx_len+1)& (0+255),f,b
  9629  002E56  EF74  F016         	goto	l6378
  9630  002E5A                     l6432:
  9631  002E5A  0101               	movlb	1	; () banked
  9632  002E5C  51A6               	movf	rx_gps@stat& (0+255),w,b
  9633  002E5E  6E0F               	movwf	??_rx_gps^0,c
  9634  002E60  6A10               	clrf	(??_rx_gps+1)^0,c
  9635                           
  9636                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9637                           ; Switch size 1, requested type "simple"
  9638                           ; Number of cases is 1, Range of values is 0 to 0
  9639                           ; switch strategies available:
  9640                           ; Name         Instructions Cycles
  9641                           ; simple_byte            4     3 (average)
  9642                           ;	Chosen strategy is simple_byte
  9643  002E62  5010               	movf	(??_rx_gps+1)^0,w,c
  9644  002E64  0A00               	xorlw	0	; case 0
  9645  002E66  B4D8               	btfsc	status,2,c
  9646  002E68  EF38  F017         	goto	l10270
  9647  002E6C  EF57  F017         	goto	l784
  9648  002E70                     l10270:
  9649                           
  9650                           ; BSR set to: 1
  9651                           ; Switch size 1, requested type "simple"
  9652                           ; Number of cases is 7, Range of values is 0 to 6
  9653                           ; switch strategies available:
  9654                           ; Name         Instructions Cycles
  9655                           ; simple_byte           22    12 (average)
  9656                           ;	Chosen strategy is simple_byte
  9657  002E70  500F               	movf	??_rx_gps^0,w,c
  9658  002E72  0A00               	xorlw	0	; case 0
  9659  002E74  B4D8               	btfsc	status,2,c
  9660  002E76  EF6A  F016         	goto	l6376
  9661  002E7A  0A01               	xorlw	1	; case 1
  9662  002E7C  B4D8               	btfsc	status,2,c
  9663  002E7E  EF77  F016         	goto	l6380
  9664  002E82  0A03               	xorlw	3	; case 2
  9665  002E84  B4D8               	btfsc	status,2,c
  9666  002E86  EF87  F016         	goto	l775
  9667  002E8A  0A01               	xorlw	1	; case 3
  9668  002E8C  B4D8               	btfsc	status,2,c
  9669  002E8E  EF16  F017         	goto	l780
  9670  002E92  0A07               	xorlw	7	; case 4
  9671  002E94  B4D8               	btfsc	status,2,c
  9672  002E96  EF1A  F017         	goto	l781
  9673  002E9A  0A01               	xorlw	1	; case 5
  9674  002E9C  B4D8               	btfsc	status,2,c
  9675  002E9E  EF20  F017         	goto	l782
  9676  002EA2  0A03               	xorlw	3	; case 6
  9677  002EA4  B4D8               	btfsc	status,2,c
  9678  002EA6  EF83  F016         	goto	l6384
  9679  002EAA  EF57  F017         	goto	l784
  9680  002EAE                     l784:
  9681                           
  9682                           ; BSR set to: 1
  9683  002EAE  0012               	return		;funcret
  9684  002EB0                     __end_of_rx_gps:
  9685                           	opt callstack 0
  9686                           
  9687 ;; *************** function _lnb_configure *****************
  9688 ;; Defined at:
  9689 ;;		line 14 in file "src/driver/lnb.c"
  9690 ;; Parameters:    Size  Location     Type
  9691 ;;  i2c             2  102[BANK0 ] PTR struct i2c_dev__
  9692 ;;		 -> g_i2c_bus(8), 
  9693 ;;  addr            1  104[BANK0 ] unsigned char 
  9694 ;; Auto vars:     Size  Location     Type
  9695 ;;  res             2  107[BANK0 ] int 
  9696 ;; Return value:  Size  Location     Type
  9697 ;;                  1    wreg      void 
  9698 ;; Registers used:
  9699 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9700 ;; Tracked objects:
  9701 ;;		On entry : 0/0
  9702 ;;		On exit  : 0/0
  9703 ;;		Unchanged: 0/0
  9704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9705 ;;      Params:         0       3       0       0       0       0       0
  9706 ;;      Locals:         0       2       0       0       0       0       0
  9707 ;;      Temps:          0       2       0       0       0       0       0
  9708 ;;      Totals:         0       7       0       0       0       0       0
  9709 ;;Total ram usage:        7 bytes
  9710 ;; Hardware stack levels used:    1
  9711 ;; Hardware stack levels required when called:   15
  9712 ;; This function calls:
  9713 ;;		_check_LNB_status
  9714 ;;		_i2c_probe_addr
  9715 ;;		_lnb_do_configure
  9716 ;;		_printf
  9717 ;; This function is called by:
  9718 ;;		_main
  9719 ;; This function uses a non-reentrant model
  9720 ;;
  9721                           
  9722                           	psect	text26
  9723  00540E                     __ptext26:
  9724                           	opt callstack 0
  9725  00540E                     _lnb_configure:
  9726                           	opt callstack 15
  9727  00540E                     
  9728                           ;src/driver/lnb.c: 14: void lnb_configure(i2c_dev i2c, u8 addr);src/driver/lnb.c: 15: {;
      +                          src/driver/lnb.c: 16:     int res = i2c_probe_addr(i2c, addr);
  9729  00540E  C0E6  F0CB         	movff	lnb_configure@i2c,i2c_probe_addr@dev
  9730  005412  C0E7  F0CC         	movff	lnb_configure@i2c+1,i2c_probe_addr@dev+1
  9731  005416  C0E8  F0CD         	movff	lnb_configure@addr,i2c_probe_addr@addr
  9732  00541A  EC2D  F031         	call	_i2c_probe_addr	;wreg free
  9733  00541E  C0CB  F0EB         	movff	?_i2c_probe_addr,lnb_configure@res
  9734  005422  C0CC  F0EC         	movff	?_i2c_probe_addr+1,lnb_configure@res+1
  9735  005426                     
  9736                           ;src/driver/lnb.c: 17:     if(res == 0)
  9737  005426  0100               	movlb	0	; () banked
  9738  005428  51EB               	movf	lnb_configure@res& (0+255),w,b
  9739  00542A  11EC               	iorwf	(lnb_configure@res+1)& (0+255),w,b
  9740  00542C  A4D8               	btfss	status,2,c
  9741  00542E  EF1B  F02A         	goto	u11031
  9742  005432  EF1D  F02A         	goto	u11030
  9743  005436                     u11031:
  9744  005436  EF55  F02A         	goto	l9296
  9745  00543A                     u11030:
  9746  00543A                     
  9747                           ; BSR set to: 0
  9748                           ;src/driver/lnb.c: 18:  {;src/driver/lnb.c: 19:   printf("LNB Chip found\n");
  9749  00543A  0EC4               	movlw	low STR_10
  9750  00543C  6F95               	movwf	printf@fmt& (0+255),b
  9751  00543E  0E7C               	movlw	high STR_10
  9752  005440  6F96               	movwf	(printf@fmt+1)& (0+255),b
  9753  005442  ECA7  F032         	call	_printf	;wreg free
  9754  005446                     
  9755                           ;src/driver/lnb.c: 20:   lnb_do_configure(i2c, addr);
  9756  005446  C0E6  F0DF         	movff	lnb_configure@i2c,lnb_do_configure@i2c
  9757  00544A  C0E7  F0E0         	movff	lnb_configure@i2c+1,lnb_do_configure@i2c+1
  9758  00544E  C0E8  F0E1         	movff	lnb_configure@addr,lnb_do_configure@addr
  9759  005452  EC20  F01F         	call	_lnb_do_configure	;wreg free
  9760  005456                     
  9761                           ;src/driver/lnb.c: 21:   _delaywdt((unsigned long)((250)*(8000000/4000.0)));
  9762  005456  0E02               	movlw	2
  9763  005458  0100               	movlb	0	; () banked
  9764  00545A  6FEA               	movwf	(??_lnb_configure+1)& (0+255),b
  9765  00545C  0EE8               	movlw	232
  9766  00545E  6FE9               	movwf	??_lnb_configure& (0+255),b
  9767  005460  0E51               	movlw	81
  9768  005462                     u12107:
  9769  005462  0004               	clrwdt	
  9770  005464  2EE8               	decfsz	wreg,f,c
  9771  005466  D7FD               	bra	u12107
  9772  005468  2FE9               	decfsz	??_lnb_configure& (0+255),f,b
  9773  00546A  D7FB               	bra	u12107
  9774  00546C  2FEA               	decfsz	(??_lnb_configure+1)& (0+255),f,b
  9775  00546E  D7F9               	bra	u12107
  9776  005470  0004               	clrwdt	
  9777  005472  F000               	nop	
  9778  005474  0004               	clrwdt	
  9779  005476                     
  9780                           ;src/driver/lnb.c: 22:   if(!check_LNB_status(i2c, addr))
  9781  005476  C0E6  F0DF         	movff	lnb_configure@i2c,check_LNB_status@i2c
  9782  00547A  C0E7  F0E0         	movff	lnb_configure@i2c+1,check_LNB_status@i2c+1
  9783  00547E  C0E8  F0E1         	movff	lnb_configure@addr,check_LNB_status@addr
  9784  005482  EC75  F021         	call	_check_LNB_status	;wreg free
  9785  005486  0900               	iorlw	0
  9786  005488  A4D8               	btfss	status,2,c
  9787  00548A  EF49  F02A         	goto	u11041
  9788  00548E  EF4B  F02A         	goto	u11040
  9789  005492                     u11041:
  9790  005492  EF5B  F02A         	goto	l368
  9791  005496                     u11040:
  9792  005496                     
  9793                           ;src/driver/lnb.c: 23:   {;src/driver/lnb.c: 25:    lnb_do_configure(i2c, addr);
  9794  005496  C0E6  F0DF         	movff	lnb_configure@i2c,lnb_do_configure@i2c
  9795  00549A  C0E7  F0E0         	movff	lnb_configure@i2c+1,lnb_do_configure@i2c+1
  9796  00549E  C0E8  F0E1         	movff	lnb_configure@addr,lnb_do_configure@addr
  9797  0054A2  EC20  F01F         	call	_lnb_do_configure	;wreg free
  9798  0054A6  EF5B  F02A         	goto	l368
  9799  0054AA                     l9296:
  9800                           
  9801                           ; BSR set to: 0
  9802                           ;src/driver/lnb.c: 29:  {;src/driver/lnb.c: 30:         printf("LNB Chip not found!\n");
  9803  0054AA  0EEE               	movlw	low STR_11
  9804  0054AC  6F95               	movwf	printf@fmt& (0+255),b
  9805  0054AE  0E7B               	movlw	high STR_11
  9806  0054B0  6F96               	movwf	(printf@fmt+1)& (0+255),b
  9807  0054B2  ECA7  F032         	call	_printf	;wreg free
  9808  0054B6                     l368:
  9809  0054B6  0012               	return		;funcret
  9810  0054B8                     __end_of_lnb_configure:
  9811                           	opt callstack 0
  9812                           
  9813 ;; *************** function _lnb_do_configure *****************
  9814 ;; Defined at:
  9815 ;;		line 36 in file "src/driver/lnb.c"
  9816 ;; Parameters:    Size  Location     Type
  9817 ;;  i2c             2   95[BANK0 ] PTR struct i2c_dev__
  9818 ;;		 -> g_i2c_bus(8), 
  9819 ;;  addr            1   97[BANK0 ] unsigned char 
  9820 ;; Auto vars:     Size  Location     Type
  9821 ;;  res             2   99[BANK0 ] int 
  9822 ;;  value           1   98[BANK0 ] unsigned char 
  9823 ;; Return value:  Size  Location     Type
  9824 ;;                  2   95[BANK0 ] int 
  9825 ;; Registers used:
  9826 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9827 ;; Tracked objects:
  9828 ;;		On entry : 0/0
  9829 ;;		On exit  : 0/0
  9830 ;;		Unchanged: 0/0
  9831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9832 ;;      Params:         0       3       0       0       0       0       0
  9833 ;;      Locals:         0       3       0       0       0       0       0
  9834 ;;      Temps:          0       0       0       0       0       0       0
  9835 ;;      Totals:         0       6       0       0       0       0       0
  9836 ;;Total ram usage:        6 bytes
  9837 ;; Hardware stack levels used:    1
  9838 ;; Hardware stack levels required when called:   14
  9839 ;; This function calls:
  9840 ;;		_printf
  9841 ;;		_smbus8_read_byte
  9842 ;;		_smbus8_write_byte
  9843 ;; This function is called by:
  9844 ;;		_lnb_configure
  9845 ;; This function uses a non-reentrant model
  9846 ;;
  9847                           
  9848                           	psect	text27
  9849  003E40                     __ptext27:
  9850                           	opt callstack 0
  9851  003E40                     _lnb_do_configure:
  9852                           	opt callstack 15
  9853  003E40                     
  9854                           ;src/driver/lnb.c: 36: static int lnb_do_configure(i2c_dev i2c, u8 addr);src/driver/lnb.
      +                          c: 37: {;src/driver/lnb.c: 38:     u8 value;;src/driver/lnb.c: 39:     int res;;src/driv
      +                          er/lnb.c: 43:     res = smbus8_write_byte(i2c, addr, 0x02, 0x84);
  9855  003E40  C0DF  F0CB         	movff	lnb_do_configure@i2c,smbus8_write_byte@dev
  9856  003E44  C0E0  F0CC         	movff	lnb_do_configure@i2c+1,smbus8_write_byte@dev+1
  9857  003E48  C0E1  F0CD         	movff	lnb_do_configure@addr,smbus8_write_byte@addr
  9858  003E4C  0E02               	movlw	2
  9859  003E4E  0100               	movlb	0	; () banked
  9860  003E50  6FCE               	movwf	smbus8_write_byte@reg& (0+255),b
  9861  003E52  0E84               	movlw	132
  9862  003E54  6FCF               	movwf	smbus8_write_byte@data& (0+255),b
  9863  003E56  EC7B  F030         	call	_smbus8_write_byte	;wreg free
  9864  003E5A  C0CB  F0E3         	movff	?_smbus8_write_byte,lnb_do_configure@res
  9865  003E5E  C0CC  F0E4         	movff	?_smbus8_write_byte+1,lnb_do_configure@res+1
  9866  003E62                     
  9867                           ;src/driver/lnb.c: 44:     if(res == 0)
  9868  003E62  0100               	movlb	0	; () banked
  9869  003E64  51E3               	movf	lnb_do_configure@res& (0+255),w,b
  9870  003E66  11E4               	iorwf	(lnb_do_configure@res+1)& (0+255),w,b
  9871  003E68  A4D8               	btfss	status,2,c
  9872  003E6A  EF39  F01F         	goto	u10721
  9873  003E6E  EF3B  F01F         	goto	u10720
  9874  003E72                     u10721:
  9875  003E72  EFA3  F01F         	goto	l9056
  9876  003E76                     u10720:
  9877  003E76                     
  9878                           ; BSR set to: 0
  9879                           ;src/driver/lnb.c: 45:  {;src/driver/lnb.c: 46:   res = smbus8_read_byte(i2c, addr, 0x05
      +                          , &value);
  9880  003E76  C0DF  F0CB         	movff	lnb_do_configure@i2c,smbus8_read_byte@dev
  9881  003E7A  C0E0  F0CC         	movff	lnb_do_configure@i2c+1,smbus8_read_byte@dev+1
  9882  003E7E  C0E1  F0CD         	movff	lnb_do_configure@addr,smbus8_read_byte@addr
  9883  003E82  0E05               	movlw	5
  9884  003E84  6FCE               	movwf	smbus8_read_byte@reg& (0+255),b
  9885  003E86  0EE2               	movlw	low lnb_do_configure@value
  9886  003E88  6FCF               	movwf	smbus8_read_byte@data& (0+255),b
  9887  003E8A  0E00               	movlw	high lnb_do_configure@value
  9888  003E8C  6FD0               	movwf	(smbus8_read_byte@data+1)& (0+255),b
  9889  003E8E  ECCE  F02E         	call	_smbus8_read_byte	;wreg free
  9890  003E92  C0CB  F0E3         	movff	?_smbus8_read_byte,lnb_do_configure@res
  9891  003E96  C0CC  F0E4         	movff	?_smbus8_read_byte+1,lnb_do_configure@res+1
  9892  003E9A                     
  9893                           ;src/driver/lnb.c: 47:   if(res == 0)
  9894  003E9A  0100               	movlb	0	; () banked
  9895  003E9C  51E3               	movf	lnb_do_configure@res& (0+255),w,b
  9896  003E9E  11E4               	iorwf	(lnb_do_configure@res+1)& (0+255),w,b
  9897  003EA0  A4D8               	btfss	status,2,c
  9898  003EA2  EF55  F01F         	goto	u10731
  9899  003EA6  EF57  F01F         	goto	u10730
  9900  003EAA                     u10731:
  9901  003EAA  EFA3  F01F         	goto	l9056
  9902  003EAE                     u10730:
  9903  003EAE                     
  9904                           ; BSR set to: 0
  9905                           ;src/driver/lnb.c: 48:   {;src/driver/lnb.c: 49:    value |= (1<<6) | (1<<3);
  9906  003EAE  0E48               	movlw	72
  9907  003EB0  13E2               	iorwf	lnb_do_configure@value& (0+255),f,b
  9908  003EB2                     
  9909                           ; BSR set to: 0
  9910                           ;src/driver/lnb.c: 50:    res = smbus8_write_byte(i2c, addr, 0x05, value);
  9911  003EB2  C0DF  F0CB         	movff	lnb_do_configure@i2c,smbus8_write_byte@dev
  9912  003EB6  C0E0  F0CC         	movff	lnb_do_configure@i2c+1,smbus8_write_byte@dev+1
  9913  003EBA  C0E1  F0CD         	movff	lnb_do_configure@addr,smbus8_write_byte@addr
  9914  003EBE  0E05               	movlw	5
  9915  003EC0  6FCE               	movwf	smbus8_write_byte@reg& (0+255),b
  9916  003EC2  C0E2  F0CF         	movff	lnb_do_configure@value,smbus8_write_byte@data
  9917  003EC6  EC7B  F030         	call	_smbus8_write_byte	;wreg free
  9918  003ECA  C0CB  F0E3         	movff	?_smbus8_write_byte,lnb_do_configure@res
  9919  003ECE  C0CC  F0E4         	movff	?_smbus8_write_byte+1,lnb_do_configure@res+1
  9920  003ED2                     
  9921                           ;src/driver/lnb.c: 51:    if(res == 0)
  9922  003ED2  0100               	movlb	0	; () banked
  9923  003ED4  51E3               	movf	lnb_do_configure@res& (0+255),w,b
  9924  003ED6  11E4               	iorwf	(lnb_do_configure@res+1)& (0+255),w,b
  9925  003ED8  A4D8               	btfss	status,2,c
  9926  003EDA  EF71  F01F         	goto	u10741
  9927  003EDE  EF73  F01F         	goto	u10740
  9928  003EE2                     u10741:
  9929  003EE2  EFA3  F01F         	goto	l9056
  9930  003EE6                     u10740:
  9931  003EE6                     
  9932                           ; BSR set to: 0
  9933                           ;src/driver/lnb.c: 52:    {;src/driver/lnb.c: 53:     res = smbus8_read_byte(i2c, addr, 
      +                          0x04, &value);
  9934  003EE6  C0DF  F0CB         	movff	lnb_do_configure@i2c,smbus8_read_byte@dev
  9935  003EEA  C0E0  F0CC         	movff	lnb_do_configure@i2c+1,smbus8_read_byte@dev+1
  9936  003EEE  C0E1  F0CD         	movff	lnb_do_configure@addr,smbus8_read_byte@addr
  9937  003EF2  0E04               	movlw	4
  9938  003EF4  6FCE               	movwf	smbus8_read_byte@reg& (0+255),b
  9939  003EF6  0EE2               	movlw	low lnb_do_configure@value
  9940  003EF8  6FCF               	movwf	smbus8_read_byte@data& (0+255),b
  9941  003EFA  0E00               	movlw	high lnb_do_configure@value
  9942  003EFC  6FD0               	movwf	(smbus8_read_byte@data+1)& (0+255),b
  9943  003EFE  ECCE  F02E         	call	_smbus8_read_byte	;wreg free
  9944  003F02  C0CB  F0E3         	movff	?_smbus8_read_byte,lnb_do_configure@res
  9945  003F06  C0CC  F0E4         	movff	?_smbus8_read_byte+1,lnb_do_configure@res+1
  9946  003F0A                     
  9947                           ;src/driver/lnb.c: 54:     if(res == 0)
  9948  003F0A  0100               	movlb	0	; () banked
  9949  003F0C  51E3               	movf	lnb_do_configure@res& (0+255),w,b
  9950  003F0E  11E4               	iorwf	(lnb_do_configure@res+1)& (0+255),w,b
  9951  003F10  A4D8               	btfss	status,2,c
  9952  003F12  EF8D  F01F         	goto	u10751
  9953  003F16  EF8F  F01F         	goto	u10750
  9954  003F1A                     u10751:
  9955  003F1A  EFA3  F01F         	goto	l372
  9956  003F1E                     u10750:
  9957  003F1E                     
  9958                           ; BSR set to: 0
  9959                           ;src/driver/lnb.c: 55:     {;src/driver/lnb.c: 56:      value |= (1<<2) | (1<<6);
  9960  003F1E  0E44               	movlw	68
  9961  003F20  13E2               	iorwf	lnb_do_configure@value& (0+255),f,b
  9962  003F22                     
  9963                           ; BSR set to: 0
  9964                           ;src/driver/lnb.c: 57:      res = smbus8_write_byte(i2c, addr, 0x04, value);
  9965  003F22  C0DF  F0CB         	movff	lnb_do_configure@i2c,smbus8_write_byte@dev
  9966  003F26  C0E0  F0CC         	movff	lnb_do_configure@i2c+1,smbus8_write_byte@dev+1
  9967  003F2A  C0E1  F0CD         	movff	lnb_do_configure@addr,smbus8_write_byte@addr
  9968  003F2E  0E04               	movlw	4
  9969  003F30  6FCE               	movwf	smbus8_write_byte@reg& (0+255),b
  9970  003F32  C0E2  F0CF         	movff	lnb_do_configure@value,smbus8_write_byte@data
  9971  003F36  EC7B  F030         	call	_smbus8_write_byte	;wreg free
  9972  003F3A  C0CB  F0E3         	movff	?_smbus8_write_byte,lnb_do_configure@res
  9973  003F3E  C0CC  F0E4         	movff	?_smbus8_write_byte+1,lnb_do_configure@res+1
  9974  003F42  EFA3  F01F         	goto	l9056
  9975  003F46                     l372:
  9976  003F46                     l9056:
  9977                           
  9978                           ;src/driver/lnb.c: 63:  if(res == 0)
  9979  003F46  0100               	movlb	0	; () banked
  9980  003F48  51E3               	movf	lnb_do_configure@res& (0+255),w,b
  9981  003F4A  11E4               	iorwf	(lnb_do_configure@res+1)& (0+255),w,b
  9982  003F4C  A4D8               	btfss	status,2,c
  9983  003F4E  EFAB  F01F         	goto	u10761
  9984  003F52  EFAD  F01F         	goto	u10760
  9985  003F56                     u10761:
  9986  003F56  EFB5  F01F         	goto	l9060
  9987  003F5A                     u10760:
  9988  003F5A                     
  9989                           ; BSR set to: 0
  9990                           ;src/driver/lnb.c: 64:   printf("LNB Chip configured\n");
  9991  003F5A  0E03               	movlw	low STR_12
  9992  003F5C  6F95               	movwf	printf@fmt& (0+255),b
  9993  003F5E  0E7C               	movlw	high STR_12
  9994  003F60  6F96               	movwf	(printf@fmt+1)& (0+255),b
  9995  003F62  ECA7  F032         	call	_printf	;wreg free
  9996  003F66  EFBF  F01F         	goto	l377
  9997  003F6A                     l9060:
  9998                           
  9999                           ; BSR set to: 0
 10000                           ;src/driver/lnb.c: 66:   printf("Failed to configure LNB Chip (%i)\n", res);
 10001  003F6A  0EAB               	movlw	low STR_13
 10002  003F6C  6F95               	movwf	printf@fmt& (0+255),b
 10003  003F6E  0E7A               	movlw	high STR_13
 10004  003F70  6F96               	movwf	(printf@fmt+1)& (0+255),b
 10005  003F72  C0E3  F097         	movff	lnb_do_configure@res,?_printf+2
 10006  003F76  C0E4  F098         	movff	lnb_do_configure@res+1,?_printf+3
 10007  003F7A  ECA7  F032         	call	_printf	;wreg free
 10008  003F7E                     l377:
 10009  003F7E  0012               	return		;funcret
 10010  003F80                     __end_of_lnb_do_configure:
 10011                           	opt callstack 0
 10012                           
 10013 ;; *************** function _check_LNB_status *****************
 10014 ;; Defined at:
 10015 ;;		line 74 in file "src/driver/lnb.c"
 10016 ;; Parameters:    Size  Location     Type
 10017 ;;  i2c             2   95[BANK0 ] PTR struct i2c_dev__
 10018 ;;		 -> g_i2c_bus(8), 
 10019 ;;  addr            1   97[BANK0 ] unsigned char 
 10020 ;; Auto vars:     Size  Location     Type
 10021 ;;  stat            1  101[BANK0 ] unsigned char 
 10022 ;; Return value:  Size  Location     Type
 10023 ;;                  1    wreg      unsigned char 
 10024 ;; Registers used:
 10025 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10026 ;; Tracked objects:
 10027 ;;		On entry : 0/0
 10028 ;;		On exit  : 0/0
 10029 ;;		Unchanged: 0/0
 10030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10031 ;;      Params:         0       3       0       0       0       0       0
 10032 ;;      Locals:         0       1       0       0       0       0       0
 10033 ;;      Temps:          0       3       0       0       0       0       0
 10034 ;;      Totals:         0       7       0       0       0       0       0
 10035 ;;Total ram usage:        7 bytes
 10036 ;; Hardware stack levels used:    1
 10037 ;; Hardware stack levels required when called:   14
 10038 ;; This function calls:
 10039 ;;		_printf
 10040 ;;		_smbus8_read_byte
 10041 ;; This function is called by:
 10042 ;;		_lnb_configure
 10043 ;;		_main
 10044 ;; This function uses a non-reentrant model
 10045 ;;
 10046                           
 10047                           	psect	text28
 10048  0042EA                     __ptext28:
 10049                           	opt callstack 0
 10050  0042EA                     _check_LNB_status:
 10051                           	opt callstack 15
 10052  0042EA                     
 10053                           ;src/driver/lnb.c: 74: u8 check_LNB_status(i2c_dev i2c, u8 addr);src/driver/lnb.c: 75: {
      +                          ;src/driver/lnb.c: 76:  u8 stat;;src/driver/lnb.c: 78:  stat = ((*((PIN_LNB_FAULT)->pPOR
      +                          T) & (PIN_LNB_FAULT)->mask) != 0);
 10054  0042EA  0E79               	movlw	low (_PIN_LNB_FAULT_DEF+4)
 10055  0042EC  6EF6               	movwf	tblptrl,c
 10056  0042EE  0E78               	movlw	high (_PIN_LNB_FAULT_DEF+4)
 10057  0042F0  6EF7               	movwf	tblptrh,c
 10058  0042F2                     	if	0	;tblptru may be non-zero
 10059  0042F2                     	endif
 10060  0042F2                     	if	0	;tblptru may be non-zero
 10061  0042F2                     	endif
 10062  0042F2  0008               	tblrd		*
 10063  0042F4  CFF5 F0E2          	movff	tablat,??_check_LNB_status
 10064  0042F8  0E75               	movlw	low _PIN_LNB_FAULT_DEF
 10065  0042FA  6EF6               	movwf	tblptrl,c
 10066  0042FC                     	if	1	;There is more than 1 active tblptr byte
 10067  0042FC  0E78               	movlw	high _PIN_LNB_FAULT_DEF
 10068  0042FE  6EF7               	movwf	tblptrh,c
 10069  004300                     	endif
 10070  004300                     	if	0	;There are less than 3 active tblptr bytes
 10071  004300                     	endif
 10072  004300  0009               	tblrd		*+
 10073  004302  CFF5 F0E3          	movff	tablat,??_check_LNB_status+1
 10074  004306  0009               	tblrd		*+
 10075  004308  CFF5 F0E4          	movff	tablat,??_check_LNB_status+2
 10076  00430C  C0E3  FFD9         	movff	??_check_LNB_status+1,fsr2l
 10077  004310  C0E4  FFDA         	movff	??_check_LNB_status+2,fsr2h
 10078  004314  50DF               	movf	indf2,w,c
 10079  004316  0100               	movlb	0	; () banked
 10080  004318  15E2               	andwf	??_check_LNB_status& (0+255),w,b
 10081  00431A  0900               	iorlw	0
 10082  00431C  A4D8               	btfss	status,2,c
 10083  00431E  EF93  F021         	goto	u10771
 10084  004322  EF96  F021         	goto	u10770
 10085  004326                     u10771:
 10086  004326  0E01               	movlw	1
 10087  004328  EF97  F021         	goto	u10780
 10088  00432C                     u10770:
 10089  00432C  0E00               	movlw	0
 10090  00432E                     u10780:
 10091  00432E  6FE5               	movwf	check_LNB_status@stat& (0+255),b
 10092  004330                     
 10093                           ; BSR set to: 0
 10094                           ;src/driver/lnb.c: 79:  if(stat != LNB_laststat)
 10095  004330  5071               	movf	_LNB_laststat^0,w,c
 10096  004332  19E5               	xorwf	check_LNB_status@stat& (0+255),w,b
 10097  004334  B4D8               	btfsc	status,2,c
 10098  004336  EF9F  F021         	goto	u10791
 10099  00433A  EFA1  F021         	goto	u10790
 10100  00433E                     u10791:
 10101  00433E  EFFC  F021         	goto	l9082
 10102  004342                     u10790:
 10103  004342                     
 10104                           ; BSR set to: 0
 10105                           ;src/driver/lnb.c: 80:  {;src/driver/lnb.c: 81:   if(stat)
 10106  004342  51E5               	movf	check_LNB_status@stat& (0+255),w,b
 10107  004344  B4D8               	btfsc	status,2,c
 10108  004346  EFA7  F021         	goto	u10801
 10109  00434A  EFA9  F021         	goto	u10800
 10110  00434E                     u10801:
 10111  00434E  EFCA  F021         	goto	l9074
 10112  004352                     u10800:
 10113  004352                     
 10114                           ; BSR set to: 0
 10115                           ;src/driver/lnb.c: 82:   {;src/driver/lnb.c: 83:    printf("LNBH26PQR : OK\n");
 10116  004352  0EB4               	movlw	low STR_14
 10117  004354  6F95               	movwf	printf@fmt& (0+255),b
 10118  004356  0E7C               	movlw	high STR_14
 10119  004358  6F96               	movwf	(printf@fmt+1)& (0+255),b
 10120  00435A  ECA7  F032         	call	_printf	;wreg free
 10121  00435E                     
 10122                           ;src/driver/lnb.c: 84:    *((PIN_LED_LNB_GOOD)->pPORT) &= ~(PIN_LED_LNB_GOOD)->mask;
 10123  00435E  0EB5               	movlw	low (_PIN_LED_LNB_GOOD_DEF+4)
 10124  004360  6EF6               	movwf	tblptrl,c
 10125  004362  0E78               	movlw	high (_PIN_LED_LNB_GOOD_DEF+4)
 10126  004364  6EF7               	movwf	tblptrh,c
 10127  004366                     	if	0	;tblptru may be non-zero
 10128  004366                     	endif
 10129  004366                     	if	0	;tblptru may be non-zero
 10130  004366                     	endif
 10131  004366  0008               	tblrd		*
 10132  004368  50F5               	movf	tablat,w,c
 10133  00436A  0AFF               	xorlw	255
 10134  00436C  0100               	movlb	0	; () banked
 10135  00436E  6FE2               	movwf	??_check_LNB_status& (0+255),b
 10136  004370  0EB1               	movlw	low _PIN_LED_LNB_GOOD_DEF
 10137  004372  6EF6               	movwf	tblptrl,c
 10138  004374                     	if	1	;There is more than 1 active tblptr byte
 10139  004374  0E78               	movlw	high _PIN_LED_LNB_GOOD_DEF
 10140  004376  6EF7               	movwf	tblptrh,c
 10141  004378                     	endif
 10142  004378                     	if	0	;There are less than 3 active tblptr bytes
 10143  004378                     	endif
 10144  004378  0009               	tblrd		*+
 10145  00437A  CFF5 F0E3          	movff	tablat,??_check_LNB_status+1
 10146  00437E  0009               	tblrd		*+
 10147  004380  CFF5 F0E4          	movff	tablat,??_check_LNB_status+2
 10148  004384  C0E3  FFD9         	movff	??_check_LNB_status+1,fsr2l
 10149  004388  C0E4  FFDA         	movff	??_check_LNB_status+2,fsr2h
 10150  00438C  51E2               	movf	??_check_LNB_status& (0+255),w,b
 10151  00438E  16DF               	andwf	indf2,f,c
 10152                           
 10153                           ;src/driver/lnb.c: 85:   }
 10154  004390  EFFA  F021         	goto	l9080
 10155  004394                     l9074:
 10156                           
 10157                           ; BSR set to: 0
 10158                           ;src/driver/lnb.c: 87:   {;src/driver/lnb.c: 89:    smbus8_read_byte(i2c, addr, 0, &LNB_
      +                          error);
 10159  004394  C0DF  F0CB         	movff	check_LNB_status@i2c,smbus8_read_byte@dev
 10160  004398  C0E0  F0CC         	movff	check_LNB_status@i2c+1,smbus8_read_byte@dev+1
 10161  00439C  C0E1  F0CD         	movff	check_LNB_status@addr,smbus8_read_byte@addr
 10162  0043A0  0E00               	movlw	0
 10163  0043A2  6FCE               	movwf	smbus8_read_byte@reg& (0+255),b
 10164  0043A4  0EC4               	movlw	low _LNB_error
 10165  0043A6  6FCF               	movwf	smbus8_read_byte@data& (0+255),b
 10166  0043A8  0E01               	movlw	high _LNB_error
 10167  0043AA  6FD0               	movwf	(smbus8_read_byte@data+1)& (0+255),b
 10168  0043AC  ECCE  F02E         	call	_smbus8_read_byte	;wreg free
 10169  0043B0                     
 10170                           ;src/driver/lnb.c: 90:    printf("LNBH26PQR error: %02X\n",LNB_error);
 10171  0043B0  0EAC               	movlw	low STR_15
 10172  0043B2  0100               	movlb	0	; () banked
 10173  0043B4  6F95               	movwf	printf@fmt& (0+255),b
 10174  0043B6  0E7B               	movlw	high STR_15
 10175  0043B8  6F96               	movwf	(printf@fmt+1)& (0+255),b
 10176  0043BA  C1C4  F097         	movff	_LNB_error,?_printf+2
 10177  0043BE  6B98               	clrf	(?_printf+3)& (0+255),b
 10178  0043C0  ECA7  F032         	call	_printf	;wreg free
 10179  0043C4                     
 10180                           ;src/driver/lnb.c: 91:    *((PIN_LED_LNB_GOOD)->pPORT) |= (PIN_LED_LNB_GOOD)->mask;
 10181  0043C4  0EB5               	movlw	low (_PIN_LED_LNB_GOOD_DEF+4)
 10182  0043C6  6EF6               	movwf	tblptrl,c
 10183  0043C8  0E78               	movlw	high (_PIN_LED_LNB_GOOD_DEF+4)
 10184  0043CA  6EF7               	movwf	tblptrh,c
 10185  0043CC                     	if	0	;tblptru may be non-zero
 10186  0043CC                     	endif
 10187  0043CC                     	if	0	;tblptru may be non-zero
 10188  0043CC                     	endif
 10189  0043CC  0008               	tblrd		*
 10190  0043CE  CFF5 F0E2          	movff	tablat,??_check_LNB_status
 10191  0043D2  0EB1               	movlw	low _PIN_LED_LNB_GOOD_DEF
 10192  0043D4  6EF6               	movwf	tblptrl,c
 10193  0043D6                     	if	1	;There is more than 1 active tblptr byte
 10194  0043D6  0E78               	movlw	high _PIN_LED_LNB_GOOD_DEF
 10195  0043D8  6EF7               	movwf	tblptrh,c
 10196  0043DA                     	endif
 10197  0043DA                     	if	0	;There are less than 3 active tblptr bytes
 10198  0043DA                     	endif
 10199  0043DA  0009               	tblrd		*+
 10200  0043DC  CFF5 F0E3          	movff	tablat,??_check_LNB_status+1
 10201  0043E0  0009               	tblrd		*+
 10202  0043E2  CFF5 F0E4          	movff	tablat,??_check_LNB_status+2
 10203  0043E6  C0E3  FFD9         	movff	??_check_LNB_status+1,fsr2l
 10204  0043EA  C0E4  FFDA         	movff	??_check_LNB_status+2,fsr2h
 10205  0043EE  0100               	movlb	0	; () banked
 10206  0043F0  51E2               	movf	??_check_LNB_status& (0+255),w,b
 10207  0043F2  12DF               	iorwf	indf2,f,c
 10208  0043F4                     l9080:
 10209                           
 10210                           ; BSR set to: 0
 10211                           ;src/driver/lnb.c: 93:   LNB_laststat = stat;
 10212  0043F4  C0E5  F071         	movff	check_LNB_status@stat,_LNB_laststat
 10213  0043F8                     l9082:
 10214                           
 10215                           ; BSR set to: 0
 10216                           ;src/driver/lnb.c: 96:  return stat;
 10217  0043F8  51E5               	movf	check_LNB_status@stat& (0+255),w,b
 10218  0043FA                     
 10219                           ; BSR set to: 0
 10220  0043FA  0012               	return		;funcret
 10221  0043FC                     __end_of_check_LNB_status:
 10222                           	opt callstack 0
 10223                           
 10224 ;; *************** function _lcd_init *****************
 10225 ;; Defined at:
 10226 ;;		line 64 in file "src/driver/lcd.c"
 10227 ;; Parameters:    Size  Location     Type
 10228 ;;  i2c             2  130[BANK1 ] PTR struct i2c_dev__
 10229 ;;		 -> g_i2c_bus(8), 
 10230 ;;  addr            1  132[BANK1 ] unsigned char 
 10231 ;; Auto vars:     Size  Location     Type
 10232 ;;  res             2  133[BANK1 ] int 
 10233 ;; Return value:  Size  Location     Type
 10234 ;;                  1    wreg      void 
 10235 ;; Registers used:
 10236 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10237 ;; Tracked objects:
 10238 ;;		On entry : 0/0
 10239 ;;		On exit  : 0/0
 10240 ;;		Unchanged: 0/0
 10241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10242 ;;      Params:         0       0       3       0       0       0       0
 10243 ;;      Locals:         0       0       2       0       0       0       0
 10244 ;;      Temps:          0       0       0       0       0       0       0
 10245 ;;      Totals:         0       0       5       0       0       0       0
 10246 ;;Total ram usage:        5 bytes
 10247 ;; Hardware stack levels used:    1
 10248 ;; Hardware stack levels required when called:   19
 10249 ;; This function calls:
 10250 ;;		_i2c_probe_addr
 10251 ;;		_lcd_clear_screen
 10252 ;;		_print_string
 10253 ;;		_printf
 10254 ;;		_ssd1306_command
 10255 ;;		_ssd1306_commandbyte
 10256 ;; This function is called by:
 10257 ;;		_main
 10258 ;; This function uses a non-reentrant model
 10259 ;;
 10260                           
 10261                           	psect	text29
 10262  004508                     __ptext29:
 10263                           	opt callstack 0
 10264  004508                     _lcd_init:
 10265                           	opt callstack 11
 10266  004508                     
 10267                           ;src/driver/lcd.c: 64: void lcd_init(i2c_dev i2c, u8 addr);src/driver/lcd.c: 65: {;src/d
      +                          river/lcd.c: 66:  int res = i2c_probe_addr(i2c, addr);
 10268  004508  C182  F0CB         	movff	lcd_init@i2c,i2c_probe_addr@dev
 10269  00450C  C183  F0CC         	movff	lcd_init@i2c+1,i2c_probe_addr@dev+1
 10270  004510  C184  F0CD         	movff	lcd_init@addr,i2c_probe_addr@addr
 10271  004514  EC2D  F031         	call	_i2c_probe_addr	;wreg free
 10272  004518  C0CB  F185         	movff	?_i2c_probe_addr,lcd_init@res
 10273  00451C  C0CC  F186         	movff	?_i2c_probe_addr+1,lcd_init@res+1
 10274  004520                     
 10275                           ;src/driver/lcd.c: 67:     if(res != 0)
 10276  004520  0101               	movlb	1	; () banked
 10277  004522  5185               	movf	lcd_init@res& (0+255),w,b
 10278  004524  1186               	iorwf	(lcd_init@res+1)& (0+255),w,b
 10279  004526  B4D8               	btfsc	status,2,c
 10280  004528  EF98  F022         	goto	u11151
 10281  00452C  EF9A  F022         	goto	u11150
 10282  004530                     u11151:
 10283  004530  EFA5  F022         	goto	l9410
 10284  004534                     u11150:
 10285  004534                     
 10286                           ; BSR set to: 1
 10287                           ;src/driver/lcd.c: 68:  {;src/driver/lcd.c: 69:         printf("OLED display not found.\
      +                          n");
 10288  004534  0E62               	movlw	low STR_29
 10289  004536  0100               	movlb	0	; () banked
 10290  004538  6F95               	movwf	printf@fmt& (0+255),b
 10291  00453A  0E7B               	movlw	high STR_29
 10292  00453C  6F96               	movwf	(printf@fmt+1)& (0+255),b
 10293  00453E  ECA7  F032         	call	_printf	;wreg free
 10294  004542                     
 10295                           ;src/driver/lcd.c: 70:   lcd_available = 0;
 10296  004542  0E00               	movlw	0
 10297  004544  6E6F               	movwf	_lcd_available^0,c
 10298  004546  EF06  F023         	goto	l605
 10299  00454A                     l9410:
 10300                           
 10301                           ; BSR set to: 1
 10302                           ;src/driver/lcd.c: 74:  lcd_i2c = i2c;
 10303  00454A  C182  F1A4         	movff	lcd_init@i2c,_lcd_i2c
 10304  00454E  C183  F1A5         	movff	lcd_init@i2c+1,_lcd_i2c+1
 10305  004552                     
 10306                           ; BSR set to: 1
 10307                           ;src/driver/lcd.c: 75:  lcd_addr = addr;
 10308  004552  C184  F070         	movff	lcd_init@addr,_lcd_addr
 10309  004556                     
 10310                           ; BSR set to: 1
 10311                           ;src/driver/lcd.c: 77:  printf("OLED display found!\n");
 10312  004556  0ED9               	movlw	low STR_30
 10313  004558  0100               	movlb	0	; () banked
 10314  00455A  6F95               	movwf	printf@fmt& (0+255),b
 10315  00455C  0E7B               	movlw	high STR_30
 10316  00455E  6F96               	movwf	(printf@fmt+1)& (0+255),b
 10317  004560  ECA7  F032         	call	_printf	;wreg free
 10318  004564                     
 10319                           ;src/driver/lcd.c: 78:  lcd_available = 1;
 10320  004564  0E01               	movlw	1
 10321  004566  6E6F               	movwf	_lcd_available^0,c
 10322  004568                     
 10323                           ;src/driver/lcd.c: 81:  ssd1306_command(ssd1306_init_commands,sizeof(ssd1306_init_comman
      +                          ds));
 10324  004568  0E89               	movlw	low _ssd1306_init_commands
 10325  00456A  0100               	movlb	0	; () banked
 10326  00456C  6FE1               	movwf	ssd1306_command@cmd& (0+255),b
 10327  00456E  0E02               	movlw	high _ssd1306_init_commands
 10328  004570  6FE2               	movwf	(ssd1306_command@cmd+1)& (0+255),b
 10329  004572  0E00               	movlw	0
 10330  004574  6FE4               	movwf	(ssd1306_command@len+1)& (0+255),b
 10331  004576  0E1B               	movlw	27
 10332  004578  6FE3               	movwf	ssd1306_command@len& (0+255),b
 10333  00457A  EC8D  F031         	call	_ssd1306_command	;wreg free
 10334  00457E                     
 10335                           ;src/driver/lcd.c: 83:  ssd1306_commandbyte(0x40 | 0x0);
 10336  00457E  0E40               	movlw	64
 10337  004580  EC76  F032         	call	_ssd1306_commandbyte
 10338  004584                     
 10339                           ;src/driver/lcd.c: 86:  lcd_clear_screen(0);
 10340  004584  0E00               	movlw	0
 10341  004586  EC0A  F02E         	call	_lcd_clear_screen
 10342  00458A                     
 10343                           ;src/driver/lcd.c: 87:  print_string("AMSAT-DL  QO-100",0,0,0);
 10344  00458A  0EA3               	movlw	low STR_31
 10345  00458C  0101               	movlb	1	; () banked
 10346  00458E  6F10               	movwf	print_string@s& (0+255),b
 10347  004590  0E7C               	movlw	high STR_31
 10348  004592  6F11               	movwf	(print_string@s+1)& (0+255),b
 10349  004594  0E00               	movlw	0
 10350  004596  6F12               	movwf	print_string@x& (0+255),b
 10351  004598  0E00               	movlw	0
 10352  00459A  6F13               	movwf	print_string@y& (0+255),b
 10353  00459C  0E00               	movlw	0
 10354  00459E  6F14               	movwf	print_string@underline& (0+255),b
 10355  0045A0  EC95  F02B         	call	_print_string	;wreg free
 10356  0045A4                     
 10357                           ;src/driver/lcd.c: 88:  print_string("WELCOME to:",0,2,0);
 10358  0045A4  0E47               	movlw	low STR_32
 10359  0045A6  0101               	movlb	1	; () banked
 10360  0045A8  6F10               	movwf	print_string@s& (0+255),b
 10361  0045AA  0E7D               	movlw	high STR_32
 10362  0045AC  6F11               	movwf	(print_string@s+1)& (0+255),b
 10363  0045AE  0E00               	movlw	0
 10364  0045B0  6F12               	movwf	print_string@x& (0+255),b
 10365  0045B2  0E02               	movlw	2
 10366  0045B4  6F13               	movwf	print_string@y& (0+255),b
 10367  0045B6  0E00               	movlw	0
 10368  0045B8  6F14               	movwf	print_string@underline& (0+255),b
 10369  0045BA  EC95  F02B         	call	_print_string	;wreg free
 10370  0045BE                     
 10371                           ;src/driver/lcd.c: 89:  print_string("GPS/OCXO clock",0,4,0);
 10372  0045BE  0EE4               	movlw	low STR_33
 10373  0045C0  0101               	movlb	1	; () banked
 10374  0045C2  6F10               	movwf	print_string@s& (0+255),b
 10375  0045C4  0E7C               	movlw	high STR_33
 10376  0045C6  6F11               	movwf	(print_string@s+1)& (0+255),b
 10377  0045C8  0E00               	movlw	0
 10378  0045CA  6F12               	movwf	print_string@x& (0+255),b
 10379  0045CC  0E04               	movlw	4
 10380  0045CE  6F13               	movwf	print_string@y& (0+255),b
 10381  0045D0  0E00               	movlw	0
 10382  0045D2  6F14               	movwf	print_string@underline& (0+255),b
 10383  0045D4  EC95  F02B         	call	_print_string	;wreg free
 10384  0045D8                     
 10385                           ;src/driver/lcd.c: 90:  print_string("LNB Controller",0,5,0);
 10386  0045D8  0EF3               	movlw	low STR_34
 10387  0045DA  0101               	movlb	1	; () banked
 10388  0045DC  6F10               	movwf	print_string@s& (0+255),b
 10389  0045DE  0E7C               	movlw	high STR_34
 10390  0045E0  6F11               	movwf	(print_string@s+1)& (0+255),b
 10391  0045E2  0E00               	movlw	0
 10392  0045E4  6F12               	movwf	print_string@x& (0+255),b
 10393  0045E6  0E05               	movlw	5
 10394  0045E8  6F13               	movwf	print_string@y& (0+255),b
 10395  0045EA  0E00               	movlw	0
 10396  0045EC  6F14               	movwf	print_string@underline& (0+255),b
 10397  0045EE  EC95  F02B         	call	_print_string	;wreg free
 10398  0045F2                     
 10399                           ;src/driver/lcd.c: 91:  print_string("Downconverter",0,6,0);
 10400  0045F2  0E11               	movlw	low STR_35
 10401  0045F4  0101               	movlb	1	; () banked
 10402  0045F6  6F10               	movwf	print_string@s& (0+255),b
 10403  0045F8  0E7D               	movlw	high STR_35
 10404  0045FA  6F11               	movwf	(print_string@s+1)& (0+255),b
 10405  0045FC  0E00               	movlw	0
 10406  0045FE  6F12               	movwf	print_string@x& (0+255),b
 10407  004600  0E06               	movlw	6
 10408  004602  6F13               	movwf	print_string@y& (0+255),b
 10409  004604  0E00               	movlw	0
 10410  004606  6F14               	movwf	print_string@underline& (0+255),b
 10411  004608  EC95  F02B         	call	_print_string	;wreg free
 10412  00460C                     l605:
 10413  00460C  0012               	return		;funcret
 10414  00460E                     __end_of_lcd_init:
 10415                           	opt callstack 0
 10416                           
 10417 ;; *************** function _ssd1306_commandbyte *****************
 10418 ;; Defined at:
 10419 ;;		line 101 in file "src/driver/lcd.c"
 10420 ;; Parameters:    Size  Location     Type
 10421 ;;  cmd             1    wreg     unsigned char 
 10422 ;; Auto vars:     Size  Location     Type
 10423 ;;  cmd             1   89[BANK0 ] unsigned char 
 10424 ;; Return value:  Size  Location     Type
 10425 ;;                  1    wreg      void 
 10426 ;; Registers used:
 10427 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10428 ;; Tracked objects:
 10429 ;;		On entry : 0/0
 10430 ;;		On exit  : 0/0
 10431 ;;		Unchanged: 0/0
 10432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10433 ;;      Params:         0       0       0       0       0       0       0
 10434 ;;      Locals:         0       1       0       0       0       0       0
 10435 ;;      Temps:          0       0       0       0       0       0       0
 10436 ;;      Totals:         0       1       0       0       0       0       0
 10437 ;;Total ram usage:        1 bytes
 10438 ;; Hardware stack levels used:    1
 10439 ;; Hardware stack levels required when called:   14
 10440 ;; This function calls:
 10441 ;;		_smbus8_write_byte
 10442 ;; This function is called by:
 10443 ;;		_lcd_init
 10444 ;; This function uses a non-reentrant model
 10445 ;;
 10446                           
 10447                           	psect	text30
 10448  0064EC                     __ptext30:
 10449                           	opt callstack 0
 10450  0064EC                     _ssd1306_commandbyte:
 10451                           	opt callstack 15
 10452                           
 10453                           ;incstack = 0
 10454                           ;ssd1306_commandbyte@cmd stored from wreg
 10455  0064EC  0100               	movlb	0	; () banked
 10456  0064EE  6FD9               	movwf	ssd1306_commandbyte@cmd& (0+255),b
 10457  0064F0                     
 10458                           ;src/driver/lcd.c: 101: void ssd1306_commandbyte(u8 cmd);src/driver/lcd.c: 102: {;src/dr
      +                          iver/lcd.c: 103:  if(!lcd_available) return;
 10459  0064F0  506F               	movf	_lcd_available^0,w,c
 10460  0064F2  A4D8               	btfss	status,2,c
 10461  0064F4  EF7E  F032         	goto	u10861
 10462  0064F8  EF80  F032         	goto	u10860
 10463  0064FC                     u10861:
 10464  0064FC  EF82  F032         	goto	l9112
 10465  006500                     u10860:
 10466  006500  EF8F  F032         	goto	l613
 10467  006504                     l9112:
 10468                           
 10469                           ;src/driver/lcd.c: 104:  smbus8_write_byte(lcd_i2c, lcd_addr, 0x00, cmd);
 10470  006504  C1A4  F0CB         	movff	_lcd_i2c,smbus8_write_byte@dev
 10471  006508  C1A5  F0CC         	movff	_lcd_i2c+1,smbus8_write_byte@dev+1
 10472  00650C  C070  F0CD         	movff	_lcd_addr,smbus8_write_byte@addr
 10473  006510  0E00               	movlw	0
 10474  006512  0100               	movlb	0	; () banked
 10475  006514  6FCE               	movwf	smbus8_write_byte@reg& (0+255),b
 10476  006516  C0D9  F0CF         	movff	ssd1306_commandbyte@cmd,smbus8_write_byte@data
 10477  00651A  EC7B  F030         	call	_smbus8_write_byte	;wreg free
 10478  00651E                     l613:
 10479  00651E  0012               	return		;funcret
 10480  006520                     __end_of_ssd1306_commandbyte:
 10481                           	opt callstack 0
 10482                           
 10483 ;; *************** function _smbus8_write_byte *****************
 10484 ;; Defined at:
 10485 ;;		line 65 in file "src/driver/base/i2c.c"
 10486 ;; Parameters:    Size  Location     Type
 10487 ;;  dev             2   75[BANK0 ] PTR struct i2c_dev__
 10488 ;;		 -> g_i2c_bus(8), NULL(0), 
 10489 ;;  addr            1   77[BANK0 ] unsigned char 
 10490 ;;  reg             1   78[BANK0 ] unsigned char 
 10491 ;;  data            1   79[BANK0 ] unsigned char 
 10492 ;; Auto vars:     Size  Location     Type
 10493 ;;  msg             7   82[BANK0 ] struct i2c_msg
 10494 ;;  tmp             2   80[BANK0 ] unsigned char [2]
 10495 ;; Return value:  Size  Location     Type
 10496 ;;                  2   75[BANK0 ] int 
 10497 ;; Registers used:
 10498 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10499 ;; Tracked objects:
 10500 ;;		On entry : 0/0
 10501 ;;		On exit  : 0/0
 10502 ;;		Unchanged: 0/0
 10503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10504 ;;      Params:         0       5       0       0       0       0       0
 10505 ;;      Locals:         0       9       0       0       0       0       0
 10506 ;;      Temps:          0       0       0       0       0       0       0
 10507 ;;      Totals:         0      14       0       0       0       0       0
 10508 ;;Total ram usage:       14 bytes
 10509 ;; Hardware stack levels used:    1
 10510 ;; Hardware stack levels required when called:   13
 10511 ;; This function calls:
 10512 ;;		_i2c_transfer
 10513 ;; This function is called by:
 10514 ;;		_lnb_do_configure
 10515 ;;		_si5328_init
 10516 ;;		_si5328_perform_ical
 10517 ;;		_write_regset
 10518 ;;		_ssd1306_commandbyte
 10519 ;; This function uses a non-reentrant model
 10520 ;;
 10521                           
 10522                           	psect	text31
 10523  0060F6                     __ptext31:
 10524                           	opt callstack 0
 10525  0060F6                     _smbus8_write_byte:
 10526                           	opt callstack 15
 10527  0060F6                     
 10528                           ;src/driver/base/i2c.c: 65: int smbus8_write_byte(i2c_dev dev, u8 addr, u8 reg, u8 data)
      +                          ;src/driver/base/i2c.c: 66: {;src/driver/base/i2c.c: 67:  i2c_msg msg;;src/driver/base/i
      +                          2c.c: 68:  u8 tmp[2];;src/driver/base/i2c.c: 70:  msg.addr = addr;
 10529  0060F6  C0CD  F0D2         	movff	smbus8_write_byte@addr,smbus8_write_byte@msg
 10530  0060FA  0100               	movlb	0	; () banked
 10531  0060FC  6BD3               	clrf	(smbus8_write_byte@msg+1)& (0+255),b
 10532  0060FE                     
 10533                           ; BSR set to: 0
 10534                           ;src/driver/base/i2c.c: 71:  msg.flags = (1<<1) | (1<<2);
 10535  0060FE  0E06               	movlw	6
 10536  006100  6FD4               	movwf	(smbus8_write_byte@msg+2)& (0+255),b
 10537                           
 10538                           ;src/driver/base/i2c.c: 72:  msg.len = 2;
 10539  006102  0E00               	movlw	0
 10540  006104  6FD6               	movwf	(smbus8_write_byte@msg+4)& (0+255),b
 10541  006106  0E02               	movlw	2
 10542  006108  6FD5               	movwf	(smbus8_write_byte@msg+3)& (0+255),b
 10543  00610A                     
 10544                           ; BSR set to: 0
 10545                           ;src/driver/base/i2c.c: 73:  msg.data = tmp;
 10546  00610A  0ED0               	movlw	low smbus8_write_byte@tmp
 10547  00610C  6FD7               	movwf	(smbus8_write_byte@msg+5)& (0+255),b
 10548  00610E  0E00               	movlw	high smbus8_write_byte@tmp
 10549  006110  6FD8               	movwf	(smbus8_write_byte@msg+6)& (0+255),b
 10550  006112                     
 10551                           ; BSR set to: 0
 10552                           ;src/driver/base/i2c.c: 75:  tmp[0] = reg;
 10553  006112  C0CE  F0D0         	movff	smbus8_write_byte@reg,smbus8_write_byte@tmp
 10554  006116                     
 10555                           ; BSR set to: 0
 10556                           ;src/driver/base/i2c.c: 76:  tmp[1] = data;
 10557  006116  C0CF  F0D1         	movff	smbus8_write_byte@data,smbus8_write_byte@tmp+1
 10558  00611A                     
 10559                           ; BSR set to: 0
 10560                           ;src/driver/base/i2c.c: 78:  return i2c_transfer(dev, &msg, 1);
 10561  00611A  C0CB  F0C5         	movff	smbus8_write_byte@dev,i2c_transfer@dev
 10562  00611E  C0CC  F0C6         	movff	smbus8_write_byte@dev+1,i2c_transfer@dev+1
 10563  006122  0ED2               	movlw	low smbus8_write_byte@msg
 10564  006124  6FC7               	movwf	i2c_transfer@msg& (0+255),b
 10565  006126  0E00               	movlw	high smbus8_write_byte@msg
 10566  006128  6FC8               	movwf	(i2c_transfer@msg+1)& (0+255),b
 10567  00612A  0E00               	movlw	0
 10568  00612C  6FCA               	movwf	(i2c_transfer@num+1)& (0+255),b
 10569  00612E  0E01               	movlw	1
 10570  006130  6FC9               	movwf	i2c_transfer@num& (0+255),b
 10571  006132  EC3C  F02E         	call	_i2c_transfer	;wreg free
 10572  006136  C0C5  F0CB         	movff	?_i2c_transfer,?_smbus8_write_byte
 10573  00613A  C0C6  F0CC         	movff	?_i2c_transfer+1,?_smbus8_write_byte+1
 10574  00613E  0012               	return		;funcret
 10575  006140                     __end_of_smbus8_write_byte:
 10576                           	opt callstack 0
 10577                           
 10578 ;; *************** function _print_string *****************
 10579 ;; Defined at:
 10580 ;;		line 178 in file "src/driver/lcd.c"
 10581 ;; Parameters:    Size  Location     Type
 10582 ;;  s               2   16[BANK1 ] PTR unsigned char 
 10583 ;;		 -> itoa@buffer(12), STR_63(5), GPS_lon(15), STR_62(5), 
 10584 ;;		 -> GPS_lat(15), STR_61(8), STR_60(5), STR_59(4), 
 10585 ;;		 -> STR_58(4), STR_57(6), STR_56(5), STR_55(4), 
 10586 ;;		 -> STR_54(4), STR_53(10), STR_52(17), STR_51(17), 
 10587 ;;		 -> STR_50(17), STR_49(7), STR_48(17), STR_47(17), 
 10588 ;;		 -> STR_46(17), STR_45(7), STR_44(5), STR_43(5), 
 10589 ;;		 -> STR_42(5), STR_41(5), STR_40(3), STR_39(17), 
 10590 ;;		 -> STR_38(17), STR_37(17), STR_36(17), STR_35(14), 
 10591 ;;		 -> STR_34(15), STR_33(15), STR_32(12), STR_31(17), 
 10592 ;;  x               1   18[BANK1 ] unsigned char 
 10593 ;;  y               1   19[BANK1 ] unsigned char 
 10594 ;;  underline       1   20[BANK1 ] unsigned char 
 10595 ;; Auto vars:     Size  Location     Type
 10596 ;;  i               1   21[BANK1 ] unsigned char 
 10597 ;; Return value:  Size  Location     Type
 10598 ;;                  1    wreg      void 
 10599 ;; Registers used:
 10600 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10601 ;; Tracked objects:
 10602 ;;		On entry : 0/0
 10603 ;;		On exit  : 0/0
 10604 ;;		Unchanged: 0/0
 10605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10606 ;;      Params:         0       0       5       0       0       0       0
 10607 ;;      Locals:         0       0       1       0       0       0       0
 10608 ;;      Temps:          0       2       0       0       0       0       0
 10609 ;;      Totals:         0       2       6       0       0       0       0
 10610 ;;Total ram usage:        8 bytes
 10611 ;; Hardware stack levels used:    1
 10612 ;; Hardware stack levels required when called:   18
 10613 ;; This function calls:
 10614 ;;		_print_char
 10615 ;;		_strlen
 10616 ;; This function is called by:
 10617 ;;		_lcd_init
 10618 ;;		_show_display
 10619 ;; This function uses a non-reentrant model
 10620 ;;
 10621                           
 10622                           	psect	text32
 10623  00572A                     __ptext32:
 10624                           	opt callstack 0
 10625  00572A                     _print_string:
 10626                           	opt callstack 11
 10627  00572A                     
 10628                           ;src/driver/lcd.c: 178: void print_string(char *s, u8 x, u8 y, u8 underline);src/driver/
      +                          lcd.c: 179: {;src/driver/lcd.c: 180:  for(u8 i=0; i<strlen(s); i++)
 10629  00572A  0E00               	movlw	0
 10630  00572C  0101               	movlb	1	; () banked
 10631  00572E  6F15               	movwf	print_string@i& (0+255),b
 10632  005730  EFC3  F02B         	goto	l9134
 10633  005734                     l9130:
 10634                           
 10635                           ; BSR set to: 0
 10636                           ;src/driver/lcd.c: 181:  {;src/driver/lcd.c: 182:   print_char(s[i],x+i*8,y,underline);
 10637  005734  0101               	movlb	1	; () banked
 10638  005736  5115               	movf	print_string@i& (0+255),w,b
 10639  005738  0D08               	mullw	8
 10640  00573A  50F3               	movf	243,w,c
 10641  00573C  2512               	addwf	print_string@x& (0+255),w,b
 10642  00573E  0100               	movlb	0	; () banked
 10643  005740  6FEE               	movwf	print_char@xpos& (0+255),b
 10644  005742  C113  F0EF         	movff	print_string@y,print_char@ypos
 10645  005746  C114  F0F0         	movff	print_string@underline,print_char@underline
 10646  00574A  0101               	movlb	1	; () banked
 10647  00574C  5115               	movf	print_string@i& (0+255),w,b
 10648  00574E  2510               	addwf	print_string@s& (0+255),w,b
 10649  005750  0100               	movlb	0	; () banked
 10650  005752  6FFE               	movwf	??_print_string& (0+255),b
 10651  005754  0E00               	movlw	0
 10652  005756  0101               	movlb	1	; () banked
 10653  005758  2111               	addwfc	(print_string@s+1)& (0+255),w,b
 10654  00575A  0100               	movlb	0	; () banked
 10655  00575C  6FFF               	movwf	(??_print_string+1)& (0+255),b
 10656  00575E  C0FE  FFF6         	movff	??_print_string,tblptrl
 10657  005762  C0FF  FFF7         	movff	??_print_string+1,tblptrh
 10658  005766  6AF8               	clrf	tblptru,c
 10659  005768  0E05               	movlw	(high __ramtop+-1)
 10660  00576A  64F7               	cpfsgt	tblptrh,c
 10661  00576C  D003               	bra	u10887
 10662  00576E  0008               	tblrd		*
 10663  005770  50F5               	movf	tablat,w,c
 10664  005772  D005               	bra	u10880
 10665  005774                     u10887:
 10666  005774  CFF6 FFE9          	movff	tblptrl,fsr0l
 10667  005778  CFF7 FFEA          	movff	tblptrh,fsr0h
 10668  00577C  50EF               	movf	indf0,w,c
 10669  00577E                     u10880:
 10670  00577E  EC11  F01D         	call	_print_char
 10671  005782                     
 10672                           ;src/driver/lcd.c: 183:  }
 10673  005782  0101               	movlb	1	; () banked
 10674  005784  2B15               	incf	print_string@i& (0+255),f,b
 10675  005786                     l9134:
 10676                           
 10677                           ; BSR set to: 1
 10678  005786  C110  F00D         	movff	print_string@s,strlen@s
 10679  00578A  C111  F00E         	movff	print_string@s+1,strlen@s+1
 10680  00578E  EC54  F030         	call	_strlen	;wreg free
 10681  005792  0101               	movlb	1	; () banked
 10682  005794  5115               	movf	print_string@i& (0+255),w,b
 10683  005796  0100               	movlb	0	; () banked
 10684  005798  6FFE               	movwf	??_print_string& (0+255),b
 10685  00579A  6BFF               	clrf	(??_print_string+1)& (0+255),b
 10686  00579C  500D               	movf	?_strlen^0,w,c
 10687  00579E  5DFE               	subwf	??_print_string& (0+255),w,b
 10688  0057A0  500E               	movf	(?_strlen+1)^0,w,c
 10689  0057A2  59FF               	subwfb	(??_print_string+1)& (0+255),w,b
 10690  0057A4  A0D8               	btfss	status,0,c
 10691  0057A6  EFD7  F02B         	goto	u10891
 10692  0057AA  EFD9  F02B         	goto	u10890
 10693  0057AE                     u10891:
 10694  0057AE  EF9A  F02B         	goto	l9130
 10695  0057B2                     u10890:
 10696  0057B2                     
 10697                           ; BSR set to: 0
 10698  0057B2  0012               	return		;funcret
 10699  0057B4                     __end_of_print_string:
 10700                           	opt callstack 0
 10701                           
 10702 ;; *************** function _print_char *****************
 10703 ;; Defined at:
 10704 ;;		line 156 in file "src/driver/lcd.c"
 10705 ;; Parameters:    Size  Location     Type
 10706 ;;  c               1    wreg     unsigned char 
 10707 ;;  xpos            1  110[BANK0 ] unsigned char 
 10708 ;;  ypos            1  111[BANK0 ] unsigned char 
 10709 ;;  underline       1  112[BANK0 ] unsigned char 
 10710 ;; Auto vars:     Size  Location     Type
 10711 ;;  c               1  121[BANK0 ] unsigned char 
 10712 ;;  b               1  122[BANK0 ] unsigned char 
 10713 ;;  x               1  124[BANK0 ] unsigned char 
 10714 ;;  y               1  125[BANK0 ] unsigned char 
 10715 ;;  map             8  113[BANK0 ] unsigned char [8]
 10716 ;;  idx             1  123[BANK0 ] unsigned char 
 10717 ;; Return value:  Size  Location     Type
 10718 ;;                  1    wreg      void 
 10719 ;; Registers used:
 10720 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10721 ;; Tracked objects:
 10722 ;;		On entry : 0/0
 10723 ;;		On exit  : 0/0
 10724 ;;		Unchanged: 0/0
 10725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10726 ;;      Params:         0       3       0       0       0       0       0
 10727 ;;      Locals:         0      13       0       0       0       0       0
 10728 ;;      Temps:          0       0      16       0       0       0       0
 10729 ;;      Totals:         0      16      16       0       0       0       0
 10730 ;;Total ram usage:       32 bytes
 10731 ;; Hardware stack levels used:    1
 10732 ;; Hardware stack levels required when called:   17
 10733 ;; This function calls:
 10734 ;;		_lcd_draw8x8
 10735 ;;		_memset
 10736 ;; This function is called by:
 10737 ;;		_print_string
 10738 ;; This function uses a non-reentrant model
 10739 ;;
 10740                           
 10741                           	psect	text33
 10742  003A22                     __ptext33:
 10743                           	opt callstack 0
 10744  003A22                     _print_char:
 10745                           	opt callstack 11
 10746                           
 10747                           ; BSR set to: 0
 10748                           ;incstack = 0
 10749                           ;print_char@c stored from wreg
 10750  003A22  0100               	movlb	0	; () banked
 10751  003A24  6FF9               	movwf	print_char@c& (0+255),b
 10752  003A26                     
 10753                           ;src/driver/lcd.c: 156: void print_char(char c, u8 xpos, u8 ypos, u8 underline);src/driv
      +                          er/lcd.c: 157: {;src/driver/lcd.c: 158:  u8 idx = c - ' ';
 10754  003A26  0100               	movlb	0	; () banked
 10755  003A28  51F9               	movf	print_char@c& (0+255),w,b
 10756  003A2A  0FE0               	addlw	224
 10757  003A2C  6FFB               	movwf	print_char@idx& (0+255),b
 10758                           
 10759                           ;src/driver/lcd.c: 159:  if(idx >= 97) idx = 0;
 10760  003A2E  0E60               	movlw	96
 10761  003A30  65FB               	cpfsgt	print_char@idx& (0+255),b
 10762  003A32  EF1D  F01D         	goto	u10551
 10763  003A36  EF1F  F01D         	goto	u10550
 10764  003A3A                     u10551:
 10765  003A3A  EF21  F01D         	goto	l8938
 10766  003A3E                     u10550:
 10767  003A3E                     
 10768                           ; BSR set to: 0
 10769  003A3E  0E00               	movlw	0
 10770  003A40  6FFB               	movwf	print_char@idx& (0+255),b
 10771  003A42                     l8938:
 10772                           
 10773                           ; BSR set to: 0
 10774                           ;src/driver/lcd.c: 162:  u8 map[8];;src/driver/lcd.c: 163:  memset(map,0,8);
 10775  003A42  0EF1               	movlw	low print_char@map
 10776  003A44  6E0D               	movwf	memset@dest^0,c
 10777  003A46  0E00               	movlw	high print_char@map
 10778  003A48  6E0E               	movwf	(memset@dest+1)^0,c
 10779  003A4A  0E00               	movlw	0
 10780  003A4C  6E10               	movwf	(memset@c+1)^0,c
 10781  003A4E  0E00               	movlw	0
 10782  003A50  6E0F               	movwf	memset@c^0,c
 10783  003A52  0E00               	movlw	0
 10784  003A54  6E12               	movwf	(memset@n+1)^0,c
 10785  003A56  0E08               	movlw	8
 10786  003A58  6E11               	movwf	memset@n^0,c
 10787  003A5A  EC56  F01C         	call	_memset	;wreg free
 10788  003A5E                     
 10789                           ;src/driver/lcd.c: 165:  for(u8 y=0; y<8; y++)
 10790  003A5E  0E00               	movlw	0
 10791  003A60  0100               	movlb	0	; () banked
 10792  003A62  6FFD               	movwf	print_char@y& (0+255),b
 10793  003A64                     l8946:
 10794                           
 10795                           ; BSR set to: 0
 10796                           ;src/driver/lcd.c: 166:  {;src/driver/lcd.c: 167:   for(u8 x=0; x<8; x++)
 10797  003A64  0E00               	movlw	0
 10798  003A66  6FFC               	movwf	print_char@x& (0+255),b
 10799  003A68                     l8952:
 10800                           
 10801                           ; BSR set to: 0
 10802                           ;src/driver/lcd.c: 168:   {;src/driver/lcd.c: 169:    u8 b = (font8x8_basic[idx][y] & (1
      +                          <<x))?1:0;
 10803  003A68  51FD               	movf	print_char@y& (0+255),w,b
 10804  003A6A  0D01               	mullw	1
 10805  003A6C  CFF3 F100          	movff	prodl,??_print_char
 10806  003A70  CFF4 F101          	movff	prodh,??_print_char+1
 10807  003A74  51FB               	movf	print_char@idx& (0+255),w,b
 10808  003A76  0D08               	mullw	8
 10809  003A78  CFF3 F102          	movff	prodl,??_print_char+2
 10810  003A7C  CFF4 F103          	movff	prodh,??_print_char+3
 10811  003A80  0E27               	movlw	low _font8x8_basic
 10812  003A82  0101               	movlb	1	; () banked
 10813  003A84  6F04               	movwf	(??_print_char+4)& (0+255),b
 10814  003A86  0E74               	movlw	high _font8x8_basic
 10815  003A88  6F05               	movwf	(??_print_char+5)& (0+255),b
 10816  003A8A  0E00               	movlw	low (_font8x8_basic shr (0+16))
 10817  003A8C  6F06               	movwf	(??_print_char+6)& (0+255),b
 10818  003A8E  5102               	movf	(??_print_char+2)& (0+255),w,b
 10819  003A90  2504               	addwf	(??_print_char+4)& (0+255),w,b
 10820  003A92  6F07               	movwf	(??_print_char+7)& (0+255),b
 10821  003A94  5103               	movf	(??_print_char+3)& (0+255),w,b
 10822  003A96  2105               	addwfc	(??_print_char+5)& (0+255),w,b
 10823  003A98  6F08               	movwf	(??_print_char+8)& (0+255),b
 10824  003A9A  0E00               	movlw	0
 10825  003A9C  2106               	addwfc	(??_print_char+6)& (0+255),w,b
 10826  003A9E  6F09               	movwf	(??_print_char+9)& (0+255),b
 10827  003AA0  5100               	movf	??_print_char& (0+255),w,b
 10828  003AA2  2507               	addwf	(??_print_char+7)& (0+255),w,b
 10829  003AA4  6F0A               	movwf	(??_print_char+10)& (0+255),b
 10830  003AA6  5101               	movf	(??_print_char+1)& (0+255),w,b
 10831  003AA8  2108               	addwfc	(??_print_char+8)& (0+255),w,b
 10832  003AAA  6F0B               	movwf	(??_print_char+11)& (0+255),b
 10833  003AAC  0E00               	movlw	0
 10834  003AAE  2109               	addwfc	(??_print_char+9)& (0+255),w,b
 10835  003AB0  6F0C               	movwf	(??_print_char+12)& (0+255),b
 10836  003AB2  C10A  FFF6         	movff	??_print_char+10,tblptrl
 10837  003AB6  C10B  FFF7         	movff	??_print_char+11,tblptrh
 10838  003ABA  C10C  FFF8         	movff	??_print_char+12,tblptru
 10839  003ABE  0008               	tblrd		*
 10840  003AC0  CFF5 F10D          	movff	tablat,??_print_char+13
 10841  003AC4  C0FC  F10E         	movff	print_char@x,??_print_char+14
 10842  003AC8  0E01               	movlw	1
 10843  003ACA  6F0F               	movwf	(??_print_char+15)& (0+255),b
 10844  003ACC  2B0E               	incf	(??_print_char+14)& (0+255),f,b
 10845  003ACE  EF6B  F01D         	goto	u10564
 10846  003AD2                     u10565:
 10847  003AD2  90D8               	bcf	status,0,c
 10848  003AD4  370F               	rlcf	(??_print_char+15)& (0+255),f,b
 10849  003AD6                     u10564:
 10850  003AD6  2F0E               	decfsz	(??_print_char+14)& (0+255),f,b
 10851  003AD8  EF69  F01D         	goto	u10565
 10852  003ADC  0101               	movlb	1	; () banked
 10853  003ADE  510F               	movf	(??_print_char+15)& (0+255),w,b
 10854  003AE0  150D               	andwf	(??_print_char+13)& (0+255),w,b
 10855  003AE2  0900               	iorlw	0
 10856  003AE4  A4D8               	btfss	status,2,c
 10857  003AE6  EF77  F01D         	goto	u10571
 10858  003AEA  EF7A  F01D         	goto	u10570
 10859  003AEE                     u10571:
 10860  003AEE  0E01               	movlw	1
 10861  003AF0  EF7B  F01D         	goto	u10580
 10862  003AF4                     u10570:
 10863  003AF4  0E00               	movlw	0
 10864  003AF6                     u10580:
 10865  003AF6  0100               	movlb	0	; () banked
 10866  003AF8  6FFA               	movwf	print_char@b& (0+255),b
 10867  003AFA                     
 10868                           ; BSR set to: 0
 10869                           ;src/driver/lcd.c: 170:    if(y==7 && underline) b=1;
 10870  003AFA  0E07               	movlw	7
 10871  003AFC  19FD               	xorwf	print_char@y& (0+255),w,b
 10872  003AFE  A4D8               	btfss	status,2,c
 10873  003B00  EF84  F01D         	goto	u10591
 10874  003B04  EF86  F01D         	goto	u10590
 10875  003B08                     u10591:
 10876  003B08  EF90  F01D         	goto	l8960
 10877  003B0C                     u10590:
 10878  003B0C                     
 10879                           ; BSR set to: 0
 10880  003B0C  51F0               	movf	print_char@underline& (0+255),w,b
 10881  003B0E  B4D8               	btfsc	status,2,c
 10882  003B10  EF8C  F01D         	goto	u10601
 10883  003B14  EF8E  F01D         	goto	u10600
 10884  003B18                     u10601:
 10885  003B18  EF90  F01D         	goto	l8960
 10886  003B1C                     u10600:
 10887  003B1C                     
 10888                           ; BSR set to: 0
 10889  003B1C  0E01               	movlw	1
 10890  003B1E  6FFA               	movwf	print_char@b& (0+255),b
 10891  003B20                     l8960:
 10892                           
 10893                           ; BSR set to: 0
 10894                           ;src/driver/lcd.c: 171:    map[x] |= b<<y;
 10895  003B20  C0FD  F100         	movff	print_char@y,??_print_char
 10896  003B24  C0FA  F101         	movff	print_char@b,??_print_char+1
 10897  003B28  0101               	movlb	1	; () banked
 10898  003B2A  2B00               	incf	??_print_char& (0+255),f,b
 10899  003B2C  EF9A  F01D         	goto	u10614
 10900  003B30                     u10615:
 10901  003B30  90D8               	bcf	status,0,c
 10902  003B32  3701               	rlcf	(??_print_char+1)& (0+255),f,b
 10903  003B34                     u10614:
 10904  003B34  2F00               	decfsz	??_print_char& (0+255),f,b
 10905  003B36  EF98  F01D         	goto	u10615
 10906  003B3A  0EF1               	movlw	low print_char@map
 10907  003B3C  0100               	movlb	0	; () banked
 10908  003B3E  25FC               	addwf	print_char@x& (0+255),w,b
 10909  003B40  6ED9               	movwf	fsr2l,c
 10910  003B42  6ADA               	clrf	fsr2h,c
 10911  003B44  0E00               	movlw	high print_char@map
 10912  003B46  22DA               	addwfc	fsr2h,f,c
 10913  003B48  0101               	movlb	1	; () banked
 10914  003B4A  5101               	movf	(??_print_char+1)& (0+255),w,b
 10915  003B4C  12DF               	iorwf	indf2,f,c
 10916  003B4E                     
 10917                           ; BSR set to: 1
 10918                           ;src/driver/lcd.c: 172:   }
 10919  003B4E  0100               	movlb	0	; () banked
 10920  003B50  2BFC               	incf	print_char@x& (0+255),f,b
 10921  003B52                     
 10922                           ; BSR set to: 0
 10923  003B52  0E07               	movlw	7
 10924  003B54  65FC               	cpfsgt	print_char@x& (0+255),b
 10925  003B56  EFAF  F01D         	goto	u10621
 10926  003B5A  EFB1  F01D         	goto	u10620
 10927  003B5E                     u10621:
 10928  003B5E  EF34  F01D         	goto	l8952
 10929  003B62                     u10620:
 10930  003B62                     
 10931                           ; BSR set to: 0
 10932                           ;src/driver/lcd.c: 173:  }
 10933  003B62  2BFD               	incf	print_char@y& (0+255),f,b
 10934  003B64                     
 10935                           ; BSR set to: 0
 10936  003B64  0E07               	movlw	7
 10937  003B66  65FD               	cpfsgt	print_char@y& (0+255),b
 10938  003B68  EFB8  F01D         	goto	u10631
 10939  003B6C  EFBA  F01D         	goto	u10630
 10940  003B70                     u10631:
 10941  003B70  EF32  F01D         	goto	l8946
 10942  003B74                     u10630:
 10943  003B74                     
 10944                           ; BSR set to: 0
 10945                           ;src/driver/lcd.c: 175:  lcd_draw8x8(map,xpos,ypos);
 10946  003B74  0EF1               	movlw	low print_char@map
 10947  003B76  6FEA               	movwf	lcd_draw8x8@buffer& (0+255),b
 10948  003B78  0E00               	movlw	high print_char@map
 10949  003B7A  6FEB               	movwf	(lcd_draw8x8@buffer+1)& (0+255),b
 10950  003B7C  C0EE  F0EC         	movff	print_char@xpos,lcd_draw8x8@x
 10951  003B80  C0EF  F0ED         	movff	print_char@ypos,lcd_draw8x8@y
 10952  003B84  ECCE  F032         	call	_lcd_draw8x8	;wreg free
 10953  003B88  0012               	return		;funcret
 10954  003B8A                     __end_of_print_char:
 10955                           	opt callstack 0
 10956                           
 10957 ;; *************** function _lcd_draw8x8 *****************
 10958 ;; Defined at:
 10959 ;;		line 147 in file "src/driver/lcd.c"
 10960 ;; Parameters:    Size  Location     Type
 10961 ;;  buffer          2  106[BANK0 ] PTR unsigned char 
 10962 ;;		 -> print_char@map(8), 
 10963 ;;  x               1  108[BANK0 ] unsigned char 
 10964 ;;  y               1  109[BANK0 ] unsigned char 
 10965 ;; Auto vars:     Size  Location     Type
 10966 ;;		None
 10967 ;; Return value:  Size  Location     Type
 10968 ;;                  1    wreg      void 
 10969 ;; Registers used:
 10970 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10971 ;; Tracked objects:
 10972 ;;		On entry : 0/0
 10973 ;;		On exit  : 0/0
 10974 ;;		Unchanged: 0/0
 10975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10976 ;;      Params:         0       4       0       0       0       0       0
 10977 ;;      Locals:         0       0       0       0       0       0       0
 10978 ;;      Temps:          0       0       0       0       0       0       0
 10979 ;;      Totals:         0       4       0       0       0       0       0
 10980 ;;Total ram usage:        4 bytes
 10981 ;; Hardware stack levels used:    1
 10982 ;; Hardware stack levels required when called:   16
 10983 ;; This function calls:
 10984 ;;		_ssd1306_data
 10985 ;;		_ssd1306_setpos
 10986 ;; This function is called by:
 10987 ;;		_print_char
 10988 ;; This function uses a non-reentrant model
 10989 ;;
 10990                           
 10991                           	psect	text34
 10992  00659C                     __ptext34:
 10993                           	opt callstack 0
 10994  00659C                     _lcd_draw8x8:
 10995                           	opt callstack 11
 10996  00659C                     
 10997                           ;src/driver/lcd.c: 147: void lcd_draw8x8(u8 *buffer, u8 x, u8 y);src/driver/lcd.c: 148: 
      +                          {;src/driver/lcd.c: 150:  ssd1306_setpos(x,y);
 10998  00659C  C0ED  F0E5         	movff	lcd_draw8x8@y,ssd1306_setpos@y
 10999  0065A0  0100               	movlb	0	; () banked
 11000  0065A2  51EC               	movf	lcd_draw8x8@x& (0+255),w,b
 11001  0065A4  EC6E  F031         	call	_ssd1306_setpos
 11002                           
 11003                           ;src/driver/lcd.c: 152:  ssd1306_data(buffer, 8);
 11004  0065A8  C0EA  F0E1         	movff	lcd_draw8x8@buffer,ssd1306_data@data
 11005  0065AC  C0EB  F0E2         	movff	lcd_draw8x8@buffer+1,ssd1306_data@data+1
 11006  0065B0  0E00               	movlw	0
 11007  0065B2  0100               	movlb	0	; () banked
 11008  0065B4  6FE4               	movwf	(ssd1306_data@len+1)& (0+255),b
 11009  0065B6  0E08               	movlw	8
 11010  0065B8  6FE3               	movwf	ssd1306_data@len& (0+255),b
 11011  0065BA  ECAC  F031         	call	_ssd1306_data	;wreg free
 11012  0065BE  0012               	return		;funcret
 11013  0065C0                     __end_of_lcd_draw8x8:
 11014                           	opt callstack 0
 11015                           
 11016 ;; *************** function _lcd_clear_screen *****************
 11017 ;; Defined at:
 11018 ;;		line 132 in file "src/driver/lcd.c"
 11019 ;; Parameters:    Size  Location     Type
 11020 ;;  ystart          1    wreg     unsigned char 
 11021 ;; Auto vars:     Size  Location     Type
 11022 ;;  ystart          1  128[BANK1 ] unsigned char 
 11023 ;;  row             1  129[BANK1 ] unsigned char 
 11024 ;;  buf           128    0[BANK1 ] unsigned char [128]
 11025 ;; Return value:  Size  Location     Type
 11026 ;;                  1    wreg      void 
 11027 ;; Registers used:
 11028 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11029 ;; Tracked objects:
 11030 ;;		On entry : 0/0
 11031 ;;		On exit  : 0/0
 11032 ;;		Unchanged: 0/0
 11033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11034 ;;      Params:         0       0       0       0       0       0       0
 11035 ;;      Locals:         0       0     130       0       0       0       0
 11036 ;;      Temps:          0       0       0       0       0       0       0
 11037 ;;      Totals:         0       0     130       0       0       0       0
 11038 ;;Total ram usage:      130 bytes
 11039 ;; Hardware stack levels used:    1
 11040 ;; Hardware stack levels required when called:   16
 11041 ;; This function calls:
 11042 ;;		_memset
 11043 ;;		_ssd1306_data
 11044 ;;		_ssd1306_setpos
 11045 ;; This function is called by:
 11046 ;;		_lcd_init
 11047 ;;		_show_display
 11048 ;; This function uses a non-reentrant model
 11049 ;;
 11050                           
 11051                           	psect	text35
 11052  005C14                     __ptext35:
 11053                           	opt callstack 0
 11054  005C14                     _lcd_clear_screen:
 11055                           	opt callstack 13
 11056                           
 11057                           ;incstack = 0
 11058                           ;lcd_clear_screen@ystart stored from wreg
 11059  005C14  0101               	movlb	1	; () banked
 11060  005C16  6F80               	movwf	lcd_clear_screen@ystart& (0+255),b
 11061  005C18                     
 11062                           ;src/driver/lcd.c: 132: void lcd_clear_screen(u8 ystart);src/driver/lcd.c: 133: {;src/dr
      +                          iver/lcd.c: 134:  u8 buf[128];;src/driver/lcd.c: 135:  memset(buf,0,128);
 11063  005C18  0E00               	movlw	low lcd_clear_screen@buf
 11064  005C1A  6E0D               	movwf	memset@dest^0,c
 11065  005C1C  0E01               	movlw	high lcd_clear_screen@buf
 11066  005C1E  6E0E               	movwf	(memset@dest+1)^0,c
 11067  005C20  0E00               	movlw	0
 11068  005C22  6E10               	movwf	(memset@c+1)^0,c
 11069  005C24  0E00               	movlw	0
 11070  005C26  6E0F               	movwf	memset@c^0,c
 11071  005C28  0E00               	movlw	0
 11072  005C2A  6E12               	movwf	(memset@n+1)^0,c
 11073  005C2C  0E80               	movlw	128
 11074  005C2E  6E11               	movwf	memset@n^0,c
 11075  005C30  EC56  F01C         	call	_memset	;wreg free
 11076  005C34                     
 11077                           ;src/driver/lcd.c: 137:     for (u8 row=ystart; row<(64 / 8); row++)
 11078  005C34  C180  F181         	movff	lcd_clear_screen@ystart,lcd_clear_screen@row
 11079  005C38                     l9118:
 11080  005C38  0E07               	movlw	7
 11081  005C3A  0101               	movlb	1	; () banked
 11082  005C3C  6581               	cpfsgt	lcd_clear_screen@row& (0+255),b
 11083  005C3E  EF23  F02E         	goto	u10871
 11084  005C42  EF25  F02E         	goto	u10870
 11085  005C46                     u10871:
 11086  005C46  EF27  F02E         	goto	l9122
 11087  005C4A                     u10870:
 11088  005C4A  EF3B  F02E         	goto	l631
 11089  005C4E                     l9122:
 11090                           
 11091                           ; BSR set to: 1
 11092                           ;src/driver/lcd.c: 138:  {;src/driver/lcd.c: 139:   ssd1306_setpos(0,row);
 11093  005C4E  C181  F0E5         	movff	lcd_clear_screen@row,ssd1306_setpos@y
 11094  005C52  0E00               	movlw	0
 11095  005C54  EC6E  F031         	call	_ssd1306_setpos
 11096                           
 11097                           ;src/driver/lcd.c: 141:   ssd1306_data(buf,128);
 11098  005C58  0E00               	movlw	low lcd_clear_screen@buf
 11099  005C5A  0100               	movlb	0	; () banked
 11100  005C5C  6FE1               	movwf	ssd1306_data@data& (0+255),b
 11101  005C5E  0E01               	movlw	high lcd_clear_screen@buf
 11102  005C60  6FE2               	movwf	(ssd1306_data@data+1)& (0+255),b
 11103  005C62  0E00               	movlw	0
 11104  005C64  6FE4               	movwf	(ssd1306_data@len+1)& (0+255),b
 11105  005C66  0E80               	movlw	128
 11106  005C68  6FE3               	movwf	ssd1306_data@len& (0+255),b
 11107  005C6A  ECAC  F031         	call	_ssd1306_data	;wreg free
 11108  005C6E                     
 11109                           ;src/driver/lcd.c: 142:     }
 11110  005C6E  0101               	movlb	1	; () banked
 11111  005C70  2B81               	incf	lcd_clear_screen@row& (0+255),f,b
 11112  005C72  EF1C  F02E         	goto	l9118
 11113  005C76                     l631:
 11114                           
 11115                           ; BSR set to: 1
 11116  005C76  0012               	return		;funcret
 11117  005C78                     __end_of_lcd_clear_screen:
 11118                           	opt callstack 0
 11119                           
 11120 ;; *************** function _ssd1306_setpos *****************
 11121 ;; Defined at:
 11122 ;;		line 120 in file "src/driver/lcd.c"
 11123 ;; Parameters:    Size  Location     Type
 11124 ;;  x               1    wreg     unsigned char 
 11125 ;;  y               1  101[BANK0 ] unsigned char 
 11126 ;; Auto vars:     Size  Location     Type
 11127 ;;  x               1  105[BANK0 ] unsigned char 
 11128 ;;  data            3  102[BANK0 ] unsigned char [3]
 11129 ;; Return value:  Size  Location     Type
 11130 ;;                  1    wreg      void 
 11131 ;; Registers used:
 11132 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11133 ;; Tracked objects:
 11134 ;;		On entry : 0/0
 11135 ;;		On exit  : 0/0
 11136 ;;		Unchanged: 0/0
 11137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11138 ;;      Params:         0       1       0       0       0       0       0
 11139 ;;      Locals:         0       4       0       0       0       0       0
 11140 ;;      Temps:          0       0       0       0       0       0       0
 11141 ;;      Totals:         0       5       0       0       0       0       0
 11142 ;;Total ram usage:        5 bytes
 11143 ;; Hardware stack levels used:    1
 11144 ;; Hardware stack levels required when called:   15
 11145 ;; This function calls:
 11146 ;;		_ssd1306_command
 11147 ;; This function is called by:
 11148 ;;		_lcd_clear_screen
 11149 ;;		_lcd_draw8x8
 11150 ;; This function uses a non-reentrant model
 11151 ;;
 11152                           
 11153                           	psect	text36
 11154  0062DC                     __ptext36:
 11155                           	opt callstack 0
 11156  0062DC                     _ssd1306_setpos:
 11157                           	opt callstack 11
 11158                           
 11159                           ; BSR set to: 1
 11160                           ;incstack = 0
 11161                           ;ssd1306_setpos@x stored from wreg
 11162  0062DC  0100               	movlb	0	; () banked
 11163  0062DE  6FE9               	movwf	ssd1306_setpos@x& (0+255),b
 11164  0062E0                     
 11165                           ;src/driver/lcd.c: 120: void ssd1306_setpos(u8 x, u8 y);src/driver/lcd.c: 121: {;src/dri
      +                          ver/lcd.c: 122:  u8 data[3] = {0xb0, 2, 0x10};
 11166  0062E0  C1C9  F0E6         	movff	ssd1306_setpos@F3126,ssd1306_setpos@data
 11167  0062E4  C1CA  F0E7         	movff	ssd1306_setpos@F3126+1,ssd1306_setpos@data+1
 11168  0062E8  C1CB  F0E8         	movff	ssd1306_setpos@F3126+2,ssd1306_setpos@data+2
 11169  0062EC                     
 11170                           ;src/driver/lcd.c: 124:  data[0] += y;
 11171  0062EC  0100               	movlb	0	; () banked
 11172  0062EE  51E5               	movf	ssd1306_setpos@y& (0+255),w,b
 11173  0062F0  27E6               	addwf	ssd1306_setpos@data& (0+255),f,b
 11174                           
 11175                           ;src/driver/lcd.c: 125:  x += 2;
 11176  0062F2  0E02               	movlw	2
 11177  0062F4  27E9               	addwf	ssd1306_setpos@x& (0+255),f,b
 11178                           
 11179                           ;src/driver/lcd.c: 126:  data[1] = x & 0x0f;
 11180  0062F6  51E9               	movf	ssd1306_setpos@x& (0+255),w,b
 11181  0062F8  0B0F               	andlw	15
 11182  0062FA  6FE7               	movwf	(ssd1306_setpos@data+1)& (0+255),b
 11183                           
 11184                           ;src/driver/lcd.c: 127:  data[2] = 0x10 | (x>>4);
 11185  0062FC  39E9               	swapf	ssd1306_setpos@x& (0+255),w,b
 11186  0062FE  0B0F               	andlw	15
 11187  006300  0910               	iorlw	16
 11188  006302  6FE8               	movwf	(ssd1306_setpos@data+2)& (0+255),b
 11189  006304                     
 11190                           ; BSR set to: 0
 11191                           ;src/driver/lcd.c: 129:  ssd1306_command(data,3);
 11192  006304  0EE6               	movlw	low ssd1306_setpos@data
 11193  006306  6FE1               	movwf	ssd1306_command@cmd& (0+255),b
 11194  006308  0E00               	movlw	high ssd1306_setpos@data
 11195  00630A  6FE2               	movwf	(ssd1306_command@cmd+1)& (0+255),b
 11196  00630C  0E00               	movlw	0
 11197  00630E  6FE4               	movwf	(ssd1306_command@len+1)& (0+255),b
 11198  006310  0E03               	movlw	3
 11199  006312  6FE3               	movwf	ssd1306_command@len& (0+255),b
 11200  006314  EC8D  F031         	call	_ssd1306_command	;wreg free
 11201  006318  0012               	return		;funcret
 11202  00631A                     __end_of_ssd1306_setpos:
 11203                           	opt callstack 0
 11204                           
 11205 ;; *************** function _ssd1306_command *****************
 11206 ;; Defined at:
 11207 ;;		line 94 in file "src/driver/lcd.c"
 11208 ;; Parameters:    Size  Location     Type
 11209 ;;  cmd             2   97[BANK0 ] PTR unsigned char 
 11210 ;;		 -> ssd1306_setpos@data(3), ssd1306_init_commands(27), 
 11211 ;;  len             2   99[BANK0 ] int 
 11212 ;; Auto vars:     Size  Location     Type
 11213 ;;		None
 11214 ;; Return value:  Size  Location     Type
 11215 ;;                  1    wreg      void 
 11216 ;; Registers used:
 11217 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11218 ;; Tracked objects:
 11219 ;;		On entry : 0/0
 11220 ;;		On exit  : 0/0
 11221 ;;		Unchanged: 0/0
 11222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11223 ;;      Params:         0       4       0       0       0       0       0
 11224 ;;      Locals:         0       0       0       0       0       0       0
 11225 ;;      Temps:          0       0       0       0       0       0       0
 11226 ;;      Totals:         0       4       0       0       0       0       0
 11227 ;;Total ram usage:        4 bytes
 11228 ;; Hardware stack levels used:    1
 11229 ;; Hardware stack levels required when called:   14
 11230 ;; This function calls:
 11231 ;;		_smbus8_write_data
 11232 ;; This function is called by:
 11233 ;;		_lcd_init
 11234 ;;		_ssd1306_setpos
 11235 ;; This function uses a non-reentrant model
 11236 ;;
 11237                           
 11238                           	psect	text37
 11239  00631A                     __ptext37:
 11240                           	opt callstack 0
 11241  00631A                     _ssd1306_command:
 11242                           	opt callstack 11
 11243  00631A                     
 11244                           ;src/driver/lcd.c: 94: void ssd1306_command(u8 *cmd, int len);src/driver/lcd.c: 95: {;sr
      +                          c/driver/lcd.c: 96:  if(!lcd_available) return;
 11245  00631A  506F               	movf	_lcd_available^0,w,c
 11246  00631C  A4D8               	btfss	status,2,c
 11247  00631E  EF93  F031         	goto	u10251
 11248  006322  EF95  F031         	goto	u10250
 11249  006326                     u10251:
 11250  006326  EF97  F031         	goto	l608
 11251  00632A                     u10250:
 11252  00632A  EFAB  F031         	goto	l609
 11253  00632E                     l608:
 11254  00632E  0004               	clrwdt		;# 
 11255  006330                     
 11256                           ;src/driver/lcd.c: 98:  smbus8_write_data(lcd_i2c, lcd_addr, 0x00, cmd, len);
 11257  006330  C1A4  F0CB         	movff	_lcd_i2c,smbus8_write_data@dev
 11258  006334  C1A5  F0CC         	movff	_lcd_i2c+1,smbus8_write_data@dev+1
 11259  006338  C070  F0CD         	movff	_lcd_addr,smbus8_write_data@addr
 11260  00633C  0E00               	movlw	0
 11261  00633E  0100               	movlb	0	; () banked
 11262  006340  6FCE               	movwf	smbus8_write_data@reg& (0+255),b
 11263  006342  C0E1  F0CF         	movff	ssd1306_command@cmd,smbus8_write_data@data
 11264  006346  C0E2  F0D0         	movff	ssd1306_command@cmd+1,smbus8_write_data@data+1
 11265  00634A  C0E3  F0D1         	movff	ssd1306_command@len,smbus8_write_data@len
 11266  00634E  C0E4  F0D2         	movff	ssd1306_command@len+1,smbus8_write_data@len+1
 11267  006352  ECD9  F02F         	call	_smbus8_write_data	;wreg free
 11268  006356                     l609:
 11269  006356  0012               	return		;funcret
 11270  006358                     __end_of_ssd1306_command:
 11271                           	opt callstack 0
 11272                           
 11273 ;; *************** function _ssd1306_data *****************
 11274 ;; Defined at:
 11275 ;;		line 107 in file "src/driver/lcd.c"
 11276 ;; Parameters:    Size  Location     Type
 11277 ;;  data            2   97[BANK0 ] PTR unsigned char 
 11278 ;;		 -> print_char@map(8), lcd_clear_screen@buf(128), 
 11279 ;;  len             2   99[BANK0 ] int 
 11280 ;; Auto vars:     Size  Location     Type
 11281 ;;		None
 11282 ;; Return value:  Size  Location     Type
 11283 ;;                  1    wreg      void 
 11284 ;; Registers used:
 11285 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11286 ;; Tracked objects:
 11287 ;;		On entry : 0/0
 11288 ;;		On exit  : 0/0
 11289 ;;		Unchanged: 0/0
 11290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11291 ;;      Params:         0       4       0       0       0       0       0
 11292 ;;      Locals:         0       0       0       0       0       0       0
 11293 ;;      Temps:          0       0       0       0       0       0       0
 11294 ;;      Totals:         0       4       0       0       0       0       0
 11295 ;;Total ram usage:        4 bytes
 11296 ;; Hardware stack levels used:    1
 11297 ;; Hardware stack levels required when called:   14
 11298 ;; This function calls:
 11299 ;;		_smbus8_write_data
 11300 ;; This function is called by:
 11301 ;;		_lcd_clear_screen
 11302 ;;		_lcd_draw8x8
 11303 ;; This function uses a non-reentrant model
 11304 ;;
 11305                           
 11306                           	psect	text38
 11307  006358                     __ptext38:
 11308                           	opt callstack 0
 11309  006358                     _ssd1306_data:
 11310                           	opt callstack 12
 11311  006358                     
 11312                           ;src/driver/lcd.c: 107: void ssd1306_data(u8 *data, int len);src/driver/lcd.c: 108: {;sr
      +                          c/driver/lcd.c: 109:  if(!lcd_available) return;
 11313  006358  506F               	movf	_lcd_available^0,w,c
 11314  00635A  A4D8               	btfss	status,2,c
 11315  00635C  EFB2  F031         	goto	u10261
 11316  006360  EFB4  F031         	goto	u10260
 11317  006364                     u10261:
 11318  006364  EFB6  F031         	goto	l616
 11319  006368                     u10260:
 11320  006368  EFCA  F031         	goto	l617
 11321  00636C                     l616:
 11322  00636C  0004               	clrwdt		;# 
 11323  00636E                     
 11324                           ;src/driver/lcd.c: 111:  smbus8_write_data(lcd_i2c, lcd_addr, 0x40, data, len);
 11325  00636E  C1A4  F0CB         	movff	_lcd_i2c,smbus8_write_data@dev
 11326  006372  C1A5  F0CC         	movff	_lcd_i2c+1,smbus8_write_data@dev+1
 11327  006376  C070  F0CD         	movff	_lcd_addr,smbus8_write_data@addr
 11328  00637A  0E40               	movlw	64
 11329  00637C  0100               	movlb	0	; () banked
 11330  00637E  6FCE               	movwf	smbus8_write_data@reg& (0+255),b
 11331  006380  C0E1  F0CF         	movff	ssd1306_data@data,smbus8_write_data@data
 11332  006384  C0E2  F0D0         	movff	ssd1306_data@data+1,smbus8_write_data@data+1
 11333  006388  C0E3  F0D1         	movff	ssd1306_data@len,smbus8_write_data@len
 11334  00638C  C0E4  F0D2         	movff	ssd1306_data@len+1,smbus8_write_data@len+1
 11335  006390  ECD9  F02F         	call	_smbus8_write_data	;wreg free
 11336  006394                     l617:
 11337  006394  0012               	return		;funcret
 11338  006396                     __end_of_ssd1306_data:
 11339                           	opt callstack 0
 11340                           
 11341 ;; *************** function _smbus8_write_data *****************
 11342 ;; Defined at:
 11343 ;;		line 81 in file "src/driver/base/i2c.c"
 11344 ;; Parameters:    Size  Location     Type
 11345 ;;  dev             2   75[BANK0 ] PTR struct i2c_dev__
 11346 ;;		 -> g_i2c_bus(8), NULL(0), 
 11347 ;;  addr            1   77[BANK0 ] unsigned char 
 11348 ;;  reg             1   78[BANK0 ] unsigned char 
 11349 ;;  data            2   79[BANK0 ] PTR const unsigned char 
 11350 ;;		 -> print_char@map(8), lcd_clear_screen@buf(128), ssd1306_setpos@data(3), ssd1306_databyte@data(1), 
 11351 ;;		 -> ssd1306_init_commands(27), 
 11352 ;;  len             2   81[BANK0 ] int 
 11353 ;; Auto vars:     Size  Location     Type
 11354 ;;  msg            14   83[BANK0 ] struct i2c_msg[2]
 11355 ;; Return value:  Size  Location     Type
 11356 ;;                  2   75[BANK0 ] int 
 11357 ;; Registers used:
 11358 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11359 ;; Tracked objects:
 11360 ;;		On entry : 0/0
 11361 ;;		On exit  : 0/0
 11362 ;;		Unchanged: 0/0
 11363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11364 ;;      Params:         0       8       0       0       0       0       0
 11365 ;;      Locals:         0      14       0       0       0       0       0
 11366 ;;      Temps:          0       0       0       0       0       0       0
 11367 ;;      Totals:         0      22       0       0       0       0       0
 11368 ;;Total ram usage:       22 bytes
 11369 ;; Hardware stack levels used:    1
 11370 ;; Hardware stack levels required when called:   13
 11371 ;; This function calls:
 11372 ;;		_i2c_transfer
 11373 ;; This function is called by:
 11374 ;;		_ssd1306_command
 11375 ;;		_ssd1306_data
 11376 ;;		_ssd1306_databyte
 11377 ;; This function uses a non-reentrant model
 11378 ;;
 11379                           
 11380                           	psect	text39
 11381  005FB2                     __ptext39:
 11382                           	opt callstack 0
 11383  005FB2                     _smbus8_write_data:
 11384                           	opt callstack 11
 11385  005FB2                     
 11386                           ;src/driver/base/i2c.c: 81: int smbus8_write_data(i2c_dev dev, u8 addr, u8 reg, const u8
      +                          * data, int len);src/driver/base/i2c.c: 82: {;src/driver/base/i2c.c: 83:  i2c_msg msg[2]
      +                          ;;src/driver/base/i2c.c: 85:  msg[0].addr = addr;
 11387  005FB2  C0CD  F0D3         	movff	smbus8_write_data@addr,smbus8_write_data@msg
 11388  005FB6  0100               	movlb	0	; () banked
 11389  005FB8  6BD4               	clrf	(smbus8_write_data@msg+1)& (0+255),b
 11390  005FBA                     
 11391                           ; BSR set to: 0
 11392                           ;src/driver/base/i2c.c: 86:  msg[0].flags = (1<<1);
 11393  005FBA  0E02               	movlw	2
 11394  005FBC  6FD5               	movwf	(smbus8_write_data@msg+2)& (0+255),b
 11395                           
 11396                           ;src/driver/base/i2c.c: 87:  msg[0].len = 1;
 11397  005FBE  0E00               	movlw	0
 11398  005FC0  6FD7               	movwf	(smbus8_write_data@msg+4)& (0+255),b
 11399  005FC2  0E01               	movlw	1
 11400  005FC4  6FD6               	movwf	(smbus8_write_data@msg+3)& (0+255),b
 11401  005FC6                     
 11402                           ; BSR set to: 0
 11403                           ;src/driver/base/i2c.c: 88:  msg[0].data = &reg;
 11404  005FC6  0ECE               	movlw	low smbus8_write_data@reg
 11405  005FC8  6FD8               	movwf	(smbus8_write_data@msg+5)& (0+255),b
 11406  005FCA  0E00               	movlw	high smbus8_write_data@reg
 11407  005FCC  6FD9               	movwf	(smbus8_write_data@msg+6)& (0+255),b
 11408  005FCE                     
 11409                           ; BSR set to: 0
 11410                           ;src/driver/base/i2c.c: 90:  msg[1].addr = addr;
 11411  005FCE  C0CD  F0DA         	movff	smbus8_write_data@addr,smbus8_write_data@msg+7
 11412  005FD2  6BDB               	clrf	(smbus8_write_data@msg+8)& (0+255),b
 11413  005FD4                     
 11414                           ; BSR set to: 0
 11415                           ;src/driver/base/i2c.c: 91:  msg[1].flags = (1<<2);
 11416  005FD4  0E04               	movlw	4
 11417  005FD6  6FDC               	movwf	(smbus8_write_data@msg+9)& (0+255),b
 11418  005FD8                     
 11419                           ; BSR set to: 0
 11420                           ;src/driver/base/i2c.c: 92:  msg[1].len = len;
 11421  005FD8  C0D1  F0DD         	movff	smbus8_write_data@len,smbus8_write_data@msg+10
 11422  005FDC  C0D2  F0DE         	movff	smbus8_write_data@len+1,smbus8_write_data@msg+11
 11423                           
 11424                           ;src/driver/base/i2c.c: 93:  msg[1].data = (u8*)data;
 11425  005FE0  C0CF  F0DF         	movff	smbus8_write_data@data,smbus8_write_data@msg+12
 11426  005FE4  C0D0  F0E0         	movff	smbus8_write_data@data+1,smbus8_write_data@msg+13
 11427  005FE8                     
 11428                           ; BSR set to: 0
 11429                           ;src/driver/base/i2c.c: 95:  return i2c_transfer(dev, msg, 2);;	Return value of _smbus8_
      +                          write_data is never used
 11430  005FE8  C0CB  F0C5         	movff	smbus8_write_data@dev,i2c_transfer@dev
 11431  005FEC  C0CC  F0C6         	movff	smbus8_write_data@dev+1,i2c_transfer@dev+1
 11432  005FF0  0ED3               	movlw	low smbus8_write_data@msg
 11433  005FF2  6FC7               	movwf	i2c_transfer@msg& (0+255),b
 11434  005FF4  0E00               	movlw	high smbus8_write_data@msg
 11435  005FF6  6FC8               	movwf	(i2c_transfer@msg+1)& (0+255),b
 11436  005FF8  0E00               	movlw	0
 11437  005FFA  6FCA               	movwf	(i2c_transfer@num+1)& (0+255),b
 11438  005FFC  0E02               	movlw	2
 11439  005FFE  6FC9               	movwf	i2c_transfer@num& (0+255),b
 11440  006000  EC3C  F02E         	call	_i2c_transfer	;wreg free
 11441  006004  0012               	return		;funcret
 11442  006006                     __end_of_smbus8_write_data:
 11443                           	opt callstack 0
 11444                           
 11445 ;; *************** function _i2c_probe_addr *****************
 11446 ;; Defined at:
 11447 ;;		line 21 in file "src/driver/base/i2c.c"
 11448 ;; Parameters:    Size  Location     Type
 11449 ;;  dev             2   75[BANK0 ] PTR struct i2c_dev__
 11450 ;;		 -> g_i2c_bus(8), 
 11451 ;;  addr            1   77[BANK0 ] unsigned char 
 11452 ;; Auto vars:     Size  Location     Type
 11453 ;;  msg             7   78[BANK0 ] struct i2c_msg
 11454 ;; Return value:  Size  Location     Type
 11455 ;;                  2   75[BANK0 ] int 
 11456 ;; Registers used:
 11457 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11458 ;; Tracked objects:
 11459 ;;		On entry : 0/0
 11460 ;;		On exit  : 0/0
 11461 ;;		Unchanged: 0/0
 11462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11463 ;;      Params:         0       3       0       0       0       0       0
 11464 ;;      Locals:         0       7       0       0       0       0       0
 11465 ;;      Temps:          0       0       0       0       0       0       0
 11466 ;;      Totals:         0      10       0       0       0       0       0
 11467 ;;Total ram usage:       10 bytes
 11468 ;; Hardware stack levels used:    1
 11469 ;; Hardware stack levels required when called:   13
 11470 ;; This function calls:
 11471 ;;		_i2c_transfer
 11472 ;; This function is called by:
 11473 ;;		_lnb_configure
 11474 ;;		_si5328_init
 11475 ;;		_lcd_init
 11476 ;; This function uses a non-reentrant model
 11477 ;;
 11478                           
 11479                           	psect	text40
 11480  00625A                     __ptext40:
 11481                           	opt callstack 0
 11482  00625A                     _i2c_probe_addr:
 11483                           	opt callstack 16
 11484  00625A                     
 11485                           ;src/driver/base/i2c.c: 21: int i2c_probe_addr(i2c_dev dev, u8 addr);src/driver/base/i2c
      +                          .c: 22: {;src/driver/base/i2c.c: 23:  i2c_msg msg;;src/driver/base/i2c.c: 24:  msg.addr 
      +                          = addr;
 11486  00625A  C0CD  F0CE         	movff	i2c_probe_addr@addr,i2c_probe_addr@msg
 11487  00625E  0100               	movlb	0	; () banked
 11488  006260  6BCF               	clrf	(i2c_probe_addr@msg+1)& (0+255),b
 11489  006262                     
 11490                           ; BSR set to: 0
 11491                           ;src/driver/base/i2c.c: 25:  msg.flags = (1<<1) | (1<<2);
 11492  006262  0E06               	movlw	6
 11493  006264  6FD0               	movwf	(i2c_probe_addr@msg+2)& (0+255),b
 11494                           
 11495                           ;src/driver/base/i2c.c: 26:  msg.len = 0;
 11496  006266  0E00               	movlw	0
 11497  006268  6FD2               	movwf	(i2c_probe_addr@msg+4)& (0+255),b
 11498  00626A  0E00               	movlw	0
 11499  00626C  6FD1               	movwf	(i2c_probe_addr@msg+3)& (0+255),b
 11500  00626E                     
 11501                           ; BSR set to: 0
 11502                           ;src/driver/base/i2c.c: 27:  msg.data = ((void*)0);
 11503  00626E  0E00               	movlw	0
 11504  006270  6FD3               	movwf	(i2c_probe_addr@msg+5)& (0+255),b
 11505  006272  0E00               	movlw	0
 11506  006274  6FD4               	movwf	(i2c_probe_addr@msg+6)& (0+255),b
 11507  006276                     
 11508                           ; BSR set to: 0
 11509                           ;src/driver/base/i2c.c: 28:  return i2c_transfer(dev, &msg, 1);
 11510  006276  C0CB  F0C5         	movff	i2c_probe_addr@dev,i2c_transfer@dev
 11511  00627A  C0CC  F0C6         	movff	i2c_probe_addr@dev+1,i2c_transfer@dev+1
 11512  00627E  0ECE               	movlw	low i2c_probe_addr@msg
 11513  006280  6FC7               	movwf	i2c_transfer@msg& (0+255),b
 11514  006282  0E00               	movlw	high i2c_probe_addr@msg
 11515  006284  6FC8               	movwf	(i2c_transfer@msg+1)& (0+255),b
 11516  006286  0E00               	movlw	0
 11517  006288  6FCA               	movwf	(i2c_transfer@num+1)& (0+255),b
 11518  00628A  0E01               	movlw	1
 11519  00628C  6FC9               	movwf	i2c_transfer@num& (0+255),b
 11520  00628E  EC3C  F02E         	call	_i2c_transfer	;wreg free
 11521  006292  C0C5  F0CB         	movff	?_i2c_transfer,?_i2c_probe_addr
 11522  006296  C0C6  F0CC         	movff	?_i2c_transfer+1,?_i2c_probe_addr+1
 11523  00629A  0012               	return		;funcret
 11524  00629C                     __end_of_i2c_probe_addr:
 11525                           	opt callstack 0
 11526                           
 11527 ;; *************** function _init_gps *****************
 11528 ;; Defined at:
 11529 ;;		line 313 in file "src/gps.c"
 11530 ;; Parameters:    Size  Location     Type
 11531 ;;		None
 11532 ;; Auto vars:     Size  Location     Type
 11533 ;;		None
 11534 ;; Return value:  Size  Location     Type
 11535 ;;                  1    wreg      void 
 11536 ;; Registers used:
 11537 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11538 ;; Tracked objects:
 11539 ;;		On entry : 0/0
 11540 ;;		On exit  : 0/0
 11541 ;;		Unchanged: 0/0
 11542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11543 ;;      Params:         0       0       0       0       0       0       0
 11544 ;;      Locals:         0       0       0       0       0       0       0
 11545 ;;      Temps:          0       0       0       0       0       0       0
 11546 ;;      Totals:         0       0       0       0       0       0       0
 11547 ;;Total ram usage:        0 bytes
 11548 ;; Hardware stack levels used:    1
 11549 ;; Hardware stack levels required when called:    5
 11550 ;; This function calls:
 11551 ;;		_send_UBX_string
 11552 ;; This function is called by:
 11553 ;;		_main
 11554 ;; This function uses a non-reentrant model
 11555 ;;
 11556                           
 11557                           	psect	text41
 11558  0065E4                     __ptext41:
 11559                           	opt callstack 0
 11560  0065E4                     _init_gps:
 11561                           	opt callstack 25
 11562  0065E4                     
 11563                           ;src/gps.c: 316:  {;src/gps.c: 319:   send_UBX_string(6,0x31,0,((void*)0));
 11564  0065E4  0E31               	movlw	49
 11565  0065E6  6E0F               	movwf	send_UBX_string@id^0,c
 11566  0065E8  0E00               	movlw	0
 11567  0065EA  6E11               	movwf	(send_UBX_string@len+1)^0,c
 11568  0065EC  0E00               	movlw	0
 11569  0065EE  6E10               	movwf	send_UBX_string@len^0,c
 11570  0065F0  0E00               	movlw	0
 11571  0065F2  6E12               	movwf	send_UBX_string@payload^0,c
 11572  0065F4  0E00               	movlw	0
 11573  0065F6  6E13               	movwf	(send_UBX_string@payload+1)^0,c
 11574  0065F8  0E06               	movlw	6
 11575  0065FA  ECF7  F019         	call	_send_UBX_string
 11576  0065FE  0012               	return		;funcret
 11577  006600                     __end_of_init_gps:
 11578                           	opt callstack 0
 11579                           
 11580 ;; *************** function _send_UBX_string *****************
 11581 ;; Defined at:
 11582 ;;		line 323 in file "src/gps.c"
 11583 ;; Parameters:    Size  Location     Type
 11584 ;;  class           1    wreg     unsigned char 
 11585 ;;  id              1   14[COMRAM] unsigned char 
 11586 ;;  len             2   15[COMRAM] unsigned short 
 11587 ;;  payload         2   17[COMRAM] PTR unsigned char 
 11588 ;;		 -> NULL(0), 
 11589 ;; Auto vars:     Size  Location     Type
 11590 ;;  class           1   70[COMRAM] unsigned char 
 11591 ;;  i               2   75[COMRAM] int 
 11592 ;;  i               2   73[COMRAM] int 
 11593 ;;  i               2   71[COMRAM] int 
 11594 ;;  txbuf          50   20[COMRAM] unsigned char [50]
 11595 ;;  idx             2   79[COMRAM] int 
 11596 ;;  CK_A            1   78[COMRAM] unsigned char 
 11597 ;;  CK_B            1   77[COMRAM] unsigned char 
 11598 ;; Return value:  Size  Location     Type
 11599 ;;                  1    wreg      void 
 11600 ;; Registers used:
 11601 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11602 ;; Tracked objects:
 11603 ;;		On entry : 0/0
 11604 ;;		On exit  : 0/0
 11605 ;;		Unchanged: 0/0
 11606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11607 ;;      Params:         5       0       0       0       0       0       0
 11608 ;;      Locals:        61       0       0       0       0       0       0
 11609 ;;      Temps:          1       0       0       0       0       0       0
 11610 ;;      Totals:        67       0       0       0       0       0       0
 11611 ;;Total ram usage:       67 bytes
 11612 ;; Hardware stack levels used:    1
 11613 ;; Hardware stack levels required when called:    4
 11614 ;; This function calls:
 11615 ;;		_putgps
 11616 ;; This function is called by:
 11617 ;;		_init_gps
 11618 ;; This function uses a non-reentrant model
 11619 ;;
 11620                           
 11621                           	psect	text42
 11622  0033EE                     __ptext42:
 11623                           	opt callstack 0
 11624  0033EE                     _send_UBX_string:
 11625                           	opt callstack 25
 11626                           
 11627                           ;incstack = 0
 11628                           ;send_UBX_string@class stored from wreg
 11629  0033EE  6E47               	movwf	send_UBX_string@class^0,c
 11630  0033F0                     
 11631                           ;src/gps.c: 323: void send_UBX_string(u8 class, u8 id, u16 len, u8 *payload);src/gps.c: 
      +                          324: {;src/gps.c: 325:  static u16 ubxdel = 0;;src/gps.c: 326:  u8 txbuf[50];;src/gps.c:
      +                           327:  int idx = 0;
 11632  0033F0  0E00               	movlw	0
 11633  0033F2  6E51               	movwf	(send_UBX_string@idx+1)^0,c
 11634  0033F4  0E00               	movlw	0
 11635  0033F6  6E50               	movwf	send_UBX_string@idx^0,c
 11636  0033F8                     
 11637                           ;src/gps.c: 329:  if(++ubxdel < 2)
 11638  0033F8  0101               	movlb	1	; () banked
 11639  0033FA  4B9A               	infsnz	send_UBX_string@ubxdel& (0+255),f,b
 11640  0033FC  2B9B               	incf	(send_UBX_string@ubxdel+1)& (0+255),f,b
 11641  0033FE  519B               	movf	(send_UBX_string@ubxdel+1)& (0+255),w,b
 11642  003400  E107               	bnz	u10951
 11643  003402  0E02               	movlw	2
 11644  003404  5D9A               	subwf	send_UBX_string@ubxdel& (0+255),w,b
 11645  003406  B0D8               	btfsc	status,0,c
 11646  003408  EF08  F01A         	goto	u10951
 11647  00340C  EF0A  F01A         	goto	u10950
 11648  003410                     u10951:
 11649  003410  EF0C  F01A         	goto	l9184
 11650  003414                     u10950:
 11651  003414  EFC4  F01A         	goto	l817
 11652  003418                     l9184:
 11653                           
 11654                           ; BSR set to: 1
 11655                           ;src/gps.c: 333:     ubxdel = 0;
 11656  003418  0E00               	movlw	0
 11657  00341A  6F9B               	movwf	(send_UBX_string@ubxdel+1)& (0+255),b
 11658  00341C  0E00               	movlw	0
 11659  00341E  6F9A               	movwf	send_UBX_string@ubxdel& (0+255),b
 11660  003420                     
 11661                           ; BSR set to: 1
 11662                           ;src/gps.c: 335:  txbuf[idx++] = 0xb5;
 11663  003420  0EB5               	movlw	181
 11664  003422  6E15               	movwf	send_UBX_string@txbuf^0,c
 11665  003424                     
 11666                           ; BSR set to: 1
 11667  003424  4A50               	infsnz	send_UBX_string@idx^0,f,c
 11668  003426  2A51               	incf	(send_UBX_string@idx+1)^0,f,c
 11669  003428                     
 11670                           ; BSR set to: 1
 11671                           ;src/gps.c: 336:  txbuf[idx++] = 0x62;
 11672  003428  0E15               	movlw	low send_UBX_string@txbuf
 11673  00342A  2450               	addwf	send_UBX_string@idx^0,w,c
 11674  00342C  6ED9               	movwf	fsr2l,c
 11675  00342E  0E00               	movlw	high send_UBX_string@txbuf
 11676  003430  2051               	addwfc	(send_UBX_string@idx+1)^0,w,c
 11677  003432  6EDA               	movwf	fsr2h,c
 11678  003434  0E62               	movlw	98
 11679  003436  6EDF               	movwf	indf2,c
 11680  003438                     
 11681                           ; BSR set to: 1
 11682  003438  4A50               	infsnz	send_UBX_string@idx^0,f,c
 11683  00343A  2A51               	incf	(send_UBX_string@idx+1)^0,f,c
 11684  00343C                     
 11685                           ; BSR set to: 1
 11686                           ;src/gps.c: 337:  txbuf[idx++] = class;
 11687  00343C  0E15               	movlw	low send_UBX_string@txbuf
 11688  00343E  2450               	addwf	send_UBX_string@idx^0,w,c
 11689  003440  6ED9               	movwf	fsr2l,c
 11690  003442  0E00               	movlw	high send_UBX_string@txbuf
 11691  003444  2051               	addwfc	(send_UBX_string@idx+1)^0,w,c
 11692  003446  6EDA               	movwf	fsr2h,c
 11693  003448  C047  FFDF         	movff	send_UBX_string@class,indf2
 11694  00344C                     
 11695                           ; BSR set to: 1
 11696  00344C  4A50               	infsnz	send_UBX_string@idx^0,f,c
 11697  00344E  2A51               	incf	(send_UBX_string@idx+1)^0,f,c
 11698  003450                     
 11699                           ; BSR set to: 1
 11700                           ;src/gps.c: 338:  txbuf[idx++] = id;
 11701  003450  0E15               	movlw	low send_UBX_string@txbuf
 11702  003452  2450               	addwf	send_UBX_string@idx^0,w,c
 11703  003454  6ED9               	movwf	fsr2l,c
 11704  003456  0E00               	movlw	high send_UBX_string@txbuf
 11705  003458  2051               	addwfc	(send_UBX_string@idx+1)^0,w,c
 11706  00345A  6EDA               	movwf	fsr2h,c
 11707  00345C  C00F  FFDF         	movff	send_UBX_string@id,indf2
 11708  003460                     
 11709                           ; BSR set to: 1
 11710  003460  4A50               	infsnz	send_UBX_string@idx^0,f,c
 11711  003462  2A51               	incf	(send_UBX_string@idx+1)^0,f,c
 11712  003464                     
 11713                           ; BSR set to: 1
 11714                           ;src/gps.c: 339:  txbuf[idx++] = (u8)(len & 0xff);
 11715  003464  0E15               	movlw	low send_UBX_string@txbuf
 11716  003466  2450               	addwf	send_UBX_string@idx^0,w,c
 11717  003468  6ED9               	movwf	fsr2l,c
 11718  00346A  0E00               	movlw	high send_UBX_string@txbuf
 11719  00346C  2051               	addwfc	(send_UBX_string@idx+1)^0,w,c
 11720  00346E  6EDA               	movwf	fsr2h,c
 11721  003470  C010  FFDF         	movff	send_UBX_string@len,indf2
 11722  003474                     
 11723                           ; BSR set to: 1
 11724  003474  4A50               	infsnz	send_UBX_string@idx^0,f,c
 11725  003476  2A51               	incf	(send_UBX_string@idx+1)^0,f,c
 11726  003478                     
 11727                           ; BSR set to: 1
 11728                           ;src/gps.c: 340:  txbuf[idx++] = (u8)(len >> 8);
 11729  003478  0E15               	movlw	low send_UBX_string@txbuf
 11730  00347A  2450               	addwf	send_UBX_string@idx^0,w,c
 11731  00347C  6ED9               	movwf	fsr2l,c
 11732  00347E  0E00               	movlw	high send_UBX_string@txbuf
 11733  003480  2051               	addwfc	(send_UBX_string@idx+1)^0,w,c
 11734  003482  6EDA               	movwf	fsr2h,c
 11735  003484  5011               	movf	(send_UBX_string@len+1)^0,w,c
 11736  003486  6EDF               	movwf	indf2,c
 11737  003488                     
 11738                           ; BSR set to: 1
 11739  003488  4A50               	infsnz	send_UBX_string@idx^0,f,c
 11740  00348A  2A51               	incf	(send_UBX_string@idx+1)^0,f,c
 11741                           
 11742                           ;src/gps.c: 341:  for(int i=0; i<len; i++)
 11743  00348C  0E00               	movlw	0
 11744  00348E  6E49               	movwf	(send_UBX_string@i+1)^0,c
 11745  003490  0E00               	movlw	0
 11746  003492  6E48               	movwf	send_UBX_string@i^0,c
 11747  003494  EF5E  F01A         	goto	l9216
 11748  003498                     l9210:
 11749                           
 11750                           ;src/gps.c: 342:  {;src/gps.c: 343:   txbuf[idx++] = payload[i];
 11751  003498  5048               	movf	send_UBX_string@i^0,w,c
 11752  00349A  2412               	addwf	send_UBX_string@payload^0,w,c
 11753  00349C  6ED9               	movwf	fsr2l,c
 11754  00349E  5049               	movf	(send_UBX_string@i+1)^0,w,c
 11755  0034A0  2013               	addwfc	(send_UBX_string@payload+1)^0,w,c
 11756  0034A2  6EDA               	movwf	fsr2h,c
 11757  0034A4  0E15               	movlw	low send_UBX_string@txbuf
 11758  0034A6  2450               	addwf	send_UBX_string@idx^0,w,c
 11759  0034A8  6EE1               	movwf	fsr1l,c
 11760  0034AA  0E00               	movlw	high send_UBX_string@txbuf
 11761  0034AC  2051               	addwfc	(send_UBX_string@idx+1)^0,w,c
 11762  0034AE  6EE2               	movwf	fsr1h,c
 11763  0034B0  CFDF FFE7          	movff	indf2,indf1
 11764  0034B4  4A50               	infsnz	send_UBX_string@idx^0,f,c
 11765  0034B6  2A51               	incf	(send_UBX_string@idx+1)^0,f,c
 11766  0034B8                     
 11767                           ;src/gps.c: 344:  }
 11768  0034B8  4A48               	infsnz	send_UBX_string@i^0,f,c
 11769  0034BA  2A49               	incf	(send_UBX_string@i+1)^0,f,c
 11770  0034BC                     l9216:
 11771  0034BC  5010               	movf	send_UBX_string@len^0,w,c
 11772  0034BE  5C48               	subwf	send_UBX_string@i^0,w,c
 11773  0034C0  5011               	movf	(send_UBX_string@len+1)^0,w,c
 11774  0034C2  5849               	subwfb	(send_UBX_string@i+1)^0,w,c
 11775  0034C4  A0D8               	btfss	status,0,c
 11776  0034C6  EF67  F01A         	goto	u10961
 11777  0034CA  EF69  F01A         	goto	u10960
 11778  0034CE                     u10961:
 11779  0034CE  EF4C  F01A         	goto	l9210
 11780  0034D2                     u10960:
 11781  0034D2                     
 11782                           ;src/gps.c: 347:  u8 CK_A = 0, CK_B = 0;
 11783  0034D2  0E00               	movlw	0
 11784  0034D4  6E4F               	movwf	send_UBX_string@CK_A^0,c
 11785  0034D6  0E00               	movlw	0
 11786  0034D8  6E4E               	movwf	send_UBX_string@CK_B^0,c
 11787                           
 11788                           ;src/gps.c: 348:  for(int i=2; i<idx; i++)
 11789  0034DA  0E00               	movlw	0
 11790  0034DC  6E4B               	movwf	(send_UBX_string@i_2444+1)^0,c
 11791  0034DE  0E02               	movlw	2
 11792  0034E0  6E4A               	movwf	send_UBX_string@i_2444^0,c
 11793  0034E2  EF81  F01A         	goto	l9226
 11794  0034E6                     l9220:
 11795                           
 11796                           ;src/gps.c: 349:  {;src/gps.c: 350:   CK_A = CK_A + txbuf[i];
 11797  0034E6  0E15               	movlw	low send_UBX_string@txbuf
 11798  0034E8  244A               	addwf	send_UBX_string@i_2444^0,w,c
 11799  0034EA  6ED9               	movwf	fsr2l,c
 11800  0034EC  0E00               	movlw	high send_UBX_string@txbuf
 11801  0034EE  204B               	addwfc	(send_UBX_string@i_2444+1)^0,w,c
 11802  0034F0  6EDA               	movwf	fsr2h,c
 11803  0034F2  50DF               	movf	indf2,w,c
 11804  0034F4  244F               	addwf	send_UBX_string@CK_A^0,w,c
 11805  0034F6  6E4F               	movwf	send_UBX_string@CK_A^0,c
 11806  0034F8                     
 11807                           ;src/gps.c: 351:   CK_B = CK_B + CK_A;
 11808  0034F8  504E               	movf	send_UBX_string@CK_B^0,w,c
 11809  0034FA  244F               	addwf	send_UBX_string@CK_A^0,w,c
 11810  0034FC  6E4E               	movwf	send_UBX_string@CK_B^0,c
 11811  0034FE                     
 11812                           ;src/gps.c: 352:  }
 11813  0034FE  4A4A               	infsnz	send_UBX_string@i_2444^0,f,c
 11814  003500  2A4B               	incf	(send_UBX_string@i_2444+1)^0,f,c
 11815  003502                     l9226:
 11816  003502  5050               	movf	send_UBX_string@idx^0,w,c
 11817  003504  5C4A               	subwf	send_UBX_string@i_2444^0,w,c
 11818  003506  504B               	movf	(send_UBX_string@i_2444+1)^0,w,c
 11819  003508  0A80               	xorlw	128
 11820  00350A  6E14               	movwf	??_send_UBX_string^0,c
 11821  00350C  5051               	movf	(send_UBX_string@idx+1)^0,w,c
 11822  00350E  0A80               	xorlw	128
 11823  003510  5814               	subwfb	??_send_UBX_string^0,w,c
 11824  003512  A0D8               	btfss	status,0,c
 11825  003514  EF8E  F01A         	goto	u10971
 11826  003518  EF90  F01A         	goto	u10970
 11827  00351C                     u10971:
 11828  00351C  EF73  F01A         	goto	l9220
 11829  003520                     u10970:
 11830  003520                     
 11831                           ;src/gps.c: 353:  txbuf[idx++] = CK_A;
 11832  003520  0E15               	movlw	low send_UBX_string@txbuf
 11833  003522  2450               	addwf	send_UBX_string@idx^0,w,c
 11834  003524  6ED9               	movwf	fsr2l,c
 11835  003526  0E00               	movlw	high send_UBX_string@txbuf
 11836  003528  2051               	addwfc	(send_UBX_string@idx+1)^0,w,c
 11837  00352A  6EDA               	movwf	fsr2h,c
 11838  00352C  C04F  FFDF         	movff	send_UBX_string@CK_A,indf2
 11839  003530  4A50               	infsnz	send_UBX_string@idx^0,f,c
 11840  003532  2A51               	incf	(send_UBX_string@idx+1)^0,f,c
 11841  003534                     
 11842                           ;src/gps.c: 354:  txbuf[idx++] = CK_B;
 11843  003534  0E15               	movlw	low send_UBX_string@txbuf
 11844  003536  2450               	addwf	send_UBX_string@idx^0,w,c
 11845  003538  6ED9               	movwf	fsr2l,c
 11846  00353A  0E00               	movlw	high send_UBX_string@txbuf
 11847  00353C  2051               	addwfc	(send_UBX_string@idx+1)^0,w,c
 11848  00353E  6EDA               	movwf	fsr2h,c
 11849  003540  C04E  FFDF         	movff	send_UBX_string@CK_B,indf2
 11850  003544  4A50               	infsnz	send_UBX_string@idx^0,f,c
 11851  003546  2A51               	incf	(send_UBX_string@idx+1)^0,f,c
 11852  003548                     
 11853                           ;src/gps.c: 356:  for(int i=0; i<idx; i++)
 11854  003548  0E00               	movlw	0
 11855  00354A  6E4D               	movwf	(send_UBX_string@i_2445+1)^0,c
 11856  00354C  0E00               	movlw	0
 11857  00354E  6E4C               	movwf	send_UBX_string@i_2445^0,c
 11858  003550  EFB5  F01A         	goto	l9240
 11859  003554                     l9236:
 11860                           
 11861                           ;src/gps.c: 357:  {;src/gps.c: 358:   putgps(txbuf[i]);
 11862  003554  0E15               	movlw	low send_UBX_string@txbuf
 11863  003556  244C               	addwf	send_UBX_string@i_2445^0,w,c
 11864  003558  6ED9               	movwf	fsr2l,c
 11865  00355A  0E00               	movlw	high send_UBX_string@txbuf
 11866  00355C  204D               	addwfc	(send_UBX_string@i_2445+1)^0,w,c
 11867  00355E  6EDA               	movwf	fsr2h,c
 11868  003560  50DF               	movf	indf2,w,c
 11869  003562  EC0B  F033         	call	_putgps
 11870  003566                     
 11871                           ;src/gps.c: 359:  }
 11872  003566  4A4C               	infsnz	send_UBX_string@i_2445^0,f,c
 11873  003568  2A4D               	incf	(send_UBX_string@i_2445+1)^0,f,c
 11874  00356A                     l9240:
 11875  00356A  5050               	movf	send_UBX_string@idx^0,w,c
 11876  00356C  5C4C               	subwf	send_UBX_string@i_2445^0,w,c
 11877  00356E  504D               	movf	(send_UBX_string@i_2445+1)^0,w,c
 11878  003570  0A80               	xorlw	128
 11879  003572  6E14               	movwf	??_send_UBX_string^0,c
 11880  003574  5051               	movf	(send_UBX_string@idx+1)^0,w,c
 11881  003576  0A80               	xorlw	128
 11882  003578  5814               	subwfb	??_send_UBX_string^0,w,c
 11883  00357A  A0D8               	btfss	status,0,c
 11884  00357C  EFC2  F01A         	goto	u10981
 11885  003580  EFC4  F01A         	goto	u10980
 11886  003584                     u10981:
 11887  003584  EFAA  F01A         	goto	l9236
 11888  003588                     u10980:
 11889  003588                     l817:
 11890  003588  0012               	return		;funcret
 11891  00358A                     __end_of_send_UBX_string:
 11892                           	opt callstack 0
 11893                           
 11894 ;; *************** function _putgps *****************
 11895 ;; Defined at:
 11896 ;;		line 127 in file "src/driver/usart.c"
 11897 ;; Parameters:    Size  Location     Type
 11898 ;;  c               1    wreg     unsigned char 
 11899 ;; Auto vars:     Size  Location     Type
 11900 ;;  c               1   13[COMRAM] unsigned char 
 11901 ;; Return value:  Size  Location     Type
 11902 ;;                  1    wreg      void 
 11903 ;; Registers used:
 11904 ;;		wreg, status,2, cstack
 11905 ;; Tracked objects:
 11906 ;;		On entry : 0/0
 11907 ;;		On exit  : 0/0
 11908 ;;		Unchanged: 0/0
 11909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11910 ;;      Params:         0       0       0       0       0       0       0
 11911 ;;      Locals:         1       0       0       0       0       0       0
 11912 ;;      Temps:          0       0       0       0       0       0       0
 11913 ;;      Totals:         1       0       0       0       0       0       0
 11914 ;;Total ram usage:        1 bytes
 11915 ;; Hardware stack levels used:    1
 11916 ;; Hardware stack levels required when called:    3
 11917 ;; This function calls:
 11918 ;;		_usart_putc
 11919 ;; This function is called by:
 11920 ;;		_send_UBX_string
 11921 ;; This function uses a non-reentrant model
 11922 ;;
 11923                           
 11924                           	psect	text43
 11925  006616                     __ptext43:
 11926                           	opt callstack 0
 11927  006616                     _putgps:
 11928                           	opt callstack 25
 11929                           
 11930                           ;incstack = 0
 11931                           ;putgps@c stored from wreg
 11932  006616  6E0E               	movwf	putgps@c^0,c
 11933  006618                     
 11934                           ;src/driver/usart.c: 127: void putgps(u8 c);src/driver/usart.c: 128: {;src/driver/usart.
      +                          c: 132:  usart_putc(c);
 11935  006618  500E               	movf	putgps@c^0,w,c
 11936  00661A  EC00  F033         	call	_usart_putc
 11937  00661E  0012               	return		;funcret
 11938  006620                     __end_of_putgps:
 11939                           	opt callstack 0
 11940                           
 11941 ;; *************** function _init_gpios *****************
 11942 ;; Defined at:
 11943 ;;		line 6 in file "src/gpio.c"
 11944 ;; Parameters:    Size  Location     Type
 11945 ;;		None
 11946 ;; Auto vars:     Size  Location     Type
 11947 ;;		None
 11948 ;; Return value:  Size  Location     Type
 11949 ;;                  1    wreg      void 
 11950 ;; Registers used:
 11951 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11952 ;; Tracked objects:
 11953 ;;		On entry : 0/0
 11954 ;;		On exit  : 0/0
 11955 ;;		Unchanged: 0/0
 11956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11957 ;;      Params:         0       0       0       0       0       0       0
 11958 ;;      Locals:         0       0       0       0       0       0       0
 11959 ;;      Temps:          3       0       0       0       0       0       0
 11960 ;;      Totals:         3       0       0       0       0       0       0
 11961 ;;Total ram usage:        3 bytes
 11962 ;; Hardware stack levels used:    1
 11963 ;; Hardware stack levels required when called:    2
 11964 ;; This function calls:
 11965 ;;		Nothing
 11966 ;; This function is called by:
 11967 ;;		_main
 11968 ;; This function uses a non-reentrant model
 11969 ;;
 11970                           
 11971                           	psect	text44
 11972  000EE6                     __ptext44:
 11973                           	opt callstack 0
 11974  000EE6                     _init_gpios:
 11975                           	opt callstack 28
 11976  000EE6                     
 11977                           ;src/gpio.c: 9:     ADCON1bits.PCFG = 0xF;
 11978  000EE6  0E0F               	movlw	15
 11979  000EE8  12C1               	iorwf	193,f,c	;volatile
 11980  000EEA                     
 11981                           ;src/gpio.c: 10:     INTCON2bits.nRBPU = 0;
 11982  000EEA  9EF1               	bcf	241,7,c	;volatile
 11983  000EEC                     
 11984                           ;src/gpio.c: 13:     *((PIN_ADF_LOCK)->pTRIS) |= (PIN_ADF_LOCK)->mask;
 11985  000EEC  0EF6               	movlw	low (_PIN_ADF_LOCK_DEF+4)
 11986  000EEE  6EF6               	movwf	tblptrl,c
 11987  000EF0  0E78               	movlw	high (_PIN_ADF_LOCK_DEF+4)
 11988  000EF2  6EF7               	movwf	tblptrh,c
 11989  000EF4                     	if	0	;tblptru may be non-zero
 11990  000EF4                     	endif
 11991  000EF4                     	if	0	;tblptru may be non-zero
 11992  000EF4                     	endif
 11993  000EF4  0008               	tblrd		*
 11994  000EF6  CFF5 F00D          	movff	tablat,??_init_gpios
 11995  000EFA  0EF4               	movlw	low (_PIN_ADF_LOCK_DEF+2)
 11996  000EFC  6EF6               	movwf	tblptrl,c
 11997  000EFE  0E78               	movlw	high (_PIN_ADF_LOCK_DEF+2)
 11998  000F00  6EF7               	movwf	tblptrh,c
 11999  000F02                     	if	0	;tblptru may be non-zero
 12000  000F02                     	endif
 12001  000F02                     	if	0	;tblptru may be non-zero
 12002  000F02                     	endif
 12003  000F02  0009               	tblrd		*+
 12004  000F04  CFF5 FFD9          	movff	tablat,fsr2l
 12005  000F08  0009               	tblrd		*+
 12006  000F0A  CFF5 FFDA          	movff	tablat,fsr2h
 12007  000F0E  500D               	movf	??_init_gpios^0,w,c
 12008  000F10  12DF               	iorwf	indf2,f,c
 12009  000F12                     
 12010                           ;src/gpio.c: 15:     *((PIN_ADF_CE)->pPORT) &= ~(PIN_ADF_CE)->mask;
 12011  000F12  0EF1               	movlw	low (_PIN_ADF_CE_DEF+4)
 12012  000F14  6EF6               	movwf	tblptrl,c
 12013  000F16  0E78               	movlw	high (_PIN_ADF_CE_DEF+4)
 12014  000F18  6EF7               	movwf	tblptrh,c
 12015  000F1A                     	if	0	;tblptru may be non-zero
 12016  000F1A                     	endif
 12017  000F1A                     	if	0	;tblptru may be non-zero
 12018  000F1A                     	endif
 12019  000F1A  0008               	tblrd		*
 12020  000F1C  50F5               	movf	tablat,w,c
 12021  000F1E  0AFF               	xorlw	255
 12022  000F20  6E0D               	movwf	??_init_gpios^0,c
 12023  000F22  0EED               	movlw	low _PIN_ADF_CE_DEF
 12024  000F24  6EF6               	movwf	tblptrl,c
 12025  000F26                     	if	1	;There is more than 1 active tblptr byte
 12026  000F26  0E78               	movlw	high _PIN_ADF_CE_DEF
 12027  000F28  6EF7               	movwf	tblptrh,c
 12028  000F2A                     	endif
 12029  000F2A                     	if	0	;There are less than 3 active tblptr bytes
 12030  000F2A                     	endif
 12031  000F2A  0009               	tblrd		*+
 12032  000F2C  CFF5 F00E          	movff	tablat,??_init_gpios+1
 12033  000F30  0009               	tblrd		*+
 12034  000F32  CFF5 F00F          	movff	tablat,??_init_gpios+2
 12035  000F36  C00E  FFD9         	movff	??_init_gpios+1,fsr2l
 12036  000F3A  C00F  FFDA         	movff	??_init_gpios+2,fsr2h
 12037  000F3E  500D               	movf	??_init_gpios^0,w,c
 12038  000F40  16DF               	andwf	indf2,f,c
 12039  000F42                     
 12040                           ;src/gpio.c: 16:     *((PIN_ADF_CE)->pTRIS) &= ~(PIN_ADF_CE)->mask;
 12041  000F42  0EF1               	movlw	low (_PIN_ADF_CE_DEF+4)
 12042  000F44  6EF6               	movwf	tblptrl,c
 12043  000F46  0E78               	movlw	high (_PIN_ADF_CE_DEF+4)
 12044  000F48  6EF7               	movwf	tblptrh,c
 12045  000F4A                     	if	0	;tblptru may be non-zero
 12046  000F4A                     	endif
 12047  000F4A                     	if	0	;tblptru may be non-zero
 12048  000F4A                     	endif
 12049  000F4A  0008               	tblrd		*
 12050  000F4C  50F5               	movf	tablat,w,c
 12051  000F4E  0AFF               	xorlw	255
 12052  000F50  6E0D               	movwf	??_init_gpios^0,c
 12053  000F52  0EEF               	movlw	low (_PIN_ADF_CE_DEF+2)
 12054  000F54  6EF6               	movwf	tblptrl,c
 12055  000F56  0E78               	movlw	high (_PIN_ADF_CE_DEF+2)
 12056  000F58  6EF7               	movwf	tblptrh,c
 12057  000F5A                     	if	0	;tblptru may be non-zero
 12058  000F5A                     	endif
 12059  000F5A                     	if	0	;tblptru may be non-zero
 12060  000F5A                     	endif
 12061  000F5A  0009               	tblrd		*+
 12062  000F5C  CFF5 FFD9          	movff	tablat,fsr2l
 12063  000F60  0009               	tblrd		*+
 12064  000F62  CFF5 FFDA          	movff	tablat,fsr2h
 12065  000F66  500D               	movf	??_init_gpios^0,w,c
 12066  000F68  16DF               	andwf	indf2,f,c
 12067  000F6A                     
 12068                           ;src/gpio.c: 18:     *((PIN_ADF_LE)->pPORT) &= ~(PIN_ADF_LE)->mask;
 12069  000F6A  0EEC               	movlw	low (_PIN_ADF_LE_DEF+4)
 12070  000F6C  6EF6               	movwf	tblptrl,c
 12071  000F6E  0E78               	movlw	high (_PIN_ADF_LE_DEF+4)
 12072  000F70  6EF7               	movwf	tblptrh,c
 12073  000F72                     	if	0	;tblptru may be non-zero
 12074  000F72                     	endif
 12075  000F72                     	if	0	;tblptru may be non-zero
 12076  000F72                     	endif
 12077  000F72  0008               	tblrd		*
 12078  000F74  50F5               	movf	tablat,w,c
 12079  000F76  0AFF               	xorlw	255
 12080  000F78  6E0D               	movwf	??_init_gpios^0,c
 12081  000F7A  0EE8               	movlw	low _PIN_ADF_LE_DEF
 12082  000F7C  6EF6               	movwf	tblptrl,c
 12083  000F7E                     	if	1	;There is more than 1 active tblptr byte
 12084  000F7E  0E78               	movlw	high _PIN_ADF_LE_DEF
 12085  000F80  6EF7               	movwf	tblptrh,c
 12086  000F82                     	endif
 12087  000F82                     	if	0	;There are less than 3 active tblptr bytes
 12088  000F82                     	endif
 12089  000F82  0009               	tblrd		*+
 12090  000F84  CFF5 F00E          	movff	tablat,??_init_gpios+1
 12091  000F88  0009               	tblrd		*+
 12092  000F8A  CFF5 F00F          	movff	tablat,??_init_gpios+2
 12093  000F8E  C00E  FFD9         	movff	??_init_gpios+1,fsr2l
 12094  000F92  C00F  FFDA         	movff	??_init_gpios+2,fsr2h
 12095  000F96  500D               	movf	??_init_gpios^0,w,c
 12096  000F98  16DF               	andwf	indf2,f,c
 12097  000F9A                     
 12098                           ;src/gpio.c: 19:     *((PIN_ADF_LE)->pTRIS) &= ~(PIN_ADF_LE)->mask;
 12099  000F9A  0EEC               	movlw	low (_PIN_ADF_LE_DEF+4)
 12100  000F9C  6EF6               	movwf	tblptrl,c
 12101  000F9E  0E78               	movlw	high (_PIN_ADF_LE_DEF+4)
 12102  000FA0  6EF7               	movwf	tblptrh,c
 12103  000FA2                     	if	0	;tblptru may be non-zero
 12104  000FA2                     	endif
 12105  000FA2                     	if	0	;tblptru may be non-zero
 12106  000FA2                     	endif
 12107  000FA2  0008               	tblrd		*
 12108  000FA4  50F5               	movf	tablat,w,c
 12109  000FA6  0AFF               	xorlw	255
 12110  000FA8  6E0D               	movwf	??_init_gpios^0,c
 12111  000FAA  0EEA               	movlw	low (_PIN_ADF_LE_DEF+2)
 12112  000FAC  6EF6               	movwf	tblptrl,c
 12113  000FAE  0E78               	movlw	high (_PIN_ADF_LE_DEF+2)
 12114  000FB0  6EF7               	movwf	tblptrh,c
 12115  000FB2                     	if	0	;tblptru may be non-zero
 12116  000FB2                     	endif
 12117  000FB2                     	if	0	;tblptru may be non-zero
 12118  000FB2                     	endif
 12119  000FB2  0009               	tblrd		*+
 12120  000FB4  CFF5 FFD9          	movff	tablat,fsr2l
 12121  000FB8  0009               	tblrd		*+
 12122  000FBA  CFF5 FFDA          	movff	tablat,fsr2h
 12123  000FBE  500D               	movf	??_init_gpios^0,w,c
 12124  000FC0  16DF               	andwf	indf2,f,c
 12125  000FC2                     
 12126                           ;src/gpio.c: 21:     *((PIN_SIO_DATA)->pPORT) &= ~(PIN_SIO_DATA)->mask;
 12127  000FC2  0EE7               	movlw	low (_PIN_SIO_DATA_DEF+4)
 12128  000FC4  6EF6               	movwf	tblptrl,c
 12129  000FC6  0E78               	movlw	high (_PIN_SIO_DATA_DEF+4)
 12130  000FC8  6EF7               	movwf	tblptrh,c
 12131  000FCA                     	if	0	;tblptru may be non-zero
 12132  000FCA                     	endif
 12133  000FCA                     	if	0	;tblptru may be non-zero
 12134  000FCA                     	endif
 12135  000FCA  0008               	tblrd		*
 12136  000FCC  50F5               	movf	tablat,w,c
 12137  000FCE  0AFF               	xorlw	255
 12138  000FD0  6E0D               	movwf	??_init_gpios^0,c
 12139  000FD2  0EE3               	movlw	low _PIN_SIO_DATA_DEF
 12140  000FD4  6EF6               	movwf	tblptrl,c
 12141  000FD6                     	if	1	;There is more than 1 active tblptr byte
 12142  000FD6  0E78               	movlw	high _PIN_SIO_DATA_DEF
 12143  000FD8  6EF7               	movwf	tblptrh,c
 12144  000FDA                     	endif
 12145  000FDA                     	if	0	;There are less than 3 active tblptr bytes
 12146  000FDA                     	endif
 12147  000FDA  0009               	tblrd		*+
 12148  000FDC  CFF5 F00E          	movff	tablat,??_init_gpios+1
 12149  000FE0  0009               	tblrd		*+
 12150  000FE2  CFF5 F00F          	movff	tablat,??_init_gpios+2
 12151  000FE6  C00E  FFD9         	movff	??_init_gpios+1,fsr2l
 12152  000FEA  C00F  FFDA         	movff	??_init_gpios+2,fsr2h
 12153  000FEE  500D               	movf	??_init_gpios^0,w,c
 12154  000FF0  16DF               	andwf	indf2,f,c
 12155  000FF2                     
 12156                           ;src/gpio.c: 22:     *((PIN_SIO_DATA)->pTRIS) &= ~(PIN_SIO_DATA)->mask;
 12157  000FF2  0EE7               	movlw	low (_PIN_SIO_DATA_DEF+4)
 12158  000FF4  6EF6               	movwf	tblptrl,c
 12159  000FF6  0E78               	movlw	high (_PIN_SIO_DATA_DEF+4)
 12160  000FF8  6EF7               	movwf	tblptrh,c
 12161  000FFA                     	if	0	;tblptru may be non-zero
 12162  000FFA                     	endif
 12163  000FFA                     	if	0	;tblptru may be non-zero
 12164  000FFA                     	endif
 12165  000FFA  0008               	tblrd		*
 12166  000FFC  50F5               	movf	tablat,w,c
 12167  000FFE  0AFF               	xorlw	255
 12168  001000  6E0D               	movwf	??_init_gpios^0,c
 12169  001002  0EE5               	movlw	low (_PIN_SIO_DATA_DEF+2)
 12170  001004  6EF6               	movwf	tblptrl,c
 12171  001006  0E78               	movlw	high (_PIN_SIO_DATA_DEF+2)
 12172  001008  6EF7               	movwf	tblptrh,c
 12173  00100A                     	if	0	;tblptru may be non-zero
 12174  00100A                     	endif
 12175  00100A                     	if	0	;tblptru may be non-zero
 12176  00100A                     	endif
 12177  00100A  0009               	tblrd		*+
 12178  00100C  CFF5 FFD9          	movff	tablat,fsr2l
 12179  001010  0009               	tblrd		*+
 12180  001012  CFF5 FFDA          	movff	tablat,fsr2h
 12181  001016  500D               	movf	??_init_gpios^0,w,c
 12182  001018  16DF               	andwf	indf2,f,c
 12183  00101A                     
 12184                           ;src/gpio.c: 24:     *((PIN_SIO_CLK)->pPORT) &= ~(PIN_SIO_CLK)->mask;
 12185  00101A  0EE2               	movlw	low (_PIN_SIO_CLK_DEF+4)
 12186  00101C  6EF6               	movwf	tblptrl,c
 12187  00101E  0E78               	movlw	high (_PIN_SIO_CLK_DEF+4)
 12188  001020  6EF7               	movwf	tblptrh,c
 12189  001022                     	if	0	;tblptru may be non-zero
 12190  001022                     	endif
 12191  001022                     	if	0	;tblptru may be non-zero
 12192  001022                     	endif
 12193  001022  0008               	tblrd		*
 12194  001024  50F5               	movf	tablat,w,c
 12195  001026  0AFF               	xorlw	255
 12196  001028  6E0D               	movwf	??_init_gpios^0,c
 12197  00102A  0EDE               	movlw	low _PIN_SIO_CLK_DEF
 12198  00102C  6EF6               	movwf	tblptrl,c
 12199  00102E                     	if	1	;There is more than 1 active tblptr byte
 12200  00102E  0E78               	movlw	high _PIN_SIO_CLK_DEF
 12201  001030  6EF7               	movwf	tblptrh,c
 12202  001032                     	endif
 12203  001032                     	if	0	;There are less than 3 active tblptr bytes
 12204  001032                     	endif
 12205  001032  0009               	tblrd		*+
 12206  001034  CFF5 F00E          	movff	tablat,??_init_gpios+1
 12207  001038  0009               	tblrd		*+
 12208  00103A  CFF5 F00F          	movff	tablat,??_init_gpios+2
 12209  00103E  C00E  FFD9         	movff	??_init_gpios+1,fsr2l
 12210  001042  C00F  FFDA         	movff	??_init_gpios+2,fsr2h
 12211  001046  500D               	movf	??_init_gpios^0,w,c
 12212  001048  16DF               	andwf	indf2,f,c
 12213  00104A                     
 12214                           ;src/gpio.c: 25:     *((PIN_SIO_CLK)->pTRIS) &= ~(PIN_SIO_CLK)->mask;
 12215  00104A  0EE2               	movlw	low (_PIN_SIO_CLK_DEF+4)
 12216  00104C  6EF6               	movwf	tblptrl,c
 12217  00104E  0E78               	movlw	high (_PIN_SIO_CLK_DEF+4)
 12218  001050  6EF7               	movwf	tblptrh,c
 12219  001052                     	if	0	;tblptru may be non-zero
 12220  001052                     	endif
 12221  001052                     	if	0	;tblptru may be non-zero
 12222  001052                     	endif
 12223  001052  0008               	tblrd		*
 12224  001054  50F5               	movf	tablat,w,c
 12225  001056  0AFF               	xorlw	255
 12226  001058  6E0D               	movwf	??_init_gpios^0,c
 12227  00105A  0EE0               	movlw	low (_PIN_SIO_CLK_DEF+2)
 12228  00105C  6EF6               	movwf	tblptrl,c
 12229  00105E  0E78               	movlw	high (_PIN_SIO_CLK_DEF+2)
 12230  001060  6EF7               	movwf	tblptrh,c
 12231  001062                     	if	0	;tblptru may be non-zero
 12232  001062                     	endif
 12233  001062                     	if	0	;tblptru may be non-zero
 12234  001062                     	endif
 12235  001062  0009               	tblrd		*+
 12236  001064  CFF5 FFD9          	movff	tablat,fsr2l
 12237  001068  0009               	tblrd		*+
 12238  00106A  CFF5 FFDA          	movff	tablat,fsr2h
 12239  00106E  500D               	movf	??_init_gpios^0,w,c
 12240  001070  16DF               	andwf	indf2,f,c
 12241  001072                     
 12242                           ;src/gpio.c: 32:  *((PIN_SI5328_LOL)->pTRIS) |= (PIN_SI5328_LOL)->mask;
 12243  001072  0EDD               	movlw	low (_PIN_SI5328_LOL_DEF+4)
 12244  001074  6EF6               	movwf	tblptrl,c
 12245  001076  0E78               	movlw	high (_PIN_SI5328_LOL_DEF+4)
 12246  001078  6EF7               	movwf	tblptrh,c
 12247  00107A                     	if	0	;tblptru may be non-zero
 12248  00107A                     	endif
 12249  00107A                     	if	0	;tblptru may be non-zero
 12250  00107A                     	endif
 12251  00107A  0008               	tblrd		*
 12252  00107C  CFF5 F00D          	movff	tablat,??_init_gpios
 12253  001080  0EDB               	movlw	low (_PIN_SI5328_LOL_DEF+2)
 12254  001082  6EF6               	movwf	tblptrl,c
 12255  001084  0E78               	movlw	high (_PIN_SI5328_LOL_DEF+2)
 12256  001086  6EF7               	movwf	tblptrh,c
 12257  001088                     	if	0	;tblptru may be non-zero
 12258  001088                     	endif
 12259  001088                     	if	0	;tblptru may be non-zero
 12260  001088                     	endif
 12261  001088  0009               	tblrd		*+
 12262  00108A  CFF5 FFD9          	movff	tablat,fsr2l
 12263  00108E  0009               	tblrd		*+
 12264  001090  CFF5 FFDA          	movff	tablat,fsr2h
 12265  001094  500D               	movf	??_init_gpios^0,w,c
 12266  001096  12DF               	iorwf	indf2,f,c
 12267  001098                     
 12268                           ;src/gpio.c: 35:     *((PIN_SI5328_CS_CA)->pPORT) |= (PIN_SI5328_CS_CA)->mask;
 12269  001098  0ED8               	movlw	low (_PIN_SI5328_CS_CA_DEF+4)
 12270  00109A  6EF6               	movwf	tblptrl,c
 12271  00109C  0E78               	movlw	high (_PIN_SI5328_CS_CA_DEF+4)
 12272  00109E  6EF7               	movwf	tblptrh,c
 12273  0010A0                     	if	0	;tblptru may be non-zero
 12274  0010A0                     	endif
 12275  0010A0                     	if	0	;tblptru may be non-zero
 12276  0010A0                     	endif
 12277  0010A0  0008               	tblrd		*
 12278  0010A2  CFF5 F00D          	movff	tablat,??_init_gpios
 12279  0010A6  0ED4               	movlw	low _PIN_SI5328_CS_CA_DEF
 12280  0010A8  6EF6               	movwf	tblptrl,c
 12281  0010AA                     	if	1	;There is more than 1 active tblptr byte
 12282  0010AA  0E78               	movlw	high _PIN_SI5328_CS_CA_DEF
 12283  0010AC  6EF7               	movwf	tblptrh,c
 12284  0010AE                     	endif
 12285  0010AE                     	if	0	;There are less than 3 active tblptr bytes
 12286  0010AE                     	endif
 12287  0010AE  0009               	tblrd		*+
 12288  0010B0  CFF5 F00E          	movff	tablat,??_init_gpios+1
 12289  0010B4  0009               	tblrd		*+
 12290  0010B6  CFF5 F00F          	movff	tablat,??_init_gpios+2
 12291  0010BA  C00E  FFD9         	movff	??_init_gpios+1,fsr2l
 12292  0010BE  C00F  FFDA         	movff	??_init_gpios+2,fsr2h
 12293  0010C2  500D               	movf	??_init_gpios^0,w,c
 12294  0010C4  12DF               	iorwf	indf2,f,c
 12295  0010C6                     
 12296                           ;src/gpio.c: 36:     *((PIN_SI5328_CS_CA)->pTRIS) |= (PIN_SI5328_CS_CA)->mask;
 12297  0010C6  0ED8               	movlw	low (_PIN_SI5328_CS_CA_DEF+4)
 12298  0010C8  6EF6               	movwf	tblptrl,c
 12299  0010CA  0E78               	movlw	high (_PIN_SI5328_CS_CA_DEF+4)
 12300  0010CC  6EF7               	movwf	tblptrh,c
 12301  0010CE                     	if	0	;tblptru may be non-zero
 12302  0010CE                     	endif
 12303  0010CE                     	if	0	;tblptru may be non-zero
 12304  0010CE                     	endif
 12305  0010CE  0008               	tblrd		*
 12306  0010D0  CFF5 F00D          	movff	tablat,??_init_gpios
 12307  0010D4  0ED6               	movlw	low (_PIN_SI5328_CS_CA_DEF+2)
 12308  0010D6  6EF6               	movwf	tblptrl,c
 12309  0010D8  0E78               	movlw	high (_PIN_SI5328_CS_CA_DEF+2)
 12310  0010DA  6EF7               	movwf	tblptrh,c
 12311  0010DC                     	if	0	;tblptru may be non-zero
 12312  0010DC                     	endif
 12313  0010DC                     	if	0	;tblptru may be non-zero
 12314  0010DC                     	endif
 12315  0010DC  0009               	tblrd		*+
 12316  0010DE  CFF5 FFD9          	movff	tablat,fsr2l
 12317  0010E2  0009               	tblrd		*+
 12318  0010E4  CFF5 FFDA          	movff	tablat,fsr2h
 12319  0010E8  500D               	movf	??_init_gpios^0,w,c
 12320  0010EA  12DF               	iorwf	indf2,f,c
 12321  0010EC                     
 12322                           ;src/gpio.c: 39:     *((PIN_LED_SI_LOCK)->pPORT) |= (PIN_LED_SI_LOCK)->mask;
 12323  0010EC  0ED3               	movlw	low (_PIN_LED_SI_LOCK_DEF+4)
 12324  0010EE  6EF6               	movwf	tblptrl,c
 12325  0010F0  0E78               	movlw	high (_PIN_LED_SI_LOCK_DEF+4)
 12326  0010F2  6EF7               	movwf	tblptrh,c
 12327  0010F4                     	if	0	;tblptru may be non-zero
 12328  0010F4                     	endif
 12329  0010F4                     	if	0	;tblptru may be non-zero
 12330  0010F4                     	endif
 12331  0010F4  0008               	tblrd		*
 12332  0010F6  CFF5 F00D          	movff	tablat,??_init_gpios
 12333  0010FA  0ECF               	movlw	low _PIN_LED_SI_LOCK_DEF
 12334  0010FC  6EF6               	movwf	tblptrl,c
 12335  0010FE                     	if	1	;There is more than 1 active tblptr byte
 12336  0010FE  0E78               	movlw	high _PIN_LED_SI_LOCK_DEF
 12337  001100  6EF7               	movwf	tblptrh,c
 12338  001102                     	endif
 12339  001102                     	if	0	;There are less than 3 active tblptr bytes
 12340  001102                     	endif
 12341  001102  0009               	tblrd		*+
 12342  001104  CFF5 F00E          	movff	tablat,??_init_gpios+1
 12343  001108  0009               	tblrd		*+
 12344  00110A  CFF5 F00F          	movff	tablat,??_init_gpios+2
 12345  00110E  C00E  FFD9         	movff	??_init_gpios+1,fsr2l
 12346  001112  C00F  FFDA         	movff	??_init_gpios+2,fsr2h
 12347  001116  500D               	movf	??_init_gpios^0,w,c
 12348  001118  12DF               	iorwf	indf2,f,c
 12349  00111A                     
 12350                           ;src/gpio.c: 40:     *((PIN_LED_SI_LOCK)->pTRIS) &= ~(PIN_LED_SI_LOCK)->mask;
 12351  00111A  0ED3               	movlw	low (_PIN_LED_SI_LOCK_DEF+4)
 12352  00111C  6EF6               	movwf	tblptrl,c
 12353  00111E  0E78               	movlw	high (_PIN_LED_SI_LOCK_DEF+4)
 12354  001120  6EF7               	movwf	tblptrh,c
 12355  001122                     	if	0	;tblptru may be non-zero
 12356  001122                     	endif
 12357  001122                     	if	0	;tblptru may be non-zero
 12358  001122                     	endif
 12359  001122  0008               	tblrd		*
 12360  001124  50F5               	movf	tablat,w,c
 12361  001126  0AFF               	xorlw	255
 12362  001128  6E0D               	movwf	??_init_gpios^0,c
 12363  00112A  0ED1               	movlw	low (_PIN_LED_SI_LOCK_DEF+2)
 12364  00112C  6EF6               	movwf	tblptrl,c
 12365  00112E  0E78               	movlw	high (_PIN_LED_SI_LOCK_DEF+2)
 12366  001130  6EF7               	movwf	tblptrh,c
 12367  001132                     	if	0	;tblptru may be non-zero
 12368  001132                     	endif
 12369  001132                     	if	0	;tblptru may be non-zero
 12370  001132                     	endif
 12371  001132  0009               	tblrd		*+
 12372  001134  CFF5 FFD9          	movff	tablat,fsr2l
 12373  001138  0009               	tblrd		*+
 12374  00113A  CFF5 FFDA          	movff	tablat,fsr2h
 12375  00113E  500D               	movf	??_init_gpios^0,w,c
 12376  001140  16DF               	andwf	indf2,f,c
 12377  001142                     
 12378                           ;src/gpio.c: 42:     *((PIN_LED_CPU_OK)->pPORT) |= (PIN_LED_CPU_OK)->mask;
 12379  001142  0EC9               	movlw	low (_PIN_LED_CPU_OK_DEF+4)
 12380  001144  6EF6               	movwf	tblptrl,c
 12381  001146  0E78               	movlw	high (_PIN_LED_CPU_OK_DEF+4)
 12382  001148  6EF7               	movwf	tblptrh,c
 12383  00114A                     	if	0	;tblptru may be non-zero
 12384  00114A                     	endif
 12385  00114A                     	if	0	;tblptru may be non-zero
 12386  00114A                     	endif
 12387  00114A  0008               	tblrd		*
 12388  00114C  CFF5 F00D          	movff	tablat,??_init_gpios
 12389  001150  0EC5               	movlw	low _PIN_LED_CPU_OK_DEF
 12390  001152  6EF6               	movwf	tblptrl,c
 12391  001154                     	if	1	;There is more than 1 active tblptr byte
 12392  001154  0E78               	movlw	high _PIN_LED_CPU_OK_DEF
 12393  001156  6EF7               	movwf	tblptrh,c
 12394  001158                     	endif
 12395  001158                     	if	0	;There are less than 3 active tblptr bytes
 12396  001158                     	endif
 12397  001158  0009               	tblrd		*+
 12398  00115A  CFF5 F00E          	movff	tablat,??_init_gpios+1
 12399  00115E  0009               	tblrd		*+
 12400  001160  CFF5 F00F          	movff	tablat,??_init_gpios+2
 12401  001164  C00E  FFD9         	movff	??_init_gpios+1,fsr2l
 12402  001168  C00F  FFDA         	movff	??_init_gpios+2,fsr2h
 12403  00116C  500D               	movf	??_init_gpios^0,w,c
 12404  00116E  12DF               	iorwf	indf2,f,c
 12405  001170                     
 12406                           ;src/gpio.c: 43:     *((PIN_LED_CPU_OK)->pTRIS) &= ~(PIN_LED_CPU_OK)->mask;
 12407  001170  0EC9               	movlw	low (_PIN_LED_CPU_OK_DEF+4)
 12408  001172  6EF6               	movwf	tblptrl,c
 12409  001174  0E78               	movlw	high (_PIN_LED_CPU_OK_DEF+4)
 12410  001176  6EF7               	movwf	tblptrh,c
 12411  001178                     	if	0	;tblptru may be non-zero
 12412  001178                     	endif
 12413  001178                     	if	0	;tblptru may be non-zero
 12414  001178                     	endif
 12415  001178  0008               	tblrd		*
 12416  00117A  50F5               	movf	tablat,w,c
 12417  00117C  0AFF               	xorlw	255
 12418  00117E  6E0D               	movwf	??_init_gpios^0,c
 12419  001180  0EC7               	movlw	low (_PIN_LED_CPU_OK_DEF+2)
 12420  001182  6EF6               	movwf	tblptrl,c
 12421  001184  0E78               	movlw	high (_PIN_LED_CPU_OK_DEF+2)
 12422  001186  6EF7               	movwf	tblptrh,c
 12423  001188                     	if	0	;tblptru may be non-zero
 12424  001188                     	endif
 12425  001188                     	if	0	;tblptru may be non-zero
 12426  001188                     	endif
 12427  001188  0009               	tblrd		*+
 12428  00118A  CFF5 FFD9          	movff	tablat,fsr2l
 12429  00118E  0009               	tblrd		*+
 12430  001190  CFF5 FFDA          	movff	tablat,fsr2h
 12431  001194  500D               	movf	??_init_gpios^0,w,c
 12432  001196  16DF               	andwf	indf2,f,c
 12433  001198                     
 12434                           ;src/gpio.c: 45:     *((PIN_LED_ADF_LOCK)->pPORT) |= (PIN_LED_ADF_LOCK)->mask;
 12435  001198  0EBF               	movlw	low (_PIN_LED_ADF_LOCK_DEF+4)
 12436  00119A  6EF6               	movwf	tblptrl,c
 12437  00119C  0E78               	movlw	high (_PIN_LED_ADF_LOCK_DEF+4)
 12438  00119E  6EF7               	movwf	tblptrh,c
 12439  0011A0                     	if	0	;tblptru may be non-zero
 12440  0011A0                     	endif
 12441  0011A0                     	if	0	;tblptru may be non-zero
 12442  0011A0                     	endif
 12443  0011A0  0008               	tblrd		*
 12444  0011A2  CFF5 F00D          	movff	tablat,??_init_gpios
 12445  0011A6  0EBB               	movlw	low _PIN_LED_ADF_LOCK_DEF
 12446  0011A8  6EF6               	movwf	tblptrl,c
 12447  0011AA                     	if	1	;There is more than 1 active tblptr byte
 12448  0011AA  0E78               	movlw	high _PIN_LED_ADF_LOCK_DEF
 12449  0011AC  6EF7               	movwf	tblptrh,c
 12450  0011AE                     	endif
 12451  0011AE                     	if	0	;There are less than 3 active tblptr bytes
 12452  0011AE                     	endif
 12453  0011AE  0009               	tblrd		*+
 12454  0011B0  CFF5 F00E          	movff	tablat,??_init_gpios+1
 12455  0011B4  0009               	tblrd		*+
 12456  0011B6  CFF5 F00F          	movff	tablat,??_init_gpios+2
 12457  0011BA  C00E  FFD9         	movff	??_init_gpios+1,fsr2l
 12458  0011BE  C00F  FFDA         	movff	??_init_gpios+2,fsr2h
 12459  0011C2  500D               	movf	??_init_gpios^0,w,c
 12460  0011C4  12DF               	iorwf	indf2,f,c
 12461  0011C6                     
 12462                           ;src/gpio.c: 46:     *((PIN_LED_ADF_LOCK)->pTRIS) &= ~(PIN_LED_ADF_LOCK)->mask;
 12463  0011C6  0EBF               	movlw	low (_PIN_LED_ADF_LOCK_DEF+4)
 12464  0011C8  6EF6               	movwf	tblptrl,c
 12465  0011CA  0E78               	movlw	high (_PIN_LED_ADF_LOCK_DEF+4)
 12466  0011CC  6EF7               	movwf	tblptrh,c
 12467  0011CE                     	if	0	;tblptru may be non-zero
 12468  0011CE                     	endif
 12469  0011CE                     	if	0	;tblptru may be non-zero
 12470  0011CE                     	endif
 12471  0011CE  0008               	tblrd		*
 12472  0011D0  50F5               	movf	tablat,w,c
 12473  0011D2  0AFF               	xorlw	255
 12474  0011D4  6E0D               	movwf	??_init_gpios^0,c
 12475  0011D6  0EBD               	movlw	low (_PIN_LED_ADF_LOCK_DEF+2)
 12476  0011D8  6EF6               	movwf	tblptrl,c
 12477  0011DA  0E78               	movlw	high (_PIN_LED_ADF_LOCK_DEF+2)
 12478  0011DC  6EF7               	movwf	tblptrh,c
 12479  0011DE                     	if	0	;tblptru may be non-zero
 12480  0011DE                     	endif
 12481  0011DE                     	if	0	;tblptru may be non-zero
 12482  0011DE                     	endif
 12483  0011DE  0009               	tblrd		*+
 12484  0011E0  CFF5 FFD9          	movff	tablat,fsr2l
 12485  0011E4  0009               	tblrd		*+
 12486  0011E6  CFF5 FFDA          	movff	tablat,fsr2h
 12487  0011EA  500D               	movf	??_init_gpios^0,w,c
 12488  0011EC  16DF               	andwf	indf2,f,c
 12489  0011EE                     
 12490                           ;src/gpio.c: 48:     *((PIN_LED_LNB_GOOD)->pPORT) |= (PIN_LED_LNB_GOOD)->mask;
 12491  0011EE  0EB5               	movlw	low (_PIN_LED_LNB_GOOD_DEF+4)
 12492  0011F0  6EF6               	movwf	tblptrl,c
 12493  0011F2  0E78               	movlw	high (_PIN_LED_LNB_GOOD_DEF+4)
 12494  0011F4  6EF7               	movwf	tblptrh,c
 12495  0011F6                     	if	0	;tblptru may be non-zero
 12496  0011F6                     	endif
 12497  0011F6                     	if	0	;tblptru may be non-zero
 12498  0011F6                     	endif
 12499  0011F6  0008               	tblrd		*
 12500  0011F8  CFF5 F00D          	movff	tablat,??_init_gpios
 12501  0011FC  0EB1               	movlw	low _PIN_LED_LNB_GOOD_DEF
 12502  0011FE  6EF6               	movwf	tblptrl,c
 12503  001200                     	if	1	;There is more than 1 active tblptr byte
 12504  001200  0E78               	movlw	high _PIN_LED_LNB_GOOD_DEF
 12505  001202  6EF7               	movwf	tblptrh,c
 12506  001204                     	endif
 12507  001204                     	if	0	;There are less than 3 active tblptr bytes
 12508  001204                     	endif
 12509  001204  0009               	tblrd		*+
 12510  001206  CFF5 F00E          	movff	tablat,??_init_gpios+1
 12511  00120A  0009               	tblrd		*+
 12512  00120C  CFF5 F00F          	movff	tablat,??_init_gpios+2
 12513  001210  C00E  FFD9         	movff	??_init_gpios+1,fsr2l
 12514  001214  C00F  FFDA         	movff	??_init_gpios+2,fsr2h
 12515  001218  500D               	movf	??_init_gpios^0,w,c
 12516  00121A  12DF               	iorwf	indf2,f,c
 12517  00121C                     
 12518                           ;src/gpio.c: 49:     *((PIN_LED_LNB_GOOD)->pTRIS) &= ~(PIN_LED_LNB_GOOD)->mask;
 12519  00121C  0EB5               	movlw	low (_PIN_LED_LNB_GOOD_DEF+4)
 12520  00121E  6EF6               	movwf	tblptrl,c
 12521  001220  0E78               	movlw	high (_PIN_LED_LNB_GOOD_DEF+4)
 12522  001222  6EF7               	movwf	tblptrh,c
 12523  001224                     	if	0	;tblptru may be non-zero
 12524  001224                     	endif
 12525  001224                     	if	0	;tblptru may be non-zero
 12526  001224                     	endif
 12527  001224  0008               	tblrd		*
 12528  001226  50F5               	movf	tablat,w,c
 12529  001228  0AFF               	xorlw	255
 12530  00122A  6E0D               	movwf	??_init_gpios^0,c
 12531  00122C  0EB3               	movlw	low (_PIN_LED_LNB_GOOD_DEF+2)
 12532  00122E  6EF6               	movwf	tblptrl,c
 12533  001230  0E78               	movlw	high (_PIN_LED_LNB_GOOD_DEF+2)
 12534  001232  6EF7               	movwf	tblptrh,c
 12535  001234                     	if	0	;tblptru may be non-zero
 12536  001234                     	endif
 12537  001234                     	if	0	;tblptru may be non-zero
 12538  001234                     	endif
 12539  001234  0009               	tblrd		*+
 12540  001236  CFF5 FFD9          	movff	tablat,fsr2l
 12541  00123A  0009               	tblrd		*+
 12542  00123C  CFF5 FFDA          	movff	tablat,fsr2h
 12543  001240  500D               	movf	??_init_gpios^0,w,c
 12544  001242  16DF               	andwf	indf2,f,c
 12545  001244                     
 12546                           ;src/gpio.c: 52:     *((PIN_I2C_SCL)->pTRIS) |= (PIN_I2C_SCL)->mask;
 12547  001244  0EAB               	movlw	low (_PIN_I2C_SCL_DEF+4)
 12548  001246  6EF6               	movwf	tblptrl,c
 12549  001248  0E78               	movlw	high (_PIN_I2C_SCL_DEF+4)
 12550  00124A  6EF7               	movwf	tblptrh,c
 12551  00124C                     	if	0	;tblptru may be non-zero
 12552  00124C                     	endif
 12553  00124C                     	if	0	;tblptru may be non-zero
 12554  00124C                     	endif
 12555  00124C  0008               	tblrd		*
 12556  00124E  CFF5 F00D          	movff	tablat,??_init_gpios
 12557  001252  0EA9               	movlw	low (_PIN_I2C_SCL_DEF+2)
 12558  001254  6EF6               	movwf	tblptrl,c
 12559  001256  0E78               	movlw	high (_PIN_I2C_SCL_DEF+2)
 12560  001258  6EF7               	movwf	tblptrh,c
 12561  00125A                     	if	0	;tblptru may be non-zero
 12562  00125A                     	endif
 12563  00125A                     	if	0	;tblptru may be non-zero
 12564  00125A                     	endif
 12565  00125A  0009               	tblrd		*+
 12566  00125C  CFF5 FFD9          	movff	tablat,fsr2l
 12567  001260  0009               	tblrd		*+
 12568  001262  CFF5 FFDA          	movff	tablat,fsr2h
 12569  001266  500D               	movf	??_init_gpios^0,w,c
 12570  001268  12DF               	iorwf	indf2,f,c
 12571  00126A                     
 12572                           ;src/gpio.c: 53:     *((PIN_I2C_SDA)->pTRIS) |= (PIN_I2C_SDA)->mask;
 12573  00126A  0EA6               	movlw	low (_PIN_I2C_SDA_DEF+4)
 12574  00126C  6EF6               	movwf	tblptrl,c
 12575  00126E  0E78               	movlw	high (_PIN_I2C_SDA_DEF+4)
 12576  001270  6EF7               	movwf	tblptrh,c
 12577  001272                     	if	0	;tblptru may be non-zero
 12578  001272                     	endif
 12579  001272                     	if	0	;tblptru may be non-zero
 12580  001272                     	endif
 12581  001272  0008               	tblrd		*
 12582  001274  CFF5 F00D          	movff	tablat,??_init_gpios
 12583  001278  0EA4               	movlw	low (_PIN_I2C_SDA_DEF+2)
 12584  00127A  6EF6               	movwf	tblptrl,c
 12585  00127C  0E78               	movlw	high (_PIN_I2C_SDA_DEF+2)
 12586  00127E  6EF7               	movwf	tblptrh,c
 12587  001280                     	if	0	;tblptru may be non-zero
 12588  001280                     	endif
 12589  001280                     	if	0	;tblptru may be non-zero
 12590  001280                     	endif
 12591  001280  0009               	tblrd		*+
 12592  001282  CFF5 FFD9          	movff	tablat,fsr2l
 12593  001286  0009               	tblrd		*+
 12594  001288  CFF5 FFDA          	movff	tablat,fsr2h
 12595  00128C  500D               	movf	??_init_gpios^0,w,c
 12596  00128E  12DF               	iorwf	indf2,f,c
 12597  001290                     
 12598                           ;src/gpio.c: 56:     *((PIN_USART_TX)->pTRIS) |= (PIN_USART_TX)->mask;
 12599  001290  0EA1               	movlw	low (_PIN_USART_TX_DEF+4)
 12600  001292  6EF6               	movwf	tblptrl,c
 12601  001294  0E78               	movlw	high (_PIN_USART_TX_DEF+4)
 12602  001296  6EF7               	movwf	tblptrh,c
 12603  001298                     	if	0	;tblptru may be non-zero
 12604  001298                     	endif
 12605  001298                     	if	0	;tblptru may be non-zero
 12606  001298                     	endif
 12607  001298  0008               	tblrd		*
 12608  00129A  CFF5 F00D          	movff	tablat,??_init_gpios
 12609  00129E  0E9F               	movlw	low (_PIN_USART_TX_DEF+2)
 12610  0012A0  6EF6               	movwf	tblptrl,c
 12611  0012A2  0E78               	movlw	high (_PIN_USART_TX_DEF+2)
 12612  0012A4  6EF7               	movwf	tblptrh,c
 12613  0012A6                     	if	0	;tblptru may be non-zero
 12614  0012A6                     	endif
 12615  0012A6                     	if	0	;tblptru may be non-zero
 12616  0012A6                     	endif
 12617  0012A6  0009               	tblrd		*+
 12618  0012A8  CFF5 FFD9          	movff	tablat,fsr2l
 12619  0012AC  0009               	tblrd		*+
 12620  0012AE  CFF5 FFDA          	movff	tablat,fsr2h
 12621  0012B2  500D               	movf	??_init_gpios^0,w,c
 12622  0012B4  12DF               	iorwf	indf2,f,c
 12623  0012B6                     
 12624                           ;src/gpio.c: 57:     *((PIN_USART_RX)->pTRIS) |= (PIN_USART_RX)->mask;
 12625  0012B6  0E9C               	movlw	low (_PIN_USART_RX_DEF+4)
 12626  0012B8  6EF6               	movwf	tblptrl,c
 12627  0012BA  0E78               	movlw	high (_PIN_USART_RX_DEF+4)
 12628  0012BC  6EF7               	movwf	tblptrh,c
 12629  0012BE                     	if	0	;tblptru may be non-zero
 12630  0012BE                     	endif
 12631  0012BE                     	if	0	;tblptru may be non-zero
 12632  0012BE                     	endif
 12633  0012BE  0008               	tblrd		*
 12634  0012C0  CFF5 F00D          	movff	tablat,??_init_gpios
 12635  0012C4  0E9A               	movlw	low (_PIN_USART_RX_DEF+2)
 12636  0012C6  6EF6               	movwf	tblptrl,c
 12637  0012C8  0E78               	movlw	high (_PIN_USART_RX_DEF+2)
 12638  0012CA  6EF7               	movwf	tblptrh,c
 12639  0012CC                     	if	0	;tblptru may be non-zero
 12640  0012CC                     	endif
 12641  0012CC                     	if	0	;tblptru may be non-zero
 12642  0012CC                     	endif
 12643  0012CC  0009               	tblrd		*+
 12644  0012CE  CFF5 FFD9          	movff	tablat,fsr2l
 12645  0012D2  0009               	tblrd		*+
 12646  0012D4  CFF5 FFDA          	movff	tablat,fsr2h
 12647  0012D8  500D               	movf	??_init_gpios^0,w,c
 12648  0012DA  12DF               	iorwf	indf2,f,c
 12649  0012DC                     
 12650                           ;src/gpio.c: 60:     *((PIN_SJ3)->pTRIS) |= (PIN_SJ3)->mask;
 12651  0012DC  0E97               	movlw	low (_PIN_SJ3_DEF+4)
 12652  0012DE  6EF6               	movwf	tblptrl,c
 12653  0012E0  0E78               	movlw	high (_PIN_SJ3_DEF+4)
 12654  0012E2  6EF7               	movwf	tblptrh,c
 12655  0012E4                     	if	0	;tblptru may be non-zero
 12656  0012E4                     	endif
 12657  0012E4                     	if	0	;tblptru may be non-zero
 12658  0012E4                     	endif
 12659  0012E4  0008               	tblrd		*
 12660  0012E6  CFF5 F00D          	movff	tablat,??_init_gpios
 12661  0012EA  0E95               	movlw	low (_PIN_SJ3_DEF+2)
 12662  0012EC  6EF6               	movwf	tblptrl,c
 12663  0012EE  0E78               	movlw	high (_PIN_SJ3_DEF+2)
 12664  0012F0  6EF7               	movwf	tblptrh,c
 12665  0012F2                     	if	0	;tblptru may be non-zero
 12666  0012F2                     	endif
 12667  0012F2                     	if	0	;tblptru may be non-zero
 12668  0012F2                     	endif
 12669  0012F2  0009               	tblrd		*+
 12670  0012F4  CFF5 FFD9          	movff	tablat,fsr2l
 12671  0012F8  0009               	tblrd		*+
 12672  0012FA  CFF5 FFDA          	movff	tablat,fsr2h
 12673  0012FE  500D               	movf	??_init_gpios^0,w,c
 12674  001300  12DF               	iorwf	indf2,f,c
 12675  001302                     
 12676                           ;src/gpio.c: 61:     *((PIN_SJ3)->pPORT) |= (PIN_SJ3)->mask;
 12677  001302  0E97               	movlw	low (_PIN_SJ3_DEF+4)
 12678  001304  6EF6               	movwf	tblptrl,c
 12679  001306  0E78               	movlw	high (_PIN_SJ3_DEF+4)
 12680  001308  6EF7               	movwf	tblptrh,c
 12681  00130A                     	if	0	;tblptru may be non-zero
 12682  00130A                     	endif
 12683  00130A                     	if	0	;tblptru may be non-zero
 12684  00130A                     	endif
 12685  00130A  0008               	tblrd		*
 12686  00130C  CFF5 F00D          	movff	tablat,??_init_gpios
 12687  001310  0E93               	movlw	low _PIN_SJ3_DEF
 12688  001312  6EF6               	movwf	tblptrl,c
 12689  001314                     	if	1	;There is more than 1 active tblptr byte
 12690  001314  0E78               	movlw	high _PIN_SJ3_DEF
 12691  001316  6EF7               	movwf	tblptrh,c
 12692  001318                     	endif
 12693  001318                     	if	0	;There are less than 3 active tblptr bytes
 12694  001318                     	endif
 12695  001318  0009               	tblrd		*+
 12696  00131A  CFF5 F00E          	movff	tablat,??_init_gpios+1
 12697  00131E  0009               	tblrd		*+
 12698  001320  CFF5 F00F          	movff	tablat,??_init_gpios+2
 12699  001324  C00E  FFD9         	movff	??_init_gpios+1,fsr2l
 12700  001328  C00F  FFDA         	movff	??_init_gpios+2,fsr2h
 12701  00132C  500D               	movf	??_init_gpios^0,w,c
 12702  00132E  12DF               	iorwf	indf2,f,c
 12703  001330                     
 12704                           ;src/gpio.c: 62:     *((PIN_SJ4)->pTRIS) |= (PIN_SJ4)->mask;
 12705  001330  0E92               	movlw	low (_PIN_SJ4_DEF+4)
 12706  001332  6EF6               	movwf	tblptrl,c
 12707  001334  0E78               	movlw	high (_PIN_SJ4_DEF+4)
 12708  001336  6EF7               	movwf	tblptrh,c
 12709  001338                     	if	0	;tblptru may be non-zero
 12710  001338                     	endif
 12711  001338                     	if	0	;tblptru may be non-zero
 12712  001338                     	endif
 12713  001338  0008               	tblrd		*
 12714  00133A  CFF5 F00D          	movff	tablat,??_init_gpios
 12715  00133E  0E90               	movlw	low (_PIN_SJ4_DEF+2)
 12716  001340  6EF6               	movwf	tblptrl,c
 12717  001342  0E78               	movlw	high (_PIN_SJ4_DEF+2)
 12718  001344  6EF7               	movwf	tblptrh,c
 12719  001346                     	if	0	;tblptru may be non-zero
 12720  001346                     	endif
 12721  001346                     	if	0	;tblptru may be non-zero
 12722  001346                     	endif
 12723  001346  0009               	tblrd		*+
 12724  001348  CFF5 FFD9          	movff	tablat,fsr2l
 12725  00134C  0009               	tblrd		*+
 12726  00134E  CFF5 FFDA          	movff	tablat,fsr2h
 12727  001352  500D               	movf	??_init_gpios^0,w,c
 12728  001354  12DF               	iorwf	indf2,f,c
 12729  001356                     
 12730                           ;src/gpio.c: 63:     *((PIN_SJ4)->pPORT) |= (PIN_SJ4)->mask;
 12731  001356  0E92               	movlw	low (_PIN_SJ4_DEF+4)
 12732  001358  6EF6               	movwf	tblptrl,c
 12733  00135A  0E78               	movlw	high (_PIN_SJ4_DEF+4)
 12734  00135C  6EF7               	movwf	tblptrh,c
 12735  00135E                     	if	0	;tblptru may be non-zero
 12736  00135E                     	endif
 12737  00135E                     	if	0	;tblptru may be non-zero
 12738  00135E                     	endif
 12739  00135E  0008               	tblrd		*
 12740  001360  CFF5 F00D          	movff	tablat,??_init_gpios
 12741  001364  0E8E               	movlw	low _PIN_SJ4_DEF
 12742  001366  6EF6               	movwf	tblptrl,c
 12743  001368                     	if	1	;There is more than 1 active tblptr byte
 12744  001368  0E78               	movlw	high _PIN_SJ4_DEF
 12745  00136A  6EF7               	movwf	tblptrh,c
 12746  00136C                     	endif
 12747  00136C                     	if	0	;There are less than 3 active tblptr bytes
 12748  00136C                     	endif
 12749  00136C  0009               	tblrd		*+
 12750  00136E  CFF5 F00E          	movff	tablat,??_init_gpios+1
 12751  001372  0009               	tblrd		*+
 12752  001374  CFF5 F00F          	movff	tablat,??_init_gpios+2
 12753  001378  C00E  FFD9         	movff	??_init_gpios+1,fsr2l
 12754  00137C  C00F  FFDA         	movff	??_init_gpios+2,fsr2h
 12755  001380  500D               	movf	??_init_gpios^0,w,c
 12756  001382  12DF               	iorwf	indf2,f,c
 12757  001384                     
 12758                           ;src/gpio.c: 64:     *((PIN_SJ5)->pTRIS) |= (PIN_SJ5)->mask;
 12759  001384  0E8D               	movlw	low (_PIN_SJ5_DEF+4)
 12760  001386  6EF6               	movwf	tblptrl,c
 12761  001388  0E78               	movlw	high (_PIN_SJ5_DEF+4)
 12762  00138A  6EF7               	movwf	tblptrh,c
 12763  00138C                     	if	0	;tblptru may be non-zero
 12764  00138C                     	endif
 12765  00138C                     	if	0	;tblptru may be non-zero
 12766  00138C                     	endif
 12767  00138C  0008               	tblrd		*
 12768  00138E  CFF5 F00D          	movff	tablat,??_init_gpios
 12769  001392  0E8B               	movlw	low (_PIN_SJ5_DEF+2)
 12770  001394  6EF6               	movwf	tblptrl,c
 12771  001396  0E78               	movlw	high (_PIN_SJ5_DEF+2)
 12772  001398  6EF7               	movwf	tblptrh,c
 12773  00139A                     	if	0	;tblptru may be non-zero
 12774  00139A                     	endif
 12775  00139A                     	if	0	;tblptru may be non-zero
 12776  00139A                     	endif
 12777  00139A  0009               	tblrd		*+
 12778  00139C  CFF5 FFD9          	movff	tablat,fsr2l
 12779  0013A0  0009               	tblrd		*+
 12780  0013A2  CFF5 FFDA          	movff	tablat,fsr2h
 12781  0013A6  500D               	movf	??_init_gpios^0,w,c
 12782  0013A8  12DF               	iorwf	indf2,f,c
 12783  0013AA                     
 12784                           ;src/gpio.c: 65:     *((PIN_SJ5)->pPORT) |= (PIN_SJ5)->mask;
 12785  0013AA  0E8D               	movlw	low (_PIN_SJ5_DEF+4)
 12786  0013AC  6EF6               	movwf	tblptrl,c
 12787  0013AE  0E78               	movlw	high (_PIN_SJ5_DEF+4)
 12788  0013B0  6EF7               	movwf	tblptrh,c
 12789  0013B2                     	if	0	;tblptru may be non-zero
 12790  0013B2                     	endif
 12791  0013B2                     	if	0	;tblptru may be non-zero
 12792  0013B2                     	endif
 12793  0013B2  0008               	tblrd		*
 12794  0013B4  CFF5 F00D          	movff	tablat,??_init_gpios
 12795  0013B8  0E89               	movlw	low _PIN_SJ5_DEF
 12796  0013BA  6EF6               	movwf	tblptrl,c
 12797  0013BC                     	if	1	;There is more than 1 active tblptr byte
 12798  0013BC  0E78               	movlw	high _PIN_SJ5_DEF
 12799  0013BE  6EF7               	movwf	tblptrh,c
 12800  0013C0                     	endif
 12801  0013C0                     	if	0	;There are less than 3 active tblptr bytes
 12802  0013C0                     	endif
 12803  0013C0  0009               	tblrd		*+
 12804  0013C2  CFF5 F00E          	movff	tablat,??_init_gpios+1
 12805  0013C6  0009               	tblrd		*+
 12806  0013C8  CFF5 F00F          	movff	tablat,??_init_gpios+2
 12807  0013CC  C00E  FFD9         	movff	??_init_gpios+1,fsr2l
 12808  0013D0  C00F  FFDA         	movff	??_init_gpios+2,fsr2h
 12809  0013D4  500D               	movf	??_init_gpios^0,w,c
 12810  0013D6  12DF               	iorwf	indf2,f,c
 12811  0013D8                     
 12812                           ;src/gpio.c: 66:     *((PIN_SJ6)->pTRIS) |= (PIN_SJ6)->mask;
 12813  0013D8  0E88               	movlw	low (_PIN_SJ6_DEF+4)
 12814  0013DA  6EF6               	movwf	tblptrl,c
 12815  0013DC  0E78               	movlw	high (_PIN_SJ6_DEF+4)
 12816  0013DE  6EF7               	movwf	tblptrh,c
 12817  0013E0                     	if	0	;tblptru may be non-zero
 12818  0013E0                     	endif
 12819  0013E0                     	if	0	;tblptru may be non-zero
 12820  0013E0                     	endif
 12821  0013E0  0008               	tblrd		*
 12822  0013E2  CFF5 F00D          	movff	tablat,??_init_gpios
 12823  0013E6  0E86               	movlw	low (_PIN_SJ6_DEF+2)
 12824  0013E8  6EF6               	movwf	tblptrl,c
 12825  0013EA  0E78               	movlw	high (_PIN_SJ6_DEF+2)
 12826  0013EC  6EF7               	movwf	tblptrh,c
 12827  0013EE                     	if	0	;tblptru may be non-zero
 12828  0013EE                     	endif
 12829  0013EE                     	if	0	;tblptru may be non-zero
 12830  0013EE                     	endif
 12831  0013EE  0009               	tblrd		*+
 12832  0013F0  CFF5 FFD9          	movff	tablat,fsr2l
 12833  0013F4  0009               	tblrd		*+
 12834  0013F6  CFF5 FFDA          	movff	tablat,fsr2h
 12835  0013FA  500D               	movf	??_init_gpios^0,w,c
 12836  0013FC  12DF               	iorwf	indf2,f,c
 12837  0013FE                     
 12838                           ;src/gpio.c: 67:     *((PIN_SJ6)->pPORT) |= (PIN_SJ6)->mask;
 12839  0013FE  0E88               	movlw	low (_PIN_SJ6_DEF+4)
 12840  001400  6EF6               	movwf	tblptrl,c
 12841  001402  0E78               	movlw	high (_PIN_SJ6_DEF+4)
 12842  001404  6EF7               	movwf	tblptrh,c
 12843  001406                     	if	0	;tblptru may be non-zero
 12844  001406                     	endif
 12845  001406                     	if	0	;tblptru may be non-zero
 12846  001406                     	endif
 12847  001406  0008               	tblrd		*
 12848  001408  CFF5 F00D          	movff	tablat,??_init_gpios
 12849  00140C  0E84               	movlw	low _PIN_SJ6_DEF
 12850  00140E  6EF6               	movwf	tblptrl,c
 12851  001410                     	if	1	;There is more than 1 active tblptr byte
 12852  001410  0E78               	movlw	high _PIN_SJ6_DEF
 12853  001412  6EF7               	movwf	tblptrh,c
 12854  001414                     	endif
 12855  001414                     	if	0	;There are less than 3 active tblptr bytes
 12856  001414                     	endif
 12857  001414  0009               	tblrd		*+
 12858  001416  CFF5 F00E          	movff	tablat,??_init_gpios+1
 12859  00141A  0009               	tblrd		*+
 12860  00141C  CFF5 F00F          	movff	tablat,??_init_gpios+2
 12861  001420  C00E  FFD9         	movff	??_init_gpios+1,fsr2l
 12862  001424  C00F  FFDA         	movff	??_init_gpios+2,fsr2h
 12863  001428  500D               	movf	??_init_gpios^0,w,c
 12864  00142A  12DF               	iorwf	indf2,f,c
 12865  00142C                     
 12866                           ;src/gpio.c: 70:     *((PIN_LNB_QRG2)->pTRIS) |= (PIN_LNB_QRG2)->mask;
 12867  00142C  0E83               	movlw	low (_PIN_LNB_QRG2_DEF+4)
 12868  00142E  6EF6               	movwf	tblptrl,c
 12869  001430  0E78               	movlw	high (_PIN_LNB_QRG2_DEF+4)
 12870  001432  6EF7               	movwf	tblptrh,c
 12871  001434                     	if	0	;tblptru may be non-zero
 12872  001434                     	endif
 12873  001434                     	if	0	;tblptru may be non-zero
 12874  001434                     	endif
 12875  001434  0008               	tblrd		*
 12876  001436  CFF5 F00D          	movff	tablat,??_init_gpios
 12877  00143A  0E81               	movlw	low (_PIN_LNB_QRG2_DEF+2)
 12878  00143C  6EF6               	movwf	tblptrl,c
 12879  00143E  0E78               	movlw	high (_PIN_LNB_QRG2_DEF+2)
 12880  001440  6EF7               	movwf	tblptrh,c
 12881  001442                     	if	0	;tblptru may be non-zero
 12882  001442                     	endif
 12883  001442                     	if	0	;tblptru may be non-zero
 12884  001442                     	endif
 12885  001442  0009               	tblrd		*+
 12886  001444  CFF5 FFD9          	movff	tablat,fsr2l
 12887  001448  0009               	tblrd		*+
 12888  00144A  CFF5 FFDA          	movff	tablat,fsr2h
 12889  00144E  500D               	movf	??_init_gpios^0,w,c
 12890  001450  12DF               	iorwf	indf2,f,c
 12891  001452                     
 12892                           ;src/gpio.c: 71:     *((PIN_LNB_QRG2)->pPORT) |= (PIN_LNB_QRG2)->mask;
 12893  001452  0E83               	movlw	low (_PIN_LNB_QRG2_DEF+4)
 12894  001454  6EF6               	movwf	tblptrl,c
 12895  001456  0E78               	movlw	high (_PIN_LNB_QRG2_DEF+4)
 12896  001458  6EF7               	movwf	tblptrh,c
 12897  00145A                     	if	0	;tblptru may be non-zero
 12898  00145A                     	endif
 12899  00145A                     	if	0	;tblptru may be non-zero
 12900  00145A                     	endif
 12901  00145A  0008               	tblrd		*
 12902  00145C  CFF5 F00D          	movff	tablat,??_init_gpios
 12903  001460  0E7F               	movlw	low _PIN_LNB_QRG2_DEF
 12904  001462  6EF6               	movwf	tblptrl,c
 12905  001464                     	if	1	;There is more than 1 active tblptr byte
 12906  001464  0E78               	movlw	high _PIN_LNB_QRG2_DEF
 12907  001466  6EF7               	movwf	tblptrh,c
 12908  001468                     	endif
 12909  001468                     	if	0	;There are less than 3 active tblptr bytes
 12910  001468                     	endif
 12911  001468  0009               	tblrd		*+
 12912  00146A  CFF5 F00E          	movff	tablat,??_init_gpios+1
 12913  00146E  0009               	tblrd		*+
 12914  001470  CFF5 F00F          	movff	tablat,??_init_gpios+2
 12915  001474  C00E  FFD9         	movff	??_init_gpios+1,fsr2l
 12916  001478  C00F  FFDA         	movff	??_init_gpios+2,fsr2h
 12917  00147C  500D               	movf	??_init_gpios^0,w,c
 12918  00147E  12DF               	iorwf	indf2,f,c
 12919  001480                     
 12920                           ;src/gpio.c: 72:     *((PIN_LNB_QRG1)->pTRIS) |= (PIN_LNB_QRG1)->mask;
 12921  001480  0E7E               	movlw	low (_PIN_LNB_QRG1_DEF+4)
 12922  001482  6EF6               	movwf	tblptrl,c
 12923  001484  0E78               	movlw	high (_PIN_LNB_QRG1_DEF+4)
 12924  001486  6EF7               	movwf	tblptrh,c
 12925  001488                     	if	0	;tblptru may be non-zero
 12926  001488                     	endif
 12927  001488                     	if	0	;tblptru may be non-zero
 12928  001488                     	endif
 12929  001488  0008               	tblrd		*
 12930  00148A  CFF5 F00D          	movff	tablat,??_init_gpios
 12931  00148E  0E7C               	movlw	low (_PIN_LNB_QRG1_DEF+2)
 12932  001490  6EF6               	movwf	tblptrl,c
 12933  001492  0E78               	movlw	high (_PIN_LNB_QRG1_DEF+2)
 12934  001494  6EF7               	movwf	tblptrh,c
 12935  001496                     	if	0	;tblptru may be non-zero
 12936  001496                     	endif
 12937  001496                     	if	0	;tblptru may be non-zero
 12938  001496                     	endif
 12939  001496  0009               	tblrd		*+
 12940  001498  CFF5 FFD9          	movff	tablat,fsr2l
 12941  00149C  0009               	tblrd		*+
 12942  00149E  CFF5 FFDA          	movff	tablat,fsr2h
 12943  0014A2  500D               	movf	??_init_gpios^0,w,c
 12944  0014A4  12DF               	iorwf	indf2,f,c
 12945  0014A6                     
 12946                           ;src/gpio.c: 73:     *((PIN_LNB_QRG1)->pPORT) |= (PIN_LNB_QRG1)->mask;
 12947  0014A6  0E7E               	movlw	low (_PIN_LNB_QRG1_DEF+4)
 12948  0014A8  6EF6               	movwf	tblptrl,c
 12949  0014AA  0E78               	movlw	high (_PIN_LNB_QRG1_DEF+4)
 12950  0014AC  6EF7               	movwf	tblptrh,c
 12951  0014AE                     	if	0	;tblptru may be non-zero
 12952  0014AE                     	endif
 12953  0014AE                     	if	0	;tblptru may be non-zero
 12954  0014AE                     	endif
 12955  0014AE  0008               	tblrd		*
 12956  0014B0  CFF5 F00D          	movff	tablat,??_init_gpios
 12957  0014B4  0E7A               	movlw	low _PIN_LNB_QRG1_DEF
 12958  0014B6  6EF6               	movwf	tblptrl,c
 12959  0014B8                     	if	1	;There is more than 1 active tblptr byte
 12960  0014B8  0E78               	movlw	high _PIN_LNB_QRG1_DEF
 12961  0014BA  6EF7               	movwf	tblptrh,c
 12962  0014BC                     	endif
 12963  0014BC                     	if	0	;There are less than 3 active tblptr bytes
 12964  0014BC                     	endif
 12965  0014BC  0009               	tblrd		*+
 12966  0014BE  CFF5 F00E          	movff	tablat,??_init_gpios+1
 12967  0014C2  0009               	tblrd		*+
 12968  0014C4  CFF5 F00F          	movff	tablat,??_init_gpios+2
 12969  0014C8  C00E  FFD9         	movff	??_init_gpios+1,fsr2l
 12970  0014CC  C00F  FFDA         	movff	??_init_gpios+2,fsr2h
 12971  0014D0  500D               	movf	??_init_gpios^0,w,c
 12972  0014D2  12DF               	iorwf	indf2,f,c
 12973  0014D4                     
 12974                           ;src/gpio.c: 76:     *((PIN_LNB_FAULT)->pTRIS) |= (PIN_LNB_FAULT)->mask;
 12975  0014D4  0E79               	movlw	low (_PIN_LNB_FAULT_DEF+4)
 12976  0014D6  6EF6               	movwf	tblptrl,c
 12977  0014D8  0E78               	movlw	high (_PIN_LNB_FAULT_DEF+4)
 12978  0014DA  6EF7               	movwf	tblptrh,c
 12979  0014DC                     	if	0	;tblptru may be non-zero
 12980  0014DC                     	endif
 12981  0014DC                     	if	0	;tblptru may be non-zero
 12982  0014DC                     	endif
 12983  0014DC  0008               	tblrd		*
 12984  0014DE  CFF5 F00D          	movff	tablat,??_init_gpios
 12985  0014E2  0E77               	movlw	low (_PIN_LNB_FAULT_DEF+2)
 12986  0014E4  6EF6               	movwf	tblptrl,c
 12987  0014E6  0E78               	movlw	high (_PIN_LNB_FAULT_DEF+2)
 12988  0014E8  6EF7               	movwf	tblptrh,c
 12989  0014EA                     	if	0	;tblptru may be non-zero
 12990  0014EA                     	endif
 12991  0014EA                     	if	0	;tblptru may be non-zero
 12992  0014EA                     	endif
 12993  0014EA  0009               	tblrd		*+
 12994  0014EC  CFF5 FFD9          	movff	tablat,fsr2l
 12995  0014F0  0009               	tblrd		*+
 12996  0014F2  CFF5 FFDA          	movff	tablat,fsr2h
 12997  0014F6  500D               	movf	??_init_gpios^0,w,c
 12998  0014F8  12DF               	iorwf	indf2,f,c
 12999  0014FA  0012               	return		;funcret
 13000  0014FC                     __end_of_init_gpios:
 13001                           	opt callstack 0
 13002                           
 13003 ;; *************** function _i2c_native_init *****************
 13004 ;; Defined at:
 13005 ;;		line 27 in file "src/driver/i2c_native.c"
 13006 ;; Parameters:    Size  Location     Type
 13007 ;;  ctx             2   39[COMRAM] PTR struct i2c_data_nati
 13008 ;;		 -> g_i2c_bus(8), 
 13009 ;;  baud            4   41[COMRAM] unsigned long 
 13010 ;; Auto vars:     Size  Location     Type
 13011 ;;		None
 13012 ;; Return value:  Size  Location     Type
 13013 ;;                  1    wreg      void 
 13014 ;; Registers used:
 13015 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13016 ;; Tracked objects:
 13017 ;;		On entry : 0/0
 13018 ;;		On exit  : 0/0
 13019 ;;		Unchanged: 0/0
 13020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13021 ;;      Params:         6       0       0       0       0       0       0
 13022 ;;      Locals:         0       0       0       0       0       0       0
 13023 ;;      Temps:          0       0       0       0       0       0       0
 13024 ;;      Totals:         6       0       0       0       0       0       0
 13025 ;;Total ram usage:        6 bytes
 13026 ;; Hardware stack levels used:    1
 13027 ;; Hardware stack levels required when called:    4
 13028 ;; This function calls:
 13029 ;;		_i2c_reset
 13030 ;;		_memset
 13031 ;; This function is called by:
 13032 ;;		_main
 13033 ;; This function uses a non-reentrant model
 13034 ;;
 13035                           
 13036                           	psect	text45
 13037  005F5C                     __ptext45:
 13038                           	opt callstack 0
 13039  005F5C                     _i2c_native_init:
 13040                           	opt callstack 26
 13041  005F5C                     
 13042                           ;src/driver/i2c_native.c: 27: void i2c_native_init(i2c_data_native *ctx, u32 baud);src/d
      +                          river/i2c_native.c: 28: {;src/driver/i2c_native.c: 29:     memset(ctx, 0, sizeof(*ctx));
 13043  005F5C  C028  F00D         	movff	i2c_native_init@ctx,memset@dest
 13044  005F60  C029  F00E         	movff	i2c_native_init@ctx+1,memset@dest+1
 13045  005F64  0E00               	movlw	0
 13046  005F66  6E10               	movwf	(memset@c+1)^0,c
 13047  005F68  0E00               	movlw	0
 13048  005F6A  6E0F               	movwf	memset@c^0,c
 13049  005F6C  0E00               	movlw	0
 13050  005F6E  6E12               	movwf	(memset@n+1)^0,c
 13051  005F70  0E08               	movlw	8
 13052  005F72  6E11               	movwf	memset@n^0,c
 13053  005F74  EC56  F01C         	call	_memset	;wreg free
 13054  005F78                     
 13055                           ;src/driver/i2c_native.c: 30:     ctx->baud = baud;
 13056  005F78  EE20 F004          	lfsr	2,4
 13057  005F7C  5028               	movf	i2c_native_init@ctx^0,w,c
 13058  005F7E  26D9               	addwf	fsr2l,f,c
 13059  005F80  5029               	movf	(i2c_native_init@ctx+1)^0,w,c
 13060  005F82  22DA               	addwfc	fsr2h,f,c
 13061  005F84  C02A  FFDE         	movff	i2c_native_init@baud,postinc2
 13062  005F88  C02B  FFDE         	movff	i2c_native_init@baud+1,postinc2
 13063  005F8C  C02C  FFDE         	movff	i2c_native_init@baud+2,postinc2
 13064  005F90  C02D  FFDE         	movff	i2c_native_init@baud+3,postinc2
 13065  005F94                     
 13066                           ;src/driver/i2c_native.c: 33:  i2c_reset(ctx);
 13067  005F94  C028  F01A         	movff	i2c_native_init@ctx,i2c_reset@ctx
 13068  005F98  C029  F01B         	movff	i2c_native_init@ctx+1,i2c_reset@ctx+1
 13069  005F9C  ECF3  F028         	call	_i2c_reset	;wreg free
 13070  005FA0                     
 13071                           ;src/driver/i2c_native.c: 36:  ctx->ops.transfer = i2c_transfer_native;
 13072  005FA0  C028  FFD9         	movff	i2c_native_init@ctx,fsr2l
 13073  005FA4  C029  FFDA         	movff	i2c_native_init@ctx+1,fsr2h
 13074  005FA8  0EC4               	movlw	low _i2c_transfer_native
 13075  005FAA  6EDE               	movwf	postinc2,c
 13076  005FAC  0E23               	movlw	high _i2c_transfer_native
 13077  005FAE  6EDD               	movwf	postdec2,c
 13078  005FB0  0012               	return		;funcret
 13079  005FB2                     __end_of_i2c_native_init:
 13080                           	opt callstack 0
 13081                           
 13082 ;; *************** function _check_si5328_status *****************
 13083 ;; Defined at:
 13084 ;;		line 262 in file "src/driver/si5328.c"
 13085 ;; Parameters:    Size  Location     Type
 13086 ;;  i2c             2  102[BANK0 ] PTR struct i2c_dev__
 13087 ;;		 -> g_i2c_bus(8), 
 13088 ;;  addr            1  104[BANK0 ] unsigned char 
 13089 ;; Auto vars:     Size  Location     Type
 13090 ;;  res             1  110[BANK0 ] unsigned char 
 13091 ;;  lock            1  109[BANK0 ] unsigned char 
 13092 ;;  ret             1  108[BANK0 ] unsigned char 
 13093 ;; Return value:  Size  Location     Type
 13094 ;;                  1    wreg      unsigned char 
 13095 ;; Registers used:
 13096 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13097 ;; Tracked objects:
 13098 ;;		On entry : 0/0
 13099 ;;		On exit  : 0/0
 13100 ;;		Unchanged: 0/0
 13101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13102 ;;      Params:         0       3       0       0       0       0       0
 13103 ;;      Locals:         0       3       0       0       0       0       0
 13104 ;;      Temps:          0       3       0       0       0       0       0
 13105 ;;      Totals:         0       9       0       0       0       0       0
 13106 ;;Total ram usage:        9 bytes
 13107 ;; Hardware stack levels used:    1
 13108 ;; Hardware stack levels required when called:   15
 13109 ;; This function calls:
 13110 ;;		_printf
 13111 ;;		_read_reg
 13112 ;; This function is called by:
 13113 ;;		_main
 13114 ;; This function uses a non-reentrant model
 13115 ;;
 13116                           
 13117                           	psect	text46
 13118  00358A                     __ptext46:
 13119                           	opt callstack 0
 13120  00358A                     _check_si5328_status:
 13121                           	opt callstack 15
 13122  00358A                     
 13123                           ;src/driver/si5328.c: 262: u8 check_si5328_status(i2c_dev i2c, u8 addr);src/driver/si532
      +                          8.c: 263: {;src/driver/si5328.c: 264:  u8 res, ret = 0;
 13124  00358A  0E00               	movlw	0
 13125  00358C  0100               	movlb	0	; () banked
 13126  00358E  6FEC               	movwf	check_si5328_status@ret& (0+255),b
 13127  003590                     
 13128                           ; BSR set to: 0
 13129                           ;src/driver/si5328.c: 265:  static u8 lastlock = 0xff;;src/driver/si5328.c: 267:  u8 loc
      +                          k = ((*((PIN_SI5328_LOL)->pPORT) & (PIN_SI5328_LOL)->mask) != 0);
 13130  003590  0EDD               	movlw	low (_PIN_SI5328_LOL_DEF+4)
 13131  003592  6EF6               	movwf	tblptrl,c
 13132  003594  0E78               	movlw	high (_PIN_SI5328_LOL_DEF+4)
 13133  003596  6EF7               	movwf	tblptrh,c
 13134  003598                     	if	0	;tblptru may be non-zero
 13135  003598                     	endif
 13136  003598                     	if	0	;tblptru may be non-zero
 13137  003598                     	endif
 13138  003598  0008               	tblrd		*
 13139  00359A  CFF5 F0E9          	movff	tablat,??_check_si5328_status
 13140  00359E  0ED9               	movlw	low _PIN_SI5328_LOL_DEF
 13141  0035A0  6EF6               	movwf	tblptrl,c
 13142  0035A2                     	if	1	;There is more than 1 active tblptr byte
 13143  0035A2  0E78               	movlw	high _PIN_SI5328_LOL_DEF
 13144  0035A4  6EF7               	movwf	tblptrh,c
 13145  0035A6                     	endif
 13146  0035A6                     	if	0	;There are less than 3 active tblptr bytes
 13147  0035A6                     	endif
 13148  0035A6  0009               	tblrd		*+
 13149  0035A8  CFF5 F0EA          	movff	tablat,??_check_si5328_status+1
 13150  0035AC  0009               	tblrd		*+
 13151  0035AE  CFF5 F0EB          	movff	tablat,??_check_si5328_status+2
 13152  0035B2  C0EA  FFD9         	movff	??_check_si5328_status+1,fsr2l
 13153  0035B6  C0EB  FFDA         	movff	??_check_si5328_status+2,fsr2h
 13154  0035BA  50DF               	movf	indf2,w,c
 13155  0035BC  15E9               	andwf	??_check_si5328_status& (0+255),w,b
 13156  0035BE  0900               	iorlw	0
 13157  0035C0  A4D8               	btfss	status,2,c
 13158  0035C2  EFE5  F01A         	goto	u11061
 13159  0035C6  EFE8  F01A         	goto	u11060
 13160  0035CA                     u11061:
 13161  0035CA  0E01               	movlw	1
 13162  0035CC  EFE9  F01A         	goto	u11070
 13163  0035D0                     u11060:
 13164  0035D0  0E00               	movlw	0
 13165  0035D2                     u11070:
 13166  0035D2  6FED               	movwf	check_si5328_status@lock& (0+255),b
 13167  0035D4                     
 13168                           ; BSR set to: 0
 13169                           ;src/driver/si5328.c: 268:  if(lock != lastlock)
 13170  0035D4  0101               	movlb	1	; () banked
 13171  0035D6  51D5               	movf	check_si5328_status@lastlock& (0+255),w,b
 13172  0035D8  0100               	movlb	0	; () banked
 13173  0035DA  19ED               	xorwf	check_si5328_status@lock& (0+255),w,b
 13174  0035DC  B4D8               	btfsc	status,2,c
 13175  0035DE  EFF3  F01A         	goto	u11081
 13176  0035E2  EFF5  F01A         	goto	u11080
 13177  0035E6                     u11081:
 13178  0035E6  EF46  F01B         	goto	l9376
 13179  0035EA                     u11080:
 13180  0035EA                     
 13181                           ; BSR set to: 0
 13182                           ;src/driver/si5328.c: 269:  {;src/driver/si5328.c: 270:   lastlock = lock;
 13183  0035EA  C0ED  F1D5         	movff	check_si5328_status@lock,check_si5328_status@lastlock
 13184  0035EE                     
 13185                           ; BSR set to: 0
 13186                           ;src/driver/si5328.c: 271:   if(lock == 1)
 13187  0035EE  05ED               	decf	check_si5328_status@lock& (0+255),w,b
 13188  0035F0  A4D8               	btfss	status,2,c
 13189  0035F2  EFFD  F01A         	goto	u11091
 13190  0035F6  EFFF  F01A         	goto	u11090
 13191  0035FA                     u11091:
 13192  0035FA  EF22  F01B         	goto	l9368
 13193  0035FE                     u11090:
 13194  0035FE                     
 13195                           ; BSR set to: 0
 13196                           ;src/driver/si5328.c: 272:   {;src/driver/si5328.c: 273:    printf("PLL unlocked\n");
 13197  0035FE  0E1F               	movlw	low STR_23
 13198  003600  6F95               	movwf	printf@fmt& (0+255),b
 13199  003602  0E7D               	movlw	high STR_23
 13200  003604  6F96               	movwf	(printf@fmt+1)& (0+255),b
 13201  003606  ECA7  F032         	call	_printf	;wreg free
 13202  00360A                     
 13203                           ;src/driver/si5328.c: 274:    si5328locked = 0;
 13204  00360A  0E00               	movlw	0
 13205  00360C  0101               	movlb	1	; () banked
 13206  00360E  6FAF               	movwf	_si5328locked& (0+255),b
 13207  003610                     
 13208                           ; BSR set to: 1
 13209                           ;src/driver/si5328.c: 275:    *((PIN_LED_SI_LOCK)->pPORT) |= (PIN_LED_SI_LOCK)->mask;
 13210  003610  0ED3               	movlw	low (_PIN_LED_SI_LOCK_DEF+4)
 13211  003612  6EF6               	movwf	tblptrl,c
 13212  003614  0E78               	movlw	high (_PIN_LED_SI_LOCK_DEF+4)
 13213  003616  6EF7               	movwf	tblptrh,c
 13214  003618                     	if	0	;tblptru may be non-zero
 13215  003618                     	endif
 13216  003618                     	if	0	;tblptru may be non-zero
 13217  003618                     	endif
 13218  003618  0008               	tblrd		*
 13219  00361A  CFF5 F0E9          	movff	tablat,??_check_si5328_status
 13220  00361E  0ECF               	movlw	low _PIN_LED_SI_LOCK_DEF
 13221  003620  6EF6               	movwf	tblptrl,c
 13222  003622                     	if	1	;There is more than 1 active tblptr byte
 13223  003622  0E78               	movlw	high _PIN_LED_SI_LOCK_DEF
 13224  003624  6EF7               	movwf	tblptrh,c
 13225  003626                     	endif
 13226  003626                     	if	0	;There are less than 3 active tblptr bytes
 13227  003626                     	endif
 13228  003626  0009               	tblrd		*+
 13229  003628  CFF5 F0EA          	movff	tablat,??_check_si5328_status+1
 13230  00362C  0009               	tblrd		*+
 13231  00362E  CFF5 F0EB          	movff	tablat,??_check_si5328_status+2
 13232  003632  C0EA  FFD9         	movff	??_check_si5328_status+1,fsr2l
 13233  003636  C0EB  FFDA         	movff	??_check_si5328_status+2,fsr2h
 13234  00363A  0100               	movlb	0	; () banked
 13235  00363C  51E9               	movf	??_check_si5328_status& (0+255),w,b
 13236  00363E  12DF               	iorwf	indf2,f,c
 13237                           
 13238                           ;src/driver/si5328.c: 276:   }
 13239  003640  EF46  F01B         	goto	l9376
 13240  003644                     l9368:
 13241                           
 13242                           ; BSR set to: 0
 13243                           ;src/driver/si5328.c: 278:   {;src/driver/si5328.c: 279:    printf("PLL locked\n");
 13244  003644  0E53               	movlw	low STR_24
 13245  003646  6F95               	movwf	printf@fmt& (0+255),b
 13246  003648  0E7D               	movlw	high STR_24
 13247  00364A  6F96               	movwf	(printf@fmt+1)& (0+255),b
 13248  00364C  ECA7  F032         	call	_printf	;wreg free
 13249  003650                     
 13250                           ;src/driver/si5328.c: 280:    si5328locked = 1;
 13251  003650  0E01               	movlw	1
 13252  003652  0101               	movlb	1	; () banked
 13253  003654  6FAF               	movwf	_si5328locked& (0+255),b
 13254  003656                     
 13255                           ; BSR set to: 1
 13256                           ;src/driver/si5328.c: 281:    *((PIN_LED_SI_LOCK)->pPORT) &= ~(PIN_LED_SI_LOCK)->mask;
 13257  003656  0ED3               	movlw	low (_PIN_LED_SI_LOCK_DEF+4)
 13258  003658  6EF6               	movwf	tblptrl,c
 13259  00365A  0E78               	movlw	high (_PIN_LED_SI_LOCK_DEF+4)
 13260  00365C  6EF7               	movwf	tblptrh,c
 13261  00365E                     	if	0	;tblptru may be non-zero
 13262  00365E                     	endif
 13263  00365E                     	if	0	;tblptru may be non-zero
 13264  00365E                     	endif
 13265  00365E  0008               	tblrd		*
 13266  003660  50F5               	movf	tablat,w,c
 13267  003662  0AFF               	xorlw	255
 13268  003664  0100               	movlb	0	; () banked
 13269  003666  6FE9               	movwf	??_check_si5328_status& (0+255),b
 13270  003668  0ECF               	movlw	low _PIN_LED_SI_LOCK_DEF
 13271  00366A  6EF6               	movwf	tblptrl,c
 13272  00366C                     	if	1	;There is more than 1 active tblptr byte
 13273  00366C  0E78               	movlw	high _PIN_LED_SI_LOCK_DEF
 13274  00366E  6EF7               	movwf	tblptrh,c
 13275  003670                     	endif
 13276  003670                     	if	0	;There are less than 3 active tblptr bytes
 13277  003670                     	endif
 13278  003670  0009               	tblrd		*+
 13279  003672  CFF5 F0EA          	movff	tablat,??_check_si5328_status+1
 13280  003676  0009               	tblrd		*+
 13281  003678  CFF5 F0EB          	movff	tablat,??_check_si5328_status+2
 13282  00367C  C0EA  FFD9         	movff	??_check_si5328_status+1,fsr2l
 13283  003680  C0EB  FFDA         	movff	??_check_si5328_status+2,fsr2h
 13284  003684  51E9               	movf	??_check_si5328_status& (0+255),w,b
 13285  003686  16DF               	andwf	indf2,f,c
 13286  003688                     
 13287                           ; BSR set to: 0
 13288                           ;src/driver/si5328.c: 282:    ret = 1;
 13289  003688  0E01               	movlw	1
 13290  00368A  6FEC               	movwf	check_si5328_status@ret& (0+255),b
 13291  00368C                     l9376:
 13292                           
 13293                           ; BSR set to: 0
 13294                           ;src/driver/si5328.c: 304:  static u8 lastinput = 0xff;;src/driver/si5328.c: 305:  res =
      +                           read_reg(i2c, addr, 128);
 13295  00368C  C0E6  F0DF         	movff	check_si5328_status@i2c,read_reg@i2c
 13296  003690  C0E7  F0E0         	movff	check_si5328_status@i2c+1,read_reg@i2c+1
 13297  003694  C0E8  F0E1         	movff	check_si5328_status@addr,read_reg@addr
 13298  003698  0E80               	movlw	128
 13299  00369A  6FE2               	movwf	read_reg@reg& (0+255),b
 13300  00369C  ECE0  F032         	call	_read_reg	;wreg free
 13301  0036A0  0100               	movlb	0	; () banked
 13302  0036A2  6FEE               	movwf	check_si5328_status@res& (0+255),b
 13303  0036A4                     
 13304                           ; BSR set to: 0
 13305                           ;src/driver/si5328.c: 306:  if(res != lastinput)
 13306  0036A4  0101               	movlb	1	; () banked
 13307  0036A6  51D4               	movf	check_si5328_status@lastinput& (0+255),w,b
 13308  0036A8  0100               	movlb	0	; () banked
 13309  0036AA  19EE               	xorwf	check_si5328_status@res& (0+255),w,b
 13310  0036AC  B4D8               	btfsc	status,2,c
 13311  0036AE  EF5B  F01B         	goto	u11101
 13312  0036B2  EF5D  F01B         	goto	u11100
 13313  0036B6                     u11101:
 13314  0036B6  EF8F  F01B         	goto	l9396
 13315  0036BA                     u11100:
 13316  0036BA                     
 13317                           ; BSR set to: 0
 13318                           ;src/driver/si5328.c: 307:  {;src/driver/si5328.c: 308:   if(!(res & 1) && !(res & 2)) p
      +                          rintf("Si5328: Input = disconnected !\n");
 13319  0036BA  B1EE               	btfsc	check_si5328_status@res& (0+255),0,b
 13320  0036BC  EF62  F01B         	goto	u11111
 13321  0036C0  EF64  F01B         	goto	u11110
 13322  0036C4                     u11111:
 13323  0036C4  EF71  F01B         	goto	l9386
 13324  0036C8                     u11110:
 13325  0036C8                     
 13326                           ; BSR set to: 0
 13327  0036C8  B3EE               	btfsc	check_si5328_status@res& (0+255),1,b
 13328  0036CA  EF69  F01B         	goto	u11121
 13329  0036CE  EF6B  F01B         	goto	u11120
 13330  0036D2                     u11121:
 13331  0036D2  EF71  F01B         	goto	l9386
 13332  0036D6                     u11120:
 13333  0036D6                     
 13334                           ; BSR set to: 0
 13335  0036D6  0ECE               	movlw	low STR_25
 13336  0036D8  6F95               	movwf	printf@fmt& (0+255),b
 13337  0036DA  0E7A               	movlw	high STR_25
 13338  0036DC  6F96               	movwf	(printf@fmt+1)& (0+255),b
 13339  0036DE  ECA7  F032         	call	_printf	;wreg free
 13340  0036E2                     l9386:
 13341                           
 13342                           ;src/driver/si5328.c: 309:   if(res & 1) printf("Si5328: Input = CKIN1 (GPS)\n");
 13343  0036E2  0100               	movlb	0	; () banked
 13344  0036E4  A1EE               	btfss	check_si5328_status@res& (0+255),0,b
 13345  0036E6  EF77  F01B         	goto	u11131
 13346  0036EA  EF79  F01B         	goto	u11130
 13347  0036EE                     u11131:
 13348  0036EE  EF7F  F01B         	goto	l9390
 13349  0036F2                     u11130:
 13350  0036F2                     
 13351                           ; BSR set to: 0
 13352  0036F2  0E0E               	movlw	low STR_26
 13353  0036F4  6F95               	movwf	printf@fmt& (0+255),b
 13354  0036F6  0E7B               	movlw	high STR_26
 13355  0036F8  6F96               	movwf	(printf@fmt+1)& (0+255),b
 13356  0036FA  ECA7  F032         	call	_printf	;wreg free
 13357  0036FE                     l9390:
 13358                           
 13359                           ;src/driver/si5328.c: 310:   if(res & 2) printf("Si5328: Input = CKIN2 (TCXO/OCXO)\n");
 13360  0036FE  0100               	movlb	0	; () banked
 13361  003700  A3EE               	btfss	check_si5328_status@res& (0+255),1,b
 13362  003702  EF85  F01B         	goto	u11141
 13363  003706  EF87  F01B         	goto	u11140
 13364  00370A                     u11141:
 13365  00370A  EF8D  F01B         	goto	l9394
 13366  00370E                     u11140:
 13367  00370E                     
 13368                           ; BSR set to: 0
 13369  00370E  0E88               	movlw	low STR_27
 13370  003710  6F95               	movwf	printf@fmt& (0+255),b
 13371  003712  0E7A               	movlw	high STR_27
 13372  003714  6F96               	movwf	(printf@fmt+1)& (0+255),b
 13373  003716  ECA7  F032         	call	_printf	;wreg free
 13374  00371A                     l9394:
 13375                           
 13376                           ;src/driver/si5328.c: 311:   lastinput = res;
 13377  00371A  C0EE  F1D4         	movff	check_si5328_status@res,check_si5328_status@lastinput
 13378  00371E                     l9396:
 13379                           
 13380                           ;src/driver/si5328.c: 325:  return ret;
 13381  00371E  0100               	movlb	0	; () banked
 13382  003720  51EC               	movf	check_si5328_status@ret& (0+255),w,b
 13383  003722                     
 13384                           ; BSR set to: 0
 13385  003722  0012               	return		;funcret
 13386  003724                     __end_of_check_si5328_status:
 13387                           	opt callstack 0
 13388                           
 13389 ;; *************** function _read_reg *****************
 13390 ;; Defined at:
 13391 ;;		line 343 in file "src/driver/si5328.c"
 13392 ;; Parameters:    Size  Location     Type
 13393 ;;  i2c             2   95[BANK0 ] PTR struct i2c_dev__
 13394 ;;		 -> g_i2c_bus(8), 
 13395 ;;  addr            1   97[BANK0 ] unsigned char 
 13396 ;;  reg             1   98[BANK0 ] unsigned char 
 13397 ;; Auto vars:     Size  Location     Type
 13398 ;;  res             2    0        int 
 13399 ;;  val             1  101[BANK0 ] unsigned char 
 13400 ;; Return value:  Size  Location     Type
 13401 ;;                  1    wreg      unsigned char 
 13402 ;; Registers used:
 13403 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13404 ;; Tracked objects:
 13405 ;;		On entry : 0/0
 13406 ;;		On exit  : 0/0
 13407 ;;		Unchanged: 0/0
 13408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13409 ;;      Params:         0       4       0       0       0       0       0
 13410 ;;      Locals:         0       3       0       0       0       0       0
 13411 ;;      Temps:          0       0       0       0       0       0       0
 13412 ;;      Totals:         0       7       0       0       0       0       0
 13413 ;;Total ram usage:        7 bytes
 13414 ;; Hardware stack levels used:    1
 13415 ;; Hardware stack levels required when called:   14
 13416 ;; This function calls:
 13417 ;;		_smbus8_read_byte
 13418 ;; This function is called by:
 13419 ;;		_check_si5328_status
 13420 ;; This function uses a non-reentrant model
 13421 ;;
 13422                           
 13423                           	psect	text47
 13424  0065C0                     __ptext47:
 13425                           	opt callstack 0
 13426  0065C0                     _read_reg:
 13427                           	opt callstack 15
 13428  0065C0  C0DF  F0CB         	movff	read_reg@i2c,smbus8_read_byte@dev
 13429  0065C4  C0E0  F0CC         	movff	read_reg@i2c+1,smbus8_read_byte@dev+1
 13430  0065C8  C0E1  F0CD         	movff	read_reg@addr,smbus8_read_byte@addr
 13431  0065CC  C0E2  F0CE         	movff	read_reg@reg,smbus8_read_byte@reg
 13432  0065D0  0EE5               	movlw	low read_reg@val
 13433  0065D2  0100               	movlb	0	; () banked
 13434  0065D4  6FCF               	movwf	smbus8_read_byte@data& (0+255),b
 13435  0065D6  0E00               	movlw	high read_reg@val
 13436  0065D8  6FD0               	movwf	(smbus8_read_byte@data+1)& (0+255),b
 13437  0065DA  ECCE  F02E         	call	_smbus8_read_byte	;wreg free
 13438  0065DE                     
 13439                           ;src/driver/si5328.c: 349:  return val;
 13440  0065DE  0100               	movlb	0	; () banked
 13441  0065E0  51E5               	movf	read_reg@val& (0+255),w,b
 13442  0065E2                     
 13443                           ; BSR set to: 0
 13444  0065E2  0012               	return		;funcret
 13445  0065E4                     __end_of_read_reg:
 13446                           	opt callstack 0
 13447                           
 13448 ;; *************** function _smbus8_read_byte *****************
 13449 ;; Defined at:
 13450 ;;		line 116 in file "src/driver/base/i2c.c"
 13451 ;; Parameters:    Size  Location     Type
 13452 ;;  dev             2   75[BANK0 ] PTR struct i2c_dev__
 13453 ;;		 -> g_i2c_bus(8), 
 13454 ;;  addr            1   77[BANK0 ] unsigned char 
 13455 ;;  reg             1   78[BANK0 ] unsigned char 
 13456 ;;  data            2   79[BANK0 ] PTR unsigned char 
 13457 ;;		 -> read_reg@val(1), LNB_error(1), lnb_do_configure@value(1), 
 13458 ;; Auto vars:     Size  Location     Type
 13459 ;;  msg            14   81[BANK0 ] struct i2c_msg[2]
 13460 ;; Return value:  Size  Location     Type
 13461 ;;                  2   75[BANK0 ] int 
 13462 ;; Registers used:
 13463 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13464 ;; Tracked objects:
 13465 ;;		On entry : 0/0
 13466 ;;		On exit  : 0/0
 13467 ;;		Unchanged: 0/0
 13468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13469 ;;      Params:         0       6       0       0       0       0       0
 13470 ;;      Locals:         0      14       0       0       0       0       0
 13471 ;;      Temps:          0       0       0       0       0       0       0
 13472 ;;      Totals:         0      20       0       0       0       0       0
 13473 ;;Total ram usage:       20 bytes
 13474 ;; Hardware stack levels used:    1
 13475 ;; Hardware stack levels required when called:   13
 13476 ;; This function calls:
 13477 ;;		_i2c_transfer
 13478 ;; This function is called by:
 13479 ;;		_lnb_do_configure
 13480 ;;		_check_LNB_status
 13481 ;;		_read_reg
 13482 ;; This function uses a non-reentrant model
 13483 ;;
 13484                           
 13485                           	psect	text48
 13486  005D9C                     __ptext48:
 13487                           	opt callstack 0
 13488  005D9C                     _smbus8_read_byte:
 13489                           	opt callstack 15
 13490  005D9C                     
 13491                           ;src/driver/base/i2c.c: 116: int smbus8_read_byte(i2c_dev dev, u8 addr, u8 reg, u8 *data
      +                          );src/driver/base/i2c.c: 117: {;src/driver/base/i2c.c: 118:  i2c_msg msg[2];;src/driver/
      +                          base/i2c.c: 120:  msg[0].addr = addr;
 13492  005D9C  C0CD  F0D1         	movff	smbus8_read_byte@addr,smbus8_read_byte@msg
 13493  005DA0  0100               	movlb	0	; () banked
 13494  005DA2  6BD2               	clrf	(smbus8_read_byte@msg+1)& (0+255),b
 13495  005DA4                     
 13496                           ; BSR set to: 0
 13497                           ;src/driver/base/i2c.c: 121:  msg[0].flags = (1<<1);
 13498  005DA4  0E02               	movlw	2
 13499  005DA6  6FD3               	movwf	(smbus8_read_byte@msg+2)& (0+255),b
 13500                           
 13501                           ;src/driver/base/i2c.c: 122:  msg[0].len = 1;
 13502  005DA8  0E00               	movlw	0
 13503  005DAA  6FD5               	movwf	(smbus8_read_byte@msg+4)& (0+255),b
 13504  005DAC  0E01               	movlw	1
 13505  005DAE  6FD4               	movwf	(smbus8_read_byte@msg+3)& (0+255),b
 13506  005DB0                     
 13507                           ; BSR set to: 0
 13508                           ;src/driver/base/i2c.c: 123:  msg[0].data = &reg;
 13509  005DB0  0ECE               	movlw	low smbus8_read_byte@reg
 13510  005DB2  6FD6               	movwf	(smbus8_read_byte@msg+5)& (0+255),b
 13511  005DB4  0E00               	movlw	high smbus8_read_byte@reg
 13512  005DB6  6FD7               	movwf	(smbus8_read_byte@msg+6)& (0+255),b
 13513  005DB8                     
 13514                           ; BSR set to: 0
 13515                           ;src/driver/base/i2c.c: 125:  msg[1].addr = addr;
 13516  005DB8  C0CD  F0D8         	movff	smbus8_read_byte@addr,smbus8_read_byte@msg+7
 13517  005DBC  6BD9               	clrf	(smbus8_read_byte@msg+8)& (0+255),b
 13518  005DBE                     
 13519                           ; BSR set to: 0
 13520                           ;src/driver/base/i2c.c: 126:  msg[1].flags = (1<<1) | (1<<2) | (1<<0);
 13521  005DBE  0E07               	movlw	7
 13522  005DC0  6FDA               	movwf	(smbus8_read_byte@msg+9)& (0+255),b
 13523  005DC2                     
 13524                           ; BSR set to: 0
 13525                           ;src/driver/base/i2c.c: 127:  msg[1].len = 1;
 13526  005DC2  0E00               	movlw	0
 13527  005DC4  6FDC               	movwf	(smbus8_read_byte@msg+11)& (0+255),b
 13528  005DC6  0E01               	movlw	1
 13529  005DC8  6FDB               	movwf	(smbus8_read_byte@msg+10)& (0+255),b
 13530  005DCA                     
 13531                           ; BSR set to: 0
 13532                           ;src/driver/base/i2c.c: 128:  msg[1].data = data;
 13533  005DCA  C0CF  F0DD         	movff	smbus8_read_byte@data,smbus8_read_byte@msg+12
 13534  005DCE  C0D0  F0DE         	movff	smbus8_read_byte@data+1,smbus8_read_byte@msg+13
 13535  005DD2                     
 13536                           ; BSR set to: 0
 13537                           ;src/driver/base/i2c.c: 130:  return i2c_transfer(dev, msg, 2);
 13538  005DD2  C0CB  F0C5         	movff	smbus8_read_byte@dev,i2c_transfer@dev
 13539  005DD6  C0CC  F0C6         	movff	smbus8_read_byte@dev+1,i2c_transfer@dev+1
 13540  005DDA  0ED1               	movlw	low smbus8_read_byte@msg
 13541  005DDC  6FC7               	movwf	i2c_transfer@msg& (0+255),b
 13542  005DDE  0E00               	movlw	high smbus8_read_byte@msg
 13543  005DE0  6FC8               	movwf	(i2c_transfer@msg+1)& (0+255),b
 13544  005DE2  0E00               	movlw	0
 13545  005DE4  6FCA               	movwf	(i2c_transfer@num+1)& (0+255),b
 13546  005DE6  0E02               	movlw	2
 13547  005DE8  6FC9               	movwf	i2c_transfer@num& (0+255),b
 13548  005DEA  EC3C  F02E         	call	_i2c_transfer	;wreg free
 13549  005DEE  C0C5  F0CB         	movff	?_i2c_transfer,?_smbus8_read_byte
 13550  005DF2  C0C6  F0CC         	movff	?_i2c_transfer+1,?_smbus8_read_byte+1
 13551  005DF6  0012               	return		;funcret
 13552  005DF8                     __end_of_smbus8_read_byte:
 13553                           	opt callstack 0
 13554                           
 13555 ;; *************** function _i2c_transfer *****************
 13556 ;; Defined at:
 13557 ;;		line 15 in file "src/driver/base/i2c.c"
 13558 ;; Parameters:    Size  Location     Type
 13559 ;;  dev             2   69[BANK0 ] PTR struct i2c_dev__
 13560 ;;		 -> g_i2c_bus(8), NULL(0), 
 13561 ;;  msg             2   71[BANK0 ] PTR struct i2c_msg
 13562 ;;		 -> smbus16_write_regset@msg(7), smbus16_read_short@msg(14), smbus16_write_short@msg(7), smbus16_read_data_raw@msg(1
      +4), 
 13563 ;;		 -> smbus16_read_data@msg(14), smbus16_read_byte@msg(14), smbus16_write_byte@msg(7), smbus16_write_data_raw@msg(14),
      + 
 13564 ;;		 -> smbus16_write_data@msg(14), smbus8_write_regset@msg(7), smbus8_read_short@msg(14), smbus8_read_data@msg(14), 
 13565 ;;		 -> smbus8_read_byte@msg(14), smbus8_write_short@msg(7), smbus8_write_data@msg(14), smbus8_write_byte@msg(7), 
 13566 ;;		 -> i2c_write_data@msg(7), i2c_read_data@msg(7), i2c_probe_addr@msg(7), 
 13567 ;;  num             2   73[BANK0 ] int 
 13568 ;; Auto vars:     Size  Location     Type
 13569 ;;		None
 13570 ;; Return value:  Size  Location     Type
 13571 ;;                  2   69[BANK0 ] int 
 13572 ;; Registers used:
 13573 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13574 ;; Tracked objects:
 13575 ;;		On entry : 0/0
 13576 ;;		On exit  : 0/0
 13577 ;;		Unchanged: 0/0
 13578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13579 ;;      Params:         0       6       0       0       0       0       0
 13580 ;;      Locals:         0       0       0       0       0       0       0
 13581 ;;      Temps:          0       0       0       0       0       0       0
 13582 ;;      Totals:         0       6       0       0       0       0       0
 13583 ;;Total ram usage:        6 bytes
 13584 ;; Hardware stack levels used:    1
 13585 ;; Hardware stack levels required when called:   12
 13586 ;; This function calls:
 13587 ;;		_i2c_transfer_native
 13588 ;; This function is called by:
 13589 ;;		_i2c_probe_addr
 13590 ;;		_smbus8_write_byte
 13591 ;;		_smbus8_write_data
 13592 ;;		_smbus8_read_byte
 13593 ;;		_i2c_read_data
 13594 ;;		_i2c_write_data
 13595 ;;		_smbus8_write_short
 13596 ;;		_smbus8_read_data
 13597 ;;		_smbus8_read_short
 13598 ;;		_smbus8_write_regset
 13599 ;;		_smbus16_write_data
 13600 ;;		_smbus16_write_data_raw
 13601 ;;		_smbus16_write_byte
 13602 ;;		_smbus16_read_byte
 13603 ;;		_smbus16_read_data
 13604 ;;		_smbus16_read_data_raw
 13605 ;;		_smbus16_write_short
 13606 ;;		_smbus16_read_short
 13607 ;;		_smbus16_write_regset
 13608 ;; This function uses a non-reentrant model
 13609 ;;
 13610                           
 13611                           	psect	text49
 13612  005C78                     __ptext49:
 13613                           	opt callstack 0
 13614  005C78                     _i2c_transfer:
 13615                           	opt callstack 15
 13616  005C78                     
 13617                           ;src/driver/base/i2c.c: 15: int i2c_transfer(i2c_dev dev, i2c_msg *msg, int num);src/dri
      +                          ver/base/i2c.c: 16: {;src/driver/base/i2c.c: 17:  if(!dev) return -3;
 13618  005C78  0100               	movlb	0	; () banked
 13619  005C7A  51C5               	movf	i2c_transfer@dev& (0+255),w,b
 13620  005C7C  11C6               	iorwf	(i2c_transfer@dev+1)& (0+255),w,b
 13621  005C7E  A4D8               	btfss	status,2,c
 13622  005C80  EF44  F02E         	goto	u10231
 13623  005C84  EF46  F02E         	goto	u10230
 13624  005C88                     u10231:
 13625  005C88  EF4C  F02E         	goto	l8698
 13626  005C8C                     u10230:
 13627  005C8C                     
 13628                           ; BSR set to: 0
 13629  005C8C  0EFF               	movlw	255
 13630  005C8E  6FC6               	movwf	(?_i2c_transfer+1)& (0+255),b
 13631  005C90  0EFD               	movlw	253
 13632  005C92  6FC5               	movwf	?_i2c_transfer& (0+255),b
 13633  005C94  EF6D  F02E         	goto	l13
 13634  005C98                     l8698:
 13635                           
 13636                           ; BSR set to: 0
 13637                           ;src/driver/base/i2c.c: 18:  return ((i2c_driver_ops*)dev)->transfer(dev, msg, num);
 13638  005C98  C0C5  F0AA         	movff	i2c_transfer@dev,i2c_transfer_native@dev
 13639  005C9C  C0C6  F0AB         	movff	i2c_transfer@dev+1,i2c_transfer_native@dev+1
 13640  005CA0  C0C7  F0AC         	movff	i2c_transfer@msg,i2c_transfer_native@msg
 13641  005CA4  C0C8  F0AD         	movff	i2c_transfer@msg+1,i2c_transfer_native@msg+1
 13642  005CA8  C0C9  F0AE         	movff	i2c_transfer@num,i2c_transfer_native@num
 13643  005CAC  C0CA  F0AF         	movff	i2c_transfer@num+1,i2c_transfer_native@num+1
 13644  005CB0  C0C5  FFD9         	movff	i2c_transfer@dev,fsr2l
 13645  005CB4  C0C6  FFDA         	movff	i2c_transfer@dev+1,fsr2h
 13646  005CB8  D802               	call	u10248
 13647  005CBA  EF69  F02E         	goto	u10249
 13648  005CBE                     u10248:
 13649  005CBE  0005               	push	
 13650  005CC0  6EFA               	movwf	pclath,c
 13651  005CC2  50DE               	movf	postinc2,w,c
 13652  005CC4  6EFD               	movwf	tosl,c
 13653  005CC6  50DE               	movf	postinc2,w,c
 13654  005CC8  6EFE               	movwf	tosh,c
 13655  005CCA  50F8               	movf	tblptru,w,c
 13656  005CCC  6EFF               	movwf	tosu,c
 13657  005CCE  50FA               	movf	pclath,w,c
 13658  005CD0  0012               	return		;indir
 13659  005CD2                     u10249:
 13660  005CD2  C0AA  F0C5         	movff	?_i2c_transfer_native,?_i2c_transfer
 13661  005CD6  C0AB  F0C6         	movff	?_i2c_transfer_native+1,?_i2c_transfer+1
 13662  005CDA                     l13:
 13663  005CDA  0012               	return		;funcret
 13664  005CDC                     __end_of_i2c_transfer:
 13665                           	opt callstack 0
 13666                           
 13667 ;; *************** function _i2c_transfer_native *****************
 13668 ;; Defined at:
 13669 ;;		line 201 in file "src/driver/i2c_native.c"
 13670 ;; Parameters:    Size  Location     Type
 13671 ;;  dev             2   42[BANK0 ] PTR struct i2c_dev__
 13672 ;;		 -> g_i2c_bus(8), NULL(0), 
 13673 ;;  msg             2   44[BANK0 ] PTR struct i2c_msg
 13674 ;;		 -> smbus16_write_regset@msg(7), smbus16_read_short@msg(14), smbus16_write_short@msg(7), smbus16_read_data_raw@msg(1
      +4), 
 13675 ;;		 -> smbus16_read_data@msg(14), smbus16_read_byte@msg(14), smbus16_write_byte@msg(7), smbus16_write_data_raw@msg(14),
      + 
 13676 ;;		 -> smbus16_write_data@msg(14), smbus8_write_regset@msg(7), smbus8_read_short@msg(14), smbus8_read_data@msg(14), 
 13677 ;;		 -> smbus8_read_byte@msg(14), smbus8_write_short@msg(7), smbus8_write_data@msg(14), smbus8_write_byte@msg(7), 
 13678 ;;		 -> i2c_write_data@msg(7), i2c_read_data@msg(7), i2c_probe_addr@msg(7), 
 13679 ;;  num             2   46[BANK0 ] int 
 13680 ;; Auto vars:     Size  Location     Type
 13681 ;;  pmsg            2   67[BANK0 ] PTR struct i2c_msg
 13682 ;;		 -> smbus16_write_regset@msg(7), smbus16_read_short@msg(14), smbus16_write_short@msg(7), smbus16_read_data_raw@msg(1
      +4), 
 13683 ;;		 -> smbus16_read_data@msg(14), smbus16_read_byte@msg(14), smbus16_write_byte@msg(7), smbus16_write_data_raw@msg(14),
      + 
 13684 ;;		 -> smbus16_write_data@msg(14), smbus8_write_regset@msg(7), smbus8_read_short@msg(14), smbus8_read_data@msg(14), 
 13685 ;;		 -> smbus8_read_byte@msg(14), smbus8_write_short@msg(7), smbus8_write_data@msg(14), smbus8_write_byte@msg(7), 
 13686 ;;		 -> i2c_write_data@msg(7), i2c_read_data@msg(7), i2c_probe_addr@msg(7), 
 13687 ;;  res             2   65[BANK0 ] int 
 13688 ;;  left            2   63[BANK0 ] unsigned short 
 13689 ;;  ctx             2   61[BANK0 ] PTR struct i2c_data_nati
 13690 ;;		 -> g_i2c_bus(8), NULL(0), 
 13691 ;;  bdata           2   59[BANK0 ] PTR unsigned char 
 13692 ;;		 -> print_char@map(8), lcd_clear_screen@buf(128), ssd1306_setpos@data(3), ssd1306_databyte@data(1), 
 13693 ;;		 -> ssd1306_init_commands(27), read_reg@val(1), LNB_error(1), lnb_do_configure@value(1), 
 13694 ;;		 -> smbus16_write_regset@tmp(4), smbus16_read_short@reg(2), smbus16_write_short@tmp(3), smbus16_read_data_raw@ger(2)
      +, 
 13695 ;;		 -> smbus16_read_data@ger(2), smbus16_read_byte@reg(2), smbus16_write_byte@tmp(3), smbus16_write_data_raw@ger(2), 
 13696 ;;		 -> smbus16_write_data@ger(2), smbus8_write_regset@tmp(2), smbus8_read_short@reg(1), smbus8_read_data@reg(1), 
 13697 ;;		 -> smbus8_read_byte@reg(1), smbus8_write_short@tmp(4), smbus8_write_data@reg(1), smbus8_write_byte@tmp(2), 
 13698 ;;		 -> i2c_write_byte@data(1), NULL(0), 
 13699 ;;  i               2   57[BANK0 ] int 
 13700 ;;  wantack         2   55[BANK0 ] int 
 13701 ;;  read            2   53[BANK0 ] int 
 13702 ;;  inmsg           2   51[BANK0 ] int 
 13703 ;;  ack             2   49[BANK0 ] int 
 13704 ;; Return value:  Size  Location     Type
 13705 ;;                  2   42[BANK0 ] int 
 13706 ;; Registers used:
 13707 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13708 ;; Tracked objects:
 13709 ;;		On entry : 0/0
 13710 ;;		On exit  : 0/0
 13711 ;;		Unchanged: 0/0
 13712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13713 ;;      Params:         0       6       0       0       0       0       0
 13714 ;;      Locals:         0      20       0       0       0       0       0
 13715 ;;      Temps:          0       1       0       0       0       0       0
 13716 ;;      Totals:         0      27       0       0       0       0       0
 13717 ;;Total ram usage:       27 bytes
 13718 ;; Hardware stack levels used:    1
 13719 ;; Hardware stack levels required when called:   11
 13720 ;; This function calls:
 13721 ;;		___wmul
 13722 ;;		_i2c_read
 13723 ;;		_i2c_reset
 13724 ;;		_i2c_start
 13725 ;;		_i2c_stop
 13726 ;;		_i2c_write
 13727 ;; This function is called by:
 13728 ;;		_i2c_native_init
 13729 ;;		_i2c_transfer
 13730 ;; This function uses a non-reentrant model
 13731 ;;
 13732                           
 13733                           	psect	text50
 13734  0023C4                     __ptext50:
 13735                           	opt callstack 0
 13736  0023C4                     _i2c_transfer_native:
 13737                           	opt callstack 15
 13738  0023C4                     
 13739                           ;src/driver/i2c_native.c: 201: static int i2c_transfer_native(i2c_dev dev, i2c_msg *msg,
      +                           int num);src/driver/i2c_native.c: 202: {;src/driver/i2c_native.c: 203:  i2c_data_native
      +                           *ctx = (i2c_data_native*)dev;
 13740  0023C4  C0AA  F0BD         	movff	i2c_transfer_native@dev,i2c_transfer_native@ctx
 13741  0023C8  C0AB  F0BE         	movff	i2c_transfer_native@dev+1,i2c_transfer_native@ctx+1
 13742  0023CC                     
 13743                           ;src/driver/i2c_native.c: 204:  struct i2c_msg *pmsg;;src/driver/i2c_native.c: 205:  BOO
      +                          L read, ack, wantack, inmsg;;src/driver/i2c_native.c: 206:  int i, res;;src/driver/i2c_n
      +                          ative.c: 207:  u16 left;;src/driver/i2c_native.c: 208:  u8* bdata;;src/driver/i2c_native
      +                          .c: 210:  inmsg = 0;
 13744  0023CC  0E00               	movlw	0
 13745  0023CE  0100               	movlb	0	; () banked
 13746  0023D0  6FB4               	movwf	(i2c_transfer_native@inmsg+1)& (0+255),b
 13747  0023D2  0E00               	movlw	0
 13748  0023D4  6FB3               	movwf	i2c_transfer_native@inmsg& (0+255),b
 13749  0023D6                     
 13750                           ; BSR set to: 0
 13751                           ;src/driver/i2c_native.c: 211:  for(i=0;i<num;i++) {
 13752  0023D6  0E00               	movlw	0
 13753  0023D8  6FBA               	movwf	(i2c_transfer_native@i+1)& (0+255),b
 13754  0023DA  0E00               	movlw	0
 13755  0023DC  6FB9               	movwf	i2c_transfer_native@i& (0+255),b
 13756  0023DE  EFFF  F012         	goto	l8676
 13757  0023E2                     l8622:
 13758                           
 13759                           ; BSR set to: 0
 13760                           ;src/driver/i2c_native.c: 213:   pmsg = &msg[i];
 13761  0023E2  C0B9  F00D         	movff	i2c_transfer_native@i,___wmul@multiplier
 13762  0023E6  C0BA  F00E         	movff	i2c_transfer_native@i+1,___wmul@multiplier+1
 13763  0023EA  0E00               	movlw	0
 13764  0023EC  6E10               	movwf	(___wmul@multiplicand+1)^0,c
 13765  0023EE  0E07               	movlw	7
 13766  0023F0  6E0F               	movwf	___wmul@multiplicand^0,c
 13767  0023F2  ECBB  F032         	call	___wmul	;wreg free
 13768  0023F6  500D               	movf	?___wmul^0,w,c
 13769  0023F8  0100               	movlb	0	; () banked
 13770  0023FA  25AC               	addwf	i2c_transfer_native@msg& (0+255),w,b
 13771  0023FC  6FC3               	movwf	i2c_transfer_native@pmsg& (0+255),b
 13772  0023FE  500E               	movf	(?___wmul+1)^0,w,c
 13773  002400  21AD               	addwfc	(i2c_transfer_native@msg+1)& (0+255),w,b
 13774  002402  6FC4               	movwf	(i2c_transfer_native@pmsg+1)& (0+255),b
 13775  002404                     
 13776                           ; BSR set to: 0
 13777                           ;src/driver/i2c_native.c: 214:   bdata = (u8*)pmsg->data;
 13778  002404  EE20 F005          	lfsr	2,5
 13779  002408  51C3               	movf	i2c_transfer_native@pmsg& (0+255),w,b
 13780  00240A  26D9               	addwf	fsr2l,f,c
 13781  00240C  51C4               	movf	(i2c_transfer_native@pmsg+1)& (0+255),w,b
 13782  00240E  22DA               	addwfc	fsr2h,f,c
 13783  002410  CFDE F0BB          	movff	postinc2,i2c_transfer_native@bdata
 13784  002414  CFDD F0BC          	movff	postdec2,i2c_transfer_native@bdata+1
 13785  002418                     
 13786                           ; BSR set to: 0
 13787                           ;src/driver/i2c_native.c: 215:   read = ((pmsg->flags & (1<<0)) != 0);
 13788  002418  EE20 F002          	lfsr	2,2
 13789  00241C  51C3               	movf	i2c_transfer_native@pmsg& (0+255),w,b
 13790  00241E  26D9               	addwf	fsr2l,f,c
 13791  002420  51C4               	movf	(i2c_transfer_native@pmsg+1)& (0+255),w,b
 13792  002422  22DA               	addwfc	fsr2h,f,c
 13793  002424  B0DF               	btfsc	indf2,0,c
 13794  002426  EF17  F012         	goto	u10061
 13795  00242A  EF1A  F012         	goto	u10060
 13796  00242E                     u10061:
 13797  00242E  0E01               	movlw	1
 13798  002430  EF1B  F012         	goto	u10070
 13799  002434                     u10060:
 13800  002434  0E00               	movlw	0
 13801  002436                     u10070:
 13802  002436  6FB5               	movwf	i2c_transfer_native@read& (0+255),b
 13803  002438  6BB6               	clrf	(i2c_transfer_native@read+1)& (0+255),b
 13804  00243A                     
 13805                           ; BSR set to: 0
 13806                           ;src/driver/i2c_native.c: 216:   wantack = ((pmsg->flags & (1<<3)) == 0);
 13807  00243A  EE20 F002          	lfsr	2,2
 13808  00243E  51C3               	movf	i2c_transfer_native@pmsg& (0+255),w,b
 13809  002440  26D9               	addwf	fsr2l,f,c
 13810  002442  51C4               	movf	(i2c_transfer_native@pmsg+1)& (0+255),w,b
 13811  002444  22DA               	addwfc	fsr2h,f,c
 13812  002446  A6DF               	btfss	indf2,3,c
 13813  002448  EF28  F012         	goto	u10081
 13814  00244C  EF2B  F012         	goto	u10080
 13815  002450                     u10081:
 13816  002450  0E01               	movlw	1
 13817  002452  EF2C  F012         	goto	u10090
 13818  002456                     u10080:
 13819  002456  0E00               	movlw	0
 13820  002458                     u10090:
 13821  002458  6FB7               	movwf	i2c_transfer_native@wantack& (0+255),b
 13822  00245A  6BB8               	clrf	(i2c_transfer_native@wantack+1)& (0+255),b
 13823  00245C                     
 13824                           ; BSR set to: 0
 13825                           ;src/driver/i2c_native.c: 219:   if(pmsg->flags&(1<<1)) {
 13826  00245C  EE20 F002          	lfsr	2,2
 13827  002460  51C3               	movf	i2c_transfer_native@pmsg& (0+255),w,b
 13828  002462  26D9               	addwf	fsr2l,f,c
 13829  002464  51C4               	movf	(i2c_transfer_native@pmsg+1)& (0+255),w,b
 13830  002466  22DA               	addwfc	fsr2h,f,c
 13831  002468  A2DF               	btfss	indf2,1,c
 13832  00246A  EF39  F012         	goto	u10101
 13833  00246E  EF3B  F012         	goto	u10100
 13834  002472                     u10101:
 13835  002472  EF62  F012         	goto	l8640
 13836  002476                     u10100:
 13837  002476                     
 13838                           ; BSR set to: 0
 13839                           ;src/driver/i2c_native.c: 220:    res = i2c_start(pmsg->addr, read, inmsg, wantack);
 13840  002476  C0B5  F011         	movff	i2c_transfer_native@read,i2c_start@read
 13841  00247A  C0B6  F012         	movff	i2c_transfer_native@read+1,i2c_start@read+1
 13842  00247E  C0B3  F013         	movff	i2c_transfer_native@inmsg,i2c_start@rep
 13843  002482  C0B4  F014         	movff	i2c_transfer_native@inmsg+1,i2c_start@rep+1
 13844  002486  C0B7  F015         	movff	i2c_transfer_native@wantack,i2c_start@wantack
 13845  00248A  C0B8  F016         	movff	i2c_transfer_native@wantack+1,i2c_start@wantack+1
 13846  00248E  C0C3  FFD9         	movff	i2c_transfer_native@pmsg,fsr2l
 13847  002492  C0C4  FFDA         	movff	i2c_transfer_native@pmsg+1,fsr2h
 13848  002496  50DF               	movf	indf2,w,c
 13849  002498  EC68  F024         	call	_i2c_start
 13850  00249C  C011  F0C1         	movff	?_i2c_start,i2c_transfer_native@res
 13851  0024A0  C012  F0C2         	movff	?_i2c_start+1,i2c_transfer_native@res+1
 13852  0024A4                     
 13853                           ;src/driver/i2c_native.c: 221:    if(res) goto error;
 13854  0024A4  0100               	movlb	0	; () banked
 13855  0024A6  51C1               	movf	i2c_transfer_native@res& (0+255),w,b
 13856  0024A8  11C2               	iorwf	(i2c_transfer_native@res+1)& (0+255),w,b
 13857  0024AA  B4D8               	btfsc	status,2,c
 13858  0024AC  EF5A  F012         	goto	u10111
 13859  0024B0  EF5C  F012         	goto	u10110
 13860  0024B4                     u10111:
 13861  0024B4  EF5E  F012         	goto	l8638
 13862  0024B8                     u10110:
 13863  0024B8  EF14  F013         	goto	l8682
 13864  0024BC                     l8638:
 13865                           
 13866                           ; BSR set to: 0
 13867                           ;src/driver/i2c_native.c: 222:    inmsg = 1;
 13868  0024BC  0E00               	movlw	0
 13869  0024BE  6FB4               	movwf	(i2c_transfer_native@inmsg+1)& (0+255),b
 13870  0024C0  0E01               	movlw	1
 13871  0024C2  6FB3               	movwf	i2c_transfer_native@inmsg& (0+255),b
 13872  0024C4                     l8640:
 13873                           
 13874                           ; BSR set to: 0
 13875                           ;src/driver/i2c_native.c: 225:   if(read) {
 13876  0024C4  51B5               	movf	i2c_transfer_native@read& (0+255),w,b
 13877  0024C6  11B6               	iorwf	(i2c_transfer_native@read+1)& (0+255),w,b
 13878  0024C8  B4D8               	btfsc	status,2,c
 13879  0024CA  EF69  F012         	goto	u10121
 13880  0024CE  EF6B  F012         	goto	u10120
 13881  0024D2                     u10121:
 13882  0024D2  EFAF  F012         	goto	l8656
 13883  0024D6                     u10120:
 13884  0024D6                     
 13885                           ; BSR set to: 0
 13886                           ;src/driver/i2c_native.c: 227:    left = pmsg->len;
 13887  0024D6  EE20 F003          	lfsr	2,3
 13888  0024DA  51C3               	movf	i2c_transfer_native@pmsg& (0+255),w,b
 13889  0024DC  26D9               	addwf	fsr2l,f,c
 13890  0024DE  51C4               	movf	(i2c_transfer_native@pmsg+1)& (0+255),w,b
 13891  0024E0  22DA               	addwfc	fsr2h,f,c
 13892  0024E2  CFDE F0BF          	movff	postinc2,i2c_transfer_native@left
 13893  0024E6  CFDD F0C0          	movff	postdec2,i2c_transfer_native@left+1
 13894                           
 13895                           ;src/driver/i2c_native.c: 228:    while(left--) {
 13896  0024EA  EFA0  F012         	goto	l8654
 13897  0024EE                     l8644:
 13898                           
 13899                           ; BSR set to: 0
 13900                           ;src/driver/i2c_native.c: 229:     ack = (left!=0);
 13901  0024EE  51BF               	movf	i2c_transfer_native@left& (0+255),w,b
 13902  0024F0  11C0               	iorwf	(i2c_transfer_native@left+1)& (0+255),w,b
 13903  0024F2  A4D8               	btfss	status,2,c
 13904  0024F4  EF7E  F012         	goto	u10131
 13905  0024F8  EF81  F012         	goto	u10130
 13906  0024FC                     u10131:
 13907  0024FC  0E01               	movlw	1
 13908  0024FE  EF82  F012         	goto	u10140
 13909  002502                     u10130:
 13910  002502  0E00               	movlw	0
 13911  002504                     u10140:
 13912  002504  6FB1               	movwf	i2c_transfer_native@ack& (0+255),b
 13913  002506  6BB2               	clrf	(i2c_transfer_native@ack+1)& (0+255),b
 13914  002508                     
 13915                           ; BSR set to: 0
 13916                           ;src/driver/i2c_native.c: 230:     res = i2c_read(bdata++, ack);
 13917  002508  C0BB  F0A3         	movff	i2c_transfer_native@bdata,i2c_read@data
 13918  00250C  C0BC  F0A4         	movff	i2c_transfer_native@bdata+1,i2c_read@data+1
 13919  002510  C0B1  F0A5         	movff	i2c_transfer_native@ack,i2c_read@ack
 13920  002514  C0B2  F0A6         	movff	i2c_transfer_native@ack+1,i2c_read@ack+1
 13921  002518  ECDA  F024         	call	_i2c_read	;wreg free
 13922  00251C  C0A3  F0C1         	movff	?_i2c_read,i2c_transfer_native@res
 13923  002520  C0A4  F0C2         	movff	?_i2c_read+1,i2c_transfer_native@res+1
 13924  002524  0100               	movlb	0	; () banked
 13925  002526  4BBB               	infsnz	i2c_transfer_native@bdata& (0+255),f,b
 13926  002528  2BBC               	incf	(i2c_transfer_native@bdata+1)& (0+255),f,b
 13927  00252A                     
 13928                           ; BSR set to: 0
 13929                           ;src/driver/i2c_native.c: 231:     if(res) goto error;
 13930  00252A  51C1               	movf	i2c_transfer_native@res& (0+255),w,b
 13931  00252C  11C2               	iorwf	(i2c_transfer_native@res+1)& (0+255),w,b
 13932  00252E  B4D8               	btfsc	status,2,c
 13933  002530  EF9C  F012         	goto	u10151
 13934  002534  EF9E  F012         	goto	u10150
 13935  002538                     u10151:
 13936  002538  EFA0  F012         	goto	l8654
 13937  00253C                     u10150:
 13938  00253C  EF14  F013         	goto	l8682
 13939  002540                     l8654:
 13940                           
 13941                           ; BSR set to: 0
 13942                           ;src/driver/i2c_native.c: 228:    while(left--) {
 13943  002540  07BF               	decf	i2c_transfer_native@left& (0+255),f,b
 13944  002542  A0D8               	btfss	status,0,c
 13945  002544  07C0               	decf	(i2c_transfer_native@left+1)& (0+255),f,b
 13946  002546  29BF               	incf	i2c_transfer_native@left& (0+255),w,b
 13947  002548  E106               	bnz	u10161
 13948  00254A  29C0               	incf	(i2c_transfer_native@left+1)& (0+255),w,b
 13949  00254C  A4D8               	btfss	status,2,c
 13950  00254E  EFAB  F012         	goto	u10161
 13951  002552  EFAD  F012         	goto	u10160
 13952  002556                     u10161:
 13953  002556  EF77  F012         	goto	l8644
 13954  00255A                     u10160:
 13955  00255A  EFE5  F012         	goto	l8668
 13956  00255E                     l8656:
 13957                           
 13958                           ; BSR set to: 0
 13959                           ;src/driver/i2c_native.c: 235:    left = pmsg->len;
 13960  00255E  EE20 F003          	lfsr	2,3
 13961  002562  51C3               	movf	i2c_transfer_native@pmsg& (0+255),w,b
 13962  002564  26D9               	addwf	fsr2l,f,c
 13963  002566  51C4               	movf	(i2c_transfer_native@pmsg+1)& (0+255),w,b
 13964  002568  22DA               	addwfc	fsr2h,f,c
 13965  00256A  CFDE F0BF          	movff	postinc2,i2c_transfer_native@left
 13966  00256E  CFDD F0C0          	movff	postdec2,i2c_transfer_native@left+1
 13967                           
 13968                           ;src/driver/i2c_native.c: 236:    while(left--) {
 13969  002572  EFD8  F012         	goto	l8666
 13970  002576                     l8658:
 13971                           
 13972                           ; BSR set to: 0
 13973                           ;src/driver/i2c_native.c: 237:     res = i2c_write(*bdata++, wantack);
 13974  002576  C0B7  F011         	movff	i2c_transfer_native@wantack,i2c_write@wantack
 13975  00257A  C0B8  F012         	movff	i2c_transfer_native@wantack+1,i2c_write@wantack+1
 13976  00257E  C0BB  FFD9         	movff	i2c_transfer_native@bdata,fsr2l
 13977  002582  C0BC  FFDA         	movff	i2c_transfer_native@bdata+1,fsr2h
 13978  002586  50DF               	movf	indf2,w,c
 13979  002588  EC60  F02D         	call	_i2c_write
 13980  00258C  C011  F0C1         	movff	?_i2c_write,i2c_transfer_native@res
 13981  002590  C012  F0C2         	movff	?_i2c_write+1,i2c_transfer_native@res+1
 13982  002594  0100               	movlb	0	; () banked
 13983  002596  4BBB               	infsnz	i2c_transfer_native@bdata& (0+255),f,b
 13984  002598  2BBC               	incf	(i2c_transfer_native@bdata+1)& (0+255),f,b
 13985  00259A                     
 13986                           ; BSR set to: 0
 13987                           ;src/driver/i2c_native.c: 238:     if(res) goto error;
 13988  00259A  51C1               	movf	i2c_transfer_native@res& (0+255),w,b
 13989  00259C  11C2               	iorwf	(i2c_transfer_native@res+1)& (0+255),w,b
 13990  00259E  B4D8               	btfsc	status,2,c
 13991  0025A0  EFD4  F012         	goto	u10171
 13992  0025A4  EFD6  F012         	goto	u10170
 13993  0025A8                     u10171:
 13994  0025A8  EFD8  F012         	goto	l8666
 13995  0025AC                     u10170:
 13996  0025AC  EF14  F013         	goto	l8682
 13997  0025B0                     l8666:
 13998                           
 13999                           ; BSR set to: 0
 14000                           ;src/driver/i2c_native.c: 236:    while(left--) {
 14001  0025B0  07BF               	decf	i2c_transfer_native@left& (0+255),f,b
 14002  0025B2  A0D8               	btfss	status,0,c
 14003  0025B4  07C0               	decf	(i2c_transfer_native@left+1)& (0+255),f,b
 14004  0025B6  29BF               	incf	i2c_transfer_native@left& (0+255),w,b
 14005  0025B8  E106               	bnz	u10181
 14006  0025BA  29C0               	incf	(i2c_transfer_native@left+1)& (0+255),w,b
 14007  0025BC  A4D8               	btfss	status,2,c
 14008  0025BE  EFE3  F012         	goto	u10181
 14009  0025C2  EFE5  F012         	goto	u10180
 14010  0025C6                     u10181:
 14011  0025C6  EFBB  F012         	goto	l8658
 14012  0025CA                     u10180:
 14013  0025CA                     l8668:
 14014                           
 14015                           ; BSR set to: 0
 14016                           ;src/driver/i2c_native.c: 243:   if(pmsg->flags&(1<<2)) {
 14017  0025CA  EE20 F002          	lfsr	2,2
 14018  0025CE  51C3               	movf	i2c_transfer_native@pmsg& (0+255),w,b
 14019  0025D0  26D9               	addwf	fsr2l,f,c
 14020  0025D2  51C4               	movf	(i2c_transfer_native@pmsg+1)& (0+255),w,b
 14021  0025D4  22DA               	addwfc	fsr2h,f,c
 14022  0025D6  A4DF               	btfss	indf2,2,c
 14023  0025D8  EFF0  F012         	goto	u10191
 14024  0025DC  EFF2  F012         	goto	u10190
 14025  0025E0                     u10191:
 14026  0025E0  EFFD  F012         	goto	l8674
 14027  0025E4                     u10190:
 14028  0025E4                     
 14029                           ; BSR set to: 0
 14030                           ;src/driver/i2c_native.c: 244:    i2c_stop(ctx);
 14031  0025E4  C0BD  F028         	movff	i2c_transfer_native@ctx,i2c_stop@ctx
 14032  0025E8  C0BE  F029         	movff	i2c_transfer_native@ctx+1,i2c_stop@ctx+1
 14033  0025EC  EC06  F032         	call	_i2c_stop	;wreg free
 14034  0025F0                     
 14035                           ;src/driver/i2c_native.c: 245:    inmsg = 0;
 14036  0025F0  0E00               	movlw	0
 14037  0025F2  0100               	movlb	0	; () banked
 14038  0025F4  6FB4               	movwf	(i2c_transfer_native@inmsg+1)& (0+255),b
 14039  0025F6  0E00               	movlw	0
 14040  0025F8  6FB3               	movwf	i2c_transfer_native@inmsg& (0+255),b
 14041  0025FA                     l8674:
 14042                           
 14043                           ; BSR set to: 0
 14044                           ;src/driver/i2c_native.c: 247:  }
 14045  0025FA  4BB9               	infsnz	i2c_transfer_native@i& (0+255),f,b
 14046  0025FC  2BBA               	incf	(i2c_transfer_native@i+1)& (0+255),f,b
 14047  0025FE                     l8676:
 14048                           
 14049                           ; BSR set to: 0
 14050  0025FE  51AE               	movf	i2c_transfer_native@num& (0+255),w,b
 14051  002600  5DB9               	subwf	i2c_transfer_native@i& (0+255),w,b
 14052  002602  51BA               	movf	(i2c_transfer_native@i+1)& (0+255),w,b
 14053  002604  0A80               	xorlw	128
 14054  002606  6FB0               	movwf	??_i2c_transfer_native& (0+255),b
 14055  002608  51AF               	movf	(i2c_transfer_native@num+1)& (0+255),w,b
 14056  00260A  0A80               	xorlw	128
 14057  00260C  59B0               	subwfb	??_i2c_transfer_native& (0+255),w,b
 14058  00260E  A0D8               	btfss	status,0,c
 14059  002610  EF0C  F013         	goto	u10201
 14060  002614  EF0E  F013         	goto	u10200
 14061  002618                     u10201:
 14062  002618  EFF1  F011         	goto	l8622
 14063  00261C                     u10200:
 14064  00261C                     
 14065                           ; BSR set to: 0
 14066                           ;src/driver/i2c_native.c: 248:  return 0;
 14067  00261C  0E00               	movlw	0
 14068  00261E  6FAB               	movwf	(?_i2c_transfer_native+1)& (0+255),b
 14069  002620  0E00               	movlw	0
 14070  002622  6FAA               	movwf	?_i2c_transfer_native& (0+255),b
 14071  002624  EF3A  F013         	goto	l343
 14072  002628                     l8682:
 14073                           
 14074                           ; BSR set to: 0
 14075                           ;src/driver/i2c_native.c: 251:  if(res!=-5 && res!=-6) i2c_stop(ctx);
 14076  002628  0EFB               	movlw	251
 14077  00262A  19C1               	xorwf	i2c_transfer_native@res& (0+255),w,b
 14078  00262C  E108               	bnz	u10210
 14079  00262E  29C2               	incf	(i2c_transfer_native@res+1)& (0+255),w,b
 14080  002630  B4D8               	btfsc	status,2,c
 14081  002632  EF1D  F013         	goto	u10211
 14082  002636  EF1F  F013         	goto	u10210
 14083  00263A                     u10211:
 14084  00263A  EF30  F013         	goto	l344
 14085  00263E                     u10210:
 14086  00263E                     
 14087                           ; BSR set to: 0
 14088  00263E  0EFA               	movlw	250
 14089  002640  19C1               	xorwf	i2c_transfer_native@res& (0+255),w,b
 14090  002642  E108               	bnz	u10220
 14091  002644  29C2               	incf	(i2c_transfer_native@res+1)& (0+255),w,b
 14092  002646  B4D8               	btfsc	status,2,c
 14093  002648  EF28  F013         	goto	u10221
 14094  00264C  EF2A  F013         	goto	u10220
 14095  002650                     u10221:
 14096  002650  EF30  F013         	goto	l344
 14097  002654                     u10220:
 14098  002654                     
 14099                           ; BSR set to: 0
 14100  002654  C0BD  F028         	movff	i2c_transfer_native@ctx,i2c_stop@ctx
 14101  002658  C0BE  F029         	movff	i2c_transfer_native@ctx+1,i2c_stop@ctx+1
 14102  00265C  EC06  F032         	call	_i2c_stop	;wreg free
 14103  002660                     l344:
 14104                           
 14105                           ;src/driver/i2c_native.c: 252:  i2c_reset(ctx);
 14106  002660  C0BD  F01A         	movff	i2c_transfer_native@ctx,i2c_reset@ctx
 14107  002664  C0BE  F01B         	movff	i2c_transfer_native@ctx+1,i2c_reset@ctx+1
 14108  002668  ECF3  F028         	call	_i2c_reset	;wreg free
 14109  00266C                     
 14110                           ;src/driver/i2c_native.c: 253:  return res;
 14111  00266C  C0C1  F0AA         	movff	i2c_transfer_native@res,?_i2c_transfer_native
 14112  002670  C0C2  F0AB         	movff	i2c_transfer_native@res+1,?_i2c_transfer_native+1
 14113  002674                     l343:
 14114  002674  0012               	return		;funcret
 14115  002676                     __end_of_i2c_transfer_native:
 14116                           	opt callstack 0
 14117                           
 14118 ;; *************** function _i2c_write *****************
 14119 ;; Defined at:
 14120 ;;		line 178 in file "src/driver/i2c_native.c"
 14121 ;; Parameters:    Size  Location     Type
 14122 ;;  data            1    wreg     unsigned char 
 14123 ;;  wantack         2   16[COMRAM] int 
 14124 ;; Auto vars:     Size  Location     Type
 14125 ;;  data            1   18[COMRAM] unsigned char 
 14126 ;;  res             2   19[COMRAM] int 
 14127 ;; Return value:  Size  Location     Type
 14128 ;;                  2   16[COMRAM] int 
 14129 ;; Registers used:
 14130 ;;		wreg, status,2, status,0, cstack
 14131 ;; Tracked objects:
 14132 ;;		On entry : 0/0
 14133 ;;		On exit  : 0/0
 14134 ;;		Unchanged: 0/0
 14135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14136 ;;      Params:         2       0       0       0       0       0       0
 14137 ;;      Locals:         3       0       0       0       0       0       0
 14138 ;;      Temps:          0       0       0       0       0       0       0
 14139 ;;      Totals:         5       0       0       0       0       0       0
 14140 ;;Total ram usage:        5 bytes
 14141 ;; Hardware stack levels used:    1
 14142 ;; Hardware stack levels required when called:    3
 14143 ;; This function calls:
 14144 ;;		_i2c_wait_int
 14145 ;; This function is called by:
 14146 ;;		_i2c_transfer_native
 14147 ;; This function uses a non-reentrant model
 14148 ;;
 14149                           
 14150                           	psect	text51
 14151  005AC0                     __ptext51:
 14152                           	opt callstack 0
 14153  005AC0                     _i2c_write:
 14154                           	opt callstack 22
 14155                           
 14156                           ;incstack = 0
 14157                           ;i2c_write@data stored from wreg
 14158  005AC0  6E13               	movwf	i2c_write@data^0,c
 14159  005AC2                     
 14160                           ;src/driver/i2c_native.c: 178: static int i2c_write(u8 data, BOOL wantack);src/driver/i2
      +                          c_native.c: 179: {;src/driver/i2c_native.c: 180:  int res;;src/driver/i2c_native.c: 182:
      +                               PIR1bits.SSPIF = 0;
 14161  005AC2  969E               	bcf	158,3,c	;volatile
 14162  005AC4                     
 14163                           ;src/driver/i2c_native.c: 185:  SSPBUF = data;
 14164  005AC4  C013  FFC9         	movff	i2c_write@data,4041	;volatile
 14165  005AC8                     
 14166                           ;src/driver/i2c_native.c: 188:  res = i2c_wait_int(2500);
 14167  005AC8  0EC4               	movlw	196
 14168  005ACA  6E0D               	movwf	i2c_wait_int@timeout^0,c
 14169  005ACC  0E09               	movlw	9
 14170  005ACE  6E0E               	movwf	(i2c_wait_int@timeout+1)^0,c
 14171  005AD0  0E00               	movlw	0
 14172  005AD2  6E0F               	movwf	(i2c_wait_int@timeout+2)^0,c
 14173  005AD4  0E00               	movlw	0
 14174  005AD6  6E10               	movwf	(i2c_wait_int@timeout+3)^0,c
 14175  005AD8  EC9C  F02D         	call	_i2c_wait_int	;wreg free
 14176  005ADC  C00D  F014         	movff	?_i2c_wait_int,i2c_write@res
 14177  005AE0  C00E  F015         	movff	?_i2c_wait_int+1,i2c_write@res+1
 14178  005AE4                     
 14179                           ;src/driver/i2c_native.c: 189:  if(res) return res;
 14180  005AE4  5014               	movf	i2c_write@res^0,w,c
 14181  005AE6  1015               	iorwf	(i2c_write@res+1)^0,w,c
 14182  005AE8  B4D8               	btfsc	status,2,c
 14183  005AEA  EF79  F02D         	goto	u10031
 14184  005AEE  EF7B  F02D         	goto	u10030
 14185  005AF2                     u10031:
 14186  005AF2  EF81  F02D         	goto	l8604
 14187  005AF6                     u10030:
 14188  005AF6  C014  F011         	movff	i2c_write@res,?_i2c_write
 14189  005AFA  C015  F012         	movff	i2c_write@res+1,?_i2c_write+1
 14190  005AFE  EF9B  F02D         	goto	l322
 14191  005B02                     l8604:
 14192                           
 14193                           ;src/driver/i2c_native.c: 192:     if(wantack && (SSPCON2bits.ACKSTAT != 0)) {
 14194  005B02  5011               	movf	i2c_write@wantack^0,w,c
 14195  005B04  1012               	iorwf	(i2c_write@wantack+1)^0,w,c
 14196  005B06  B4D8               	btfsc	status,2,c
 14197  005B08  EF88  F02D         	goto	u10041
 14198  005B0C  EF8A  F02D         	goto	u10040
 14199  005B10                     u10041:
 14200  005B10  EF97  F02D         	goto	l8612
 14201  005B14                     u10040:
 14202  005B14  ACC5               	btfss	197,6,c	;volatile
 14203  005B16  EF8F  F02D         	goto	u10051
 14204  005B1A  EF91  F02D         	goto	u10050
 14205  005B1E                     u10051:
 14206  005B1E  EF97  F02D         	goto	l8612
 14207  005B22                     u10050:
 14208  005B22                     
 14209                           ;src/driver/i2c_native.c: 193:   return -7;
 14210  005B22  0EFF               	movlw	255
 14211  005B24  6E12               	movwf	(?_i2c_write+1)^0,c
 14212  005B26  0EF9               	movlw	249
 14213  005B28  6E11               	movwf	?_i2c_write^0,c
 14214  005B2A  EF9B  F02D         	goto	l322
 14215  005B2E                     l8612:
 14216                           
 14217                           ;src/driver/i2c_native.c: 197:  return 0;
 14218  005B2E  0E00               	movlw	0
 14219  005B30  6E12               	movwf	(?_i2c_write+1)^0,c
 14220  005B32  0E00               	movlw	0
 14221  005B34  6E11               	movwf	?_i2c_write^0,c
 14222  005B36                     l322:
 14223  005B36  0012               	return		;funcret
 14224  005B38                     __end_of_i2c_write:
 14225                           	opt callstack 0
 14226                           
 14227 ;; *************** function _i2c_stop *****************
 14228 ;; Defined at:
 14229 ;;		line 134 in file "src/driver/i2c_native.c"
 14230 ;; Parameters:    Size  Location     Type
 14231 ;;  ctx             2   39[COMRAM] PTR struct i2c_data_nati
 14232 ;;		 -> g_i2c_bus(8), NULL(0), 
 14233 ;; Auto vars:     Size  Location     Type
 14234 ;;		None
 14235 ;; Return value:  Size  Location     Type
 14236 ;;                  1    wreg      void 
 14237 ;; Registers used:
 14238 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14239 ;; Tracked objects:
 14240 ;;		On entry : 0/0
 14241 ;;		On exit  : 0/0
 14242 ;;		Unchanged: 0/0
 14243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14244 ;;      Params:         2       0       0       0       0       0       0
 14245 ;;      Locals:         0       0       0       0       0       0       0
 14246 ;;      Temps:          0       0       0       0       0       0       0
 14247 ;;      Totals:         2       0       0       0       0       0       0
 14248 ;;Total ram usage:        2 bytes
 14249 ;; Hardware stack levels used:    1
 14250 ;; Hardware stack levels required when called:    4
 14251 ;; This function calls:
 14252 ;;		_i2c_reset
 14253 ;;		_i2c_wait_int
 14254 ;; This function is called by:
 14255 ;;		_i2c_transfer_native
 14256 ;; This function uses a non-reentrant model
 14257 ;;
 14258                           
 14259                           	psect	text52
 14260  00640C                     __ptext52:
 14261                           	opt callstack 0
 14262  00640C                     _i2c_stop:
 14263                           	opt callstack 21
 14264  00640C                     
 14265                           ;src/driver/i2c_native.c: 134: static void i2c_stop(i2c_data_native *ctx);src/driver/i2c
      +                          _native.c: 135: {;src/driver/i2c_native.c: 136:     PIR1bits.SSPIF = 0;
 14266  00640C  969E               	bcf	158,3,c	;volatile
 14267                           
 14268                           ;src/driver/i2c_native.c: 138:  SSPCON2bits.PEN = 1;
 14269  00640E  84C5               	bsf	197,2,c	;volatile
 14270  006410                     
 14271                           ;src/driver/i2c_native.c: 141:  if(i2c_wait_int(10000)) {
 14272  006410  0E10               	movlw	16
 14273  006412  6E0D               	movwf	i2c_wait_int@timeout^0,c
 14274  006414  0E27               	movlw	39
 14275  006416  6E0E               	movwf	(i2c_wait_int@timeout+1)^0,c
 14276  006418  0E00               	movlw	0
 14277  00641A  6E0F               	movwf	(i2c_wait_int@timeout+2)^0,c
 14278  00641C  0E00               	movlw	0
 14279  00641E  6E10               	movwf	(i2c_wait_int@timeout+3)^0,c
 14280  006420  EC9C  F02D         	call	_i2c_wait_int	;wreg free
 14281  006424  500D               	movf	?_i2c_wait_int^0,w,c
 14282  006426  100E               	iorwf	(?_i2c_wait_int+1)^0,w,c
 14283  006428  B4D8               	btfsc	status,2,c
 14284  00642A  EF19  F032         	goto	u9961
 14285  00642E  EF1B  F032         	goto	u9960
 14286  006432                     u9961:
 14287  006432  EF21  F032         	goto	l310
 14288  006436                     u9960:
 14289  006436                     
 14290                           ;src/driver/i2c_native.c: 143:   i2c_reset(ctx);
 14291  006436  C028  F01A         	movff	i2c_stop@ctx,i2c_reset@ctx
 14292  00643A  C029  F01B         	movff	i2c_stop@ctx+1,i2c_reset@ctx+1
 14293  00643E  ECF3  F028         	call	_i2c_reset	;wreg free
 14294  006442                     l310:
 14295  006442  0012               	return		;funcret
 14296  006444                     __end_of_i2c_stop:
 14297                           	opt callstack 0
 14298                           
 14299 ;; *************** function _i2c_reset *****************
 14300 ;; Defined at:
 14301 ;;		line 42 in file "src/driver/i2c_native.c"
 14302 ;; Parameters:    Size  Location     Type
 14303 ;;  ctx             2   25[COMRAM] PTR struct i2c_data_nati
 14304 ;;		 -> g_i2c_bus(8), NULL(0), 
 14305 ;; Auto vars:     Size  Location     Type
 14306 ;;  reg             4   35[COMRAM] unsigned long 
 14307 ;; Return value:  Size  Location     Type
 14308 ;;                  1    wreg      void 
 14309 ;; Registers used:
 14310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14311 ;; Tracked objects:
 14312 ;;		On entry : 0/0
 14313 ;;		On exit  : 0/0
 14314 ;;		Unchanged: 0/0
 14315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14316 ;;      Params:         2       0       0       0       0       0       0
 14317 ;;      Locals:         8       0       0       0       0       0       0
 14318 ;;      Temps:          4       0       0       0       0       0       0
 14319 ;;      Totals:        14       0       0       0       0       0       0
 14320 ;;Total ram usage:       14 bytes
 14321 ;; Hardware stack levels used:    1
 14322 ;; Hardware stack levels required when called:    3
 14323 ;; This function calls:
 14324 ;;		___lldiv
 14325 ;; This function is called by:
 14326 ;;		_i2c_native_init
 14327 ;;		_i2c_stop
 14328 ;;		_i2c_transfer_native
 14329 ;; This function uses a non-reentrant model
 14330 ;;
 14331                           
 14332                           	psect	text53
 14333  0051E6                     __ptext53:
 14334                           	opt callstack 0
 14335  0051E6                     _i2c_reset:
 14336                           	opt callstack 21
 14337  0051E6                     
 14338                           ;src/driver/i2c_native.c: 42: static void i2c_reset(i2c_data_native *ctx);src/driver/i2c
      +                          _native.c: 43: {;src/driver/i2c_native.c: 44:     u32 reg;;src/driver/i2c_native.c: 46: 
      +                              SSPCON1bits.SSPEN = 0;
 14339  0051E6  9AC6               	bcf	198,5,c	;volatile
 14340  0051E8                     
 14341                           ;src/driver/i2c_native.c: 47:     SSPCON1bits.SSPM = 0x08;
 14342  0051E8  50C6               	movf	198,w,c	;volatile
 14343  0051EA  0BF0               	andlw	-16
 14344  0051EC  0908               	iorlw	8
 14345  0051EE  6EC6               	movwf	198,c	;volatile
 14346  0051F0                     
 14347                           ;src/driver/i2c_native.c: 49:     SSPSTATbits.SMP = 1;
 14348  0051F0  8EC7               	bsf	199,7,c	;volatile
 14349  0051F2                     
 14350                           ;src/driver/i2c_native.c: 50:     SSPSTATbits.CKE = 0;
 14351  0051F2  9CC7               	bcf	199,6,c	;volatile
 14352  0051F4                     
 14353                           ;src/driver/i2c_native.c: 53:     reg = (8000000 / (4*ctx->baud)) - 1;
 14354  0051F4  0E00               	movlw	0
 14355  0051F6  6E0D               	movwf	___lldiv@dividend^0,c
 14356  0051F8  0E12               	movlw	18
 14357  0051FA  6E0E               	movwf	(___lldiv@dividend+1)^0,c
 14358  0051FC  0E7A               	movlw	122
 14359  0051FE  6E0F               	movwf	(___lldiv@dividend+2)^0,c
 14360  005200  0E00               	movlw	0
 14361  005202  6E10               	movwf	(___lldiv@dividend+3)^0,c
 14362  005204  EE20 F004          	lfsr	2,4
 14363  005208  501A               	movf	i2c_reset@ctx^0,w,c
 14364  00520A  26D9               	addwf	fsr2l,f,c
 14365  00520C  501B               	movf	(i2c_reset@ctx+1)^0,w,c
 14366  00520E  22DA               	addwfc	fsr2h,f,c
 14367  005210  CFDE F01C          	movff	postinc2,??_i2c_reset
 14368  005214  CFDE F01D          	movff	postinc2,??_i2c_reset+1
 14369  005218  CFDE F01E          	movff	postinc2,??_i2c_reset+2
 14370  00521C  CFDE F01F          	movff	postinc2,??_i2c_reset+3
 14371  005220  0E02               	movlw	2
 14372  005222                     u9845:
 14373  005222  90D8               	bcf	status,0,c
 14374  005224  361C               	rlcf	??_i2c_reset^0,f,c
 14375  005226  361D               	rlcf	(??_i2c_reset+1)^0,f,c
 14376  005228  361E               	rlcf	(??_i2c_reset+2)^0,f,c
 14377  00522A  361F               	rlcf	(??_i2c_reset+3)^0,f,c
 14378  00522C  2EE8               	decfsz	wreg,f,c
 14379  00522E  EF11  F029         	goto	u9845
 14380  005232  C01C  F011         	movff	??_i2c_reset,___lldiv@divisor
 14381  005236  C01D  F012         	movff	??_i2c_reset+1,___lldiv@divisor+1
 14382  00523A  C01E  F013         	movff	??_i2c_reset+2,___lldiv@divisor+2
 14383  00523E  C01F  F014         	movff	??_i2c_reset+3,___lldiv@divisor+3
 14384  005242  ECAF  F02A         	call	___lldiv	;wreg free
 14385  005246  0EFF               	movlw	255
 14386  005248  240D               	addwf	?___lldiv^0,w,c
 14387  00524A  6E24               	movwf	i2c_reset@reg^0,c
 14388  00524C  0EFF               	movlw	255
 14389  00524E  200E               	addwfc	(?___lldiv+1)^0,w,c
 14390  005250  6E25               	movwf	(i2c_reset@reg+1)^0,c
 14391  005252  0EFF               	movlw	255
 14392  005254  200F               	addwfc	(?___lldiv+2)^0,w,c
 14393  005256  6E26               	movwf	(i2c_reset@reg+2)^0,c
 14394  005258  0EFF               	movlw	255
 14395  00525A  2010               	addwfc	(?___lldiv+3)^0,w,c
 14396  00525C  6E27               	movwf	(i2c_reset@reg+3)^0,c
 14397  00525E                     
 14398                           ;src/driver/i2c_native.c: 54:     SSPADD = (reg<127)?reg:127;
 14399  00525E  5027               	movf	(i2c_reset@reg+3)^0,w,c
 14400  005260  1026               	iorwf	(i2c_reset@reg+2)^0,w,c
 14401  005262  1025               	iorwf	(i2c_reset@reg+1)^0,w,c
 14402  005264  E109               	bnz	u9850
 14403  005266  0E7F               	movlw	127
 14404  005268  5C24               	subwf	i2c_reset@reg^0,w,c
 14405  00526A  A0D8               	btfss	status,0,c
 14406  00526C  EF3A  F029         	goto	u9851
 14407  005270  EF3C  F029         	goto	u9850
 14408  005274                     u9851:
 14409  005274  EF46  F029         	goto	l275
 14410  005278                     u9850:
 14411  005278  0E7F               	movlw	127
 14412  00527A  6E20               	movwf	_i2c_reset$1596^0,c
 14413  00527C  0E00               	movlw	0
 14414  00527E  6E21               	movwf	(_i2c_reset$1596+1)^0,c
 14415  005280  0E00               	movlw	0
 14416  005282  6E22               	movwf	(_i2c_reset$1596+2)^0,c
 14417  005284  0E00               	movlw	0
 14418  005286  6E23               	movwf	(_i2c_reset$1596+3)^0,c
 14419  005288  EF4E  F029         	goto	l277
 14420  00528C                     l275:
 14421  00528C  C024  F020         	movff	i2c_reset@reg,_i2c_reset$1596
 14422  005290  C025  F021         	movff	i2c_reset@reg+1,_i2c_reset$1596+1
 14423  005294  C026  F022         	movff	i2c_reset@reg+2,_i2c_reset$1596+2
 14424  005298  C027  F023         	movff	i2c_reset@reg+3,_i2c_reset$1596+3
 14425  00529C                     l277:
 14426  00529C  C020  FFC8         	movff	_i2c_reset$1596,4040	;volatile
 14427                           
 14428                           ;src/driver/i2c_native.c: 56:     SSPCON1bits.SSPEN = 1;
 14429  0052A0  8AC6               	bsf	198,5,c	;volatile
 14430  0052A2  0012               	return		;funcret
 14431  0052A4                     __end_of_i2c_reset:
 14432                           	opt callstack 0
 14433                           
 14434 ;; *************** function ___lldiv *****************
 14435 ;; Defined at:
 14436 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__lldiv.c"
 14437 ;; Parameters:    Size  Location     Type
 14438 ;;  dividend        4   12[COMRAM] unsigned long 
 14439 ;;  divisor         4   16[COMRAM] unsigned long 
 14440 ;; Auto vars:     Size  Location     Type
 14441 ;;  quotient        4   20[COMRAM] unsigned long 
 14442 ;;  counter         1   24[COMRAM] unsigned char 
 14443 ;; Return value:  Size  Location     Type
 14444 ;;                  4   12[COMRAM] unsigned long 
 14445 ;; Registers used:
 14446 ;;		wreg, status,2, status,0
 14447 ;; Tracked objects:
 14448 ;;		On entry : 0/0
 14449 ;;		On exit  : 0/0
 14450 ;;		Unchanged: 0/0
 14451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14452 ;;      Params:         8       0       0       0       0       0       0
 14453 ;;      Locals:         5       0       0       0       0       0       0
 14454 ;;      Temps:          0       0       0       0       0       0       0
 14455 ;;      Totals:        13       0       0       0       0       0       0
 14456 ;;Total ram usage:       13 bytes
 14457 ;; Hardware stack levels used:    1
 14458 ;; Hardware stack levels required when called:    2
 14459 ;; This function calls:
 14460 ;;		Nothing
 14461 ;; This function is called by:
 14462 ;;		_adf4351_calc_counters
 14463 ;;		_adf4351_calc_rcnt_block
 14464 ;;		_i2c_reset
 14465 ;;		_usart_init
 14466 ;; This function uses a non-reentrant model
 14467 ;;
 14468                           
 14469                           	psect	text54
 14470  00555E                     __ptext54:
 14471                           	opt callstack 0
 14472  00555E                     ___lldiv:
 14473                           	opt callstack 27
 14474  00555E  0E00               	movlw	0
 14475  005560  6E15               	movwf	___lldiv@quotient^0,c
 14476  005562  0E00               	movlw	0
 14477  005564  6E16               	movwf	(___lldiv@quotient+1)^0,c
 14478  005566  0E00               	movlw	0
 14479  005568  6E17               	movwf	(___lldiv@quotient+2)^0,c
 14480  00556A  0E00               	movlw	0
 14481  00556C  6E18               	movwf	(___lldiv@quotient+3)^0,c
 14482  00556E  5011               	movf	___lldiv@divisor^0,w,c
 14483  005570  1012               	iorwf	(___lldiv@divisor+1)^0,w,c
 14484  005572  1013               	iorwf	(___lldiv@divisor+2)^0,w,c
 14485  005574  1014               	iorwf	(___lldiv@divisor+3)^0,w,c
 14486  005576  B4D8               	btfsc	status,2,c
 14487  005578  EFC0  F02A         	goto	u9811
 14488  00557C  EFC2  F02A         	goto	u9810
 14489  005580                     u9811:
 14490  005580  EFF8  F02A         	goto	l1324
 14491  005584                     u9810:
 14492  005584  0E01               	movlw	1
 14493  005586  6E19               	movwf	___lldiv@counter^0,c
 14494  005588  EFCC  F02A         	goto	l8468
 14495  00558C                     l8466:
 14496  00558C  90D8               	bcf	status,0,c
 14497  00558E  3611               	rlcf	___lldiv@divisor^0,f,c
 14498  005590  3612               	rlcf	(___lldiv@divisor+1)^0,f,c
 14499  005592  3613               	rlcf	(___lldiv@divisor+2)^0,f,c
 14500  005594  3614               	rlcf	(___lldiv@divisor+3)^0,f,c
 14501  005596  2A19               	incf	___lldiv@counter^0,f,c
 14502  005598                     l8468:
 14503  005598  AE14               	btfss	(___lldiv@divisor+3)^0,7,c
 14504  00559A  EFD1  F02A         	goto	u9821
 14505  00559E  EFD3  F02A         	goto	u9820
 14506  0055A2                     u9821:
 14507  0055A2  EFC6  F02A         	goto	l8466
 14508  0055A6                     u9820:
 14509  0055A6                     l8470:
 14510  0055A6  90D8               	bcf	status,0,c
 14511  0055A8  3615               	rlcf	___lldiv@quotient^0,f,c
 14512  0055AA  3616               	rlcf	(___lldiv@quotient+1)^0,f,c
 14513  0055AC  3617               	rlcf	(___lldiv@quotient+2)^0,f,c
 14514  0055AE  3618               	rlcf	(___lldiv@quotient+3)^0,f,c
 14515  0055B0  5011               	movf	___lldiv@divisor^0,w,c
 14516  0055B2  5C0D               	subwf	___lldiv@dividend^0,w,c
 14517  0055B4  5012               	movf	(___lldiv@divisor+1)^0,w,c
 14518  0055B6  580E               	subwfb	(___lldiv@dividend+1)^0,w,c
 14519  0055B8  5013               	movf	(___lldiv@divisor+2)^0,w,c
 14520  0055BA  580F               	subwfb	(___lldiv@dividend+2)^0,w,c
 14521  0055BC  5014               	movf	(___lldiv@divisor+3)^0,w,c
 14522  0055BE  5810               	subwfb	(___lldiv@dividend+3)^0,w,c
 14523  0055C0  A0D8               	btfss	status,0,c
 14524  0055C2  EFE5  F02A         	goto	u9831
 14525  0055C6  EFE7  F02A         	goto	u9830
 14526  0055CA                     u9831:
 14527  0055CA  EFF0  F02A         	goto	l8478
 14528  0055CE                     u9830:
 14529  0055CE  5011               	movf	___lldiv@divisor^0,w,c
 14530  0055D0  5E0D               	subwf	___lldiv@dividend^0,f,c
 14531  0055D2  5012               	movf	(___lldiv@divisor+1)^0,w,c
 14532  0055D4  5A0E               	subwfb	(___lldiv@dividend+1)^0,f,c
 14533  0055D6  5013               	movf	(___lldiv@divisor+2)^0,w,c
 14534  0055D8  5A0F               	subwfb	(___lldiv@dividend+2)^0,f,c
 14535  0055DA  5014               	movf	(___lldiv@divisor+3)^0,w,c
 14536  0055DC  5A10               	subwfb	(___lldiv@dividend+3)^0,f,c
 14537  0055DE  8015               	bsf	___lldiv@quotient^0,0,c
 14538  0055E0                     l8478:
 14539  0055E0  90D8               	bcf	status,0,c
 14540  0055E2  3214               	rrcf	(___lldiv@divisor+3)^0,f,c
 14541  0055E4  3213               	rrcf	(___lldiv@divisor+2)^0,f,c
 14542  0055E6  3212               	rrcf	(___lldiv@divisor+1)^0,f,c
 14543  0055E8  3211               	rrcf	___lldiv@divisor^0,f,c
 14544  0055EA  2E19               	decfsz	___lldiv@counter^0,f,c
 14545  0055EC  EFD3  F02A         	goto	l8470
 14546  0055F0                     l1324:
 14547  0055F0  C015  F00D         	movff	___lldiv@quotient,?___lldiv
 14548  0055F4  C016  F00E         	movff	___lldiv@quotient+1,?___lldiv+1
 14549  0055F8  C017  F00F         	movff	___lldiv@quotient+2,?___lldiv+2
 14550  0055FC  C018  F010         	movff	___lldiv@quotient+3,?___lldiv+3
 14551  005600  0012               	return		;funcret
 14552  005602                     __end_of___lldiv:
 14553                           	opt callstack 0
 14554                           
 14555 ;; *************** function _i2c_start *****************
 14556 ;; Defined at:
 14557 ;;		line 102 in file "src/driver/i2c_native.c"
 14558 ;; Parameters:    Size  Location     Type
 14559 ;;  addr            1    wreg     unsigned char 
 14560 ;;  read            2   16[COMRAM] int 
 14561 ;;  rep             2   18[COMRAM] int 
 14562 ;;  wantack         2   20[COMRAM] int 
 14563 ;; Auto vars:     Size  Location     Type
 14564 ;;  addr            1   22[COMRAM] unsigned char 
 14565 ;;  res             2   23[COMRAM] int 
 14566 ;; Return value:  Size  Location     Type
 14567 ;;                  2   16[COMRAM] int 
 14568 ;; Registers used:
 14569 ;;		wreg, status,2, status,0, cstack
 14570 ;; Tracked objects:
 14571 ;;		On entry : 0/0
 14572 ;;		On exit  : 0/0
 14573 ;;		Unchanged: 0/0
 14574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14575 ;;      Params:         6       0       0       0       0       0       0
 14576 ;;      Locals:         3       0       0       0       0       0       0
 14577 ;;      Temps:          0       0       0       0       0       0       0
 14578 ;;      Totals:         9       0       0       0       0       0       0
 14579 ;;Total ram usage:        9 bytes
 14580 ;; Hardware stack levels used:    1
 14581 ;; Hardware stack levels required when called:    3
 14582 ;; This function calls:
 14583 ;;		_i2c_wait_int
 14584 ;; This function is called by:
 14585 ;;		_i2c_transfer_native
 14586 ;; This function uses a non-reentrant model
 14587 ;;
 14588                           
 14589                           	psect	text55
 14590  0048D0                     __ptext55:
 14591                           	opt callstack 0
 14592  0048D0                     _i2c_start:
 14593                           	opt callstack 22
 14594                           
 14595                           ;incstack = 0
 14596                           ;i2c_start@addr stored from wreg
 14597  0048D0  6E17               	movwf	i2c_start@addr^0,c
 14598  0048D2                     
 14599                           ;src/driver/i2c_native.c: 102: static int i2c_start(u8 addr, BOOL read, BOOL rep, BOOL w
      +                          antack);src/driver/i2c_native.c: 103: {;src/driver/i2c_native.c: 104:     int res;;src/d
      +                          river/i2c_native.c: 106:     PIR1bits.SSPIF = 0;
 14600  0048D2  969E               	bcf	158,3,c	;volatile
 14601  0048D4                     
 14602                           ;src/driver/i2c_native.c: 108:  if(rep) SSPCON2bits.RSEN = 1;
 14603  0048D4  5013               	movf	i2c_start@rep^0,w,c
 14604  0048D6  1014               	iorwf	(i2c_start@rep+1)^0,w,c
 14605  0048D8  B4D8               	btfsc	status,2,c
 14606  0048DA  EF71  F024         	goto	u9901
 14607  0048DE  EF73  F024         	goto	u9900
 14608  0048E2                     u9901:
 14609  0048E2  EF76  F024         	goto	l299
 14610  0048E6                     u9900:
 14611  0048E6  82C5               	bsf	197,1,c	;volatile
 14612  0048E8  EF77  F024         	goto	l8528
 14613  0048EC                     l299:
 14614  0048EC  80C5               	bsf	197,0,c	;volatile
 14615  0048EE                     l8528:
 14616                           
 14617                           ;src/driver/i2c_native.c: 112:     res = i2c_wait_int(2500);
 14618  0048EE  0EC4               	movlw	196
 14619  0048F0  6E0D               	movwf	i2c_wait_int@timeout^0,c
 14620  0048F2  0E09               	movlw	9
 14621  0048F4  6E0E               	movwf	(i2c_wait_int@timeout+1)^0,c
 14622  0048F6  0E00               	movlw	0
 14623  0048F8  6E0F               	movwf	(i2c_wait_int@timeout+2)^0,c
 14624  0048FA  0E00               	movlw	0
 14625  0048FC  6E10               	movwf	(i2c_wait_int@timeout+3)^0,c
 14626  0048FE  EC9C  F02D         	call	_i2c_wait_int	;wreg free
 14627  004902  C00D  F018         	movff	?_i2c_wait_int,i2c_start@res
 14628  004906  C00E  F019         	movff	?_i2c_wait_int+1,i2c_start@res+1
 14629  00490A                     
 14630                           ;src/driver/i2c_native.c: 113:  if(res) return res;
 14631  00490A  5018               	movf	i2c_start@res^0,w,c
 14632  00490C  1019               	iorwf	(i2c_start@res+1)^0,w,c
 14633  00490E  B4D8               	btfsc	status,2,c
 14634  004910  EF8C  F024         	goto	u9911
 14635  004914  EF8E  F024         	goto	u9910
 14636  004918                     u9911:
 14637  004918  EF94  F024         	goto	l301
 14638  00491C                     u9910:
 14639  00491C                     l8532:
 14640  00491C  C018  F011         	movff	i2c_start@res,?_i2c_start
 14641  004920  C019  F012         	movff	i2c_start@res+1,?_i2c_start+1
 14642  004924  EFD9  F024         	goto	l302
 14643  004928                     l301:
 14644                           
 14645                           ;src/driver/i2c_native.c: 115:     PIR1bits.SSPIF = 0;
 14646  004928  969E               	bcf	158,3,c	;volatile
 14647  00492A                     
 14648                           ;src/driver/i2c_native.c: 117:  if(read) SSPBUF = (addr<<1) | 1;
 14649  00492A  5011               	movf	i2c_start@read^0,w,c
 14650  00492C  1012               	iorwf	(i2c_start@read+1)^0,w,c
 14651  00492E  B4D8               	btfsc	status,2,c
 14652  004930  EF9C  F024         	goto	u9921
 14653  004934  EF9E  F024         	goto	u9920
 14654  004938                     u9921:
 14655  004938  EFA3  F024         	goto	l8538
 14656  00493C                     u9920:
 14657  00493C  80D8               	bsf	status,0,c
 14658  00493E  3417               	rlcf	i2c_start@addr^0,w,c
 14659  004940  6EC9               	movwf	201,c	;volatile
 14660  004942  EFA6  F024         	goto	l8540
 14661  004946                     l8538:
 14662  004946  5017               	movf	i2c_start@addr^0,w,c
 14663  004948  2417               	addwf	i2c_start@addr^0,w,c
 14664  00494A  6EC9               	movwf	201,c	;volatile
 14665  00494C                     l8540:
 14666                           
 14667                           ;src/driver/i2c_native.c: 121:     res = i2c_wait_int(2500);
 14668  00494C  0EC4               	movlw	196
 14669  00494E  6E0D               	movwf	i2c_wait_int@timeout^0,c
 14670  004950  0E09               	movlw	9
 14671  004952  6E0E               	movwf	(i2c_wait_int@timeout+1)^0,c
 14672  004954  0E00               	movlw	0
 14673  004956  6E0F               	movwf	(i2c_wait_int@timeout+2)^0,c
 14674  004958  0E00               	movlw	0
 14675  00495A  6E10               	movwf	(i2c_wait_int@timeout+3)^0,c
 14676  00495C  EC9C  F02D         	call	_i2c_wait_int	;wreg free
 14677  004960  C00D  F018         	movff	?_i2c_wait_int,i2c_start@res
 14678  004964  C00E  F019         	movff	?_i2c_wait_int+1,i2c_start@res+1
 14679  004968                     
 14680                           ;src/driver/i2c_native.c: 122:  if(res) return res;
 14681  004968  5018               	movf	i2c_start@res^0,w,c
 14682  00496A  1019               	iorwf	(i2c_start@res+1)^0,w,c
 14683  00496C  B4D8               	btfsc	status,2,c
 14684  00496E  EFBB  F024         	goto	u9931
 14685  004972  EFBD  F024         	goto	u9930
 14686  004976                     u9931:
 14687  004976  EFBF  F024         	goto	l8546
 14688  00497A                     u9930:
 14689  00497A  EF8E  F024         	goto	l8532
 14690  00497E                     l8546:
 14691                           
 14692                           ;src/driver/i2c_native.c: 125:  if(wantack && (SSPCON2bits.ACKSTAT != 0)) {
 14693  00497E  5015               	movf	i2c_start@wantack^0,w,c
 14694  004980  1016               	iorwf	(i2c_start@wantack+1)^0,w,c
 14695  004982  B4D8               	btfsc	status,2,c
 14696  004984  EFC6  F024         	goto	u9941
 14697  004988  EFC8  F024         	goto	u9940
 14698  00498C                     u9941:
 14699  00498C  EFD5  F024         	goto	l8554
 14700  004990                     u9940:
 14701  004990  ACC5               	btfss	197,6,c	;volatile
 14702  004992  EFCD  F024         	goto	u9951
 14703  004996  EFCF  F024         	goto	u9950
 14704  00499A                     u9951:
 14705  00499A  EFD5  F024         	goto	l8554
 14706  00499E                     u9950:
 14707  00499E                     
 14708                           ;src/driver/i2c_native.c: 126:   return -7;
 14709  00499E  0EFF               	movlw	255
 14710  0049A0  6E12               	movwf	(?_i2c_start+1)^0,c
 14711  0049A2  0EF9               	movlw	249
 14712  0049A4  6E11               	movwf	?_i2c_start^0,c
 14713  0049A6  EFD9  F024         	goto	l302
 14714  0049AA                     l8554:
 14715                           
 14716                           ;src/driver/i2c_native.c: 130:  return 0;
 14717  0049AA  0E00               	movlw	0
 14718  0049AC  6E12               	movwf	(?_i2c_start+1)^0,c
 14719  0049AE  0E00               	movlw	0
 14720  0049B0  6E11               	movwf	?_i2c_start^0,c
 14721  0049B2                     l302:
 14722  0049B2  0012               	return		;funcret
 14723  0049B4                     __end_of_i2c_start:
 14724                           	opt callstack 0
 14725                           
 14726 ;; *************** function _i2c_read *****************
 14727 ;; Defined at:
 14728 ;;		line 148 in file "src/driver/i2c_native.c"
 14729 ;; Parameters:    Size  Location     Type
 14730 ;;  data            2   35[BANK0 ] PTR unsigned char 
 14731 ;;		 -> print_char@map(8), lcd_clear_screen@buf(128), ssd1306_setpos@data(3), ssd1306_databyte@data(1), 
 14732 ;;		 -> ssd1306_init_commands(27), read_reg@val(1), LNB_error(1), lnb_do_configure@value(1), 
 14733 ;;		 -> smbus16_write_regset@tmp(4), smbus16_read_short@reg(2), smbus16_write_short@tmp(3), smbus16_read_data_raw@ger(2)
      +, 
 14734 ;;		 -> smbus16_read_data@ger(2), smbus16_read_byte@reg(2), smbus16_write_byte@tmp(3), smbus16_write_data_raw@ger(2), 
 14735 ;;		 -> smbus16_write_data@ger(2), smbus8_write_regset@tmp(2), smbus8_read_short@reg(1), smbus8_read_data@reg(1), 
 14736 ;;		 -> smbus8_read_byte@reg(1), smbus8_write_short@tmp(4), smbus8_write_data@reg(1), smbus8_write_byte@tmp(2), 
 14737 ;;		 -> i2c_write_byte@data(1), NULL(0), 
 14738 ;;  ack             2   37[BANK0 ] int 
 14739 ;; Auto vars:     Size  Location     Type
 14740 ;;  res             2   40[BANK0 ] int 
 14741 ;; Return value:  Size  Location     Type
 14742 ;;                  2   35[BANK0 ] int 
 14743 ;; Registers used:
 14744 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14745 ;; Tracked objects:
 14746 ;;		On entry : 0/0
 14747 ;;		On exit  : 0/0
 14748 ;;		Unchanged: 0/0
 14749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14750 ;;      Params:         0       4       0       0       0       0       0
 14751 ;;      Locals:         0       2       0       0       0       0       0
 14752 ;;      Temps:          0       1       0       0       0       0       0
 14753 ;;      Totals:         0       7       0       0       0       0       0
 14754 ;;Total ram usage:        7 bytes
 14755 ;; Hardware stack levels used:    1
 14756 ;; Hardware stack levels required when called:   10
 14757 ;; This function calls:
 14758 ;;		_i2c_wait_int
 14759 ;;		_printf
 14760 ;; This function is called by:
 14761 ;;		_i2c_transfer_native
 14762 ;; This function uses a non-reentrant model
 14763 ;;
 14764                           
 14765                           	psect	text56
 14766  0049B4                     __ptext56:
 14767                           	opt callstack 0
 14768  0049B4                     _i2c_read:
 14769                           	opt callstack 15
 14770  0049B4                     
 14771                           ;src/driver/i2c_native.c: 148: static int i2c_read(u8 *data, BOOL ack);src/driver/i2c_na
      +                          tive.c: 149: {;src/driver/i2c_native.c: 150:  int res;;src/driver/i2c_native.c: 152:    
      +                           PIR1bits.SSPIF = 0;
 14772  0049B4  969E               	bcf	158,3,c	;volatile
 14773                           
 14774                           ;src/driver/i2c_native.c: 155:  SSPCON2bits.RCEN = 1;
 14775  0049B6  86C5               	bsf	197,3,c	;volatile
 14776  0049B8                     
 14777                           ;src/driver/i2c_native.c: 158:  res = i2c_wait_int(2500);
 14778  0049B8  0EC4               	movlw	196
 14779  0049BA  6E0D               	movwf	i2c_wait_int@timeout^0,c
 14780  0049BC  0E09               	movlw	9
 14781  0049BE  6E0E               	movwf	(i2c_wait_int@timeout+1)^0,c
 14782  0049C0  0E00               	movlw	0
 14783  0049C2  6E0F               	movwf	(i2c_wait_int@timeout+2)^0,c
 14784  0049C4  0E00               	movlw	0
 14785  0049C6  6E10               	movwf	(i2c_wait_int@timeout+3)^0,c
 14786  0049C8  EC9C  F02D         	call	_i2c_wait_int	;wreg free
 14787  0049CC  C00D  F0A8         	movff	?_i2c_wait_int,i2c_read@res
 14788  0049D0  C00E  F0A9         	movff	?_i2c_wait_int+1,i2c_read@res+1
 14789  0049D4                     
 14790                           ;src/driver/i2c_native.c: 159:  if(res) return res;
 14791  0049D4  0100               	movlb	0	; () banked
 14792  0049D6  51A8               	movf	i2c_read@res& (0+255),w,b
 14793  0049D8  11A9               	iorwf	(i2c_read@res+1)& (0+255),w,b
 14794  0049DA  B4D8               	btfsc	status,2,c
 14795  0049DC  EFF2  F024         	goto	u9971
 14796  0049E0  EFF4  F024         	goto	u9970
 14797  0049E4                     u9971:
 14798  0049E4  EFFA  F024         	goto	l313
 14799  0049E8                     u9970:
 14800  0049E8                     l8570:
 14801                           
 14802                           ; BSR set to: 0
 14803  0049E8  C0A8  F0A3         	movff	i2c_read@res,?_i2c_read
 14804  0049EC  C0A9  F0A4         	movff	i2c_read@res+1,?_i2c_read+1
 14805  0049F0  EF49  F025         	goto	l314
 14806  0049F4                     l313:
 14807                           
 14808                           ; BSR set to: 0
 14809                           ;src/driver/i2c_native.c: 161:     if(SSPCON2bits.RCEN != 0 || SSPSTATbits.BF == 0) {
 14810  0049F4  B6C5               	btfsc	197,3,c	;volatile
 14811  0049F6  EFFF  F024         	goto	u9981
 14812  0049FA  EF01  F025         	goto	u9980
 14813  0049FE                     u9981:
 14814  0049FE  EF08  F025         	goto	l8574
 14815  004A02                     u9980:
 14816  004A02                     
 14817                           ; BSR set to: 0
 14818  004A02  B0C7               	btfsc	199,0,c	;volatile
 14819  004A04  EF06  F025         	goto	u9991
 14820  004A08  EF08  F025         	goto	u9990
 14821  004A0C                     u9991:
 14822  004A0C  EF0E  F025         	goto	l8576
 14823  004A10                     u9990:
 14824  004A10                     l8574:
 14825                           
 14826                           ; BSR set to: 0
 14827                           ;src/driver/i2c_native.c: 162:         printf("bla\n");
 14828  004A10  0E9B               	movlw	low STR_9
 14829  004A12  6F95               	movwf	printf@fmt& (0+255),b
 14830  004A14  0E7D               	movlw	high STR_9
 14831  004A16  6F96               	movwf	(printf@fmt+1)& (0+255),b
 14832  004A18  ECA7  F032         	call	_printf	;wreg free
 14833  004A1C                     l8576:
 14834                           
 14835                           ;src/driver/i2c_native.c: 165:  *data = SSPBUF;
 14836  004A1C  C0A3  FFD9         	movff	i2c_read@data,fsr2l
 14837  004A20  C0A4  FFDA         	movff	i2c_read@data+1,fsr2h
 14838  004A24  CFC9 FFDF          	movff	4041,indf2	;volatile
 14839  004A28                     
 14840                           ;src/driver/i2c_native.c: 167:     PIR1bits.SSPIF = 0;
 14841  004A28  969E               	bcf	158,3,c	;volatile
 14842  004A2A                     
 14843                           ;src/driver/i2c_native.c: 169:     SSPCON2bits.ACKDT = (ack)?0:1;
 14844  004A2A  0100               	movlb	0	; () banked
 14845  004A2C  51A5               	movf	i2c_read@ack& (0+255),w,b
 14846  004A2E  11A6               	iorwf	(i2c_read@ack+1)& (0+255),w,b
 14847  004A30  B4D8               	btfsc	status,2,c
 14848  004A32  EF1D  F025         	goto	u10001
 14849  004A36  EF21  F025         	goto	u10000
 14850  004A3A                     u10001:
 14851  004A3A  6BA7               	clrf	??_i2c_read& (0+255),b
 14852  004A3C  2BA7               	incf	??_i2c_read& (0+255),f,b
 14853  004A3E  EF23  F025         	goto	u10018
 14854  004A42                     u10000:
 14855  004A42  0100               	movlb	0	; () banked
 14856  004A44  6BA7               	clrf	??_i2c_read& (0+255),b
 14857  004A46                     u10018:
 14858  004A46  3BA7               	swapf	??_i2c_read& (0+255),f,b
 14859  004A48  47A7               	rlncf	??_i2c_read& (0+255),f,b
 14860  004A4A  50C5               	movf	197,w,c	;volatile
 14861  004A4C  19A7               	xorwf	??_i2c_read& (0+255),w,b
 14862  004A4E  0BDF               	andlw	-33
 14863  004A50  19A7               	xorwf	??_i2c_read& (0+255),w,b
 14864  004A52  6EC5               	movwf	197,c	;volatile
 14865  004A54                     
 14866                           ; BSR set to: 0
 14867                           ;src/driver/i2c_native.c: 170:     SSPCON2bits.ACKEN = 1;
 14868  004A54  88C5               	bsf	197,4,c	;volatile
 14869  004A56                     
 14870                           ; BSR set to: 0
 14871                           ;src/driver/i2c_native.c: 171:     res = i2c_wait_int(2500);
 14872  004A56  0EC4               	movlw	196
 14873  004A58  6E0D               	movwf	i2c_wait_int@timeout^0,c
 14874  004A5A  0E09               	movlw	9
 14875  004A5C  6E0E               	movwf	(i2c_wait_int@timeout+1)^0,c
 14876  004A5E  0E00               	movlw	0
 14877  004A60  6E0F               	movwf	(i2c_wait_int@timeout+2)^0,c
 14878  004A62  0E00               	movlw	0
 14879  004A64  6E10               	movwf	(i2c_wait_int@timeout+3)^0,c
 14880  004A66  EC9C  F02D         	call	_i2c_wait_int	;wreg free
 14881  004A6A  C00D  F0A8         	movff	?_i2c_wait_int,i2c_read@res
 14882  004A6E  C00E  F0A9         	movff	?_i2c_wait_int+1,i2c_read@res+1
 14883  004A72                     
 14884                           ;src/driver/i2c_native.c: 172:     if(res) return res;
 14885  004A72  0100               	movlb	0	; () banked
 14886  004A74  51A8               	movf	i2c_read@res& (0+255),w,b
 14887  004A76  11A9               	iorwf	(i2c_read@res+1)& (0+255),w,b
 14888  004A78  B4D8               	btfsc	status,2,c
 14889  004A7A  EF41  F025         	goto	u10021
 14890  004A7E  EF43  F025         	goto	u10020
 14891  004A82                     u10021:
 14892  004A82  EF45  F025         	goto	l8590
 14893  004A86                     u10020:
 14894  004A86  EFF4  F024         	goto	l8570
 14895  004A8A                     l8590:
 14896                           
 14897                           ; BSR set to: 0
 14898                           ;src/driver/i2c_native.c: 174:     return 0;
 14899  004A8A  0E00               	movlw	0
 14900  004A8C  6FA4               	movwf	(?_i2c_read+1)& (0+255),b
 14901  004A8E  0E00               	movlw	0
 14902  004A90  6FA3               	movwf	?_i2c_read& (0+255),b
 14903  004A92                     l314:
 14904                           
 14905                           ; BSR set to: 0
 14906  004A92  0012               	return		;funcret
 14907  004A94                     __end_of_i2c_read:
 14908                           	opt callstack 0
 14909                           
 14910 ;; *************** function _i2c_wait_int *****************
 14911 ;; Defined at:
 14912 ;;		line 79 in file "src/driver/i2c_native.c"
 14913 ;; Parameters:    Size  Location     Type
 14914 ;;  timeout         4   12[COMRAM] unsigned long 
 14915 ;; Auto vars:     Size  Location     Type
 14916 ;;		None
 14917 ;; Return value:  Size  Location     Type
 14918 ;;                  2   12[COMRAM] int 
 14919 ;; Registers used:
 14920 ;;		wreg, status,2, status,0
 14921 ;; Tracked objects:
 14922 ;;		On entry : 0/0
 14923 ;;		On exit  : 0/0
 14924 ;;		Unchanged: 0/0
 14925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14926 ;;      Params:         4       0       0       0       0       0       0
 14927 ;;      Locals:         0       0       0       0       0       0       0
 14928 ;;      Temps:          0       0       0       0       0       0       0
 14929 ;;      Totals:         4       0       0       0       0       0       0
 14930 ;;Total ram usage:        4 bytes
 14931 ;; Hardware stack levels used:    1
 14932 ;; Hardware stack levels required when called:    2
 14933 ;; This function calls:
 14934 ;;		Nothing
 14935 ;; This function is called by:
 14936 ;;		_i2c_start
 14937 ;;		_i2c_stop
 14938 ;;		_i2c_read
 14939 ;;		_i2c_write
 14940 ;; This function uses a non-reentrant model
 14941 ;;
 14942                           
 14943                           	psect	text57
 14944  005B38                     __ptext57:
 14945                           	opt callstack 0
 14946  005B38                     _i2c_wait_int:
 14947                           	opt callstack 22
 14948  005B38                     
 14949                           ;src/driver/i2c_native.c: 79: static int i2c_wait_int(u32 timeout);src/driver/i2c_native
      +                          .c: 80: {;src/driver/i2c_native.c: 82:  while((PIR1bits.SSPIF == 0) && (SSPCON1bits.WCOL
      +                           == 0)) {
 14950  005B38  EFB5  F02D         	goto	l289
 14951  005B3C                     l290:
 14952                           
 14953                           ;src/driver/i2c_native.c: 83:   _delay((unsigned long)((1)*(8000000/4000000.0)));
 14954  005B3C  D000               	nop2		;2 cycle nop
 14955  005B3E                     
 14956                           ;src/driver/i2c_native.c: 84:   if(--timeout == 0) {
 14957  005B3E  060D               	decf	i2c_wait_int@timeout^0,f,c
 14958  005B40  0E00               	movlw	0
 14959  005B42  5A0E               	subwfb	(i2c_wait_int@timeout+1)^0,f,c
 14960  005B44  5A0F               	subwfb	(i2c_wait_int@timeout+2)^0,f,c
 14961  005B46  5A10               	subwfb	(i2c_wait_int@timeout+3)^0,f,c
 14962  005B48  500D               	movf	i2c_wait_int@timeout^0,w,c
 14963  005B4A  100E               	iorwf	(i2c_wait_int@timeout+1)^0,w,c
 14964  005B4C  100F               	iorwf	(i2c_wait_int@timeout+2)^0,w,c
 14965  005B4E  1010               	iorwf	(i2c_wait_int@timeout+3)^0,w,c
 14966  005B50  A4D8               	btfss	status,2,c
 14967  005B52  EFAD  F02D         	goto	u9861
 14968  005B56  EFAF  F02D         	goto	u9860
 14969  005B5A                     u9861:
 14970  005B5A  EFB5  F02D         	goto	l289
 14971  005B5E                     u9860:
 14972  005B5E                     
 14973                           ;src/driver/i2c_native.c: 86:    return -4;
 14974  005B5E  0EFF               	movlw	255
 14975  005B60  6E0E               	movwf	(?_i2c_wait_int+1)^0,c
 14976  005B62  0EFC               	movlw	252
 14977  005B64  6E0D               	movwf	?_i2c_wait_int^0,c
 14978  005B66  EFD5  F02D         	goto	l292
 14979  005B6A                     l289:
 14980                           
 14981                           ;src/driver/i2c_native.c: 82:  while((PIR1bits.SSPIF == 0) && (SSPCON1bits.WCOL == 0)) {
 14982  005B6A  B69E               	btfsc	158,3,c	;volatile
 14983  005B6C  EFBA  F02D         	goto	u9871
 14984  005B70  EFBC  F02D         	goto	u9870
 14985  005B74                     u9871:
 14986  005B74  EFC3  F02D         	goto	l295
 14987  005B78                     u9870:
 14988  005B78  AEC6               	btfss	198,7,c	;volatile
 14989  005B7A  EFC1  F02D         	goto	u9881
 14990  005B7E  EFC3  F02D         	goto	u9880
 14991  005B82                     u9881:
 14992  005B82  EF9E  F02D         	goto	l290
 14993  005B86                     u9880:
 14994  005B86                     l295:
 14995                           
 14996                           ;src/driver/i2c_native.c: 91:  if(SSPCON1bits.WCOL != 0) {
 14997  005B86  AEC6               	btfss	198,7,c	;volatile
 14998  005B88  EFC8  F02D         	goto	u9891
 14999  005B8C  EFCA  F02D         	goto	u9890
 15000  005B90                     u9891:
 15001  005B90  EFD1  F02D         	goto	l8518
 15002  005B94                     u9890:
 15003  005B94                     
 15004                           ;src/driver/i2c_native.c: 93:   SSPCON1bits.WCOL = 0;
 15005  005B94  9EC6               	bcf	198,7,c	;volatile
 15006  005B96                     
 15007                           ;src/driver/i2c_native.c: 94:   return -5;
 15008  005B96  0EFF               	movlw	255
 15009  005B98  6E0E               	movwf	(?_i2c_wait_int+1)^0,c
 15010  005B9A  0EFB               	movlw	251
 15011  005B9C  6E0D               	movwf	?_i2c_wait_int^0,c
 15012  005B9E  EFD5  F02D         	goto	l292
 15013  005BA2                     l8518:
 15014                           
 15015                           ;src/driver/i2c_native.c: 98:  return 0;
 15016  005BA2  0E00               	movlw	0
 15017  005BA4  6E0E               	movwf	(?_i2c_wait_int+1)^0,c
 15018  005BA6  0E00               	movlw	0
 15019  005BA8  6E0D               	movwf	?_i2c_wait_int^0,c
 15020  005BAA                     l292:
 15021  005BAA  0012               	return		;funcret
 15022  005BAC                     __end_of_i2c_wait_int:
 15023                           	opt callstack 0
 15024                           
 15025 ;; *************** function _check_ADF5341_status *****************
 15026 ;; Defined at:
 15027 ;;		line 79 in file "src/driver/adf4351.c"
 15028 ;; Parameters:    Size  Location     Type
 15029 ;;  ctx             2   35[BANK0 ] PTR struct adf4351_ctx
 15030 ;;		 -> g_adf4351(55), 
 15031 ;; Auto vars:     Size  Location     Type
 15032 ;;  stat            1   40[BANK0 ] unsigned char 
 15033 ;; Return value:  Size  Location     Type
 15034 ;;                  1    wreg      void 
 15035 ;; Registers used:
 15036 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15037 ;; Tracked objects:
 15038 ;;		On entry : 0/0
 15039 ;;		On exit  : 0/0
 15040 ;;		Unchanged: 0/0
 15041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15042 ;;      Params:         0       2       0       0       0       0       0
 15043 ;;      Locals:         0       1       0       0       0       0       0
 15044 ;;      Temps:          0       3       0       0       0       0       0
 15045 ;;      Totals:         0       6       0       0       0       0       0
 15046 ;;Total ram usage:        6 bytes
 15047 ;; Hardware stack levels used:    1
 15048 ;; Hardware stack levels required when called:   10
 15049 ;; This function calls:
 15050 ;;		_printf
 15051 ;; This function is called by:
 15052 ;;		_main
 15053 ;; This function uses a non-reentrant model
 15054 ;;
 15055                           
 15056                           	psect	text58
 15057  0046FE                     __ptext58:
 15058                           	opt callstack 0
 15059  0046FE                     _check_ADF5341_status:
 15060                           	opt callstack 20
 15061  0046FE                     
 15062                           ;src/driver/adf4351.c: 79: void check_ADF5341_status(adf4351_ctx* ctx);src/driver/adf435
      +                          1.c: 80: {;src/driver/adf4351.c: 83:  u8 stat = ((*((PIN_ADF_LOCK)->pPORT) & (PIN_ADF_LO
      +                          CK)->mask) != 0);
 15063  0046FE  0EF6               	movlw	low (_PIN_ADF_LOCK_DEF+4)
 15064  004700  6EF6               	movwf	tblptrl,c
 15065  004702  0E78               	movlw	high (_PIN_ADF_LOCK_DEF+4)
 15066  004704  6EF7               	movwf	tblptrh,c
 15067  004706                     	if	0	;tblptru may be non-zero
 15068  004706                     	endif
 15069  004706                     	if	0	;tblptru may be non-zero
 15070  004706                     	endif
 15071  004706  0008               	tblrd		*
 15072  004708  CFF5 F0A5          	movff	tablat,??_check_ADF5341_status
 15073  00470C  0EF2               	movlw	low _PIN_ADF_LOCK_DEF
 15074  00470E  6EF6               	movwf	tblptrl,c
 15075  004710                     	if	1	;There is more than 1 active tblptr byte
 15076  004710  0E78               	movlw	high _PIN_ADF_LOCK_DEF
 15077  004712  6EF7               	movwf	tblptrh,c
 15078  004714                     	endif
 15079  004714                     	if	0	;There are less than 3 active tblptr bytes
 15080  004714                     	endif
 15081  004714  0009               	tblrd		*+
 15082  004716  CFF5 F0A6          	movff	tablat,??_check_ADF5341_status+1
 15083  00471A  0009               	tblrd		*+
 15084  00471C  CFF5 F0A7          	movff	tablat,??_check_ADF5341_status+2
 15085  004720  C0A6  FFD9         	movff	??_check_ADF5341_status+1,fsr2l
 15086  004724  C0A7  FFDA         	movff	??_check_ADF5341_status+2,fsr2h
 15087  004728  50DF               	movf	indf2,w,c
 15088  00472A  0100               	movlb	0	; () banked
 15089  00472C  15A5               	andwf	??_check_ADF5341_status& (0+255),w,b
 15090  00472E  0900               	iorlw	0
 15091  004730  A4D8               	btfss	status,2,c
 15092  004732  EF9D  F023         	goto	u10991
 15093  004736  EFA0  F023         	goto	u10990
 15094  00473A                     u10991:
 15095  00473A  0E01               	movlw	1
 15096  00473C  EFA1  F023         	goto	u11000
 15097  004740                     u10990:
 15098  004740  0E00               	movlw	0
 15099  004742                     u11000:
 15100  004742  6FA8               	movwf	check_ADF5341_status@stat& (0+255),b
 15101  004744                     
 15102                           ; BSR set to: 0
 15103                           ;src/driver/adf4351.c: 85:  if(stat != adf4351_lockstat)
 15104  004744  5072               	movf	_adf4351_lockstat^0,w,c
 15105  004746  19A8               	xorwf	check_ADF5341_status@stat& (0+255),w,b
 15106  004748  B4D8               	btfsc	status,2,c
 15107  00474A  EFA9  F023         	goto	u11011
 15108  00474E  EFAB  F023         	goto	u11010
 15109  004752                     u11011:
 15110  004752  EFF4  F023         	goto	l149
 15111  004756                     u11010:
 15112  004756                     
 15113                           ; BSR set to: 0
 15114                           ;src/driver/adf4351.c: 86:  {;src/driver/adf4351.c: 87:   if(stat == 0)
 15115  004756  51A8               	movf	check_ADF5341_status@stat& (0+255),w,b
 15116  004758  A4D8               	btfss	status,2,c
 15117  00475A  EFB1  F023         	goto	u11021
 15118  00475E  EFB3  F023         	goto	u11020
 15119  004762                     u11021:
 15120  004762  EFD3  F023         	goto	l9268
 15121  004766                     u11020:
 15122  004766                     
 15123                           ; BSR set to: 0
 15124                           ;src/driver/adf4351.c: 88:   {;src/driver/adf4351.c: 89:    printf("ADF4351 unlocked\n")
      +                          ;
 15125  004766  0E2B               	movlw	low STR_1
 15126  004768  6F95               	movwf	printf@fmt& (0+255),b
 15127  00476A  0E7C               	movlw	high STR_1
 15128  00476C  6F96               	movwf	(printf@fmt+1)& (0+255),b
 15129  00476E  ECA7  F032         	call	_printf	;wreg free
 15130  004772                     
 15131                           ;src/driver/adf4351.c: 90:    *((PIN_LED_ADF_LOCK)->pPORT) |= (PIN_LED_ADF_LOCK)->mask;
 15132  004772  0EBF               	movlw	low (_PIN_LED_ADF_LOCK_DEF+4)
 15133  004774  6EF6               	movwf	tblptrl,c
 15134  004776  0E78               	movlw	high (_PIN_LED_ADF_LOCK_DEF+4)
 15135  004778  6EF7               	movwf	tblptrh,c
 15136  00477A                     	if	0	;tblptru may be non-zero
 15137  00477A                     	endif
 15138  00477A                     	if	0	;tblptru may be non-zero
 15139  00477A                     	endif
 15140  00477A  0008               	tblrd		*
 15141  00477C  CFF5 F0A5          	movff	tablat,??_check_ADF5341_status
 15142  004780  0EBB               	movlw	low _PIN_LED_ADF_LOCK_DEF
 15143  004782  6EF6               	movwf	tblptrl,c
 15144  004784                     	if	1	;There is more than 1 active tblptr byte
 15145  004784  0E78               	movlw	high _PIN_LED_ADF_LOCK_DEF
 15146  004786  6EF7               	movwf	tblptrh,c
 15147  004788                     	endif
 15148  004788                     	if	0	;There are less than 3 active tblptr bytes
 15149  004788                     	endif
 15150  004788  0009               	tblrd		*+
 15151  00478A  CFF5 F0A6          	movff	tablat,??_check_ADF5341_status+1
 15152  00478E  0009               	tblrd		*+
 15153  004790  CFF5 F0A7          	movff	tablat,??_check_ADF5341_status+2
 15154  004794  C0A6  FFD9         	movff	??_check_ADF5341_status+1,fsr2l
 15155  004798  C0A7  FFDA         	movff	??_check_ADF5341_status+2,fsr2h
 15156  00479C  0100               	movlb	0	; () banked
 15157  00479E  51A5               	movf	??_check_ADF5341_status& (0+255),w,b
 15158  0047A0  12DF               	iorwf	indf2,f,c
 15159                           
 15160                           ;src/driver/adf4351.c: 91:   }
 15161  0047A2  EFF2  F023         	goto	l9272
 15162  0047A6                     l9268:
 15163                           
 15164                           ; BSR set to: 0
 15165                           ;src/driver/adf4351.c: 93:   {;src/driver/adf4351.c: 94:    printf("ADF4351 locked\n");
 15166  0047A6  0ED4               	movlw	low STR_2
 15167  0047A8  6F95               	movwf	printf@fmt& (0+255),b
 15168  0047AA  0E7C               	movlw	high STR_2
 15169  0047AC  6F96               	movwf	(printf@fmt+1)& (0+255),b
 15170  0047AE  ECA7  F032         	call	_printf	;wreg free
 15171  0047B2                     
 15172                           ;src/driver/adf4351.c: 95:    *((PIN_LED_ADF_LOCK)->pPORT) &= ~(PIN_LED_ADF_LOCK)->mask;
 15173  0047B2  0EBF               	movlw	low (_PIN_LED_ADF_LOCK_DEF+4)
 15174  0047B4  6EF6               	movwf	tblptrl,c
 15175  0047B6  0E78               	movlw	high (_PIN_LED_ADF_LOCK_DEF+4)
 15176  0047B8  6EF7               	movwf	tblptrh,c
 15177  0047BA                     	if	0	;tblptru may be non-zero
 15178  0047BA                     	endif
 15179  0047BA                     	if	0	;tblptru may be non-zero
 15180  0047BA                     	endif
 15181  0047BA  0008               	tblrd		*
 15182  0047BC  50F5               	movf	tablat,w,c
 15183  0047BE  0AFF               	xorlw	255
 15184  0047C0  0100               	movlb	0	; () banked
 15185  0047C2  6FA5               	movwf	??_check_ADF5341_status& (0+255),b
 15186  0047C4  0EBB               	movlw	low _PIN_LED_ADF_LOCK_DEF
 15187  0047C6  6EF6               	movwf	tblptrl,c
 15188  0047C8                     	if	1	;There is more than 1 active tblptr byte
 15189  0047C8  0E78               	movlw	high _PIN_LED_ADF_LOCK_DEF
 15190  0047CA  6EF7               	movwf	tblptrh,c
 15191  0047CC                     	endif
 15192  0047CC                     	if	0	;There are less than 3 active tblptr bytes
 15193  0047CC                     	endif
 15194  0047CC  0009               	tblrd		*+
 15195  0047CE  CFF5 F0A6          	movff	tablat,??_check_ADF5341_status+1
 15196  0047D2  0009               	tblrd		*+
 15197  0047D4  CFF5 F0A7          	movff	tablat,??_check_ADF5341_status+2
 15198  0047D8  C0A6  FFD9         	movff	??_check_ADF5341_status+1,fsr2l
 15199  0047DC  C0A7  FFDA         	movff	??_check_ADF5341_status+2,fsr2h
 15200  0047E0  51A5               	movf	??_check_ADF5341_status& (0+255),w,b
 15201  0047E2  16DF               	andwf	indf2,f,c
 15202  0047E4                     l9272:
 15203                           
 15204                           ; BSR set to: 0
 15205                           ;src/driver/adf4351.c: 97:   adf4351_lockstat = stat;
 15206  0047E4  C0A8  F072         	movff	check_ADF5341_status@stat,_adf4351_lockstat
 15207  0047E8                     l149:
 15208                           
 15209                           ; BSR set to: 0
 15210  0047E8  0012               	return		;funcret
 15211  0047EA                     __end_of_check_ADF5341_status:
 15212                           	opt callstack 0
 15213                           
 15214 ;; *************** function _printf *****************
 15215 ;; Defined at:
 15216 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 15217 ;; Parameters:    Size  Location     Type
 15218 ;;  fmt             2   21[BANK0 ] PTR const unsigned char 
 15219 ;;		 -> STR_66(48), STR_65(69), STR_64(40), STR_30(21), 
 15220 ;;		 -> STR_29(25), STR_28(32), STR_27(35), STR_26(29), 
 15221 ;;		 -> STR_25(32), STR_24(12), STR_23(14), STR_22(27), 
 15222 ;;		 -> STR_21(24), STR_20(13), STR_19(43), STR_18(19), 
 15223 ;;		 -> STR_17(13), STR_16(15), STR_15(23), STR_14(16), 
 15224 ;;		 -> STR_13(35), STR_12(21), STR_11(21), STR_10(16), 
 15225 ;;		 -> STR_9(5), STR_8(22), STR_7(28), STR_6(25), 
 15226 ;;		 -> STR_5(55), STR_4(72), STR_3(74), STR_2(16), 
 15227 ;;		 -> STR_1(18), 
 15228 ;; Auto vars:     Size  Location     Type
 15229 ;;  ap              2   33[BANK0 ] PTR void [1]
 15230 ;;		 -> ?_printf(2), 
 15231 ;;  ret             2    0        int 
 15232 ;; Return value:  Size  Location     Type
 15233 ;;                  2   21[BANK0 ] int 
 15234 ;; Registers used:
 15235 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15236 ;; Tracked objects:
 15237 ;;		On entry : 0/0
 15238 ;;		On exit  : 0/0
 15239 ;;		Unchanged: 0/0
 15240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15241 ;;      Params:         0      10       0       0       0       0       0
 15242 ;;      Locals:         0       4       0       0       0       0       0
 15243 ;;      Temps:          0       0       0       0       0       0       0
 15244 ;;      Totals:         0      14       0       0       0       0       0
 15245 ;;Total ram usage:       14 bytes
 15246 ;; Hardware stack levels used:    1
 15247 ;; Hardware stack levels required when called:    9
 15248 ;; This function calls:
 15249 ;;		_vfprintf
 15250 ;; This function is called by:
 15251 ;;		_check_ADF5341_status
 15252 ;;		_adf4351_calc_rcnt_block
 15253 ;;		_i2c_read
 15254 ;;		_lnb_configure
 15255 ;;		_lnb_do_configure
 15256 ;;		_check_LNB_status
 15257 ;;		_si5328_init
 15258 ;;		_si5328_set_freq
 15259 ;;		_si5328_perform_ical
 15260 ;;		_check_si5328_status
 15261 ;;		_write_regset
 15262 ;;		_lcd_init
 15263 ;;		_main
 15264 ;;		_setADF4351frequency
 15265 ;;		_adf4351_regdump
 15266 ;; This function uses a non-reentrant model
 15267 ;;
 15268                           
 15269                           	psect	text59
 15270  00654E                     __ptext59:
 15271                           	opt callstack 0
 15272  00654E                     _printf:
 15273                           	opt callstack 15
 15274  00654E  0E97               	movlw	low (?_printf+2)
 15275  006550  0100               	movlb	0	; () banked
 15276  006552  6FA1               	movwf	printf@ap& (0+255),b
 15277  006554  0E00               	movlw	high (?_printf+2)
 15278  006556  6FA2               	movwf	(printf@ap+1)& (0+255),b
 15279  006558                     
 15280                           ; BSR set to: 0
 15281  006558  0E00               	movlw	0
 15282  00655A  6E5F               	movwf	vfprintf@fp^0,c
 15283  00655C  0E00               	movlw	0
 15284  00655E  6E60               	movwf	(vfprintf@fp+1)^0,c
 15285  006560  C095  F061         	movff	printf@fmt,vfprintf@fmt
 15286  006564  C096  F062         	movff	printf@fmt+1,vfprintf@fmt+1
 15287  006568  0EA1               	movlw	low printf@ap
 15288  00656A  6E63               	movwf	vfprintf@ap^0,c
 15289  00656C  0E00               	movlw	high printf@ap
 15290  00656E  6E64               	movwf	(vfprintf@ap+1)^0,c
 15291  006570  EC6E  F02E         	call	_vfprintf	;wreg free
 15292  006574  0012               	return		;funcret
 15293  006576                     __end_of_printf:
 15294                           	opt callstack 0
 15295                           
 15296 ;; *************** function _vfprintf *****************
 15297 ;; Defined at:
 15298 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15299 ;; Parameters:    Size  Location     Type
 15300 ;;  fp              2   94[COMRAM] PTR struct _IO_FILE
 15301 ;;		 -> NULL(0), 
 15302 ;;  fmt             2   96[COMRAM] PTR const unsigned char 
 15303 ;;		 -> STR_66(48), STR_65(69), STR_64(40), STR_30(21), 
 15304 ;;		 -> STR_29(25), STR_28(32), STR_27(35), STR_26(29), 
 15305 ;;		 -> STR_25(32), STR_24(12), STR_23(14), STR_22(27), 
 15306 ;;		 -> STR_21(24), STR_20(13), STR_19(43), STR_18(19), 
 15307 ;;		 -> STR_17(13), STR_16(15), STR_15(23), STR_14(16), 
 15308 ;;		 -> STR_13(35), STR_12(21), STR_11(21), STR_10(16), 
 15309 ;;		 -> STR_9(5), STR_8(22), STR_7(28), STR_6(25), 
 15310 ;;		 -> STR_5(55), STR_4(72), STR_3(74), STR_2(16), 
 15311 ;;		 -> STR_1(18), 
 15312 ;;  ap              2   98[COMRAM] PTR PTR void 
 15313 ;;		 -> printf@ap(2), 
 15314 ;; Auto vars:     Size  Location     Type
 15315 ;;  cfmt            2  100[COMRAM] PTR unsigned char 
 15316 ;;		 -> STR_66(48), STR_65(69), STR_64(40), STR_30(21), 
 15317 ;;		 -> STR_29(25), STR_28(32), STR_27(35), STR_26(29), 
 15318 ;;		 -> STR_25(32), STR_24(12), STR_23(14), STR_22(27), 
 15319 ;;		 -> STR_21(24), STR_20(13), STR_19(43), STR_18(19), 
 15320 ;;		 -> STR_17(13), STR_16(15), STR_15(23), STR_14(16), 
 15321 ;;		 -> STR_13(35), STR_12(21), STR_11(21), STR_10(16), 
 15322 ;;		 -> STR_9(5), STR_8(22), STR_7(28), STR_6(25), 
 15323 ;;		 -> STR_5(55), STR_4(72), STR_3(74), STR_2(16), 
 15324 ;;		 -> STR_1(18), 
 15325 ;; Return value:  Size  Location     Type
 15326 ;;                  2   94[COMRAM] int 
 15327 ;; Registers used:
 15328 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15329 ;; Tracked objects:
 15330 ;;		On entry : 0/0
 15331 ;;		On exit  : 0/0
 15332 ;;		Unchanged: 0/0
 15333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15334 ;;      Params:         6       0       0       0       0       0       0
 15335 ;;      Locals:         2       0       0       0       0       0       0
 15336 ;;      Temps:          0       0       0       0       0       0       0
 15337 ;;      Totals:         8       0       0       0       0       0       0
 15338 ;;Total ram usage:        8 bytes
 15339 ;; Hardware stack levels used:    1
 15340 ;; Hardware stack levels required when called:    8
 15341 ;; This function calls:
 15342 ;;		_vfpfcnvrt
 15343 ;; This function is called by:
 15344 ;;		_printf
 15345 ;; This function uses a non-reentrant model
 15346 ;;
 15347                           
 15348                           	psect	text60
 15349  005CDC                     __ptext60:
 15350                           	opt callstack 0
 15351  005CDC                     _vfprintf:
 15352                           	opt callstack 15
 15353  005CDC                     
 15354                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 15355  005CDC  C061  F065         	movff	vfprintf@fmt,vfprintf@cfmt
 15356  005CE0  C062  F066         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 15357  005CE4                     
 15358                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 15359  005CE4  0E00               	movlw	0
 15360  005CE6  0101               	movlb	1	; () banked
 15361  005CE8  6F97               	movwf	(_nout+1)& (0+255),b
 15362  005CEA  0E00               	movlw	0
 15363  005CEC  6F96               	movwf	_nout& (0+255),b
 15364                           
 15365                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 15366  005CEE  EF8C  F02E         	goto	l8458
 15367  005CF2                     l8456:
 15368                           
 15369                           ; BSR set to: 1
 15370                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 15371  005CF2  C05F  F04B         	movff	vfprintf@fp,vfpfcnvrt@fp
 15372  005CF6  C060  F04C         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 15373  005CFA  0E65               	movlw	low vfprintf@cfmt
 15374  005CFC  6E4D               	movwf	vfpfcnvrt@fmt^0,c
 15375  005CFE  0E00               	movlw	high vfprintf@cfmt
 15376  005D00  6E4E               	movwf	(vfpfcnvrt@fmt+1)^0,c
 15377  005D02  C063  F04F         	movff	vfprintf@ap,vfpfcnvrt@ap
 15378  005D06  C064  F050         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 15379  005D0A  EC09  F000         	call	_vfpfcnvrt	;wreg free
 15380  005D0E  504B               	movf	?_vfpfcnvrt^0,w,c
 15381  005D10  0101               	movlb	1	; () banked
 15382  005D12  2796               	addwf	_nout& (0+255),f,b
 15383  005D14  504C               	movf	(?_vfpfcnvrt+1)^0,w,c
 15384  005D16  2397               	addwfc	(_nout+1)& (0+255),f,b
 15385  005D18                     l8458:
 15386                           
 15387                           ; BSR set to: 1
 15388                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 15389  005D18  C065  FFF6         	movff	vfprintf@cfmt,tblptrl
 15390  005D1C  C066  FFF7         	movff	vfprintf@cfmt+1,tblptrh
 15391  005D20                     	if	0	;tblptru may be non-zero
 15392  005D20                     	endif
 15393  005D20                     	if	0	;tblptru may be non-zero
 15394  005D20                     	endif
 15395  005D20  0008               	tblrd		*
 15396  005D22  50F5               	movf	tablat,w,c
 15397  005D24  0900               	iorlw	0
 15398  005D26  A4D8               	btfss	status,2,c
 15399  005D28  EF98  F02E         	goto	u9801
 15400  005D2C  EF9A  F02E         	goto	u9800
 15401  005D30                     u9801:
 15402  005D30  EF79  F02E         	goto	l8456
 15403  005D34                     u9800:
 15404  005D34                     
 15405                           ; BSR set to: 1
 15406                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 15407  005D34  C196  F05F         	movff	_nout,?_vfprintf
 15408  005D38  C197  F060         	movff	_nout+1,?_vfprintf+1
 15409  005D3C                     
 15410                           ; BSR set to: 1
 15411  005D3C  0012               	return		;funcret
 15412  005D3E                     __end_of_vfprintf:
 15413                           	opt callstack 0
 15414                           
 15415 ;; *************** function _vfpfcnvrt *****************
 15416 ;; Defined at:
 15417 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15418 ;; Parameters:    Size  Location     Type
 15419 ;;  fp              2   74[COMRAM] PTR struct _IO_FILE
 15420 ;;		 -> NULL(0), 
 15421 ;;  fmt             2   76[COMRAM] PTR PTR unsigned char 
 15422 ;;		 -> vfprintf@cfmt(2), 
 15423 ;;  ap              2   78[COMRAM] PTR PTR void 
 15424 ;;		 -> printf@ap(2), 
 15425 ;; Auto vars:     Size  Location     Type
 15426 ;;  llu             8   13[BANK0 ] unsigned long long 
 15427 ;;  ll              8    4[BANK0 ] long long 
 15428 ;;  f               4    0        long long 
 15429 ;;  vp              3    0        PTR void 
 15430 ;;  ct              3    0        unsigned char [3]
 15431 ;;  cp              3    0        PTR unsigned char 
 15432 ;;  done            2    0[BANK0 ] int 
 15433 ;;  i               2    0        int 
 15434 ;;  c               1   12[BANK0 ] unsigned char 
 15435 ;; Return value:  Size  Location     Type
 15436 ;;                  2   74[COMRAM] int 
 15437 ;; Registers used:
 15438 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15439 ;; Tracked objects:
 15440 ;;		On entry : 0/0
 15441 ;;		On exit  : 0/0
 15442 ;;		Unchanged: 0/0
 15443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15444 ;;      Params:         6       0       0       0       0       0       0
 15445 ;;      Locals:         0      21       0       0       0       0       0
 15446 ;;      Temps:         14       0       0       0       0       0       0
 15447 ;;      Totals:        20      21       0       0       0       0       0
 15448 ;;Total ram usage:       41 bytes
 15449 ;; Hardware stack levels used:    1
 15450 ;; Hardware stack levels required when called:    7
 15451 ;; This function calls:
 15452 ;;		_atoi
 15453 ;;		_dtoa
 15454 ;;		_fputc
 15455 ;;		_isdigit
 15456 ;;		_strncmp
 15457 ;;		_utoa
 15458 ;;		_xtoa
 15459 ;; This function is called by:
 15460 ;;		_vfprintf
 15461 ;; This function uses a non-reentrant model
 15462 ;;
 15463                           
 15464                           	psect	text61
 15465  000012                     __ptext61:
 15466                           	opt callstack 0
 15467  000012                     _vfpfcnvrt:
 15468                           	opt callstack 15
 15469  000012                     
 15470                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 15471  000012  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15472  000016  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15473  00001A  CFDE FFF6          	movff	postinc2,tblptrl
 15474  00001E  CFDD FFF7          	movff	postdec2,tblptrh
 15475  000022                     	if	0	;tblptru may be non-zero
 15476  000022                     	endif
 15477  000022                     	if	0	;tblptru may be non-zero
 15478  000022                     	endif
 15479  000022  0008               	tblrd		*
 15480  000024  50F5               	movf	tablat,w,c
 15481  000026  0A25               	xorlw	37
 15482  000028  A4D8               	btfss	status,2,c
 15483  00002A  EF19  F000         	goto	u9611
 15484  00002E  EF1B  F000         	goto	u9610
 15485  000032                     u9611:
 15486  000032  EFF8  F003         	goto	l8434
 15487  000036                     u9610:
 15488  000036                     
 15489                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 15490  000036  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15491  00003A  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15492  00003E  2ADE               	incf	postinc2,f,c
 15493  000040  0E00               	movlw	0
 15494  000042  22DD               	addwfc	postdec2,f,c
 15495  000044                     
 15496                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 15497  000044  0E00               	movlw	0
 15498  000046  0101               	movlb	1	; () banked
 15499  000048  6F99               	movwf	(_width+1)& (0+255),b
 15500  00004A  0E00               	movlw	0
 15501  00004C  6F98               	movwf	_width& (0+255),b
 15502  00004E  C198  F069         	movff	_width,_flags
 15503  000052  C199  F06A         	movff	_width+1,_flags+1
 15504  000056                     
 15505                           ; BSR set to: 1
 15506                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 15507  000056  6867               	setf	_prec^0,c
 15508  000058  6868               	setf	(_prec+1)^0,c
 15509  00005A                     
 15510                           ; BSR set to: 1
 15511                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 688:         done = 0;
 15512  00005A  0E00               	movlw	0
 15513  00005C  0100               	movlb	0	; () banked
 15514  00005E  6F81               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 15515  000060  0E00               	movlw	0
 15516  000062  6F80               	movwf	vfpfcnvrt@done& (0+255),b
 15517                           
 15518                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 689:         while (!done) {
 15519  000064  EF7A  F000         	goto	l8332
 15520  000068                     l8306:
 15521                           
 15522                           ; BSR set to: 0
 15523                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 692:                     flag
      +                          s |= (1 << 0);
 15524  000068  8069               	bsf	_flags^0,0,c
 15525  00006A                     l8308:
 15526                           
 15527                           ; BSR set to: 0
 15528                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 693:                     ++*f
      +                          mt;
 15529  00006A  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15530  00006E  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15531  000072  2ADE               	incf	postinc2,f,c
 15532  000074  0E00               	movlw	0
 15533  000076  22DD               	addwfc	postdec2,f,c
 15534                           
 15535                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 694:                     brea
      +                          k;
 15536  000078  EF7A  F000         	goto	l8332
 15537  00007C                     l8310:
 15538                           
 15539                           ; BSR set to: 0
 15540                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 696:                     flag
      +                          s |= (1 << 1);
 15541  00007C  8269               	bsf	_flags^0,1,c
 15542  00007E  EF35  F000         	goto	l8308
 15543  000082                     l8314:
 15544                           
 15545                           ; BSR set to: 0
 15546                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 700:                     flag
      +                          s |= (1 << 2);
 15547  000082  8469               	bsf	_flags^0,2,c
 15548  000084  EF35  F000         	goto	l8308
 15549  000088                     l8318:
 15550                           
 15551                           ; BSR set to: 0
 15552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 704:                     flag
      +                          s |= (1 << 3);
 15553  000088  8669               	bsf	_flags^0,3,c
 15554  00008A  EF35  F000         	goto	l8308
 15555  00008E                     l8322:
 15556                           
 15557                           ; BSR set to: 0
 15558                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 708:                     flag
      +                          s |= (1 << 4);
 15559  00008E  8869               	bsf	_flags^0,4,c
 15560  000090  EF35  F000         	goto	l8308
 15561  000094                     l8326:
 15562                           
 15563                           ; BSR set to: 0
 15564                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 712:                     done
      +                           = 1;
 15565  000094  0E00               	movlw	0
 15566  000096  6F81               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 15567  000098  0E01               	movlw	1
 15568  00009A  6F80               	movwf	vfpfcnvrt@done& (0+255),b
 15569                           
 15570                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 713:                     brea
      +                          k;
 15571  00009C  EF7A  F000         	goto	l8332
 15572  0000A0                     l8330:
 15573                           
 15574                           ; BSR set to: 0
 15575  0000A0  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15576  0000A4  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15577  0000A8  CFDE FFF6          	movff	postinc2,tblptrl
 15578  0000AC  CFDD FFF7          	movff	postdec2,tblptrh
 15579  0000B0                     	if	0	;tblptru may be non-zero
 15580  0000B0                     	endif
 15581  0000B0                     	if	0	;tblptru may be non-zero
 15582  0000B0                     	endif
 15583  0000B0  0008               	tblrd		*
 15584  0000B2  50F5               	movf	tablat,w,c
 15585  0000B4  6E51               	movwf	??_vfpfcnvrt^0,c
 15586  0000B6  6A52               	clrf	(??_vfpfcnvrt+1)^0,c
 15587                           
 15588                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15589                           ; Switch size 1, requested type "simple"
 15590                           ; Number of cases is 1, Range of values is 0 to 0
 15591                           ; switch strategies available:
 15592                           ; Name         Instructions Cycles
 15593                           ; simple_byte            4     3 (average)
 15594                           ;	Chosen strategy is simple_byte
 15595  0000B8  5052               	movf	(??_vfpfcnvrt+1)^0,w,c
 15596  0000BA  0A00               	xorlw	0	; case 0
 15597  0000BC  B4D8               	btfsc	status,2,c
 15598  0000BE  EF63  F000         	goto	l10272
 15599  0000C2  EF4A  F000         	goto	l8326
 15600  0000C6                     l10272:
 15601                           
 15602                           ; BSR set to: 0
 15603                           ; Switch size 1, requested type "simple"
 15604                           ; Number of cases is 5, Range of values is 32 to 48
 15605                           ; switch strategies available:
 15606                           ; Name         Instructions Cycles
 15607                           ; simple_byte           16     9 (average)
 15608                           ;	Chosen strategy is simple_byte
 15609  0000C6  5051               	movf	??_vfpfcnvrt^0,w,c
 15610  0000C8  0A20               	xorlw	32	; case 32
 15611  0000CA  B4D8               	btfsc	status,2,c
 15612  0000CC  EF44  F000         	goto	l8318
 15613  0000D0  0A03               	xorlw	3	; case 35
 15614  0000D2  B4D8               	btfsc	status,2,c
 15615  0000D4  EF47  F000         	goto	l8322
 15616  0000D8  0A08               	xorlw	8	; case 43
 15617  0000DA  B4D8               	btfsc	status,2,c
 15618  0000DC  EF41  F000         	goto	l8314
 15619  0000E0  0A06               	xorlw	6	; case 45
 15620  0000E2  B4D8               	btfsc	status,2,c
 15621  0000E4  EF34  F000         	goto	l8306
 15622  0000E8  0A1D               	xorlw	29	; case 48
 15623  0000EA  B4D8               	btfsc	status,2,c
 15624  0000EC  EF3E  F000         	goto	l8310
 15625  0000F0  EF4A  F000         	goto	l8326
 15626  0000F4                     l8332:
 15627                           
 15628                           ; BSR set to: 0
 15629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 689:         while (!done) {
 15630  0000F4  5180               	movf	vfpfcnvrt@done& (0+255),w,b
 15631  0000F6  1181               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
 15632  0000F8  B4D8               	btfsc	status,2,c
 15633  0000FA  EF81  F000         	goto	u9621
 15634  0000FE  EF83  F000         	goto	u9620
 15635  000102                     u9621:
 15636  000102  EF50  F000         	goto	l8330
 15637  000106                     u9620:
 15638  000106                     
 15639                           ; BSR set to: 0
 15640                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 716:         if (flags & (1 <
      +                          < 0)) {
 15641  000106  A069               	btfss	_flags^0,0,c
 15642  000108  EF88  F000         	goto	u9631
 15643  00010C  EF8A  F000         	goto	u9630
 15644  000110                     u9631:
 15645  000110  EF8B  F000         	goto	l8336
 15646  000114                     u9630:
 15647  000114                     
 15648                           ; BSR set to: 0
 15649                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 717:             flags &= ~(1
      +                           << 1);
 15650  000114  9269               	bcf	_flags^0,1,c
 15651  000116                     l8336:
 15652                           
 15653                           ; BSR set to: 0
 15654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 15655  000116  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15656  00011A  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15657  00011E  CFDE FFF6          	movff	postinc2,tblptrl
 15658  000122  CFDD FFF7          	movff	postdec2,tblptrh
 15659  000126                     	if	0	;tblptru may be non-zero
 15660  000126                     	endif
 15661  000126                     	if	0	;tblptru may be non-zero
 15662  000126                     	endif
 15663  000126  0008               	tblrd		*
 15664  000128  50F5               	movf	tablat,w,c
 15665  00012A  0A2A               	xorlw	42
 15666  00012C  A4D8               	btfss	status,2,c
 15667  00012E  EF9B  F000         	goto	u9641
 15668  000132  EF9D  F000         	goto	u9640
 15669  000136                     u9641:
 15670  000136  EFC7  F000         	goto	l8344
 15671  00013A                     u9640:
 15672  00013A                     
 15673                           ; BSR set to: 0
 15674                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 15675  00013A  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15676  00013E  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15677  000142  2ADE               	incf	postinc2,f,c
 15678  000144  0E00               	movlw	0
 15679  000146  22DD               	addwfc	postdec2,f,c
 15680                           
 15681                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 15682  000148  C04F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 15683  00014C  C050  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 15684  000150  CFDF F051          	movff	indf2,??_vfpfcnvrt
 15685  000154  0E02               	movlw	2
 15686  000156  26DE               	addwf	postinc2,f,c
 15687  000158  CFDF F052          	movff	indf2,??_vfpfcnvrt+1
 15688  00015C  0E00               	movlw	0
 15689  00015E  22DD               	addwfc	postdec2,f,c
 15690  000160  C051  FFD9         	movff	??_vfpfcnvrt,fsr2l
 15691  000164  C052  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 15692  000168  CFDE F198          	movff	postinc2,_width
 15693  00016C  CFDD F199          	movff	postdec2,_width+1
 15694  000170                     
 15695                           ; BSR set to: 0
 15696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 15697  000170  0101               	movlb	1	; () banked
 15698  000172  BF99               	btfsc	(_width+1)& (0+255),7,b
 15699  000174  EFC0  F000         	goto	u9650
 15700  000178  EFBE  F000         	goto	u9651
 15701  00017C                     u9651:
 15702  00017C  EF0B  F001         	goto	l8354
 15703  000180                     u9650:
 15704  000180                     
 15705                           ; BSR set to: 1
 15706                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 15707  000180  8069               	bsf	_flags^0,0,c
 15708                           
 15709                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 15710  000182  6D98               	negf	_width& (0+255),b
 15711  000184  1F99               	comf	(_width+1)& (0+255),f,b
 15712  000186  B0D8               	btfsc	status,0,c
 15713  000188  2B99               	incf	(_width+1)& (0+255),f,b
 15714  00018A  EF0B  F001         	goto	l8354
 15715  00018E                     l8344:
 15716                           
 15717                           ; BSR set to: 0
 15718                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 15719  00018E  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15720  000192  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15721  000196  CFDE F014          	movff	postinc2,atoi@s
 15722  00019A  CFDD F015          	movff	postdec2,atoi@s+1
 15723  00019E  EC6C  F015         	call	_atoi	;wreg free
 15724  0001A2  C014  F198         	movff	?_atoi,_width
 15725  0001A6  C015  F199         	movff	?_atoi+1,_width+1
 15726                           
 15727                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 15728  0001AA  EFDE  F000         	goto	l8348
 15729  0001AE                     l8346:
 15730                           
 15731                           ; BSR set to: 0
 15732                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 15733  0001AE  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15734  0001B2  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15735  0001B6  2ADE               	incf	postinc2,f,c
 15736  0001B8  0E00               	movlw	0
 15737  0001BA  22DD               	addwfc	postdec2,f,c
 15738  0001BC                     l8348:
 15739  0001BC  0ED0               	movlw	208
 15740  0001BE  6E51               	movwf	??_vfpfcnvrt^0,c
 15741  0001C0  0EFF               	movlw	255
 15742  0001C2  6E52               	movwf	(??_vfpfcnvrt+1)^0,c
 15743  0001C4  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15744  0001C8  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15745  0001CC  CFDE FFF6          	movff	postinc2,tblptrl
 15746  0001D0  CFDD FFF7          	movff	postdec2,tblptrh
 15747  0001D4                     	if	0	;tblptru may be non-zero
 15748  0001D4                     	endif
 15749  0001D4                     	if	0	;tblptru may be non-zero
 15750  0001D4                     	endif
 15751  0001D4  0008               	tblrd		*
 15752  0001D6  50F5               	movf	tablat,w,c
 15753  0001D8  6E53               	movwf	(??_vfpfcnvrt+2)^0,c
 15754  0001DA  6A54               	clrf	(??_vfpfcnvrt+3)^0,c
 15755  0001DC  5051               	movf	??_vfpfcnvrt^0,w,c
 15756  0001DE  2653               	addwf	(??_vfpfcnvrt+2)^0,f,c
 15757  0001E0  5052               	movf	(??_vfpfcnvrt+1)^0,w,c
 15758  0001E2  2254               	addwfc	(??_vfpfcnvrt+3)^0,f,c
 15759  0001E4  5054               	movf	(??_vfpfcnvrt+3)^0,w,c
 15760  0001E6  E10A               	bnz	u9660
 15761  0001E8  0E0A               	movlw	10
 15762  0001EA  5C53               	subwf	(??_vfpfcnvrt+2)^0,w,c
 15763  0001EC  A0D8               	btfss	status,0,c
 15764  0001EE  EFFB  F000         	goto	u9661
 15765  0001F2  EFFE  F000         	goto	u9660
 15766  0001F6                     u9661:
 15767  0001F6  0E01               	movlw	1
 15768  0001F8  EFFF  F000         	goto	u9670
 15769  0001FC                     u9660:
 15770  0001FC  0E00               	movlw	0
 15771  0001FE                     u9670:
 15772  0001FE  0100               	movlb	0	; () banked
 15773  000200  6F82               	movwf	_vfpfcnvrt$3280& (0+255),b
 15774  000202  6B83               	clrf	(_vfpfcnvrt$3280+1)& (0+255),b
 15775  000204                     
 15776                           ; BSR set to: 0
 15777  000204  5182               	movf	_vfpfcnvrt$3280& (0+255),w,b
 15778  000206  1183               	iorwf	(_vfpfcnvrt$3280+1)& (0+255),w,b
 15779  000208  A4D8               	btfss	status,2,c
 15780  00020A  EF09  F001         	goto	u9681
 15781  00020E  EF0B  F001         	goto	u9680
 15782  000212                     u9681:
 15783  000212  EFD7  F000         	goto	l8346
 15784  000216                     u9680:
 15785  000216                     l8354:
 15786                           
 15787                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 15788  000216  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15789  00021A  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15790  00021E  CFDE FFF6          	movff	postinc2,tblptrl
 15791  000222  CFDD FFF7          	movff	postdec2,tblptrh
 15792  000226                     	if	0	;tblptru may be non-zero
 15793  000226                     	endif
 15794  000226                     	if	0	;tblptru may be non-zero
 15795  000226                     	endif
 15796  000226  0008               	tblrd		*
 15797  000228  50F5               	movf	tablat,w,c
 15798  00022A  0A64               	xorlw	100
 15799  00022C  B4D8               	btfsc	status,2,c
 15800  00022E  EF1B  F001         	goto	u9691
 15801  000232  EF1D  F001         	goto	u9690
 15802  000236                     u9691:
 15803  000236  EF2F  F001         	goto	l8358
 15804  00023A                     u9690:
 15805  00023A  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15806  00023E  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15807  000242  CFDE FFF6          	movff	postinc2,tblptrl
 15808  000246  CFDD FFF7          	movff	postdec2,tblptrh
 15809  00024A                     	if	0	;tblptru may be non-zero
 15810  00024A                     	endif
 15811  00024A                     	if	0	;tblptru may be non-zero
 15812  00024A                     	endif
 15813  00024A  0008               	tblrd		*
 15814  00024C  50F5               	movf	tablat,w,c
 15815  00024E  0A69               	xorlw	105
 15816  000250  A4D8               	btfss	status,2,c
 15817  000252  EF2D  F001         	goto	u9701
 15818  000256  EF2F  F001         	goto	u9700
 15819  00025A                     u9701:
 15820  00025A  EF70  F001         	goto	l8364
 15821  00025E                     u9700:
 15822  00025E                     l8358:
 15823                           
 15824                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 15825  00025E  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15826  000262  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15827  000266  2ADE               	incf	postinc2,f,c
 15828  000268  0E00               	movlw	0
 15829  00026A  22DD               	addwfc	postdec2,f,c
 15830                           
 15831                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 15832  00026C  C04F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 15833  000270  C050  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 15834  000274  CFDF F051          	movff	indf2,??_vfpfcnvrt
 15835  000278  0E02               	movlw	2
 15836  00027A  26DE               	addwf	postinc2,f,c
 15837  00027C  CFDF F052          	movff	indf2,??_vfpfcnvrt+1
 15838  000280  0E00               	movlw	0
 15839  000282  22DD               	addwfc	postdec2,f,c
 15840  000284  C051  FFD9         	movff	??_vfpfcnvrt,fsr2l
 15841  000288  C052  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 15842  00028C  CFDE F084          	movff	postinc2,vfpfcnvrt@ll
 15843  000290  CFDD F085          	movff	postdec2,vfpfcnvrt@ll+1
 15844  000294  0100               	movlb	0	; () banked
 15845  000296  0E00               	movlw	0
 15846  000298  BF85               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 15847  00029A  0EFF               	movlw	-1
 15848  00029C  6F86               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 15849  00029E  6F87               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 15850  0002A0  6F88               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 15851  0002A2  6F89               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 15852  0002A4  6F8A               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 15853  0002A6  6F8B               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 15854  0002A8                     
 15855                           ; BSR set to: 0
 15856                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 15857  0002A8  C04B  F027         	movff	vfpfcnvrt@fp,dtoa@fp
 15858  0002AC  C04C  F028         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 15859  0002B0  C084  F029         	movff	vfpfcnvrt@ll,dtoa@d
 15860  0002B4  C085  F02A         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 15861  0002B8  C086  F02B         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 15862  0002BC  C087  F02C         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 15863  0002C0  C088  F02D         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 15864  0002C4  C089  F02E         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 15865  0002C8  C08A  F02F         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 15866  0002CC  C08B  F030         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 15867  0002D0  ECAD  F00D         	call	_dtoa	;wreg free
 15868  0002D4  C027  F04B         	movff	?_dtoa,?_vfpfcnvrt
 15869  0002D8  C028  F04C         	movff	?_dtoa+1,?_vfpfcnvrt+1
 15870  0002DC  EF13  F004         	goto	l1276
 15871  0002E0                     l8364:
 15872                           
 15873                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 15874  0002E0  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15875  0002E4  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15876  0002E8  CFDE F00D          	movff	postinc2,strncmp@_l
 15877  0002EC  CFDD F00E          	movff	postdec2,strncmp@_l+1
 15878  0002F0  0EAF               	movlw	low STR_67
 15879  0002F2  6E0F               	movwf	strncmp@_r^0,c
 15880  0002F4  0E7D               	movlw	high STR_67
 15881  0002F6  6E10               	movwf	(strncmp@_r+1)^0,c
 15882  0002F8  0E00               	movlw	0
 15883  0002FA  6E12               	movwf	(strncmp@n+1)^0,c
 15884  0002FC  0E02               	movlw	2
 15885  0002FE  6E11               	movwf	strncmp@n^0,c
 15886  000300  EC4A  F025         	call	_strncmp	;wreg free
 15887  000304  500D               	movf	?_strncmp^0,w,c
 15888  000306  100E               	iorwf	(?_strncmp+1)^0,w,c
 15889  000308  B4D8               	btfsc	status,2,c
 15890  00030A  EF89  F001         	goto	u9711
 15891  00030E  EF8B  F001         	goto	u9710
 15892  000312                     u9711:
 15893  000312  EFA6  F001         	goto	l8368
 15894  000316                     u9710:
 15895  000316  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15896  00031A  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15897  00031E  CFDE F00D          	movff	postinc2,strncmp@_l
 15898  000322  CFDD F00E          	movff	postdec2,strncmp@_l+1
 15899  000326  0EB2               	movlw	low STR_71
 15900  000328  6E0F               	movwf	strncmp@_r^0,c
 15901  00032A  0E7D               	movlw	high STR_71
 15902  00032C  6E10               	movwf	(strncmp@_r+1)^0,c
 15903  00032E  0E00               	movlw	0
 15904  000330  6E12               	movwf	(strncmp@n+1)^0,c
 15905  000332  0E02               	movlw	2
 15906  000334  6E11               	movwf	strncmp@n^0,c
 15907  000336  EC4A  F025         	call	_strncmp	;wreg free
 15908  00033A  500D               	movf	?_strncmp^0,w,c
 15909  00033C  100E               	iorwf	(?_strncmp+1)^0,w,c
 15910  00033E  A4D8               	btfss	status,2,c
 15911  000340  EFA4  F001         	goto	u9721
 15912  000344  EFA6  F001         	goto	u9720
 15913  000348                     u9721:
 15914  000348  EF03  F002         	goto	l8374
 15915  00034C                     u9720:
 15916  00034C                     l8368:
 15917                           
 15918                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 15919  00034C  0E02               	movlw	2
 15920  00034E  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15921  000352  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15922  000356  26DE               	addwf	postinc2,f,c
 15923  000358  0E00               	movlw	0
 15924  00035A  22DD               	addwfc	postdec2,f,c
 15925                           
 15926                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 15927  00035C  C04F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 15928  000360  C050  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 15929  000364  CFDF F051          	movff	indf2,??_vfpfcnvrt
 15930  000368  0E04               	movlw	4
 15931  00036A  26DE               	addwf	postinc2,f,c
 15932  00036C  CFDF F052          	movff	indf2,??_vfpfcnvrt+1
 15933  000370  0E00               	movlw	0
 15934  000372  22DD               	addwfc	postdec2,f,c
 15935  000374  C051  FFD9         	movff	??_vfpfcnvrt,fsr2l
 15936  000378  C052  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 15937  00037C  CFDE F053          	movff	postinc2,??_vfpfcnvrt+2
 15938  000380  CFDE F054          	movff	postinc2,??_vfpfcnvrt+3
 15939  000384  CFDE F055          	movff	postinc2,??_vfpfcnvrt+4
 15940  000388  CFDE F056          	movff	postinc2,??_vfpfcnvrt+5
 15941  00038C  C053  F057         	movff	??_vfpfcnvrt+2,??_vfpfcnvrt+6
 15942  000390  C054  F058         	movff	??_vfpfcnvrt+3,??_vfpfcnvrt+7
 15943  000394  C055  F059         	movff	??_vfpfcnvrt+4,??_vfpfcnvrt+8
 15944  000398  C056  F05A         	movff	??_vfpfcnvrt+5,??_vfpfcnvrt+9
 15945  00039C  6A5B               	clrf	(??_vfpfcnvrt+10)^0,c
 15946  00039E  BE5A               	btfsc	(??_vfpfcnvrt+9)^0,7,c
 15947  0003A0  685B               	setf	(??_vfpfcnvrt+10)^0,c
 15948  0003A2  C05B  F05C         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+11
 15949  0003A6  C05B  F05D         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+12
 15950  0003AA  C05B  F05E         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+13
 15951  0003AE  C057  F084         	movff	??_vfpfcnvrt+6,vfpfcnvrt@ll
 15952  0003B2  C058  F085         	movff	??_vfpfcnvrt+7,vfpfcnvrt@ll+1
 15953  0003B6  C059  F086         	movff	??_vfpfcnvrt+8,vfpfcnvrt@ll+2
 15954  0003BA  C05A  F087         	movff	??_vfpfcnvrt+9,vfpfcnvrt@ll+3
 15955  0003BE  C05B  F088         	movff	??_vfpfcnvrt+10,vfpfcnvrt@ll+4
 15956  0003C2  C05C  F089         	movff	??_vfpfcnvrt+11,vfpfcnvrt@ll+5
 15957  0003C6  C05D  F08A         	movff	??_vfpfcnvrt+12,vfpfcnvrt@ll+6
 15958  0003CA  C05E  F08B         	movff	??_vfpfcnvrt+13,vfpfcnvrt@ll+7
 15959  0003CE                     
 15960                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 841:             return dtoa(
      +                          fp, ll);
 15961  0003CE  C04B  F027         	movff	vfpfcnvrt@fp,dtoa@fp
 15962  0003D2  C04C  F028         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 15963  0003D6  C084  F029         	movff	vfpfcnvrt@ll,dtoa@d
 15964  0003DA  C085  F02A         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 15965  0003DE  C086  F02B         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 15966  0003E2  C087  F02C         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 15967  0003E6  C088  F02D         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 15968  0003EA  C089  F02E         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 15969  0003EE  C08A  F02F         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 15970  0003F2  C08B  F030         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 15971  0003F6  ECAD  F00D         	call	_dtoa	;wreg free
 15972  0003FA  C027  F04B         	movff	?_dtoa,?_vfpfcnvrt
 15973  0003FE  C028  F04C         	movff	?_dtoa+1,?_vfpfcnvrt+1
 15974  000402  EF13  F004         	goto	l1276
 15975  000406                     l8374:
 15976                           
 15977                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 15978  000406  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15979  00040A  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15980  00040E  CFDE FFF6          	movff	postinc2,tblptrl
 15981  000412  CFDD FFF7          	movff	postdec2,tblptrh
 15982  000416                     	if	0	;tblptru may be non-zero
 15983  000416                     	endif
 15984  000416                     	if	0	;tblptru may be non-zero
 15985  000416                     	endif
 15986  000416  0008               	tblrd		*
 15987  000418  50F5               	movf	tablat,w,c
 15988  00041A  0A75               	xorlw	117
 15989  00041C  A4D8               	btfss	status,2,c
 15990  00041E  EF13  F002         	goto	u9731
 15991  000422  EF15  F002         	goto	u9730
 15992  000426                     u9731:
 15993  000426  EF57  F002         	goto	l8382
 15994  00042A                     u9730:
 15995  00042A                     
 15996                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 15997  00042A  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15998  00042E  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15999  000432  2ADE               	incf	postinc2,f,c
 16000  000434  0E00               	movlw	0
 16001  000436  22DD               	addwfc	postdec2,f,c
 16002                           
 16003                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 16004  000438  C04F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 16005  00043C  C050  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 16006  000440  CFDF F051          	movff	indf2,??_vfpfcnvrt
 16007  000444  0E02               	movlw	2
 16008  000446  26DE               	addwf	postinc2,f,c
 16009  000448  CFDF F052          	movff	indf2,??_vfpfcnvrt+1
 16010  00044C  0E00               	movlw	0
 16011  00044E  22DD               	addwfc	postdec2,f,c
 16012  000450  C051  FFD9         	movff	??_vfpfcnvrt,fsr2l
 16013  000454  C052  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 16014  000458  CFDE F053          	movff	postinc2,??_vfpfcnvrt+2
 16015  00045C  CFDD F054          	movff	postdec2,??_vfpfcnvrt+3
 16016  000460  C053  F08D         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 16017  000464  C054  F08E         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 16018  000468  0100               	movlb	0	; () banked
 16019  00046A  6B8F               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 16020  00046C  6B90               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 16021  00046E  6B91               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 16022  000470  6B92               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 16023  000472  6B93               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 16024  000474  6B94               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 16025  000476                     
 16026                           ; BSR set to: 0
 16027                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 16028  000476  C04B  F026         	movff	vfpfcnvrt@fp,utoa@fp
 16029  00047A  C04C  F027         	movff	vfpfcnvrt@fp+1,utoa@fp+1
 16030  00047E  C08D  F028         	movff	vfpfcnvrt@llu,utoa@d
 16031  000482  C08E  F029         	movff	vfpfcnvrt@llu+1,utoa@d+1
 16032  000486  C08F  F02A         	movff	vfpfcnvrt@llu+2,utoa@d+2
 16033  00048A  C090  F02B         	movff	vfpfcnvrt@llu+3,utoa@d+3
 16034  00048E  C091  F02C         	movff	vfpfcnvrt@llu+4,utoa@d+4
 16035  000492  C092  F02D         	movff	vfpfcnvrt@llu+5,utoa@d+5
 16036  000496  C093  F02E         	movff	vfpfcnvrt@llu+6,utoa@d+6
 16037  00049A  C094  F02F         	movff	vfpfcnvrt@llu+7,utoa@d+7
 16038  00049E  EC6C  F014         	call	_utoa	;wreg free
 16039  0004A2  C026  F04B         	movff	?_utoa,?_vfpfcnvrt
 16040  0004A6  C027  F04C         	movff	?_utoa+1,?_vfpfcnvrt+1
 16041  0004AA  EF13  F004         	goto	l1276
 16042  0004AE                     l8382:
 16043                           
 16044                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 16045  0004AE  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 16046  0004B2  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 16047  0004B6  CFDE F00D          	movff	postinc2,strncmp@_l
 16048  0004BA  CFDD F00E          	movff	postdec2,strncmp@_l+1
 16049  0004BE  0EB5               	movlw	low STR_76
 16050  0004C0  6E0F               	movwf	strncmp@_r^0,c
 16051  0004C2  0E7D               	movlw	high STR_76
 16052  0004C4  6E10               	movwf	(strncmp@_r+1)^0,c
 16053  0004C6  0E00               	movlw	0
 16054  0004C8  6E12               	movwf	(strncmp@n+1)^0,c
 16055  0004CA  0E02               	movlw	2
 16056  0004CC  6E11               	movwf	strncmp@n^0,c
 16057  0004CE  EC4A  F025         	call	_strncmp	;wreg free
 16058  0004D2  500D               	movf	?_strncmp^0,w,c
 16059  0004D4  100E               	iorwf	(?_strncmp+1)^0,w,c
 16060  0004D6  A4D8               	btfss	status,2,c
 16061  0004D8  EF70  F002         	goto	u9741
 16062  0004DC  EF72  F002         	goto	u9740
 16063  0004E0                     u9741:
 16064  0004E0  EFBB  F002         	goto	l8390
 16065  0004E4                     u9740:
 16066  0004E4                     
 16067                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 16068  0004E4  0E02               	movlw	2
 16069  0004E6  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 16070  0004EA  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 16071  0004EE  26DE               	addwf	postinc2,f,c
 16072  0004F0  0E00               	movlw	0
 16073  0004F2  22DD               	addwfc	postdec2,f,c
 16074                           
 16075                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 16076  0004F4  C04F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 16077  0004F8  C050  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 16078  0004FC  CFDF F051          	movff	indf2,??_vfpfcnvrt
 16079  000500  0E04               	movlw	4
 16080  000502  26DE               	addwf	postinc2,f,c
 16081  000504  CFDF F052          	movff	indf2,??_vfpfcnvrt+1
 16082  000508  0E00               	movlw	0
 16083  00050A  22DD               	addwfc	postdec2,f,c
 16084  00050C  C051  FFD9         	movff	??_vfpfcnvrt,fsr2l
 16085  000510  C052  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 16086  000514  CFDE F053          	movff	postinc2,??_vfpfcnvrt+2
 16087  000518  CFDE F054          	movff	postinc2,??_vfpfcnvrt+3
 16088  00051C  CFDE F055          	movff	postinc2,??_vfpfcnvrt+4
 16089  000520  CFDE F056          	movff	postinc2,??_vfpfcnvrt+5
 16090  000524  5053               	movf	(??_vfpfcnvrt+2)^0,w,c
 16091  000526  0100               	movlb	0	; () banked
 16092  000528  6F8D               	movwf	vfpfcnvrt@llu& (0+255),b
 16093  00052A  5054               	movf	(??_vfpfcnvrt+3)^0,w,c
 16094  00052C  6F8E               	movwf	(vfpfcnvrt@llu+1)& (0+255),b
 16095  00052E  5055               	movf	(??_vfpfcnvrt+4)^0,w,c
 16096  000530  6F8F               	movwf	(vfpfcnvrt@llu+2)& (0+255),b
 16097  000532  5056               	movf	(??_vfpfcnvrt+5)^0,w,c
 16098  000534  6F90               	movwf	(vfpfcnvrt@llu+3)& (0+255),b
 16099  000536  6B91               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 16100  000538  6B92               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 16101  00053A  6B93               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 16102  00053C  6B94               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 16103  00053E                     
 16104                           ; BSR set to: 0
 16105                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1197:             return utoa
      +                          (fp, llu);
 16106  00053E  C04B  F026         	movff	vfpfcnvrt@fp,utoa@fp
 16107  000542  C04C  F027         	movff	vfpfcnvrt@fp+1,utoa@fp+1
 16108  000546  C08D  F028         	movff	vfpfcnvrt@llu,utoa@d
 16109  00054A  C08E  F029         	movff	vfpfcnvrt@llu+1,utoa@d+1
 16110  00054E  C08F  F02A         	movff	vfpfcnvrt@llu+2,utoa@d+2
 16111  000552  C090  F02B         	movff	vfpfcnvrt@llu+3,utoa@d+3
 16112  000556  C091  F02C         	movff	vfpfcnvrt@llu+4,utoa@d+4
 16113  00055A  C092  F02D         	movff	vfpfcnvrt@llu+5,utoa@d+5
 16114  00055E  C093  F02E         	movff	vfpfcnvrt@llu+6,utoa@d+6
 16115  000562  C094  F02F         	movff	vfpfcnvrt@llu+7,utoa@d+7
 16116  000566  EC6C  F014         	call	_utoa	;wreg free
 16117  00056A  C026  F04B         	movff	?_utoa,?_vfpfcnvrt
 16118  00056E  C027  F04C         	movff	?_utoa+1,?_vfpfcnvrt+1
 16119  000572  EF13  F004         	goto	l1276
 16120  000576                     l8390:
 16121                           
 16122                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 16123  000576  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 16124  00057A  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 16125  00057E  CFDE FFF6          	movff	postinc2,tblptrl
 16126  000582  CFDD FFF7          	movff	postdec2,tblptrh
 16127  000586                     	if	0	;tblptru may be non-zero
 16128  000586                     	endif
 16129  000586                     	if	0	;tblptru may be non-zero
 16130  000586                     	endif
 16131  000586  0008               	tblrd		*
 16132  000588  50F5               	movf	tablat,w,c
 16133  00058A  0A78               	xorlw	120
 16134  00058C  B4D8               	btfsc	status,2,c
 16135  00058E  EFCB  F002         	goto	u9751
 16136  000592  EFCD  F002         	goto	u9750
 16137  000596                     u9751:
 16138  000596  EFDF  F002         	goto	l8394
 16139  00059A                     u9750:
 16140  00059A  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 16141  00059E  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 16142  0005A2  CFDE FFF6          	movff	postinc2,tblptrl
 16143  0005A6  CFDD FFF7          	movff	postdec2,tblptrh
 16144  0005AA                     	if	0	;tblptru may be non-zero
 16145  0005AA                     	endif
 16146  0005AA                     	if	0	;tblptru may be non-zero
 16147  0005AA                     	endif
 16148  0005AA  0008               	tblrd		*
 16149  0005AC  50F5               	movf	tablat,w,c
 16150  0005AE  0A58               	xorlw	88
 16151  0005B0  A4D8               	btfss	status,2,c
 16152  0005B2  EFDD  F002         	goto	u9761
 16153  0005B6  EFDF  F002         	goto	u9760
 16154  0005BA                     u9761:
 16155  0005BA  EF2E  F003         	goto	l8404
 16156  0005BE                     u9760:
 16157  0005BE                     l8394:
 16158                           
 16159                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 16160  0005BE  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 16161  0005C2  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 16162  0005C6  CFDE FFF6          	movff	postinc2,tblptrl
 16163  0005CA  CFDD FFF7          	movff	postdec2,tblptrh
 16164  0005CE                     	if	0	;tblptru may be non-zero
 16165  0005CE                     	endif
 16166  0005CE                     	if	0	;tblptru may be non-zero
 16167  0005CE                     	endif
 16168  0005CE  0008               	tblrd		*
 16169  0005D0  CFF5 F08C          	movff	tablat,vfpfcnvrt@c
 16170  0005D4                     
 16171                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 16172  0005D4  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 16173  0005D8  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 16174  0005DC  2ADE               	incf	postinc2,f,c
 16175  0005DE  0E00               	movlw	0
 16176  0005E0  22DD               	addwfc	postdec2,f,c
 16177  0005E2                     
 16178                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 16179  0005E2  C04F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 16180  0005E6  C050  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 16181  0005EA  CFDF F051          	movff	indf2,??_vfpfcnvrt
 16182  0005EE  0E02               	movlw	2
 16183  0005F0  26DE               	addwf	postinc2,f,c
 16184  0005F2  CFDF F052          	movff	indf2,??_vfpfcnvrt+1
 16185  0005F6  0E00               	movlw	0
 16186  0005F8  22DD               	addwfc	postdec2,f,c
 16187  0005FA  C051  FFD9         	movff	??_vfpfcnvrt,fsr2l
 16188  0005FE  C052  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 16189  000602  CFDE F053          	movff	postinc2,??_vfpfcnvrt+2
 16190  000606  CFDD F054          	movff	postdec2,??_vfpfcnvrt+3
 16191  00060A  C053  F08D         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 16192  00060E  C054  F08E         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 16193  000612  0100               	movlb	0	; () banked
 16194  000614  6B8F               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 16195  000616  6B90               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 16196  000618  6B91               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 16197  00061A  6B92               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 16198  00061C  6B93               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 16199  00061E  6B94               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 16200  000620                     
 16201                           ; BSR set to: 0
 16202                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 16203  000620  C04B  F024         	movff	vfpfcnvrt@fp,xtoa@fp
 16204  000624  C04C  F025         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 16205  000628  C08D  F026         	movff	vfpfcnvrt@llu,xtoa@d
 16206  00062C  C08E  F027         	movff	vfpfcnvrt@llu+1,xtoa@d+1
 16207  000630  C08F  F028         	movff	vfpfcnvrt@llu+2,xtoa@d+2
 16208  000634  C090  F029         	movff	vfpfcnvrt@llu+3,xtoa@d+3
 16209  000638  C091  F02A         	movff	vfpfcnvrt@llu+4,xtoa@d+4
 16210  00063C  C092  F02B         	movff	vfpfcnvrt@llu+5,xtoa@d+5
 16211  000640  C093  F02C         	movff	vfpfcnvrt@llu+6,xtoa@d+6
 16212  000644  C094  F02D         	movff	vfpfcnvrt@llu+7,xtoa@d+7
 16213  000648  C08C  F02E         	movff	vfpfcnvrt@c,xtoa@x
 16214  00064C  EC1C  F00F         	call	_xtoa	;wreg free
 16215  000650  C024  F04B         	movff	?_xtoa,?_vfpfcnvrt
 16216  000654  C025  F04C         	movff	?_xtoa+1,?_vfpfcnvrt+1
 16217  000658  EF13  F004         	goto	l1276
 16218  00065C                     l8404:
 16219                           
 16220                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 16221  00065C  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 16222  000660  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 16223  000664  CFDE F00D          	movff	postinc2,strncmp@_l
 16224  000668  CFDD F00E          	movff	postdec2,strncmp@_l+1
 16225  00066C  0EB8               	movlw	low STR_81
 16226  00066E  6E0F               	movwf	strncmp@_r^0,c
 16227  000670  0E7D               	movlw	high STR_81
 16228  000672  6E10               	movwf	(strncmp@_r+1)^0,c
 16229  000674  0E00               	movlw	0
 16230  000676  6E12               	movwf	(strncmp@n+1)^0,c
 16231  000678  0E02               	movlw	2
 16232  00067A  6E11               	movwf	strncmp@n^0,c
 16233  00067C  EC4A  F025         	call	_strncmp	;wreg free
 16234  000680  500D               	movf	?_strncmp^0,w,c
 16235  000682  100E               	iorwf	(?_strncmp+1)^0,w,c
 16236  000684  B4D8               	btfsc	status,2,c
 16237  000686  EF47  F003         	goto	u9771
 16238  00068A  EF49  F003         	goto	u9770
 16239  00068E                     u9771:
 16240  00068E  EF64  F003         	goto	l8408
 16241  000692                     u9770:
 16242  000692  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 16243  000696  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 16244  00069A  CFDE F00D          	movff	postinc2,strncmp@_l
 16245  00069E  CFDD F00E          	movff	postdec2,strncmp@_l+1
 16246  0006A2  0EAC               	movlw	low STR_85
 16247  0006A4  6E0F               	movwf	strncmp@_r^0,c
 16248  0006A6  0E7D               	movlw	high STR_85
 16249  0006A8  6E10               	movwf	(strncmp@_r+1)^0,c
 16250  0006AA  0E00               	movlw	0
 16251  0006AC  6E12               	movwf	(strncmp@n+1)^0,c
 16252  0006AE  0E02               	movlw	2
 16253  0006B0  6E11               	movwf	strncmp@n^0,c
 16254  0006B2  EC4A  F025         	call	_strncmp	;wreg free
 16255  0006B6  500D               	movf	?_strncmp^0,w,c
 16256  0006B8  100E               	iorwf	(?_strncmp+1)^0,w,c
 16257  0006BA  A4D8               	btfss	status,2,c
 16258  0006BC  EF62  F003         	goto	u9781
 16259  0006C0  EF64  F003         	goto	u9780
 16260  0006C4                     u9781:
 16261  0006C4  EFC2  F003         	goto	l8418
 16262  0006C8                     u9780:
 16263  0006C8                     l8408:
 16264                           
 16265                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 16266  0006C8  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 16267  0006CC  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 16268  0006D0  CFDE F051          	movff	postinc2,??_vfpfcnvrt
 16269  0006D4  CFDD F052          	movff	postdec2,??_vfpfcnvrt+1
 16270  0006D8  0E01               	movlw	1
 16271  0006DA  2651               	addwf	??_vfpfcnvrt^0,f,c
 16272  0006DC  0E00               	movlw	0
 16273  0006DE  2252               	addwfc	(??_vfpfcnvrt+1)^0,f,c
 16274  0006E0  C051  FFF6         	movff	??_vfpfcnvrt,tblptrl
 16275  0006E4  C052  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
 16276  0006E8                     	if	0	;tblptru may be non-zero
 16277  0006E8                     	endif
 16278  0006E8                     	if	0	;tblptru may be non-zero
 16279  0006E8                     	endif
 16280  0006E8  0008               	tblrd		*
 16281  0006EA  CFF5 F08C          	movff	tablat,vfpfcnvrt@c
 16282  0006EE                     
 16283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 16284  0006EE  0E02               	movlw	2
 16285  0006F0  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 16286  0006F4  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 16287  0006F8  26DE               	addwf	postinc2,f,c
 16288  0006FA  0E00               	movlw	0
 16289  0006FC  22DD               	addwfc	postdec2,f,c
 16290  0006FE                     
 16291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 16292  0006FE  C04F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 16293  000702  C050  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 16294  000706  CFDF F051          	movff	indf2,??_vfpfcnvrt
 16295  00070A  0E04               	movlw	4
 16296  00070C  26DE               	addwf	postinc2,f,c
 16297  00070E  CFDF F052          	movff	indf2,??_vfpfcnvrt+1
 16298  000712  0E00               	movlw	0
 16299  000714  22DD               	addwfc	postdec2,f,c
 16300  000716  C051  FFD9         	movff	??_vfpfcnvrt,fsr2l
 16301  00071A  C052  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 16302  00071E  CFDE F053          	movff	postinc2,??_vfpfcnvrt+2
 16303  000722  CFDE F054          	movff	postinc2,??_vfpfcnvrt+3
 16304  000726  CFDE F055          	movff	postinc2,??_vfpfcnvrt+4
 16305  00072A  CFDE F056          	movff	postinc2,??_vfpfcnvrt+5
 16306  00072E  5053               	movf	(??_vfpfcnvrt+2)^0,w,c
 16307  000730  0100               	movlb	0	; () banked
 16308  000732  6F8D               	movwf	vfpfcnvrt@llu& (0+255),b
 16309  000734  5054               	movf	(??_vfpfcnvrt+3)^0,w,c
 16310  000736  6F8E               	movwf	(vfpfcnvrt@llu+1)& (0+255),b
 16311  000738  5055               	movf	(??_vfpfcnvrt+4)^0,w,c
 16312  00073A  6F8F               	movwf	(vfpfcnvrt@llu+2)& (0+255),b
 16313  00073C  5056               	movf	(??_vfpfcnvrt+5)^0,w,c
 16314  00073E  6F90               	movwf	(vfpfcnvrt@llu+3)& (0+255),b
 16315  000740  6B91               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 16316  000742  6B92               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 16317  000744  6B93               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 16318  000746  6B94               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 16319  000748                     
 16320                           ; BSR set to: 0
 16321                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1292:             return xtoa
      +                          (fp, llu, c);
 16322  000748  C04B  F024         	movff	vfpfcnvrt@fp,xtoa@fp
 16323  00074C  C04C  F025         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 16324  000750  C08D  F026         	movff	vfpfcnvrt@llu,xtoa@d
 16325  000754  C08E  F027         	movff	vfpfcnvrt@llu+1,xtoa@d+1
 16326  000758  C08F  F028         	movff	vfpfcnvrt@llu+2,xtoa@d+2
 16327  00075C  C090  F029         	movff	vfpfcnvrt@llu+3,xtoa@d+3
 16328  000760  C091  F02A         	movff	vfpfcnvrt@llu+4,xtoa@d+4
 16329  000764  C092  F02B         	movff	vfpfcnvrt@llu+5,xtoa@d+5
 16330  000768  C093  F02C         	movff	vfpfcnvrt@llu+6,xtoa@d+6
 16331  00076C  C094  F02D         	movff	vfpfcnvrt@llu+7,xtoa@d+7
 16332  000770  C08C  F02E         	movff	vfpfcnvrt@c,xtoa@x
 16333  000774  EC1C  F00F         	call	_xtoa	;wreg free
 16334  000778  C024  F04B         	movff	?_xtoa,?_vfpfcnvrt
 16335  00077C  C025  F04C         	movff	?_xtoa+1,?_vfpfcnvrt+1
 16336  000780  EF13  F004         	goto	l1276
 16337  000784                     l8418:
 16338                           
 16339                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 16340  000784  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 16341  000788  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 16342  00078C  CFDE FFF6          	movff	postinc2,tblptrl
 16343  000790  CFDD FFF7          	movff	postdec2,tblptrh
 16344  000794                     	if	0	;tblptru may be non-zero
 16345  000794                     	endif
 16346  000794                     	if	0	;tblptru may be non-zero
 16347  000794                     	endif
 16348  000794  0008               	tblrd		*
 16349  000796  50F5               	movf	tablat,w,c
 16350  000798  0A25               	xorlw	37
 16351  00079A  A4D8               	btfss	status,2,c
 16352  00079C  EFD2  F003         	goto	u9791
 16353  0007A0  EFD4  F003         	goto	u9790
 16354  0007A4                     u9791:
 16355  0007A4  EFEB  F003         	goto	l8428
 16356  0007A8                     u9790:
 16357  0007A8                     
 16358                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 16359  0007A8  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 16360  0007AC  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 16361  0007B0  2ADE               	incf	postinc2,f,c
 16362  0007B2  0E00               	movlw	0
 16363  0007B4  22DD               	addwfc	postdec2,f,c
 16364  0007B6                     
 16365                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 16366  0007B6  0E00               	movlw	0
 16367  0007B8  6E0F               	movwf	(fputc@c+1)^0,c
 16368  0007BA  0E25               	movlw	37
 16369  0007BC  6E0E               	movwf	fputc@c^0,c
 16370  0007BE  C04B  F010         	movff	vfpfcnvrt@fp,fputc@fp
 16371  0007C2  C04C  F011         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 16372  0007C6  EC10  F033         	call	_fputc	;wreg free
 16373  0007CA                     l8424:
 16374                           
 16375                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 16376  0007CA  0E00               	movlw	0
 16377  0007CC  6E4C               	movwf	(?_vfpfcnvrt+1)^0,c
 16378  0007CE  0E01               	movlw	1
 16379  0007D0  6E4B               	movwf	?_vfpfcnvrt^0,c
 16380  0007D2  EF13  F004         	goto	l1276
 16381  0007D6                     l8428:
 16382                           
 16383                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 16384  0007D6  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 16385  0007DA  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 16386  0007DE  2ADE               	incf	postinc2,f,c
 16387  0007E0  0E00               	movlw	0
 16388  0007E2  22DD               	addwfc	postdec2,f,c
 16389  0007E4                     
 16390                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 16391  0007E4  0E00               	movlw	0
 16392  0007E6  6E4C               	movwf	(?_vfpfcnvrt+1)^0,c
 16393  0007E8  0E00               	movlw	0
 16394  0007EA  6E4B               	movwf	?_vfpfcnvrt^0,c
 16395  0007EC  EF13  F004         	goto	l1276
 16396  0007F0                     l8434:
 16397                           
 16398                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 16399  0007F0  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 16400  0007F4  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 16401  0007F8  CFDE FFF6          	movff	postinc2,tblptrl
 16402  0007FC  CFDD FFF7          	movff	postdec2,tblptrh
 16403  000800                     	if	0	;tblptru may be non-zero
 16404  000800                     	endif
 16405  000800                     	if	0	;tblptru may be non-zero
 16406  000800                     	endif
 16407  000800  0008               	tblrd		*
 16408  000802  50F5               	movf	tablat,w,c
 16409  000804  6E0E               	movwf	fputc@c^0,c
 16410  000806  6A0F               	clrf	(fputc@c+1)^0,c
 16411  000808  C04B  F010         	movff	vfpfcnvrt@fp,fputc@fp
 16412  00080C  C04C  F011         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 16413  000810  EC10  F033         	call	_fputc	;wreg free
 16414  000814                     
 16415                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 16416  000814  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 16417  000818  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 16418  00081C  2ADE               	incf	postinc2,f,c
 16419  00081E  0E00               	movlw	0
 16420  000820  22DD               	addwfc	postdec2,f,c
 16421  000822  EFE5  F003         	goto	l8424
 16422  000826                     l1276:
 16423  000826  0012               	return		;funcret
 16424  000828                     __end_of_vfpfcnvrt:
 16425                           	opt callstack 0
 16426                           
 16427 ;; *************** function _xtoa *****************
 16428 ;; Defined at:
 16429 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16430 ;; Parameters:    Size  Location     Type
 16431 ;;  fp              2   35[COMRAM] PTR struct _IO_FILE
 16432 ;;		 -> NULL(0), 
 16433 ;;  d               8   37[COMRAM] unsigned long long 
 16434 ;;  x               1   45[COMRAM] unsigned char 
 16435 ;; Auto vars:     Size  Location     Type
 16436 ;;  n               8   62[COMRAM] unsigned long long 
 16437 ;;  c               2   72[COMRAM] int 
 16438 ;;  i               2   70[COMRAM] int 
 16439 ;;  w               2   60[COMRAM] int 
 16440 ;;  p               2   58[COMRAM] int 
 16441 ;; Return value:  Size  Location     Type
 16442 ;;                  2   35[COMRAM] int 
 16443 ;; Registers used:
 16444 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16445 ;; Tracked objects:
 16446 ;;		On entry : 0/0
 16447 ;;		On exit  : 0/0
 16448 ;;		Unchanged: 0/0
 16449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16450 ;;      Params:        11       0       0       0       0       0       0
 16451 ;;      Locals:        20       0       0       0       0       0       0
 16452 ;;      Temps:          8       0       0       0       0       0       0
 16453 ;;      Totals:        39       0       0       0       0       0       0
 16454 ;;Total ram usage:       39 bytes
 16455 ;; Hardware stack levels used:    1
 16456 ;; Hardware stack levels required when called:    6
 16457 ;; This function calls:
 16458 ;;		_isalpha
 16459 ;;		_isupper
 16460 ;;		_pad
 16461 ;;		_toupper
 16462 ;; This function is called by:
 16463 ;;		_vfpfcnvrt
 16464 ;; This function uses a non-reentrant model
 16465 ;;
 16466                           
 16467                           	psect	text62
 16468  001E38                     __ptext62:
 16469                           	opt callstack 0
 16470  001E38                     _xtoa:
 16471                           	opt callstack 15
 16472  001E38                     
 16473                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 16474  001E38  BE68               	btfsc	(_prec+1)^0,7,c
 16475  001E3A  EF21  F00F         	goto	u9391
 16476  001E3E  EF23  F00F         	goto	u9390
 16477  001E42                     u9391:
 16478  001E42  EF24  F00F         	goto	l8214
 16479  001E46                     u9390:
 16480  001E46                     
 16481                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 16482  001E46  9269               	bcf	_flags^0,1,c
 16483  001E48                     l8214:
 16484                           
 16485                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 16486  001E48  BE68               	btfsc	(_prec+1)^0,7,c
 16487  001E4A  EF31  F00F         	goto	u9400
 16488  001E4E  5068               	movf	(_prec+1)^0,w,c
 16489  001E50  E106               	bnz	u9401
 16490  001E52  0467               	decf	_prec^0,w,c
 16491  001E54  B0D8               	btfsc	status,0,c
 16492  001E56  EF2F  F00F         	goto	u9401
 16493  001E5A  EF31  F00F         	goto	u9400
 16494  001E5E                     u9401:
 16495  001E5E  EF37  F00F         	goto	l1222
 16496  001E62                     u9400:
 16497  001E62  0E00               	movlw	0
 16498  001E64  6E3C               	movwf	(xtoa@p+1)^0,c
 16499  001E66  0E01               	movlw	1
 16500  001E68  6E3B               	movwf	xtoa@p^0,c
 16501  001E6A  EF3B  F00F         	goto	l1224
 16502  001E6E                     l1222:
 16503  001E6E  C067  F03B         	movff	_prec,xtoa@p
 16504  001E72  C068  F03C         	movff	_prec+1,xtoa@p+1
 16505  001E76                     l1224:
 16506                           
 16507                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 16508  001E76  C198  F03D         	movff	_width,xtoa@w
 16509  001E7A  C199  F03E         	movff	_width+1,xtoa@w+1
 16510                           
 16511                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 16512  001E7E  A869               	btfss	_flags^0,4,c
 16513  001E80  EF44  F00F         	goto	u9411
 16514  001E84  EF46  F00F         	goto	u9410
 16515  001E88                     u9411:
 16516  001E88  EF4A  F00F         	goto	l8220
 16517  001E8C                     u9410:
 16518  001E8C                     
 16519                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 16520  001E8C  0EFE               	movlw	254
 16521  001E8E  263D               	addwf	xtoa@w^0,f,c
 16522  001E90  0EFF               	movlw	255
 16523  001E92  223E               	addwfc	(xtoa@w+1)^0,f,c
 16524  001E94                     l8220:
 16525                           
 16526                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 16527  001E94  C026  F03F         	movff	xtoa@d,xtoa@n
 16528  001E98  C027  F040         	movff	xtoa@d+1,xtoa@n+1
 16529  001E9C  C028  F041         	movff	xtoa@d+2,xtoa@n+2
 16530  001EA0  C029  F042         	movff	xtoa@d+3,xtoa@n+3
 16531  001EA4  C02A  F043         	movff	xtoa@d+4,xtoa@n+4
 16532  001EA8  C02B  F044         	movff	xtoa@d+5,xtoa@n+5
 16533  001EAC  C02C  F045         	movff	xtoa@d+6,xtoa@n+6
 16534  001EB0  C02D  F046         	movff	xtoa@d+7,xtoa@n+7
 16535  001EB4                     
 16536                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 16537  001EB4  0E00               	movlw	0
 16538  001EB6  6E48               	movwf	(xtoa@i+1)^0,c
 16539  001EB8  0E1F               	movlw	31
 16540  001EBA  6E47               	movwf	xtoa@i^0,c
 16541  001EBC                     
 16542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 16543  001EBC  0E00               	movlw	0
 16544  001EBE  0102               	movlb	2	; () banked
 16545  001EC0  6F88               	movwf	(_dbuf+31)& (0+255),b
 16546                           
 16547                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16548  001EC2  EF16  F010         	goto	l8256
 16549  001EC6                     l8226:
 16550                           
 16551                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 16552  001EC6  0647               	decf	xtoa@i^0,f,c
 16553  001EC8  A0D8               	btfss	status,0,c
 16554  001ECA  0648               	decf	(xtoa@i+1)^0,f,c
 16555  001ECC                     
 16556                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 16557  001ECC  0E0F               	movlw	15
 16558  001ECE  143F               	andwf	xtoa@n^0,w,c
 16559  001ED0  6E49               	movwf	xtoa@c^0,c
 16560  001ED2  6A4A               	clrf	(xtoa@c+1)^0,c
 16561  001ED4                     
 16562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 16563  001ED4  BE4A               	btfsc	(xtoa@c+1)^0,7,c
 16564  001ED6  EF76  F00F         	goto	u9421
 16565  001EDA  504A               	movf	(xtoa@c+1)^0,w,c
 16566  001EDC  E109               	bnz	u9420
 16567  001EDE  0E0A               	movlw	10
 16568  001EE0  5C49               	subwf	xtoa@c^0,w,c
 16569  001EE2  A0D8               	btfss	status,0,c
 16570  001EE4  EF76  F00F         	goto	u9421
 16571  001EE8  EF78  F00F         	goto	u9420
 16572  001EEC                     u9421:
 16573  001EEC  EF80  F00F         	goto	l8234
 16574  001EF0                     u9420:
 16575  001EF0  0E57               	movlw	87
 16576  001EF2  2449               	addwf	xtoa@c^0,w,c
 16577  001EF4  6E49               	movwf	xtoa@c^0,c
 16578  001EF6  0E00               	movlw	0
 16579  001EF8  204A               	addwfc	(xtoa@c+1)^0,w,c
 16580  001EFA  6E4A               	movwf	(xtoa@c+1)^0,c
 16581  001EFC  EF86  F00F         	goto	l1231
 16582  001F00                     l8234:
 16583  001F00  0E30               	movlw	48
 16584  001F02  2449               	addwf	xtoa@c^0,w,c
 16585  001F04  6E49               	movwf	xtoa@c^0,c
 16586  001F06  0E00               	movlw	0
 16587  001F08  204A               	addwfc	(xtoa@c+1)^0,w,c
 16588  001F0A  6E4A               	movwf	(xtoa@c+1)^0,c
 16589  001F0C                     l1231:
 16590  001F0C  0EBF               	movlw	191
 16591  001F0E  6E2F               	movwf	??_xtoa^0,c
 16592  001F10  0EFF               	movlw	255
 16593  001F12  6E30               	movwf	(??_xtoa+1)^0,c
 16594  001F14  502E               	movf	xtoa@x^0,w,c
 16595  001F16  6E31               	movwf	(??_xtoa+2)^0,c
 16596  001F18  6A32               	clrf	(??_xtoa+3)^0,c
 16597  001F1A  502F               	movf	??_xtoa^0,w,c
 16598  001F1C  2631               	addwf	(??_xtoa+2)^0,f,c
 16599  001F1E  5030               	movf	(??_xtoa+1)^0,w,c
 16600  001F20  2232               	addwfc	(??_xtoa+3)^0,f,c
 16601  001F22  5032               	movf	(??_xtoa+3)^0,w,c
 16602  001F24  E10A               	bnz	u9430
 16603  001F26  0E1A               	movlw	26
 16604  001F28  5C31               	subwf	(??_xtoa+2)^0,w,c
 16605  001F2A  A0D8               	btfss	status,0,c
 16606  001F2C  EF9A  F00F         	goto	u9431
 16607  001F30  EF9D  F00F         	goto	u9430
 16608  001F34                     u9431:
 16609  001F34  0E01               	movlw	1
 16610  001F36  EF9E  F00F         	goto	u9440
 16611  001F3A                     u9430:
 16612  001F3A  0E00               	movlw	0
 16613  001F3C                     u9440:
 16614  001F3C  6E37               	movwf	_xtoa$3265^0,c
 16615  001F3E  6A38               	clrf	(_xtoa$3265+1)^0,c
 16616  001F40  5037               	movf	_xtoa$3265^0,w,c
 16617  001F42  1038               	iorwf	(_xtoa$3265+1)^0,w,c
 16618  001F44  B4D8               	btfsc	status,2,c
 16619  001F46  EFA7  F00F         	goto	u9451
 16620  001F4A  EFA9  F00F         	goto	u9450
 16621  001F4E                     u9451:
 16622  001F4E  EFD9  F00F         	goto	l8248
 16623  001F52                     u9450:
 16624  001F52  0E9F               	movlw	159
 16625  001F54  6E2F               	movwf	??_xtoa^0,c
 16626  001F56  0EFF               	movlw	255
 16627  001F58  6E30               	movwf	(??_xtoa+1)^0,c
 16628  001F5A  0E20               	movlw	32
 16629  001F5C  1049               	iorwf	xtoa@c^0,w,c
 16630  001F5E  6E31               	movwf	(??_xtoa+2)^0,c
 16631  001F60  0E00               	movlw	0
 16632  001F62  104A               	iorwf	(xtoa@c+1)^0,w,c
 16633  001F64  6E32               	movwf	(??_xtoa+3)^0,c
 16634  001F66  502F               	movf	??_xtoa^0,w,c
 16635  001F68  2631               	addwf	(??_xtoa+2)^0,f,c
 16636  001F6A  5030               	movf	(??_xtoa+1)^0,w,c
 16637  001F6C  2232               	addwfc	(??_xtoa+3)^0,f,c
 16638  001F6E  5032               	movf	(??_xtoa+3)^0,w,c
 16639  001F70  E10A               	bnz	u9460
 16640  001F72  0E1A               	movlw	26
 16641  001F74  5C31               	subwf	(??_xtoa+2)^0,w,c
 16642  001F76  A0D8               	btfss	status,0,c
 16643  001F78  EFC0  F00F         	goto	u9461
 16644  001F7C  EFC3  F00F         	goto	u9460
 16645  001F80                     u9461:
 16646  001F80  0E01               	movlw	1
 16647  001F82  EFC4  F00F         	goto	u9470
 16648  001F86                     u9460:
 16649  001F86  0E00               	movlw	0
 16650  001F88                     u9470:
 16651  001F88  6E39               	movwf	_xtoa$3266^0,c
 16652  001F8A  6A3A               	clrf	(_xtoa$3266+1)^0,c
 16653  001F8C  5039               	movf	_xtoa$3266^0,w,c
 16654  001F8E  103A               	iorwf	(_xtoa$3266+1)^0,w,c
 16655  001F90  B4D8               	btfsc	status,2,c
 16656  001F92  EFCD  F00F         	goto	u9481
 16657  001F96  EFCF  F00F         	goto	u9480
 16658  001F9A                     u9481:
 16659  001F9A  EFD9  F00F         	goto	l8248
 16660  001F9E                     u9480:
 16661  001F9E                     
 16662                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 16663  001F9E  C049  F013         	movff	xtoa@c,toupper@c
 16664  001FA2  C04A  F014         	movff	xtoa@c+1,toupper@c+1
 16665  001FA6  EC9F  F02E         	call	_toupper	;wreg free
 16666  001FAA  C013  F049         	movff	?_toupper,xtoa@c
 16667  001FAE  C014  F04A         	movff	?_toupper+1,xtoa@c+1
 16668  001FB2                     l8248:
 16669                           
 16670                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 16671  001FB2  0E69               	movlw	low _dbuf
 16672  001FB4  2447               	addwf	xtoa@i^0,w,c
 16673  001FB6  6ED9               	movwf	fsr2l,c
 16674  001FB8  0E02               	movlw	high _dbuf
 16675  001FBA  2048               	addwfc	(xtoa@i+1)^0,w,c
 16676  001FBC  6EDA               	movwf	fsr2h,c
 16677  001FBE  C049  FFDF         	movff	xtoa@c,indf2
 16678  001FC2                     
 16679                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 16680  001FC2  063B               	decf	xtoa@p^0,f,c
 16681  001FC4  A0D8               	btfss	status,0,c
 16682  001FC6  063C               	decf	(xtoa@p+1)^0,f,c
 16683  001FC8                     
 16684                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 16685  001FC8  063D               	decf	xtoa@w^0,f,c
 16686  001FCA  A0D8               	btfss	status,0,c
 16687  001FCC  063E               	decf	(xtoa@w+1)^0,f,c
 16688  001FCE                     
 16689                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 16690  001FCE  C03F  F02F         	movff	xtoa@n,??_xtoa
 16691  001FD2  C040  F030         	movff	xtoa@n+1,??_xtoa+1
 16692  001FD6  C041  F031         	movff	xtoa@n+2,??_xtoa+2
 16693  001FDA  C042  F032         	movff	xtoa@n+3,??_xtoa+3
 16694  001FDE  C043  F033         	movff	xtoa@n+4,??_xtoa+4
 16695  001FE2  C044  F034         	movff	xtoa@n+5,??_xtoa+5
 16696  001FE6  C045  F035         	movff	xtoa@n+6,??_xtoa+6
 16697  001FEA  C046  F036         	movff	xtoa@n+7,??_xtoa+7
 16698  001FEE  0E05               	movlw	5
 16699  001FF0  EF03  F010         	goto	u9490
 16700  001FF4                     u9495:
 16701  001FF4  90D8               	bcf	status,0,c
 16702  001FF6  3236               	rrcf	(??_xtoa+7)^0,f,c
 16703  001FF8  3235               	rrcf	(??_xtoa+6)^0,f,c
 16704  001FFA  3234               	rrcf	(??_xtoa+5)^0,f,c
 16705  001FFC  3233               	rrcf	(??_xtoa+4)^0,f,c
 16706  001FFE  3232               	rrcf	(??_xtoa+3)^0,f,c
 16707  002000  3231               	rrcf	(??_xtoa+2)^0,f,c
 16708  002002  3230               	rrcf	(??_xtoa+1)^0,f,c
 16709  002004  322F               	rrcf	??_xtoa^0,f,c
 16710  002006                     u9490:
 16711  002006  2EE8               	decfsz	wreg,f,c
 16712  002008  EFFA  F00F         	goto	u9495
 16713  00200C  C02F  F03F         	movff	??_xtoa,xtoa@n
 16714  002010  C030  F040         	movff	??_xtoa+1,xtoa@n+1
 16715  002014  C031  F041         	movff	??_xtoa+2,xtoa@n+2
 16716  002018  C032  F042         	movff	??_xtoa+3,xtoa@n+3
 16717  00201C  C033  F043         	movff	??_xtoa+4,xtoa@n+4
 16718  002020  C034  F044         	movff	??_xtoa+5,xtoa@n+5
 16719  002024  C035  F045         	movff	??_xtoa+6,xtoa@n+6
 16720  002028  C036  F046         	movff	??_xtoa+7,xtoa@n+7
 16721  00202C                     l8256:
 16722                           
 16723                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16724  00202C  BE48               	btfsc	(xtoa@i+1)^0,7,c
 16725  00202E  EF22  F010         	goto	u9501
 16726  002032  5048               	movf	(xtoa@i+1)^0,w,c
 16727  002034  E109               	bnz	u9500
 16728  002036  0E02               	movlw	2
 16729  002038  5C47               	subwf	xtoa@i^0,w,c
 16730  00203A  A0D8               	btfss	status,0,c
 16731  00203C  EF22  F010         	goto	u9501
 16732  002040  EF24  F010         	goto	u9500
 16733  002044                     u9501:
 16734  002044  EF54  F010         	goto	l1245
 16735  002048                     u9500:
 16736  002048  503F               	movf	xtoa@n^0,w,c
 16737  00204A  1040               	iorwf	(xtoa@n+1)^0,w,c
 16738  00204C  1041               	iorwf	(xtoa@n+2)^0,w,c
 16739  00204E  1042               	iorwf	(xtoa@n+3)^0,w,c
 16740  002050  1043               	iorwf	(xtoa@n+4)^0,w,c
 16741  002052  1044               	iorwf	(xtoa@n+5)^0,w,c
 16742  002054  1045               	iorwf	(xtoa@n+6)^0,w,c
 16743  002056  1046               	iorwf	(xtoa@n+7)^0,w,c
 16744  002058  A4D8               	btfss	status,2,c
 16745  00205A  EF31  F010         	goto	u9511
 16746  00205E  EF33  F010         	goto	u9510
 16747  002062                     u9511:
 16748  002062  EF63  F00F         	goto	l8226
 16749  002066                     u9510:
 16750  002066  BE3C               	btfsc	(xtoa@p+1)^0,7,c
 16751  002068  EF40  F010         	goto	u9520
 16752  00206C  503C               	movf	(xtoa@p+1)^0,w,c
 16753  00206E  E106               	bnz	u9521
 16754  002070  043B               	decf	xtoa@p^0,w,c
 16755  002072  B0D8               	btfsc	status,0,c
 16756  002074  EF3E  F010         	goto	u9521
 16757  002078  EF40  F010         	goto	u9520
 16758  00207C                     u9521:
 16759  00207C  EF63  F00F         	goto	l8226
 16760  002080                     u9520:
 16761  002080  BE3E               	btfsc	(xtoa@w+1)^0,7,c
 16762  002082  EF4B  F010         	goto	u9531
 16763  002086  503E               	movf	(xtoa@w+1)^0,w,c
 16764  002088  E108               	bnz	u9530
 16765  00208A  043D               	decf	xtoa@w^0,w,c
 16766  00208C  A0D8               	btfss	status,0,c
 16767  00208E  EF4B  F010         	goto	u9531
 16768  002092  EF4D  F010         	goto	u9530
 16769  002096                     u9531:
 16770  002096  EF54  F010         	goto	l1245
 16771  00209A                     u9530:
 16772  00209A  B269               	btfsc	_flags^0,1,c
 16773  00209C  EF52  F010         	goto	u9541
 16774  0020A0  EF54  F010         	goto	u9540
 16775  0020A4                     u9541:
 16776  0020A4  EF63  F00F         	goto	l8226
 16777  0020A8                     u9540:
 16778  0020A8                     l1245:
 16779                           
 16780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 16781  0020A8  A869               	btfss	_flags^0,4,c
 16782  0020AA  EF59  F010         	goto	u9551
 16783  0020AE  EF5B  F010         	goto	u9550
 16784  0020B2                     u9551:
 16785  0020B2  EF71  F010         	goto	l8272
 16786  0020B6                     u9550:
 16787  0020B6                     
 16788                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 16789  0020B6  0647               	decf	xtoa@i^0,f,c
 16790  0020B8  A0D8               	btfss	status,0,c
 16791  0020BA  0648               	decf	(xtoa@i+1)^0,f,c
 16792  0020BC                     
 16793                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 16794  0020BC  0E69               	movlw	low _dbuf
 16795  0020BE  2447               	addwf	xtoa@i^0,w,c
 16796  0020C0  6ED9               	movwf	fsr2l,c
 16797  0020C2  0E02               	movlw	high _dbuf
 16798  0020C4  2048               	addwfc	(xtoa@i+1)^0,w,c
 16799  0020C6  6EDA               	movwf	fsr2h,c
 16800  0020C8  C02E  FFDF         	movff	xtoa@x,indf2
 16801  0020CC                     
 16802                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 16803  0020CC  0647               	decf	xtoa@i^0,f,c
 16804  0020CE  A0D8               	btfss	status,0,c
 16805  0020D0  0648               	decf	(xtoa@i+1)^0,f,c
 16806                           
 16807                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 16808  0020D2  0E69               	movlw	low _dbuf
 16809  0020D4  2447               	addwf	xtoa@i^0,w,c
 16810  0020D6  6ED9               	movwf	fsr2l,c
 16811  0020D8  0E02               	movlw	high _dbuf
 16812  0020DA  2048               	addwfc	(xtoa@i+1)^0,w,c
 16813  0020DC  6EDA               	movwf	fsr2h,c
 16814  0020DE  0E30               	movlw	48
 16815  0020E0  6EDF               	movwf	indf2,c
 16816  0020E2                     l8272:
 16817                           
 16818                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 16819  0020E2  C024  F019         	movff	xtoa@fp,pad@fp
 16820  0020E6  C025  F01A         	movff	xtoa@fp+1,pad@fp+1
 16821  0020EA  0E69               	movlw	low _dbuf
 16822  0020EC  2447               	addwf	xtoa@i^0,w,c
 16823  0020EE  6E1B               	movwf	pad@buf^0,c
 16824  0020F0  0E02               	movlw	high _dbuf
 16825  0020F2  2048               	addwfc	(xtoa@i+1)^0,w,c
 16826  0020F4  6E1C               	movwf	(pad@buf+1)^0,c
 16827  0020F6  C03D  F01D         	movff	xtoa@w,pad@p
 16828  0020FA  C03E  F01E         	movff	xtoa@w+1,pad@p+1
 16829  0020FE  EC92  F028         	call	_pad	;wreg free
 16830  002102  C019  F024         	movff	?_pad,?_xtoa
 16831  002106  C01A  F025         	movff	?_pad+1,?_xtoa+1
 16832  00210A  0012               	return		;funcret
 16833  00210C                     __end_of_xtoa:
 16834                           	opt callstack 0
 16835                           
 16836 ;; *************** function _toupper *****************
 16837 ;; Defined at:
 16838 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 16839 ;; Parameters:    Size  Location     Type
 16840 ;;  c               2   18[COMRAM] int 
 16841 ;; Auto vars:     Size  Location     Type
 16842 ;;		None
 16843 ;; Return value:  Size  Location     Type
 16844 ;;                  2   18[COMRAM] int 
 16845 ;; Registers used:
 16846 ;;		wreg, status,2, status,0
 16847 ;; Tracked objects:
 16848 ;;		On entry : 0/0
 16849 ;;		On exit  : 0/0
 16850 ;;		Unchanged: 0/0
 16851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16852 ;;      Params:         2       0       0       0       0       0       0
 16853 ;;      Locals:         2       0       0       0       0       0       0
 16854 ;;      Temps:          4       0       0       0       0       0       0
 16855 ;;      Totals:         8       0       0       0       0       0       0
 16856 ;;Total ram usage:        8 bytes
 16857 ;; Hardware stack levels used:    1
 16858 ;; Hardware stack levels required when called:    3
 16859 ;; This function calls:
 16860 ;;		_islower
 16861 ;; This function is called by:
 16862 ;;		_xtoa
 16863 ;;		___strtoxl
 16864 ;; This function uses a non-reentrant model
 16865 ;;
 16866                           
 16867                           	psect	text63
 16868  005D3E                     __ptext63:
 16869                           	opt callstack 0
 16870  005D3E                     _toupper:
 16871                           	opt callstack 17
 16872  005D3E  0E9F               	movlw	159
 16873  005D40  6E15               	movwf	??_toupper^0,c
 16874  005D42  0EFF               	movlw	255
 16875  005D44  6E16               	movwf	(??_toupper+1)^0,c
 16876  005D46  C013  F017         	movff	toupper@c,??_toupper+2
 16877  005D4A  C014  F018         	movff	toupper@c+1,??_toupper+3
 16878  005D4E  5015               	movf	??_toupper^0,w,c
 16879  005D50  2617               	addwf	(??_toupper+2)^0,f,c
 16880  005D52  5016               	movf	(??_toupper+1)^0,w,c
 16881  005D54  2218               	addwfc	(??_toupper+3)^0,f,c
 16882  005D56  5018               	movf	(??_toupper+3)^0,w,c
 16883  005D58  E10A               	bnz	u8780
 16884  005D5A  0E1A               	movlw	26
 16885  005D5C  5C17               	subwf	(??_toupper+2)^0,w,c
 16886  005D5E  A0D8               	btfss	status,0,c
 16887  005D60  EFB4  F02E         	goto	u8781
 16888  005D64  EFB7  F02E         	goto	u8780
 16889  005D68                     u8781:
 16890  005D68  0E01               	movlw	1
 16891  005D6A  EFB8  F02E         	goto	u8790
 16892  005D6E                     u8780:
 16893  005D6E  0E00               	movlw	0
 16894  005D70                     u8790:
 16895  005D70  6E19               	movwf	_toupper$3884^0,c
 16896  005D72  6A1A               	clrf	(_toupper$3884+1)^0,c
 16897  005D74  5019               	movf	_toupper$3884^0,w,c
 16898  005D76  101A               	iorwf	(_toupper$3884+1)^0,w,c
 16899  005D78  B4D8               	btfsc	status,2,c
 16900  005D7A  EFC1  F02E         	goto	u8801
 16901  005D7E  EFC3  F02E         	goto	u8800
 16902  005D82                     u8801:
 16903  005D82  EFC9  F02E         	goto	l2106
 16904  005D86                     u8800:
 16905  005D86  0E5F               	movlw	95
 16906  005D88  1413               	andwf	toupper@c^0,w,c
 16907  005D8A  6E13               	movwf	?_toupper^0,c
 16908  005D8C  6A14               	clrf	(?_toupper+1)^0,c
 16909  005D8E  EFCD  F02E         	goto	l2111
 16910  005D92                     l2106:
 16911  005D92  C013  F013         	movff	toupper@c,?_toupper
 16912  005D96  C014  F014         	movff	toupper@c+1,?_toupper+1
 16913  005D9A                     l2111:
 16914  005D9A  0012               	return		;funcret
 16915  005D9C                     __end_of_toupper:
 16916                           	opt callstack 0
 16917                           
 16918 ;; *************** function _islower *****************
 16919 ;; Defined at:
 16920 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 16921 ;; Parameters:    Size  Location     Type
 16922 ;;  c               2   12[COMRAM] int 
 16923 ;; Auto vars:     Size  Location     Type
 16924 ;;		None
 16925 ;; Return value:  Size  Location     Type
 16926 ;;                  2   12[COMRAM] int 
 16927 ;; Registers used:
 16928 ;;		wreg, status,2, status,0
 16929 ;; Tracked objects:
 16930 ;;		On entry : 0/0
 16931 ;;		On exit  : 0/0
 16932 ;;		Unchanged: 0/0
 16933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16934 ;;      Params:         2       0       0       0       0       0       0
 16935 ;;      Locals:         0       0       0       0       0       0       0
 16936 ;;      Temps:          4       0       0       0       0       0       0
 16937 ;;      Totals:         6       0       0       0       0       0       0
 16938 ;;Total ram usage:        6 bytes
 16939 ;; Hardware stack levels used:    1
 16940 ;; Hardware stack levels required when called:    2
 16941 ;; This function calls:
 16942 ;;		Nothing
 16943 ;; This function is called by:
 16944 ;;		_toupper
 16945 ;; This function uses a non-reentrant model
 16946 ;;
 16947                           
 16948                           	psect	text64
 16949  006444                     __ptext64:
 16950                           	opt callstack 0
 16951  006444                     _islower:
 16952                           	opt callstack 17
 16953  006444  0E9F               	movlw	159
 16954  006446  6E0F               	movwf	??_islower^0,c
 16955  006448  0EFF               	movlw	255
 16956  00644A  6E10               	movwf	(??_islower+1)^0,c
 16957  00644C  C00D  F011         	movff	islower@c,??_islower+2
 16958  006450  C00E  F012         	movff	islower@c+1,??_islower+3
 16959  006454  500F               	movf	??_islower^0,w,c
 16960  006456  2611               	addwf	(??_islower+2)^0,f,c
 16961  006458  5010               	movf	(??_islower+1)^0,w,c
 16962  00645A  2212               	addwfc	(??_islower+3)^0,f,c
 16963  00645C  5012               	movf	(??_islower+3)^0,w,c
 16964  00645E  E10A               	bnz	u8670
 16965  006460  0E1A               	movlw	26
 16966  006462  5C11               	subwf	(??_islower+2)^0,w,c
 16967  006464  A0D8               	btfss	status,0,c
 16968  006466  EF37  F032         	goto	u8671
 16969  00646A  EF3A  F032         	goto	u8670
 16970  00646E                     u8671:
 16971  00646E  0E01               	movlw	1
 16972  006470  EF3B  F032         	goto	u8680
 16973  006474                     u8670:
 16974  006474  0E00               	movlw	0
 16975  006476                     u8680:
 16976  006476  6E0D               	movwf	?_islower^0,c
 16977  006478  6A0E               	clrf	(?_islower+1)^0,c
 16978  00647A  0012               	return		;funcret
 16979  00647C                     __end_of_islower:
 16980                           	opt callstack 0
 16981                           
 16982 ;; *************** function _isupper *****************
 16983 ;; Defined at:
 16984 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 16985 ;; Parameters:    Size  Location     Type
 16986 ;;  c               2   12[COMRAM] int 
 16987 ;; Auto vars:     Size  Location     Type
 16988 ;;		None
 16989 ;; Return value:  Size  Location     Type
 16990 ;;                  2   12[COMRAM] int 
 16991 ;; Registers used:
 16992 ;;		wreg, status,2, status,0
 16993 ;; Tracked objects:
 16994 ;;		On entry : 0/0
 16995 ;;		On exit  : 0/0
 16996 ;;		Unchanged: 0/0
 16997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16998 ;;      Params:         2       0       0       0       0       0       0
 16999 ;;      Locals:         0       0       0       0       0       0       0
 17000 ;;      Temps:          4       0       0       0       0       0       0
 17001 ;;      Totals:         6       0       0       0       0       0       0
 17002 ;;Total ram usage:        6 bytes
 17003 ;; Hardware stack levels used:    1
 17004 ;; Hardware stack levels required when called:    2
 17005 ;; This function calls:
 17006 ;;		Nothing
 17007 ;; This function is called by:
 17008 ;;		_xtoa
 17009 ;; This function uses a non-reentrant model
 17010 ;;
 17011                           
 17012                           	psect	text65
 17013  00647C                     __ptext65:
 17014                           	opt callstack 0
 17015  00647C                     _isupper:
 17016                           	opt callstack 18
 17017  00647C  0EBF               	movlw	191
 17018  00647E  6E0F               	movwf	??_isupper^0,c
 17019  006480  0EFF               	movlw	255
 17020  006482  6E10               	movwf	(??_isupper+1)^0,c
 17021  006484  C00D  F011         	movff	isupper@c,??_isupper+2
 17022  006488  C00E  F012         	movff	isupper@c+1,??_isupper+3
 17023  00648C  500F               	movf	??_isupper^0,w,c
 17024  00648E  2611               	addwf	(??_isupper+2)^0,f,c
 17025  006490  5010               	movf	(??_isupper+1)^0,w,c
 17026  006492  2212               	addwfc	(??_isupper+3)^0,f,c
 17027  006494  5012               	movf	(??_isupper+3)^0,w,c
 17028  006496  E10A               	bnz	u8740
 17029  006498  0E1A               	movlw	26
 17030  00649A  5C11               	subwf	(??_isupper+2)^0,w,c
 17031  00649C  A0D8               	btfss	status,0,c
 17032  00649E  EF53  F032         	goto	u8741
 17033  0064A2  EF56  F032         	goto	u8740
 17034  0064A6                     u8741:
 17035  0064A6  0E01               	movlw	1
 17036  0064A8  EF57  F032         	goto	u8750
 17037  0064AC                     u8740:
 17038  0064AC  0E00               	movlw	0
 17039  0064AE                     u8750:
 17040  0064AE  6E0D               	movwf	?_isupper^0,c
 17041  0064B0  6A0E               	clrf	(?_isupper+1)^0,c
 17042  0064B2  0012               	return		;funcret
 17043  0064B4                     __end_of_isupper:
 17044                           	opt callstack 0
 17045                           
 17046 ;; *************** function _isalpha *****************
 17047 ;; Defined at:
 17048 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 17049 ;; Parameters:    Size  Location     Type
 17050 ;;  c               2   12[COMRAM] int 
 17051 ;; Auto vars:     Size  Location     Type
 17052 ;;		None
 17053 ;; Return value:  Size  Location     Type
 17054 ;;                  2   12[COMRAM] int 
 17055 ;; Registers used:
 17056 ;;		wreg, status,2, status,0
 17057 ;; Tracked objects:
 17058 ;;		On entry : 0/0
 17059 ;;		On exit  : 0/0
 17060 ;;		Unchanged: 0/0
 17061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17062 ;;      Params:         2       0       0       0       0       0       0
 17063 ;;      Locals:         0       0       0       0       0       0       0
 17064 ;;      Temps:          4       0       0       0       0       0       0
 17065 ;;      Totals:         6       0       0       0       0       0       0
 17066 ;;Total ram usage:        6 bytes
 17067 ;; Hardware stack levels used:    1
 17068 ;; Hardware stack levels required when called:    2
 17069 ;; This function calls:
 17070 ;;		Nothing
 17071 ;; This function is called by:
 17072 ;;		_xtoa
 17073 ;;		___strtoxl
 17074 ;; This function uses a non-reentrant model
 17075 ;;
 17076                           
 17077                           	psect	text66
 17078  006396                     __ptext66:
 17079                           	opt callstack 0
 17080  006396                     _isalpha:
 17081                           	opt callstack 18
 17082  006396  0E9F               	movlw	159
 17083  006398  6E0F               	movwf	??_isalpha^0,c
 17084  00639A  0EFF               	movlw	255
 17085  00639C  6E10               	movwf	(??_isalpha+1)^0,c
 17086  00639E  0E20               	movlw	32
 17087  0063A0  100D               	iorwf	isalpha@c^0,w,c
 17088  0063A2  6E11               	movwf	(??_isalpha+2)^0,c
 17089  0063A4  0E00               	movlw	0
 17090  0063A6  100E               	iorwf	(isalpha@c+1)^0,w,c
 17091  0063A8  6E12               	movwf	(??_isalpha+3)^0,c
 17092  0063AA  500F               	movf	??_isalpha^0,w,c
 17093  0063AC  2611               	addwf	(??_isalpha+2)^0,f,c
 17094  0063AE  5010               	movf	(??_isalpha+1)^0,w,c
 17095  0063B0  2212               	addwfc	(??_isalpha+3)^0,f,c
 17096  0063B2  5012               	movf	(??_isalpha+3)^0,w,c
 17097  0063B4  E10A               	bnz	u8760
 17098  0063B6  0E1A               	movlw	26
 17099  0063B8  5C11               	subwf	(??_isalpha+2)^0,w,c
 17100  0063BA  A0D8               	btfss	status,0,c
 17101  0063BC  EFE2  F031         	goto	u8761
 17102  0063C0  EFE5  F031         	goto	u8760
 17103  0063C4                     u8761:
 17104  0063C4  0E01               	movlw	1
 17105  0063C6  EFE6  F031         	goto	u8770
 17106  0063CA                     u8760:
 17107  0063CA  0E00               	movlw	0
 17108  0063CC                     u8770:
 17109  0063CC  6E0D               	movwf	?_isalpha^0,c
 17110  0063CE  6A0E               	clrf	(?_isalpha+1)^0,c
 17111  0063D0  0012               	return		;funcret
 17112  0063D2                     __end_of_isalpha:
 17113                           	opt callstack 0
 17114                           
 17115 ;; *************** function _utoa *****************
 17116 ;; Defined at:
 17117 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17118 ;; Parameters:    Size  Location     Type
 17119 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
 17120 ;;		 -> NULL(0), 
 17121 ;;  d               8   39[COMRAM] unsigned long long 
 17122 ;; Auto vars:     Size  Location     Type
 17123 ;;  n               8   59[COMRAM] unsigned long long 
 17124 ;;  i               2   67[COMRAM] int 
 17125 ;;  w               2   57[COMRAM] int 
 17126 ;;  p               2   55[COMRAM] int 
 17127 ;; Return value:  Size  Location     Type
 17128 ;;                  2   37[COMRAM] int 
 17129 ;; Registers used:
 17130 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17131 ;; Tracked objects:
 17132 ;;		On entry : 0/0
 17133 ;;		On exit  : 0/0
 17134 ;;		Unchanged: 0/0
 17135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17136 ;;      Params:        10       0       0       0       0       0       0
 17137 ;;      Locals:        14       0       0       0       0       0       0
 17138 ;;      Temps:          8       0       0       0       0       0       0
 17139 ;;      Totals:        32       0       0       0       0       0       0
 17140 ;;Total ram usage:       32 bytes
 17141 ;; Hardware stack levels used:    1
 17142 ;; Hardware stack levels required when called:    6
 17143 ;; This function calls:
 17144 ;;		___lodiv
 17145 ;;		___lomod
 17146 ;;		_pad
 17147 ;; This function is called by:
 17148 ;;		_vfpfcnvrt
 17149 ;; This function uses a non-reentrant model
 17150 ;;
 17151                           
 17152                           	psect	text67
 17153  0028D8                     __ptext67:
 17154                           	opt callstack 0
 17155  0028D8                     _utoa:
 17156                           	opt callstack 15
 17157  0028D8                     
 17158                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 17159  0028D8  BE68               	btfsc	(_prec+1)^0,7,c
 17160  0028DA  EF71  F014         	goto	u9321
 17161  0028DE  EF73  F014         	goto	u9320
 17162  0028E2                     u9321:
 17163  0028E2  EF74  F014         	goto	l8178
 17164  0028E6                     u9320:
 17165  0028E6                     
 17166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 17167  0028E6  9269               	bcf	_flags^0,1,c
 17168  0028E8                     l8178:
 17169                           
 17170                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 17171  0028E8  BE68               	btfsc	(_prec+1)^0,7,c
 17172  0028EA  EF81  F014         	goto	u9330
 17173  0028EE  5068               	movf	(_prec+1)^0,w,c
 17174  0028F0  E106               	bnz	u9331
 17175  0028F2  0467               	decf	_prec^0,w,c
 17176  0028F4  B0D8               	btfsc	status,0,c
 17177  0028F6  EF7F  F014         	goto	u9331
 17178  0028FA  EF81  F014         	goto	u9330
 17179  0028FE                     u9331:
 17180  0028FE  EF87  F014         	goto	l1207
 17181  002902                     u9330:
 17182  002902  0E00               	movlw	0
 17183  002904  6E39               	movwf	(utoa@p+1)^0,c
 17184  002906  0E01               	movlw	1
 17185  002908  6E38               	movwf	utoa@p^0,c
 17186  00290A  EF8B  F014         	goto	l1209
 17187  00290E                     l1207:
 17188  00290E  C067  F038         	movff	_prec,utoa@p
 17189  002912  C068  F039         	movff	_prec+1,utoa@p+1
 17190  002916                     l1209:
 17191                           
 17192                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 17193  002916  C198  F03A         	movff	_width,utoa@w
 17194  00291A  C199  F03B         	movff	_width+1,utoa@w+1
 17195                           
 17196                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 17197  00291E  C028  F03C         	movff	utoa@d,utoa@n
 17198  002922  C029  F03D         	movff	utoa@d+1,utoa@n+1
 17199  002926  C02A  F03E         	movff	utoa@d+2,utoa@n+2
 17200  00292A  C02B  F03F         	movff	utoa@d+3,utoa@n+3
 17201  00292E  C02C  F040         	movff	utoa@d+4,utoa@n+4
 17202  002932  C02D  F041         	movff	utoa@d+5,utoa@n+5
 17203  002936  C02E  F042         	movff	utoa@d+6,utoa@n+6
 17204  00293A  C02F  F043         	movff	utoa@d+7,utoa@n+7
 17205  00293E                     
 17206                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 17207  00293E  0E00               	movlw	0
 17208  002940  6E45               	movwf	(utoa@i+1)^0,c
 17209  002942  0E1F               	movlw	31
 17210  002944  6E44               	movwf	utoa@i^0,c
 17211  002946                     
 17212                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 17213  002946  0E00               	movlw	0
 17214  002948  0102               	movlb	2	; () banked
 17215  00294A  6F88               	movwf	(_dbuf+31)& (0+255),b
 17216                           
 17217                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 17218  00294C  EF1E  F015         	goto	l8196
 17219  002950                     l8186:
 17220                           
 17221                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 17222  002950  0644               	decf	utoa@i^0,f,c
 17223  002952  A0D8               	btfss	status,0,c
 17224  002954  0645               	decf	(utoa@i+1)^0,f,c
 17225  002956                     
 17226                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 17227  002956  0E69               	movlw	low _dbuf
 17228  002958  2444               	addwf	utoa@i^0,w,c
 17229  00295A  6ED9               	movwf	fsr2l,c
 17230  00295C  0E02               	movlw	high _dbuf
 17231  00295E  2045               	addwfc	(utoa@i+1)^0,w,c
 17232  002960  6EDA               	movwf	fsr2h,c
 17233  002962  C03C  F00D         	movff	utoa@n,___lomod@dividend
 17234  002966  C03D  F00E         	movff	utoa@n+1,___lomod@dividend+1
 17235  00296A  C03E  F00F         	movff	utoa@n+2,___lomod@dividend+2
 17236  00296E  C03F  F010         	movff	utoa@n+3,___lomod@dividend+3
 17237  002972  C040  F011         	movff	utoa@n+4,___lomod@dividend+4
 17238  002976  C041  F012         	movff	utoa@n+5,___lomod@dividend+5
 17239  00297A  C042  F013         	movff	utoa@n+6,___lomod@dividend+6
 17240  00297E  C043  F014         	movff	utoa@n+7,___lomod@dividend+7
 17241  002982  0E0A               	movlw	10
 17242  002984  6E15               	movwf	___lomod@divisor^0,c
 17243  002986  0E00               	movlw	0
 17244  002988  6E16               	movwf	(___lomod@divisor+1)^0,c
 17245  00298A  0E00               	movlw	0
 17246  00298C  6E17               	movwf	(___lomod@divisor+2)^0,c
 17247  00298E  0E00               	movlw	0
 17248  002990  6E18               	movwf	(___lomod@divisor+3)^0,c
 17249  002992  0E00               	movlw	0
 17250  002994  6E19               	movwf	(___lomod@divisor+4)^0,c
 17251  002996  0E00               	movlw	0
 17252  002998  6E1A               	movwf	(___lomod@divisor+5)^0,c
 17253  00299A  0E00               	movlw	0
 17254  00299C  6E1B               	movwf	(___lomod@divisor+6)^0,c
 17255  00299E  0E00               	movlw	0
 17256  0029A0  6E1C               	movwf	(___lomod@divisor+7)^0,c
 17257  0029A2  ECFF  F026         	call	___lomod	;wreg free
 17258  0029A6  C00D  F030         	movff	?___lomod,??_utoa
 17259  0029AA  C00E  F031         	movff	?___lomod+1,??_utoa+1
 17260  0029AE  C00F  F032         	movff	?___lomod+2,??_utoa+2
 17261  0029B2  C010  F033         	movff	?___lomod+3,??_utoa+3
 17262  0029B6  C011  F034         	movff	?___lomod+4,??_utoa+4
 17263  0029BA  C012  F035         	movff	?___lomod+5,??_utoa+5
 17264  0029BE  C013  F036         	movff	?___lomod+6,??_utoa+6
 17265  0029C2  C014  F037         	movff	?___lomod+7,??_utoa+7
 17266  0029C6  5030               	movf	??_utoa^0,w,c
 17267  0029C8  0F30               	addlw	48
 17268  0029CA  6EDF               	movwf	indf2,c
 17269  0029CC                     
 17270                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 17271  0029CC  0638               	decf	utoa@p^0,f,c
 17272  0029CE  A0D8               	btfss	status,0,c
 17273  0029D0  0639               	decf	(utoa@p+1)^0,f,c
 17274  0029D2                     
 17275                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 17276  0029D2  063A               	decf	utoa@w^0,f,c
 17277  0029D4  A0D8               	btfss	status,0,c
 17278  0029D6  063B               	decf	(utoa@w+1)^0,f,c
 17279  0029D8                     
 17280                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 17281  0029D8  C03C  F00D         	movff	utoa@n,___lodiv@dividend
 17282  0029DC  C03D  F00E         	movff	utoa@n+1,___lodiv@dividend+1
 17283  0029E0  C03E  F00F         	movff	utoa@n+2,___lodiv@dividend+2
 17284  0029E4  C03F  F010         	movff	utoa@n+3,___lodiv@dividend+3
 17285  0029E8  C040  F011         	movff	utoa@n+4,___lodiv@dividend+4
 17286  0029EC  C041  F012         	movff	utoa@n+5,___lodiv@dividend+5
 17287  0029F0  C042  F013         	movff	utoa@n+6,___lodiv@dividend+6
 17288  0029F4  C043  F014         	movff	utoa@n+7,___lodiv@dividend+7
 17289  0029F8  0E0A               	movlw	10
 17290  0029FA  6E15               	movwf	___lodiv@divisor^0,c
 17291  0029FC  0E00               	movlw	0
 17292  0029FE  6E16               	movwf	(___lodiv@divisor+1)^0,c
 17293  002A00  0E00               	movlw	0
 17294  002A02  6E17               	movwf	(___lodiv@divisor+2)^0,c
 17295  002A04  0E00               	movlw	0
 17296  002A06  6E18               	movwf	(___lodiv@divisor+3)^0,c
 17297  002A08  0E00               	movlw	0
 17298  002A0A  6E19               	movwf	(___lodiv@divisor+4)^0,c
 17299  002A0C  0E00               	movlw	0
 17300  002A0E  6E1A               	movwf	(___lodiv@divisor+5)^0,c
 17301  002A10  0E00               	movlw	0
 17302  002A12  6E1B               	movwf	(___lodiv@divisor+6)^0,c
 17303  002A14  0E00               	movlw	0
 17304  002A16  6E1C               	movwf	(___lodiv@divisor+7)^0,c
 17305  002A18  EC07  F023         	call	___lodiv	;wreg free
 17306  002A1C  C00D  F03C         	movff	?___lodiv,utoa@n
 17307  002A20  C00E  F03D         	movff	?___lodiv+1,utoa@n+1
 17308  002A24  C00F  F03E         	movff	?___lodiv+2,utoa@n+2
 17309  002A28  C010  F03F         	movff	?___lodiv+3,utoa@n+3
 17310  002A2C  C011  F040         	movff	?___lodiv+4,utoa@n+4
 17311  002A30  C012  F041         	movff	?___lodiv+5,utoa@n+5
 17312  002A34  C013  F042         	movff	?___lodiv+6,utoa@n+6
 17313  002A38  C014  F043         	movff	?___lodiv+7,utoa@n+7
 17314  002A3C                     l8196:
 17315                           
 17316                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 17317  002A3C  5044               	movf	utoa@i^0,w,c
 17318  002A3E  1045               	iorwf	(utoa@i+1)^0,w,c
 17319  002A40  B4D8               	btfsc	status,2,c
 17320  002A42  EF25  F015         	goto	u9341
 17321  002A46  EF27  F015         	goto	u9340
 17322  002A4A                     u9341:
 17323  002A4A  EF57  F015         	goto	l8206
 17324  002A4E                     u9340:
 17325  002A4E  503C               	movf	utoa@n^0,w,c
 17326  002A50  103D               	iorwf	(utoa@n+1)^0,w,c
 17327  002A52  103E               	iorwf	(utoa@n+2)^0,w,c
 17328  002A54  103F               	iorwf	(utoa@n+3)^0,w,c
 17329  002A56  1040               	iorwf	(utoa@n+4)^0,w,c
 17330  002A58  1041               	iorwf	(utoa@n+5)^0,w,c
 17331  002A5A  1042               	iorwf	(utoa@n+6)^0,w,c
 17332  002A5C  1043               	iorwf	(utoa@n+7)^0,w,c
 17333  002A5E  A4D8               	btfss	status,2,c
 17334  002A60  EF34  F015         	goto	u9351
 17335  002A64  EF36  F015         	goto	u9350
 17336  002A68                     u9351:
 17337  002A68  EFA8  F014         	goto	l8186
 17338  002A6C                     u9350:
 17339  002A6C  BE39               	btfsc	(utoa@p+1)^0,7,c
 17340  002A6E  EF43  F015         	goto	u9360
 17341  002A72  5039               	movf	(utoa@p+1)^0,w,c
 17342  002A74  E106               	bnz	u9361
 17343  002A76  0438               	decf	utoa@p^0,w,c
 17344  002A78  B0D8               	btfsc	status,0,c
 17345  002A7A  EF41  F015         	goto	u9361
 17346  002A7E  EF43  F015         	goto	u9360
 17347  002A82                     u9361:
 17348  002A82  EFA8  F014         	goto	l8186
 17349  002A86                     u9360:
 17350  002A86  BE3B               	btfsc	(utoa@w+1)^0,7,c
 17351  002A88  EF4E  F015         	goto	u9371
 17352  002A8C  503B               	movf	(utoa@w+1)^0,w,c
 17353  002A8E  E108               	bnz	u9370
 17354  002A90  043A               	decf	utoa@w^0,w,c
 17355  002A92  A0D8               	btfss	status,0,c
 17356  002A94  EF4E  F015         	goto	u9371
 17357  002A98  EF50  F015         	goto	u9370
 17358  002A9C                     u9371:
 17359  002A9C  EF57  F015         	goto	l8206
 17360  002AA0                     u9370:
 17361  002AA0  B269               	btfsc	_flags^0,1,c
 17362  002AA2  EF55  F015         	goto	u9381
 17363  002AA6  EF57  F015         	goto	u9380
 17364  002AAA                     u9381:
 17365  002AAA  EFA8  F014         	goto	l8186
 17366  002AAE                     u9380:
 17367  002AAE                     l8206:
 17368                           
 17369                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 17370  002AAE  C026  F019         	movff	utoa@fp,pad@fp
 17371  002AB2  C027  F01A         	movff	utoa@fp+1,pad@fp+1
 17372  002AB6  0E69               	movlw	low _dbuf
 17373  002AB8  2444               	addwf	utoa@i^0,w,c
 17374  002ABA  6E1B               	movwf	pad@buf^0,c
 17375  002ABC  0E02               	movlw	high _dbuf
 17376  002ABE  2045               	addwfc	(utoa@i+1)^0,w,c
 17377  002AC0  6E1C               	movwf	(pad@buf+1)^0,c
 17378  002AC2  C03A  F01D         	movff	utoa@w,pad@p
 17379  002AC6  C03B  F01E         	movff	utoa@w+1,pad@p+1
 17380  002ACA  EC92  F028         	call	_pad	;wreg free
 17381  002ACE  C019  F026         	movff	?_pad,?_utoa
 17382  002AD2  C01A  F027         	movff	?_pad+1,?_utoa+1
 17383  002AD6  0012               	return		;funcret
 17384  002AD8                     __end_of_utoa:
 17385                           	opt callstack 0
 17386                           
 17387 ;; *************** function ___lomod *****************
 17388 ;; Defined at:
 17389 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 17390 ;; Parameters:    Size  Location     Type
 17391 ;;  dividend        8   12[COMRAM] unsigned long long 
 17392 ;;  divisor         8   20[COMRAM] unsigned long long 
 17393 ;; Auto vars:     Size  Location     Type
 17394 ;;  counter         1   28[COMRAM] unsigned char 
 17395 ;; Return value:  Size  Location     Type
 17396 ;;                  8   12[COMRAM] unsigned long long 
 17397 ;; Registers used:
 17398 ;;		wreg, status,2, status,0
 17399 ;; Tracked objects:
 17400 ;;		On entry : 0/0
 17401 ;;		On exit  : 0/0
 17402 ;;		Unchanged: 0/0
 17403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17404 ;;      Params:        16       0       0       0       0       0       0
 17405 ;;      Locals:         1       0       0       0       0       0       0
 17406 ;;      Temps:          0       0       0       0       0       0       0
 17407 ;;      Totals:        17       0       0       0       0       0       0
 17408 ;;Total ram usage:       17 bytes
 17409 ;; Hardware stack levels used:    1
 17410 ;; Hardware stack levels required when called:    2
 17411 ;; This function calls:
 17412 ;;		Nothing
 17413 ;; This function is called by:
 17414 ;;		_utoa
 17415 ;; This function uses a non-reentrant model
 17416 ;;
 17417                           
 17418                           	psect	text68
 17419  004DFE                     __ptext68:
 17420                           	opt callstack 0
 17421  004DFE                     ___lomod:
 17422                           	opt callstack 18
 17423  004DFE  5015               	movf	___lomod@divisor^0,w,c
 17424  004E00  1016               	iorwf	(___lomod@divisor+1)^0,w,c
 17425  004E02  1017               	iorwf	(___lomod@divisor+2)^0,w,c
 17426  004E04  1018               	iorwf	(___lomod@divisor+3)^0,w,c
 17427  004E06  1019               	iorwf	(___lomod@divisor+4)^0,w,c
 17428  004E08  101A               	iorwf	(___lomod@divisor+5)^0,w,c
 17429  004E0A  101B               	iorwf	(___lomod@divisor+6)^0,w,c
 17430  004E0C  101C               	iorwf	(___lomod@divisor+7)^0,w,c
 17431  004E0E  B4D8               	btfsc	status,2,c
 17432  004E10  EF0C  F027         	goto	u9001
 17433  004E14  EF0E  F027         	goto	u9000
 17434  004E18                     u9001:
 17435  004E18  EF56  F027         	goto	l1745
 17436  004E1C                     u9000:
 17437  004E1C  0E01               	movlw	1
 17438  004E1E  6E1D               	movwf	___lomod@counter^0,c
 17439  004E20  EF1C  F027         	goto	l8048
 17440  004E24                     l8046:
 17441  004E24  90D8               	bcf	status,0,c
 17442  004E26  3615               	rlcf	___lomod@divisor^0,f,c
 17443  004E28  3616               	rlcf	(___lomod@divisor+1)^0,f,c
 17444  004E2A  3617               	rlcf	(___lomod@divisor+2)^0,f,c
 17445  004E2C  3618               	rlcf	(___lomod@divisor+3)^0,f,c
 17446  004E2E  3619               	rlcf	(___lomod@divisor+4)^0,f,c
 17447  004E30  361A               	rlcf	(___lomod@divisor+5)^0,f,c
 17448  004E32  361B               	rlcf	(___lomod@divisor+6)^0,f,c
 17449  004E34  361C               	rlcf	(___lomod@divisor+7)^0,f,c
 17450  004E36  2A1D               	incf	___lomod@counter^0,f,c
 17451  004E38                     l8048:
 17452  004E38  AE1C               	btfss	(___lomod@divisor+7)^0,7,c
 17453  004E3A  EF21  F027         	goto	u9011
 17454  004E3E  EF23  F027         	goto	u9010
 17455  004E42                     u9011:
 17456  004E42  EF12  F027         	goto	l8046
 17457  004E46                     u9010:
 17458  004E46                     l8050:
 17459  004E46  5015               	movf	___lomod@divisor^0,w,c
 17460  004E48  5C0D               	subwf	___lomod@dividend^0,w,c
 17461  004E4A  5016               	movf	(___lomod@divisor+1)^0,w,c
 17462  004E4C  580E               	subwfb	(___lomod@dividend+1)^0,w,c
 17463  004E4E  5017               	movf	(___lomod@divisor+2)^0,w,c
 17464  004E50  580F               	subwfb	(___lomod@dividend+2)^0,w,c
 17465  004E52  5018               	movf	(___lomod@divisor+3)^0,w,c
 17466  004E54  5810               	subwfb	(___lomod@dividend+3)^0,w,c
 17467  004E56  5019               	movf	(___lomod@divisor+4)^0,w,c
 17468  004E58  5811               	subwfb	(___lomod@dividend+4)^0,w,c
 17469  004E5A  501A               	movf	(___lomod@divisor+5)^0,w,c
 17470  004E5C  5812               	subwfb	(___lomod@dividend+5)^0,w,c
 17471  004E5E  501B               	movf	(___lomod@divisor+6)^0,w,c
 17472  004E60  5813               	subwfb	(___lomod@dividend+6)^0,w,c
 17473  004E62  501C               	movf	(___lomod@divisor+7)^0,w,c
 17474  004E64  5814               	subwfb	(___lomod@dividend+7)^0,w,c
 17475  004E66  A0D8               	btfss	status,0,c
 17476  004E68  EF38  F027         	goto	u9021
 17477  004E6C  EF3A  F027         	goto	u9020
 17478  004E70                     u9021:
 17479  004E70  EF4A  F027         	goto	l8054
 17480  004E74                     u9020:
 17481  004E74  5015               	movf	___lomod@divisor^0,w,c
 17482  004E76  5E0D               	subwf	___lomod@dividend^0,f,c
 17483  004E78  5016               	movf	(___lomod@divisor+1)^0,w,c
 17484  004E7A  5A0E               	subwfb	(___lomod@dividend+1)^0,f,c
 17485  004E7C  5017               	movf	(___lomod@divisor+2)^0,w,c
 17486  004E7E  5A0F               	subwfb	(___lomod@dividend+2)^0,f,c
 17487  004E80  5018               	movf	(___lomod@divisor+3)^0,w,c
 17488  004E82  5A10               	subwfb	(___lomod@dividend+3)^0,f,c
 17489  004E84  5019               	movf	(___lomod@divisor+4)^0,w,c
 17490  004E86  5A11               	subwfb	(___lomod@dividend+4)^0,f,c
 17491  004E88  501A               	movf	(___lomod@divisor+5)^0,w,c
 17492  004E8A  5A12               	subwfb	(___lomod@dividend+5)^0,f,c
 17493  004E8C  501B               	movf	(___lomod@divisor+6)^0,w,c
 17494  004E8E  5A13               	subwfb	(___lomod@dividend+6)^0,f,c
 17495  004E90  501C               	movf	(___lomod@divisor+7)^0,w,c
 17496  004E92  5A14               	subwfb	(___lomod@dividend+7)^0,f,c
 17497  004E94                     l8054:
 17498  004E94  90D8               	bcf	status,0,c
 17499  004E96  321C               	rrcf	(___lomod@divisor+7)^0,f,c
 17500  004E98  321B               	rrcf	(___lomod@divisor+6)^0,f,c
 17501  004E9A  321A               	rrcf	(___lomod@divisor+5)^0,f,c
 17502  004E9C  3219               	rrcf	(___lomod@divisor+4)^0,f,c
 17503  004E9E  3218               	rrcf	(___lomod@divisor+3)^0,f,c
 17504  004EA0  3217               	rrcf	(___lomod@divisor+2)^0,f,c
 17505  004EA2  3216               	rrcf	(___lomod@divisor+1)^0,f,c
 17506  004EA4  3215               	rrcf	___lomod@divisor^0,f,c
 17507  004EA6  2E1D               	decfsz	___lomod@counter^0,f,c
 17508  004EA8  EF23  F027         	goto	l8050
 17509  004EAC                     l1745:
 17510  004EAC  C00D  F00D         	movff	___lomod@dividend,?___lomod
 17511  004EB0  C00E  F00E         	movff	___lomod@dividend+1,?___lomod+1
 17512  004EB4  C00F  F00F         	movff	___lomod@dividend+2,?___lomod+2
 17513  004EB8  C010  F010         	movff	___lomod@dividend+3,?___lomod+3
 17514  004EBC  C011  F011         	movff	___lomod@dividend+4,?___lomod+4
 17515  004EC0  C012  F012         	movff	___lomod@dividend+5,?___lomod+5
 17516  004EC4  C013  F013         	movff	___lomod@dividend+6,?___lomod+6
 17517  004EC8  C014  F014         	movff	___lomod@dividend+7,?___lomod+7
 17518  004ECC  0012               	return		;funcret
 17519  004ECE                     __end_of___lomod:
 17520                           	opt callstack 0
 17521                           
 17522 ;; *************** function ___lodiv *****************
 17523 ;; Defined at:
 17524 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 17525 ;; Parameters:    Size  Location     Type
 17526 ;;  dividend        8   12[COMRAM] unsigned long long 
 17527 ;;  divisor         8   20[COMRAM] unsigned long long 
 17528 ;; Auto vars:     Size  Location     Type
 17529 ;;  quotient        8   28[COMRAM] unsigned long long 
 17530 ;;  counter         1   36[COMRAM] unsigned char 
 17531 ;; Return value:  Size  Location     Type
 17532 ;;                  8   12[COMRAM] unsigned long long 
 17533 ;; Registers used:
 17534 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17535 ;; Tracked objects:
 17536 ;;		On entry : 0/0
 17537 ;;		On exit  : 0/0
 17538 ;;		Unchanged: 0/0
 17539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17540 ;;      Params:        16       0       0       0       0       0       0
 17541 ;;      Locals:         9       0       0       0       0       0       0
 17542 ;;      Temps:          0       0       0       0       0       0       0
 17543 ;;      Totals:        25       0       0       0       0       0       0
 17544 ;;Total ram usage:       25 bytes
 17545 ;; Hardware stack levels used:    1
 17546 ;; Hardware stack levels required when called:    2
 17547 ;; This function calls:
 17548 ;;		Nothing
 17549 ;; This function is called by:
 17550 ;;		_utoa
 17551 ;; This function uses a non-reentrant model
 17552 ;;
 17553                           
 17554                           	psect	text69
 17555  00460E                     __ptext69:
 17556                           	opt callstack 0
 17557  00460E                     ___lodiv:
 17558                           	opt callstack 18
 17559  00460E  EE20  F01D         	lfsr	2,___lodiv@quotient
 17560  004612  0E07               	movlw	7
 17561  004614                     u8961:
 17562  004614  6ADE               	clrf	postinc2,c
 17563  004616  06E8               	decf	wreg,f,c
 17564  004618  E2FD               	bc	u8961
 17565  00461A  5015               	movf	___lodiv@divisor^0,w,c
 17566  00461C  1016               	iorwf	(___lodiv@divisor+1)^0,w,c
 17567  00461E  1017               	iorwf	(___lodiv@divisor+2)^0,w,c
 17568  004620  1018               	iorwf	(___lodiv@divisor+3)^0,w,c
 17569  004622  1019               	iorwf	(___lodiv@divisor+4)^0,w,c
 17570  004624  101A               	iorwf	(___lodiv@divisor+5)^0,w,c
 17571  004626  101B               	iorwf	(___lodiv@divisor+6)^0,w,c
 17572  004628  101C               	iorwf	(___lodiv@divisor+7)^0,w,c
 17573  00462A  B4D8               	btfsc	status,2,c
 17574  00462C  EF1A  F023         	goto	u8971
 17575  004630  EF1C  F023         	goto	u8970
 17576  004634                     u8971:
 17577  004634  EF6E  F023         	goto	l1735
 17578  004638                     u8970:
 17579  004638  0E01               	movlw	1
 17580  00463A  6E25               	movwf	___lodiv@counter^0,c
 17581  00463C  EF2A  F023         	goto	l8028
 17582  004640                     l8026:
 17583  004640  90D8               	bcf	status,0,c
 17584  004642  3615               	rlcf	___lodiv@divisor^0,f,c
 17585  004644  3616               	rlcf	(___lodiv@divisor+1)^0,f,c
 17586  004646  3617               	rlcf	(___lodiv@divisor+2)^0,f,c
 17587  004648  3618               	rlcf	(___lodiv@divisor+3)^0,f,c
 17588  00464A  3619               	rlcf	(___lodiv@divisor+4)^0,f,c
 17589  00464C  361A               	rlcf	(___lodiv@divisor+5)^0,f,c
 17590  00464E  361B               	rlcf	(___lodiv@divisor+6)^0,f,c
 17591  004650  361C               	rlcf	(___lodiv@divisor+7)^0,f,c
 17592  004652  2A25               	incf	___lodiv@counter^0,f,c
 17593  004654                     l8028:
 17594  004654  AE1C               	btfss	(___lodiv@divisor+7)^0,7,c
 17595  004656  EF2F  F023         	goto	u8981
 17596  00465A  EF31  F023         	goto	u8980
 17597  00465E                     u8981:
 17598  00465E  EF20  F023         	goto	l8026
 17599  004662                     u8980:
 17600  004662                     l8030:
 17601  004662  90D8               	bcf	status,0,c
 17602  004664  361D               	rlcf	___lodiv@quotient^0,f,c
 17603  004666  361E               	rlcf	(___lodiv@quotient+1)^0,f,c
 17604  004668  361F               	rlcf	(___lodiv@quotient+2)^0,f,c
 17605  00466A  3620               	rlcf	(___lodiv@quotient+3)^0,f,c
 17606  00466C  3621               	rlcf	(___lodiv@quotient+4)^0,f,c
 17607  00466E  3622               	rlcf	(___lodiv@quotient+5)^0,f,c
 17608  004670  3623               	rlcf	(___lodiv@quotient+6)^0,f,c
 17609  004672  3624               	rlcf	(___lodiv@quotient+7)^0,f,c
 17610  004674  5015               	movf	___lodiv@divisor^0,w,c
 17611  004676  5C0D               	subwf	___lodiv@dividend^0,w,c
 17612  004678  5016               	movf	(___lodiv@divisor+1)^0,w,c
 17613  00467A  580E               	subwfb	(___lodiv@dividend+1)^0,w,c
 17614  00467C  5017               	movf	(___lodiv@divisor+2)^0,w,c
 17615  00467E  580F               	subwfb	(___lodiv@dividend+2)^0,w,c
 17616  004680  5018               	movf	(___lodiv@divisor+3)^0,w,c
 17617  004682  5810               	subwfb	(___lodiv@dividend+3)^0,w,c
 17618  004684  5019               	movf	(___lodiv@divisor+4)^0,w,c
 17619  004686  5811               	subwfb	(___lodiv@dividend+4)^0,w,c
 17620  004688  501A               	movf	(___lodiv@divisor+5)^0,w,c
 17621  00468A  5812               	subwfb	(___lodiv@dividend+5)^0,w,c
 17622  00468C  501B               	movf	(___lodiv@divisor+6)^0,w,c
 17623  00468E  5813               	subwfb	(___lodiv@dividend+6)^0,w,c
 17624  004690  501C               	movf	(___lodiv@divisor+7)^0,w,c
 17625  004692  5814               	subwfb	(___lodiv@dividend+7)^0,w,c
 17626  004694  A0D8               	btfss	status,0,c
 17627  004696  EF4F  F023         	goto	u8991
 17628  00469A  EF51  F023         	goto	u8990
 17629  00469E                     u8991:
 17630  00469E  EF62  F023         	goto	l8038
 17631  0046A2                     u8990:
 17632  0046A2  5015               	movf	___lodiv@divisor^0,w,c
 17633  0046A4  5E0D               	subwf	___lodiv@dividend^0,f,c
 17634  0046A6  5016               	movf	(___lodiv@divisor+1)^0,w,c
 17635  0046A8  5A0E               	subwfb	(___lodiv@dividend+1)^0,f,c
 17636  0046AA  5017               	movf	(___lodiv@divisor+2)^0,w,c
 17637  0046AC  5A0F               	subwfb	(___lodiv@dividend+2)^0,f,c
 17638  0046AE  5018               	movf	(___lodiv@divisor+3)^0,w,c
 17639  0046B0  5A10               	subwfb	(___lodiv@dividend+3)^0,f,c
 17640  0046B2  5019               	movf	(___lodiv@divisor+4)^0,w,c
 17641  0046B4  5A11               	subwfb	(___lodiv@dividend+4)^0,f,c
 17642  0046B6  501A               	movf	(___lodiv@divisor+5)^0,w,c
 17643  0046B8  5A12               	subwfb	(___lodiv@dividend+5)^0,f,c
 17644  0046BA  501B               	movf	(___lodiv@divisor+6)^0,w,c
 17645  0046BC  5A13               	subwfb	(___lodiv@dividend+6)^0,f,c
 17646  0046BE  501C               	movf	(___lodiv@divisor+7)^0,w,c
 17647  0046C0  5A14               	subwfb	(___lodiv@dividend+7)^0,f,c
 17648  0046C2  801D               	bsf	___lodiv@quotient^0,0,c
 17649  0046C4                     l8038:
 17650  0046C4  90D8               	bcf	status,0,c
 17651  0046C6  321C               	rrcf	(___lodiv@divisor+7)^0,f,c
 17652  0046C8  321B               	rrcf	(___lodiv@divisor+6)^0,f,c
 17653  0046CA  321A               	rrcf	(___lodiv@divisor+5)^0,f,c
 17654  0046CC  3219               	rrcf	(___lodiv@divisor+4)^0,f,c
 17655  0046CE  3218               	rrcf	(___lodiv@divisor+3)^0,f,c
 17656  0046D0  3217               	rrcf	(___lodiv@divisor+2)^0,f,c
 17657  0046D2  3216               	rrcf	(___lodiv@divisor+1)^0,f,c
 17658  0046D4  3215               	rrcf	___lodiv@divisor^0,f,c
 17659  0046D6  2E25               	decfsz	___lodiv@counter^0,f,c
 17660  0046D8  EF31  F023         	goto	l8030
 17661  0046DC                     l1735:
 17662  0046DC  C01D  F00D         	movff	___lodiv@quotient,?___lodiv
 17663  0046E0  C01E  F00E         	movff	___lodiv@quotient+1,?___lodiv+1
 17664  0046E4  C01F  F00F         	movff	___lodiv@quotient+2,?___lodiv+2
 17665  0046E8  C020  F010         	movff	___lodiv@quotient+3,?___lodiv+3
 17666  0046EC  C021  F011         	movff	___lodiv@quotient+4,?___lodiv+4
 17667  0046F0  C022  F012         	movff	___lodiv@quotient+5,?___lodiv+5
 17668  0046F4  C023  F013         	movff	___lodiv@quotient+6,?___lodiv+6
 17669  0046F8  C024  F014         	movff	___lodiv@quotient+7,?___lodiv+7
 17670  0046FC  0012               	return		;funcret
 17671  0046FE                     __end_of___lodiv:
 17672                           	opt callstack 0
 17673                           
 17674 ;; *************** function _strncmp *****************
 17675 ;; Defined at:
 17676 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 17677 ;; Parameters:    Size  Location     Type
 17678 ;;  _l              2   12[COMRAM] PTR const unsigned char 
 17679 ;;		 -> STR_66(48), STR_65(69), STR_64(40), STR_30(21), 
 17680 ;;		 -> STR_29(25), STR_28(32), STR_27(35), STR_26(29), 
 17681 ;;		 -> STR_25(32), STR_24(12), STR_23(14), STR_22(27), 
 17682 ;;		 -> STR_21(24), STR_20(13), STR_19(43), STR_18(19), 
 17683 ;;		 -> STR_17(13), STR_16(15), STR_15(23), STR_14(16), 
 17684 ;;		 -> STR_13(35), STR_12(21), STR_11(21), STR_10(16), 
 17685 ;;		 -> STR_9(5), STR_8(22), STR_7(28), STR_6(25), 
 17686 ;;		 -> STR_5(55), STR_4(72), STR_3(74), STR_2(16), 
 17687 ;;		 -> STR_1(18), 
 17688 ;;  _r              2   14[COMRAM] PTR const unsigned char 
 17689 ;;		 -> STR_87(3), STR_83(3), STR_78(3), STR_73(3), 
 17690 ;;		 -> STR_69(3), 
 17691 ;;  n               2   16[COMRAM] unsigned int 
 17692 ;; Auto vars:     Size  Location     Type
 17693 ;;  r               2   21[COMRAM] PTR const unsigned char 
 17694 ;;		 -> STR_87(3), STR_83(3), STR_78(3), STR_73(3), 
 17695 ;;		 -> STR_69(3), 
 17696 ;;  l               2   19[COMRAM] PTR const unsigned char 
 17697 ;;		 -> STR_66(48), STR_65(69), STR_64(40), STR_30(21), 
 17698 ;;		 -> STR_29(25), STR_28(32), STR_27(35), STR_26(29), 
 17699 ;;		 -> STR_25(32), STR_24(12), STR_23(14), STR_22(27), 
 17700 ;;		 -> STR_21(24), STR_20(13), STR_19(43), STR_18(19), 
 17701 ;;		 -> STR_17(13), STR_16(15), STR_15(23), STR_14(16), 
 17702 ;;		 -> STR_13(35), STR_12(21), STR_11(21), STR_10(16), 
 17703 ;;		 -> STR_9(5), STR_8(22), STR_7(28), STR_6(25), 
 17704 ;;		 -> STR_5(55), STR_4(72), STR_3(74), STR_2(16), 
 17705 ;;		 -> STR_1(18), 
 17706 ;; Return value:  Size  Location     Type
 17707 ;;                  2   12[COMRAM] int 
 17708 ;; Registers used:
 17709 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 17710 ;; Tracked objects:
 17711 ;;		On entry : 0/0
 17712 ;;		On exit  : 0/0
 17713 ;;		Unchanged: 0/0
 17714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17715 ;;      Params:         6       0       0       0       0       0       0
 17716 ;;      Locals:         4       0       0       0       0       0       0
 17717 ;;      Temps:          1       0       0       0       0       0       0
 17718 ;;      Totals:        11       0       0       0       0       0       0
 17719 ;;Total ram usage:       11 bytes
 17720 ;; Hardware stack levels used:    1
 17721 ;; Hardware stack levels required when called:    2
 17722 ;; This function calls:
 17723 ;;		Nothing
 17724 ;; This function is called by:
 17725 ;;		_vfpfcnvrt
 17726 ;; This function uses a non-reentrant model
 17727 ;;
 17728                           
 17729                           	psect	text70
 17730  004A94                     __ptext70:
 17731                           	opt callstack 0
 17732  004A94                     _strncmp:
 17733                           	opt callstack 19
 17734  004A94  C00D  F014         	movff	strncmp@_l,strncmp@l
 17735  004A98  C00E  F015         	movff	strncmp@_l+1,strncmp@l+1
 17736  004A9C  C00F  F016         	movff	strncmp@_r,strncmp@r
 17737  004AA0  C010  F017         	movff	strncmp@_r+1,strncmp@r+1
 17738  004AA4  0611               	decf	strncmp@n^0,f,c
 17739  004AA6  A0D8               	btfss	status,0,c
 17740  004AA8  0612               	decf	(strncmp@n+1)^0,f,c
 17741  004AAA  2811               	incf	strncmp@n^0,w,c
 17742  004AAC  E106               	bnz	u9561
 17743  004AAE  2812               	incf	(strncmp@n+1)^0,w,c
 17744  004AB0  A4D8               	btfss	status,2,c
 17745  004AB2  EF5D  F025         	goto	u9561
 17746  004AB6  EF5F  F025         	goto	u9560
 17747  004ABA                     u9561:
 17748  004ABA  EF6C  F025         	goto	l8284
 17749  004ABE                     u9560:
 17750  004ABE  0E00               	movlw	0
 17751  004AC0  6E0E               	movwf	(?_strncmp+1)^0,c
 17752  004AC2  0E00               	movlw	0
 17753  004AC4  6E0D               	movwf	?_strncmp^0,c
 17754  004AC6  EFB8  F025         	goto	l2091
 17755  004ACA                     l8282:
 17756  004ACA  4A14               	infsnz	strncmp@l^0,f,c
 17757  004ACC  2A15               	incf	(strncmp@l+1)^0,f,c
 17758  004ACE  4A16               	infsnz	strncmp@r^0,f,c
 17759  004AD0  2A17               	incf	(strncmp@r+1)^0,f,c
 17760  004AD2  0611               	decf	strncmp@n^0,f,c
 17761  004AD4  A0D8               	btfss	status,0,c
 17762  004AD6  0612               	decf	(strncmp@n+1)^0,f,c
 17763  004AD8                     l8284:
 17764  004AD8  C014  FFF6         	movff	strncmp@l,tblptrl
 17765  004ADC  C015  FFF7         	movff	strncmp@l+1,tblptrh
 17766  004AE0                     	if	0	;tblptru may be non-zero
 17767  004AE0                     	endif
 17768  004AE0                     	if	0	;tblptru may be non-zero
 17769  004AE0                     	endif
 17770  004AE0  0008               	tblrd		*
 17771  004AE2  50F5               	movf	tablat,w,c
 17772  004AE4  0900               	iorlw	0
 17773  004AE6  B4D8               	btfsc	status,2,c
 17774  004AE8  EF78  F025         	goto	u9571
 17775  004AEC  EF7A  F025         	goto	u9570
 17776  004AF0                     u9571:
 17777  004AF0  EFA6  F025         	goto	l8292
 17778  004AF4                     u9570:
 17779  004AF4  C016  FFF6         	movff	strncmp@r,tblptrl
 17780  004AF8  C017  FFF7         	movff	strncmp@r+1,tblptrh
 17781  004AFC                     	if	0	;tblptru may be non-zero
 17782  004AFC                     	endif
 17783  004AFC                     	if	0	;tblptru may be non-zero
 17784  004AFC                     	endif
 17785  004AFC  0008               	tblrd		*
 17786  004AFE  50F5               	movf	tablat,w,c
 17787  004B00  0900               	iorlw	0
 17788  004B02  B4D8               	btfsc	status,2,c
 17789  004B04  EF86  F025         	goto	u9581
 17790  004B08  EF88  F025         	goto	u9580
 17791  004B0C                     u9581:
 17792  004B0C  EFA6  F025         	goto	l8292
 17793  004B10                     u9580:
 17794  004B10  5011               	movf	strncmp@n^0,w,c
 17795  004B12  1012               	iorwf	(strncmp@n+1)^0,w,c
 17796  004B14  B4D8               	btfsc	status,2,c
 17797  004B16  EF8F  F025         	goto	u9591
 17798  004B1A  EF91  F025         	goto	u9590
 17799  004B1E                     u9591:
 17800  004B1E  EFA6  F025         	goto	l8292
 17801  004B22                     u9590:
 17802  004B22  C014  FFF6         	movff	strncmp@l,tblptrl
 17803  004B26  C015  FFF7         	movff	strncmp@l+1,tblptrh
 17804  004B2A                     	if	0	;tblptru may be non-zero
 17805  004B2A                     	endif
 17806  004B2A                     	if	0	;tblptru may be non-zero
 17807  004B2A                     	endif
 17808  004B2A  0008               	tblrd		*
 17809  004B2C  CFF5 F013          	movff	tablat,??_strncmp
 17810  004B30  C016  FFF6         	movff	strncmp@r,tblptrl
 17811  004B34  C017  FFF7         	movff	strncmp@r+1,tblptrh
 17812  004B38                     	if	0	;tblptru may be non-zero
 17813  004B38                     	endif
 17814  004B38                     	if	0	;tblptru may be non-zero
 17815  004B38                     	endif
 17816  004B38  0008               	tblrd		*
 17817  004B3A  50F5               	movf	tablat,w,c
 17818  004B3C  1813               	xorwf	??_strncmp^0,w,c
 17819  004B3E  B4D8               	btfsc	status,2,c
 17820  004B40  EFA4  F025         	goto	u9601
 17821  004B44  EFA6  F025         	goto	u9600
 17822  004B48                     u9601:
 17823  004B48  EF65  F025         	goto	l8282
 17824  004B4C                     u9600:
 17825  004B4C                     l8292:
 17826  004B4C  C014  FFF6         	movff	strncmp@l,tblptrl
 17827  004B50  C015  FFF7         	movff	strncmp@l+1,tblptrh
 17828  004B54                     	if	0	;tblptru may be non-zero
 17829  004B54                     	endif
 17830  004B54                     	if	0	;tblptru may be non-zero
 17831  004B54                     	endif
 17832  004B54  0008               	tblrd		*
 17833  004B56  CFF5 F013          	movff	tablat,??_strncmp
 17834  004B5A  C016  FFF6         	movff	strncmp@r,tblptrl
 17835  004B5E  C017  FFF7         	movff	strncmp@r+1,tblptrh
 17836  004B62                     	if	0	;tblptru may be non-zero
 17837  004B62                     	endif
 17838  004B62                     	if	0	;tblptru may be non-zero
 17839  004B62                     	endif
 17840  004B62  0008               	tblrd		*
 17841  004B64  50F5               	movf	tablat,w,c
 17842  004B66  5C13               	subwf	??_strncmp^0,w,c
 17843  004B68  6E0D               	movwf	?_strncmp^0,c
 17844  004B6A  6A0E               	clrf	(?_strncmp+1)^0,c
 17845  004B6C  A0D8               	btfss	status,0,c
 17846  004B6E  060E               	decf	(?_strncmp+1)^0,f,c
 17847  004B70                     l2091:
 17848  004B70  0012               	return		;funcret
 17849  004B72                     __end_of_strncmp:
 17850                           	opt callstack 0
 17851                           
 17852 ;; *************** function _dtoa *****************
 17853 ;; Defined at:
 17854 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17855 ;; Parameters:    Size  Location     Type
 17856 ;;  fp              2   38[COMRAM] PTR struct _IO_FILE
 17857 ;;		 -> NULL(0), 
 17858 ;;  d               8   40[COMRAM] long long 
 17859 ;; Auto vars:     Size  Location     Type
 17860 ;;  n               8   64[COMRAM] long long 
 17861 ;;  i               2   72[COMRAM] int 
 17862 ;;  s               2   62[COMRAM] int 
 17863 ;;  w               2   60[COMRAM] int 
 17864 ;;  p               2   58[COMRAM] int 
 17865 ;; Return value:  Size  Location     Type
 17866 ;;                  2   38[COMRAM] int 
 17867 ;; Registers used:
 17868 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17869 ;; Tracked objects:
 17870 ;;		On entry : 0/0
 17871 ;;		On exit  : 0/0
 17872 ;;		Unchanged: 0/0
 17873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17874 ;;      Params:        10       0       0       0       0       0       0
 17875 ;;      Locals:        18       0       0       0       0       0       0
 17876 ;;      Temps:          8       0       0       0       0       0       0
 17877 ;;      Totals:        36       0       0       0       0       0       0
 17878 ;;Total ram usage:       36 bytes
 17879 ;; Hardware stack levels used:    1
 17880 ;; Hardware stack levels required when called:    6
 17881 ;; This function calls:
 17882 ;;		___aodiv
 17883 ;;		___aomod
 17884 ;;		_abs
 17885 ;;		_pad
 17886 ;; This function is called by:
 17887 ;;		_vfpfcnvrt
 17888 ;; This function uses a non-reentrant model
 17889 ;;
 17890                           
 17891                           	psect	text71
 17892  001B5A                     __ptext71:
 17893                           	opt callstack 0
 17894  001B5A                     _dtoa:
 17895                           	opt callstack 15
 17896  001B5A                     
 17897                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 17898  001B5A  C029  F041         	movff	dtoa@d,dtoa@n
 17899  001B5E  C02A  F042         	movff	dtoa@d+1,dtoa@n+1
 17900  001B62  C02B  F043         	movff	dtoa@d+2,dtoa@n+2
 17901  001B66  C02C  F044         	movff	dtoa@d+3,dtoa@n+3
 17902  001B6A  C02D  F045         	movff	dtoa@d+4,dtoa@n+4
 17903  001B6E  C02E  F046         	movff	dtoa@d+5,dtoa@n+5
 17904  001B72  C02F  F047         	movff	dtoa@d+6,dtoa@n+6
 17905  001B76  C030  F048         	movff	dtoa@d+7,dtoa@n+7
 17906  001B7A                     
 17907                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 17908  001B7A  BE48               	btfsc	(dtoa@n+7)^0,7,c
 17909  001B7C  EFC2  F00D         	goto	u9171
 17910  001B80  EFC5  F00D         	goto	u9170
 17911  001B84                     u9171:
 17912  001B84  0E01               	movlw	1
 17913  001B86  EFC6  F00D         	goto	u9180
 17914  001B8A                     u9170:
 17915  001B8A  0E00               	movlw	0
 17916  001B8C                     u9180:
 17917  001B8C  6E3F               	movwf	dtoa@s^0,c
 17918  001B8E  6A40               	clrf	(dtoa@s+1)^0,c
 17919                           
 17920                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 17921  001B90  503F               	movf	dtoa@s^0,w,c
 17922  001B92  1040               	iorwf	(dtoa@s+1)^0,w,c
 17923  001B94  B4D8               	btfsc	status,2,c
 17924  001B96  EFCF  F00D         	goto	u9191
 17925  001B9A  EFD1  F00D         	goto	u9190
 17926  001B9E                     u9191:
 17927  001B9E  EFE1  F00D         	goto	l8118
 17928  001BA2                     u9190:
 17929  001BA2                     
 17930                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 17931  001BA2  1E48               	comf	(dtoa@n+7)^0,f,c
 17932  001BA4  1E47               	comf	(dtoa@n+6)^0,f,c
 17933  001BA6  1E46               	comf	(dtoa@n+5)^0,f,c
 17934  001BA8  1E45               	comf	(dtoa@n+4)^0,f,c
 17935  001BAA  1E44               	comf	(dtoa@n+3)^0,f,c
 17936  001BAC  1E43               	comf	(dtoa@n+2)^0,f,c
 17937  001BAE  1E42               	comf	(dtoa@n+1)^0,f,c
 17938  001BB0  6C41               	negf	dtoa@n^0,c
 17939  001BB2  0E00               	movlw	0
 17940  001BB4  2242               	addwfc	(dtoa@n+1)^0,f,c
 17941  001BB6  2243               	addwfc	(dtoa@n+2)^0,f,c
 17942  001BB8  2244               	addwfc	(dtoa@n+3)^0,f,c
 17943  001BBA  2245               	addwfc	(dtoa@n+4)^0,f,c
 17944  001BBC  2246               	addwfc	(dtoa@n+5)^0,f,c
 17945  001BBE  2247               	addwfc	(dtoa@n+6)^0,f,c
 17946  001BC0  2248               	addwfc	(dtoa@n+7)^0,f,c
 17947  001BC2                     l8118:
 17948                           
 17949                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 17950  001BC2  BE68               	btfsc	(_prec+1)^0,7,c
 17951  001BC4  EFE6  F00D         	goto	u9201
 17952  001BC8  EFE8  F00D         	goto	u9200
 17953  001BCC                     u9201:
 17954  001BCC  EFE9  F00D         	goto	l8122
 17955  001BD0                     u9200:
 17956  001BD0                     
 17957                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 17958  001BD0  9269               	bcf	_flags^0,1,c
 17959  001BD2                     l8122:
 17960                           
 17961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 17962  001BD2  BE68               	btfsc	(_prec+1)^0,7,c
 17963  001BD4  EFF6  F00D         	goto	u9210
 17964  001BD8  5068               	movf	(_prec+1)^0,w,c
 17965  001BDA  E106               	bnz	u9211
 17966  001BDC  0467               	decf	_prec^0,w,c
 17967  001BDE  B0D8               	btfsc	status,0,c
 17968  001BE0  EFF4  F00D         	goto	u9211
 17969  001BE4  EFF6  F00D         	goto	u9210
 17970  001BE8                     u9211:
 17971  001BE8  EFFC  F00D         	goto	l1182
 17972  001BEC                     u9210:
 17973  001BEC  0E00               	movlw	0
 17974  001BEE  6E3C               	movwf	(dtoa@p+1)^0,c
 17975  001BF0  0E01               	movlw	1
 17976  001BF2  6E3B               	movwf	dtoa@p^0,c
 17977  001BF4  EF00  F00E         	goto	l1184
 17978  001BF8                     l1182:
 17979  001BF8  C067  F03B         	movff	_prec,dtoa@p
 17980  001BFC  C068  F03C         	movff	_prec+1,dtoa@p+1
 17981  001C00                     l1184:
 17982                           
 17983                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 17984  001C00  C198  F03D         	movff	_width,dtoa@w
 17985  001C04  C199  F03E         	movff	_width+1,dtoa@w+1
 17986  001C08                     
 17987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 17988  001C08  503F               	movf	dtoa@s^0,w,c
 17989  001C0A  1040               	iorwf	(dtoa@s+1)^0,w,c
 17990  001C0C  A4D8               	btfss	status,2,c
 17991  001C0E  EF0B  F00E         	goto	u9221
 17992  001C12  EF0D  F00E         	goto	u9220
 17993  001C16                     u9221:
 17994  001C16  EF14  F00E         	goto	l8130
 17995  001C1A                     u9220:
 17996  001C1A  A469               	btfss	_flags^0,2,c
 17997  001C1C  EF12  F00E         	goto	u9231
 17998  001C20  EF14  F00E         	goto	u9230
 17999  001C24                     u9231:
 18000  001C24  EF17  F00E         	goto	l8132
 18001  001C28                     u9230:
 18002  001C28                     l8130:
 18003                           
 18004                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 18005  001C28  063D               	decf	dtoa@w^0,f,c
 18006  001C2A  A0D8               	btfss	status,0,c
 18007  001C2C  063E               	decf	(dtoa@w+1)^0,f,c
 18008  001C2E                     l8132:
 18009                           
 18010                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 18011  001C2E  0E00               	movlw	0
 18012  001C30  6E4A               	movwf	(dtoa@i+1)^0,c
 18013  001C32  0E1F               	movlw	31
 18014  001C34  6E49               	movwf	dtoa@i^0,c
 18015  001C36                     
 18016                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 18017  001C36  0E00               	movlw	0
 18018  001C38  0102               	movlb	2	; () banked
 18019  001C3A  6F88               	movwf	(_dbuf+31)& (0+255),b
 18020                           
 18021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 18022  001C3C  EF9C  F00E         	goto	l8146
 18023  001C40                     l8136:
 18024                           
 18025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 18026  001C40  0649               	decf	dtoa@i^0,f,c
 18027  001C42  A0D8               	btfss	status,0,c
 18028  001C44  064A               	decf	(dtoa@i+1)^0,f,c
 18029  001C46                     
 18030                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 18031  001C46  0E69               	movlw	low _dbuf
 18032  001C48  2449               	addwf	dtoa@i^0,w,c
 18033  001C4A  6ED9               	movwf	fsr2l,c
 18034  001C4C  0E02               	movlw	high _dbuf
 18035  001C4E  204A               	addwfc	(dtoa@i+1)^0,w,c
 18036  001C50  6EDA               	movwf	fsr2h,c
 18037  001C52  C041  F00D         	movff	dtoa@n,___aomod@dividend
 18038  001C56  C042  F00E         	movff	dtoa@n+1,___aomod@dividend+1
 18039  001C5A  C043  F00F         	movff	dtoa@n+2,___aomod@dividend+2
 18040  001C5E  C044  F010         	movff	dtoa@n+3,___aomod@dividend+3
 18041  001C62  C045  F011         	movff	dtoa@n+4,___aomod@dividend+4
 18042  001C66  C046  F012         	movff	dtoa@n+5,___aomod@dividend+5
 18043  001C6A  C047  F013         	movff	dtoa@n+6,___aomod@dividend+6
 18044  001C6E  C048  F014         	movff	dtoa@n+7,___aomod@dividend+7
 18045  001C72  0E0A               	movlw	10
 18046  001C74  6E15               	movwf	___aomod@divisor^0,c
 18047  001C76  0E00               	movlw	0
 18048  001C78  6E16               	movwf	(___aomod@divisor+1)^0,c
 18049  001C7A  0E00               	movlw	0
 18050  001C7C  6E17               	movwf	(___aomod@divisor+2)^0,c
 18051  001C7E  0E00               	movlw	0
 18052  001C80  6E18               	movwf	(___aomod@divisor+3)^0,c
 18053  001C82  0E00               	movlw	0
 18054  001C84  6E19               	movwf	(___aomod@divisor+4)^0,c
 18055  001C86  0E00               	movlw	0
 18056  001C88  6E1A               	movwf	(___aomod@divisor+5)^0,c
 18057  001C8A  0E00               	movlw	0
 18058  001C8C  6E1B               	movwf	(___aomod@divisor+6)^0,c
 18059  001C8E  0E00               	movlw	0
 18060  001C90  6E1C               	movwf	(___aomod@divisor+7)^0,c
 18061  001C92  ECC5  F01D         	call	___aomod	;wreg free
 18062  001C96  C00D  F031         	movff	?___aomod,??_dtoa
 18063  001C9A  C00E  F032         	movff	?___aomod+1,??_dtoa+1
 18064  001C9E  C00F  F033         	movff	?___aomod+2,??_dtoa+2
 18065  001CA2  C010  F034         	movff	?___aomod+3,??_dtoa+3
 18066  001CA6  C011  F035         	movff	?___aomod+4,??_dtoa+4
 18067  001CAA  C012  F036         	movff	?___aomod+5,??_dtoa+5
 18068  001CAE  C013  F037         	movff	?___aomod+6,??_dtoa+6
 18069  001CB2  C014  F038         	movff	?___aomod+7,??_dtoa+7
 18070  001CB6  C031  F01F         	movff	??_dtoa,abs@a
 18071  001CBA  C033  F020         	movff	??_dtoa+2,abs@a+1
 18072  001CBE  EC4E  F031         	call	_abs	;wreg free
 18073  001CC2  501F               	movf	?_abs^0,w,c
 18074  001CC4  0F30               	addlw	48
 18075  001CC6  6EDF               	movwf	indf2,c
 18076  001CC8                     
 18077                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 18078  001CC8  063B               	decf	dtoa@p^0,f,c
 18079  001CCA  A0D8               	btfss	status,0,c
 18080  001CCC  063C               	decf	(dtoa@p+1)^0,f,c
 18081  001CCE                     
 18082                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 18083  001CCE  063D               	decf	dtoa@w^0,f,c
 18084  001CD0  A0D8               	btfss	status,0,c
 18085  001CD2  063E               	decf	(dtoa@w+1)^0,f,c
 18086  001CD4                     
 18087                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 18088  001CD4  C041  F00D         	movff	dtoa@n,___aodiv@dividend
 18089  001CD8  C042  F00E         	movff	dtoa@n+1,___aodiv@dividend+1
 18090  001CDC  C043  F00F         	movff	dtoa@n+2,___aodiv@dividend+2
 18091  001CE0  C044  F010         	movff	dtoa@n+3,___aodiv@dividend+3
 18092  001CE4  C045  F011         	movff	dtoa@n+4,___aodiv@dividend+4
 18093  001CE8  C046  F012         	movff	dtoa@n+5,___aodiv@dividend+5
 18094  001CEC  C047  F013         	movff	dtoa@n+6,___aodiv@dividend+6
 18095  001CF0  C048  F014         	movff	dtoa@n+7,___aodiv@dividend+7
 18096  001CF4  0E0A               	movlw	10
 18097  001CF6  6E15               	movwf	___aodiv@divisor^0,c
 18098  001CF8  0E00               	movlw	0
 18099  001CFA  6E16               	movwf	(___aodiv@divisor+1)^0,c
 18100  001CFC  0E00               	movlw	0
 18101  001CFE  6E17               	movwf	(___aodiv@divisor+2)^0,c
 18102  001D00  0E00               	movlw	0
 18103  001D02  6E18               	movwf	(___aodiv@divisor+3)^0,c
 18104  001D04  0E00               	movlw	0
 18105  001D06  6E19               	movwf	(___aodiv@divisor+4)^0,c
 18106  001D08  0E00               	movlw	0
 18107  001D0A  6E1A               	movwf	(___aodiv@divisor+5)^0,c
 18108  001D0C  0E00               	movlw	0
 18109  001D0E  6E1B               	movwf	(___aodiv@divisor+6)^0,c
 18110  001D10  0E00               	movlw	0
 18111  001D12  6E1C               	movwf	(___aodiv@divisor+7)^0,c
 18112  001D14  EC92  F01B         	call	___aodiv	;wreg free
 18113  001D18  C00D  F041         	movff	?___aodiv,dtoa@n
 18114  001D1C  C00E  F042         	movff	?___aodiv+1,dtoa@n+1
 18115  001D20  C00F  F043         	movff	?___aodiv+2,dtoa@n+2
 18116  001D24  C010  F044         	movff	?___aodiv+3,dtoa@n+3
 18117  001D28  C011  F045         	movff	?___aodiv+4,dtoa@n+4
 18118  001D2C  C012  F046         	movff	?___aodiv+5,dtoa@n+5
 18119  001D30  C013  F047         	movff	?___aodiv+6,dtoa@n+6
 18120  001D34  C014  F048         	movff	?___aodiv+7,dtoa@n+7
 18121  001D38                     l8146:
 18122                           
 18123                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 18124  001D38  BE4A               	btfsc	(dtoa@i+1)^0,7,c
 18125  001D3A  EFA7  F00E         	goto	u9241
 18126  001D3E  504A               	movf	(dtoa@i+1)^0,w,c
 18127  001D40  E108               	bnz	u9240
 18128  001D42  0449               	decf	dtoa@i^0,w,c
 18129  001D44  A0D8               	btfss	status,0,c
 18130  001D46  EFA7  F00E         	goto	u9241
 18131  001D4A  EFA9  F00E         	goto	u9240
 18132  001D4E                     u9241:
 18133  001D4E  EFD9  F00E         	goto	l8156
 18134  001D52                     u9240:
 18135  001D52  5041               	movf	dtoa@n^0,w,c
 18136  001D54  1042               	iorwf	(dtoa@n+1)^0,w,c
 18137  001D56  1043               	iorwf	(dtoa@n+2)^0,w,c
 18138  001D58  1044               	iorwf	(dtoa@n+3)^0,w,c
 18139  001D5A  1045               	iorwf	(dtoa@n+4)^0,w,c
 18140  001D5C  1046               	iorwf	(dtoa@n+5)^0,w,c
 18141  001D5E  1047               	iorwf	(dtoa@n+6)^0,w,c
 18142  001D60  1048               	iorwf	(dtoa@n+7)^0,w,c
 18143  001D62  A4D8               	btfss	status,2,c
 18144  001D64  EFB6  F00E         	goto	u9251
 18145  001D68  EFB8  F00E         	goto	u9250
 18146  001D6C                     u9251:
 18147  001D6C  EF20  F00E         	goto	l8136
 18148  001D70                     u9250:
 18149  001D70  BE3C               	btfsc	(dtoa@p+1)^0,7,c
 18150  001D72  EFC5  F00E         	goto	u9260
 18151  001D76  503C               	movf	(dtoa@p+1)^0,w,c
 18152  001D78  E106               	bnz	u9261
 18153  001D7A  043B               	decf	dtoa@p^0,w,c
 18154  001D7C  B0D8               	btfsc	status,0,c
 18155  001D7E  EFC3  F00E         	goto	u9261
 18156  001D82  EFC5  F00E         	goto	u9260
 18157  001D86                     u9261:
 18158  001D86  EF20  F00E         	goto	l8136
 18159  001D8A                     u9260:
 18160  001D8A  BE3E               	btfsc	(dtoa@w+1)^0,7,c
 18161  001D8C  EFD0  F00E         	goto	u9271
 18162  001D90  503E               	movf	(dtoa@w+1)^0,w,c
 18163  001D92  E108               	bnz	u9270
 18164  001D94  043D               	decf	dtoa@w^0,w,c
 18165  001D96  A0D8               	btfss	status,0,c
 18166  001D98  EFD0  F00E         	goto	u9271
 18167  001D9C  EFD2  F00E         	goto	u9270
 18168  001DA0                     u9271:
 18169  001DA0  EFD9  F00E         	goto	l8156
 18170  001DA4                     u9270:
 18171  001DA4  B269               	btfsc	_flags^0,1,c
 18172  001DA6  EFD7  F00E         	goto	u9281
 18173  001DAA  EFD9  F00E         	goto	u9280
 18174  001DAE                     u9281:
 18175  001DAE  EF20  F00E         	goto	l8136
 18176  001DB2                     u9280:
 18177  001DB2                     l8156:
 18178                           
 18179                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 18180  001DB2  503F               	movf	dtoa@s^0,w,c
 18181  001DB4  1040               	iorwf	(dtoa@s+1)^0,w,c
 18182  001DB6  A4D8               	btfss	status,2,c
 18183  001DB8  EFE0  F00E         	goto	u9291
 18184  001DBC  EFE2  F00E         	goto	u9290
 18185  001DC0                     u9291:
 18186  001DC0  EFE9  F00E         	goto	l8160
 18187  001DC4                     u9290:
 18188  001DC4  A469               	btfss	_flags^0,2,c
 18189  001DC6  EFE7  F00E         	goto	u9301
 18190  001DCA  EFE9  F00E         	goto	u9300
 18191  001DCE                     u9301:
 18192  001DCE  EF07  F00F         	goto	l8170
 18193  001DD2                     u9300:
 18194  001DD2                     l8160:
 18195                           
 18196                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 18197  001DD2  0649               	decf	dtoa@i^0,f,c
 18198  001DD4  A0D8               	btfss	status,0,c
 18199  001DD6  064A               	decf	(dtoa@i+1)^0,f,c
 18200  001DD8                     
 18201                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 18202  001DD8  503F               	movf	dtoa@s^0,w,c
 18203  001DDA  1040               	iorwf	(dtoa@s+1)^0,w,c
 18204  001DDC  A4D8               	btfss	status,2,c
 18205  001DDE  EFF3  F00E         	goto	u9311
 18206  001DE2  EFF5  F00E         	goto	u9310
 18207  001DE6                     u9311:
 18208  001DE6  EFFB  F00E         	goto	l8166
 18209  001DEA                     u9310:
 18210  001DEA  0E00               	movlw	0
 18211  001DEC  6E3A               	movwf	(_dtoa$3247+1)^0,c
 18212  001DEE  0E2B               	movlw	43
 18213  001DF0  6E39               	movwf	_dtoa$3247^0,c
 18214  001DF2  EFFF  F00E         	goto	l8168
 18215  001DF6                     l8166:
 18216  001DF6  0E00               	movlw	0
 18217  001DF8  6E3A               	movwf	(_dtoa$3247+1)^0,c
 18218  001DFA  0E2D               	movlw	45
 18219  001DFC  6E39               	movwf	_dtoa$3247^0,c
 18220  001DFE                     l8168:
 18221  001DFE  0E69               	movlw	low _dbuf
 18222  001E00  2449               	addwf	dtoa@i^0,w,c
 18223  001E02  6ED9               	movwf	fsr2l,c
 18224  001E04  0E02               	movlw	high _dbuf
 18225  001E06  204A               	addwfc	(dtoa@i+1)^0,w,c
 18226  001E08  6EDA               	movwf	fsr2h,c
 18227  001E0A  C039  FFDF         	movff	_dtoa$3247,indf2
 18228  001E0E                     l8170:
 18229                           
 18230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 18231  001E0E  C027  F019         	movff	dtoa@fp,pad@fp
 18232  001E12  C028  F01A         	movff	dtoa@fp+1,pad@fp+1
 18233  001E16  0E69               	movlw	low _dbuf
 18234  001E18  2449               	addwf	dtoa@i^0,w,c
 18235  001E1A  6E1B               	movwf	pad@buf^0,c
 18236  001E1C  0E02               	movlw	high _dbuf
 18237  001E1E  204A               	addwfc	(dtoa@i+1)^0,w,c
 18238  001E20  6E1C               	movwf	(pad@buf+1)^0,c
 18239  001E22  C03D  F01D         	movff	dtoa@w,pad@p
 18240  001E26  C03E  F01E         	movff	dtoa@w+1,pad@p+1
 18241  001E2A  EC92  F028         	call	_pad	;wreg free
 18242  001E2E  C019  F027         	movff	?_pad,?_dtoa
 18243  001E32  C01A  F028         	movff	?_pad+1,?_dtoa+1
 18244  001E36  0012               	return		;funcret
 18245  001E38                     __end_of_dtoa:
 18246                           	opt callstack 0
 18247                           
 18248 ;; *************** function _pad *****************
 18249 ;; Defined at:
 18250 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18251 ;; Parameters:    Size  Location     Type
 18252 ;;  fp              2   24[COMRAM] PTR struct _IO_FILE
 18253 ;;		 -> NULL(0), 
 18254 ;;  buf             2   26[COMRAM] PTR unsigned char 
 18255 ;;		 -> dbuf(32), 
 18256 ;;  p               2   28[COMRAM] int 
 18257 ;; Auto vars:     Size  Location     Type
 18258 ;;  w               2   33[COMRAM] int 
 18259 ;;  i               2   31[COMRAM] int 
 18260 ;; Return value:  Size  Location     Type
 18261 ;;                  2   24[COMRAM] int 
 18262 ;; Registers used:
 18263 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18264 ;; Tracked objects:
 18265 ;;		On entry : 0/0
 18266 ;;		On exit  : 0/0
 18267 ;;		Unchanged: 0/0
 18268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18269 ;;      Params:         6       0       0       0       0       0       0
 18270 ;;      Locals:         4       0       0       0       0       0       0
 18271 ;;      Temps:          1       0       0       0       0       0       0
 18272 ;;      Totals:        11       0       0       0       0       0       0
 18273 ;;Total ram usage:       11 bytes
 18274 ;; Hardware stack levels used:    1
 18275 ;; Hardware stack levels required when called:    5
 18276 ;; This function calls:
 18277 ;;		_fputc
 18278 ;;		_fputs
 18279 ;;		_strlen
 18280 ;; This function is called by:
 18281 ;;		_dtoa
 18282 ;;		_utoa
 18283 ;;		_xtoa
 18284 ;; This function uses a non-reentrant model
 18285 ;;
 18286                           
 18287                           	psect	text72
 18288  005124                     __ptext72:
 18289                           	opt callstack 0
 18290  005124                     _pad:
 18291                           	opt callstack 15
 18292  005124                     
 18293                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 18294  005124  A069               	btfss	_flags^0,0,c
 18295  005126  EF97  F028         	goto	u8691
 18296  00512A  EF99  F028         	goto	u8690
 18297  00512E                     u8691:
 18298  00512E  EFA3  F028         	goto	l7890
 18299  005132                     u8690:
 18300  005132                     
 18301                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 18302  005132  C01B  F012         	movff	pad@buf,fputs@s
 18303  005136  C01C  F013         	movff	pad@buf+1,fputs@s+1
 18304  00513A  C019  F014         	movff	pad@fp,fputs@fp
 18305  00513E  C01A  F015         	movff	pad@fp+1,fputs@fp+1
 18306  005142  EC0B  F031         	call	_fputs	;wreg free
 18307  005146                     l7890:
 18308                           
 18309                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 18310  005146  BE1E               	btfsc	(pad@p+1)^0,7,c
 18311  005148  EFA8  F028         	goto	u8701
 18312  00514C  EFAA  F028         	goto	u8700
 18313  005150                     u8701:
 18314  005150  EFB0  F028         	goto	l7894
 18315  005154                     u8700:
 18316  005154  C01D  F022         	movff	pad@p,pad@w
 18317  005158  C01E  F023         	movff	pad@p+1,pad@w+1
 18318  00515C  EFB4  F028         	goto	l1171
 18319  005160                     l7894:
 18320  005160  0E00               	movlw	0
 18321  005162  6E23               	movwf	(pad@w+1)^0,c
 18322  005164  0E00               	movlw	0
 18323  005166  6E22               	movwf	pad@w^0,c
 18324  005168                     l1171:
 18325                           
 18326                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 18327  005168  0E00               	movlw	0
 18328  00516A  6E21               	movwf	(pad@i+1)^0,c
 18329  00516C  0E00               	movlw	0
 18330  00516E  6E20               	movwf	pad@i^0,c
 18331                           
 18332                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18333  005170  EFC6  F028         	goto	l7900
 18334  005174                     l7896:
 18335                           
 18336                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 18337  005174  0E00               	movlw	0
 18338  005176  6E0F               	movwf	(fputc@c+1)^0,c
 18339  005178  0E20               	movlw	32
 18340  00517A  6E0E               	movwf	fputc@c^0,c
 18341  00517C  C019  F010         	movff	pad@fp,fputc@fp
 18342  005180  C01A  F011         	movff	pad@fp+1,fputc@fp+1
 18343  005184  EC10  F033         	call	_fputc	;wreg free
 18344  005188                     
 18345                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 18346  005188  4A20               	infsnz	pad@i^0,f,c
 18347  00518A  2A21               	incf	(pad@i+1)^0,f,c
 18348  00518C                     l7900:
 18349                           
 18350                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18351  00518C  5022               	movf	pad@w^0,w,c
 18352  00518E  5C20               	subwf	pad@i^0,w,c
 18353  005190  5021               	movf	(pad@i+1)^0,w,c
 18354  005192  0A80               	xorlw	128
 18355  005194  6E1F               	movwf	??_pad^0,c
 18356  005196  5023               	movf	(pad@w+1)^0,w,c
 18357  005198  0A80               	xorlw	128
 18358  00519A  581F               	subwfb	??_pad^0,w,c
 18359  00519C  A0D8               	btfss	status,0,c
 18360  00519E  EFD3  F028         	goto	u8711
 18361  0051A2  EFD5  F028         	goto	u8710
 18362  0051A6                     u8711:
 18363  0051A6  EFBA  F028         	goto	l7896
 18364  0051AA                     u8710:
 18365  0051AA                     
 18366                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 18367  0051AA  B069               	btfsc	_flags^0,0,c
 18368  0051AC  EFDA  F028         	goto	u8721
 18369  0051B0  EFDC  F028         	goto	u8720
 18370  0051B4                     u8721:
 18371  0051B4  EFE6  F028         	goto	l7904
 18372  0051B8                     u8720:
 18373  0051B8                     
 18374                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 18375  0051B8  C01B  F012         	movff	pad@buf,fputs@s
 18376  0051BC  C01C  F013         	movff	pad@buf+1,fputs@s+1
 18377  0051C0  C019  F014         	movff	pad@fp,fputs@fp
 18378  0051C4  C01A  F015         	movff	pad@fp+1,fputs@fp+1
 18379  0051C8  EC0B  F031         	call	_fputs	;wreg free
 18380  0051CC                     l7904:
 18381                           
 18382                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 18383  0051CC  C01B  F00D         	movff	pad@buf,strlen@s
 18384  0051D0  C01C  F00E         	movff	pad@buf+1,strlen@s+1
 18385  0051D4  EC54  F030         	call	_strlen	;wreg free
 18386  0051D8  5022               	movf	pad@w^0,w,c
 18387  0051DA  240D               	addwf	?_strlen^0,w,c
 18388  0051DC  6E19               	movwf	?_pad^0,c
 18389  0051DE  5023               	movf	(pad@w+1)^0,w,c
 18390  0051E0  200E               	addwfc	(?_strlen+1)^0,w,c
 18391  0051E2  6E1A               	movwf	(?_pad+1)^0,c
 18392  0051E4  0012               	return		;funcret
 18393  0051E6                     __end_of_pad:
 18394                           	opt callstack 0
 18395                           
 18396 ;; *************** function _strlen *****************
 18397 ;; Defined at:
 18398 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 18399 ;; Parameters:    Size  Location     Type
 18400 ;;  s               2   12[COMRAM] PTR const unsigned char 
 18401 ;;		 -> dbuf(32), itoa@buffer(12), STR_63(5), GPS_lon(15), 
 18402 ;;		 -> STR_62(5), GPS_lat(15), STR_61(8), STR_60(5), 
 18403 ;;		 -> STR_59(4), STR_58(4), STR_57(6), STR_56(5), 
 18404 ;;		 -> STR_55(4), STR_54(4), STR_53(10), STR_52(17), 
 18405 ;;		 -> STR_51(17), STR_50(17), STR_49(7), STR_48(17), 
 18406 ;;		 -> STR_47(17), STR_46(17), STR_45(7), STR_44(5), 
 18407 ;;		 -> STR_43(5), STR_42(5), STR_41(5), STR_40(3), 
 18408 ;;		 -> STR_39(17), STR_38(17), STR_37(17), STR_36(17), 
 18409 ;;		 -> STR_35(14), STR_34(15), STR_33(15), STR_32(12), 
 18410 ;;		 -> STR_31(17), 
 18411 ;; Auto vars:     Size  Location     Type
 18412 ;;  a               2   14[COMRAM] PTR const unsigned char 
 18413 ;;		 -> dbuf(32), itoa@buffer(12), STR_63(5), GPS_lon(15), 
 18414 ;;		 -> STR_62(5), GPS_lat(15), STR_61(8), STR_60(5), 
 18415 ;;		 -> STR_59(4), STR_58(4), STR_57(6), STR_56(5), 
 18416 ;;		 -> STR_55(4), STR_54(4), STR_53(10), STR_52(17), 
 18417 ;;		 -> STR_51(17), STR_50(17), STR_49(7), STR_48(17), 
 18418 ;;		 -> STR_47(17), STR_46(17), STR_45(7), STR_44(5), 
 18419 ;;		 -> STR_43(5), STR_42(5), STR_41(5), STR_40(3), 
 18420 ;;		 -> STR_39(17), STR_38(17), STR_37(17), STR_36(17), 
 18421 ;;		 -> STR_35(14), STR_34(15), STR_33(15), STR_32(12), 
 18422 ;;		 -> STR_31(17), 
 18423 ;; Return value:  Size  Location     Type
 18424 ;;                  2   12[COMRAM] unsigned int 
 18425 ;; Registers used:
 18426 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 18427 ;; Tracked objects:
 18428 ;;		On entry : 0/0
 18429 ;;		On exit  : 0/0
 18430 ;;		Unchanged: 0/0
 18431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18432 ;;      Params:         2       0       0       0       0       0       0
 18433 ;;      Locals:         2       0       0       0       0       0       0
 18434 ;;      Temps:          0       0       0       0       0       0       0
 18435 ;;      Totals:         4       0       0       0       0       0       0
 18436 ;;Total ram usage:        4 bytes
 18437 ;; Hardware stack levels used:    1
 18438 ;; Hardware stack levels required when called:    2
 18439 ;; This function calls:
 18440 ;;		Nothing
 18441 ;; This function is called by:
 18442 ;;		_print_string
 18443 ;;		_show_display
 18444 ;;		_pad
 18445 ;;		_eval_gps
 18446 ;; This function uses a non-reentrant model
 18447 ;;
 18448                           
 18449                           	psect	text73
 18450  0060A8                     __ptext73:
 18451                           	opt callstack 0
 18452  0060A8                     _strlen:
 18453                           	opt callstack 17
 18454  0060A8  C00D  F00F         	movff	strlen@s,strlen@a
 18455  0060AC  C00E  F010         	movff	strlen@s+1,strlen@a+1
 18456  0060B0  EF5C  F030         	goto	l7868
 18457  0060B4                     l7866:
 18458  0060B4  4A0D               	infsnz	strlen@s^0,f,c
 18459  0060B6  2A0E               	incf	(strlen@s+1)^0,f,c
 18460  0060B8                     l7868:
 18461  0060B8  C00D  FFF6         	movff	strlen@s,tblptrl
 18462  0060BC  C00E  FFF7         	movff	strlen@s+1,tblptrh
 18463  0060C0  6AF8               	clrf	tblptru,c
 18464  0060C2  0E05               	movlw	(high __ramtop+-1)
 18465  0060C4  64F7               	cpfsgt	tblptrh,c
 18466  0060C6  D003               	bra	u8647
 18467  0060C8  0008               	tblrd		*
 18468  0060CA  50F5               	movf	tablat,w,c
 18469  0060CC  D005               	bra	u8640
 18470  0060CE                     u8647:
 18471  0060CE  CFF6 FFE9          	movff	tblptrl,fsr0l
 18472  0060D2  CFF7 FFEA          	movff	tblptrh,fsr0h
 18473  0060D6  50EF               	movf	indf0,w,c
 18474  0060D8                     u8640:
 18475  0060D8  0900               	iorlw	0
 18476  0060DA  A4D8               	btfss	status,2,c
 18477  0060DC  EF72  F030         	goto	u8651
 18478  0060E0  EF74  F030         	goto	u8650
 18479  0060E4                     u8651:
 18480  0060E4  EF5A  F030         	goto	l7866
 18481  0060E8                     u8650:
 18482  0060E8  500F               	movf	strlen@a^0,w,c
 18483  0060EA  5C0D               	subwf	strlen@s^0,w,c
 18484  0060EC  6E0D               	movwf	?_strlen^0,c
 18485  0060EE  5010               	movf	(strlen@a+1)^0,w,c
 18486  0060F0  580E               	subwfb	(strlen@s+1)^0,w,c
 18487  0060F2  6E0E               	movwf	(?_strlen+1)^0,c
 18488  0060F4  0012               	return		;funcret
 18489  0060F6                     __end_of_strlen:
 18490                           	opt callstack 0
 18491                           
 18492 ;; *************** function _fputs *****************
 18493 ;; Defined at:
 18494 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 18495 ;; Parameters:    Size  Location     Type
 18496 ;;  s               2   17[COMRAM] PTR const unsigned char 
 18497 ;;		 -> dbuf(32), 
 18498 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
 18499 ;;		 -> NULL(0), 
 18500 ;; Auto vars:     Size  Location     Type
 18501 ;;  i               2   22[COMRAM] int 
 18502 ;;  c               1   21[COMRAM] unsigned char 
 18503 ;; Return value:  Size  Location     Type
 18504 ;;                  2   17[COMRAM] int 
 18505 ;; Registers used:
 18506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18507 ;; Tracked objects:
 18508 ;;		On entry : 0/0
 18509 ;;		On exit  : 0/0
 18510 ;;		Unchanged: 0/0
 18511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18512 ;;      Params:         4       0       0       0       0       0       0
 18513 ;;      Locals:         3       0       0       0       0       0       0
 18514 ;;      Temps:          0       0       0       0       0       0       0
 18515 ;;      Totals:         7       0       0       0       0       0       0
 18516 ;;Total ram usage:        7 bytes
 18517 ;; Hardware stack levels used:    1
 18518 ;; Hardware stack levels required when called:    4
 18519 ;; This function calls:
 18520 ;;		_fputc
 18521 ;; This function is called by:
 18522 ;;		_pad
 18523 ;; This function uses a non-reentrant model
 18524 ;;
 18525                           
 18526                           	psect	text74
 18527  006216                     __ptext74:
 18528                           	opt callstack 0
 18529  006216                     _fputs:
 18530                           	opt callstack 15
 18531  006216  0E00               	movlw	0
 18532  006218  6E18               	movwf	(fputs@i+1)^0,c
 18533  00621A  0E00               	movlw	0
 18534  00621C  6E17               	movwf	fputs@i^0,c
 18535  00621E  EF1C  F031         	goto	l7880
 18536  006222                     l7876:
 18537  006222  C016  F00E         	movff	fputs@c,fputc@c
 18538  006226  6A0F               	clrf	(fputc@c+1)^0,c
 18539  006228  C014  F010         	movff	fputs@fp,fputc@fp
 18540  00622C  C015  F011         	movff	fputs@fp+1,fputc@fp+1
 18541  006230  EC10  F033         	call	_fputc	;wreg free
 18542  006234  4A17               	infsnz	fputs@i^0,f,c
 18543  006236  2A18               	incf	(fputs@i+1)^0,f,c
 18544  006238                     l7880:
 18545  006238  5017               	movf	fputs@i^0,w,c
 18546  00623A  2412               	addwf	fputs@s^0,w,c
 18547  00623C  6ED9               	movwf	fsr2l,c
 18548  00623E  5018               	movf	(fputs@i+1)^0,w,c
 18549  006240  2013               	addwfc	(fputs@s+1)^0,w,c
 18550  006242  6EDA               	movwf	fsr2h,c
 18551  006244  50DF               	movf	indf2,w,c
 18552  006246  6E16               	movwf	fputs@c^0,c
 18553  006248  5016               	movf	fputs@c^0,w,c
 18554  00624A  A4D8               	btfss	status,2,c
 18555  00624C  EF2A  F031         	goto	u8661
 18556  006250  EF2C  F031         	goto	u8660
 18557  006254                     u8661:
 18558  006254  EF11  F031         	goto	l7876
 18559  006258                     u8660:
 18560  006258  0012               	return		;funcret
 18561  00625A                     __end_of_fputs:
 18562                           	opt callstack 0
 18563                           
 18564 ;; *************** function _fputc *****************
 18565 ;; Defined at:
 18566 ;;		line 113 in file "src/driver/usart.c"
 18567 ;; Parameters:    Size  Location     Type
 18568 ;;  c               2   13[COMRAM] int 
 18569 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
 18570 ;;		 -> NULL(0), 
 18571 ;; Auto vars:     Size  Location     Type
 18572 ;;		None
 18573 ;; Return value:  Size  Location     Type
 18574 ;;                  2   13[COMRAM] int 
 18575 ;; Registers used:
 18576 ;;		None
 18577 ;; Tracked objects:
 18578 ;;		On entry : 0/0
 18579 ;;		On exit  : 0/0
 18580 ;;		Unchanged: 0/0
 18581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18582 ;;      Params:         4       0       0       0       0       0       0
 18583 ;;      Locals:         0       0       0       0       0       0       0
 18584 ;;      Temps:          0       0       0       0       0       0       0
 18585 ;;      Totals:         4       0       0       0       0       0       0
 18586 ;;Total ram usage:        4 bytes
 18587 ;; Hardware stack levels used:    1
 18588 ;; Hardware stack levels required when called:    3
 18589 ;; This function calls:
 18590 ;;		_usart_putc
 18591 ;; This function is called by:
 18592 ;;		_pad
 18593 ;;		_vfpfcnvrt
 18594 ;;		_fputs
 18595 ;; This function uses a non-reentrant model
 18596 ;;
 18597                           
 18598                           	psect	text75
 18599  006620                     __ptext75:
 18600                           	opt callstack 0
 18601  006620                     _fputc:
 18602                           	opt callstack 15
 18603  006620  0012               	return		;funcret
 18604  006622                     __end_of_fputc:
 18605                           	opt callstack 0
 18606                           
 18607 ;; *************** function _usart_putc *****************
 18608 ;; Defined at:
 18609 ;;		line 41 in file "src/driver/usart.c"
 18610 ;; Parameters:    Size  Location     Type
 18611 ;;  c               1    wreg     unsigned char 
 18612 ;; Auto vars:     Size  Location     Type
 18613 ;;  c               1   12[COMRAM] unsigned char 
 18614 ;; Return value:  Size  Location     Type
 18615 ;;                  1    wreg      unsigned char 
 18616 ;; Registers used:
 18617 ;;		wreg
 18618 ;; Tracked objects:
 18619 ;;		On entry : 0/0
 18620 ;;		On exit  : 0/0
 18621 ;;		Unchanged: 0/0
 18622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18623 ;;      Params:         0       0       0       0       0       0       0
 18624 ;;      Locals:         1       0       0       0       0       0       0
 18625 ;;      Temps:          0       0       0       0       0       0       0
 18626 ;;      Totals:         1       0       0       0       0       0       0
 18627 ;;Total ram usage:        1 bytes
 18628 ;; Hardware stack levels used:    1
 18629 ;; Hardware stack levels required when called:    2
 18630 ;; This function calls:
 18631 ;;		Nothing
 18632 ;; This function is called by:
 18633 ;;		_fputc
 18634 ;;		_putgps
 18635 ;; This function uses a non-reentrant model
 18636 ;;
 18637                           
 18638                           	psect	text76
 18639  006600                     __ptext76:
 18640                           	opt callstack 0
 18641  006600                     _usart_putc:
 18642                           	opt callstack 15
 18643                           
 18644                           ;incstack = 0
 18645                           ;usart_putc@c stored from wreg
 18646  006600  6E0D               	movwf	usart_putc@c^0,c
 18647  006602                     l421:
 18648  006602  A2AC               	btfss	172,1,c	;volatile
 18649  006604  EF06  F033         	goto	u8631
 18650  006608  EF08  F033         	goto	u8630
 18651  00660C                     u8631:
 18652  00660C  EF01  F033         	goto	l421
 18653  006610                     u8630:
 18654  006610                     
 18655                           ;src/driver/usart.c: 46:     TXREG = c;
 18656  006610  C00D  FFAD         	movff	usart_putc@c,4013	;volatile
 18657  006614  0012               	return		;funcret
 18658  006616                     __end_of_usart_putc:
 18659                           	opt callstack 0
 18660                           
 18661 ;; *************** function _abs *****************
 18662 ;; Defined at:
 18663 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 18664 ;; Parameters:    Size  Location     Type
 18665 ;;  a               2   30[COMRAM] int 
 18666 ;; Auto vars:     Size  Location     Type
 18667 ;;		None
 18668 ;; Return value:  Size  Location     Type
 18669 ;;                  2   30[COMRAM] int 
 18670 ;; Registers used:
 18671 ;;		wreg, status,2, status,0
 18672 ;; Tracked objects:
 18673 ;;		On entry : 0/0
 18674 ;;		On exit  : 0/0
 18675 ;;		Unchanged: 0/0
 18676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18677 ;;      Params:         2       0       0       0       0       0       0
 18678 ;;      Locals:         0       0       0       0       0       0       0
 18679 ;;      Temps:          2       0       0       0       0       0       0
 18680 ;;      Totals:         4       0       0       0       0       0       0
 18681 ;;Total ram usage:        4 bytes
 18682 ;; Hardware stack levels used:    1
 18683 ;; Hardware stack levels required when called:    2
 18684 ;; This function calls:
 18685 ;;		Nothing
 18686 ;; This function is called by:
 18687 ;;		_dtoa
 18688 ;; This function uses a non-reentrant model
 18689 ;;
 18690                           
 18691                           	psect	text77
 18692  00629C                     __ptext77:
 18693                           	opt callstack 0
 18694  00629C                     _abs:
 18695                           	opt callstack 18
 18696  00629C  BE20               	btfsc	(abs@a+1)^0,7,c
 18697  00629E  EF5B  F031         	goto	u8730
 18698  0062A2  5020               	movf	(abs@a+1)^0,w,c
 18699  0062A4  E106               	bnz	u8731
 18700  0062A6  041F               	decf	abs@a^0,w,c
 18701  0062A8  B0D8               	btfsc	status,0,c
 18702  0062AA  EF59  F031         	goto	u8731
 18703  0062AE  EF5B  F031         	goto	u8730
 18704  0062B2                     u8731:
 18705  0062B2  EF69  F031         	goto	l1972
 18706  0062B6                     u8730:
 18707  0062B6  C01F  F021         	movff	abs@a,??_abs
 18708  0062BA  C020  F022         	movff	abs@a+1,??_abs+1
 18709  0062BE  1E21               	comf	??_abs^0,f,c
 18710  0062C0  1E22               	comf	(??_abs+1)^0,f,c
 18711  0062C2  4A21               	infsnz	??_abs^0,f,c
 18712  0062C4  2A22               	incf	(??_abs+1)^0,f,c
 18713  0062C6  C021  F01F         	movff	??_abs,?_abs
 18714  0062CA  C022  F020         	movff	??_abs+1,?_abs+1
 18715  0062CE  EF6D  F031         	goto	l1975
 18716  0062D2                     l1972:
 18717  0062D2  C01F  F01F         	movff	abs@a,?_abs
 18718  0062D6  C020  F020         	movff	abs@a+1,?_abs+1
 18719  0062DA                     l1975:
 18720  0062DA  0012               	return		;funcret
 18721  0062DC                     __end_of_abs:
 18722                           	opt callstack 0
 18723                           
 18724 ;; *************** function ___aomod *****************
 18725 ;; Defined at:
 18726 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 18727 ;; Parameters:    Size  Location     Type
 18728 ;;  dividend        8   12[COMRAM] long long 
 18729 ;;  divisor         8   20[COMRAM] long long 
 18730 ;; Auto vars:     Size  Location     Type
 18731 ;;  sign            1   29[COMRAM] unsigned char 
 18732 ;;  counter         1   28[COMRAM] unsigned char 
 18733 ;; Return value:  Size  Location     Type
 18734 ;;                  8   12[COMRAM] long long 
 18735 ;; Registers used:
 18736 ;;		wreg, status,2, status,0
 18737 ;; Tracked objects:
 18738 ;;		On entry : 0/0
 18739 ;;		On exit  : 0/0
 18740 ;;		Unchanged: 0/0
 18741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18742 ;;      Params:        16       0       0       0       0       0       0
 18743 ;;      Locals:         2       0       0       0       0       0       0
 18744 ;;      Temps:          0       0       0       0       0       0       0
 18745 ;;      Totals:        18       0       0       0       0       0       0
 18746 ;;Total ram usage:       18 bytes
 18747 ;; Hardware stack levels used:    1
 18748 ;; Hardware stack levels required when called:    2
 18749 ;; This function calls:
 18750 ;;		Nothing
 18751 ;; This function is called by:
 18752 ;;		_dtoa
 18753 ;; This function uses a non-reentrant model
 18754 ;;
 18755                           
 18756                           	psect	text78
 18757  003B8A                     __ptext78:
 18758                           	opt callstack 0
 18759  003B8A                     ___aomod:
 18760                           	opt callstack 18
 18761  003B8A  0E00               	movlw	0
 18762  003B8C  6E1E               	movwf	___aomod@sign^0,c
 18763  003B8E  BE14               	btfsc	(___aomod@dividend+7)^0,7,c
 18764  003B90  EFCE  F01D         	goto	u8900
 18765  003B94  EFCC  F01D         	goto	u8901
 18766  003B98                     u8901:
 18767  003B98  EFE0  F01D         	goto	l7992
 18768  003B9C                     u8900:
 18769  003B9C  1E14               	comf	(___aomod@dividend+7)^0,f,c
 18770  003B9E  1E13               	comf	(___aomod@dividend+6)^0,f,c
 18771  003BA0  1E12               	comf	(___aomod@dividend+5)^0,f,c
 18772  003BA2  1E11               	comf	(___aomod@dividend+4)^0,f,c
 18773  003BA4  1E10               	comf	(___aomod@dividend+3)^0,f,c
 18774  003BA6  1E0F               	comf	(___aomod@dividend+2)^0,f,c
 18775  003BA8  1E0E               	comf	(___aomod@dividend+1)^0,f,c
 18776  003BAA  6C0D               	negf	___aomod@dividend^0,c
 18777  003BAC  0E00               	movlw	0
 18778  003BAE  220E               	addwfc	(___aomod@dividend+1)^0,f,c
 18779  003BB0  220F               	addwfc	(___aomod@dividend+2)^0,f,c
 18780  003BB2  2210               	addwfc	(___aomod@dividend+3)^0,f,c
 18781  003BB4  2211               	addwfc	(___aomod@dividend+4)^0,f,c
 18782  003BB6  2212               	addwfc	(___aomod@dividend+5)^0,f,c
 18783  003BB8  2213               	addwfc	(___aomod@dividend+6)^0,f,c
 18784  003BBA  2214               	addwfc	(___aomod@dividend+7)^0,f,c
 18785  003BBC  0E01               	movlw	1
 18786  003BBE  6E1E               	movwf	___aomod@sign^0,c
 18787  003BC0                     l7992:
 18788  003BC0  BE1C               	btfsc	(___aomod@divisor+7)^0,7,c
 18789  003BC2  EFE7  F01D         	goto	u8910
 18790  003BC6  EFE5  F01D         	goto	u8911
 18791  003BCA                     u8911:
 18792  003BCA  EFF7  F01D         	goto	l7996
 18793  003BCE                     u8910:
 18794  003BCE  1E1C               	comf	(___aomod@divisor+7)^0,f,c
 18795  003BD0  1E1B               	comf	(___aomod@divisor+6)^0,f,c
 18796  003BD2  1E1A               	comf	(___aomod@divisor+5)^0,f,c
 18797  003BD4  1E19               	comf	(___aomod@divisor+4)^0,f,c
 18798  003BD6  1E18               	comf	(___aomod@divisor+3)^0,f,c
 18799  003BD8  1E17               	comf	(___aomod@divisor+2)^0,f,c
 18800  003BDA  1E16               	comf	(___aomod@divisor+1)^0,f,c
 18801  003BDC  6C15               	negf	___aomod@divisor^0,c
 18802  003BDE  0E00               	movlw	0
 18803  003BE0  2216               	addwfc	(___aomod@divisor+1)^0,f,c
 18804  003BE2  2217               	addwfc	(___aomod@divisor+2)^0,f,c
 18805  003BE4  2218               	addwfc	(___aomod@divisor+3)^0,f,c
 18806  003BE6  2219               	addwfc	(___aomod@divisor+4)^0,f,c
 18807  003BE8  221A               	addwfc	(___aomod@divisor+5)^0,f,c
 18808  003BEA  221B               	addwfc	(___aomod@divisor+6)^0,f,c
 18809  003BEC  221C               	addwfc	(___aomod@divisor+7)^0,f,c
 18810  003BEE                     l7996:
 18811  003BEE  5015               	movf	___aomod@divisor^0,w,c
 18812  003BF0  1016               	iorwf	(___aomod@divisor+1)^0,w,c
 18813  003BF2  1017               	iorwf	(___aomod@divisor+2)^0,w,c
 18814  003BF4  1018               	iorwf	(___aomod@divisor+3)^0,w,c
 18815  003BF6  1019               	iorwf	(___aomod@divisor+4)^0,w,c
 18816  003BF8  101A               	iorwf	(___aomod@divisor+5)^0,w,c
 18817  003BFA  101B               	iorwf	(___aomod@divisor+6)^0,w,c
 18818  003BFC  101C               	iorwf	(___aomod@divisor+7)^0,w,c
 18819  003BFE  B4D8               	btfsc	status,2,c
 18820  003C00  EF04  F01E         	goto	u8921
 18821  003C04  EF06  F01E         	goto	u8920
 18822  003C08                     u8921:
 18823  003C08  EF4E  F01E         	goto	l8012
 18824  003C0C                     u8920:
 18825  003C0C  0E01               	movlw	1
 18826  003C0E  6E1D               	movwf	___aomod@counter^0,c
 18827  003C10  EF14  F01E         	goto	l8002
 18828  003C14                     l8000:
 18829  003C14  90D8               	bcf	status,0,c
 18830  003C16  3615               	rlcf	___aomod@divisor^0,f,c
 18831  003C18  3616               	rlcf	(___aomod@divisor+1)^0,f,c
 18832  003C1A  3617               	rlcf	(___aomod@divisor+2)^0,f,c
 18833  003C1C  3618               	rlcf	(___aomod@divisor+3)^0,f,c
 18834  003C1E  3619               	rlcf	(___aomod@divisor+4)^0,f,c
 18835  003C20  361A               	rlcf	(___aomod@divisor+5)^0,f,c
 18836  003C22  361B               	rlcf	(___aomod@divisor+6)^0,f,c
 18837  003C24  361C               	rlcf	(___aomod@divisor+7)^0,f,c
 18838  003C26  2A1D               	incf	___aomod@counter^0,f,c
 18839  003C28                     l8002:
 18840  003C28  AE1C               	btfss	(___aomod@divisor+7)^0,7,c
 18841  003C2A  EF19  F01E         	goto	u8931
 18842  003C2E  EF1B  F01E         	goto	u8930
 18843  003C32                     u8931:
 18844  003C32  EF0A  F01E         	goto	l8000
 18845  003C36                     u8930:
 18846  003C36                     l8004:
 18847  003C36  5015               	movf	___aomod@divisor^0,w,c
 18848  003C38  5C0D               	subwf	___aomod@dividend^0,w,c
 18849  003C3A  5016               	movf	(___aomod@divisor+1)^0,w,c
 18850  003C3C  580E               	subwfb	(___aomod@dividend+1)^0,w,c
 18851  003C3E  5017               	movf	(___aomod@divisor+2)^0,w,c
 18852  003C40  580F               	subwfb	(___aomod@dividend+2)^0,w,c
 18853  003C42  5018               	movf	(___aomod@divisor+3)^0,w,c
 18854  003C44  5810               	subwfb	(___aomod@dividend+3)^0,w,c
 18855  003C46  5019               	movf	(___aomod@divisor+4)^0,w,c
 18856  003C48  5811               	subwfb	(___aomod@dividend+4)^0,w,c
 18857  003C4A  501A               	movf	(___aomod@divisor+5)^0,w,c
 18858  003C4C  5812               	subwfb	(___aomod@dividend+5)^0,w,c
 18859  003C4E  501B               	movf	(___aomod@divisor+6)^0,w,c
 18860  003C50  5813               	subwfb	(___aomod@dividend+6)^0,w,c
 18861  003C52  501C               	movf	(___aomod@divisor+7)^0,w,c
 18862  003C54  5814               	subwfb	(___aomod@dividend+7)^0,w,c
 18863  003C56  A0D8               	btfss	status,0,c
 18864  003C58  EF30  F01E         	goto	u8941
 18865  003C5C  EF32  F01E         	goto	u8940
 18866  003C60                     u8941:
 18867  003C60  EF42  F01E         	goto	l8008
 18868  003C64                     u8940:
 18869  003C64  5015               	movf	___aomod@divisor^0,w,c
 18870  003C66  5E0D               	subwf	___aomod@dividend^0,f,c
 18871  003C68  5016               	movf	(___aomod@divisor+1)^0,w,c
 18872  003C6A  5A0E               	subwfb	(___aomod@dividend+1)^0,f,c
 18873  003C6C  5017               	movf	(___aomod@divisor+2)^0,w,c
 18874  003C6E  5A0F               	subwfb	(___aomod@dividend+2)^0,f,c
 18875  003C70  5018               	movf	(___aomod@divisor+3)^0,w,c
 18876  003C72  5A10               	subwfb	(___aomod@dividend+3)^0,f,c
 18877  003C74  5019               	movf	(___aomod@divisor+4)^0,w,c
 18878  003C76  5A11               	subwfb	(___aomod@dividend+4)^0,f,c
 18879  003C78  501A               	movf	(___aomod@divisor+5)^0,w,c
 18880  003C7A  5A12               	subwfb	(___aomod@dividend+5)^0,f,c
 18881  003C7C  501B               	movf	(___aomod@divisor+6)^0,w,c
 18882  003C7E  5A13               	subwfb	(___aomod@dividend+6)^0,f,c
 18883  003C80  501C               	movf	(___aomod@divisor+7)^0,w,c
 18884  003C82  5A14               	subwfb	(___aomod@dividend+7)^0,f,c
 18885  003C84                     l8008:
 18886  003C84  90D8               	bcf	status,0,c
 18887  003C86  321C               	rrcf	(___aomod@divisor+7)^0,f,c
 18888  003C88  321B               	rrcf	(___aomod@divisor+6)^0,f,c
 18889  003C8A  321A               	rrcf	(___aomod@divisor+5)^0,f,c
 18890  003C8C  3219               	rrcf	(___aomod@divisor+4)^0,f,c
 18891  003C8E  3218               	rrcf	(___aomod@divisor+3)^0,f,c
 18892  003C90  3217               	rrcf	(___aomod@divisor+2)^0,f,c
 18893  003C92  3216               	rrcf	(___aomod@divisor+1)^0,f,c
 18894  003C94  3215               	rrcf	___aomod@divisor^0,f,c
 18895  003C96  2E1D               	decfsz	___aomod@counter^0,f,c
 18896  003C98  EF1B  F01E         	goto	l8004
 18897  003C9C                     l8012:
 18898  003C9C  501E               	movf	___aomod@sign^0,w,c
 18899  003C9E  B4D8               	btfsc	status,2,c
 18900  003CA0  EF54  F01E         	goto	u8951
 18901  003CA4  EF56  F01E         	goto	u8950
 18902  003CA8                     u8951:
 18903  003CA8  EF66  F01E         	goto	l8016
 18904  003CAC                     u8950:
 18905  003CAC  1E14               	comf	(___aomod@dividend+7)^0,f,c
 18906  003CAE  1E13               	comf	(___aomod@dividend+6)^0,f,c
 18907  003CB0  1E12               	comf	(___aomod@dividend+5)^0,f,c
 18908  003CB2  1E11               	comf	(___aomod@dividend+4)^0,f,c
 18909  003CB4  1E10               	comf	(___aomod@dividend+3)^0,f,c
 18910  003CB6  1E0F               	comf	(___aomod@dividend+2)^0,f,c
 18911  003CB8  1E0E               	comf	(___aomod@dividend+1)^0,f,c
 18912  003CBA  6C0D               	negf	___aomod@dividend^0,c
 18913  003CBC  0E00               	movlw	0
 18914  003CBE  220E               	addwfc	(___aomod@dividend+1)^0,f,c
 18915  003CC0  220F               	addwfc	(___aomod@dividend+2)^0,f,c
 18916  003CC2  2210               	addwfc	(___aomod@dividend+3)^0,f,c
 18917  003CC4  2211               	addwfc	(___aomod@dividend+4)^0,f,c
 18918  003CC6  2212               	addwfc	(___aomod@dividend+5)^0,f,c
 18919  003CC8  2213               	addwfc	(___aomod@dividend+6)^0,f,c
 18920  003CCA  2214               	addwfc	(___aomod@dividend+7)^0,f,c
 18921  003CCC                     l8016:
 18922  003CCC  C00D  F00D         	movff	___aomod@dividend,?___aomod
 18923  003CD0  C00E  F00E         	movff	___aomod@dividend+1,?___aomod+1
 18924  003CD4  C00F  F00F         	movff	___aomod@dividend+2,?___aomod+2
 18925  003CD8  C010  F010         	movff	___aomod@dividend+3,?___aomod+3
 18926  003CDC  C011  F011         	movff	___aomod@dividend+4,?___aomod+4
 18927  003CE0  C012  F012         	movff	___aomod@dividend+5,?___aomod+5
 18928  003CE4  C013  F013         	movff	___aomod@dividend+6,?___aomod+6
 18929  003CE8  C014  F014         	movff	___aomod@dividend+7,?___aomod+7
 18930  003CEC  0012               	return		;funcret
 18931  003CEE                     __end_of___aomod:
 18932                           	opt callstack 0
 18933                           
 18934 ;; *************** function ___aodiv *****************
 18935 ;; Defined at:
 18936 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 18937 ;; Parameters:    Size  Location     Type
 18938 ;;  dividend        8   12[COMRAM] long long 
 18939 ;;  divisor         8   20[COMRAM] long long 
 18940 ;; Auto vars:     Size  Location     Type
 18941 ;;  quotient        8   30[COMRAM] long long 
 18942 ;;  sign            1   29[COMRAM] unsigned char 
 18943 ;;  counter         1   28[COMRAM] unsigned char 
 18944 ;; Return value:  Size  Location     Type
 18945 ;;                  8   12[COMRAM] long long 
 18946 ;; Registers used:
 18947 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18948 ;; Tracked objects:
 18949 ;;		On entry : 0/0
 18950 ;;		On exit  : 0/0
 18951 ;;		Unchanged: 0/0
 18952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18953 ;;      Params:        16       0       0       0       0       0       0
 18954 ;;      Locals:        10       0       0       0       0       0       0
 18955 ;;      Temps:          0       0       0       0       0       0       0
 18956 ;;      Totals:        26       0       0       0       0       0       0
 18957 ;;Total ram usage:       26 bytes
 18958 ;; Hardware stack levels used:    1
 18959 ;; Hardware stack levels required when called:    2
 18960 ;; This function calls:
 18961 ;;		Nothing
 18962 ;; This function is called by:
 18963 ;;		_dtoa
 18964 ;; This function uses a non-reentrant model
 18965 ;;
 18966                           
 18967                           	psect	text79
 18968  003724                     __ptext79:
 18969                           	opt callstack 0
 18970  003724                     ___aodiv:
 18971                           	opt callstack 18
 18972  003724  0E00               	movlw	0
 18973  003726  6E1E               	movwf	___aodiv@sign^0,c
 18974  003728  BE1C               	btfsc	(___aodiv@divisor+7)^0,7,c
 18975  00372A  EF9B  F01B         	goto	u8830
 18976  00372E  EF99  F01B         	goto	u8831
 18977  003732                     u8831:
 18978  003732  EFAD  F01B         	goto	l7948
 18979  003736                     u8830:
 18980  003736  1E1C               	comf	(___aodiv@divisor+7)^0,f,c
 18981  003738  1E1B               	comf	(___aodiv@divisor+6)^0,f,c
 18982  00373A  1E1A               	comf	(___aodiv@divisor+5)^0,f,c
 18983  00373C  1E19               	comf	(___aodiv@divisor+4)^0,f,c
 18984  00373E  1E18               	comf	(___aodiv@divisor+3)^0,f,c
 18985  003740  1E17               	comf	(___aodiv@divisor+2)^0,f,c
 18986  003742  1E16               	comf	(___aodiv@divisor+1)^0,f,c
 18987  003744  6C15               	negf	___aodiv@divisor^0,c
 18988  003746  0E00               	movlw	0
 18989  003748  2216               	addwfc	(___aodiv@divisor+1)^0,f,c
 18990  00374A  2217               	addwfc	(___aodiv@divisor+2)^0,f,c
 18991  00374C  2218               	addwfc	(___aodiv@divisor+3)^0,f,c
 18992  00374E  2219               	addwfc	(___aodiv@divisor+4)^0,f,c
 18993  003750  221A               	addwfc	(___aodiv@divisor+5)^0,f,c
 18994  003752  221B               	addwfc	(___aodiv@divisor+6)^0,f,c
 18995  003754  221C               	addwfc	(___aodiv@divisor+7)^0,f,c
 18996  003756  0E01               	movlw	1
 18997  003758  6E1E               	movwf	___aodiv@sign^0,c
 18998  00375A                     l7948:
 18999  00375A  BE14               	btfsc	(___aodiv@dividend+7)^0,7,c
 19000  00375C  EFB4  F01B         	goto	u8840
 19001  003760  EFB2  F01B         	goto	u8841
 19002  003764                     u8841:
 19003  003764  EFC6  F01B         	goto	l7954
 19004  003768                     u8840:
 19005  003768  1E14               	comf	(___aodiv@dividend+7)^0,f,c
 19006  00376A  1E13               	comf	(___aodiv@dividend+6)^0,f,c
 19007  00376C  1E12               	comf	(___aodiv@dividend+5)^0,f,c
 19008  00376E  1E11               	comf	(___aodiv@dividend+4)^0,f,c
 19009  003770  1E10               	comf	(___aodiv@dividend+3)^0,f,c
 19010  003772  1E0F               	comf	(___aodiv@dividend+2)^0,f,c
 19011  003774  1E0E               	comf	(___aodiv@dividend+1)^0,f,c
 19012  003776  6C0D               	negf	___aodiv@dividend^0,c
 19013  003778  0E00               	movlw	0
 19014  00377A  220E               	addwfc	(___aodiv@dividend+1)^0,f,c
 19015  00377C  220F               	addwfc	(___aodiv@dividend+2)^0,f,c
 19016  00377E  2210               	addwfc	(___aodiv@dividend+3)^0,f,c
 19017  003780  2211               	addwfc	(___aodiv@dividend+4)^0,f,c
 19018  003782  2212               	addwfc	(___aodiv@dividend+5)^0,f,c
 19019  003784  2213               	addwfc	(___aodiv@dividend+6)^0,f,c
 19020  003786  2214               	addwfc	(___aodiv@dividend+7)^0,f,c
 19021  003788  0E01               	movlw	1
 19022  00378A  1A1E               	xorwf	___aodiv@sign^0,f,c
 19023  00378C                     l7954:
 19024  00378C  EE20  F01F         	lfsr	2,___aodiv@quotient
 19025  003790  0E07               	movlw	7
 19026  003792                     u8851:
 19027  003792  6ADE               	clrf	postinc2,c
 19028  003794  06E8               	decf	wreg,f,c
 19029  003796  E2FD               	bc	u8851
 19030  003798  5015               	movf	___aodiv@divisor^0,w,c
 19031  00379A  1016               	iorwf	(___aodiv@divisor+1)^0,w,c
 19032  00379C  1017               	iorwf	(___aodiv@divisor+2)^0,w,c
 19033  00379E  1018               	iorwf	(___aodiv@divisor+3)^0,w,c
 19034  0037A0  1019               	iorwf	(___aodiv@divisor+4)^0,w,c
 19035  0037A2  101A               	iorwf	(___aodiv@divisor+5)^0,w,c
 19036  0037A4  101B               	iorwf	(___aodiv@divisor+6)^0,w,c
 19037  0037A6  101C               	iorwf	(___aodiv@divisor+7)^0,w,c
 19038  0037A8  B4D8               	btfsc	status,2,c
 19039  0037AA  EFD9  F01B         	goto	u8861
 19040  0037AE  EFDB  F01B         	goto	u8860
 19041  0037B2                     u8861:
 19042  0037B2  EF2D  F01C         	goto	l7976
 19043  0037B6                     u8860:
 19044  0037B6  0E01               	movlw	1
 19045  0037B8  6E1D               	movwf	___aodiv@counter^0,c
 19046  0037BA  EFE9  F01B         	goto	l7962
 19047  0037BE                     l7960:
 19048  0037BE  90D8               	bcf	status,0,c
 19049  0037C0  3615               	rlcf	___aodiv@divisor^0,f,c
 19050  0037C2  3616               	rlcf	(___aodiv@divisor+1)^0,f,c
 19051  0037C4  3617               	rlcf	(___aodiv@divisor+2)^0,f,c
 19052  0037C6  3618               	rlcf	(___aodiv@divisor+3)^0,f,c
 19053  0037C8  3619               	rlcf	(___aodiv@divisor+4)^0,f,c
 19054  0037CA  361A               	rlcf	(___aodiv@divisor+5)^0,f,c
 19055  0037CC  361B               	rlcf	(___aodiv@divisor+6)^0,f,c
 19056  0037CE  361C               	rlcf	(___aodiv@divisor+7)^0,f,c
 19057  0037D0  2A1D               	incf	___aodiv@counter^0,f,c
 19058  0037D2                     l7962:
 19059  0037D2  AE1C               	btfss	(___aodiv@divisor+7)^0,7,c
 19060  0037D4  EFEE  F01B         	goto	u8871
 19061  0037D8  EFF0  F01B         	goto	u8870
 19062  0037DC                     u8871:
 19063  0037DC  EFDF  F01B         	goto	l7960
 19064  0037E0                     u8870:
 19065  0037E0                     l7964:
 19066  0037E0  90D8               	bcf	status,0,c
 19067  0037E2  361F               	rlcf	___aodiv@quotient^0,f,c
 19068  0037E4  3620               	rlcf	(___aodiv@quotient+1)^0,f,c
 19069  0037E6  3621               	rlcf	(___aodiv@quotient+2)^0,f,c
 19070  0037E8  3622               	rlcf	(___aodiv@quotient+3)^0,f,c
 19071  0037EA  3623               	rlcf	(___aodiv@quotient+4)^0,f,c
 19072  0037EC  3624               	rlcf	(___aodiv@quotient+5)^0,f,c
 19073  0037EE  3625               	rlcf	(___aodiv@quotient+6)^0,f,c
 19074  0037F0  3626               	rlcf	(___aodiv@quotient+7)^0,f,c
 19075  0037F2  5015               	movf	___aodiv@divisor^0,w,c
 19076  0037F4  5C0D               	subwf	___aodiv@dividend^0,w,c
 19077  0037F6  5016               	movf	(___aodiv@divisor+1)^0,w,c
 19078  0037F8  580E               	subwfb	(___aodiv@dividend+1)^0,w,c
 19079  0037FA  5017               	movf	(___aodiv@divisor+2)^0,w,c
 19080  0037FC  580F               	subwfb	(___aodiv@dividend+2)^0,w,c
 19081  0037FE  5018               	movf	(___aodiv@divisor+3)^0,w,c
 19082  003800  5810               	subwfb	(___aodiv@dividend+3)^0,w,c
 19083  003802  5019               	movf	(___aodiv@divisor+4)^0,w,c
 19084  003804  5811               	subwfb	(___aodiv@dividend+4)^0,w,c
 19085  003806  501A               	movf	(___aodiv@divisor+5)^0,w,c
 19086  003808  5812               	subwfb	(___aodiv@dividend+5)^0,w,c
 19087  00380A  501B               	movf	(___aodiv@divisor+6)^0,w,c
 19088  00380C  5813               	subwfb	(___aodiv@dividend+6)^0,w,c
 19089  00380E  501C               	movf	(___aodiv@divisor+7)^0,w,c
 19090  003810  5814               	subwfb	(___aodiv@dividend+7)^0,w,c
 19091  003812  A0D8               	btfss	status,0,c
 19092  003814  EF0E  F01C         	goto	u8881
 19093  003818  EF10  F01C         	goto	u8880
 19094  00381C                     u8881:
 19095  00381C  EF21  F01C         	goto	l7972
 19096  003820                     u8880:
 19097  003820  5015               	movf	___aodiv@divisor^0,w,c
 19098  003822  5E0D               	subwf	___aodiv@dividend^0,f,c
 19099  003824  5016               	movf	(___aodiv@divisor+1)^0,w,c
 19100  003826  5A0E               	subwfb	(___aodiv@dividend+1)^0,f,c
 19101  003828  5017               	movf	(___aodiv@divisor+2)^0,w,c
 19102  00382A  5A0F               	subwfb	(___aodiv@dividend+2)^0,f,c
 19103  00382C  5018               	movf	(___aodiv@divisor+3)^0,w,c
 19104  00382E  5A10               	subwfb	(___aodiv@dividend+3)^0,f,c
 19105  003830  5019               	movf	(___aodiv@divisor+4)^0,w,c
 19106  003832  5A11               	subwfb	(___aodiv@dividend+4)^0,f,c
 19107  003834  501A               	movf	(___aodiv@divisor+5)^0,w,c
 19108  003836  5A12               	subwfb	(___aodiv@dividend+5)^0,f,c
 19109  003838  501B               	movf	(___aodiv@divisor+6)^0,w,c
 19110  00383A  5A13               	subwfb	(___aodiv@dividend+6)^0,f,c
 19111  00383C  501C               	movf	(___aodiv@divisor+7)^0,w,c
 19112  00383E  5A14               	subwfb	(___aodiv@dividend+7)^0,f,c
 19113  003840  801F               	bsf	___aodiv@quotient^0,0,c
 19114  003842                     l7972:
 19115  003842  90D8               	bcf	status,0,c
 19116  003844  321C               	rrcf	(___aodiv@divisor+7)^0,f,c
 19117  003846  321B               	rrcf	(___aodiv@divisor+6)^0,f,c
 19118  003848  321A               	rrcf	(___aodiv@divisor+5)^0,f,c
 19119  00384A  3219               	rrcf	(___aodiv@divisor+4)^0,f,c
 19120  00384C  3218               	rrcf	(___aodiv@divisor+3)^0,f,c
 19121  00384E  3217               	rrcf	(___aodiv@divisor+2)^0,f,c
 19122  003850  3216               	rrcf	(___aodiv@divisor+1)^0,f,c
 19123  003852  3215               	rrcf	___aodiv@divisor^0,f,c
 19124  003854  2E1D               	decfsz	___aodiv@counter^0,f,c
 19125  003856  EFF0  F01B         	goto	l7964
 19126  00385A                     l7976:
 19127  00385A  501E               	movf	___aodiv@sign^0,w,c
 19128  00385C  B4D8               	btfsc	status,2,c
 19129  00385E  EF33  F01C         	goto	u8891
 19130  003862  EF35  F01C         	goto	u8890
 19131  003866                     u8891:
 19132  003866  EF45  F01C         	goto	l7980
 19133  00386A                     u8890:
 19134  00386A  1E26               	comf	(___aodiv@quotient+7)^0,f,c
 19135  00386C  1E25               	comf	(___aodiv@quotient+6)^0,f,c
 19136  00386E  1E24               	comf	(___aodiv@quotient+5)^0,f,c
 19137  003870  1E23               	comf	(___aodiv@quotient+4)^0,f,c
 19138  003872  1E22               	comf	(___aodiv@quotient+3)^0,f,c
 19139  003874  1E21               	comf	(___aodiv@quotient+2)^0,f,c
 19140  003876  1E20               	comf	(___aodiv@quotient+1)^0,f,c
 19141  003878  6C1F               	negf	___aodiv@quotient^0,c
 19142  00387A  0E00               	movlw	0
 19143  00387C  2220               	addwfc	(___aodiv@quotient+1)^0,f,c
 19144  00387E  2221               	addwfc	(___aodiv@quotient+2)^0,f,c
 19145  003880  2222               	addwfc	(___aodiv@quotient+3)^0,f,c
 19146  003882  2223               	addwfc	(___aodiv@quotient+4)^0,f,c
 19147  003884  2224               	addwfc	(___aodiv@quotient+5)^0,f,c
 19148  003886  2225               	addwfc	(___aodiv@quotient+6)^0,f,c
 19149  003888  2226               	addwfc	(___aodiv@quotient+7)^0,f,c
 19150  00388A                     l7980:
 19151  00388A  C01F  F00D         	movff	___aodiv@quotient,?___aodiv
 19152  00388E  C020  F00E         	movff	___aodiv@quotient+1,?___aodiv+1
 19153  003892  C021  F00F         	movff	___aodiv@quotient+2,?___aodiv+2
 19154  003896  C022  F010         	movff	___aodiv@quotient+3,?___aodiv+3
 19155  00389A  C023  F011         	movff	___aodiv@quotient+4,?___aodiv+4
 19156  00389E  C024  F012         	movff	___aodiv@quotient+5,?___aodiv+5
 19157  0038A2  C025  F013         	movff	___aodiv@quotient+6,?___aodiv+6
 19158  0038A6  C026  F014         	movff	___aodiv@quotient+7,?___aodiv+7
 19159  0038AA  0012               	return		;funcret
 19160  0038AC                     __end_of___aodiv:
 19161                           	opt callstack 0
 19162                           
 19163 ;; *************** function _atoi *****************
 19164 ;; Defined at:
 19165 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 19166 ;; Parameters:    Size  Location     Type
 19167 ;;  s               2   19[COMRAM] PTR const unsigned char 
 19168 ;;		 -> STR_66(48), STR_65(69), STR_64(40), eval_gps@elem(240), 
 19169 ;;		 -> STR_30(21), STR_29(25), STR_28(32), STR_27(35), 
 19170 ;;		 -> STR_26(29), STR_25(32), STR_24(12), STR_23(14), 
 19171 ;;		 -> STR_22(27), STR_21(24), STR_20(13), STR_19(43), 
 19172 ;;		 -> STR_18(19), STR_17(13), STR_16(15), STR_15(23), 
 19173 ;;		 -> STR_14(16), STR_13(35), STR_12(21), STR_11(21), 
 19174 ;;		 -> STR_10(16), STR_9(5), STR_8(22), STR_7(28), 
 19175 ;;		 -> STR_6(25), STR_5(55), STR_4(72), STR_3(74), 
 19176 ;;		 -> STR_2(16), STR_1(18), 
 19177 ;; Auto vars:     Size  Location     Type
 19178 ;;  n               2   32[COMRAM] int 
 19179 ;;  neg             2   25[COMRAM] int 
 19180 ;; Return value:  Size  Location     Type
 19181 ;;                  2   19[COMRAM] int 
 19182 ;; Registers used:
 19183 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19184 ;; Tracked objects:
 19185 ;;		On entry : 0/0
 19186 ;;		On exit  : 0/0
 19187 ;;		Unchanged: 0/0
 19188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19189 ;;      Params:         2       0       0       0       0       0       0
 19190 ;;      Locals:         9       0       0       0       0       0       0
 19191 ;;      Temps:          4       0       0       0       0       0       0
 19192 ;;      Totals:        15       0       0       0       0       0       0
 19193 ;;Total ram usage:       15 bytes
 19194 ;; Hardware stack levels used:    1
 19195 ;; Hardware stack levels required when called:    3
 19196 ;; This function calls:
 19197 ;;		___wmul
 19198 ;;		_isdigit
 19199 ;;		_isspace
 19200 ;; This function is called by:
 19201 ;;		_vfpfcnvrt
 19202 ;;		_eval_gps
 19203 ;; This function uses a non-reentrant model
 19204 ;;
 19205                           
 19206                           	psect	text80
 19207  002AD8                     __ptext80:
 19208                           	opt callstack 0
 19209  002AD8                     _atoi:
 19210                           	opt callstack 18
 19211  002AD8  0E00               	movlw	0
 19212  002ADA  6E22               	movwf	(atoi@n+1)^0,c
 19213  002ADC  0E00               	movlw	0
 19214  002ADE  6E21               	movwf	atoi@n^0,c
 19215  002AE0  0E00               	movlw	0
 19216  002AE2  6E1B               	movwf	(atoi@neg+1)^0,c
 19217  002AE4  0E00               	movlw	0
 19218  002AE6  6E1A               	movwf	atoi@neg^0,c
 19219  002AE8  EF78  F015         	goto	l8074
 19220  002AEC                     l8072:
 19221  002AEC  4A14               	infsnz	atoi@s^0,f,c
 19222  002AEE  2A15               	incf	(atoi@s+1)^0,f,c
 19223  002AF0                     l8074:
 19224  002AF0  0E01               	movlw	1
 19225  002AF2  6E20               	movwf	_atoi$3763^0,c
 19226  002AF4  C014  FFF6         	movff	atoi@s,tblptrl
 19227  002AF8  C015  FFF7         	movff	atoi@s+1,tblptrh
 19228  002AFC  6AF8               	clrf	tblptru,c
 19229  002AFE  0E05               	movlw	(high __ramtop+-1)
 19230  002B00  64F7               	cpfsgt	tblptrh,c
 19231  002B02  D003               	bra	u9057
 19232  002B04  0008               	tblrd		*
 19233  002B06  50F5               	movf	tablat,w,c
 19234  002B08  D005               	bra	u9050
 19235  002B0A                     u9057:
 19236  002B0A  CFF6 FFE9          	movff	tblptrl,fsr0l
 19237  002B0E  CFF7 FFEA          	movff	tblptrh,fsr0h
 19238  002B12  50EF               	movf	indf0,w,c
 19239  002B14                     u9050:
 19240  002B14  0A20               	xorlw	32
 19241  002B16  B4D8               	btfsc	status,2,c
 19242  002B18  EF90  F015         	goto	u9061
 19243  002B1C  EF92  F015         	goto	u9060
 19244  002B20                     u9061:
 19245  002B20  EFB9  F015         	goto	l8082
 19246  002B24                     u9060:
 19247  002B24  0EF7               	movlw	247
 19248  002B26  6E16               	movwf	??_atoi^0,c
 19249  002B28  0EFF               	movlw	255
 19250  002B2A  6E17               	movwf	(??_atoi+1)^0,c
 19251  002B2C  C014  FFF6         	movff	atoi@s,tblptrl
 19252  002B30  C015  FFF7         	movff	atoi@s+1,tblptrh
 19253  002B34  6AF8               	clrf	tblptru,c
 19254  002B36  0E05               	movlw	(high __ramtop+-1)
 19255  002B38  64F7               	cpfsgt	tblptrh,c
 19256  002B3A  D003               	bra	u9077
 19257  002B3C  0008               	tblrd		*
 19258  002B3E  50F5               	movf	tablat,w,c
 19259  002B40  D005               	bra	u9070
 19260  002B42                     u9077:
 19261  002B42  CFF6 FFE9          	movff	tblptrl,fsr0l
 19262  002B46  CFF7 FFEA          	movff	tblptrh,fsr0h
 19263  002B4A  50EF               	movf	indf0,w,c
 19264  002B4C                     u9070:
 19265  002B4C  6E18               	movwf	(??_atoi+2)^0,c
 19266  002B4E  6A19               	clrf	(??_atoi+3)^0,c
 19267  002B50  5016               	movf	??_atoi^0,w,c
 19268  002B52  2618               	addwf	(??_atoi+2)^0,f,c
 19269  002B54  5017               	movf	(??_atoi+1)^0,w,c
 19270  002B56  2219               	addwfc	(??_atoi+3)^0,f,c
 19271  002B58  5019               	movf	(??_atoi+3)^0,w,c
 19272  002B5A  E109               	bnz	u9080
 19273  002B5C  0E05               	movlw	5
 19274  002B5E  5C18               	subwf	(??_atoi+2)^0,w,c
 19275  002B60  A0D8               	btfss	status,0,c
 19276  002B62  EFB5  F015         	goto	u9081
 19277  002B66  EFB7  F015         	goto	u9080
 19278  002B6A                     u9081:
 19279  002B6A  EFB9  F015         	goto	l8082
 19280  002B6E                     u9080:
 19281  002B6E  0E00               	movlw	0
 19282  002B70  6E20               	movwf	_atoi$3763^0,c
 19283  002B72                     l8082:
 19284  002B72  C020  F01C         	movff	_atoi$3763,_atoi$3762
 19285  002B76  6A1D               	clrf	(_atoi$3762+1)^0,c
 19286  002B78  501C               	movf	_atoi$3762^0,w,c
 19287  002B7A  101D               	iorwf	(_atoi$3762+1)^0,w,c
 19288  002B7C  A4D8               	btfss	status,2,c
 19289  002B7E  EFC3  F015         	goto	u9091
 19290  002B82  EFC5  F015         	goto	u9090
 19291  002B86                     u9091:
 19292  002B86  EF76  F015         	goto	l8072
 19293  002B8A                     u9090:
 19294  002B8A  EFCF  F015         	goto	l8092
 19295  002B8E                     l8088:
 19296  002B8E  0E00               	movlw	0
 19297  002B90  6E1B               	movwf	(atoi@neg+1)^0,c
 19298  002B92  0E01               	movlw	1
 19299  002B94  6E1A               	movwf	atoi@neg^0,c
 19300  002B96                     l8090:
 19301  002B96  4A14               	infsnz	atoi@s^0,f,c
 19302  002B98  2A15               	incf	(atoi@s+1)^0,f,c
 19303  002B9A  EF1A  F016         	goto	l8098
 19304  002B9E                     l8092:
 19305  002B9E  C014  FFF6         	movff	atoi@s,tblptrl
 19306  002BA2  C015  FFF7         	movff	atoi@s+1,tblptrh
 19307  002BA6  6AF8               	clrf	tblptru,c
 19308  002BA8  0E05               	movlw	(high __ramtop+-1)
 19309  002BAA  64F7               	cpfsgt	tblptrh,c
 19310  002BAC  D003               	bra	u9107
 19311  002BAE  0008               	tblrd		*
 19312  002BB0  50F5               	movf	tablat,w,c
 19313  002BB2  D005               	bra	u9100
 19314  002BB4                     u9107:
 19315  002BB4  CFF6 FFE9          	movff	tblptrl,fsr0l
 19316  002BB8  CFF7 FFEA          	movff	tblptrh,fsr0h
 19317  002BBC  50EF               	movf	indf0,w,c
 19318  002BBE                     u9100:
 19319  002BBE  6E16               	movwf	??_atoi^0,c
 19320  002BC0  6A17               	clrf	(??_atoi+1)^0,c
 19321                           
 19322                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19323                           ; Switch size 1, requested type "simple"
 19324                           ; Number of cases is 1, Range of values is 0 to 0
 19325                           ; switch strategies available:
 19326                           ; Name         Instructions Cycles
 19327                           ; simple_byte            4     3 (average)
 19328                           ;	Chosen strategy is simple_byte
 19329  002BC2  5017               	movf	(??_atoi+1)^0,w,c
 19330  002BC4  0A00               	xorlw	0	; case 0
 19331  002BC6  B4D8               	btfsc	status,2,c
 19332  002BC8  EFE8  F015         	goto	l10274
 19333  002BCC  EF1A  F016         	goto	l8098
 19334  002BD0                     l10274:
 19335                           
 19336                           ; Switch size 1, requested type "simple"
 19337                           ; Number of cases is 2, Range of values is 43 to 45
 19338                           ; switch strategies available:
 19339                           ; Name         Instructions Cycles
 19340                           ; simple_byte            7     4 (average)
 19341                           ;	Chosen strategy is simple_byte
 19342  002BD0  5016               	movf	??_atoi^0,w,c
 19343  002BD2  0A2B               	xorlw	43	; case 43
 19344  002BD4  B4D8               	btfsc	status,2,c
 19345  002BD6  EFCB  F015         	goto	l8090
 19346  002BDA  0A06               	xorlw	6	; case 45
 19347  002BDC  B4D8               	btfsc	status,2,c
 19348  002BDE  EFC7  F015         	goto	l8088
 19349  002BE2  EF1A  F016         	goto	l8098
 19350  002BE6                     l8094:
 19351  002BE6  C021  F00D         	movff	atoi@n,___wmul@multiplier
 19352  002BEA  C022  F00E         	movff	atoi@n+1,___wmul@multiplier+1
 19353  002BEE  0E00               	movlw	0
 19354  002BF0  6E10               	movwf	(___wmul@multiplicand+1)^0,c
 19355  002BF2  0E0A               	movlw	10
 19356  002BF4  6E0F               	movwf	___wmul@multiplicand^0,c
 19357  002BF6  ECBB  F032         	call	___wmul	;wreg free
 19358  002BFA  C014  FFF6         	movff	atoi@s,tblptrl
 19359  002BFE  C015  FFF7         	movff	atoi@s+1,tblptrh
 19360  002C02  6AF8               	clrf	tblptru,c
 19361  002C04  0E05               	movlw	(high __ramtop+-1)
 19362  002C06  64F7               	cpfsgt	tblptrh,c
 19363  002C08  D003               	bra	u9117
 19364  002C0A  0008               	tblrd		*
 19365  002C0C  50F5               	movf	tablat,w,c
 19366  002C0E  D005               	bra	u9110
 19367  002C10                     u9117:
 19368  002C10  CFF6 FFE9          	movff	tblptrl,fsr0l
 19369  002C14  CFF7 FFEA          	movff	tblptrh,fsr0h
 19370  002C18  50EF               	movf	indf0,w,c
 19371  002C1A                     u9110:
 19372  002C1A  6E16               	movwf	??_atoi^0,c
 19373  002C1C  5016               	movf	??_atoi^0,w,c
 19374  002C1E  5E0D               	subwf	?___wmul^0,f,c
 19375  002C20  0E00               	movlw	0
 19376  002C22  5A0E               	subwfb	(?___wmul+1)^0,f,c
 19377  002C24  0E30               	movlw	48
 19378  002C26  240D               	addwf	?___wmul^0,w,c
 19379  002C28  6E21               	movwf	atoi@n^0,c
 19380  002C2A  0E00               	movlw	0
 19381  002C2C  200E               	addwfc	(?___wmul+1)^0,w,c
 19382  002C2E  6E22               	movwf	(atoi@n+1)^0,c
 19383  002C30  EFCB  F015         	goto	l8090
 19384  002C34                     l8098:
 19385  002C34  0ED0               	movlw	208
 19386  002C36  6E16               	movwf	??_atoi^0,c
 19387  002C38  0EFF               	movlw	255
 19388  002C3A  6E17               	movwf	(??_atoi+1)^0,c
 19389  002C3C  C014  FFF6         	movff	atoi@s,tblptrl
 19390  002C40  C015  FFF7         	movff	atoi@s+1,tblptrh
 19391  002C44  6AF8               	clrf	tblptru,c
 19392  002C46  0E05               	movlw	(high __ramtop+-1)
 19393  002C48  64F7               	cpfsgt	tblptrh,c
 19394  002C4A  D003               	bra	u9127
 19395  002C4C  0008               	tblrd		*
 19396  002C4E  50F5               	movf	tablat,w,c
 19397  002C50  D005               	bra	u9120
 19398  002C52                     u9127:
 19399  002C52  CFF6 FFE9          	movff	tblptrl,fsr0l
 19400  002C56  CFF7 FFEA          	movff	tblptrh,fsr0h
 19401  002C5A  50EF               	movf	indf0,w,c
 19402  002C5C                     u9120:
 19403  002C5C  6E18               	movwf	(??_atoi+2)^0,c
 19404  002C5E  6A19               	clrf	(??_atoi+3)^0,c
 19405  002C60  5016               	movf	??_atoi^0,w,c
 19406  002C62  2618               	addwf	(??_atoi+2)^0,f,c
 19407  002C64  5017               	movf	(??_atoi+1)^0,w,c
 19408  002C66  2219               	addwfc	(??_atoi+3)^0,f,c
 19409  002C68  5019               	movf	(??_atoi+3)^0,w,c
 19410  002C6A  E10A               	bnz	u9130
 19411  002C6C  0E0A               	movlw	10
 19412  002C6E  5C18               	subwf	(??_atoi+2)^0,w,c
 19413  002C70  A0D8               	btfss	status,0,c
 19414  002C72  EF3D  F016         	goto	u9131
 19415  002C76  EF40  F016         	goto	u9130
 19416  002C7A                     u9131:
 19417  002C7A  0E01               	movlw	1
 19418  002C7C  EF41  F016         	goto	u9140
 19419  002C80                     u9130:
 19420  002C80  0E00               	movlw	0
 19421  002C82                     u9140:
 19422  002C82  6E1E               	movwf	_atoi$3764^0,c
 19423  002C84  6A1F               	clrf	(_atoi$3764+1)^0,c
 19424  002C86  501E               	movf	_atoi$3764^0,w,c
 19425  002C88  101F               	iorwf	(_atoi$3764+1)^0,w,c
 19426  002C8A  A4D8               	btfss	status,2,c
 19427  002C8C  EF4A  F016         	goto	u9151
 19428  002C90  EF4C  F016         	goto	u9150
 19429  002C94                     u9151:
 19430  002C94  EFF3  F015         	goto	l8094
 19431  002C98                     u9150:
 19432  002C98  501A               	movf	atoi@neg^0,w,c
 19433  002C9A  101B               	iorwf	(atoi@neg+1)^0,w,c
 19434  002C9C  A4D8               	btfss	status,2,c
 19435  002C9E  EF53  F016         	goto	u9161
 19436  002CA2  EF55  F016         	goto	u9160
 19437  002CA6                     u9161:
 19438  002CA6  EF63  F016         	goto	l2003
 19439  002CAA                     u9160:
 19440  002CAA  C021  F016         	movff	atoi@n,??_atoi
 19441  002CAE  C022  F017         	movff	atoi@n+1,??_atoi+1
 19442  002CB2  1E16               	comf	??_atoi^0,f,c
 19443  002CB4  1E17               	comf	(??_atoi+1)^0,f,c
 19444  002CB6  4A16               	infsnz	??_atoi^0,f,c
 19445  002CB8  2A17               	incf	(??_atoi+1)^0,f,c
 19446  002CBA  C016  F014         	movff	??_atoi,?_atoi
 19447  002CBE  C017  F015         	movff	??_atoi+1,?_atoi+1
 19448  002CC2  EF67  F016         	goto	l2006
 19449  002CC6                     l2003:
 19450  002CC6  C021  F014         	movff	atoi@n,?_atoi
 19451  002CCA  C022  F015         	movff	atoi@n+1,?_atoi+1
 19452  002CCE                     l2006:
 19453  002CCE  0012               	return		;funcret
 19454  002CD0                     __end_of_atoi:
 19455                           	opt callstack 0
 19456                           
 19457 ;; *************** function _isspace *****************
 19458 ;; Defined at:
 19459 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 19460 ;; Parameters:    Size  Location     Type
 19461 ;;  c               2   12[COMRAM] int 
 19462 ;; Auto vars:     Size  Location     Type
 19463 ;;		None
 19464 ;; Return value:  Size  Location     Type
 19465 ;;                  2   12[COMRAM] int 
 19466 ;; Registers used:
 19467 ;;		wreg, status,2, status,0
 19468 ;; Tracked objects:
 19469 ;;		On entry : 0/0
 19470 ;;		On exit  : 0/0
 19471 ;;		Unchanged: 0/0
 19472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19473 ;;      Params:         2       0       0       0       0       0       0
 19474 ;;      Locals:         1       0       0       0       0       0       0
 19475 ;;      Temps:          4       0       0       0       0       0       0
 19476 ;;      Totals:         7       0       0       0       0       0       0
 19477 ;;Total ram usage:        7 bytes
 19478 ;; Hardware stack levels used:    1
 19479 ;; Hardware stack levels required when called:    2
 19480 ;; This function calls:
 19481 ;;		Nothing
 19482 ;; This function is called by:
 19483 ;;		_atoi
 19484 ;;		___strtoxl
 19485 ;; This function uses a non-reentrant model
 19486 ;;
 19487                           
 19488                           	psect	text81
 19489  006006                     __ptext81:
 19490                           	opt callstack 0
 19491  006006                     _isspace:
 19492                           	opt callstack 18
 19493  006006  0E01               	movlw	1
 19494  006008  6E13               	movwf	_isspace$3789^0,c
 19495  00600A  0E20               	movlw	32
 19496  00600C  180D               	xorwf	isspace@c^0,w,c
 19497  00600E  100E               	iorwf	(isspace@c+1)^0,w,c
 19498  006010  B4D8               	btfsc	status,2,c
 19499  006012  EF0D  F030         	goto	u9031
 19500  006016  EF0F  F030         	goto	u9030
 19501  00601A                     u9031:
 19502  00601A  EF28  F030         	goto	l8066
 19503  00601E                     u9030:
 19504  00601E  0EF7               	movlw	247
 19505  006020  6E0F               	movwf	??_isspace^0,c
 19506  006022  0EFF               	movlw	255
 19507  006024  6E10               	movwf	(??_isspace+1)^0,c
 19508  006026  C00D  F011         	movff	isspace@c,??_isspace+2
 19509  00602A  C00E  F012         	movff	isspace@c+1,??_isspace+3
 19510  00602E  500F               	movf	??_isspace^0,w,c
 19511  006030  2611               	addwf	(??_isspace+2)^0,f,c
 19512  006032  5010               	movf	(??_isspace+1)^0,w,c
 19513  006034  2212               	addwfc	(??_isspace+3)^0,f,c
 19514  006036  5012               	movf	(??_isspace+3)^0,w,c
 19515  006038  E109               	bnz	u9040
 19516  00603A  0E05               	movlw	5
 19517  00603C  5C11               	subwf	(??_isspace+2)^0,w,c
 19518  00603E  A0D8               	btfss	status,0,c
 19519  006040  EF24  F030         	goto	u9041
 19520  006044  EF26  F030         	goto	u9040
 19521  006048                     u9041:
 19522  006048  EF28  F030         	goto	l8066
 19523  00604C                     u9040:
 19524  00604C  0E00               	movlw	0
 19525  00604E  6E13               	movwf	_isspace$3789^0,c
 19526  006050                     l8066:
 19527  006050  C013  F00D         	movff	_isspace$3789,?_isspace
 19528  006054  6A0E               	clrf	(?_isspace+1)^0,c
 19529  006056  0012               	return		;funcret
 19530  006058                     __end_of_isspace:
 19531                           	opt callstack 0
 19532                           
 19533 ;; *************** function _isdigit *****************
 19534 ;; Defined at:
 19535 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 19536 ;; Parameters:    Size  Location     Type
 19537 ;;  c               2   12[COMRAM] int 
 19538 ;; Auto vars:     Size  Location     Type
 19539 ;;		None
 19540 ;; Return value:  Size  Location     Type
 19541 ;;                  2   12[COMRAM] int 
 19542 ;; Registers used:
 19543 ;;		wreg, status,2, status,0
 19544 ;; Tracked objects:
 19545 ;;		On entry : 0/0
 19546 ;;		On exit  : 0/0
 19547 ;;		Unchanged: 0/0
 19548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19549 ;;      Params:         2       0       0       0       0       0       0
 19550 ;;      Locals:         0       0       0       0       0       0       0
 19551 ;;      Temps:          4       0       0       0       0       0       0
 19552 ;;      Totals:         6       0       0       0       0       0       0
 19553 ;;Total ram usage:        6 bytes
 19554 ;; Hardware stack levels used:    1
 19555 ;; Hardware stack levels required when called:    2
 19556 ;; This function calls:
 19557 ;;		Nothing
 19558 ;; This function is called by:
 19559 ;;		_vfpfcnvrt
 19560 ;;		_atoi
 19561 ;;		___strtoxl
 19562 ;; This function uses a non-reentrant model
 19563 ;;
 19564                           
 19565                           	psect	text82
 19566  0064B4                     __ptext82:
 19567                           	opt callstack 0
 19568  0064B4                     _isdigit:
 19569                           	opt callstack 19
 19570  0064B4  0ED0               	movlw	208
 19571  0064B6  6E0F               	movwf	??_isdigit^0,c
 19572  0064B8  0EFF               	movlw	255
 19573  0064BA  6E10               	movwf	(??_isdigit+1)^0,c
 19574  0064BC  C00D  F011         	movff	isdigit@c,??_isdigit+2
 19575  0064C0  C00E  F012         	movff	isdigit@c+1,??_isdigit+3
 19576  0064C4  500F               	movf	??_isdigit^0,w,c
 19577  0064C6  2611               	addwf	(??_isdigit+2)^0,f,c
 19578  0064C8  5010               	movf	(??_isdigit+1)^0,w,c
 19579  0064CA  2212               	addwfc	(??_isdigit+3)^0,f,c
 19580  0064CC  5012               	movf	(??_isdigit+3)^0,w,c
 19581  0064CE  E10A               	bnz	u8810
 19582  0064D0  0E0A               	movlw	10
 19583  0064D2  5C11               	subwf	(??_isdigit+2)^0,w,c
 19584  0064D4  A0D8               	btfss	status,0,c
 19585  0064D6  EF6F  F032         	goto	u8811
 19586  0064DA  EF72  F032         	goto	u8810
 19587  0064DE                     u8811:
 19588  0064DE  0E01               	movlw	1
 19589  0064E0  EF73  F032         	goto	u8820
 19590  0064E4                     u8810:
 19591  0064E4  0E00               	movlw	0
 19592  0064E6                     u8820:
 19593  0064E6  6E0D               	movwf	?_isdigit^0,c
 19594  0064E8  6A0E               	clrf	(?_isdigit+1)^0,c
 19595  0064EA  0012               	return		;funcret
 19596  0064EC                     __end_of_isdigit:
 19597                           	opt callstack 0
 19598                           
 19599 ;; *************** function ___wmul *****************
 19600 ;; Defined at:
 19601 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul16.c"
 19602 ;; Parameters:    Size  Location     Type
 19603 ;;  multiplier      2   12[COMRAM] unsigned int 
 19604 ;;  multiplicand    2   14[COMRAM] unsigned int 
 19605 ;; Auto vars:     Size  Location     Type
 19606 ;;  product         2   16[COMRAM] unsigned int 
 19607 ;; Return value:  Size  Location     Type
 19608 ;;                  2   12[COMRAM] unsigned int 
 19609 ;; Registers used:
 19610 ;;		wreg, status,2, status,0, prodl, prodh
 19611 ;; Tracked objects:
 19612 ;;		On entry : 0/0
 19613 ;;		On exit  : 0/0
 19614 ;;		Unchanged: 0/0
 19615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19616 ;;      Params:         4       0       0       0       0       0       0
 19617 ;;      Locals:         2       0       0       0       0       0       0
 19618 ;;      Temps:          0       0       0       0       0       0       0
 19619 ;;      Totals:         6       0       0       0       0       0       0
 19620 ;;Total ram usage:        6 bytes
 19621 ;; Hardware stack levels used:    1
 19622 ;; Hardware stack levels required when called:    2
 19623 ;; This function calls:
 19624 ;;		Nothing
 19625 ;; This function is called by:
 19626 ;;		_atoi
 19627 ;;		_i2c_transfer_native
 19628 ;; This function uses a non-reentrant model
 19629 ;;
 19630                           
 19631                           	psect	text83
 19632  006576                     __ptext83:
 19633                           	opt callstack 0
 19634  006576                     ___wmul:
 19635                           	opt callstack 18
 19636  006576  500D               	movf	___wmul@multiplier^0,w,c
 19637  006578  020F               	mulwf	___wmul@multiplicand^0,c
 19638  00657A  CFF3 F011          	movff	prodl,___wmul@product
 19639  00657E  CFF4 F012          	movff	prodh,___wmul@product+1
 19640  006582  500D               	movf	___wmul@multiplier^0,w,c
 19641  006584  0210               	mulwf	(___wmul@multiplicand+1)^0,c
 19642  006586  50F3               	movf	243,w,c
 19643  006588  2612               	addwf	(___wmul@product+1)^0,f,c
 19644  00658A  500E               	movf	(___wmul@multiplier+1)^0,w,c
 19645  00658C  020F               	mulwf	___wmul@multiplicand^0,c
 19646  00658E  50F3               	movf	243,w,c
 19647  006590  2612               	addwf	(___wmul@product+1)^0,f,c
 19648  006592  C011  F00D         	movff	___wmul@product,?___wmul
 19649  006596  C012  F00E         	movff	___wmul@product+1,?___wmul+1
 19650  00659A  0012               	return		;funcret
 19651  00659C                     __end_of___wmul:
 19652                           	opt callstack 0
 19653                           
 19654 ;; *************** function _adf4351_set_tune *****************
 19655 ;; Defined at:
 19656 ;;		line 127 in file "src/driver/adf4351.c"
 19657 ;; Parameters:    Size  Location     Type
 19658 ;;  ctx             2   12[COMRAM] PTR struct adf4351_ctx
 19659 ;;		 -> g_adf4351(55), 
 19660 ;;  icp             1   14[COMRAM] unsigned char 
 19661 ;;  pout            1   15[COMRAM] unsigned char 
 19662 ;;  lownoise        2   16[COMRAM] int 
 19663 ;; Auto vars:     Size  Location     Type
 19664 ;;		None
 19665 ;; Return value:  Size  Location     Type
 19666 ;;                  1    wreg      void 
 19667 ;; Registers used:
 19668 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19669 ;; Tracked objects:
 19670 ;;		On entry : 0/0
 19671 ;;		On exit  : 0/0
 19672 ;;		Unchanged: 0/0
 19673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19674 ;;      Params:         6       0       0       0       0       0       0
 19675 ;;      Locals:         2       0       0       0       0       0       0
 19676 ;;      Temps:          0       0       0       0       0       0       0
 19677 ;;      Totals:         8       0       0       0       0       0       0
 19678 ;;Total ram usage:        8 bytes
 19679 ;; Hardware stack levels used:    1
 19680 ;; Hardware stack levels required when called:    2
 19681 ;; This function calls:
 19682 ;;		Nothing
 19683 ;; This function is called by:
 19684 ;;		_main
 19685 ;; This function uses a non-reentrant model
 19686 ;;
 19687                           
 19688                           	psect	text84
 19689  005EAC                     __ptext84:
 19690                           	opt callstack 0
 19691  005EAC                     _adf4351_set_tune:
 19692                           	opt callstack 28
 19693  005EAC                     
 19694                           ;src/driver/adf4351.c: 127: void adf4351_set_tune(adf4351_ctx* ctx, u8 icp, u8 pout, BOO
      +                          L lownoise);src/driver/adf4351.c: 128: {;src/driver/adf4351.c: 132:     ctx->reg2.lownoi
      +                          se = lownoise?0:3;
 19695  005EAC  5011               	movf	adf4351_set_tune@lownoise^0,w,c
 19696  005EAE  1012               	iorwf	(adf4351_set_tune@lownoise+1)^0,w,c
 19697  005EB0  A4D8               	btfss	status,2,c
 19698  005EB2  EF5D  F02F         	goto	u7391
 19699  005EB6  EF5F  F02F         	goto	u7390
 19700  005EBA                     u7391:
 19701  005EBA  EF65  F02F         	goto	l6654
 19702  005EBE                     u7390:
 19703  005EBE  0E00               	movlw	0
 19704  005EC0  6E14               	movwf	(_adf4351_set_tune$675+1)^0,c
 19705  005EC2  0E03               	movlw	3
 19706  005EC4  6E13               	movwf	_adf4351_set_tune$675^0,c
 19707  005EC6  EF69  F02F         	goto	l6656
 19708  005ECA                     l6654:
 19709  005ECA  0E00               	movlw	0
 19710  005ECC  6E14               	movwf	(_adf4351_set_tune$675+1)^0,c
 19711  005ECE  0E00               	movlw	0
 19712  005ED0  6E13               	movwf	_adf4351_set_tune$675^0,c
 19713  005ED2                     l6656:
 19714  005ED2  EE20 F00B          	lfsr	2,11
 19715  005ED6  500D               	movf	adf4351_set_tune@ctx^0,w,c
 19716  005ED8  26D9               	addwf	fsr2l,f,c
 19717  005EDA  500E               	movf	(adf4351_set_tune@ctx+1)^0,w,c
 19718  005EDC  22DA               	addwfc	fsr2h,f,c
 19719  005EDE  C013  FFDF         	movff	_adf4351_set_tune$675,indf2
 19720  005EE2                     
 19721                           ;src/driver/adf4351.c: 133:     ctx->reg2.cpc = icp;
 19722  005EE2  EE20 F012          	lfsr	2,18
 19723  005EE6  500D               	movf	adf4351_set_tune@ctx^0,w,c
 19724  005EE8  26D9               	addwf	fsr2l,f,c
 19725  005EEA  500E               	movf	(adf4351_set_tune@ctx+1)^0,w,c
 19726  005EEC  22DA               	addwfc	fsr2h,f,c
 19727  005EEE  C00F  FFDF         	movff	adf4351_set_tune@icp,indf2
 19728  005EF2                     
 19729                           ;src/driver/adf4351.c: 134:     ctx->reg4.rfoutpwr = pout;
 19730  005EF2  EE20 F029          	lfsr	2,41
 19731  005EF6  500D               	movf	adf4351_set_tune@ctx^0,w,c
 19732  005EF8  26D9               	addwf	fsr2l,f,c
 19733  005EFA  500E               	movf	(adf4351_set_tune@ctx+1)^0,w,c
 19734  005EFC  22DA               	addwfc	fsr2h,f,c
 19735  005EFE  C010  FFDF         	movff	adf4351_set_tune@pout,indf2
 19736  005F02  0012               	return		;funcret
 19737  005F04                     __end_of_adf4351_set_tune:
 19738                           	opt callstack 0
 19739                           
 19740 ;; *************** function _adf4351_set_mode *****************
 19741 ;; Defined at:
 19742 ;;		line 102 in file "src/driver/adf4351.c"
 19743 ;; Parameters:    Size  Location     Type
 19744 ;;  ctx             2   38[COMRAM] PTR struct adf4351_ctx
 19745 ;;		 -> g_adf4351(55), 
 19746 ;;  enable          2   40[COMRAM] int 
 19747 ;; Auto vars:     Size  Location     Type
 19748 ;;		None
 19749 ;; Return value:  Size  Location     Type
 19750 ;;                  1    wreg      void 
 19751 ;; Registers used:
 19752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19753 ;; Tracked objects:
 19754 ;;		On entry : 0/0
 19755 ;;		On exit  : 0/0
 19756 ;;		Unchanged: 0/0
 19757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19758 ;;      Params:         4       0       0       0       0       0       0
 19759 ;;      Locals:         0       0       0       0       0       0       0
 19760 ;;      Temps:          2       0       0       0       0       0       0
 19761 ;;      Totals:         6       0       0       0       0       0       0
 19762 ;;Total ram usage:        6 bytes
 19763 ;; Hardware stack levels used:    1
 19764 ;; Hardware stack levels required when called:    5
 19765 ;; This function calls:
 19766 ;;		_adf4351_setup
 19767 ;;		_adf4351_write_reg2
 19768 ;;		_adf4351_write_reg4
 19769 ;; This function is called by:
 19770 ;;		_main
 19771 ;; This function uses a non-reentrant model
 19772 ;;
 19773                           
 19774                           	psect	text85
 19775  0052A4                     __ptext85:
 19776                           	opt callstack 0
 19777  0052A4                     _adf4351_set_mode:
 19778                           	opt callstack 25
 19779  0052A4                     
 19780                           ;src/driver/adf4351.c: 102: void adf4351_set_mode(adf4351_ctx* ctx, BOOL enable);src/dri
      +                          ver/adf4351.c: 103: {;src/driver/adf4351.c: 105:  if(!ctx->init) return;
 19781  0052A4  C027  FFD9         	movff	adf4351_set_mode@ctx,fsr2l
 19782  0052A8  C028  FFDA         	movff	adf4351_set_mode@ctx+1,fsr2h
 19783  0052AC  50DE               	movf	postinc2,w,c
 19784  0052AE  10DE               	iorwf	postinc2,w,c
 19785  0052B0  A4D8               	btfss	status,2,c
 19786  0052B2  EF5D  F029         	goto	u7371
 19787  0052B6  EF5F  F029         	goto	u7370
 19788  0052BA                     u7371:
 19789  0052BA  EF61  F029         	goto	l6638
 19790  0052BE                     u7370:
 19791  0052BE  EFAE  F029         	goto	l153
 19792  0052C2                     l6638:
 19793                           
 19794                           ;src/driver/adf4351.c: 108:  if(enable) {
 19795  0052C2  5029               	movf	adf4351_set_mode@enable^0,w,c
 19796  0052C4  102A               	iorwf	(adf4351_set_mode@enable+1)^0,w,c
 19797  0052C6  B4D8               	btfsc	status,2,c
 19798  0052C8  EF68  F029         	goto	u7381
 19799  0052CC  EF6A  F029         	goto	u7380
 19800  0052D0                     u7381:
 19801  0052D0  EF8A  F029         	goto	l6644
 19802  0052D4                     u7380:
 19803  0052D4                     
 19804                           ;src/driver/adf4351.c: 109:   ctx->reg4.vcopd = 0;
 19805  0052D4  EE20 F023          	lfsr	2,35
 19806  0052D8  5027               	movf	adf4351_set_mode@ctx^0,w,c
 19807  0052DA  26D9               	addwf	fsr2l,f,c
 19808  0052DC  5028               	movf	(adf4351_set_mode@ctx+1)^0,w,c
 19809  0052DE  22DA               	addwfc	fsr2h,f,c
 19810  0052E0  0E00               	movlw	0
 19811  0052E2  6EDF               	movwf	indf2,c
 19812                           
 19813                           ;src/driver/adf4351.c: 110:   ctx->reg4.rfoutena = 1;
 19814  0052E4  EE20 F028          	lfsr	2,40
 19815  0052E8  5027               	movf	adf4351_set_mode@ctx^0,w,c
 19816  0052EA  26D9               	addwf	fsr2l,f,c
 19817  0052EC  5028               	movf	(adf4351_set_mode@ctx+1)^0,w,c
 19818  0052EE  22DA               	addwfc	fsr2h,f,c
 19819  0052F0  0E01               	movlw	1
 19820  0052F2  6EDF               	movwf	indf2,c
 19821                           
 19822                           ;src/driver/adf4351.c: 111:   ctx->reg2.pd = 0;
 19823  0052F4  EE20 F016          	lfsr	2,22
 19824  0052F8  5027               	movf	adf4351_set_mode@ctx^0,w,c
 19825  0052FA  26D9               	addwf	fsr2l,f,c
 19826  0052FC  5028               	movf	(adf4351_set_mode@ctx+1)^0,w,c
 19827  0052FE  22DA               	addwfc	fsr2h,f,c
 19828  005300  0E00               	movlw	0
 19829  005302  6EDF               	movwf	indf2,c
 19830  005304                     
 19831                           ;src/driver/adf4351.c: 114:   adf4351_setup(ctx);
 19832  005304  C027  F025         	movff	adf4351_set_mode@ctx,adf4351_setup@ctx
 19833  005308  C028  F026         	movff	adf4351_set_mode@ctx+1,adf4351_setup@ctx+1
 19834  00530C  ECA0  F030         	call	_adf4351_setup	;wreg free
 19835                           
 19836                           ;src/driver/adf4351.c: 115:  } else {
 19837  005310  EFAE  F029         	goto	l153
 19838  005314                     l6644:
 19839                           
 19840                           ;src/driver/adf4351.c: 116:   ctx->reg4.vcopd = 1;
 19841  005314  EE20 F023          	lfsr	2,35
 19842  005318  5027               	movf	adf4351_set_mode@ctx^0,w,c
 19843  00531A  26D9               	addwf	fsr2l,f,c
 19844  00531C  5028               	movf	(adf4351_set_mode@ctx+1)^0,w,c
 19845  00531E  22DA               	addwfc	fsr2h,f,c
 19846  005320  0E01               	movlw	1
 19847  005322  6EDF               	movwf	indf2,c
 19848                           
 19849                           ;src/driver/adf4351.c: 117:   ctx->reg4.rfoutena = 0;
 19850  005324  EE20 F028          	lfsr	2,40
 19851  005328  5027               	movf	adf4351_set_mode@ctx^0,w,c
 19852  00532A  26D9               	addwf	fsr2l,f,c
 19853  00532C  5028               	movf	(adf4351_set_mode@ctx+1)^0,w,c
 19854  00532E  22DA               	addwfc	fsr2h,f,c
 19855  005330  0E00               	movlw	0
 19856  005332  6EDF               	movwf	indf2,c
 19857                           
 19858                           ;src/driver/adf4351.c: 118:   ctx->reg2.pd = 1;
 19859  005334  EE20 F016          	lfsr	2,22
 19860  005338  5027               	movf	adf4351_set_mode@ctx^0,w,c
 19861  00533A  26D9               	addwf	fsr2l,f,c
 19862  00533C  5028               	movf	(adf4351_set_mode@ctx+1)^0,w,c
 19863  00533E  22DA               	addwfc	fsr2h,f,c
 19864  005340  0E01               	movlw	1
 19865  005342  6EDF               	movwf	indf2,c
 19866  005344                     
 19867                           ;src/driver/adf4351.c: 121:   adf4351_write_reg4(ctx);
 19868  005344  C027  F019         	movff	adf4351_set_mode@ctx,adf4351_write_reg4@ctx
 19869  005348  C028  F01A         	movff	adf4351_set_mode@ctx+1,adf4351_write_reg4@ctx+1
 19870  00534C  EC86  F010         	call	_adf4351_write_reg4	;wreg free
 19871  005350                     
 19872                           ;src/driver/adf4351.c: 122:   adf4351_write_reg2(ctx);
 19873  005350  C027  F019         	movff	adf4351_set_mode@ctx,adf4351_write_reg2@ctx
 19874  005354  C028  F01A         	movff	adf4351_set_mode@ctx+1,adf4351_write_reg2@ctx+1
 19875  005358  EC7E  F00A         	call	_adf4351_write_reg2	;wreg free
 19876  00535C                     l153:
 19877  00535C  0012               	return		;funcret
 19878  00535E                     __end_of_adf4351_set_mode:
 19879                           	opt callstack 0
 19880                           
 19881 ;; *************** function _adf4351_setup *****************
 19882 ;; Defined at:
 19883 ;;		line 156 in file "src/driver/adf4351.c"
 19884 ;; Parameters:    Size  Location     Type
 19885 ;;  ctx             2   36[COMRAM] PTR struct adf4351_ctx
 19886 ;;		 -> g_adf4351(55), 
 19887 ;; Auto vars:     Size  Location     Type
 19888 ;;		None
 19889 ;; Return value:  Size  Location     Type
 19890 ;;                  1    wreg      void 
 19891 ;; Registers used:
 19892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19893 ;; Tracked objects:
 19894 ;;		On entry : 0/0
 19895 ;;		On exit  : 0/0
 19896 ;;		Unchanged: 0/0
 19897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19898 ;;      Params:         2       0       0       0       0       0       0
 19899 ;;      Locals:         0       0       0       0       0       0       0
 19900 ;;      Temps:          0       0       0       0       0       0       0
 19901 ;;      Totals:         2       0       0       0       0       0       0
 19902 ;;Total ram usage:        2 bytes
 19903 ;; Hardware stack levels used:    1
 19904 ;; Hardware stack levels required when called:    4
 19905 ;; This function calls:
 19906 ;;		_adf4351_write_reg0
 19907 ;;		_adf4351_write_reg1
 19908 ;;		_adf4351_write_reg2
 19909 ;;		_adf4351_write_reg3
 19910 ;;		_adf4351_write_reg4
 19911 ;;		_adf4351_write_reg5
 19912 ;; This function is called by:
 19913 ;;		_adf4351_set_freq
 19914 ;;		_adf4351_set_mode
 19915 ;; This function uses a non-reentrant model
 19916 ;;
 19917                           
 19918                           	psect	text86
 19919  006140                     __ptext86:
 19920                           	opt callstack 0
 19921  006140                     _adf4351_setup:
 19922                           	opt callstack 24
 19923  006140                     
 19924                           ;src/driver/adf4351.c: 156: static void adf4351_setup(adf4351_ctx* ctx);src/driver/adf43
      +                          51.c: 157: {;src/driver/adf4351.c: 159:     adf4351_write_reg5(ctx);
 19925  006140  C025  F019         	movff	adf4351_setup@ctx,adf4351_write_reg5@ctx
 19926  006144  C026  F01A         	movff	adf4351_setup@ctx+1,adf4351_write_reg5@ctx+1
 19927  006148  ECA2  F02C         	call	_adf4351_write_reg5	;wreg free
 19928                           
 19929                           ;src/driver/adf4351.c: 160:     adf4351_write_reg4(ctx);
 19930  00614C  C025  F019         	movff	adf4351_setup@ctx,adf4351_write_reg4@ctx
 19931  006150  C026  F01A         	movff	adf4351_setup@ctx+1,adf4351_write_reg4@ctx+1
 19932  006154  EC86  F010         	call	_adf4351_write_reg4	;wreg free
 19933                           
 19934                           ;src/driver/adf4351.c: 161:     adf4351_write_reg3(ctx);
 19935  006158  C025  F019         	movff	adf4351_setup@ctx,adf4351_write_reg3@ctx
 19936  00615C  C026  F01A         	movff	adf4351_setup@ctx+1,adf4351_write_reg3@ctx+1
 19937  006160  EC3F  F018         	call	_adf4351_write_reg3	;wreg free
 19938                           
 19939                           ;src/driver/adf4351.c: 162:     adf4351_write_reg2(ctx);
 19940  006164  C025  F019         	movff	adf4351_setup@ctx,adf4351_write_reg2@ctx
 19941  006168  C026  F01A         	movff	adf4351_setup@ctx+1,adf4351_write_reg2@ctx+1
 19942  00616C  EC7E  F00A         	call	_adf4351_write_reg2	;wreg free
 19943                           
 19944                           ;src/driver/adf4351.c: 163:     adf4351_write_reg1(ctx);
 19945  006170  C025  F019         	movff	adf4351_setup@ctx,adf4351_write_reg1@ctx
 19946  006174  C026  F01A         	movff	adf4351_setup@ctx+1,adf4351_write_reg1@ctx+1
 19947  006178  ECFE  F021         	call	_adf4351_write_reg1	;wreg free
 19948                           
 19949                           ;src/driver/adf4351.c: 164:     adf4351_write_reg0(ctx);
 19950  00617C  C025  F019         	movff	adf4351_setup@ctx,adf4351_write_reg0@ctx
 19951  006180  C026  F01A         	movff	adf4351_setup@ctx+1,adf4351_write_reg0@ctx+1
 19952  006184  ECCC  F027         	call	_adf4351_write_reg0	;wreg free
 19953  006188  0012               	return		;funcret
 19954  00618A                     __end_of_adf4351_setup:
 19955                           	opt callstack 0
 19956                           
 19957 ;; *************** function _adf4351_write_reg5 *****************
 19958 ;; Defined at:
 19959 ;;		line 372 in file "src/driver/adf4351.c"
 19960 ;; Parameters:    Size  Location     Type
 19961 ;;  ctx             2   24[COMRAM] PTR struct adf4351_ctx
 19962 ;;		 -> g_adf4351(55), 
 19963 ;; Auto vars:     Size  Location     Type
 19964 ;;  data            4   31[COMRAM] unsigned long 
 19965 ;; Return value:  Size  Location     Type
 19966 ;;                  1    wreg      void 
 19967 ;; Registers used:
 19968 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19969 ;; Tracked objects:
 19970 ;;		On entry : 0/0
 19971 ;;		On exit  : 0/0
 19972 ;;		Unchanged: 0/0
 19973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19974 ;;      Params:         2       0       0       0       0       0       0
 19975 ;;      Locals:         4       0       0       0       0       0       0
 19976 ;;      Temps:          5       0       0       0       0       0       0
 19977 ;;      Totals:        11       0       0       0       0       0       0
 19978 ;;Total ram usage:       11 bytes
 19979 ;; Hardware stack levels used:    1
 19980 ;; Hardware stack levels required when called:    3
 19981 ;; This function calls:
 19982 ;;		_adf4351_write_latch
 19983 ;; This function is called by:
 19984 ;;		_adf4351_setup
 19985 ;; This function uses a non-reentrant model
 19986 ;;
 19987                           
 19988                           	psect	text87
 19989  005944                     __ptext87:
 19990                           	opt callstack 0
 19991  005944                     _adf4351_write_reg5:
 19992                           	opt callstack 24
 19993  005944                     
 19994                           ;src/driver/adf4351.c: 372: static void adf4351_write_reg5(adf4351_ctx* ctx);src/driver/
      +                          adf4351.c: 373: {;src/driver/adf4351.c: 374:     if(ctx->init) {
 19995  005944  C019  FFD9         	movff	adf4351_write_reg5@ctx,fsr2l
 19996  005948  C01A  FFDA         	movff	adf4351_write_reg5@ctx+1,fsr2h
 19997  00594C  50DE               	movf	postinc2,w,c
 19998  00594E  10DE               	iorwf	postinc2,w,c
 19999  005950  B4D8               	btfsc	status,2,c
 20000  005952  EFAD  F02C         	goto	u6131
 20001  005956  EFAF  F02C         	goto	u6130
 20002  00595A                     u6131:
 20003  00595A  EFE1  F02C         	goto	l228
 20004  00595E                     u6130:
 20005  00595E                     
 20006                           ;src/driver/adf4351.c: 375:         u32 data = 5;
 20007  00595E  0E05               	movlw	5
 20008  005960  6E20               	movwf	adf4351_write_reg5@data^0,c
 20009  005962  0E00               	movlw	0
 20010  005964  6E21               	movwf	(adf4351_write_reg5@data+1)^0,c
 20011  005966  0E00               	movlw	0
 20012  005968  6E22               	movwf	(adf4351_write_reg5@data+2)^0,c
 20013  00596A  0E00               	movlw	0
 20014  00596C  6E23               	movwf	(adf4351_write_reg5@data+3)^0,c
 20015  00596E                     
 20016                           ;src/driver/adf4351.c: 377:         data |= (((u32)ctx->reg5.ldpinmod&0x0003)<<22);
 20017  00596E  EE20 F02A          	lfsr	2,42
 20018  005972  5019               	movf	adf4351_write_reg5@ctx^0,w,c
 20019  005974  26D9               	addwf	fsr2l,f,c
 20020  005976  501A               	movf	(adf4351_write_reg5@ctx+1)^0,w,c
 20021  005978  22DA               	addwfc	fsr2h,f,c
 20022  00597A  50DF               	movf	indf2,w,c
 20023  00597C  6E1B               	movwf	??_adf4351_write_reg5^0,c
 20024  00597E  0E03               	movlw	3
 20025  005980  161B               	andwf	??_adf4351_write_reg5^0,f,c
 20026  005982  C01B  F01C         	movff	??_adf4351_write_reg5,??_adf4351_write_reg5+1
 20027  005986  6A1D               	clrf	(??_adf4351_write_reg5+2)^0,c
 20028  005988  6A1E               	clrf	(??_adf4351_write_reg5+3)^0,c
 20029  00598A  6A1F               	clrf	(??_adf4351_write_reg5+4)^0,c
 20030  00598C  0E16               	movlw	22
 20031  00598E                     u6145:
 20032  00598E  90D8               	bcf	status,0,c
 20033  005990  361C               	rlcf	(??_adf4351_write_reg5+1)^0,f,c
 20034  005992  361D               	rlcf	(??_adf4351_write_reg5+2)^0,f,c
 20035  005994  361E               	rlcf	(??_adf4351_write_reg5+3)^0,f,c
 20036  005996  361F               	rlcf	(??_adf4351_write_reg5+4)^0,f,c
 20037  005998  2EE8               	decfsz	wreg,f,c
 20038  00599A  EFC7  F02C         	goto	u6145
 20039  00599E  501C               	movf	(??_adf4351_write_reg5+1)^0,w,c
 20040  0059A0  1220               	iorwf	adf4351_write_reg5@data^0,f,c
 20041  0059A2  501D               	movf	(??_adf4351_write_reg5+2)^0,w,c
 20042  0059A4  1221               	iorwf	(adf4351_write_reg5@data+1)^0,f,c
 20043  0059A6  501E               	movf	(??_adf4351_write_reg5+3)^0,w,c
 20044  0059A8  1222               	iorwf	(adf4351_write_reg5@data+2)^0,f,c
 20045  0059AA  501F               	movf	(??_adf4351_write_reg5+4)^0,w,c
 20046  0059AC  1223               	iorwf	(adf4351_write_reg5@data+3)^0,f,c
 20047  0059AE                     
 20048                           ;src/driver/adf4351.c: 379:         adf4351_write_latch(data);
 20049  0059AE  C020  F00D         	movff	adf4351_write_reg5@data,adf4351_write_latch@value
 20050  0059B2  C021  F00E         	movff	adf4351_write_reg5@data+1,adf4351_write_latch@value+1
 20051  0059B6  C022  F00F         	movff	adf4351_write_reg5@data+2,adf4351_write_latch@value+2
 20052  0059BA  C023  F010         	movff	adf4351_write_reg5@data+3,adf4351_write_latch@value+3
 20053  0059BE  EC58  F017         	call	_adf4351_write_latch	;wreg free
 20054  0059C2                     l228:
 20055  0059C2  0012               	return		;funcret
 20056  0059C4                     __end_of_adf4351_write_reg5:
 20057                           	opt callstack 0
 20058                           
 20059 ;; *************** function _adf4351_write_reg4 *****************
 20060 ;; Defined at:
 20061 ;;		line 352 in file "src/driver/adf4351.c"
 20062 ;; Parameters:    Size  Location     Type
 20063 ;;  ctx             2   24[COMRAM] PTR struct adf4351_ctx
 20064 ;;		 -> g_adf4351(55), 
 20065 ;; Auto vars:     Size  Location     Type
 20066 ;;  data            4   31[COMRAM] unsigned long 
 20067 ;; Return value:  Size  Location     Type
 20068 ;;                  1    wreg      void 
 20069 ;; Registers used:
 20070 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20071 ;; Tracked objects:
 20072 ;;		On entry : 0/0
 20073 ;;		On exit  : 0/0
 20074 ;;		Unchanged: 0/0
 20075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20076 ;;      Params:         2       0       0       0       0       0       0
 20077 ;;      Locals:         4       0       0       0       0       0       0
 20078 ;;      Temps:          5       0       0       0       0       0       0
 20079 ;;      Totals:        11       0       0       0       0       0       0
 20080 ;;Total ram usage:       11 bytes
 20081 ;; Hardware stack levels used:    1
 20082 ;; Hardware stack levels required when called:    3
 20083 ;; This function calls:
 20084 ;;		_adf4351_write_latch
 20085 ;; This function is called by:
 20086 ;;		_adf4351_set_mode
 20087 ;;		_adf4351_setup
 20088 ;; This function uses a non-reentrant model
 20089 ;;
 20090                           
 20091                           	psect	text88
 20092  00210C                     __ptext88:
 20093                           	opt callstack 0
 20094  00210C                     _adf4351_write_reg4:
 20095                           	opt callstack 24
 20096  00210C                     
 20097                           ;src/driver/adf4351.c: 352: static void adf4351_write_reg4(adf4351_ctx* ctx);src/driver/
      +                          adf4351.c: 353: {;src/driver/adf4351.c: 354:     if(ctx->init) {
 20098  00210C  C019  FFD9         	movff	adf4351_write_reg4@ctx,fsr2l
 20099  002110  C01A  FFDA         	movff	adf4351_write_reg4@ctx+1,fsr2h
 20100  002114  50DE               	movf	postinc2,w,c
 20101  002116  10DE               	iorwf	postinc2,w,c
 20102  002118  B4D8               	btfsc	status,2,c
 20103  00211A  EF91  F010         	goto	u5911
 20104  00211E  EF93  F010         	goto	u5910
 20105  002122                     u5911:
 20106  002122  EFE1  F011         	goto	l224
 20107  002126                     u5910:
 20108  002126                     
 20109                           ;src/driver/adf4351.c: 355:         u32 data = 4;
 20110  002126  0E04               	movlw	4
 20111  002128  6E20               	movwf	adf4351_write_reg4@data^0,c
 20112  00212A  0E00               	movlw	0
 20113  00212C  6E21               	movwf	(adf4351_write_reg4@data+1)^0,c
 20114  00212E  0E00               	movlw	0
 20115  002130  6E22               	movwf	(adf4351_write_reg4@data+2)^0,c
 20116  002132  0E00               	movlw	0
 20117  002134  6E23               	movwf	(adf4351_write_reg4@data+3)^0,c
 20118  002136                     
 20119                           ;src/driver/adf4351.c: 357:         data |= (((u32)ctx->reg4.rfoutpwr&0x0003)<<3);
 20120  002136  EE20 F029          	lfsr	2,41
 20121  00213A  5019               	movf	adf4351_write_reg4@ctx^0,w,c
 20122  00213C  26D9               	addwf	fsr2l,f,c
 20123  00213E  501A               	movf	(adf4351_write_reg4@ctx+1)^0,w,c
 20124  002140  22DA               	addwfc	fsr2h,f,c
 20125  002142  50DF               	movf	indf2,w,c
 20126  002144  6E1B               	movwf	??_adf4351_write_reg4^0,c
 20127  002146  0E03               	movlw	3
 20128  002148  161B               	andwf	??_adf4351_write_reg4^0,f,c
 20129  00214A  C01B  F01C         	movff	??_adf4351_write_reg4,??_adf4351_write_reg4+1
 20130  00214E  6A1D               	clrf	(??_adf4351_write_reg4+2)^0,c
 20131  002150  6A1E               	clrf	(??_adf4351_write_reg4+3)^0,c
 20132  002152  6A1F               	clrf	(??_adf4351_write_reg4+4)^0,c
 20133  002154  0E03               	movlw	3
 20134  002156                     u5925:
 20135  002156  90D8               	bcf	status,0,c
 20136  002158  361C               	rlcf	(??_adf4351_write_reg4+1)^0,f,c
 20137  00215A  361D               	rlcf	(??_adf4351_write_reg4+2)^0,f,c
 20138  00215C  361E               	rlcf	(??_adf4351_write_reg4+3)^0,f,c
 20139  00215E  361F               	rlcf	(??_adf4351_write_reg4+4)^0,f,c
 20140  002160  2EE8               	decfsz	wreg,f,c
 20141  002162  EFAB  F010         	goto	u5925
 20142  002166  501C               	movf	(??_adf4351_write_reg4+1)^0,w,c
 20143  002168  1220               	iorwf	adf4351_write_reg4@data^0,f,c
 20144  00216A  501D               	movf	(??_adf4351_write_reg4+2)^0,w,c
 20145  00216C  1221               	iorwf	(adf4351_write_reg4@data+1)^0,f,c
 20146  00216E  501E               	movf	(??_adf4351_write_reg4+3)^0,w,c
 20147  002170  1222               	iorwf	(adf4351_write_reg4@data+2)^0,f,c
 20148  002172  501F               	movf	(??_adf4351_write_reg4+4)^0,w,c
 20149  002174  1223               	iorwf	(adf4351_write_reg4@data+3)^0,f,c
 20150  002176                     
 20151                           ;src/driver/adf4351.c: 358:         data |= (((u32)ctx->reg4.rfoutena&0x0001)<<5);
 20152  002176  EE20 F028          	lfsr	2,40
 20153  00217A  5019               	movf	adf4351_write_reg4@ctx^0,w,c
 20154  00217C  26D9               	addwf	fsr2l,f,c
 20155  00217E  501A               	movf	(adf4351_write_reg4@ctx+1)^0,w,c
 20156  002180  22DA               	addwfc	fsr2h,f,c
 20157  002182  50DF               	movf	indf2,w,c
 20158  002184  6E1B               	movwf	??_adf4351_write_reg4^0,c
 20159  002186  0E01               	movlw	1
 20160  002188  161B               	andwf	??_adf4351_write_reg4^0,f,c
 20161  00218A  C01B  F01C         	movff	??_adf4351_write_reg4,??_adf4351_write_reg4+1
 20162  00218E  6A1D               	clrf	(??_adf4351_write_reg4+2)^0,c
 20163  002190  6A1E               	clrf	(??_adf4351_write_reg4+3)^0,c
 20164  002192  6A1F               	clrf	(??_adf4351_write_reg4+4)^0,c
 20165  002194  0E05               	movlw	5
 20166  002196                     u5935:
 20167  002196  90D8               	bcf	status,0,c
 20168  002198  361C               	rlcf	(??_adf4351_write_reg4+1)^0,f,c
 20169  00219A  361D               	rlcf	(??_adf4351_write_reg4+2)^0,f,c
 20170  00219C  361E               	rlcf	(??_adf4351_write_reg4+3)^0,f,c
 20171  00219E  361F               	rlcf	(??_adf4351_write_reg4+4)^0,f,c
 20172  0021A0  2EE8               	decfsz	wreg,f,c
 20173  0021A2  EFCB  F010         	goto	u5935
 20174  0021A6  501C               	movf	(??_adf4351_write_reg4+1)^0,w,c
 20175  0021A8  1220               	iorwf	adf4351_write_reg4@data^0,f,c
 20176  0021AA  501D               	movf	(??_adf4351_write_reg4+2)^0,w,c
 20177  0021AC  1221               	iorwf	(adf4351_write_reg4@data+1)^0,f,c
 20178  0021AE  501E               	movf	(??_adf4351_write_reg4+3)^0,w,c
 20179  0021B0  1222               	iorwf	(adf4351_write_reg4@data+2)^0,f,c
 20180  0021B2  501F               	movf	(??_adf4351_write_reg4+4)^0,w,c
 20181  0021B4  1223               	iorwf	(adf4351_write_reg4@data+3)^0,f,c
 20182  0021B6                     
 20183                           ;src/driver/adf4351.c: 359:         data |= (((u32)ctx->reg4.auxpwrout&0x0003)<<6);
 20184  0021B6  EE20 F027          	lfsr	2,39
 20185  0021BA  5019               	movf	adf4351_write_reg4@ctx^0,w,c
 20186  0021BC  26D9               	addwf	fsr2l,f,c
 20187  0021BE  501A               	movf	(adf4351_write_reg4@ctx+1)^0,w,c
 20188  0021C0  22DA               	addwfc	fsr2h,f,c
 20189  0021C2  50DF               	movf	indf2,w,c
 20190  0021C4  6E1B               	movwf	??_adf4351_write_reg4^0,c
 20191  0021C6  0E03               	movlw	3
 20192  0021C8  161B               	andwf	??_adf4351_write_reg4^0,f,c
 20193  0021CA  C01B  F01C         	movff	??_adf4351_write_reg4,??_adf4351_write_reg4+1
 20194  0021CE  6A1D               	clrf	(??_adf4351_write_reg4+2)^0,c
 20195  0021D0  6A1E               	clrf	(??_adf4351_write_reg4+3)^0,c
 20196  0021D2  6A1F               	clrf	(??_adf4351_write_reg4+4)^0,c
 20197  0021D4  0E06               	movlw	6
 20198  0021D6                     u5945:
 20199  0021D6  90D8               	bcf	status,0,c
 20200  0021D8  361C               	rlcf	(??_adf4351_write_reg4+1)^0,f,c
 20201  0021DA  361D               	rlcf	(??_adf4351_write_reg4+2)^0,f,c
 20202  0021DC  361E               	rlcf	(??_adf4351_write_reg4+3)^0,f,c
 20203  0021DE  361F               	rlcf	(??_adf4351_write_reg4+4)^0,f,c
 20204  0021E0  2EE8               	decfsz	wreg,f,c
 20205  0021E2  EFEB  F010         	goto	u5945
 20206  0021E6  501C               	movf	(??_adf4351_write_reg4+1)^0,w,c
 20207  0021E8  1220               	iorwf	adf4351_write_reg4@data^0,f,c
 20208  0021EA  501D               	movf	(??_adf4351_write_reg4+2)^0,w,c
 20209  0021EC  1221               	iorwf	(adf4351_write_reg4@data+1)^0,f,c
 20210  0021EE  501E               	movf	(??_adf4351_write_reg4+3)^0,w,c
 20211  0021F0  1222               	iorwf	(adf4351_write_reg4@data+2)^0,f,c
 20212  0021F2  501F               	movf	(??_adf4351_write_reg4+4)^0,w,c
 20213  0021F4  1223               	iorwf	(adf4351_write_reg4@data+3)^0,f,c
 20214  0021F6                     
 20215                           ;src/driver/adf4351.c: 360:         data |= (((u32)ctx->reg4.auxoutena&0x0001)<<8);
 20216  0021F6  EE20 F026          	lfsr	2,38
 20217  0021FA  5019               	movf	adf4351_write_reg4@ctx^0,w,c
 20218  0021FC  26D9               	addwf	fsr2l,f,c
 20219  0021FE  501A               	movf	(adf4351_write_reg4@ctx+1)^0,w,c
 20220  002200  22DA               	addwfc	fsr2h,f,c
 20221  002202  50DF               	movf	indf2,w,c
 20222  002204  6E1B               	movwf	??_adf4351_write_reg4^0,c
 20223  002206  0E01               	movlw	1
 20224  002208  161B               	andwf	??_adf4351_write_reg4^0,f,c
 20225  00220A  C01B  F01C         	movff	??_adf4351_write_reg4,??_adf4351_write_reg4+1
 20226  00220E  6A1D               	clrf	(??_adf4351_write_reg4+2)^0,c
 20227  002210  6A1E               	clrf	(??_adf4351_write_reg4+3)^0,c
 20228  002212  6A1F               	clrf	(??_adf4351_write_reg4+4)^0,c
 20229  002214  C01E  F01F         	movff	??_adf4351_write_reg4+3,??_adf4351_write_reg4+4
 20230  002218  C01D  F01E         	movff	??_adf4351_write_reg4+2,??_adf4351_write_reg4+3
 20231  00221C  C01C  F01D         	movff	??_adf4351_write_reg4+1,??_adf4351_write_reg4+2
 20232  002220  6A1C               	clrf	(??_adf4351_write_reg4+1)^0,c
 20233  002222  501C               	movf	(??_adf4351_write_reg4+1)^0,w,c
 20234  002224  1220               	iorwf	adf4351_write_reg4@data^0,f,c
 20235  002226  501D               	movf	(??_adf4351_write_reg4+2)^0,w,c
 20236  002228  1221               	iorwf	(adf4351_write_reg4@data+1)^0,f,c
 20237  00222A  501E               	movf	(??_adf4351_write_reg4+3)^0,w,c
 20238  00222C  1222               	iorwf	(adf4351_write_reg4@data+2)^0,f,c
 20239  00222E  501F               	movf	(??_adf4351_write_reg4+4)^0,w,c
 20240  002230  1223               	iorwf	(adf4351_write_reg4@data+3)^0,f,c
 20241  002232                     
 20242                           ;src/driver/adf4351.c: 361:         data |= (((u32)ctx->reg4.auxoutsel&0x0001)<<9);
 20243  002232  EE20 F025          	lfsr	2,37
 20244  002236  5019               	movf	adf4351_write_reg4@ctx^0,w,c
 20245  002238  26D9               	addwf	fsr2l,f,c
 20246  00223A  501A               	movf	(adf4351_write_reg4@ctx+1)^0,w,c
 20247  00223C  22DA               	addwfc	fsr2h,f,c
 20248  00223E  50DF               	movf	indf2,w,c
 20249  002240  6E1B               	movwf	??_adf4351_write_reg4^0,c
 20250  002242  0E01               	movlw	1
 20251  002244  161B               	andwf	??_adf4351_write_reg4^0,f,c
 20252  002246  C01B  F01C         	movff	??_adf4351_write_reg4,??_adf4351_write_reg4+1
 20253  00224A  6A1D               	clrf	(??_adf4351_write_reg4+2)^0,c
 20254  00224C  6A1E               	clrf	(??_adf4351_write_reg4+3)^0,c
 20255  00224E  6A1F               	clrf	(??_adf4351_write_reg4+4)^0,c
 20256  002250  0E09               	movlw	9
 20257  002252                     u5955:
 20258  002252  90D8               	bcf	status,0,c
 20259  002254  361C               	rlcf	(??_adf4351_write_reg4+1)^0,f,c
 20260  002256  361D               	rlcf	(??_adf4351_write_reg4+2)^0,f,c
 20261  002258  361E               	rlcf	(??_adf4351_write_reg4+3)^0,f,c
 20262  00225A  361F               	rlcf	(??_adf4351_write_reg4+4)^0,f,c
 20263  00225C  2EE8               	decfsz	wreg,f,c
 20264  00225E  EF29  F011         	goto	u5955
 20265  002262  501C               	movf	(??_adf4351_write_reg4+1)^0,w,c
 20266  002264  1220               	iorwf	adf4351_write_reg4@data^0,f,c
 20267  002266  501D               	movf	(??_adf4351_write_reg4+2)^0,w,c
 20268  002268  1221               	iorwf	(adf4351_write_reg4@data+1)^0,f,c
 20269  00226A  501E               	movf	(??_adf4351_write_reg4+3)^0,w,c
 20270  00226C  1222               	iorwf	(adf4351_write_reg4@data+2)^0,f,c
 20271  00226E  501F               	movf	(??_adf4351_write_reg4+4)^0,w,c
 20272  002270  1223               	iorwf	(adf4351_write_reg4@data+3)^0,f,c
 20273  002272                     
 20274                           ;src/driver/adf4351.c: 362:         data |= (((u32)ctx->reg4.mtld&0x0001)<<10);
 20275  002272  EE20 F024          	lfsr	2,36
 20276  002276  5019               	movf	adf4351_write_reg4@ctx^0,w,c
 20277  002278  26D9               	addwf	fsr2l,f,c
 20278  00227A  501A               	movf	(adf4351_write_reg4@ctx+1)^0,w,c
 20279  00227C  22DA               	addwfc	fsr2h,f,c
 20280  00227E  50DF               	movf	indf2,w,c
 20281  002280  6E1B               	movwf	??_adf4351_write_reg4^0,c
 20282  002282  0E01               	movlw	1
 20283  002284  161B               	andwf	??_adf4351_write_reg4^0,f,c
 20284  002286  C01B  F01C         	movff	??_adf4351_write_reg4,??_adf4351_write_reg4+1
 20285  00228A  6A1D               	clrf	(??_adf4351_write_reg4+2)^0,c
 20286  00228C  6A1E               	clrf	(??_adf4351_write_reg4+3)^0,c
 20287  00228E  6A1F               	clrf	(??_adf4351_write_reg4+4)^0,c
 20288  002290  0E0A               	movlw	10
 20289  002292                     u5965:
 20290  002292  90D8               	bcf	status,0,c
 20291  002294  361C               	rlcf	(??_adf4351_write_reg4+1)^0,f,c
 20292  002296  361D               	rlcf	(??_adf4351_write_reg4+2)^0,f,c
 20293  002298  361E               	rlcf	(??_adf4351_write_reg4+3)^0,f,c
 20294  00229A  361F               	rlcf	(??_adf4351_write_reg4+4)^0,f,c
 20295  00229C  2EE8               	decfsz	wreg,f,c
 20296  00229E  EF49  F011         	goto	u5965
 20297  0022A2  501C               	movf	(??_adf4351_write_reg4+1)^0,w,c
 20298  0022A4  1220               	iorwf	adf4351_write_reg4@data^0,f,c
 20299  0022A6  501D               	movf	(??_adf4351_write_reg4+2)^0,w,c
 20300  0022A8  1221               	iorwf	(adf4351_write_reg4@data+1)^0,f,c
 20301  0022AA  501E               	movf	(??_adf4351_write_reg4+3)^0,w,c
 20302  0022AC  1222               	iorwf	(adf4351_write_reg4@data+2)^0,f,c
 20303  0022AE  501F               	movf	(??_adf4351_write_reg4+4)^0,w,c
 20304  0022B0  1223               	iorwf	(adf4351_write_reg4@data+3)^0,f,c
 20305  0022B2                     
 20306                           ;src/driver/adf4351.c: 363:         data |= (((u32)ctx->reg4.vcopd&0x0001)<<11);
 20307  0022B2  EE20 F023          	lfsr	2,35
 20308  0022B6  5019               	movf	adf4351_write_reg4@ctx^0,w,c
 20309  0022B8  26D9               	addwf	fsr2l,f,c
 20310  0022BA  501A               	movf	(adf4351_write_reg4@ctx+1)^0,w,c
 20311  0022BC  22DA               	addwfc	fsr2h,f,c
 20312  0022BE  50DF               	movf	indf2,w,c
 20313  0022C0  6E1B               	movwf	??_adf4351_write_reg4^0,c
 20314  0022C2  0E01               	movlw	1
 20315  0022C4  161B               	andwf	??_adf4351_write_reg4^0,f,c
 20316  0022C6  C01B  F01C         	movff	??_adf4351_write_reg4,??_adf4351_write_reg4+1
 20317  0022CA  6A1D               	clrf	(??_adf4351_write_reg4+2)^0,c
 20318  0022CC  6A1E               	clrf	(??_adf4351_write_reg4+3)^0,c
 20319  0022CE  6A1F               	clrf	(??_adf4351_write_reg4+4)^0,c
 20320  0022D0  0E0B               	movlw	11
 20321  0022D2                     u5975:
 20322  0022D2  90D8               	bcf	status,0,c
 20323  0022D4  361C               	rlcf	(??_adf4351_write_reg4+1)^0,f,c
 20324  0022D6  361D               	rlcf	(??_adf4351_write_reg4+2)^0,f,c
 20325  0022D8  361E               	rlcf	(??_adf4351_write_reg4+3)^0,f,c
 20326  0022DA  361F               	rlcf	(??_adf4351_write_reg4+4)^0,f,c
 20327  0022DC  2EE8               	decfsz	wreg,f,c
 20328  0022DE  EF69  F011         	goto	u5975
 20329  0022E2  501C               	movf	(??_adf4351_write_reg4+1)^0,w,c
 20330  0022E4  1220               	iorwf	adf4351_write_reg4@data^0,f,c
 20331  0022E6  501D               	movf	(??_adf4351_write_reg4+2)^0,w,c
 20332  0022E8  1221               	iorwf	(adf4351_write_reg4@data+1)^0,f,c
 20333  0022EA  501E               	movf	(??_adf4351_write_reg4+3)^0,w,c
 20334  0022EC  1222               	iorwf	(adf4351_write_reg4@data+2)^0,f,c
 20335  0022EE  501F               	movf	(??_adf4351_write_reg4+4)^0,w,c
 20336  0022F0  1223               	iorwf	(adf4351_write_reg4@data+3)^0,f,c
 20337  0022F2                     
 20338                           ;src/driver/adf4351.c: 364:         data |= (((u32)ctx->reg4.bsclkdiv&0x00FF)<<12);
 20339  0022F2  EE20 F022          	lfsr	2,34
 20340  0022F6  5019               	movf	adf4351_write_reg4@ctx^0,w,c
 20341  0022F8  26D9               	addwf	fsr2l,f,c
 20342  0022FA  501A               	movf	(adf4351_write_reg4@ctx+1)^0,w,c
 20343  0022FC  22DA               	addwfc	fsr2h,f,c
 20344  0022FE  50DF               	movf	indf2,w,c
 20345  002300  6E1B               	movwf	??_adf4351_write_reg4^0,c
 20346  002302  C01B  F01C         	movff	??_adf4351_write_reg4,??_adf4351_write_reg4+1
 20347  002306  6A1D               	clrf	(??_adf4351_write_reg4+2)^0,c
 20348  002308  6A1E               	clrf	(??_adf4351_write_reg4+3)^0,c
 20349  00230A  6A1F               	clrf	(??_adf4351_write_reg4+4)^0,c
 20350  00230C  0E0C               	movlw	12
 20351  00230E                     u5985:
 20352  00230E  90D8               	bcf	status,0,c
 20353  002310  361C               	rlcf	(??_adf4351_write_reg4+1)^0,f,c
 20354  002312  361D               	rlcf	(??_adf4351_write_reg4+2)^0,f,c
 20355  002314  361E               	rlcf	(??_adf4351_write_reg4+3)^0,f,c
 20356  002316  361F               	rlcf	(??_adf4351_write_reg4+4)^0,f,c
 20357  002318  2EE8               	decfsz	wreg,f,c
 20358  00231A  EF87  F011         	goto	u5985
 20359  00231E  501C               	movf	(??_adf4351_write_reg4+1)^0,w,c
 20360  002320  1220               	iorwf	adf4351_write_reg4@data^0,f,c
 20361  002322  501D               	movf	(??_adf4351_write_reg4+2)^0,w,c
 20362  002324  1221               	iorwf	(adf4351_write_reg4@data+1)^0,f,c
 20363  002326  501E               	movf	(??_adf4351_write_reg4+3)^0,w,c
 20364  002328  1222               	iorwf	(adf4351_write_reg4@data+2)^0,f,c
 20365  00232A  501F               	movf	(??_adf4351_write_reg4+4)^0,w,c
 20366  00232C  1223               	iorwf	(adf4351_write_reg4@data+3)^0,f,c
 20367  00232E                     
 20368                           ;src/driver/adf4351.c: 365:         data |= (((u32)ctx->reg4.divsel&0x0007)<<20);
 20369  00232E  EE20 F021          	lfsr	2,33
 20370  002332  5019               	movf	adf4351_write_reg4@ctx^0,w,c
 20371  002334  26D9               	addwf	fsr2l,f,c
 20372  002336  501A               	movf	(adf4351_write_reg4@ctx+1)^0,w,c
 20373  002338  22DA               	addwfc	fsr2h,f,c
 20374  00233A  50DF               	movf	indf2,w,c
 20375  00233C  6E1B               	movwf	??_adf4351_write_reg4^0,c
 20376  00233E  0E07               	movlw	7
 20377  002340  161B               	andwf	??_adf4351_write_reg4^0,f,c
 20378  002342  C01B  F01C         	movff	??_adf4351_write_reg4,??_adf4351_write_reg4+1
 20379  002346  6A1D               	clrf	(??_adf4351_write_reg4+2)^0,c
 20380  002348  6A1E               	clrf	(??_adf4351_write_reg4+3)^0,c
 20381  00234A  6A1F               	clrf	(??_adf4351_write_reg4+4)^0,c
 20382  00234C  0E14               	movlw	20
 20383  00234E                     u5995:
 20384  00234E  90D8               	bcf	status,0,c
 20385  002350  361C               	rlcf	(??_adf4351_write_reg4+1)^0,f,c
 20386  002352  361D               	rlcf	(??_adf4351_write_reg4+2)^0,f,c
 20387  002354  361E               	rlcf	(??_adf4351_write_reg4+3)^0,f,c
 20388  002356  361F               	rlcf	(??_adf4351_write_reg4+4)^0,f,c
 20389  002358  2EE8               	decfsz	wreg,f,c
 20390  00235A  EFA7  F011         	goto	u5995
 20391  00235E  501C               	movf	(??_adf4351_write_reg4+1)^0,w,c
 20392  002360  1220               	iorwf	adf4351_write_reg4@data^0,f,c
 20393  002362  501D               	movf	(??_adf4351_write_reg4+2)^0,w,c
 20394  002364  1221               	iorwf	(adf4351_write_reg4@data+1)^0,f,c
 20395  002366  501E               	movf	(??_adf4351_write_reg4+3)^0,w,c
 20396  002368  1222               	iorwf	(adf4351_write_reg4@data+2)^0,f,c
 20397  00236A  501F               	movf	(??_adf4351_write_reg4+4)^0,w,c
 20398  00236C  1223               	iorwf	(adf4351_write_reg4@data+3)^0,f,c
 20399  00236E                     
 20400                           ;src/driver/adf4351.c: 366:         data |= (((u32)ctx->reg4.fbsel&0x0001)<<23);
 20401  00236E  EE20 F020          	lfsr	2,32
 20402  002372  5019               	movf	adf4351_write_reg4@ctx^0,w,c
 20403  002374  26D9               	addwf	fsr2l,f,c
 20404  002376  501A               	movf	(adf4351_write_reg4@ctx+1)^0,w,c
 20405  002378  22DA               	addwfc	fsr2h,f,c
 20406  00237A  50DF               	movf	indf2,w,c
 20407  00237C  6E1B               	movwf	??_adf4351_write_reg4^0,c
 20408  00237E  0E01               	movlw	1
 20409  002380  161B               	andwf	??_adf4351_write_reg4^0,f,c
 20410  002382  C01B  F01C         	movff	??_adf4351_write_reg4,??_adf4351_write_reg4+1
 20411  002386  6A1D               	clrf	(??_adf4351_write_reg4+2)^0,c
 20412  002388  6A1E               	clrf	(??_adf4351_write_reg4+3)^0,c
 20413  00238A  6A1F               	clrf	(??_adf4351_write_reg4+4)^0,c
 20414  00238C  0E17               	movlw	23
 20415  00238E                     u6005:
 20416  00238E  90D8               	bcf	status,0,c
 20417  002390  361C               	rlcf	(??_adf4351_write_reg4+1)^0,f,c
 20418  002392  361D               	rlcf	(??_adf4351_write_reg4+2)^0,f,c
 20419  002394  361E               	rlcf	(??_adf4351_write_reg4+3)^0,f,c
 20420  002396  361F               	rlcf	(??_adf4351_write_reg4+4)^0,f,c
 20421  002398  2EE8               	decfsz	wreg,f,c
 20422  00239A  EFC7  F011         	goto	u6005
 20423  00239E  501C               	movf	(??_adf4351_write_reg4+1)^0,w,c
 20424  0023A0  1220               	iorwf	adf4351_write_reg4@data^0,f,c
 20425  0023A2  501D               	movf	(??_adf4351_write_reg4+2)^0,w,c
 20426  0023A4  1221               	iorwf	(adf4351_write_reg4@data+1)^0,f,c
 20427  0023A6  501E               	movf	(??_adf4351_write_reg4+3)^0,w,c
 20428  0023A8  1222               	iorwf	(adf4351_write_reg4@data+2)^0,f,c
 20429  0023AA  501F               	movf	(??_adf4351_write_reg4+4)^0,w,c
 20430  0023AC  1223               	iorwf	(adf4351_write_reg4@data+3)^0,f,c
 20431  0023AE                     
 20432                           ;src/driver/adf4351.c: 368:         adf4351_write_latch(data);
 20433  0023AE  C020  F00D         	movff	adf4351_write_reg4@data,adf4351_write_latch@value
 20434  0023B2  C021  F00E         	movff	adf4351_write_reg4@data+1,adf4351_write_latch@value+1
 20435  0023B6  C022  F00F         	movff	adf4351_write_reg4@data+2,adf4351_write_latch@value+2
 20436  0023BA  C023  F010         	movff	adf4351_write_reg4@data+3,adf4351_write_latch@value+3
 20437  0023BE  EC58  F017         	call	_adf4351_write_latch	;wreg free
 20438  0023C2                     l224:
 20439  0023C2  0012               	return		;funcret
 20440  0023C4                     __end_of_adf4351_write_reg4:
 20441                           	opt callstack 0
 20442                           
 20443 ;; *************** function _adf4351_write_reg3 *****************
 20444 ;; Defined at:
 20445 ;;		line 336 in file "src/driver/adf4351.c"
 20446 ;; Parameters:    Size  Location     Type
 20447 ;;  ctx             2   24[COMRAM] PTR struct adf4351_ctx
 20448 ;;		 -> g_adf4351(55), 
 20449 ;; Auto vars:     Size  Location     Type
 20450 ;;  data            4   32[COMRAM] unsigned long 
 20451 ;; Return value:  Size  Location     Type
 20452 ;;                  1    wreg      void 
 20453 ;; Registers used:
 20454 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20455 ;; Tracked objects:
 20456 ;;		On entry : 0/0
 20457 ;;		On exit  : 0/0
 20458 ;;		Unchanged: 0/0
 20459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20460 ;;      Params:         2       0       0       0       0       0       0
 20461 ;;      Locals:         4       0       0       0       0       0       0
 20462 ;;      Temps:          6       0       0       0       0       0       0
 20463 ;;      Totals:        12       0       0       0       0       0       0
 20464 ;;Total ram usage:       12 bytes
 20465 ;; Hardware stack levels used:    1
 20466 ;; Hardware stack levels required when called:    3
 20467 ;; This function calls:
 20468 ;;		_adf4351_write_latch
 20469 ;; This function is called by:
 20470 ;;		_adf4351_setup
 20471 ;; This function uses a non-reentrant model
 20472 ;;
 20473                           
 20474                           	psect	text89
 20475  00307E                     __ptext89:
 20476                           	opt callstack 0
 20477  00307E                     _adf4351_write_reg3:
 20478                           	opt callstack 24
 20479  00307E                     
 20480                           ;src/driver/adf4351.c: 336: static void adf4351_write_reg3(adf4351_ctx* ctx);src/driver/
      +                          adf4351.c: 337: {;src/driver/adf4351.c: 338:     if(ctx->init) {
 20481  00307E  C019  FFD9         	movff	adf4351_write_reg3@ctx,fsr2l
 20482  003082  C01A  FFDA         	movff	adf4351_write_reg3@ctx+1,fsr2h
 20483  003086  50DE               	movf	postinc2,w,c
 20484  003088  10DE               	iorwf	postinc2,w,c
 20485  00308A  B4D8               	btfsc	status,2,c
 20486  00308C  EF4A  F018         	goto	u6151
 20487  003090  EF4C  F018         	goto	u6150
 20488  003094                     u6151:
 20489  003094  EF21  F019         	goto	l220
 20490  003098                     u6150:
 20491  003098                     
 20492                           ;src/driver/adf4351.c: 339:         u32 data = 3;
 20493  003098  0E03               	movlw	3
 20494  00309A  6E21               	movwf	adf4351_write_reg3@data^0,c
 20495  00309C  0E00               	movlw	0
 20496  00309E  6E22               	movwf	(adf4351_write_reg3@data+1)^0,c
 20497  0030A0  0E00               	movlw	0
 20498  0030A2  6E23               	movwf	(adf4351_write_reg3@data+2)^0,c
 20499  0030A4  0E00               	movlw	0
 20500  0030A6  6E24               	movwf	(adf4351_write_reg3@data+3)^0,c
 20501  0030A8                     
 20502                           ;src/driver/adf4351.c: 341:         data |= (((u32)ctx->reg3.clkdiv&0x0FFF)<<3);
 20503  0030A8  EE20 F01E          	lfsr	2,30
 20504  0030AC  5019               	movf	adf4351_write_reg3@ctx^0,w,c
 20505  0030AE  26D9               	addwf	fsr2l,f,c
 20506  0030B0  501A               	movf	(adf4351_write_reg3@ctx+1)^0,w,c
 20507  0030B2  22DA               	addwfc	fsr2h,f,c
 20508  0030B4  CFDE F01B          	movff	postinc2,??_adf4351_write_reg3
 20509  0030B8  CFDD F01C          	movff	postdec2,??_adf4351_write_reg3+1
 20510  0030BC  0EFF               	movlw	255
 20511  0030BE  141B               	andwf	??_adf4351_write_reg3^0,w,c
 20512  0030C0  6E1D               	movwf	(??_adf4351_write_reg3+2)^0,c
 20513  0030C2  0E0F               	movlw	15
 20514  0030C4  141C               	andwf	(??_adf4351_write_reg3+1)^0,w,c
 20515  0030C6  6E1E               	movwf	(??_adf4351_write_reg3+3)^0,c
 20516  0030C8  6A1F               	clrf	(??_adf4351_write_reg3+4)^0,c
 20517  0030CA  6A20               	clrf	(??_adf4351_write_reg3+5)^0,c
 20518  0030CC  0E03               	movlw	3
 20519  0030CE                     u6165:
 20520  0030CE  90D8               	bcf	status,0,c
 20521  0030D0  361D               	rlcf	(??_adf4351_write_reg3+2)^0,f,c
 20522  0030D2  361E               	rlcf	(??_adf4351_write_reg3+3)^0,f,c
 20523  0030D4  361F               	rlcf	(??_adf4351_write_reg3+4)^0,f,c
 20524  0030D6  3620               	rlcf	(??_adf4351_write_reg3+5)^0,f,c
 20525  0030D8  2EE8               	decfsz	wreg,f,c
 20526  0030DA  EF67  F018         	goto	u6165
 20527  0030DE  501D               	movf	(??_adf4351_write_reg3+2)^0,w,c
 20528  0030E0  1221               	iorwf	adf4351_write_reg3@data^0,f,c
 20529  0030E2  501E               	movf	(??_adf4351_write_reg3+3)^0,w,c
 20530  0030E4  1222               	iorwf	(adf4351_write_reg3@data+1)^0,f,c
 20531  0030E6  501F               	movf	(??_adf4351_write_reg3+4)^0,w,c
 20532  0030E8  1223               	iorwf	(adf4351_write_reg3@data+2)^0,f,c
 20533  0030EA  5020               	movf	(??_adf4351_write_reg3+5)^0,w,c
 20534  0030EC  1224               	iorwf	(adf4351_write_reg3@data+3)^0,f,c
 20535  0030EE                     
 20536                           ;src/driver/adf4351.c: 342:         data |= (((u32)ctx->reg3.clkdivmode&0x0003)<<15);
 20537  0030EE  EE20 F01D          	lfsr	2,29
 20538  0030F2  5019               	movf	adf4351_write_reg3@ctx^0,w,c
 20539  0030F4  26D9               	addwf	fsr2l,f,c
 20540  0030F6  501A               	movf	(adf4351_write_reg3@ctx+1)^0,w,c
 20541  0030F8  22DA               	addwfc	fsr2h,f,c
 20542  0030FA  50DF               	movf	indf2,w,c
 20543  0030FC  6E1B               	movwf	??_adf4351_write_reg3^0,c
 20544  0030FE  0E03               	movlw	3
 20545  003100  161B               	andwf	??_adf4351_write_reg3^0,f,c
 20546  003102  C01B  F01C         	movff	??_adf4351_write_reg3,??_adf4351_write_reg3+1
 20547  003106  6A1D               	clrf	(??_adf4351_write_reg3+2)^0,c
 20548  003108  6A1E               	clrf	(??_adf4351_write_reg3+3)^0,c
 20549  00310A  6A1F               	clrf	(??_adf4351_write_reg3+4)^0,c
 20550  00310C  0E0F               	movlw	15
 20551  00310E                     u6175:
 20552  00310E  90D8               	bcf	status,0,c
 20553  003110  361C               	rlcf	(??_adf4351_write_reg3+1)^0,f,c
 20554  003112  361D               	rlcf	(??_adf4351_write_reg3+2)^0,f,c
 20555  003114  361E               	rlcf	(??_adf4351_write_reg3+3)^0,f,c
 20556  003116  361F               	rlcf	(??_adf4351_write_reg3+4)^0,f,c
 20557  003118  2EE8               	decfsz	wreg,f,c
 20558  00311A  EF87  F018         	goto	u6175
 20559  00311E  501C               	movf	(??_adf4351_write_reg3+1)^0,w,c
 20560  003120  1221               	iorwf	adf4351_write_reg3@data^0,f,c
 20561  003122  501D               	movf	(??_adf4351_write_reg3+2)^0,w,c
 20562  003124  1222               	iorwf	(adf4351_write_reg3@data+1)^0,f,c
 20563  003126  501E               	movf	(??_adf4351_write_reg3+3)^0,w,c
 20564  003128  1223               	iorwf	(adf4351_write_reg3@data+2)^0,f,c
 20565  00312A  501F               	movf	(??_adf4351_write_reg3+4)^0,w,c
 20566  00312C  1224               	iorwf	(adf4351_write_reg3@data+3)^0,f,c
 20567  00312E                     
 20568                           ;src/driver/adf4351.c: 343:         data |= (((u32)ctx->reg3.csr&0x0001)<<18);
 20569  00312E  EE20 F01C          	lfsr	2,28
 20570  003132  5019               	movf	adf4351_write_reg3@ctx^0,w,c
 20571  003134  26D9               	addwf	fsr2l,f,c
 20572  003136  501A               	movf	(adf4351_write_reg3@ctx+1)^0,w,c
 20573  003138  22DA               	addwfc	fsr2h,f,c
 20574  00313A  50DF               	movf	indf2,w,c
 20575  00313C  6E1B               	movwf	??_adf4351_write_reg3^0,c
 20576  00313E  0E01               	movlw	1
 20577  003140  161B               	andwf	??_adf4351_write_reg3^0,f,c
 20578  003142  C01B  F01C         	movff	??_adf4351_write_reg3,??_adf4351_write_reg3+1
 20579  003146  6A1D               	clrf	(??_adf4351_write_reg3+2)^0,c
 20580  003148  6A1E               	clrf	(??_adf4351_write_reg3+3)^0,c
 20581  00314A  6A1F               	clrf	(??_adf4351_write_reg3+4)^0,c
 20582  00314C  0E12               	movlw	18
 20583  00314E                     u6185:
 20584  00314E  90D8               	bcf	status,0,c
 20585  003150  361C               	rlcf	(??_adf4351_write_reg3+1)^0,f,c
 20586  003152  361D               	rlcf	(??_adf4351_write_reg3+2)^0,f,c
 20587  003154  361E               	rlcf	(??_adf4351_write_reg3+3)^0,f,c
 20588  003156  361F               	rlcf	(??_adf4351_write_reg3+4)^0,f,c
 20589  003158  2EE8               	decfsz	wreg,f,c
 20590  00315A  EFA7  F018         	goto	u6185
 20591  00315E  501C               	movf	(??_adf4351_write_reg3+1)^0,w,c
 20592  003160  1221               	iorwf	adf4351_write_reg3@data^0,f,c
 20593  003162  501D               	movf	(??_adf4351_write_reg3+2)^0,w,c
 20594  003164  1222               	iorwf	(adf4351_write_reg3@data+1)^0,f,c
 20595  003166  501E               	movf	(??_adf4351_write_reg3+3)^0,w,c
 20596  003168  1223               	iorwf	(adf4351_write_reg3@data+2)^0,f,c
 20597  00316A  501F               	movf	(??_adf4351_write_reg3+4)^0,w,c
 20598  00316C  1224               	iorwf	(adf4351_write_reg3@data+3)^0,f,c
 20599  00316E                     
 20600                           ;src/driver/adf4351.c: 344:         data |= (((u32)ctx->reg3.chcancel&0x0001)<<21);
 20601  00316E  EE20 F01B          	lfsr	2,27
 20602  003172  5019               	movf	adf4351_write_reg3@ctx^0,w,c
 20603  003174  26D9               	addwf	fsr2l,f,c
 20604  003176  501A               	movf	(adf4351_write_reg3@ctx+1)^0,w,c
 20605  003178  22DA               	addwfc	fsr2h,f,c
 20606  00317A  50DF               	movf	indf2,w,c
 20607  00317C  6E1B               	movwf	??_adf4351_write_reg3^0,c
 20608  00317E  0E01               	movlw	1
 20609  003180  161B               	andwf	??_adf4351_write_reg3^0,f,c
 20610  003182  C01B  F01C         	movff	??_adf4351_write_reg3,??_adf4351_write_reg3+1
 20611  003186  6A1D               	clrf	(??_adf4351_write_reg3+2)^0,c
 20612  003188  6A1E               	clrf	(??_adf4351_write_reg3+3)^0,c
 20613  00318A  6A1F               	clrf	(??_adf4351_write_reg3+4)^0,c
 20614  00318C  0E15               	movlw	21
 20615  00318E                     u6195:
 20616  00318E  90D8               	bcf	status,0,c
 20617  003190  361C               	rlcf	(??_adf4351_write_reg3+1)^0,f,c
 20618  003192  361D               	rlcf	(??_adf4351_write_reg3+2)^0,f,c
 20619  003194  361E               	rlcf	(??_adf4351_write_reg3+3)^0,f,c
 20620  003196  361F               	rlcf	(??_adf4351_write_reg3+4)^0,f,c
 20621  003198  2EE8               	decfsz	wreg,f,c
 20622  00319A  EFC7  F018         	goto	u6195
 20623  00319E  501C               	movf	(??_adf4351_write_reg3+1)^0,w,c
 20624  0031A0  1221               	iorwf	adf4351_write_reg3@data^0,f,c
 20625  0031A2  501D               	movf	(??_adf4351_write_reg3+2)^0,w,c
 20626  0031A4  1222               	iorwf	(adf4351_write_reg3@data+1)^0,f,c
 20627  0031A6  501E               	movf	(??_adf4351_write_reg3+3)^0,w,c
 20628  0031A8  1223               	iorwf	(adf4351_write_reg3@data+2)^0,f,c
 20629  0031AA  501F               	movf	(??_adf4351_write_reg3+4)^0,w,c
 20630  0031AC  1224               	iorwf	(adf4351_write_reg3@data+3)^0,f,c
 20631  0031AE                     
 20632                           ;src/driver/adf4351.c: 345:         data |= (((u32)ctx->reg3.abp&0x0001)<<22);
 20633  0031AE  EE20 F01A          	lfsr	2,26
 20634  0031B2  5019               	movf	adf4351_write_reg3@ctx^0,w,c
 20635  0031B4  26D9               	addwf	fsr2l,f,c
 20636  0031B6  501A               	movf	(adf4351_write_reg3@ctx+1)^0,w,c
 20637  0031B8  22DA               	addwfc	fsr2h,f,c
 20638  0031BA  50DF               	movf	indf2,w,c
 20639  0031BC  6E1B               	movwf	??_adf4351_write_reg3^0,c
 20640  0031BE  0E01               	movlw	1
 20641  0031C0  161B               	andwf	??_adf4351_write_reg3^0,f,c
 20642  0031C2  C01B  F01C         	movff	??_adf4351_write_reg3,??_adf4351_write_reg3+1
 20643  0031C6  6A1D               	clrf	(??_adf4351_write_reg3+2)^0,c
 20644  0031C8  6A1E               	clrf	(??_adf4351_write_reg3+3)^0,c
 20645  0031CA  6A1F               	clrf	(??_adf4351_write_reg3+4)^0,c
 20646  0031CC  0E16               	movlw	22
 20647  0031CE                     u6205:
 20648  0031CE  90D8               	bcf	status,0,c
 20649  0031D0  361C               	rlcf	(??_adf4351_write_reg3+1)^0,f,c
 20650  0031D2  361D               	rlcf	(??_adf4351_write_reg3+2)^0,f,c
 20651  0031D4  361E               	rlcf	(??_adf4351_write_reg3+3)^0,f,c
 20652  0031D6  361F               	rlcf	(??_adf4351_write_reg3+4)^0,f,c
 20653  0031D8  2EE8               	decfsz	wreg,f,c
 20654  0031DA  EFE7  F018         	goto	u6205
 20655  0031DE  501C               	movf	(??_adf4351_write_reg3+1)^0,w,c
 20656  0031E0  1221               	iorwf	adf4351_write_reg3@data^0,f,c
 20657  0031E2  501D               	movf	(??_adf4351_write_reg3+2)^0,w,c
 20658  0031E4  1222               	iorwf	(adf4351_write_reg3@data+1)^0,f,c
 20659  0031E6  501E               	movf	(??_adf4351_write_reg3+3)^0,w,c
 20660  0031E8  1223               	iorwf	(adf4351_write_reg3@data+2)^0,f,c
 20661  0031EA  501F               	movf	(??_adf4351_write_reg3+4)^0,w,c
 20662  0031EC  1224               	iorwf	(adf4351_write_reg3@data+3)^0,f,c
 20663  0031EE                     
 20664                           ;src/driver/adf4351.c: 346:         data |= (((u32)ctx->reg3.bscm&0x0001)<<23);
 20665  0031EE  EE20 F019          	lfsr	2,25
 20666  0031F2  5019               	movf	adf4351_write_reg3@ctx^0,w,c
 20667  0031F4  26D9               	addwf	fsr2l,f,c
 20668  0031F6  501A               	movf	(adf4351_write_reg3@ctx+1)^0,w,c
 20669  0031F8  22DA               	addwfc	fsr2h,f,c
 20670  0031FA  50DF               	movf	indf2,w,c
 20671  0031FC  6E1B               	movwf	??_adf4351_write_reg3^0,c
 20672  0031FE  0E01               	movlw	1
 20673  003200  161B               	andwf	??_adf4351_write_reg3^0,f,c
 20674  003202  C01B  F01C         	movff	??_adf4351_write_reg3,??_adf4351_write_reg3+1
 20675  003206  6A1D               	clrf	(??_adf4351_write_reg3+2)^0,c
 20676  003208  6A1E               	clrf	(??_adf4351_write_reg3+3)^0,c
 20677  00320A  6A1F               	clrf	(??_adf4351_write_reg3+4)^0,c
 20678  00320C  0E17               	movlw	23
 20679  00320E                     u6215:
 20680  00320E  90D8               	bcf	status,0,c
 20681  003210  361C               	rlcf	(??_adf4351_write_reg3+1)^0,f,c
 20682  003212  361D               	rlcf	(??_adf4351_write_reg3+2)^0,f,c
 20683  003214  361E               	rlcf	(??_adf4351_write_reg3+3)^0,f,c
 20684  003216  361F               	rlcf	(??_adf4351_write_reg3+4)^0,f,c
 20685  003218  2EE8               	decfsz	wreg,f,c
 20686  00321A  EF07  F019         	goto	u6215
 20687  00321E  501C               	movf	(??_adf4351_write_reg3+1)^0,w,c
 20688  003220  1221               	iorwf	adf4351_write_reg3@data^0,f,c
 20689  003222  501D               	movf	(??_adf4351_write_reg3+2)^0,w,c
 20690  003224  1222               	iorwf	(adf4351_write_reg3@data+1)^0,f,c
 20691  003226  501E               	movf	(??_adf4351_write_reg3+3)^0,w,c
 20692  003228  1223               	iorwf	(adf4351_write_reg3@data+2)^0,f,c
 20693  00322A  501F               	movf	(??_adf4351_write_reg3+4)^0,w,c
 20694  00322C  1224               	iorwf	(adf4351_write_reg3@data+3)^0,f,c
 20695  00322E                     
 20696                           ;src/driver/adf4351.c: 348:         adf4351_write_latch(data);
 20697  00322E  C021  F00D         	movff	adf4351_write_reg3@data,adf4351_write_latch@value
 20698  003232  C022  F00E         	movff	adf4351_write_reg3@data+1,adf4351_write_latch@value+1
 20699  003236  C023  F00F         	movff	adf4351_write_reg3@data+2,adf4351_write_latch@value+2
 20700  00323A  C024  F010         	movff	adf4351_write_reg3@data+3,adf4351_write_latch@value+3
 20701  00323E  EC58  F017         	call	_adf4351_write_latch	;wreg free
 20702  003242                     l220:
 20703  003242  0012               	return		;funcret
 20704  003244                     __end_of_adf4351_write_reg3:
 20705                           	opt callstack 0
 20706                           
 20707 ;; *************** function _adf4351_write_reg2 *****************
 20708 ;; Defined at:
 20709 ;;		line 313 in file "src/driver/adf4351.c"
 20710 ;; Parameters:    Size  Location     Type
 20711 ;;  ctx             2   24[COMRAM] PTR struct adf4351_ctx
 20712 ;;		 -> g_adf4351(55), 
 20713 ;; Auto vars:     Size  Location     Type
 20714 ;;  data            4   32[COMRAM] unsigned long 
 20715 ;; Return value:  Size  Location     Type
 20716 ;;                  1    wreg      void 
 20717 ;; Registers used:
 20718 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20719 ;; Tracked objects:
 20720 ;;		On entry : 0/0
 20721 ;;		On exit  : 0/0
 20722 ;;		Unchanged: 0/0
 20723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20724 ;;      Params:         2       0       0       0       0       0       0
 20725 ;;      Locals:         4       0       0       0       0       0       0
 20726 ;;      Temps:          6       0       0       0       0       0       0
 20727 ;;      Totals:        12       0       0       0       0       0       0
 20728 ;;Total ram usage:       12 bytes
 20729 ;; Hardware stack levels used:    1
 20730 ;; Hardware stack levels required when called:    3
 20731 ;; This function calls:
 20732 ;;		_adf4351_write_latch
 20733 ;; This function is called by:
 20734 ;;		_adf4351_set_mode
 20735 ;;		_adf4351_setup
 20736 ;; This function uses a non-reentrant model
 20737 ;;
 20738                           
 20739                           	psect	text90
 20740  0014FC                     __ptext90:
 20741                           	opt callstack 0
 20742  0014FC                     _adf4351_write_reg2:
 20743                           	opt callstack 24
 20744  0014FC                     
 20745                           ;src/driver/adf4351.c: 313: static void adf4351_write_reg2(adf4351_ctx* ctx);src/driver/
      +                          adf4351.c: 314: {;src/driver/adf4351.c: 315:     if(ctx->init) {
 20746  0014FC  C019  FFD9         	movff	adf4351_write_reg2@ctx,fsr2l
 20747  001500  C01A  FFDA         	movff	adf4351_write_reg2@ctx+1,fsr2h
 20748  001504  50DE               	movf	postinc2,w,c
 20749  001506  10DE               	iorwf	postinc2,w,c
 20750  001508  B4D8               	btfsc	status,2,c
 20751  00150A  EF89  F00A         	goto	u6011
 20752  00150E  EF8B  F00A         	goto	u6010
 20753  001512                     u6011:
 20754  001512  EF3A  F00C         	goto	l216
 20755  001516                     u6010:
 20756  001516                     
 20757                           ;src/driver/adf4351.c: 316:         u32 data = 2;
 20758  001516  0E02               	movlw	2
 20759  001518  6E21               	movwf	adf4351_write_reg2@data^0,c
 20760  00151A  0E00               	movlw	0
 20761  00151C  6E22               	movwf	(adf4351_write_reg2@data+1)^0,c
 20762  00151E  0E00               	movlw	0
 20763  001520  6E23               	movwf	(adf4351_write_reg2@data+2)^0,c
 20764  001522  0E00               	movlw	0
 20765  001524  6E24               	movwf	(adf4351_write_reg2@data+3)^0,c
 20766  001526                     
 20767                           ;src/driver/adf4351.c: 318:         data |= (((u32)ctx->reg2.cntreset&0x0001)<<3);
 20768  001526  EE20 F018          	lfsr	2,24
 20769  00152A  5019               	movf	adf4351_write_reg2@ctx^0,w,c
 20770  00152C  26D9               	addwf	fsr2l,f,c
 20771  00152E  501A               	movf	(adf4351_write_reg2@ctx+1)^0,w,c
 20772  001530  22DA               	addwfc	fsr2h,f,c
 20773  001532  50DF               	movf	indf2,w,c
 20774  001534  6E1B               	movwf	??_adf4351_write_reg2^0,c
 20775  001536  0E01               	movlw	1
 20776  001538  161B               	andwf	??_adf4351_write_reg2^0,f,c
 20777  00153A  C01B  F01C         	movff	??_adf4351_write_reg2,??_adf4351_write_reg2+1
 20778  00153E  6A1D               	clrf	(??_adf4351_write_reg2+2)^0,c
 20779  001540  6A1E               	clrf	(??_adf4351_write_reg2+3)^0,c
 20780  001542  6A1F               	clrf	(??_adf4351_write_reg2+4)^0,c
 20781  001544  0E03               	movlw	3
 20782  001546                     u6025:
 20783  001546  90D8               	bcf	status,0,c
 20784  001548  361C               	rlcf	(??_adf4351_write_reg2+1)^0,f,c
 20785  00154A  361D               	rlcf	(??_adf4351_write_reg2+2)^0,f,c
 20786  00154C  361E               	rlcf	(??_adf4351_write_reg2+3)^0,f,c
 20787  00154E  361F               	rlcf	(??_adf4351_write_reg2+4)^0,f,c
 20788  001550  2EE8               	decfsz	wreg,f,c
 20789  001552  EFA3  F00A         	goto	u6025
 20790  001556  501C               	movf	(??_adf4351_write_reg2+1)^0,w,c
 20791  001558  1221               	iorwf	adf4351_write_reg2@data^0,f,c
 20792  00155A  501D               	movf	(??_adf4351_write_reg2+2)^0,w,c
 20793  00155C  1222               	iorwf	(adf4351_write_reg2@data+1)^0,f,c
 20794  00155E  501E               	movf	(??_adf4351_write_reg2+3)^0,w,c
 20795  001560  1223               	iorwf	(adf4351_write_reg2@data+2)^0,f,c
 20796  001562  501F               	movf	(??_adf4351_write_reg2+4)^0,w,c
 20797  001564  1224               	iorwf	(adf4351_write_reg2@data+3)^0,f,c
 20798  001566                     
 20799                           ;src/driver/adf4351.c: 319:         data |= (((u32)ctx->reg2.cpts&0x0001)<<4);
 20800  001566  EE20 F017          	lfsr	2,23
 20801  00156A  5019               	movf	adf4351_write_reg2@ctx^0,w,c
 20802  00156C  26D9               	addwf	fsr2l,f,c
 20803  00156E  501A               	movf	(adf4351_write_reg2@ctx+1)^0,w,c
 20804  001570  22DA               	addwfc	fsr2h,f,c
 20805  001572  50DF               	movf	indf2,w,c
 20806  001574  6E1B               	movwf	??_adf4351_write_reg2^0,c
 20807  001576  0E01               	movlw	1
 20808  001578  161B               	andwf	??_adf4351_write_reg2^0,f,c
 20809  00157A  C01B  F01C         	movff	??_adf4351_write_reg2,??_adf4351_write_reg2+1
 20810  00157E  6A1D               	clrf	(??_adf4351_write_reg2+2)^0,c
 20811  001580  6A1E               	clrf	(??_adf4351_write_reg2+3)^0,c
 20812  001582  6A1F               	clrf	(??_adf4351_write_reg2+4)^0,c
 20813  001584  0E04               	movlw	4
 20814  001586                     u6035:
 20815  001586  90D8               	bcf	status,0,c
 20816  001588  361C               	rlcf	(??_adf4351_write_reg2+1)^0,f,c
 20817  00158A  361D               	rlcf	(??_adf4351_write_reg2+2)^0,f,c
 20818  00158C  361E               	rlcf	(??_adf4351_write_reg2+3)^0,f,c
 20819  00158E  361F               	rlcf	(??_adf4351_write_reg2+4)^0,f,c
 20820  001590  2EE8               	decfsz	wreg,f,c
 20821  001592  EFC3  F00A         	goto	u6035
 20822  001596  501C               	movf	(??_adf4351_write_reg2+1)^0,w,c
 20823  001598  1221               	iorwf	adf4351_write_reg2@data^0,f,c
 20824  00159A  501D               	movf	(??_adf4351_write_reg2+2)^0,w,c
 20825  00159C  1222               	iorwf	(adf4351_write_reg2@data+1)^0,f,c
 20826  00159E  501E               	movf	(??_adf4351_write_reg2+3)^0,w,c
 20827  0015A0  1223               	iorwf	(adf4351_write_reg2@data+2)^0,f,c
 20828  0015A2  501F               	movf	(??_adf4351_write_reg2+4)^0,w,c
 20829  0015A4  1224               	iorwf	(adf4351_write_reg2@data+3)^0,f,c
 20830  0015A6                     
 20831                           ;src/driver/adf4351.c: 320:         data |= (((u32)ctx->reg2.pd&0x0001)<<5);
 20832  0015A6  EE20 F016          	lfsr	2,22
 20833  0015AA  5019               	movf	adf4351_write_reg2@ctx^0,w,c
 20834  0015AC  26D9               	addwf	fsr2l,f,c
 20835  0015AE  501A               	movf	(adf4351_write_reg2@ctx+1)^0,w,c
 20836  0015B0  22DA               	addwfc	fsr2h,f,c
 20837  0015B2  50DF               	movf	indf2,w,c
 20838  0015B4  6E1B               	movwf	??_adf4351_write_reg2^0,c
 20839  0015B6  0E01               	movlw	1
 20840  0015B8  161B               	andwf	??_adf4351_write_reg2^0,f,c
 20841  0015BA  C01B  F01C         	movff	??_adf4351_write_reg2,??_adf4351_write_reg2+1
 20842  0015BE  6A1D               	clrf	(??_adf4351_write_reg2+2)^0,c
 20843  0015C0  6A1E               	clrf	(??_adf4351_write_reg2+3)^0,c
 20844  0015C2  6A1F               	clrf	(??_adf4351_write_reg2+4)^0,c
 20845  0015C4  0E05               	movlw	5
 20846  0015C6                     u6045:
 20847  0015C6  90D8               	bcf	status,0,c
 20848  0015C8  361C               	rlcf	(??_adf4351_write_reg2+1)^0,f,c
 20849  0015CA  361D               	rlcf	(??_adf4351_write_reg2+2)^0,f,c
 20850  0015CC  361E               	rlcf	(??_adf4351_write_reg2+3)^0,f,c
 20851  0015CE  361F               	rlcf	(??_adf4351_write_reg2+4)^0,f,c
 20852  0015D0  2EE8               	decfsz	wreg,f,c
 20853  0015D2  EFE3  F00A         	goto	u6045
 20854  0015D6  501C               	movf	(??_adf4351_write_reg2+1)^0,w,c
 20855  0015D8  1221               	iorwf	adf4351_write_reg2@data^0,f,c
 20856  0015DA  501D               	movf	(??_adf4351_write_reg2+2)^0,w,c
 20857  0015DC  1222               	iorwf	(adf4351_write_reg2@data+1)^0,f,c
 20858  0015DE  501E               	movf	(??_adf4351_write_reg2+3)^0,w,c
 20859  0015E0  1223               	iorwf	(adf4351_write_reg2@data+2)^0,f,c
 20860  0015E2  501F               	movf	(??_adf4351_write_reg2+4)^0,w,c
 20861  0015E4  1224               	iorwf	(adf4351_write_reg2@data+3)^0,f,c
 20862  0015E6                     
 20863                           ;src/driver/adf4351.c: 321:         data |= (((u32)ctx->reg2.pdpol&0x0001)<<6);
 20864  0015E6  EE20 F015          	lfsr	2,21
 20865  0015EA  5019               	movf	adf4351_write_reg2@ctx^0,w,c
 20866  0015EC  26D9               	addwf	fsr2l,f,c
 20867  0015EE  501A               	movf	(adf4351_write_reg2@ctx+1)^0,w,c
 20868  0015F0  22DA               	addwfc	fsr2h,f,c
 20869  0015F2  50DF               	movf	indf2,w,c
 20870  0015F4  6E1B               	movwf	??_adf4351_write_reg2^0,c
 20871  0015F6  0E01               	movlw	1
 20872  0015F8  161B               	andwf	??_adf4351_write_reg2^0,f,c
 20873  0015FA  C01B  F01C         	movff	??_adf4351_write_reg2,??_adf4351_write_reg2+1
 20874  0015FE  6A1D               	clrf	(??_adf4351_write_reg2+2)^0,c
 20875  001600  6A1E               	clrf	(??_adf4351_write_reg2+3)^0,c
 20876  001602  6A1F               	clrf	(??_adf4351_write_reg2+4)^0,c
 20877  001604  0E06               	movlw	6
 20878  001606                     u6055:
 20879  001606  90D8               	bcf	status,0,c
 20880  001608  361C               	rlcf	(??_adf4351_write_reg2+1)^0,f,c
 20881  00160A  361D               	rlcf	(??_adf4351_write_reg2+2)^0,f,c
 20882  00160C  361E               	rlcf	(??_adf4351_write_reg2+3)^0,f,c
 20883  00160E  361F               	rlcf	(??_adf4351_write_reg2+4)^0,f,c
 20884  001610  2EE8               	decfsz	wreg,f,c
 20885  001612  EF03  F00B         	goto	u6055
 20886  001616  501C               	movf	(??_adf4351_write_reg2+1)^0,w,c
 20887  001618  1221               	iorwf	adf4351_write_reg2@data^0,f,c
 20888  00161A  501D               	movf	(??_adf4351_write_reg2+2)^0,w,c
 20889  00161C  1222               	iorwf	(adf4351_write_reg2@data+1)^0,f,c
 20890  00161E  501E               	movf	(??_adf4351_write_reg2+3)^0,w,c
 20891  001620  1223               	iorwf	(adf4351_write_reg2@data+2)^0,f,c
 20892  001622  501F               	movf	(??_adf4351_write_reg2+4)^0,w,c
 20893  001624  1224               	iorwf	(adf4351_write_reg2@data+3)^0,f,c
 20894  001626                     
 20895                           ;src/driver/adf4351.c: 322:         data |= (((u32)ctx->reg2.ldp&0x0001)<<7);
 20896  001626  EE20 F014          	lfsr	2,20
 20897  00162A  5019               	movf	adf4351_write_reg2@ctx^0,w,c
 20898  00162C  26D9               	addwf	fsr2l,f,c
 20899  00162E  501A               	movf	(adf4351_write_reg2@ctx+1)^0,w,c
 20900  001630  22DA               	addwfc	fsr2h,f,c
 20901  001632  50DF               	movf	indf2,w,c
 20902  001634  6E1B               	movwf	??_adf4351_write_reg2^0,c
 20903  001636  0E01               	movlw	1
 20904  001638  161B               	andwf	??_adf4351_write_reg2^0,f,c
 20905  00163A  C01B  F01C         	movff	??_adf4351_write_reg2,??_adf4351_write_reg2+1
 20906  00163E  6A1D               	clrf	(??_adf4351_write_reg2+2)^0,c
 20907  001640  6A1E               	clrf	(??_adf4351_write_reg2+3)^0,c
 20908  001642  6A1F               	clrf	(??_adf4351_write_reg2+4)^0,c
 20909  001644  0E07               	movlw	7
 20910  001646                     u6065:
 20911  001646  90D8               	bcf	status,0,c
 20912  001648  361C               	rlcf	(??_adf4351_write_reg2+1)^0,f,c
 20913  00164A  361D               	rlcf	(??_adf4351_write_reg2+2)^0,f,c
 20914  00164C  361E               	rlcf	(??_adf4351_write_reg2+3)^0,f,c
 20915  00164E  361F               	rlcf	(??_adf4351_write_reg2+4)^0,f,c
 20916  001650  2EE8               	decfsz	wreg,f,c
 20917  001652  EF23  F00B         	goto	u6065
 20918  001656  501C               	movf	(??_adf4351_write_reg2+1)^0,w,c
 20919  001658  1221               	iorwf	adf4351_write_reg2@data^0,f,c
 20920  00165A  501D               	movf	(??_adf4351_write_reg2+2)^0,w,c
 20921  00165C  1222               	iorwf	(adf4351_write_reg2@data+1)^0,f,c
 20922  00165E  501E               	movf	(??_adf4351_write_reg2+3)^0,w,c
 20923  001660  1223               	iorwf	(adf4351_write_reg2@data+2)^0,f,c
 20924  001662  501F               	movf	(??_adf4351_write_reg2+4)^0,w,c
 20925  001664  1224               	iorwf	(adf4351_write_reg2@data+3)^0,f,c
 20926  001666                     
 20927                           ;src/driver/adf4351.c: 323:         data |= (((u32)ctx->reg2.ldf&0x0001)<<8);
 20928  001666  EE20 F013          	lfsr	2,19
 20929  00166A  5019               	movf	adf4351_write_reg2@ctx^0,w,c
 20930  00166C  26D9               	addwf	fsr2l,f,c
 20931  00166E  501A               	movf	(adf4351_write_reg2@ctx+1)^0,w,c
 20932  001670  22DA               	addwfc	fsr2h,f,c
 20933  001672  50DF               	movf	indf2,w,c
 20934  001674  6E1B               	movwf	??_adf4351_write_reg2^0,c
 20935  001676  0E01               	movlw	1
 20936  001678  161B               	andwf	??_adf4351_write_reg2^0,f,c
 20937  00167A  C01B  F01C         	movff	??_adf4351_write_reg2,??_adf4351_write_reg2+1
 20938  00167E  6A1D               	clrf	(??_adf4351_write_reg2+2)^0,c
 20939  001680  6A1E               	clrf	(??_adf4351_write_reg2+3)^0,c
 20940  001682  6A1F               	clrf	(??_adf4351_write_reg2+4)^0,c
 20941  001684  C01E  F01F         	movff	??_adf4351_write_reg2+3,??_adf4351_write_reg2+4
 20942  001688  C01D  F01E         	movff	??_adf4351_write_reg2+2,??_adf4351_write_reg2+3
 20943  00168C  C01C  F01D         	movff	??_adf4351_write_reg2+1,??_adf4351_write_reg2+2
 20944  001690  6A1C               	clrf	(??_adf4351_write_reg2+1)^0,c
 20945  001692  501C               	movf	(??_adf4351_write_reg2+1)^0,w,c
 20946  001694  1221               	iorwf	adf4351_write_reg2@data^0,f,c
 20947  001696  501D               	movf	(??_adf4351_write_reg2+2)^0,w,c
 20948  001698  1222               	iorwf	(adf4351_write_reg2@data+1)^0,f,c
 20949  00169A  501E               	movf	(??_adf4351_write_reg2+3)^0,w,c
 20950  00169C  1223               	iorwf	(adf4351_write_reg2@data+2)^0,f,c
 20951  00169E  501F               	movf	(??_adf4351_write_reg2+4)^0,w,c
 20952  0016A0  1224               	iorwf	(adf4351_write_reg2@data+3)^0,f,c
 20953  0016A2                     
 20954                           ;src/driver/adf4351.c: 324:         data |= (((u32)ctx->reg2.cpc&0x000F)<<9);
 20955  0016A2  EE20 F012          	lfsr	2,18
 20956  0016A6  5019               	movf	adf4351_write_reg2@ctx^0,w,c
 20957  0016A8  26D9               	addwf	fsr2l,f,c
 20958  0016AA  501A               	movf	(adf4351_write_reg2@ctx+1)^0,w,c
 20959  0016AC  22DA               	addwfc	fsr2h,f,c
 20960  0016AE  50DF               	movf	indf2,w,c
 20961  0016B0  6E1B               	movwf	??_adf4351_write_reg2^0,c
 20962  0016B2  0E0F               	movlw	15
 20963  0016B4  161B               	andwf	??_adf4351_write_reg2^0,f,c
 20964  0016B6  C01B  F01C         	movff	??_adf4351_write_reg2,??_adf4351_write_reg2+1
 20965  0016BA  6A1D               	clrf	(??_adf4351_write_reg2+2)^0,c
 20966  0016BC  6A1E               	clrf	(??_adf4351_write_reg2+3)^0,c
 20967  0016BE  6A1F               	clrf	(??_adf4351_write_reg2+4)^0,c
 20968  0016C0  0E09               	movlw	9
 20969  0016C2                     u6075:
 20970  0016C2  90D8               	bcf	status,0,c
 20971  0016C4  361C               	rlcf	(??_adf4351_write_reg2+1)^0,f,c
 20972  0016C6  361D               	rlcf	(??_adf4351_write_reg2+2)^0,f,c
 20973  0016C8  361E               	rlcf	(??_adf4351_write_reg2+3)^0,f,c
 20974  0016CA  361F               	rlcf	(??_adf4351_write_reg2+4)^0,f,c
 20975  0016CC  2EE8               	decfsz	wreg,f,c
 20976  0016CE  EF61  F00B         	goto	u6075
 20977  0016D2  501C               	movf	(??_adf4351_write_reg2+1)^0,w,c
 20978  0016D4  1221               	iorwf	adf4351_write_reg2@data^0,f,c
 20979  0016D6  501D               	movf	(??_adf4351_write_reg2+2)^0,w,c
 20980  0016D8  1222               	iorwf	(adf4351_write_reg2@data+1)^0,f,c
 20981  0016DA  501E               	movf	(??_adf4351_write_reg2+3)^0,w,c
 20982  0016DC  1223               	iorwf	(adf4351_write_reg2@data+2)^0,f,c
 20983  0016DE  501F               	movf	(??_adf4351_write_reg2+4)^0,w,c
 20984  0016E0  1224               	iorwf	(adf4351_write_reg2@data+3)^0,f,c
 20985  0016E2                     
 20986                           ;src/driver/adf4351.c: 325:         data |= (((u32)ctx->reg2.dblbuff&0x0001)<<13);
 20987  0016E2  EE20 F011          	lfsr	2,17
 20988  0016E6  5019               	movf	adf4351_write_reg2@ctx^0,w,c
 20989  0016E8  26D9               	addwf	fsr2l,f,c
 20990  0016EA  501A               	movf	(adf4351_write_reg2@ctx+1)^0,w,c
 20991  0016EC  22DA               	addwfc	fsr2h,f,c
 20992  0016EE  50DF               	movf	indf2,w,c
 20993  0016F0  6E1B               	movwf	??_adf4351_write_reg2^0,c
 20994  0016F2  0E01               	movlw	1
 20995  0016F4  161B               	andwf	??_adf4351_write_reg2^0,f,c
 20996  0016F6  C01B  F01C         	movff	??_adf4351_write_reg2,??_adf4351_write_reg2+1
 20997  0016FA  6A1D               	clrf	(??_adf4351_write_reg2+2)^0,c
 20998  0016FC  6A1E               	clrf	(??_adf4351_write_reg2+3)^0,c
 20999  0016FE  6A1F               	clrf	(??_adf4351_write_reg2+4)^0,c
 21000  001700  0E0D               	movlw	13
 21001  001702                     u6085:
 21002  001702  90D8               	bcf	status,0,c
 21003  001704  361C               	rlcf	(??_adf4351_write_reg2+1)^0,f,c
 21004  001706  361D               	rlcf	(??_adf4351_write_reg2+2)^0,f,c
 21005  001708  361E               	rlcf	(??_adf4351_write_reg2+3)^0,f,c
 21006  00170A  361F               	rlcf	(??_adf4351_write_reg2+4)^0,f,c
 21007  00170C  2EE8               	decfsz	wreg,f,c
 21008  00170E  EF81  F00B         	goto	u6085
 21009  001712  501C               	movf	(??_adf4351_write_reg2+1)^0,w,c
 21010  001714  1221               	iorwf	adf4351_write_reg2@data^0,f,c
 21011  001716  501D               	movf	(??_adf4351_write_reg2+2)^0,w,c
 21012  001718  1222               	iorwf	(adf4351_write_reg2@data+1)^0,f,c
 21013  00171A  501E               	movf	(??_adf4351_write_reg2+3)^0,w,c
 21014  00171C  1223               	iorwf	(adf4351_write_reg2@data+2)^0,f,c
 21015  00171E  501F               	movf	(??_adf4351_write_reg2+4)^0,w,c
 21016  001720  1224               	iorwf	(adf4351_write_reg2@data+3)^0,f,c
 21017  001722                     
 21018                           ;src/driver/adf4351.c: 326:         data |= (((u32)ctx->reg2.rcnt&0x03FF)<<14);
 21019  001722  EE20 F00F          	lfsr	2,15
 21020  001726  5019               	movf	adf4351_write_reg2@ctx^0,w,c
 21021  001728  26D9               	addwf	fsr2l,f,c
 21022  00172A  501A               	movf	(adf4351_write_reg2@ctx+1)^0,w,c
 21023  00172C  22DA               	addwfc	fsr2h,f,c
 21024  00172E  CFDE F01B          	movff	postinc2,??_adf4351_write_reg2
 21025  001732  CFDD F01C          	movff	postdec2,??_adf4351_write_reg2+1
 21026  001736  0EFF               	movlw	255
 21027  001738  141B               	andwf	??_adf4351_write_reg2^0,w,c
 21028  00173A  6E1D               	movwf	(??_adf4351_write_reg2+2)^0,c
 21029  00173C  0E03               	movlw	3
 21030  00173E  141C               	andwf	(??_adf4351_write_reg2+1)^0,w,c
 21031  001740  6E1E               	movwf	(??_adf4351_write_reg2+3)^0,c
 21032  001742  6A1F               	clrf	(??_adf4351_write_reg2+4)^0,c
 21033  001744  6A20               	clrf	(??_adf4351_write_reg2+5)^0,c
 21034  001746  0E0E               	movlw	14
 21035  001748                     u6095:
 21036  001748  90D8               	bcf	status,0,c
 21037  00174A  361D               	rlcf	(??_adf4351_write_reg2+2)^0,f,c
 21038  00174C  361E               	rlcf	(??_adf4351_write_reg2+3)^0,f,c
 21039  00174E  361F               	rlcf	(??_adf4351_write_reg2+4)^0,f,c
 21040  001750  3620               	rlcf	(??_adf4351_write_reg2+5)^0,f,c
 21041  001752  2EE8               	decfsz	wreg,f,c
 21042  001754  EFA4  F00B         	goto	u6095
 21043  001758  501D               	movf	(??_adf4351_write_reg2+2)^0,w,c
 21044  00175A  1221               	iorwf	adf4351_write_reg2@data^0,f,c
 21045  00175C  501E               	movf	(??_adf4351_write_reg2+3)^0,w,c
 21046  00175E  1222               	iorwf	(adf4351_write_reg2@data+1)^0,f,c
 21047  001760  501F               	movf	(??_adf4351_write_reg2+4)^0,w,c
 21048  001762  1223               	iorwf	(adf4351_write_reg2@data+2)^0,f,c
 21049  001764  5020               	movf	(??_adf4351_write_reg2+5)^0,w,c
 21050  001766  1224               	iorwf	(adf4351_write_reg2@data+3)^0,f,c
 21051  001768                     
 21052                           ;src/driver/adf4351.c: 327:         data |= (((u32)ctx->reg2.refdiv&0x0001)<<24);
 21053  001768  EE20 F00E          	lfsr	2,14
 21054  00176C  5019               	movf	adf4351_write_reg2@ctx^0,w,c
 21055  00176E  26D9               	addwf	fsr2l,f,c
 21056  001770  501A               	movf	(adf4351_write_reg2@ctx+1)^0,w,c
 21057  001772  22DA               	addwfc	fsr2h,f,c
 21058  001774  50DF               	movf	indf2,w,c
 21059  001776  6E1B               	movwf	??_adf4351_write_reg2^0,c
 21060  001778  0E01               	movlw	1
 21061  00177A  161B               	andwf	??_adf4351_write_reg2^0,f,c
 21062  00177C  C01B  F01C         	movff	??_adf4351_write_reg2,??_adf4351_write_reg2+1
 21063  001780  6A1D               	clrf	(??_adf4351_write_reg2+2)^0,c
 21064  001782  6A1E               	clrf	(??_adf4351_write_reg2+3)^0,c
 21065  001784  6A1F               	clrf	(??_adf4351_write_reg2+4)^0,c
 21066  001786  C01C  F01F         	movff	??_adf4351_write_reg2+1,??_adf4351_write_reg2+4
 21067  00178A  6A1E               	clrf	(??_adf4351_write_reg2+3)^0,c
 21068  00178C  6A1D               	clrf	(??_adf4351_write_reg2+2)^0,c
 21069  00178E  6A1C               	clrf	(??_adf4351_write_reg2+1)^0,c
 21070  001790  501C               	movf	(??_adf4351_write_reg2+1)^0,w,c
 21071  001792  1221               	iorwf	adf4351_write_reg2@data^0,f,c
 21072  001794  501D               	movf	(??_adf4351_write_reg2+2)^0,w,c
 21073  001796  1222               	iorwf	(adf4351_write_reg2@data+1)^0,f,c
 21074  001798  501E               	movf	(??_adf4351_write_reg2+3)^0,w,c
 21075  00179A  1223               	iorwf	(adf4351_write_reg2@data+2)^0,f,c
 21076  00179C  501F               	movf	(??_adf4351_write_reg2+4)^0,w,c
 21077  00179E  1224               	iorwf	(adf4351_write_reg2@data+3)^0,f,c
 21078  0017A0                     
 21079                           ;src/driver/adf4351.c: 328:         data |= (((u32)ctx->reg2.refdbl&0x0001)<<25);
 21080  0017A0  EE20 F00D          	lfsr	2,13
 21081  0017A4  5019               	movf	adf4351_write_reg2@ctx^0,w,c
 21082  0017A6  26D9               	addwf	fsr2l,f,c
 21083  0017A8  501A               	movf	(adf4351_write_reg2@ctx+1)^0,w,c
 21084  0017AA  22DA               	addwfc	fsr2h,f,c
 21085  0017AC  50DF               	movf	indf2,w,c
 21086  0017AE  6E1B               	movwf	??_adf4351_write_reg2^0,c
 21087  0017B0  0E01               	movlw	1
 21088  0017B2  161B               	andwf	??_adf4351_write_reg2^0,f,c
 21089  0017B4  C01B  F01C         	movff	??_adf4351_write_reg2,??_adf4351_write_reg2+1
 21090  0017B8  6A1D               	clrf	(??_adf4351_write_reg2+2)^0,c
 21091  0017BA  6A1E               	clrf	(??_adf4351_write_reg2+3)^0,c
 21092  0017BC  6A1F               	clrf	(??_adf4351_write_reg2+4)^0,c
 21093  0017BE  0E19               	movlw	25
 21094  0017C0                     u6105:
 21095  0017C0  90D8               	bcf	status,0,c
 21096  0017C2  361C               	rlcf	(??_adf4351_write_reg2+1)^0,f,c
 21097  0017C4  361D               	rlcf	(??_adf4351_write_reg2+2)^0,f,c
 21098  0017C6  361E               	rlcf	(??_adf4351_write_reg2+3)^0,f,c
 21099  0017C8  361F               	rlcf	(??_adf4351_write_reg2+4)^0,f,c
 21100  0017CA  2EE8               	decfsz	wreg,f,c
 21101  0017CC  EFE0  F00B         	goto	u6105
 21102  0017D0  501C               	movf	(??_adf4351_write_reg2+1)^0,w,c
 21103  0017D2  1221               	iorwf	adf4351_write_reg2@data^0,f,c
 21104  0017D4  501D               	movf	(??_adf4351_write_reg2+2)^0,w,c
 21105  0017D6  1222               	iorwf	(adf4351_write_reg2@data+1)^0,f,c
 21106  0017D8  501E               	movf	(??_adf4351_write_reg2+3)^0,w,c
 21107  0017DA  1223               	iorwf	(adf4351_write_reg2@data+2)^0,f,c
 21108  0017DC  501F               	movf	(??_adf4351_write_reg2+4)^0,w,c
 21109  0017DE  1224               	iorwf	(adf4351_write_reg2@data+3)^0,f,c
 21110  0017E0                     
 21111                           ;src/driver/adf4351.c: 329:         data |= (((u32)ctx->reg2.muxout&0x0007)<<26);
 21112  0017E0  EE20 F00C          	lfsr	2,12
 21113  0017E4  5019               	movf	adf4351_write_reg2@ctx^0,w,c
 21114  0017E6  26D9               	addwf	fsr2l,f,c
 21115  0017E8  501A               	movf	(adf4351_write_reg2@ctx+1)^0,w,c
 21116  0017EA  22DA               	addwfc	fsr2h,f,c
 21117  0017EC  50DF               	movf	indf2,w,c
 21118  0017EE  6E1B               	movwf	??_adf4351_write_reg2^0,c
 21119  0017F0  0E07               	movlw	7
 21120  0017F2  161B               	andwf	??_adf4351_write_reg2^0,f,c
 21121  0017F4  C01B  F01C         	movff	??_adf4351_write_reg2,??_adf4351_write_reg2+1
 21122  0017F8  6A1D               	clrf	(??_adf4351_write_reg2+2)^0,c
 21123  0017FA  6A1E               	clrf	(??_adf4351_write_reg2+3)^0,c
 21124  0017FC  6A1F               	clrf	(??_adf4351_write_reg2+4)^0,c
 21125  0017FE  0E1A               	movlw	26
 21126  001800                     u6115:
 21127  001800  90D8               	bcf	status,0,c
 21128  001802  361C               	rlcf	(??_adf4351_write_reg2+1)^0,f,c
 21129  001804  361D               	rlcf	(??_adf4351_write_reg2+2)^0,f,c
 21130  001806  361E               	rlcf	(??_adf4351_write_reg2+3)^0,f,c
 21131  001808  361F               	rlcf	(??_adf4351_write_reg2+4)^0,f,c
 21132  00180A  2EE8               	decfsz	wreg,f,c
 21133  00180C  EF00  F00C         	goto	u6115
 21134  001810  501C               	movf	(??_adf4351_write_reg2+1)^0,w,c
 21135  001812  1221               	iorwf	adf4351_write_reg2@data^0,f,c
 21136  001814  501D               	movf	(??_adf4351_write_reg2+2)^0,w,c
 21137  001816  1222               	iorwf	(adf4351_write_reg2@data+1)^0,f,c
 21138  001818  501E               	movf	(??_adf4351_write_reg2+3)^0,w,c
 21139  00181A  1223               	iorwf	(adf4351_write_reg2@data+2)^0,f,c
 21140  00181C  501F               	movf	(??_adf4351_write_reg2+4)^0,w,c
 21141  00181E  1224               	iorwf	(adf4351_write_reg2@data+3)^0,f,c
 21142  001820                     
 21143                           ;src/driver/adf4351.c: 330:         data |= (((u32)ctx->reg2.lownoise&0x0003)<<29);
 21144  001820  EE20 F00B          	lfsr	2,11
 21145  001824  5019               	movf	adf4351_write_reg2@ctx^0,w,c
 21146  001826  26D9               	addwf	fsr2l,f,c
 21147  001828  501A               	movf	(adf4351_write_reg2@ctx+1)^0,w,c
 21148  00182A  22DA               	addwfc	fsr2h,f,c
 21149  00182C  50DF               	movf	indf2,w,c
 21150  00182E  6E1B               	movwf	??_adf4351_write_reg2^0,c
 21151  001830  0E03               	movlw	3
 21152  001832  161B               	andwf	??_adf4351_write_reg2^0,f,c
 21153  001834  C01B  F01C         	movff	??_adf4351_write_reg2,??_adf4351_write_reg2+1
 21154  001838  6A1D               	clrf	(??_adf4351_write_reg2+2)^0,c
 21155  00183A  6A1E               	clrf	(??_adf4351_write_reg2+3)^0,c
 21156  00183C  6A1F               	clrf	(??_adf4351_write_reg2+4)^0,c
 21157  00183E  0E1D               	movlw	29
 21158  001840                     u6125:
 21159  001840  90D8               	bcf	status,0,c
 21160  001842  361C               	rlcf	(??_adf4351_write_reg2+1)^0,f,c
 21161  001844  361D               	rlcf	(??_adf4351_write_reg2+2)^0,f,c
 21162  001846  361E               	rlcf	(??_adf4351_write_reg2+3)^0,f,c
 21163  001848  361F               	rlcf	(??_adf4351_write_reg2+4)^0,f,c
 21164  00184A  2EE8               	decfsz	wreg,f,c
 21165  00184C  EF20  F00C         	goto	u6125
 21166  001850  501C               	movf	(??_adf4351_write_reg2+1)^0,w,c
 21167  001852  1221               	iorwf	adf4351_write_reg2@data^0,f,c
 21168  001854  501D               	movf	(??_adf4351_write_reg2+2)^0,w,c
 21169  001856  1222               	iorwf	(adf4351_write_reg2@data+1)^0,f,c
 21170  001858  501E               	movf	(??_adf4351_write_reg2+3)^0,w,c
 21171  00185A  1223               	iorwf	(adf4351_write_reg2@data+2)^0,f,c
 21172  00185C  501F               	movf	(??_adf4351_write_reg2+4)^0,w,c
 21173  00185E  1224               	iorwf	(adf4351_write_reg2@data+3)^0,f,c
 21174  001860                     
 21175                           ;src/driver/adf4351.c: 332:         adf4351_write_latch(data);
 21176  001860  C021  F00D         	movff	adf4351_write_reg2@data,adf4351_write_latch@value
 21177  001864  C022  F00E         	movff	adf4351_write_reg2@data+1,adf4351_write_latch@value+1
 21178  001868  C023  F00F         	movff	adf4351_write_reg2@data+2,adf4351_write_latch@value+2
 21179  00186C  C024  F010         	movff	adf4351_write_reg2@data+3,adf4351_write_latch@value+3
 21180  001870  EC58  F017         	call	_adf4351_write_latch	;wreg free
 21181  001874                     l216:
 21182  001874  0012               	return		;funcret
 21183  001876                     __end_of_adf4351_write_reg2:
 21184                           	opt callstack 0
 21185                           
 21186 ;; *************** function _adf4351_write_reg1 *****************
 21187 ;; Defined at:
 21188 ;;		line 300 in file "src/driver/adf4351.c"
 21189 ;; Parameters:    Size  Location     Type
 21190 ;;  ctx             2   24[COMRAM] PTR struct adf4351_ctx
 21191 ;;		 -> g_adf4351(55), 
 21192 ;; Auto vars:     Size  Location     Type
 21193 ;;  data            4   32[COMRAM] unsigned long 
 21194 ;; Return value:  Size  Location     Type
 21195 ;;                  1    wreg      void 
 21196 ;; Registers used:
 21197 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21198 ;; Tracked objects:
 21199 ;;		On entry : 0/0
 21200 ;;		On exit  : 0/0
 21201 ;;		Unchanged: 0/0
 21202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21203 ;;      Params:         2       0       0       0       0       0       0
 21204 ;;      Locals:         4       0       0       0       0       0       0
 21205 ;;      Temps:          6       0       0       0       0       0       0
 21206 ;;      Totals:        12       0       0       0       0       0       0
 21207 ;;Total ram usage:       12 bytes
 21208 ;; Hardware stack levels used:    1
 21209 ;; Hardware stack levels required when called:    3
 21210 ;; This function calls:
 21211 ;;		_adf4351_write_latch
 21212 ;; This function is called by:
 21213 ;;		_adf4351_setup
 21214 ;; This function uses a non-reentrant model
 21215 ;;
 21216                           
 21217                           	psect	text91
 21218  0043FC                     __ptext91:
 21219                           	opt callstack 0
 21220  0043FC                     _adf4351_write_reg1:
 21221                           	opt callstack 24
 21222  0043FC                     
 21223                           ;src/driver/adf4351.c: 300: static void adf4351_write_reg1(adf4351_ctx* ctx);src/driver/
      +                          adf4351.c: 301: {;src/driver/adf4351.c: 302:     if(ctx->init) {
 21224  0043FC  C019  FFD9         	movff	adf4351_write_reg1@ctx,fsr2l
 21225  004400  C01A  FFDA         	movff	adf4351_write_reg1@ctx+1,fsr2h
 21226  004404  50DE               	movf	postinc2,w,c
 21227  004406  10DE               	iorwf	postinc2,w,c
 21228  004408  B4D8               	btfsc	status,2,c
 21229  00440A  EF09  F022         	goto	u6221
 21230  00440E  EF0B  F022         	goto	u6220
 21231  004412                     u6221:
 21232  004412  EF83  F022         	goto	l212
 21233  004416                     u6220:
 21234  004416                     
 21235                           ;src/driver/adf4351.c: 303:         u32 data = 1;
 21236  004416  0E01               	movlw	1
 21237  004418  6E21               	movwf	adf4351_write_reg1@data^0,c
 21238  00441A  0E00               	movlw	0
 21239  00441C  6E22               	movwf	(adf4351_write_reg1@data+1)^0,c
 21240  00441E  0E00               	movlw	0
 21241  004420  6E23               	movwf	(adf4351_write_reg1@data+2)^0,c
 21242  004422  0E00               	movlw	0
 21243  004424  6E24               	movwf	(adf4351_write_reg1@data+3)^0,c
 21244  004426                     
 21245                           ;src/driver/adf4351.c: 305:         data |= (((u32)ctx->reg1.mod&0x0FFF)<<3);
 21246  004426  EE20 F009          	lfsr	2,9
 21247  00442A  5019               	movf	adf4351_write_reg1@ctx^0,w,c
 21248  00442C  26D9               	addwf	fsr2l,f,c
 21249  00442E  501A               	movf	(adf4351_write_reg1@ctx+1)^0,w,c
 21250  004430  22DA               	addwfc	fsr2h,f,c
 21251  004432  CFDE F01B          	movff	postinc2,??_adf4351_write_reg1
 21252  004436  CFDD F01C          	movff	postdec2,??_adf4351_write_reg1+1
 21253  00443A  0EFF               	movlw	255
 21254  00443C  141B               	andwf	??_adf4351_write_reg1^0,w,c
 21255  00443E  6E1D               	movwf	(??_adf4351_write_reg1+2)^0,c
 21256  004440  0E0F               	movlw	15
 21257  004442  141C               	andwf	(??_adf4351_write_reg1+1)^0,w,c
 21258  004444  6E1E               	movwf	(??_adf4351_write_reg1+3)^0,c
 21259  004446  6A1F               	clrf	(??_adf4351_write_reg1+4)^0,c
 21260  004448  6A20               	clrf	(??_adf4351_write_reg1+5)^0,c
 21261  00444A  0E03               	movlw	3
 21262  00444C                     u6235:
 21263  00444C  90D8               	bcf	status,0,c
 21264  00444E  361D               	rlcf	(??_adf4351_write_reg1+2)^0,f,c
 21265  004450  361E               	rlcf	(??_adf4351_write_reg1+3)^0,f,c
 21266  004452  361F               	rlcf	(??_adf4351_write_reg1+4)^0,f,c
 21267  004454  3620               	rlcf	(??_adf4351_write_reg1+5)^0,f,c
 21268  004456  2EE8               	decfsz	wreg,f,c
 21269  004458  EF26  F022         	goto	u6235
 21270  00445C  501D               	movf	(??_adf4351_write_reg1+2)^0,w,c
 21271  00445E  1221               	iorwf	adf4351_write_reg1@data^0,f,c
 21272  004460  501E               	movf	(??_adf4351_write_reg1+3)^0,w,c
 21273  004462  1222               	iorwf	(adf4351_write_reg1@data+1)^0,f,c
 21274  004464  501F               	movf	(??_adf4351_write_reg1+4)^0,w,c
 21275  004466  1223               	iorwf	(adf4351_write_reg1@data+2)^0,f,c
 21276  004468  5020               	movf	(??_adf4351_write_reg1+5)^0,w,c
 21277  00446A  1224               	iorwf	(adf4351_write_reg1@data+3)^0,f,c
 21278  00446C                     
 21279                           ;src/driver/adf4351.c: 306:         data |= (((u32)ctx->reg1.phase&0x0FFF)<<15);
 21280  00446C  EE20 F007          	lfsr	2,7
 21281  004470  5019               	movf	adf4351_write_reg1@ctx^0,w,c
 21282  004472  26D9               	addwf	fsr2l,f,c
 21283  004474  501A               	movf	(adf4351_write_reg1@ctx+1)^0,w,c
 21284  004476  22DA               	addwfc	fsr2h,f,c
 21285  004478  CFDE F01B          	movff	postinc2,??_adf4351_write_reg1
 21286  00447C  CFDD F01C          	movff	postdec2,??_adf4351_write_reg1+1
 21287  004480  0EFF               	movlw	255
 21288  004482  141B               	andwf	??_adf4351_write_reg1^0,w,c
 21289  004484  6E1D               	movwf	(??_adf4351_write_reg1+2)^0,c
 21290  004486  0E0F               	movlw	15
 21291  004488  141C               	andwf	(??_adf4351_write_reg1+1)^0,w,c
 21292  00448A  6E1E               	movwf	(??_adf4351_write_reg1+3)^0,c
 21293  00448C  6A1F               	clrf	(??_adf4351_write_reg1+4)^0,c
 21294  00448E  6A20               	clrf	(??_adf4351_write_reg1+5)^0,c
 21295  004490  0E0F               	movlw	15
 21296  004492                     u6245:
 21297  004492  90D8               	bcf	status,0,c
 21298  004494  361D               	rlcf	(??_adf4351_write_reg1+2)^0,f,c
 21299  004496  361E               	rlcf	(??_adf4351_write_reg1+3)^0,f,c
 21300  004498  361F               	rlcf	(??_adf4351_write_reg1+4)^0,f,c
 21301  00449A  3620               	rlcf	(??_adf4351_write_reg1+5)^0,f,c
 21302  00449C  2EE8               	decfsz	wreg,f,c
 21303  00449E  EF49  F022         	goto	u6245
 21304  0044A2  501D               	movf	(??_adf4351_write_reg1+2)^0,w,c
 21305  0044A4  1221               	iorwf	adf4351_write_reg1@data^0,f,c
 21306  0044A6  501E               	movf	(??_adf4351_write_reg1+3)^0,w,c
 21307  0044A8  1222               	iorwf	(adf4351_write_reg1@data+1)^0,f,c
 21308  0044AA  501F               	movf	(??_adf4351_write_reg1+4)^0,w,c
 21309  0044AC  1223               	iorwf	(adf4351_write_reg1@data+2)^0,f,c
 21310  0044AE  5020               	movf	(??_adf4351_write_reg1+5)^0,w,c
 21311  0044B0  1224               	iorwf	(adf4351_write_reg1@data+3)^0,f,c
 21312  0044B2                     
 21313                           ;src/driver/adf4351.c: 307:         data |= (((u32)ctx->reg1.prescaler&0x0001)<<27);
 21314  0044B2  EE20 F006          	lfsr	2,6
 21315  0044B6  5019               	movf	adf4351_write_reg1@ctx^0,w,c
 21316  0044B8  26D9               	addwf	fsr2l,f,c
 21317  0044BA  501A               	movf	(adf4351_write_reg1@ctx+1)^0,w,c
 21318  0044BC  22DA               	addwfc	fsr2h,f,c
 21319  0044BE  50DF               	movf	indf2,w,c
 21320  0044C0  6E1B               	movwf	??_adf4351_write_reg1^0,c
 21321  0044C2  0E01               	movlw	1
 21322  0044C4  161B               	andwf	??_adf4351_write_reg1^0,f,c
 21323  0044C6  C01B  F01C         	movff	??_adf4351_write_reg1,??_adf4351_write_reg1+1
 21324  0044CA  6A1D               	clrf	(??_adf4351_write_reg1+2)^0,c
 21325  0044CC  6A1E               	clrf	(??_adf4351_write_reg1+3)^0,c
 21326  0044CE  6A1F               	clrf	(??_adf4351_write_reg1+4)^0,c
 21327  0044D0  0E1B               	movlw	27
 21328  0044D2                     u6255:
 21329  0044D2  90D8               	bcf	status,0,c
 21330  0044D4  361C               	rlcf	(??_adf4351_write_reg1+1)^0,f,c
 21331  0044D6  361D               	rlcf	(??_adf4351_write_reg1+2)^0,f,c
 21332  0044D8  361E               	rlcf	(??_adf4351_write_reg1+3)^0,f,c
 21333  0044DA  361F               	rlcf	(??_adf4351_write_reg1+4)^0,f,c
 21334  0044DC  2EE8               	decfsz	wreg,f,c
 21335  0044DE  EF69  F022         	goto	u6255
 21336  0044E2  501C               	movf	(??_adf4351_write_reg1+1)^0,w,c
 21337  0044E4  1221               	iorwf	adf4351_write_reg1@data^0,f,c
 21338  0044E6  501D               	movf	(??_adf4351_write_reg1+2)^0,w,c
 21339  0044E8  1222               	iorwf	(adf4351_write_reg1@data+1)^0,f,c
 21340  0044EA  501E               	movf	(??_adf4351_write_reg1+3)^0,w,c
 21341  0044EC  1223               	iorwf	(adf4351_write_reg1@data+2)^0,f,c
 21342  0044EE  501F               	movf	(??_adf4351_write_reg1+4)^0,w,c
 21343  0044F0  1224               	iorwf	(adf4351_write_reg1@data+3)^0,f,c
 21344  0044F2                     
 21345                           ;src/driver/adf4351.c: 309:         adf4351_write_latch(data);
 21346  0044F2  C021  F00D         	movff	adf4351_write_reg1@data,adf4351_write_latch@value
 21347  0044F6  C022  F00E         	movff	adf4351_write_reg1@data+1,adf4351_write_latch@value+1
 21348  0044FA  C023  F00F         	movff	adf4351_write_reg1@data+2,adf4351_write_latch@value+2
 21349  0044FE  C024  F010         	movff	adf4351_write_reg1@data+3,adf4351_write_latch@value+3
 21350  004502  EC58  F017         	call	_adf4351_write_latch	;wreg free
 21351  004506                     l212:
 21352  004506  0012               	return		;funcret
 21353  004508                     __end_of_adf4351_write_reg1:
 21354                           	opt callstack 0
 21355                           
 21356 ;; *************** function _adf4351_write_reg0 *****************
 21357 ;; Defined at:
 21358 ;;		line 288 in file "src/driver/adf4351.c"
 21359 ;; Parameters:    Size  Location     Type
 21360 ;;  ctx             2   24[COMRAM] PTR struct adf4351_ctx
 21361 ;;		 -> g_adf4351(55), 
 21362 ;; Auto vars:     Size  Location     Type
 21363 ;;  data            4   32[COMRAM] unsigned long 
 21364 ;; Return value:  Size  Location     Type
 21365 ;;                  1    wreg      void 
 21366 ;; Registers used:
 21367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21368 ;; Tracked objects:
 21369 ;;		On entry : 0/0
 21370 ;;		On exit  : 0/0
 21371 ;;		Unchanged: 0/0
 21372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21373 ;;      Params:         2       0       0       0       0       0       0
 21374 ;;      Locals:         4       0       0       0       0       0       0
 21375 ;;      Temps:          6       0       0       0       0       0       0
 21376 ;;      Totals:        12       0       0       0       0       0       0
 21377 ;;Total ram usage:       12 bytes
 21378 ;; Hardware stack levels used:    1
 21379 ;; Hardware stack levels required when called:    3
 21380 ;; This function calls:
 21381 ;;		_adf4351_write_latch
 21382 ;; This function is called by:
 21383 ;;		_adf4351_setup
 21384 ;; This function uses a non-reentrant model
 21385 ;;
 21386                           
 21387                           	psect	text92
 21388  004F98                     __ptext92:
 21389                           	opt callstack 0
 21390  004F98                     _adf4351_write_reg0:
 21391                           	opt callstack 24
 21392  004F98                     
 21393                           ;src/driver/adf4351.c: 288: static void adf4351_write_reg0(adf4351_ctx* ctx);src/driver/
      +                          adf4351.c: 289: {;src/driver/adf4351.c: 290:  if(ctx->init) {
 21394  004F98  C019  FFD9         	movff	adf4351_write_reg0@ctx,fsr2l
 21395  004F9C  C01A  FFDA         	movff	adf4351_write_reg0@ctx+1,fsr2h
 21396  004FA0  50DE               	movf	postinc2,w,c
 21397  004FA2  10DE               	iorwf	postinc2,w,c
 21398  004FA4  B4D8               	btfsc	status,2,c
 21399  004FA6  EFD7  F027         	goto	u6261
 21400  004FAA  EFD9  F027         	goto	u6260
 21401  004FAE                     u6261:
 21402  004FAE  EF2F  F028         	goto	l208
 21403  004FB2                     u6260:
 21404  004FB2                     
 21405                           ;src/driver/adf4351.c: 291:         u32 data = 0;
 21406  004FB2  0E00               	movlw	0
 21407  004FB4  6E21               	movwf	adf4351_write_reg0@data^0,c
 21408  004FB6  0E00               	movlw	0
 21409  004FB8  6E22               	movwf	(adf4351_write_reg0@data+1)^0,c
 21410  004FBA  0E00               	movlw	0
 21411  004FBC  6E23               	movwf	(adf4351_write_reg0@data+2)^0,c
 21412  004FBE  0E00               	movlw	0
 21413  004FC0  6E24               	movwf	(adf4351_write_reg0@data+3)^0,c
 21414  004FC2                     
 21415                           ;src/driver/adf4351.c: 293:         data |= (((u32)ctx->reg0.frac&0x0FFF)<<3);
 21416  004FC2  EE20 F004          	lfsr	2,4
 21417  004FC6  5019               	movf	adf4351_write_reg0@ctx^0,w,c
 21418  004FC8  26D9               	addwf	fsr2l,f,c
 21419  004FCA  501A               	movf	(adf4351_write_reg0@ctx+1)^0,w,c
 21420  004FCC  22DA               	addwfc	fsr2h,f,c
 21421  004FCE  CFDE F01B          	movff	postinc2,??_adf4351_write_reg0
 21422  004FD2  CFDD F01C          	movff	postdec2,??_adf4351_write_reg0+1
 21423  004FD6  0EFF               	movlw	255
 21424  004FD8  141B               	andwf	??_adf4351_write_reg0^0,w,c
 21425  004FDA  6E1D               	movwf	(??_adf4351_write_reg0+2)^0,c
 21426  004FDC  0E0F               	movlw	15
 21427  004FDE  141C               	andwf	(??_adf4351_write_reg0+1)^0,w,c
 21428  004FE0  6E1E               	movwf	(??_adf4351_write_reg0+3)^0,c
 21429  004FE2  6A1F               	clrf	(??_adf4351_write_reg0+4)^0,c
 21430  004FE4  6A20               	clrf	(??_adf4351_write_reg0+5)^0,c
 21431  004FE6  0E03               	movlw	3
 21432  004FE8                     u6275:
 21433  004FE8  90D8               	bcf	status,0,c
 21434  004FEA  361D               	rlcf	(??_adf4351_write_reg0+2)^0,f,c
 21435  004FEC  361E               	rlcf	(??_adf4351_write_reg0+3)^0,f,c
 21436  004FEE  361F               	rlcf	(??_adf4351_write_reg0+4)^0,f,c
 21437  004FF0  3620               	rlcf	(??_adf4351_write_reg0+5)^0,f,c
 21438  004FF2  2EE8               	decfsz	wreg,f,c
 21439  004FF4  EFF4  F027         	goto	u6275
 21440  004FF8  501D               	movf	(??_adf4351_write_reg0+2)^0,w,c
 21441  004FFA  1221               	iorwf	adf4351_write_reg0@data^0,f,c
 21442  004FFC  501E               	movf	(??_adf4351_write_reg0+3)^0,w,c
 21443  004FFE  1222               	iorwf	(adf4351_write_reg0@data+1)^0,f,c
 21444  005000  501F               	movf	(??_adf4351_write_reg0+4)^0,w,c
 21445  005002  1223               	iorwf	(adf4351_write_reg0@data+2)^0,f,c
 21446  005004  5020               	movf	(??_adf4351_write_reg0+5)^0,w,c
 21447  005006  1224               	iorwf	(adf4351_write_reg0@data+3)^0,f,c
 21448  005008                     
 21449                           ;src/driver/adf4351.c: 294:         data |= (((u32)ctx->reg0.integer&0xFFFF)<<15);
 21450  005008  EE20 F002          	lfsr	2,2
 21451  00500C  5019               	movf	adf4351_write_reg0@ctx^0,w,c
 21452  00500E  26D9               	addwf	fsr2l,f,c
 21453  005010  501A               	movf	(adf4351_write_reg0@ctx+1)^0,w,c
 21454  005012  22DA               	addwfc	fsr2h,f,c
 21455  005014  CFDE F01B          	movff	postinc2,??_adf4351_write_reg0
 21456  005018  CFDD F01C          	movff	postdec2,??_adf4351_write_reg0+1
 21457  00501C  501B               	movf	??_adf4351_write_reg0^0,w,c
 21458  00501E  6E1D               	movwf	(??_adf4351_write_reg0+2)^0,c
 21459  005020  501C               	movf	(??_adf4351_write_reg0+1)^0,w,c
 21460  005022  6E1E               	movwf	(??_adf4351_write_reg0+3)^0,c
 21461  005024  6A1F               	clrf	(??_adf4351_write_reg0+4)^0,c
 21462  005026  6A20               	clrf	(??_adf4351_write_reg0+5)^0,c
 21463  005028  0E0F               	movlw	15
 21464  00502A                     u6285:
 21465  00502A  90D8               	bcf	status,0,c
 21466  00502C  361D               	rlcf	(??_adf4351_write_reg0+2)^0,f,c
 21467  00502E  361E               	rlcf	(??_adf4351_write_reg0+3)^0,f,c
 21468  005030  361F               	rlcf	(??_adf4351_write_reg0+4)^0,f,c
 21469  005032  3620               	rlcf	(??_adf4351_write_reg0+5)^0,f,c
 21470  005034  2EE8               	decfsz	wreg,f,c
 21471  005036  EF15  F028         	goto	u6285
 21472  00503A  501D               	movf	(??_adf4351_write_reg0+2)^0,w,c
 21473  00503C  1221               	iorwf	adf4351_write_reg0@data^0,f,c
 21474  00503E  501E               	movf	(??_adf4351_write_reg0+3)^0,w,c
 21475  005040  1222               	iorwf	(adf4351_write_reg0@data+1)^0,f,c
 21476  005042  501F               	movf	(??_adf4351_write_reg0+4)^0,w,c
 21477  005044  1223               	iorwf	(adf4351_write_reg0@data+2)^0,f,c
 21478  005046  5020               	movf	(??_adf4351_write_reg0+5)^0,w,c
 21479  005048  1224               	iorwf	(adf4351_write_reg0@data+3)^0,f,c
 21480  00504A                     
 21481                           ;src/driver/adf4351.c: 296:         adf4351_write_latch(data);
 21482  00504A  C021  F00D         	movff	adf4351_write_reg0@data,adf4351_write_latch@value
 21483  00504E  C022  F00E         	movff	adf4351_write_reg0@data+1,adf4351_write_latch@value+1
 21484  005052  C023  F00F         	movff	adf4351_write_reg0@data+2,adf4351_write_latch@value+2
 21485  005056  C024  F010         	movff	adf4351_write_reg0@data+3,adf4351_write_latch@value+3
 21486  00505A  EC58  F017         	call	_adf4351_write_latch	;wreg free
 21487  00505E                     l208:
 21488  00505E  0012               	return		;funcret
 21489  005060                     __end_of_adf4351_write_reg0:
 21490                           	opt callstack 0
 21491                           
 21492 ;; *************** function _adf4351_write_latch *****************
 21493 ;; Defined at:
 21494 ;;		line 401 in file "src/driver/adf4351.c"
 21495 ;; Parameters:    Size  Location     Type
 21496 ;;  value           4   12[COMRAM] unsigned long 
 21497 ;; Auto vars:     Size  Location     Type
 21498 ;;  mask            4   20[COMRAM] unsigned long 
 21499 ;; Return value:  Size  Location     Type
 21500 ;;                  1    wreg      void 
 21501 ;; Registers used:
 21502 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 21503 ;; Tracked objects:
 21504 ;;		On entry : 0/0
 21505 ;;		On exit  : 0/0
 21506 ;;		Unchanged: 0/0
 21507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21508 ;;      Params:         4       0       0       0       0       0       0
 21509 ;;      Locals:         4       0       0       0       0       0       0
 21510 ;;      Temps:          4       0       0       0       0       0       0
 21511 ;;      Totals:        12       0       0       0       0       0       0
 21512 ;;Total ram usage:       12 bytes
 21513 ;; Hardware stack levels used:    1
 21514 ;; Hardware stack levels required when called:    2
 21515 ;; This function calls:
 21516 ;;		Nothing
 21517 ;; This function is called by:
 21518 ;;		_adf4351_write_reg0
 21519 ;;		_adf4351_write_reg1
 21520 ;;		_adf4351_write_reg2
 21521 ;;		_adf4351_write_reg3
 21522 ;;		_adf4351_write_reg4
 21523 ;;		_adf4351_write_reg5
 21524 ;; This function uses a non-reentrant model
 21525 ;;
 21526                           
 21527                           	psect	text93
 21528  002EB0                     __ptext93:
 21529                           	opt callstack 0
 21530  002EB0                     _adf4351_write_latch:
 21531                           	opt callstack 24
 21532  002EB0                     
 21533                           ;src/driver/adf4351.c: 401: static void adf4351_write_latch(u32 value);src/driver/adf435
      +                          1.c: 402: {;src/driver/adf4351.c: 404:     u32 mask = 0x80000000ULL;
 21534  002EB0  0E00               	movlw	0
 21535  002EB2  6E15               	movwf	adf4351_write_latch@mask^0,c
 21536  002EB4  0E00               	movlw	0
 21537  002EB6  6E16               	movwf	(adf4351_write_latch@mask+1)^0,c
 21538  002EB8  0E00               	movlw	0
 21539  002EBA  6E17               	movwf	(adf4351_write_latch@mask+2)^0,c
 21540  002EBC  0E80               	movlw	128
 21541  002EBE  6E18               	movwf	(adf4351_write_latch@mask+3)^0,c
 21542  002EC0                     
 21543                           ;src/driver/adf4351.c: 406:     *((PIN_SIO_CLK)->pPORT) &= ~(PIN_SIO_CLK)->mask;
 21544  002EC0  0EE2               	movlw	low (_PIN_SIO_CLK_DEF+4)
 21545  002EC2  6EF6               	movwf	tblptrl,c
 21546  002EC4  0E78               	movlw	high (_PIN_SIO_CLK_DEF+4)
 21547  002EC6  6EF7               	movwf	tblptrh,c
 21548  002EC8                     	if	0	;tblptru may be non-zero
 21549  002EC8                     	endif
 21550  002EC8                     	if	0	;tblptru may be non-zero
 21551  002EC8                     	endif
 21552  002EC8  0008               	tblrd		*
 21553  002ECA  50F5               	movf	tablat,w,c
 21554  002ECC  0AFF               	xorlw	255
 21555  002ECE  6E11               	movwf	??_adf4351_write_latch^0,c
 21556  002ED0  0EDE               	movlw	low _PIN_SIO_CLK_DEF
 21557  002ED2  6EF6               	movwf	tblptrl,c
 21558  002ED4                     	if	1	;There is more than 1 active tblptr byte
 21559  002ED4  0E78               	movlw	high _PIN_SIO_CLK_DEF
 21560  002ED6  6EF7               	movwf	tblptrh,c
 21561  002ED8                     	endif
 21562  002ED8                     	if	0	;There are less than 3 active tblptr bytes
 21563  002ED8                     	endif
 21564  002ED8  0009               	tblrd		*+
 21565  002EDA  CFF5 F012          	movff	tablat,??_adf4351_write_latch+1
 21566  002EDE  0009               	tblrd		*+
 21567  002EE0  CFF5 F013          	movff	tablat,??_adf4351_write_latch+2
 21568  002EE4  C012  FFD9         	movff	??_adf4351_write_latch+1,fsr2l
 21569  002EE8  C013  FFDA         	movff	??_adf4351_write_latch+2,fsr2h
 21570  002EEC  5011               	movf	??_adf4351_write_latch^0,w,c
 21571  002EEE  16DF               	andwf	indf2,f,c
 21572  002EF0                     
 21573                           ;src/driver/adf4351.c: 407:     _delaywdt((unsigned long)((1)*(8000000/4000000.0)));
 21574  002EF0  0004               	clrwdt	
 21575  002EF2  F000               	nop		;2 cycle nop
 21576                           
 21577                           ;src/driver/adf4351.c: 409:     while(mask) {
 21578  002EF4  EFFE  F017         	goto	l5822
 21579  002EF8                     l5808:
 21580                           
 21581                           ;src/driver/adf4351.c: 410:         if(value&mask) {
 21582  002EF8  5015               	movf	adf4351_write_latch@mask^0,w,c
 21583  002EFA  140D               	andwf	adf4351_write_latch@value^0,w,c
 21584  002EFC  6E11               	movwf	??_adf4351_write_latch^0,c
 21585  002EFE  5016               	movf	(adf4351_write_latch@mask+1)^0,w,c
 21586  002F00  140E               	andwf	(adf4351_write_latch@value+1)^0,w,c
 21587  002F02  6E12               	movwf	(??_adf4351_write_latch+1)^0,c
 21588  002F04  5017               	movf	(adf4351_write_latch@mask+2)^0,w,c
 21589  002F06  140F               	andwf	(adf4351_write_latch@value+2)^0,w,c
 21590  002F08  6E13               	movwf	(??_adf4351_write_latch+2)^0,c
 21591  002F0A  5018               	movf	(adf4351_write_latch@mask+3)^0,w,c
 21592  002F0C  1410               	andwf	(adf4351_write_latch@value+3)^0,w,c
 21593  002F0E  6E14               	movwf	(??_adf4351_write_latch+3)^0,c
 21594  002F10  5011               	movf	??_adf4351_write_latch^0,w,c
 21595  002F12  1012               	iorwf	(??_adf4351_write_latch+1)^0,w,c
 21596  002F14  1013               	iorwf	(??_adf4351_write_latch+2)^0,w,c
 21597  002F16  1014               	iorwf	(??_adf4351_write_latch+3)^0,w,c
 21598  002F18  B4D8               	btfsc	status,2,c
 21599  002F1A  EF91  F017         	goto	u5801
 21600  002F1E  EF93  F017         	goto	u5800
 21601  002F22                     u5801:
 21602  002F22  EFAC  F017         	goto	l5812
 21603  002F26                     u5800:
 21604  002F26                     
 21605                           ;src/driver/adf4351.c: 411:             *((PIN_SIO_DATA)->pPORT) |= (PIN_SIO_DATA)->mask
      +                          ;
 21606  002F26  0EE7               	movlw	low (_PIN_SIO_DATA_DEF+4)
 21607  002F28  6EF6               	movwf	tblptrl,c
 21608  002F2A  0E78               	movlw	high (_PIN_SIO_DATA_DEF+4)
 21609  002F2C  6EF7               	movwf	tblptrh,c
 21610  002F2E                     	if	0	;tblptru may be non-zero
 21611  002F2E                     	endif
 21612  002F2E                     	if	0	;tblptru may be non-zero
 21613  002F2E                     	endif
 21614  002F2E  0008               	tblrd		*
 21615  002F30  CFF5 F011          	movff	tablat,??_adf4351_write_latch
 21616  002F34  0EE3               	movlw	low _PIN_SIO_DATA_DEF
 21617  002F36  6EF6               	movwf	tblptrl,c
 21618  002F38                     	if	1	;There is more than 1 active tblptr byte
 21619  002F38  0E78               	movlw	high _PIN_SIO_DATA_DEF
 21620  002F3A  6EF7               	movwf	tblptrh,c
 21621  002F3C                     	endif
 21622  002F3C                     	if	0	;There are less than 3 active tblptr bytes
 21623  002F3C                     	endif
 21624  002F3C  0009               	tblrd		*+
 21625  002F3E  CFF5 F012          	movff	tablat,??_adf4351_write_latch+1
 21626  002F42  0009               	tblrd		*+
 21627  002F44  CFF5 F013          	movff	tablat,??_adf4351_write_latch+2
 21628  002F48  C012  FFD9         	movff	??_adf4351_write_latch+1,fsr2l
 21629  002F4C  C013  FFDA         	movff	??_adf4351_write_latch+2,fsr2h
 21630  002F50  5011               	movf	??_adf4351_write_latch^0,w,c
 21631  002F52  12DF               	iorwf	indf2,f,c
 21632                           
 21633                           ;src/driver/adf4351.c: 412:         } else {
 21634  002F54  EFC4  F017         	goto	l5814
 21635  002F58                     l5812:
 21636                           
 21637                           ;src/driver/adf4351.c: 413:             *((PIN_SIO_DATA)->pPORT) &= ~(PIN_SIO_DATA)->mas
      +                          k;
 21638  002F58  0EE7               	movlw	low (_PIN_SIO_DATA_DEF+4)
 21639  002F5A  6EF6               	movwf	tblptrl,c
 21640  002F5C  0E78               	movlw	high (_PIN_SIO_DATA_DEF+4)
 21641  002F5E  6EF7               	movwf	tblptrh,c
 21642  002F60                     	if	0	;tblptru may be non-zero
 21643  002F60                     	endif
 21644  002F60                     	if	0	;tblptru may be non-zero
 21645  002F60                     	endif
 21646  002F60  0008               	tblrd		*
 21647  002F62  50F5               	movf	tablat,w,c
 21648  002F64  0AFF               	xorlw	255
 21649  002F66  6E11               	movwf	??_adf4351_write_latch^0,c
 21650  002F68  0EE3               	movlw	low _PIN_SIO_DATA_DEF
 21651  002F6A  6EF6               	movwf	tblptrl,c
 21652  002F6C                     	if	1	;There is more than 1 active tblptr byte
 21653  002F6C  0E78               	movlw	high _PIN_SIO_DATA_DEF
 21654  002F6E  6EF7               	movwf	tblptrh,c
 21655  002F70                     	endif
 21656  002F70                     	if	0	;There are less than 3 active tblptr bytes
 21657  002F70                     	endif
 21658  002F70  0009               	tblrd		*+
 21659  002F72  CFF5 F012          	movff	tablat,??_adf4351_write_latch+1
 21660  002F76  0009               	tblrd		*+
 21661  002F78  CFF5 F013          	movff	tablat,??_adf4351_write_latch+2
 21662  002F7C  C012  FFD9         	movff	??_adf4351_write_latch+1,fsr2l
 21663  002F80  C013  FFDA         	movff	??_adf4351_write_latch+2,fsr2h
 21664  002F84  5011               	movf	??_adf4351_write_latch^0,w,c
 21665  002F86  16DF               	andwf	indf2,f,c
 21666  002F88                     l5814:
 21667                           
 21668                           ;src/driver/adf4351.c: 415:         _delaywdt((unsigned long)((1)*(8000000/4000000.0)));
 21669  002F88  0004               	clrwdt	
 21670  002F8A  F000               	nop		;2 cycle nop
 21671                           
 21672                           ;src/driver/adf4351.c: 416:         *((PIN_SIO_CLK)->pPORT) |= (PIN_SIO_CLK)->mask;
 21673  002F8C  0EE2               	movlw	low (_PIN_SIO_CLK_DEF+4)
 21674  002F8E  6EF6               	movwf	tblptrl,c
 21675  002F90  0E78               	movlw	high (_PIN_SIO_CLK_DEF+4)
 21676  002F92  6EF7               	movwf	tblptrh,c
 21677  002F94                     	if	0	;tblptru may be non-zero
 21678  002F94                     	endif
 21679  002F94                     	if	0	;tblptru may be non-zero
 21680  002F94                     	endif
 21681  002F94  0008               	tblrd		*
 21682  002F96  CFF5 F011          	movff	tablat,??_adf4351_write_latch
 21683  002F9A  0EDE               	movlw	low _PIN_SIO_CLK_DEF
 21684  002F9C  6EF6               	movwf	tblptrl,c
 21685  002F9E                     	if	1	;There is more than 1 active tblptr byte
 21686  002F9E  0E78               	movlw	high _PIN_SIO_CLK_DEF
 21687  002FA0  6EF7               	movwf	tblptrh,c
 21688  002FA2                     	endif
 21689  002FA2                     	if	0	;There are less than 3 active tblptr bytes
 21690  002FA2                     	endif
 21691  002FA2  0009               	tblrd		*+
 21692  002FA4  CFF5 F012          	movff	tablat,??_adf4351_write_latch+1
 21693  002FA8  0009               	tblrd		*+
 21694  002FAA  CFF5 F013          	movff	tablat,??_adf4351_write_latch+2
 21695  002FAE  C012  FFD9         	movff	??_adf4351_write_latch+1,fsr2l
 21696  002FB2  C013  FFDA         	movff	??_adf4351_write_latch+2,fsr2h
 21697  002FB6  5011               	movf	??_adf4351_write_latch^0,w,c
 21698  002FB8  12DF               	iorwf	indf2,f,c
 21699  002FBA                     
 21700                           ;src/driver/adf4351.c: 417:         _delaywdt((unsigned long)((1)*(8000000/4000000.0)));
 21701  002FBA  0004               	clrwdt	
 21702  002FBC  F000               	nop		;2 cycle nop
 21703                           
 21704                           ;src/driver/adf4351.c: 418:         *((PIN_SIO_CLK)->pPORT) &= ~(PIN_SIO_CLK)->mask;
 21705  002FBE  0EE2               	movlw	low (_PIN_SIO_CLK_DEF+4)
 21706  002FC0  6EF6               	movwf	tblptrl,c
 21707  002FC2  0E78               	movlw	high (_PIN_SIO_CLK_DEF+4)
 21708  002FC4  6EF7               	movwf	tblptrh,c
 21709  002FC6                     	if	0	;tblptru may be non-zero
 21710  002FC6                     	endif
 21711  002FC6                     	if	0	;tblptru may be non-zero
 21712  002FC6                     	endif
 21713  002FC6  0008               	tblrd		*
 21714  002FC8  50F5               	movf	tablat,w,c
 21715  002FCA  0AFF               	xorlw	255
 21716  002FCC  6E11               	movwf	??_adf4351_write_latch^0,c
 21717  002FCE  0EDE               	movlw	low _PIN_SIO_CLK_DEF
 21718  002FD0  6EF6               	movwf	tblptrl,c
 21719  002FD2                     	if	1	;There is more than 1 active tblptr byte
 21720  002FD2  0E78               	movlw	high _PIN_SIO_CLK_DEF
 21721  002FD4  6EF7               	movwf	tblptrh,c
 21722  002FD6                     	endif
 21723  002FD6                     	if	0	;There are less than 3 active tblptr bytes
 21724  002FD6                     	endif
 21725  002FD6  0009               	tblrd		*+
 21726  002FD8  CFF5 F012          	movff	tablat,??_adf4351_write_latch+1
 21727  002FDC  0009               	tblrd		*+
 21728  002FDE  CFF5 F013          	movff	tablat,??_adf4351_write_latch+2
 21729  002FE2  C012  FFD9         	movff	??_adf4351_write_latch+1,fsr2l
 21730  002FE6  C013  FFDA         	movff	??_adf4351_write_latch+2,fsr2h
 21731  002FEA  5011               	movf	??_adf4351_write_latch^0,w,c
 21732  002FEC  16DF               	andwf	indf2,f,c
 21733  002FEE                     
 21734                           ;src/driver/adf4351.c: 419:         _delaywdt((unsigned long)((1)*(8000000/4000000.0)));
 21735  002FEE  0004               	clrwdt	
 21736  002FF0  F000               	nop		;2 cycle nop
 21737  002FF2                     
 21738                           ;src/driver/adf4351.c: 421:         mask >>= 1;
 21739  002FF2  90D8               	bcf	status,0,c
 21740  002FF4  3218               	rrcf	(adf4351_write_latch@mask+3)^0,f,c
 21741  002FF6  3217               	rrcf	(adf4351_write_latch@mask+2)^0,f,c
 21742  002FF8  3216               	rrcf	(adf4351_write_latch@mask+1)^0,f,c
 21743  002FFA  3215               	rrcf	adf4351_write_latch@mask^0,f,c
 21744  002FFC                     l5822:
 21745                           
 21746                           ;src/driver/adf4351.c: 409:     while(mask) {
 21747  002FFC  5015               	movf	adf4351_write_latch@mask^0,w,c
 21748  002FFE  1016               	iorwf	(adf4351_write_latch@mask+1)^0,w,c
 21749  003000  1017               	iorwf	(adf4351_write_latch@mask+2)^0,w,c
 21750  003002  1018               	iorwf	(adf4351_write_latch@mask+3)^0,w,c
 21751  003004  A4D8               	btfss	status,2,c
 21752  003006  EF07  F018         	goto	u5811
 21753  00300A  EF09  F018         	goto	u5810
 21754  00300E                     u5811:
 21755  00300E  EF7C  F017         	goto	l5808
 21756  003012                     u5810:
 21757  003012                     
 21758                           ;src/driver/adf4351.c: 425:  *((PIN_ADF_LE)->pPORT) |= (PIN_ADF_LE)->mask;
 21759  003012  0EEC               	movlw	low (_PIN_ADF_LE_DEF+4)
 21760  003014  6EF6               	movwf	tblptrl,c
 21761  003016  0E78               	movlw	high (_PIN_ADF_LE_DEF+4)
 21762  003018  6EF7               	movwf	tblptrh,c
 21763  00301A                     	if	0	;tblptru may be non-zero
 21764  00301A                     	endif
 21765  00301A                     	if	0	;tblptru may be non-zero
 21766  00301A                     	endif
 21767  00301A  0008               	tblrd		*
 21768  00301C  CFF5 F011          	movff	tablat,??_adf4351_write_latch
 21769  003020  0EE8               	movlw	low _PIN_ADF_LE_DEF
 21770  003022  6EF6               	movwf	tblptrl,c
 21771  003024                     	if	1	;There is more than 1 active tblptr byte
 21772  003024  0E78               	movlw	high _PIN_ADF_LE_DEF
 21773  003026  6EF7               	movwf	tblptrh,c
 21774  003028                     	endif
 21775  003028                     	if	0	;There are less than 3 active tblptr bytes
 21776  003028                     	endif
 21777  003028  0009               	tblrd		*+
 21778  00302A  CFF5 F012          	movff	tablat,??_adf4351_write_latch+1
 21779  00302E  0009               	tblrd		*+
 21780  003030  CFF5 F013          	movff	tablat,??_adf4351_write_latch+2
 21781  003034  C012  FFD9         	movff	??_adf4351_write_latch+1,fsr2l
 21782  003038  C013  FFDA         	movff	??_adf4351_write_latch+2,fsr2h
 21783  00303C  5011               	movf	??_adf4351_write_latch^0,w,c
 21784  00303E  12DF               	iorwf	indf2,f,c
 21785  003040                     
 21786                           ;src/driver/adf4351.c: 426:  _delaywdt((unsigned long)((1)*(8000000/4000000.0)));
 21787  003040  0004               	clrwdt	
 21788  003042  F000               	nop		;2 cycle nop
 21789                           
 21790                           ;src/driver/adf4351.c: 427:  *((PIN_ADF_LE)->pPORT) &= ~(PIN_ADF_LE)->mask;
 21791  003044  0EEC               	movlw	low (_PIN_ADF_LE_DEF+4)
 21792  003046  6EF6               	movwf	tblptrl,c
 21793  003048  0E78               	movlw	high (_PIN_ADF_LE_DEF+4)
 21794  00304A  6EF7               	movwf	tblptrh,c
 21795  00304C                     	if	0	;tblptru may be non-zero
 21796  00304C                     	endif
 21797  00304C                     	if	0	;tblptru may be non-zero
 21798  00304C                     	endif
 21799  00304C  0008               	tblrd		*
 21800  00304E  50F5               	movf	tablat,w,c
 21801  003050  0AFF               	xorlw	255
 21802  003052  6E11               	movwf	??_adf4351_write_latch^0,c
 21803  003054  0EE8               	movlw	low _PIN_ADF_LE_DEF
 21804  003056  6EF6               	movwf	tblptrl,c
 21805  003058                     	if	1	;There is more than 1 active tblptr byte
 21806  003058  0E78               	movlw	high _PIN_ADF_LE_DEF
 21807  00305A  6EF7               	movwf	tblptrh,c
 21808  00305C                     	endif
 21809  00305C                     	if	0	;There are less than 3 active tblptr bytes
 21810  00305C                     	endif
 21811  00305C  0009               	tblrd		*+
 21812  00305E  CFF5 F012          	movff	tablat,??_adf4351_write_latch+1
 21813  003062  0009               	tblrd		*+
 21814  003064  CFF5 F013          	movff	tablat,??_adf4351_write_latch+2
 21815  003068  C012  FFD9         	movff	??_adf4351_write_latch+1,fsr2l
 21816  00306C  C013  FFDA         	movff	??_adf4351_write_latch+2,fsr2h
 21817  003070  5011               	movf	??_adf4351_write_latch^0,w,c
 21818  003072  16DF               	andwf	indf2,f,c
 21819  003074                     
 21820                           ;src/driver/adf4351.c: 428:  _delaywdt((unsigned long)((50)*(8000000/4000000.0)));
 21821  003074  0E19               	movlw	25
 21822  003076                     u12117:
 21823  003076  0004               	clrwdt	
 21824  003078  2EE8               	decfsz	wreg,f,c
 21825  00307A  D7FD               	bra	u12117
 21826  00307C  0012               	return		;funcret
 21827  00307E                     __end_of_adf4351_write_latch:
 21828                           	opt callstack 0
 21829                           
 21830 ;; *************** function _adf4351_init *****************
 21831 ;; Defined at:
 21832 ;;		line 33 in file "src/driver/adf4351.c"
 21833 ;; Parameters:    Size  Location     Type
 21834 ;;  ctx             2   24[COMRAM] PTR struct adf4351_ctx
 21835 ;;		 -> g_adf4351(55), 
 21836 ;;  ref             4   26[COMRAM] unsigned long 
 21837 ;;  pfd             4   30[COMRAM] unsigned long 
 21838 ;; Auto vars:     Size  Location     Type
 21839 ;;		None
 21840 ;; Return value:  Size  Location     Type
 21841 ;;                  1    wreg      void 
 21842 ;; Registers used:
 21843 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21844 ;; Tracked objects:
 21845 ;;		On entry : 0/0
 21846 ;;		On exit  : 0/0
 21847 ;;		Unchanged: 0/0
 21848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21849 ;;      Params:        10       0       0       0       0       0       0
 21850 ;;      Locals:         0       0       0       0       0       0       0
 21851 ;;      Temps:          3       0       0       0       0       0       0
 21852 ;;      Totals:        13       0       0       0       0       0       0
 21853 ;;Total ram usage:       13 bytes
 21854 ;; Hardware stack levels used:    1
 21855 ;; Hardware stack levels required when called:    3
 21856 ;; This function calls:
 21857 ;;		_adf4351_default
 21858 ;;		_memset
 21859 ;; This function is called by:
 21860 ;;		_main
 21861 ;; This function uses a non-reentrant model
 21862 ;;
 21863                           
 21864                           	psect	text94
 21865  004D26                     __ptext94:
 21866                           	opt callstack 0
 21867  004D26                     _adf4351_init:
 21868                           	opt callstack 27
 21869  004D26                     
 21870                           ;src/driver/adf4351.c: 33: void adf4351_init(adf4351_ctx* ctx, u32 ref, u32 pfd);src/dri
      +                          ver/adf4351.c: 34: {;src/driver/adf4351.c: 35:  memset(ctx, 0, sizeof(*ctx));
 21871  004D26  C019  F00D         	movff	adf4351_init@ctx,memset@dest
 21872  004D2A  C01A  F00E         	movff	adf4351_init@ctx+1,memset@dest+1
 21873  004D2E  0E00               	movlw	0
 21874  004D30  6E10               	movwf	(memset@c+1)^0,c
 21875  004D32  0E00               	movlw	0
 21876  004D34  6E0F               	movwf	memset@c^0,c
 21877  004D36  0E00               	movlw	0
 21878  004D38  6E12               	movwf	(memset@n+1)^0,c
 21879  004D3A  0E37               	movlw	55
 21880  004D3C  6E11               	movwf	memset@n^0,c
 21881  004D3E  EC56  F01C         	call	_memset	;wreg free
 21882  004D42                     
 21883                           ;src/driver/adf4351.c: 38:  ctx->init = 1;
 21884  004D42  C019  FFD9         	movff	adf4351_init@ctx,fsr2l
 21885  004D46  C01A  FFDA         	movff	adf4351_init@ctx+1,fsr2h
 21886  004D4A  0E01               	movlw	1
 21887  004D4C  6EDE               	movwf	postinc2,c
 21888  004D4E  0E00               	movlw	0
 21889  004D50  6EDD               	movwf	postdec2,c
 21890  004D52                     
 21891                           ;src/driver/adf4351.c: 39:  ctx->ref = ref;
 21892  004D52  EE20 F02B          	lfsr	2,43
 21893  004D56  5019               	movf	adf4351_init@ctx^0,w,c
 21894  004D58  26D9               	addwf	fsr2l,f,c
 21895  004D5A  501A               	movf	(adf4351_init@ctx+1)^0,w,c
 21896  004D5C  22DA               	addwfc	fsr2h,f,c
 21897  004D5E  C01B  FFDE         	movff	adf4351_init@ref,postinc2
 21898  004D62  C01C  FFDE         	movff	adf4351_init@ref+1,postinc2
 21899  004D66  C01D  FFDE         	movff	adf4351_init@ref+2,postinc2
 21900  004D6A  C01E  FFDE         	movff	adf4351_init@ref+3,postinc2
 21901  004D6E                     
 21902                           ;src/driver/adf4351.c: 40:  ctx->pfd = pfd;
 21903  004D6E  EE20 F02F          	lfsr	2,47
 21904  004D72  5019               	movf	adf4351_init@ctx^0,w,c
 21905  004D74  26D9               	addwf	fsr2l,f,c
 21906  004D76  501A               	movf	(adf4351_init@ctx+1)^0,w,c
 21907  004D78  22DA               	addwfc	fsr2h,f,c
 21908  004D7A  C01F  FFDE         	movff	adf4351_init@pfd,postinc2
 21909  004D7E  C020  FFDE         	movff	adf4351_init@pfd+1,postinc2
 21910  004D82  C021  FFDE         	movff	adf4351_init@pfd+2,postinc2
 21911  004D86  C022  FFDE         	movff	adf4351_init@pfd+3,postinc2
 21912  004D8A                     
 21913                           ;src/driver/adf4351.c: 43:     *((PIN_ADF_LE)->pPORT) &= ~(PIN_ADF_LE)->mask;
 21914  004D8A  0EEC               	movlw	low (_PIN_ADF_LE_DEF+4)
 21915  004D8C  6EF6               	movwf	tblptrl,c
 21916  004D8E  0E78               	movlw	high (_PIN_ADF_LE_DEF+4)
 21917  004D90  6EF7               	movwf	tblptrh,c
 21918  004D92                     	if	0	;tblptru may be non-zero
 21919  004D92                     	endif
 21920  004D92                     	if	0	;tblptru may be non-zero
 21921  004D92                     	endif
 21922  004D92  0008               	tblrd		*
 21923  004D94  50F5               	movf	tablat,w,c
 21924  004D96  0AFF               	xorlw	255
 21925  004D98  6E23               	movwf	??_adf4351_init^0,c
 21926  004D9A  0EE8               	movlw	low _PIN_ADF_LE_DEF
 21927  004D9C  6EF6               	movwf	tblptrl,c
 21928  004D9E                     	if	1	;There is more than 1 active tblptr byte
 21929  004D9E  0E78               	movlw	high _PIN_ADF_LE_DEF
 21930  004DA0  6EF7               	movwf	tblptrh,c
 21931  004DA2                     	endif
 21932  004DA2                     	if	0	;There are less than 3 active tblptr bytes
 21933  004DA2                     	endif
 21934  004DA2  0009               	tblrd		*+
 21935  004DA4  CFF5 F024          	movff	tablat,??_adf4351_init+1
 21936  004DA8  0009               	tblrd		*+
 21937  004DAA  CFF5 F025          	movff	tablat,??_adf4351_init+2
 21938  004DAE  C024  FFD9         	movff	??_adf4351_init+1,fsr2l
 21939  004DB2  C025  FFDA         	movff	??_adf4351_init+2,fsr2h
 21940  004DB6  5023               	movf	??_adf4351_init^0,w,c
 21941  004DB8  16DF               	andwf	indf2,f,c
 21942  004DBA                     
 21943                           ;src/driver/adf4351.c: 44:     *((PIN_ADF_CE)->pPORT) |= (PIN_ADF_CE)->mask;
 21944  004DBA  0EF1               	movlw	low (_PIN_ADF_CE_DEF+4)
 21945  004DBC  6EF6               	movwf	tblptrl,c
 21946  004DBE  0E78               	movlw	high (_PIN_ADF_CE_DEF+4)
 21947  004DC0  6EF7               	movwf	tblptrh,c
 21948  004DC2                     	if	0	;tblptru may be non-zero
 21949  004DC2                     	endif
 21950  004DC2                     	if	0	;tblptru may be non-zero
 21951  004DC2                     	endif
 21952  004DC2  0008               	tblrd		*
 21953  004DC4  CFF5 F023          	movff	tablat,??_adf4351_init
 21954  004DC8  0EED               	movlw	low _PIN_ADF_CE_DEF
 21955  004DCA  6EF6               	movwf	tblptrl,c
 21956  004DCC                     	if	1	;There is more than 1 active tblptr byte
 21957  004DCC  0E78               	movlw	high _PIN_ADF_CE_DEF
 21958  004DCE  6EF7               	movwf	tblptrh,c
 21959  004DD0                     	endif
 21960  004DD0                     	if	0	;There are less than 3 active tblptr bytes
 21961  004DD0                     	endif
 21962  004DD0  0009               	tblrd		*+
 21963  004DD2  CFF5 F024          	movff	tablat,??_adf4351_init+1
 21964  004DD6  0009               	tblrd		*+
 21965  004DD8  CFF5 F025          	movff	tablat,??_adf4351_init+2
 21966  004DDC  C024  FFD9         	movff	??_adf4351_init+1,fsr2l
 21967  004DE0  C025  FFDA         	movff	??_adf4351_init+2,fsr2h
 21968  004DE4  5023               	movf	??_adf4351_init^0,w,c
 21969  004DE6  12DF               	iorwf	indf2,f,c
 21970  004DE8                     
 21971                           ;src/driver/adf4351.c: 47:  adf4351_default(ctx);
 21972  004DE8  C019  F00D         	movff	adf4351_init@ctx,adf4351_default@ctx
 21973  004DEC  C01A  F00E         	movff	adf4351_init@ctx+1,adf4351_default@ctx+1
 21974  004DF0  EC5C  F02A         	call	_adf4351_default	;wreg free
 21975  004DF4                     
 21976                           ;src/driver/adf4351.c: 49:     _delaywdt((unsigned long)((100)*(8000000/4000000.0)));
 21977  004DF4  0E32               	movlw	50
 21978  004DF6                     u12127:
 21979  004DF6  0004               	clrwdt	
 21980  004DF8  2EE8               	decfsz	wreg,f,c
 21981  004DFA  D7FD               	bra	u12127
 21982  004DFC  0012               	return		;funcret
 21983  004DFE                     __end_of_adf4351_init:
 21984                           	opt callstack 0
 21985                           
 21986 ;; *************** function _memset *****************
 21987 ;; Defined at:
 21988 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 21989 ;; Parameters:    Size  Location     Type
 21990 ;;  dest            2   12[COMRAM] PTR void 
 21991 ;;		 -> g_adf4351(55), g_i2c_bus(8), eval_gps@elem(240), itoa@buffer(12), 
 21992 ;;		 -> print_char@map(8), lcd_clear_screen@buf(128), 
 21993 ;;  c               2   14[COMRAM] int 
 21994 ;;  n               2   16[COMRAM] unsigned int 
 21995 ;; Auto vars:     Size  Location     Type
 21996 ;;  s               2   22[COMRAM] PTR unsigned char 
 21997 ;;		 -> g_adf4351(55), g_i2c_bus(8), eval_gps@elem(240), itoa@buffer(12), 
 21998 ;;		 -> print_char@map(8), lcd_clear_screen@buf(128), 
 21999 ;;  k               2   20[COMRAM] unsigned int 
 22000 ;; Return value:  Size  Location     Type
 22001 ;;                  2   12[COMRAM] PTR void 
 22002 ;; Registers used:
 22003 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22004 ;; Tracked objects:
 22005 ;;		On entry : 0/0
 22006 ;;		On exit  : 0/0
 22007 ;;		Unchanged: 0/0
 22008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22009 ;;      Params:         6       0       0       0       0       0       0
 22010 ;;      Locals:         4       0       0       0       0       0       0
 22011 ;;      Temps:          2       0       0       0       0       0       0
 22012 ;;      Totals:        12       0       0       0       0       0       0
 22013 ;;Total ram usage:       12 bytes
 22014 ;; Hardware stack levels used:    1
 22015 ;; Hardware stack levels required when called:    2
 22016 ;; This function calls:
 22017 ;;		Nothing
 22018 ;; This function is called by:
 22019 ;;		_adf4351_init
 22020 ;;		_i2c_native_init
 22021 ;;		_lcd_clear_screen
 22022 ;;		_print_char
 22023 ;;		_itoa
 22024 ;;		_eval_gps
 22025 ;; This function uses a non-reentrant model
 22026 ;;
 22027                           
 22028                           	psect	text95
 22029  0038AC                     __ptext95:
 22030                           	opt callstack 0
 22031  0038AC                     _memset:
 22032                           	opt callstack 25
 22033  0038AC  C00D  F017         	movff	memset@dest,memset@s
 22034  0038B0  C00E  F018         	movff	memset@dest+1,memset@s+1
 22035  0038B4  5011               	movf	memset@n^0,w,c
 22036  0038B6  1012               	iorwf	(memset@n+1)^0,w,c
 22037  0038B8  A4D8               	btfss	status,2,c
 22038  0038BA  EF61  F01C         	goto	u10271
 22039  0038BE  EF63  F01C         	goto	u10270
 22040  0038C2                     u10271:
 22041  0038C2  EF65  F01C         	goto	l8754
 22042  0038C6                     u10270:
 22043  0038C6  EF10  F01D         	goto	l2054
 22044  0038CA                     l8754:
 22045  0038CA  C017  FFD9         	movff	memset@s,fsr2l
 22046  0038CE  C018  FFDA         	movff	memset@s+1,fsr2h
 22047  0038D2  C00F  FFDF         	movff	memset@c,indf2
 22048  0038D6  5011               	movf	memset@n^0,w,c
 22049  0038D8  2417               	addwf	memset@s^0,w,c
 22050  0038DA  6E13               	movwf	??_memset^0,c
 22051  0038DC  5012               	movf	(memset@n+1)^0,w,c
 22052  0038DE  2018               	addwfc	(memset@s+1)^0,w,c
 22053  0038E0  6E14               	movwf	(??_memset+1)^0,c
 22054  0038E2  0EFF               	movlw	255
 22055  0038E4  2413               	addwf	??_memset^0,w,c
 22056  0038E6  6ED9               	movwf	fsr2l,c
 22057  0038E8  0EFF               	movlw	255
 22058  0038EA  2014               	addwfc	(??_memset+1)^0,w,c
 22059  0038EC  6EDA               	movwf	fsr2h,c
 22060  0038EE  C00F  FFDF         	movff	memset@c,indf2
 22061  0038F2  5012               	movf	(memset@n+1)^0,w,c
 22062  0038F4  E107               	bnz	u10281
 22063  0038F6  0E03               	movlw	3
 22064  0038F8  5C11               	subwf	memset@n^0,w,c
 22065  0038FA  B0D8               	btfsc	status,0,c
 22066  0038FC  EF82  F01C         	goto	u10281
 22067  003900  EF84  F01C         	goto	u10280
 22068  003904                     u10281:
 22069  003904  EF86  F01C         	goto	l8760
 22070  003908                     u10280:
 22071  003908  EF10  F01D         	goto	l2054
 22072  00390C                     l8760:
 22073  00390C  EE20 F001          	lfsr	2,1
 22074  003910  5017               	movf	memset@s^0,w,c
 22075  003912  26D9               	addwf	fsr2l,f,c
 22076  003914  5018               	movf	(memset@s+1)^0,w,c
 22077  003916  22DA               	addwfc	fsr2h,f,c
 22078  003918  C00F  FFDF         	movff	memset@c,indf2
 22079  00391C  EE20 F002          	lfsr	2,2
 22080  003920  5017               	movf	memset@s^0,w,c
 22081  003922  26D9               	addwf	fsr2l,f,c
 22082  003924  5018               	movf	(memset@s+1)^0,w,c
 22083  003926  22DA               	addwfc	fsr2h,f,c
 22084  003928  C00F  FFDF         	movff	memset@c,indf2
 22085  00392C  5011               	movf	memset@n^0,w,c
 22086  00392E  2417               	addwf	memset@s^0,w,c
 22087  003930  6E13               	movwf	??_memset^0,c
 22088  003932  5012               	movf	(memset@n+1)^0,w,c
 22089  003934  2018               	addwfc	(memset@s+1)^0,w,c
 22090  003936  6E14               	movwf	(??_memset+1)^0,c
 22091  003938  0EFE               	movlw	254
 22092  00393A  2413               	addwf	??_memset^0,w,c
 22093  00393C  6ED9               	movwf	fsr2l,c
 22094  00393E  0EFF               	movlw	255
 22095  003940  2014               	addwfc	(??_memset+1)^0,w,c
 22096  003942  6EDA               	movwf	fsr2h,c
 22097  003944  C00F  FFDF         	movff	memset@c,indf2
 22098  003948  5011               	movf	memset@n^0,w,c
 22099  00394A  2417               	addwf	memset@s^0,w,c
 22100  00394C  6E13               	movwf	??_memset^0,c
 22101  00394E  5012               	movf	(memset@n+1)^0,w,c
 22102  003950  2018               	addwfc	(memset@s+1)^0,w,c
 22103  003952  6E14               	movwf	(??_memset+1)^0,c
 22104  003954  0EFD               	movlw	253
 22105  003956  2413               	addwf	??_memset^0,w,c
 22106  003958  6ED9               	movwf	fsr2l,c
 22107  00395A  0EFF               	movlw	255
 22108  00395C  2014               	addwfc	(??_memset+1)^0,w,c
 22109  00395E  6EDA               	movwf	fsr2h,c
 22110  003960  C00F  FFDF         	movff	memset@c,indf2
 22111  003964  5012               	movf	(memset@n+1)^0,w,c
 22112  003966  E107               	bnz	u10291
 22113  003968  0E07               	movlw	7
 22114  00396A  5C11               	subwf	memset@n^0,w,c
 22115  00396C  B0D8               	btfsc	status,0,c
 22116  00396E  EFBB  F01C         	goto	u10291
 22117  003972  EFBD  F01C         	goto	u10290
 22118  003976                     u10291:
 22119  003976  EFBF  F01C         	goto	l8766
 22120  00397A                     u10290:
 22121  00397A  EF10  F01D         	goto	l2054
 22122  00397E                     l8766:
 22123  00397E  EE20 F003          	lfsr	2,3
 22124  003982  5017               	movf	memset@s^0,w,c
 22125  003984  26D9               	addwf	fsr2l,f,c
 22126  003986  5018               	movf	(memset@s+1)^0,w,c
 22127  003988  22DA               	addwfc	fsr2h,f,c
 22128  00398A  C00F  FFDF         	movff	memset@c,indf2
 22129  00398E  5011               	movf	memset@n^0,w,c
 22130  003990  2417               	addwf	memset@s^0,w,c
 22131  003992  6E13               	movwf	??_memset^0,c
 22132  003994  5012               	movf	(memset@n+1)^0,w,c
 22133  003996  2018               	addwfc	(memset@s+1)^0,w,c
 22134  003998  6E14               	movwf	(??_memset+1)^0,c
 22135  00399A  0EFC               	movlw	252
 22136  00399C  2413               	addwf	??_memset^0,w,c
 22137  00399E  6ED9               	movwf	fsr2l,c
 22138  0039A0  0EFF               	movlw	255
 22139  0039A2  2014               	addwfc	(??_memset+1)^0,w,c
 22140  0039A4  6EDA               	movwf	fsr2h,c
 22141  0039A6  C00F  FFDF         	movff	memset@c,indf2
 22142  0039AA  5012               	movf	(memset@n+1)^0,w,c
 22143  0039AC  E107               	bnz	u10301
 22144  0039AE  0E09               	movlw	9
 22145  0039B0  5C11               	subwf	memset@n^0,w,c
 22146  0039B2  B0D8               	btfsc	status,0,c
 22147  0039B4  EFDE  F01C         	goto	u10301
 22148  0039B8  EFE0  F01C         	goto	u10300
 22149  0039BC                     u10301:
 22150  0039BC  EFE2  F01C         	goto	l8772
 22151  0039C0                     u10300:
 22152  0039C0  EF10  F01D         	goto	l2054
 22153  0039C4                     l8772:
 22154  0039C4  C017  F013         	movff	memset@s,??_memset
 22155  0039C8  C018  F014         	movff	memset@s+1,??_memset+1
 22156  0039CC  1E13               	comf	??_memset^0,f,c
 22157  0039CE  1E14               	comf	(??_memset+1)^0,f,c
 22158  0039D0  4A13               	infsnz	??_memset^0,f,c
 22159  0039D2  2A14               	incf	(??_memset+1)^0,f,c
 22160  0039D4  0E03               	movlw	3
 22161  0039D6  1413               	andwf	??_memset^0,w,c
 22162  0039D8  6E15               	movwf	memset@k^0,c
 22163  0039DA  6A16               	clrf	(memset@k+1)^0,c
 22164  0039DC  5015               	movf	memset@k^0,w,c
 22165  0039DE  2617               	addwf	memset@s^0,f,c
 22166  0039E0  5016               	movf	(memset@k+1)^0,w,c
 22167  0039E2  2218               	addwfc	(memset@s+1)^0,f,c
 22168  0039E4  5015               	movf	memset@k^0,w,c
 22169  0039E6  5E11               	subwf	memset@n^0,f,c
 22170  0039E8  5016               	movf	(memset@k+1)^0,w,c
 22171  0039EA  5A12               	subwfb	(memset@n+1)^0,f,c
 22172  0039EC  0EFC               	movlw	252
 22173  0039EE  1611               	andwf	memset@n^0,f,c
 22174  0039F0  0EFF               	movlw	255
 22175  0039F2  1612               	andwf	(memset@n+1)^0,f,c
 22176  0039F4  EF07  F01D         	goto	l8780
 22177  0039F8                     l8774:
 22178  0039F8  C017  FFD9         	movff	memset@s,fsr2l
 22179  0039FC  C018  FFDA         	movff	memset@s+1,fsr2h
 22180  003A00  C00F  FFDF         	movff	memset@c,indf2
 22181  003A04  0611               	decf	memset@n^0,f,c
 22182  003A06  A0D8               	btfss	status,0,c
 22183  003A08  0612               	decf	(memset@n+1)^0,f,c
 22184  003A0A  4A17               	infsnz	memset@s^0,f,c
 22185  003A0C  2A18               	incf	(memset@s+1)^0,f,c
 22186  003A0E                     l8780:
 22187  003A0E  5011               	movf	memset@n^0,w,c
 22188  003A10  1012               	iorwf	(memset@n+1)^0,w,c
 22189  003A12  A4D8               	btfss	status,2,c
 22190  003A14  EF0E  F01D         	goto	u10311
 22191  003A18  EF10  F01D         	goto	u10310
 22192  003A1C                     u10311:
 22193  003A1C  EFFC  F01C         	goto	l8774
 22194  003A20                     u10310:
 22195  003A20                     l2054:
 22196  003A20  0012               	return		;funcret
 22197  003A22                     __end_of_memset:
 22198                           	opt callstack 0
 22199                           
 22200 ;; *************** function _adf4351_default *****************
 22201 ;; Defined at:
 22202 ;;		line 142 in file "src/driver/adf4351.c"
 22203 ;; Parameters:    Size  Location     Type
 22204 ;;  ctx             2   12[COMRAM] PTR struct adf4351_ctx
 22205 ;;		 -> g_adf4351(55), 
 22206 ;; Auto vars:     Size  Location     Type
 22207 ;;		None
 22208 ;; Return value:  Size  Location     Type
 22209 ;;                  1    wreg      void 
 22210 ;; Registers used:
 22211 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22212 ;; Tracked objects:
 22213 ;;		On entry : 0/0
 22214 ;;		On exit  : 0/0
 22215 ;;		Unchanged: 0/0
 22216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22217 ;;      Params:         2       0       0       0       0       0       0
 22218 ;;      Locals:         0       0       0       0       0       0       0
 22219 ;;      Temps:          0       0       0       0       0       0       0
 22220 ;;      Totals:         2       0       0       0       0       0       0
 22221 ;;Total ram usage:        2 bytes
 22222 ;; Hardware stack levels used:    1
 22223 ;; Hardware stack levels required when called:    2
 22224 ;; This function calls:
 22225 ;;		Nothing
 22226 ;; This function is called by:
 22227 ;;		_adf4351_init
 22228 ;; This function uses a non-reentrant model
 22229 ;;
 22230                           
 22231                           	psect	text96
 22232  0054B8                     __ptext96:
 22233                           	opt callstack 0
 22234  0054B8                     _adf4351_default:
 22235                           	opt callstack 27
 22236  0054B8                     
 22237                           ;src/driver/adf4351.c: 142: static void adf4351_default(adf4351_ctx* ctx);src/driver/adf
      +                          4351.c: 143: {;src/driver/adf4351.c: 144:  ctx->reg1.phase = 1;
 22238  0054B8  EE20 F007          	lfsr	2,7
 22239  0054BC  500D               	movf	adf4351_default@ctx^0,w,c
 22240  0054BE  26D9               	addwf	fsr2l,f,c
 22241  0054C0  500E               	movf	(adf4351_default@ctx+1)^0,w,c
 22242  0054C2  22DA               	addwfc	fsr2h,f,c
 22243  0054C4  0E01               	movlw	1
 22244  0054C6  6EDE               	movwf	postinc2,c
 22245  0054C8  0E00               	movlw	0
 22246  0054CA  6EDD               	movwf	postdec2,c
 22247                           
 22248                           ;src/driver/adf4351.c: 145:  ctx->reg2.muxout = 6;
 22249  0054CC  EE20 F00C          	lfsr	2,12
 22250  0054D0  500D               	movf	adf4351_default@ctx^0,w,c
 22251  0054D2  26D9               	addwf	fsr2l,f,c
 22252  0054D4  500E               	movf	(adf4351_default@ctx+1)^0,w,c
 22253  0054D6  22DA               	addwfc	fsr2h,f,c
 22254  0054D8  0E06               	movlw	6
 22255  0054DA  6EDF               	movwf	indf2,c
 22256                           
 22257                           ;src/driver/adf4351.c: 146:  ctx->reg2.cpc = 7;
 22258  0054DC  EE20 F012          	lfsr	2,18
 22259  0054E0  500D               	movf	adf4351_default@ctx^0,w,c
 22260  0054E2  26D9               	addwf	fsr2l,f,c
 22261  0054E4  500E               	movf	(adf4351_default@ctx+1)^0,w,c
 22262  0054E6  22DA               	addwfc	fsr2h,f,c
 22263  0054E8  0E07               	movlw	7
 22264  0054EA  6EDF               	movwf	indf2,c
 22265                           
 22266                           ;src/driver/adf4351.c: 147:  ctx->reg2.lownoise = 3;
 22267  0054EC  EE20 F00B          	lfsr	2,11
 22268  0054F0  500D               	movf	adf4351_default@ctx^0,w,c
 22269  0054F2  26D9               	addwf	fsr2l,f,c
 22270  0054F4  500E               	movf	(adf4351_default@ctx+1)^0,w,c
 22271  0054F6  22DA               	addwfc	fsr2h,f,c
 22272  0054F8  0E03               	movlw	3
 22273  0054FA  6EDF               	movwf	indf2,c
 22274                           
 22275                           ;src/driver/adf4351.c: 148:  ctx->reg2.pdpol = 1;
 22276  0054FC  EE20 F015          	lfsr	2,21
 22277  005500  500D               	movf	adf4351_default@ctx^0,w,c
 22278  005502  26D9               	addwf	fsr2l,f,c
 22279  005504  500E               	movf	(adf4351_default@ctx+1)^0,w,c
 22280  005506  22DA               	addwfc	fsr2h,f,c
 22281  005508  0E01               	movlw	1
 22282  00550A  6EDF               	movwf	indf2,c
 22283                           
 22284                           ;src/driver/adf4351.c: 149:  ctx->reg4.fbsel = 1;
 22285  00550C  EE20 F020          	lfsr	2,32
 22286  005510  500D               	movf	adf4351_default@ctx^0,w,c
 22287  005512  26D9               	addwf	fsr2l,f,c
 22288  005514  500E               	movf	(adf4351_default@ctx+1)^0,w,c
 22289  005516  22DA               	addwfc	fsr2h,f,c
 22290  005518  0E01               	movlw	1
 22291  00551A  6EDF               	movwf	indf2,c
 22292                           
 22293                           ;src/driver/adf4351.c: 150:  ctx->reg4.rfoutena = 1;
 22294  00551C  EE20 F028          	lfsr	2,40
 22295  005520  500D               	movf	adf4351_default@ctx^0,w,c
 22296  005522  26D9               	addwf	fsr2l,f,c
 22297  005524  500E               	movf	(adf4351_default@ctx+1)^0,w,c
 22298  005526  22DA               	addwfc	fsr2h,f,c
 22299  005528  0E01               	movlw	1
 22300  00552A  6EDF               	movwf	indf2,c
 22301                           
 22302                           ;src/driver/adf4351.c: 151:  ctx->reg4.rfoutpwr = 3;
 22303  00552C  EE20 F029          	lfsr	2,41
 22304  005530  500D               	movf	adf4351_default@ctx^0,w,c
 22305  005532  26D9               	addwf	fsr2l,f,c
 22306  005534  500E               	movf	(adf4351_default@ctx+1)^0,w,c
 22307  005536  22DA               	addwfc	fsr2h,f,c
 22308  005538  0E03               	movlw	3
 22309  00553A  6EDF               	movwf	indf2,c
 22310                           
 22311                           ;src/driver/adf4351.c: 152:     ctx->reg4.vcopd = 1;
 22312  00553C  EE20 F023          	lfsr	2,35
 22313  005540  500D               	movf	adf4351_default@ctx^0,w,c
 22314  005542  26D9               	addwf	fsr2l,f,c
 22315  005544  500E               	movf	(adf4351_default@ctx+1)^0,w,c
 22316  005546  22DA               	addwfc	fsr2h,f,c
 22317  005548  0E01               	movlw	1
 22318  00554A  6EDF               	movwf	indf2,c
 22319                           
 22320                           ;src/driver/adf4351.c: 153:     ctx->reg5.ldpinmod = 1;
 22321  00554C  EE20 F02A          	lfsr	2,42
 22322  005550  500D               	movf	adf4351_default@ctx^0,w,c
 22323  005552  26D9               	addwf	fsr2l,f,c
 22324  005554  500E               	movf	(adf4351_default@ctx+1)^0,w,c
 22325  005556  22DA               	addwfc	fsr2h,f,c
 22326  005558  0E01               	movlw	1
 22327  00555A  6EDF               	movwf	indf2,c
 22328  00555C  0012               	return		;funcret
 22329  00555E                     __end_of_adf4351_default:
 22330                           	opt callstack 0
 22331                           
 22332 ;; *************** function _global_irq_handler *****************
 22333 ;; Defined at:
 22334 ;;		line 17 in file "src/driver/irq.c"
 22335 ;; Parameters:    Size  Location     Type
 22336 ;;		None
 22337 ;; Auto vars:     Size  Location     Type
 22338 ;;  dummy           1   11[COMRAM] volatile unsigned char 
 22339 ;; Return value:  Size  Location     Type
 22340 ;;                  1    wreg      void 
 22341 ;; Registers used:
 22342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 22343 ;; Tracked objects:
 22344 ;;		On entry : 0/0
 22345 ;;		On exit  : 0/0
 22346 ;;		Unchanged: 0/0
 22347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22348 ;;      Params:         0       0       0       0       0       0       0
 22349 ;;      Locals:         1       0       0       0       0       0       0
 22350 ;;      Temps:          4       0       0       0       0       0       0
 22351 ;;      Totals:         5       0       0       0       0       0       0
 22352 ;;Total ram usage:        5 bytes
 22353 ;; Hardware stack levels used:    1
 22354 ;; Hardware stack levels required when called:    1
 22355 ;; This function calls:
 22356 ;;		_usart_rx_irq_handler
 22357 ;; This function is called by:
 22358 ;;		Interrupt level 2
 22359 ;; This function uses a non-reentrant model
 22360 ;;
 22361                           
 22362                           	psect	intcode
 22363  000008                     __pintcode:
 22364                           	opt callstack 0
 22365  000008                     _global_irq_handler:
 22366                           	opt callstack 11
 22367                           
 22368                           ;incstack = 0
 22369  000008  8273               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 22370  00000A  ED21  F02D         	call	int_func,f	;refresh shadow registers
 22371                           
 22372                           	psect	intcode_body
 22373  005A42                     __pintcode_body:
 22374                           	opt callstack 11
 22375  005A42                     int_func:
 22376                           	opt callstack 11
 22377  005A42  0006               	pop		; remove dummy address from shadow register refresh
 22378  005A44  CFFA F008          	movff	pclath,??_global_irq_handler
 22379  005A48  CFFB F009          	movff	pclatu,??_global_irq_handler+1
 22380  005A4C  CFD9 F00A          	movff	fsr2l,??_global_irq_handler+2
 22381  005A50  CFDA F00B          	movff	fsr2h,??_global_irq_handler+3
 22382  005A54                     
 22383                           ;src/driver/irq.c: 19:     if(PIR1bits.RCIF) {
 22384  005A54  AA9E               	btfss	158,5,c	;volatile
 22385  005A56  EF2F  F02D         	goto	i2u807_41
 22386  005A5A  EF31  F02D         	goto	i2u807_40
 22387  005A5E                     i2u807_41:
 22388  005A5E  EF4C  F02D         	goto	i2l7412
 22389  005A62                     i2u807_40:
 22390  005A62                     
 22391                           ;src/driver/irq.c: 20:         if(g_irq_handler_info[IRQ_HANDLER_ID_USART].handler) {
 22392  005A62  0101               	movlb	1	; () banked
 22393  005A64  518C               	movf	_g_irq_handler_info& (0+255),w,b
 22394  005A66  118D               	iorwf	(_g_irq_handler_info+1)& (0+255),w,b
 22395  005A68  B4D8               	btfsc	status,2,c
 22396  005A6A  EF39  F02D         	goto	i2u808_41
 22397  005A6E  EF3B  F02D         	goto	i2u808_40
 22398  005A72                     i2u808_41:
 22399  005A72  EF4C  F02D         	goto	i2l7412
 22400  005A76                     i2u808_40:
 22401  005A76                     
 22402                           ; BSR set to: 1
 22403                           ;src/driver/irq.c: 21:             g_irq_handler_info[IRQ_HANDLER_ID_USART].handler(g_ir
      +                          q_handler_info[IRQ_HANDLER_ID_USART].udata);
 22404  005A76  C18E  F001         	movff	_g_irq_handler_info+2,usart_rx_irq_handler@udata
 22405  005A7A  C18F  F002         	movff	_g_irq_handler_info+3,usart_rx_irq_handler@udata+1
 22406  005A7E  D802               	call	i2u809_48
 22407  005A80  EF4C  F02D         	goto	i2u809_49
 22408  005A84                     i2u809_48:
 22409  005A84  0005               	push	
 22410  005A86  6EFA               	movwf	pclath,c
 22411  005A88  518C               	movf	_g_irq_handler_info& (0+255),w,b
 22412  005A8A  6EFD               	movwf	tosl,c
 22413  005A8C  518D               	movf	(_g_irq_handler_info+1)& (0+255),w,b
 22414  005A8E  6EFE               	movwf	tosh,c
 22415  005A90  50F8               	movf	tblptru,w,c
 22416  005A92  6EFF               	movwf	tosu,c
 22417  005A94  50FA               	movf	pclath,w,c
 22418  005A96  0012               	return		;indir
 22419  005A98                     i2u809_49:
 22420  005A98                     i2l7412:
 22421                           
 22422                           ;src/driver/irq.c: 25:     if(INTCONbits.RBIF) {
 22423  005A98  A0F2               	btfss	242,0,c	;volatile
 22424  005A9A  EF51  F02D         	goto	i2u810_41
 22425  005A9E  EF53  F02D         	goto	i2u810_40
 22426  005AA2                     i2u810_41:
 22427  005AA2  EF56  F02D         	goto	i2l464
 22428  005AA6                     i2u810_40:
 22429  005AA6                     
 22430                           ;src/driver/irq.c: 26:         volatile u8 dummy = PORTB;
 22431  005AA6  CF81 F00C          	movff	3969,global_irq_handler@dummy	;volatile
 22432                           
 22433                           ;src/driver/irq.c: 27:         INTCONbits.RBIF = 0;
 22434  005AAA  90F2               	bcf	242,0,c	;volatile
 22435  005AAC                     i2l464:
 22436  005AAC  C00B  FFDA         	movff	??_global_irq_handler+3,fsr2h
 22437  005AB0  C00A  FFD9         	movff	??_global_irq_handler+2,fsr2l
 22438  005AB4  C009  FFFB         	movff	??_global_irq_handler+1,pclatu
 22439  005AB8  C008  FFFA         	movff	??_global_irq_handler,pclath
 22440  005ABC  9273               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 22441  005ABE  0011               	retfie		f
 22442  005AC0                     __end_of_global_irq_handler:
 22443                           	opt callstack 0
 22444                           
 22445 ;; *************** function _usart_rx_irq_handler *****************
 22446 ;; Defined at:
 22447 ;;		line 72 in file "src/driver/usart.c"
 22448 ;; Parameters:    Size  Location     Type
 22449 ;;  udata           2    0[COMRAM] PTR void 
 22450 ;;		 -> NULL(0), 
 22451 ;; Auto vars:     Size  Location     Type
 22452 ;;  wposn           2    5[COMRAM] volatile int 
 22453 ;;  c               1    4[COMRAM] volatile unsigned char 
 22454 ;; Return value:  Size  Location     Type
 22455 ;;                  1    wreg      void 
 22456 ;; Registers used:
 22457 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22458 ;; Tracked objects:
 22459 ;;		On entry : 0/0
 22460 ;;		On exit  : 0/0
 22461 ;;		Unchanged: 0/0
 22462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22463 ;;      Params:         2       0       0       0       0       0       0
 22464 ;;      Locals:         3       0       0       0       0       0       0
 22465 ;;      Temps:          2       0       0       0       0       0       0
 22466 ;;      Totals:         7       0       0       0       0       0       0
 22467 ;;Total ram usage:        7 bytes
 22468 ;; Hardware stack levels used:    1
 22469 ;; This function calls:
 22470 ;;		Nothing
 22471 ;; This function is called by:
 22472 ;;		_usart_init
 22473 ;;		_global_irq_handler
 22474 ;; This function uses a non-reentrant model
 22475 ;;
 22476                           
 22477                           	psect	text98
 22478  0058C0                     __ptext98:
 22479                           	opt callstack 0
 22480  0058C0                     _usart_rx_irq_handler:
 22481                           	opt callstack 11
 22482  0058C0                     
 22483                           ;src/driver/usart.c: 72: static void usart_rx_irq_handler(void *udata);src/driver/usart.
      +                          c: 73: {;src/driver/usart.c: 74:     volatile char c;;src/driver/usart.c: 75:     volati
      +                          le int wposn;;src/driver/usart.c: 78:     if(BAUDCONbits.RCIDL == 0) return;
 22484  0058C0  BCB8               	btfsc	184,6,c	;volatile
 22485  0058C2  EF65  F02C         	goto	i2u742_41
 22486  0058C6  EF67  F02C         	goto	i2u742_40
 22487  0058CA                     i2u742_41:
 22488  0058CA  EF69  F02C         	goto	i2l431
 22489  0058CE                     i2u742_40:
 22490  0058CE  EFA1  F02C         	goto	i2l432
 22491  0058D2                     i2l431:
 22492                           
 22493                           ;src/driver/usart.c: 81:  c = RCREG;
 22494  0058D2  CFAE F005          	movff	4014,usart_rx_irq_handler@c	;volatile
 22495                           
 22496                           ;src/driver/usart.c: 84:     if(RCSTAbits.FERR) {
 22497  0058D6  A4AB               	btfss	171,2,c	;volatile
 22498  0058D8  EF70  F02C         	goto	i2u743_41
 22499  0058DC  EF72  F02C         	goto	i2u743_40
 22500  0058E0                     i2u743_41:
 22501  0058E0  EF74  F02C         	goto	i2l433
 22502  0058E4                     i2u743_40:
 22503  0058E4  EFA1  F02C         	goto	i2l432
 22504  0058E8                     i2l433:
 22505                           
 22506                           ;src/driver/usart.c: 87:     if(RCSTAbits.OERR) {
 22507  0058E8  A2AB               	btfss	171,1,c	;volatile
 22508  0058EA  EF79  F02C         	goto	i2u744_41
 22509  0058EE  EF7B  F02C         	goto	i2u744_40
 22510  0058F2                     i2u744_41:
 22511  0058F2  EF7F  F02C         	goto	i2l6728
 22512  0058F6                     i2u744_40:
 22513  0058F6                     
 22514                           ;src/driver/usart.c: 89:         RCSTAbits.CREN = 0;
 22515  0058F6  98AB               	bcf	171,4,c	;volatile
 22516                           
 22517                           ;src/driver/usart.c: 90:         RCSTAbits.CREN = 1;
 22518  0058F8  88AB               	bsf	171,4,c	;volatile
 22519                           
 22520                           ;src/driver/usart.c: 91:         return;
 22521  0058FA  EFA1  F02C         	goto	i2l432
 22522  0058FE                     i2l6728:
 22523                           
 22524                           ;src/driver/usart.c: 95:  wposn = (g_usart_wpos+1) % sizeof(g_usart_buf);
 22525  0058FE  0E01               	movlw	1
 22526  005900  246B               	addwf	_g_usart_wpos^0,w,c	;volatile
 22527  005902  6E03               	movwf	??_usart_rx_irq_handler^0,c
 22528  005904  0E00               	movlw	0
 22529  005906  206C               	addwfc	(_g_usart_wpos+1)^0,w,c	;volatile
 22530  005908  6E04               	movwf	(??_usart_rx_irq_handler+1)^0,c
 22531  00590A  0E7F               	movlw	127
 22532  00590C  1403               	andwf	??_usart_rx_irq_handler^0,w,c
 22533  00590E  6E06               	movwf	usart_rx_irq_handler@wposn^0,c	;volatile
 22534  005910  6A07               	clrf	(usart_rx_irq_handler@wposn+1)^0,c	;volatile
 22535                           
 22536                           ;src/driver/usart.c: 96:  if(wposn != g_usart_rpos) {
 22537  005912  506D               	movf	_g_usart_rpos^0,w,c	;volatile
 22538  005914  1806               	xorwf	usart_rx_irq_handler@wposn^0,w,c	;volatile
 22539  005916  E109               	bnz	i2u745_40
 22540  005918  506E               	movf	(_g_usart_rpos+1)^0,w,c	;volatile
 22541  00591A  1807               	xorwf	(usart_rx_irq_handler@wposn+1)^0,w,c	;volatile
 22542  00591C  B4D8               	btfsc	status,2,c
 22543  00591E  EF93  F02C         	goto	i2u745_41
 22544  005922  EF95  F02C         	goto	i2u745_40
 22545  005926                     i2u745_41:
 22546  005926  EFA1  F02C         	goto	i2l432
 22547  00592A                     i2u745_40:
 22548  00592A                     
 22549                           ;src/driver/usart.c: 97:   g_usart_buf[g_usart_wpos] = c;
 22550  00592A  0E00               	movlw	low _g_usart_buf
 22551  00592C  246B               	addwf	_g_usart_wpos^0,w,c	;volatile
 22552  00592E  6ED9               	movwf	fsr2l,c
 22553  005930  0E03               	movlw	high _g_usart_buf
 22554  005932  206C               	addwfc	(_g_usart_wpos+1)^0,w,c	;volatile
 22555  005934  6EDA               	movwf	fsr2h,c
 22556  005936  C005  FFDF         	movff	usart_rx_irq_handler@c,indf2	;volatile
 22557  00593A                     
 22558                           ;src/driver/usart.c: 98:   g_usart_wpos = wposn;
 22559  00593A  C006  F06B         	movff	usart_rx_irq_handler@wposn,_g_usart_wpos	;volatile
 22560  00593E  C007  F06C         	movff	usart_rx_irq_handler@wposn+1,_g_usart_wpos+1	;volatile
 22561  005942                     i2l432:
 22562  005942  0012               	return		;funcret
 22563  005944                     __end_of_usart_rx_irq_handler:
 22564                           	opt callstack 0
 22565                           
 22566                           	psect	text99
 22567  000000                     __ptext99:
 22568                           	opt callstack 0
 22569  000000                     
 22570                           	psect	rparam
 22571  0000                     
 22572                           	psect	temp
 22573  000073                     btemp:
 22574                           	opt callstack 0
 22575  000073                     	ds	1
 22576  0000                     int$flags	set	btemp
 22577  0000                     wtemp8	set	btemp+1
 22578  0000                     ttemp5	set	btemp+1
 22579  0000                     ttemp6	set	btemp+4
 22580  0000                     ttemp7	set	btemp+8
 22581                           tosu	equ	0xFFF
 22582                           tosh	equ	0xFFE
 22583                           tosl	equ	0xFFD
 22584                           stkptr	equ	0xFFC
 22585                           pclatu	equ	0xFFB
 22586                           pclath	equ	0xFFA
 22587                           pcl	equ	0xFF9
 22588                           tblptru	equ	0xFF8
 22589                           tblptrh	equ	0xFF7
 22590                           tblptrl	equ	0xFF6
 22591                           tablat	equ	0xFF5
 22592                           prodh	equ	0xFF4
 22593                           prodl	equ	0xFF3
 22594                           indf0	equ	0xFEF
 22595                           postinc0	equ	0xFEE
 22596                           postdec0	equ	0xFED
 22597                           preinc0	equ	0xFEC
 22598                           plusw0	equ	0xFEB
 22599                           fsr0h	equ	0xFEA
 22600                           fsr0l	equ	0xFE9
 22601                           wreg	equ	0xFE8
 22602                           indf1	equ	0xFE7
 22603                           postinc1	equ	0xFE6
 22604                           postdec1	equ	0xFE5
 22605                           preinc1	equ	0xFE4
 22606                           plusw1	equ	0xFE3
 22607                           fsr1h	equ	0xFE2
 22608                           fsr1l	equ	0xFE1
 22609                           bsr	equ	0xFE0
 22610                           indf2	equ	0xFDF
 22611                           postinc2	equ	0xFDE
 22612                           postdec2	equ	0xFDD
 22613                           preinc2	equ	0xFDC
 22614                           plusw2	equ	0xFDB
 22615                           fsr2h	equ	0xFDA
 22616                           fsr2l	equ	0xFD9
 22617                           status	equ	0xFD8


Data Sizes:
    Strings     1223
    Constant    1232
    Data        145
    BSS         423
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    102     114
    BANK0           128    128     128
    BANK1           256    136     255
    BANK2           256      6     230
    BANK3           256      0     213
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    g_i2c_bus.setbaud	PTR FTN(PTR struct i2c_dev__,int ,)int  size(2) Largest target is 0

    g_i2c_bus.transfer	PTR FTN(PTR struct i2c_dev__,PTR struct i2c_msg,int ,)int  size(2) Largest target is 0
		 -> i2c_transfer_native(), 

    usart_rx_irq_handler@udata	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    handler$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    adf4351_get_lock@ctx	PTR struct adf4351_ctx size(2) Largest target is 55
		 -> g_adf4351(BANK2[55]), 

    check_ADF5341_status@ctx	PTR struct adf4351_ctx size(2) Largest target is 55
		 -> g_adf4351(BANK2[55]), 

    S1984$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S33$0$1	PTR struct i2c_msg size(2) Largest target is 16
		 -> smbus16_write_regset@msg(COMRAM[7]), smbus16_read_short@msg(COMRAM[14]), smbus16_write_short@msg(COMRAM[7]), smbus16_read_data_raw@msg(COMRAM[14]), 
		 -> smbus16_read_data@msg(COMRAM[14]), smbus16_read_byte@msg(COMRAM[14]), smbus16_write_byte@msg(COMRAM[7]), smbus16_write_data_raw@msg(COMRAM[14]), 
		 -> smbus16_write_data@msg(COMRAM[14]), smbus8_write_regset@msg(COMRAM[7]), smbus8_read_short@msg(COMRAM[14]), smbus8_read_data@msg(COMRAM[14]), 
		 -> smbus8_read_byte@msg(BANK0[14]), smbus8_write_short@msg(COMRAM[7]), smbus8_write_data@msg(BANK0[14]), smbus8_write_byte@msg(BANK0[7]), 
		 -> i2c_write_data@msg(COMRAM[7]), i2c_read_data@msg(COMRAM[7]), i2c_probe_addr@msg(BANK0[7]), 

    S33$0$0	PTR struct i2c_dev__ size(2) Largest target is 8
		 -> g_i2c_bus(BANK1[8]), NULL(NULL[0]), 

    S33$1$0	PTR struct i2c_dev__ size(2) Largest target is 0

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_87(CODE[3]), STR_83(CODE[3]), STR_78(CODE[3]), STR_73(CODE[3]), 
		 -> STR_69(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_87(CODE[3]), STR_83(CODE[3]), STR_78(CODE[3]), STR_73(CODE[3]), 
		 -> STR_69(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 74
		 -> STR_66(CODE[48]), STR_65(CODE[69]), STR_64(CODE[40]), STR_30(CODE[21]), 
		 -> STR_29(CODE[25]), STR_28(CODE[32]), STR_27(CODE[35]), STR_26(CODE[29]), 
		 -> STR_25(CODE[32]), STR_24(CODE[12]), STR_23(CODE[14]), STR_22(CODE[27]), 
		 -> STR_21(CODE[24]), STR_20(CODE[13]), STR_19(CODE[43]), STR_18(CODE[19]), 
		 -> STR_17(CODE[13]), STR_16(CODE[15]), STR_15(CODE[23]), STR_14(CODE[16]), 
		 -> STR_13(CODE[35]), STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[16]), 
		 -> STR_9(CODE[5]), STR_8(CODE[22]), STR_7(CODE[28]), STR_6(CODE[25]), 
		 -> STR_5(CODE[55]), STR_4(CODE[72]), STR_3(CODE[74]), STR_2(CODE[16]), 
		 -> STR_1(CODE[18]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 74
		 -> STR_66(CODE[48]), STR_65(CODE[69]), STR_64(CODE[40]), STR_30(CODE[21]), 
		 -> STR_29(CODE[25]), STR_28(CODE[32]), STR_27(CODE[35]), STR_26(CODE[29]), 
		 -> STR_25(CODE[32]), STR_24(CODE[12]), STR_23(CODE[14]), STR_22(CODE[27]), 
		 -> STR_21(CODE[24]), STR_20(CODE[13]), STR_19(CODE[43]), STR_18(CODE[19]), 
		 -> STR_17(CODE[13]), STR_16(CODE[15]), STR_15(CODE[23]), STR_14(CODE[16]), 
		 -> STR_13(CODE[35]), STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[16]), 
		 -> STR_9(CODE[5]), STR_8(CODE[22]), STR_7(CODE[28]), STR_6(CODE[25]), 
		 -> STR_5(CODE[55]), STR_4(CODE[72]), STR_3(CODE[74]), STR_2(CODE[16]), 
		 -> STR_1(CODE[18]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), itoa@buffer(BANK1[12]), STR_63(CODE[5]), GPS_lon(BANK1[15]), 
		 -> STR_62(CODE[5]), GPS_lat(BANK1[15]), STR_61(CODE[8]), STR_60(CODE[5]), 
		 -> STR_59(CODE[4]), STR_58(CODE[4]), STR_57(CODE[6]), STR_56(CODE[5]), 
		 -> STR_55(CODE[4]), STR_54(CODE[4]), STR_53(CODE[10]), STR_52(CODE[17]), 
		 -> STR_51(CODE[17]), STR_50(CODE[17]), STR_49(CODE[7]), STR_48(CODE[17]), 
		 -> STR_47(CODE[17]), STR_46(CODE[17]), STR_45(CODE[7]), STR_44(CODE[5]), 
		 -> STR_43(CODE[5]), STR_42(CODE[5]), STR_41(CODE[5]), STR_40(CODE[3]), 
		 -> STR_39(CODE[17]), STR_38(CODE[17]), STR_37(CODE[17]), STR_36(CODE[17]), 
		 -> STR_35(CODE[14]), STR_34(CODE[15]), STR_33(CODE[15]), STR_32(CODE[12]), 
		 -> STR_31(CODE[17]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), itoa@buffer(BANK1[12]), STR_63(CODE[5]), GPS_lon(BANK1[15]), 
		 -> STR_62(CODE[5]), GPS_lat(BANK1[15]), STR_61(CODE[8]), STR_60(CODE[5]), 
		 -> STR_59(CODE[4]), STR_58(CODE[4]), STR_57(CODE[6]), STR_56(CODE[5]), 
		 -> STR_55(CODE[4]), STR_54(CODE[4]), STR_53(CODE[10]), STR_52(CODE[17]), 
		 -> STR_51(CODE[17]), STR_50(CODE[17]), STR_49(CODE[7]), STR_48(CODE[17]), 
		 -> STR_47(CODE[17]), STR_46(CODE[17]), STR_45(CODE[7]), STR_44(CODE[5]), 
		 -> STR_43(CODE[5]), STR_42(CODE[5]), STR_41(CODE[5]), STR_40(CODE[3]), 
		 -> STR_39(CODE[17]), STR_38(CODE[17]), STR_37(CODE[17]), STR_36(CODE[17]), 
		 -> STR_35(CODE[14]), STR_34(CODE[15]), STR_33(CODE[15]), STR_32(CODE[12]), 
		 -> STR_31(CODE[17]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 74
		 -> STR_66(CODE[48]), STR_65(CODE[69]), STR_64(CODE[40]), STR_30(CODE[21]), 
		 -> STR_29(CODE[25]), STR_28(CODE[32]), STR_27(CODE[35]), STR_26(CODE[29]), 
		 -> STR_25(CODE[32]), STR_24(CODE[12]), STR_23(CODE[14]), STR_22(CODE[27]), 
		 -> STR_21(CODE[24]), STR_20(CODE[13]), STR_19(CODE[43]), STR_18(CODE[19]), 
		 -> STR_17(CODE[13]), STR_16(CODE[15]), STR_15(CODE[23]), STR_14(CODE[16]), 
		 -> STR_13(CODE[35]), STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[16]), 
		 -> STR_9(CODE[5]), STR_8(CODE[22]), STR_7(CODE[28]), STR_6(CODE[25]), 
		 -> STR_5(CODE[55]), STR_4(CODE[72]), STR_3(CODE[74]), STR_2(CODE[16]), 
		 -> STR_1(CODE[18]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    memset@dest	PTR void  size(2) Largest target is 240
		 -> g_adf4351(BANK2[55]), g_i2c_bus(BANK1[8]), eval_gps@elem(BANK1[240]), itoa@buffer(BANK1[12]), 
		 -> print_char@map(BANK0[8]), lcd_clear_screen@buf(BANK1[128]), 

    memset@s	PTR unsigned char  size(2) Largest target is 240
		 -> g_adf4351(BANK2[55]), g_i2c_bus(BANK1[8]), eval_gps@elem(BANK1[240]), itoa@buffer(BANK1[12]), 
		 -> print_char@map(BANK0[8]), lcd_clear_screen@buf(BANK1[128]), 

    memcpy@d1	PTR void  size(2) Largest target is 240
		 -> eval_gps@elem(BANK1[240]), GPS_lon(BANK1[15]), GPS_lat(BANK1[15]), show_display@old_GPS_lon(BANK2[15]), 
		 -> show_display@old_GPS_lat(BANK2[15]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 240
		 -> eval_gps@elem(BANK1[240]), GPS_lon(BANK1[15]), GPS_lat(BANK1[15]), show_display@old_GPS_lon(BANK2[15]), 
		 -> show_display@old_GPS_lat(BANK2[15]), 

    memcpy@s1	PTR const void  size(2) Largest target is 240
		 -> eval_gps@elem(BANK1[240]), GPS_lon(BANK1[15]), GPS_lat(BANK1[15]), NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 240
		 -> eval_gps@elem(BANK1[240]), GPS_lon(BANK1[15]), GPS_lat(BANK1[15]), NULL(NULL[0]), 

    memcmp@vr	PTR const void  size(2) Largest target is 15
		 -> GPS_lon(BANK1[15]), GPS_lat(BANK1[15]), 

    memcmp@r	PTR const unsigned char  size(2) Largest target is 15
		 -> GPS_lon(BANK1[15]), GPS_lat(BANK1[15]), 

    memcmp@vl	PTR const void  size(2) Largest target is 15
		 -> show_display@old_GPS_lon(BANK2[15]), show_display@old_GPS_lat(BANK2[15]), 

    memcmp@l	PTR const unsigned char  size(2) Largest target is 15
		 -> show_display@old_GPS_lon(BANK2[15]), show_display@old_GPS_lat(BANK2[15]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 240
		 -> STR_66(CODE[48]), STR_65(CODE[69]), STR_64(CODE[40]), eval_gps@elem(BANK1[240]), 
		 -> STR_30(CODE[21]), STR_29(CODE[25]), STR_28(CODE[32]), STR_27(CODE[35]), 
		 -> STR_26(CODE[29]), STR_25(CODE[32]), STR_24(CODE[12]), STR_23(CODE[14]), 
		 -> STR_22(CODE[27]), STR_21(CODE[24]), STR_20(CODE[13]), STR_19(CODE[43]), 
		 -> STR_18(CODE[19]), STR_17(CODE[13]), STR_16(CODE[15]), STR_15(CODE[23]), 
		 -> STR_14(CODE[16]), STR_13(CODE[35]), STR_12(CODE[21]), STR_11(CODE[21]), 
		 -> STR_10(CODE[16]), STR_9(CODE[5]), STR_8(CODE[22]), STR_7(CODE[28]), 
		 -> STR_6(CODE[25]), STR_5(CODE[55]), STR_4(CODE[72]), STR_3(CODE[74]), 
		 -> STR_2(CODE[16]), STR_1(CODE[18]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 74
		 -> STR_66(CODE[48]), STR_65(CODE[69]), STR_64(CODE[40]), STR_30(CODE[21]), 
		 -> STR_29(CODE[25]), STR_28(CODE[32]), STR_27(CODE[35]), STR_26(CODE[29]), 
		 -> STR_25(CODE[32]), STR_24(CODE[12]), STR_23(CODE[14]), STR_22(CODE[27]), 
		 -> STR_21(CODE[24]), STR_20(CODE[13]), STR_19(CODE[43]), STR_18(CODE[19]), 
		 -> STR_17(CODE[13]), STR_16(CODE[15]), STR_15(CODE[23]), STR_14(CODE[16]), 
		 -> STR_13(CODE[35]), STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[16]), 
		 -> STR_9(CODE[5]), STR_8(CODE[22]), STR_7(CODE[28]), STR_6(CODE[25]), 
		 -> STR_5(CODE[55]), STR_4(CODE[72]), STR_3(CODE[74]), STR_2(CODE[16]), 
		 -> STR_1(CODE[18]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 74
		 -> STR_66(CODE[48]), STR_65(CODE[69]), STR_64(CODE[40]), STR_30(CODE[21]), 
		 -> STR_29(CODE[25]), STR_28(CODE[32]), STR_27(CODE[35]), STR_26(CODE[29]), 
		 -> STR_25(CODE[32]), STR_24(CODE[12]), STR_23(CODE[14]), STR_22(CODE[27]), 
		 -> STR_21(CODE[24]), STR_20(CODE[13]), STR_19(CODE[43]), STR_18(CODE[19]), 
		 -> STR_17(CODE[13]), STR_16(CODE[15]), STR_15(CODE[23]), STR_14(CODE[16]), 
		 -> STR_13(CODE[35]), STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[16]), 
		 -> STR_9(CODE[5]), STR_8(CODE[22]), STR_7(CODE[28]), STR_6(CODE[25]), 
		 -> STR_5(CODE[55]), STR_4(CODE[72]), STR_3(CODE[74]), STR_2(CODE[16]), 
		 -> STR_1(CODE[18]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    PIN_LNB_FAULT_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_LNB_FAULT_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_LNB_QRG1_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_LNB_QRG1_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_LNB_QRG2_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_LNB_QRG2_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_SJ6_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_SJ6_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_SJ5_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_SJ5_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_SJ4_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_SJ4_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_SJ3_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_SJ3_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_USART_RX_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_USART_RX_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_USART_TX_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_USART_TX_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_I2C_SDA_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_I2C_SDA_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_I2C_SCL_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_I2C_SCL_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_LED2	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_LED2_DEF(CODE[5]), 

    PIN_LED2_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_LED2_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_LED_LNB_GOOD_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_LED_LNB_GOOD_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_LED1	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_LED1_DEF(CODE[5]), 

    PIN_LED1_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_LED1_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_LED_ADF_LOCK_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_LED_ADF_LOCK_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_LED0	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_LED0_DEF(CODE[5]), 

    PIN_LED0_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_LED0_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_LED_CPU_OK_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_LED_CPU_OK_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_LED3	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_LED3_DEF(CODE[5]), 

    PIN_LED3_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_LED3_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_LED_SI_LOCK_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_LED_SI_LOCK_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_SI5328_CS_CA_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_SI5328_CS_CA_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_SI5328_LOL_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_SI5328_LOL_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_SIO_CLK_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_SIO_CLK_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_SIO_DATA_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_SIO_DATA_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_ADF_LE_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_ADF_LE_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_ADF_CE_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_ADF_CE_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_ADF_LOCK_DEF.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_ADF_LOCK_DEF.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    setADF4351frequency@p	PTR const unsigned long  size(2) Largest target is 40
		 -> freq_table_27_OPT(CODE[40]), freq_table_27_26(CODE[40]), freq_table_25_25(CODE[40]), freq_table_25_24(CODE[40]), 

    g_i2c_bus.ops.setbaud	PTR FTN(PTR struct i2c_dev__,int ,)int  size(2) Largest target is 0

    g_i2c_bus.ops.transfer	PTR FTN(PTR struct i2c_dev__,PTR struct i2c_msg,int ,)int  size(2) Largest target is 2
		 -> i2c_transfer_native(), 

    PIN_LNB_QRG1.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_LNB_QRG1.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_LNB_QRG1	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_LNB_QRG1_DEF(CODE[5]), 

    PIN_LNB_QRG2.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_LNB_QRG2.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_LNB_QRG2	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_LNB_QRG2_DEF(CODE[5]), 

    PIN_SJ6.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_SJ6.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_SJ6	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_SJ6_DEF(CODE[5]), 

    PIN_SJ5.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_SJ5.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_SJ5	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_SJ5_DEF(CODE[5]), 

    PIN_SJ4.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_SJ4.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_SJ4	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_SJ4_DEF(CODE[5]), 

    PIN_SJ3.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_SJ3.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_SJ3	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_SJ3_DEF(CODE[5]), 

    PIN_USART_RX.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_USART_RX.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_USART_RX	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_USART_RX_DEF(CODE[5]), 

    PIN_USART_TX.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_USART_TX.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_USART_TX	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_USART_TX_DEF(CODE[5]), 

    PIN_I2C_SDA.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_I2C_SDA.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_I2C_SDA	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_I2C_SDA_DEF(CODE[5]), 

    PIN_I2C_SCL.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_I2C_SCL.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_I2C_SCL	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_I2C_SCL_DEF(CODE[5]), 

    PIN_LED_CPU_OK.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_LED_CPU_OK.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_LED_CPU_OK	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_LED_CPU_OK_DEF(CODE[5]), 

    PIN_SI5328_CS_CA.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_SI5328_CS_CA.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_SI5328_CS_CA	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_SI5328_CS_CA_DEF(CODE[5]), 

    send_UBX_string@payload	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 240
		 -> eval_gps@elem(BANK1[240]), GPS_lon(BANK1[15]), GPS_lat(BANK1[15]), show_display@old_GPS_lon(BANK2[15]), 
		 -> show_display@old_GPS_lat(BANK2[15]), 

    show_display@p	PTR unsigned char  size(2) Largest target is 12
		 -> itoa@buffer(BANK1[12]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 12
		 -> itoa@buffer(BANK1[12]), 

    print_string@s	PTR unsigned char  size(2) Largest target is 17
		 -> itoa@buffer(BANK1[12]), STR_63(CODE[5]), GPS_lon(BANK1[15]), STR_62(CODE[5]), 
		 -> GPS_lat(BANK1[15]), STR_61(CODE[8]), STR_60(CODE[5]), STR_59(CODE[4]), 
		 -> STR_58(CODE[4]), STR_57(CODE[6]), STR_56(CODE[5]), STR_55(CODE[4]), 
		 -> STR_54(CODE[4]), STR_53(CODE[10]), STR_52(CODE[17]), STR_51(CODE[17]), 
		 -> STR_50(CODE[17]), STR_49(CODE[7]), STR_48(CODE[17]), STR_47(CODE[17]), 
		 -> STR_46(CODE[17]), STR_45(CODE[7]), STR_44(CODE[5]), STR_43(CODE[5]), 
		 -> STR_42(CODE[5]), STR_41(CODE[5]), STR_40(CODE[3]), STR_39(CODE[17]), 
		 -> STR_38(CODE[17]), STR_37(CODE[17]), STR_36(CODE[17]), STR_35(CODE[14]), 
		 -> STR_34(CODE[15]), STR_33(CODE[15]), STR_32(CODE[12]), STR_31(CODE[17]), 

    lcd_draw8x8@buffer	PTR unsigned char  size(2) Largest target is 8
		 -> print_char@map(BANK0[8]), 

    ssd1306_data@data	PTR unsigned char  size(2) Largest target is 128
		 -> print_char@map(BANK0[8]), lcd_clear_screen@buf(BANK1[128]), 

    ssd1306_command@cmd	PTR unsigned char  size(2) Largest target is 27
		 -> ssd1306_setpos@data(BANK0[3]), ssd1306_init_commands(BANK2[27]), 

    lcd_i2c	PTR struct i2c_dev__ size(2) Largest target is 8
		 -> g_i2c_bus(BANK1[8]), NULL(NULL[0]), 

    lcd_init@i2c	PTR struct i2c_dev__ size(2) Largest target is 8
		 -> g_i2c_bus(BANK1[8]), 

    read_reg@i2c	PTR struct i2c_dev__ size(2) Largest target is 8
		 -> g_i2c_bus(BANK1[8]), 

    write_regset@set	PTR const struct . size(2) Largest target is 58
		 -> reg_set_LNB_LO_27(BANK2[10]), reg_set_LNB_LO_26(BANK2[10]), reg_set_LNB_LO_25(BANK2[10]), reg_set_LNB_LO_24(BANK1[10]), 
		 -> reg_set_univ(CODE[58]), NULL(NULL[0]), 

    write_regset@i2c	PTR struct i2c_dev__ size(2) Largest target is 8
		 -> g_i2c_bus(BANK1[8]), 

    check_si5328_status@i2c	PTR struct i2c_dev__ size(2) Largest target is 8
		 -> g_i2c_bus(BANK1[8]), 

    PIN_LED_SI_LOCK.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_LED_SI_LOCK.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_LED_SI_LOCK	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_LED_SI_LOCK_DEF(CODE[5]), 

    PIN_SI5328_LOL.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_SI5328_LOL.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_SI5328_LOL	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_SI5328_LOL_DEF(CODE[5]), 

    si5328_perform_ical@i2c	PTR struct i2c_dev__ size(2) Largest target is 8
		 -> g_i2c_bus(BANK1[8]), 

    si5328_set_freq@i2c	PTR struct i2c_dev__ size(2) Largest target is 8
		 -> g_i2c_bus(BANK1[8]), 

    si5328_set_freq@p	PTR struct . size(2) Largest target is 10
		 -> reg_set_LNB_LO_27(BANK2[10]), reg_set_LNB_LO_26(BANK2[10]), reg_set_LNB_LO_25(BANK2[10]), reg_set_LNB_LO_24(BANK1[10]), 
		 -> NULL(NULL[0]), 

    si5328_init@i2c	PTR struct i2c_dev__ size(2) Largest target is 8
		 -> g_i2c_bus(BANK1[8]), 

    irq_set_handler@handler	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> usart_rx_irq_handler(), 

    S1984$udata	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    g_irq_handler_info.udata	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1984$handler	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> usart_rx_irq_handler(), 

    g_irq_handler_info.handler	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> usart_rx_irq_handler(), 

    irq_set_handler@udata	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    check_LNB_status@i2c	PTR struct i2c_dev__ size(2) Largest target is 8
		 -> g_i2c_bus(BANK1[8]), 

    PIN_LED_LNB_GOOD.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_LED_LNB_GOOD.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_LED_LNB_GOOD	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_LED_LNB_GOOD_DEF(CODE[5]), 

    PIN_LNB_FAULT.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_LNB_FAULT.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_LNB_FAULT	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_LNB_FAULT_DEF(CODE[5]), 

    lnb_do_configure@i2c	PTR struct i2c_dev__ size(2) Largest target is 8
		 -> g_i2c_bus(BANK1[8]), 

    lnb_configure@i2c	PTR struct i2c_dev__ size(2) Largest target is 8
		 -> g_i2c_bus(BANK1[8]), 

    i2c_transfer_native@bdata	PTR unsigned char  size(2) Largest target is 128
		 -> print_char@map(BANK0[8]), lcd_clear_screen@buf(BANK1[128]), ssd1306_setpos@data(BANK0[3]), ssd1306_databyte@data(COMRAM[1]), 
		 -> ssd1306_init_commands(BANK2[27]), read_reg@val(BANK0[1]), LNB_error(BANK1[1]), lnb_do_configure@value(BANK0[1]), 
		 -> smbus16_write_regset@tmp(COMRAM[4]), smbus16_read_short@reg(COMRAM[2]), smbus16_write_short@tmp(COMRAM[3]), smbus16_read_data_raw@ger(COMRAM[2]), 
		 -> smbus16_read_data@ger(COMRAM[2]), smbus16_read_byte@reg(COMRAM[2]), smbus16_write_byte@tmp(COMRAM[3]), smbus16_write_data_raw@ger(COMRAM[2]), 
		 -> smbus16_write_data@ger(COMRAM[2]), smbus8_write_regset@tmp(COMRAM[2]), smbus8_read_short@reg(COMRAM[1]), smbus8_read_data@reg(COMRAM[1]), 
		 -> smbus8_read_byte@reg(BANK0[1]), smbus8_write_short@tmp(COMRAM[4]), smbus8_write_data@reg(BANK0[1]), smbus8_write_byte@tmp(BANK0[2]), 
		 -> i2c_write_byte@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_transfer_native@pmsg.data	PTR void  size(2) Largest target is 128
		 -> print_char@map(BANK0[8]), lcd_clear_screen@buf(BANK1[128]), ssd1306_setpos@data(BANK0[3]), ssd1306_databyte@data(COMRAM[1]), 
		 -> ssd1306_init_commands(BANK2[27]), read_reg@val(BANK0[1]), LNB_error(BANK1[1]), lnb_do_configure@value(BANK0[1]), 
		 -> smbus16_write_regset@tmp(COMRAM[4]), smbus16_read_short@reg(COMRAM[2]), smbus16_write_short@tmp(COMRAM[3]), smbus16_read_data_raw@ger(COMRAM[2]), 
		 -> smbus16_read_data@ger(COMRAM[2]), smbus16_read_byte@reg(COMRAM[2]), smbus16_write_byte@tmp(COMRAM[3]), smbus16_write_data_raw@ger(COMRAM[2]), 
		 -> smbus16_write_data@ger(COMRAM[2]), smbus8_write_regset@tmp(COMRAM[2]), smbus8_read_short@reg(COMRAM[1]), smbus8_read_data@reg(COMRAM[1]), 
		 -> smbus8_read_byte@reg(BANK0[1]), smbus8_write_short@tmp(COMRAM[4]), smbus8_write_data@reg(BANK0[1]), smbus8_write_byte@tmp(BANK0[2]), 
		 -> i2c_write_byte@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_transfer_native@msg	PTR struct i2c_msg size(2) Largest target is 16
		 -> smbus16_write_regset@msg(COMRAM[7]), smbus16_read_short@msg(COMRAM[14]), smbus16_write_short@msg(COMRAM[7]), smbus16_read_data_raw@msg(COMRAM[14]), 
		 -> smbus16_read_data@msg(COMRAM[14]), smbus16_read_byte@msg(COMRAM[14]), smbus16_write_byte@msg(COMRAM[7]), smbus16_write_data_raw@msg(COMRAM[14]), 
		 -> smbus16_write_data@msg(COMRAM[14]), smbus8_write_regset@msg(COMRAM[7]), smbus8_read_short@msg(COMRAM[14]), smbus8_read_data@msg(COMRAM[14]), 
		 -> smbus8_read_byte@msg(BANK0[14]), smbus8_write_short@msg(COMRAM[7]), smbus8_write_data@msg(BANK0[14]), smbus8_write_byte@msg(BANK0[7]), 
		 -> i2c_write_data@msg(COMRAM[7]), i2c_read_data@msg(COMRAM[7]), i2c_probe_addr@msg(BANK0[7]), 

    i2c_transfer_native@pmsg	PTR struct i2c_msg size(2) Largest target is 16
		 -> smbus16_write_regset@msg(COMRAM[7]), smbus16_read_short@msg(COMRAM[14]), smbus16_write_short@msg(COMRAM[7]), smbus16_read_data_raw@msg(COMRAM[14]), 
		 -> smbus16_read_data@msg(COMRAM[14]), smbus16_read_byte@msg(COMRAM[14]), smbus16_write_byte@msg(COMRAM[7]), smbus16_write_data_raw@msg(COMRAM[14]), 
		 -> smbus16_write_data@msg(COMRAM[14]), smbus8_write_regset@msg(COMRAM[7]), smbus8_read_short@msg(COMRAM[14]), smbus8_read_data@msg(COMRAM[14]), 
		 -> smbus8_read_byte@msg(BANK0[14]), smbus8_write_short@msg(COMRAM[7]), smbus8_write_data@msg(BANK0[14]), smbus8_write_byte@msg(BANK0[7]), 
		 -> i2c_write_data@msg(COMRAM[7]), i2c_read_data@msg(COMRAM[7]), i2c_probe_addr@msg(BANK0[7]), 

    i2c_transfer_native@dev	PTR struct i2c_dev__ size(2) Largest target is 8
		 -> g_i2c_bus(BANK1[8]), NULL(NULL[0]), 

    i2c_transfer_native@ctx	PTR struct i2c_data_native size(2) Largest target is 8
		 -> g_i2c_bus(BANK1[8]), NULL(NULL[0]), 

    i2c_read@data	PTR unsigned char  size(2) Largest target is 128
		 -> print_char@map(BANK0[8]), lcd_clear_screen@buf(BANK1[128]), ssd1306_setpos@data(BANK0[3]), ssd1306_databyte@data(COMRAM[1]), 
		 -> ssd1306_init_commands(BANK2[27]), read_reg@val(BANK0[1]), LNB_error(BANK1[1]), lnb_do_configure@value(BANK0[1]), 
		 -> smbus16_write_regset@tmp(COMRAM[4]), smbus16_read_short@reg(COMRAM[2]), smbus16_write_short@tmp(COMRAM[3]), smbus16_read_data_raw@ger(COMRAM[2]), 
		 -> smbus16_read_data@ger(COMRAM[2]), smbus16_read_byte@reg(COMRAM[2]), smbus16_write_byte@tmp(COMRAM[3]), smbus16_write_data_raw@ger(COMRAM[2]), 
		 -> smbus16_write_data@ger(COMRAM[2]), smbus8_write_regset@tmp(COMRAM[2]), smbus8_read_short@reg(COMRAM[1]), smbus8_read_data@reg(COMRAM[1]), 
		 -> smbus8_read_byte@reg(BANK0[1]), smbus8_write_short@tmp(COMRAM[4]), smbus8_write_data@reg(BANK0[1]), smbus8_write_byte@tmp(BANK0[2]), 
		 -> i2c_write_byte@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_stop@ctx	PTR struct i2c_data_native size(2) Largest target is 8
		 -> g_i2c_bus(BANK1[8]), NULL(NULL[0]), 

    i2c_reset@ctx.ops.setbaud	PTR FTN(PTR struct i2c_dev__,int ,)int  size(2) Largest target is 0

    i2c_reset@ctx.ops.transfer	PTR FTN(PTR struct i2c_dev__,PTR struct i2c_msg,int ,)int  size(2) Largest target is 2
		 -> i2c_transfer_native(), 

    i2c_reset@ctx	PTR struct i2c_data_native size(2) Largest target is 8
		 -> g_i2c_bus(BANK1[8]), NULL(NULL[0]), 

    i2c_native_init@ctx.ops.setbaud	PTR FTN(PTR struct i2c_dev__,int ,)int  size(2) Largest target is 0

    i2c_native_init@ctx.ops.transfer	PTR FTN(PTR struct i2c_dev__,PTR struct i2c_msg,int ,)int  size(2) Largest target is 2
		 -> i2c_transfer_native(), 

    i2c_native_init@ctx	PTR struct i2c_data_native size(2) Largest target is 8
		 -> g_i2c_bus(BANK1[8]), 

    PIN_SIO_DATA.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_SIO_DATA.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_SIO_DATA	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_SIO_DATA_DEF(CODE[5]), 

    PIN_SIO_CLK.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_SIO_CLK.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_SIO_CLK	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_SIO_CLK_DEF(CODE[5]), 

    adf4351_write_reg5@ctx	PTR struct adf4351_ctx size(2) Largest target is 55
		 -> g_adf4351(BANK2[55]), 

    adf4351_write_reg4@ctx	PTR struct adf4351_ctx size(2) Largest target is 55
		 -> g_adf4351(BANK2[55]), 

    adf4351_write_reg3@ctx	PTR struct adf4351_ctx size(2) Largest target is 55
		 -> g_adf4351(BANK2[55]), 

    adf4351_write_reg2@ctx	PTR struct adf4351_ctx size(2) Largest target is 55
		 -> g_adf4351(BANK2[55]), 

    adf4351_write_reg1@ctx	PTR struct adf4351_ctx size(2) Largest target is 55
		 -> g_adf4351(BANK2[55]), 

    adf4351_write_reg0@ctx	PTR struct adf4351_ctx size(2) Largest target is 55
		 -> g_adf4351(BANK2[55]), 

    adf4351_calc_vco_core_freq@ctx	PTR struct adf4351_ctx size(2) Largest target is 55
		 -> g_adf4351(BANK2[55]), 

    adf4351_calc_rcnt_block@ctx	PTR struct adf4351_ctx size(2) Largest target is 55
		 -> g_adf4351(BANK2[55]), 

    adf4351_calc_counters@ctx	PTR struct adf4351_ctx size(2) Largest target is 55
		 -> g_adf4351(BANK2[55]), 

    adf4351_setup@ctx	PTR struct adf4351_ctx size(2) Largest target is 55
		 -> g_adf4351(BANK2[55]), 

    adf4351_default@ctx	PTR struct adf4351_ctx size(2) Largest target is 55
		 -> g_adf4351(BANK2[55]), 

    adf4351_set_tune@ctx	PTR struct adf4351_ctx size(2) Largest target is 55
		 -> g_adf4351(BANK2[55]), 

    adf4351_set_mode@ctx	PTR struct adf4351_ctx size(2) Largest target is 55
		 -> g_adf4351(BANK2[55]), 

    PIN_LED_ADF_LOCK.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_LED_ADF_LOCK.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_LED_ADF_LOCK	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_LED_ADF_LOCK_DEF(CODE[5]), 

    PIN_ADF_LOCK.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_ADF_LOCK.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_ADF_LOCK	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_ADF_LOCK_DEF(CODE[5]), 

    adf4351_set_freq@ctx	PTR struct adf4351_ctx size(2) Largest target is 55
		 -> g_adf4351(BANK2[55]), 

    PIN_ADF_CE.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_ADF_CE.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_ADF_CE	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_ADF_CE_DEF(CODE[5]), 

    S364gpio_pin_def$pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    PIN_ADF_LE.pTRIS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), TRISC(SFR[1]), TRISA(SFR[1]), 

    S364gpio_pin_def$pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_ADF_LE.pPORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTA(SFR[1]), PORTB(SFR[1]), 

    PIN_ADF_LE	const PTR const struct gpio_pin_def size(2) Largest target is 7
		 -> PIN_ADF_LE_DEF(CODE[5]), 

    sp__memset	PTR void  size(2) Largest target is 240
		 -> g_adf4351(BANK2[55]), g_i2c_bus(BANK1[8]), eval_gps@elem(BANK1[240]), itoa@buffer(BANK1[12]), 
		 -> print_char@map(BANK0[8]), lcd_clear_screen@buf(BANK1[128]), 

    adf4351_init@ctx	PTR struct adf4351_ctx size(2) Largest target is 55
		 -> g_adf4351(BANK2[55]), 

    msg.data	PTR void  size(2) Largest target is 128
		 -> print_char@map(BANK0[8]), lcd_clear_screen@buf(BANK1[128]), ssd1306_setpos@data(BANK0[3]), ssd1306_databyte@data(COMRAM[1]), 
		 -> ssd1306_init_commands(BANK2[27]), read_reg@val(BANK0[1]), LNB_error(BANK1[1]), lnb_do_configure@value(BANK0[1]), 
		 -> smbus16_write_regset@tmp(COMRAM[4]), smbus16_read_short@reg(COMRAM[2]), smbus16_write_short@tmp(COMRAM[3]), smbus16_read_data_raw@ger(COMRAM[2]), 
		 -> smbus16_read_data@ger(COMRAM[2]), smbus16_read_byte@reg(COMRAM[2]), smbus16_write_byte@tmp(COMRAM[3]), smbus16_write_data_raw@ger(COMRAM[2]), 
		 -> smbus16_write_data@ger(COMRAM[2]), smbus8_write_regset@tmp(COMRAM[2]), smbus8_read_short@reg(COMRAM[1]), smbus8_read_data@reg(COMRAM[1]), 
		 -> smbus8_read_byte@reg(BANK0[1]), smbus8_write_short@tmp(COMRAM[4]), smbus8_write_data@reg(BANK0[1]), smbus8_write_byte@tmp(BANK0[2]), 
		 -> i2c_write_byte@data(COMRAM[1]), NULL(NULL[0]), 

    smbus16_read_short@msg.data	PTR void  size(2) Largest target is 128
		 -> print_char@map(BANK0[8]), lcd_clear_screen@buf(BANK1[128]), ssd1306_setpos@data(BANK0[3]), ssd1306_databyte@data(COMRAM[1]), 
		 -> ssd1306_init_commands(BANK2[27]), read_reg@val(BANK0[1]), LNB_error(BANK1[1]), lnb_do_configure@value(BANK0[1]), 
		 -> smbus16_write_regset@tmp(COMRAM[4]), smbus16_read_short@reg(COMRAM[2]), smbus16_write_short@tmp(COMRAM[3]), smbus16_read_data_raw@ger(COMRAM[2]), 
		 -> smbus16_read_data@ger(COMRAM[2]), smbus16_read_byte@reg(COMRAM[2]), smbus16_write_byte@tmp(COMRAM[3]), smbus16_write_data_raw@ger(COMRAM[2]), 
		 -> smbus16_write_data@ger(COMRAM[2]), smbus8_write_regset@tmp(COMRAM[2]), smbus8_read_short@reg(COMRAM[1]), smbus8_read_data@reg(COMRAM[1]), 
		 -> smbus8_read_byte@reg(BANK0[1]), smbus8_write_short@tmp(COMRAM[4]), smbus8_write_data@reg(BANK0[1]), smbus8_write_byte@tmp(BANK0[2]), 
		 -> i2c_write_byte@data(COMRAM[1]), NULL(NULL[0]), 

    msg.data	PTR void  size(2) Largest target is 128
		 -> print_char@map(BANK0[8]), lcd_clear_screen@buf(BANK1[128]), ssd1306_setpos@data(BANK0[3]), ssd1306_databyte@data(COMRAM[1]), 
		 -> ssd1306_init_commands(BANK2[27]), read_reg@val(BANK0[1]), LNB_error(BANK1[1]), lnb_do_configure@value(BANK0[1]), 
		 -> smbus16_write_regset@tmp(COMRAM[4]), smbus16_read_short@reg(COMRAM[2]), smbus16_write_short@tmp(COMRAM[3]), smbus16_read_data_raw@ger(COMRAM[2]), 
		 -> smbus16_read_data@ger(COMRAM[2]), smbus16_read_byte@reg(COMRAM[2]), smbus16_write_byte@tmp(COMRAM[3]), smbus16_write_data_raw@ger(COMRAM[2]), 
		 -> smbus16_write_data@ger(COMRAM[2]), smbus8_write_regset@tmp(COMRAM[2]), smbus8_read_short@reg(COMRAM[1]), smbus8_read_data@reg(COMRAM[1]), 
		 -> smbus8_read_byte@reg(BANK0[1]), smbus8_write_short@tmp(COMRAM[4]), smbus8_write_data@reg(BANK0[1]), smbus8_write_byte@tmp(BANK0[2]), 
		 -> i2c_write_byte@data(COMRAM[1]), NULL(NULL[0]), 

    smbus16_read_data_raw@msg.data	PTR void  size(2) Largest target is 128
		 -> print_char@map(BANK0[8]), lcd_clear_screen@buf(BANK1[128]), ssd1306_setpos@data(BANK0[3]), ssd1306_databyte@data(COMRAM[1]), 
		 -> ssd1306_init_commands(BANK2[27]), read_reg@val(BANK0[1]), LNB_error(BANK1[1]), lnb_do_configure@value(BANK0[1]), 
		 -> smbus16_write_regset@tmp(COMRAM[4]), smbus16_read_short@reg(COMRAM[2]), smbus16_write_short@tmp(COMRAM[3]), smbus16_read_data_raw@ger(COMRAM[2]), 
		 -> smbus16_read_data@ger(COMRAM[2]), smbus16_read_byte@reg(COMRAM[2]), smbus16_write_byte@tmp(COMRAM[3]), smbus16_write_data_raw@ger(COMRAM[2]), 
		 -> smbus16_write_data@ger(COMRAM[2]), smbus8_write_regset@tmp(COMRAM[2]), smbus8_read_short@reg(COMRAM[1]), smbus8_read_data@reg(COMRAM[1]), 
		 -> smbus8_read_byte@reg(BANK0[1]), smbus8_write_short@tmp(COMRAM[4]), smbus8_write_data@reg(BANK0[1]), smbus8_write_byte@tmp(BANK0[2]), 
		 -> i2c_write_byte@data(COMRAM[1]), NULL(NULL[0]), 

    smbus16_read_data@msg.data	PTR void  size(2) Largest target is 128
		 -> print_char@map(BANK0[8]), lcd_clear_screen@buf(BANK1[128]), ssd1306_setpos@data(BANK0[3]), ssd1306_databyte@data(COMRAM[1]), 
		 -> ssd1306_init_commands(BANK2[27]), read_reg@val(BANK0[1]), LNB_error(BANK1[1]), lnb_do_configure@value(BANK0[1]), 
		 -> smbus16_write_regset@tmp(COMRAM[4]), smbus16_read_short@reg(COMRAM[2]), smbus16_write_short@tmp(COMRAM[3]), smbus16_read_data_raw@ger(COMRAM[2]), 
		 -> smbus16_read_data@ger(COMRAM[2]), smbus16_read_byte@reg(COMRAM[2]), smbus16_write_byte@tmp(COMRAM[3]), smbus16_write_data_raw@ger(COMRAM[2]), 
		 -> smbus16_write_data@ger(COMRAM[2]), smbus8_write_regset@tmp(COMRAM[2]), smbus8_read_short@reg(COMRAM[1]), smbus8_read_data@reg(COMRAM[1]), 
		 -> smbus8_read_byte@reg(BANK0[1]), smbus8_write_short@tmp(COMRAM[4]), smbus8_write_data@reg(BANK0[1]), smbus8_write_byte@tmp(BANK0[2]), 
		 -> i2c_write_byte@data(COMRAM[1]), NULL(NULL[0]), 

    smbus16_read_byte@msg.data	PTR void  size(2) Largest target is 128
		 -> print_char@map(BANK0[8]), lcd_clear_screen@buf(BANK1[128]), ssd1306_setpos@data(BANK0[3]), ssd1306_databyte@data(COMRAM[1]), 
		 -> ssd1306_init_commands(BANK2[27]), read_reg@val(BANK0[1]), LNB_error(BANK1[1]), lnb_do_configure@value(BANK0[1]), 
		 -> smbus16_write_regset@tmp(COMRAM[4]), smbus16_read_short@reg(COMRAM[2]), smbus16_write_short@tmp(COMRAM[3]), smbus16_read_data_raw@ger(COMRAM[2]), 
		 -> smbus16_read_data@ger(COMRAM[2]), smbus16_read_byte@reg(COMRAM[2]), smbus16_write_byte@tmp(COMRAM[3]), smbus16_write_data_raw@ger(COMRAM[2]), 
		 -> smbus16_write_data@ger(COMRAM[2]), smbus8_write_regset@tmp(COMRAM[2]), smbus8_read_short@reg(COMRAM[1]), smbus8_read_data@reg(COMRAM[1]), 
		 -> smbus8_read_byte@reg(BANK0[1]), smbus8_write_short@tmp(COMRAM[4]), smbus8_write_data@reg(BANK0[1]), smbus8_write_byte@tmp(BANK0[2]), 
		 -> i2c_write_byte@data(COMRAM[1]), NULL(NULL[0]), 

    msg.data	PTR void  size(2) Largest target is 128
		 -> print_char@map(BANK0[8]), lcd_clear_screen@buf(BANK1[128]), ssd1306_setpos@data(BANK0[3]), ssd1306_databyte@data(COMRAM[1]), 
		 -> ssd1306_init_commands(BANK2[27]), read_reg@val(BANK0[1]), LNB_error(BANK1[1]), lnb_do_configure@value(BANK0[1]), 
		 -> smbus16_write_regset@tmp(COMRAM[4]), smbus16_read_short@reg(COMRAM[2]), smbus16_write_short@tmp(COMRAM[3]), smbus16_read_data_raw@ger(COMRAM[2]), 
		 -> smbus16_read_data@ger(COMRAM[2]), smbus16_read_byte@reg(COMRAM[2]), smbus16_write_byte@tmp(COMRAM[3]), smbus16_write_data_raw@ger(COMRAM[2]), 
		 -> smbus16_write_data@ger(COMRAM[2]), smbus8_write_regset@tmp(COMRAM[2]), smbus8_read_short@reg(COMRAM[1]), smbus8_read_data@reg(COMRAM[1]), 
		 -> smbus8_read_byte@reg(BANK0[1]), smbus8_write_short@tmp(COMRAM[4]), smbus8_write_data@reg(BANK0[1]), smbus8_write_byte@tmp(BANK0[2]), 
		 -> i2c_write_byte@data(COMRAM[1]), NULL(NULL[0]), 

    smbus16_write_data_raw@msg.data	PTR void  size(2) Largest target is 128
		 -> print_char@map(BANK0[8]), lcd_clear_screen@buf(BANK1[128]), ssd1306_setpos@data(BANK0[3]), ssd1306_databyte@data(COMRAM[1]), 
		 -> ssd1306_init_commands(BANK2[27]), read_reg@val(BANK0[1]), LNB_error(BANK1[1]), lnb_do_configure@value(BANK0[1]), 
		 -> smbus16_write_regset@tmp(COMRAM[4]), smbus16_read_short@reg(COMRAM[2]), smbus16_write_short@tmp(COMRAM[3]), smbus16_read_data_raw@ger(COMRAM[2]), 
		 -> smbus16_read_data@ger(COMRAM[2]), smbus16_read_byte@reg(COMRAM[2]), smbus16_write_byte@tmp(COMRAM[3]), smbus16_write_data_raw@ger(COMRAM[2]), 
		 -> smbus16_write_data@ger(COMRAM[2]), smbus8_write_regset@tmp(COMRAM[2]), smbus8_read_short@reg(COMRAM[1]), smbus8_read_data@reg(COMRAM[1]), 
		 -> smbus8_read_byte@reg(BANK0[1]), smbus8_write_short@tmp(COMRAM[4]), smbus8_write_data@reg(BANK0[1]), smbus8_write_byte@tmp(BANK0[2]), 
		 -> i2c_write_byte@data(COMRAM[1]), NULL(NULL[0]), 

    smbus16_write_data@msg.data	PTR void  size(2) Largest target is 128
		 -> print_char@map(BANK0[8]), lcd_clear_screen@buf(BANK1[128]), ssd1306_setpos@data(BANK0[3]), ssd1306_databyte@data(COMRAM[1]), 
		 -> ssd1306_init_commands(BANK2[27]), read_reg@val(BANK0[1]), LNB_error(BANK1[1]), lnb_do_configure@value(BANK0[1]), 
		 -> smbus16_write_regset@tmp(COMRAM[4]), smbus16_read_short@reg(COMRAM[2]), smbus16_write_short@tmp(COMRAM[3]), smbus16_read_data_raw@ger(COMRAM[2]), 
		 -> smbus16_read_data@ger(COMRAM[2]), smbus16_read_byte@reg(COMRAM[2]), smbus16_write_byte@tmp(COMRAM[3]), smbus16_write_data_raw@ger(COMRAM[2]), 
		 -> smbus16_write_data@ger(COMRAM[2]), smbus8_write_regset@tmp(COMRAM[2]), smbus8_read_short@reg(COMRAM[1]), smbus8_read_data@reg(COMRAM[1]), 
		 -> smbus8_read_byte@reg(BANK0[1]), smbus8_write_short@tmp(COMRAM[4]), smbus8_write_data@reg(BANK0[1]), smbus8_write_byte@tmp(BANK0[2]), 
		 -> i2c_write_byte@data(COMRAM[1]), NULL(NULL[0]), 

    msg.data	PTR void  size(2) Largest target is 128
		 -> print_char@map(BANK0[8]), lcd_clear_screen@buf(BANK1[128]), ssd1306_setpos@data(BANK0[3]), ssd1306_databyte@data(COMRAM[1]), 
		 -> ssd1306_init_commands(BANK2[27]), read_reg@val(BANK0[1]), LNB_error(BANK1[1]), lnb_do_configure@value(BANK0[1]), 
		 -> smbus16_write_regset@tmp(COMRAM[4]), smbus16_read_short@reg(COMRAM[2]), smbus16_write_short@tmp(COMRAM[3]), smbus16_read_data_raw@ger(COMRAM[2]), 
		 -> smbus16_read_data@ger(COMRAM[2]), smbus16_read_byte@reg(COMRAM[2]), smbus16_write_byte@tmp(COMRAM[3]), smbus16_write_data_raw@ger(COMRAM[2]), 
		 -> smbus16_write_data@ger(COMRAM[2]), smbus8_write_regset@tmp(COMRAM[2]), smbus8_read_short@reg(COMRAM[1]), smbus8_read_data@reg(COMRAM[1]), 
		 -> smbus8_read_byte@reg(BANK0[1]), smbus8_write_short@tmp(COMRAM[4]), smbus8_write_data@reg(BANK0[1]), smbus8_write_byte@tmp(BANK0[2]), 
		 -> i2c_write_byte@data(COMRAM[1]), NULL(NULL[0]), 

    smbus8_read_short@msg.data	PTR void  size(2) Largest target is 128
		 -> print_char@map(BANK0[8]), lcd_clear_screen@buf(BANK1[128]), ssd1306_setpos@data(BANK0[3]), ssd1306_databyte@data(COMRAM[1]), 
		 -> ssd1306_init_commands(BANK2[27]), read_reg@val(BANK0[1]), LNB_error(BANK1[1]), lnb_do_configure@value(BANK0[1]), 
		 -> smbus16_write_regset@tmp(COMRAM[4]), smbus16_read_short@reg(COMRAM[2]), smbus16_write_short@tmp(COMRAM[3]), smbus16_read_data_raw@ger(COMRAM[2]), 
		 -> smbus16_read_data@ger(COMRAM[2]), smbus16_read_byte@reg(COMRAM[2]), smbus16_write_byte@tmp(COMRAM[3]), smbus16_write_data_raw@ger(COMRAM[2]), 
		 -> smbus16_write_data@ger(COMRAM[2]), smbus8_write_regset@tmp(COMRAM[2]), smbus8_read_short@reg(COMRAM[1]), smbus8_read_data@reg(COMRAM[1]), 
		 -> smbus8_read_byte@reg(BANK0[1]), smbus8_write_short@tmp(COMRAM[4]), smbus8_write_data@reg(BANK0[1]), smbus8_write_byte@tmp(BANK0[2]), 
		 -> i2c_write_byte@data(COMRAM[1]), NULL(NULL[0]), 

    smbus8_read_data@msg.data	PTR void  size(2) Largest target is 128
		 -> print_char@map(BANK0[8]), lcd_clear_screen@buf(BANK1[128]), ssd1306_setpos@data(BANK0[3]), ssd1306_databyte@data(COMRAM[1]), 
		 -> ssd1306_init_commands(BANK2[27]), read_reg@val(BANK0[1]), LNB_error(BANK1[1]), lnb_do_configure@value(BANK0[1]), 
		 -> smbus16_write_regset@tmp(COMRAM[4]), smbus16_read_short@reg(COMRAM[2]), smbus16_write_short@tmp(COMRAM[3]), smbus16_read_data_raw@ger(COMRAM[2]), 
		 -> smbus16_read_data@ger(COMRAM[2]), smbus16_read_byte@reg(COMRAM[2]), smbus16_write_byte@tmp(COMRAM[3]), smbus16_write_data_raw@ger(COMRAM[2]), 
		 -> smbus16_write_data@ger(COMRAM[2]), smbus8_write_regset@tmp(COMRAM[2]), smbus8_read_short@reg(COMRAM[1]), smbus8_read_data@reg(COMRAM[1]), 
		 -> smbus8_read_byte@reg(BANK0[1]), smbus8_write_short@tmp(COMRAM[4]), smbus8_write_data@reg(BANK0[1]), smbus8_write_byte@tmp(BANK0[2]), 
		 -> i2c_write_byte@data(COMRAM[1]), NULL(NULL[0]), 

    smbus8_read_byte@dev	PTR struct i2c_dev__ size(2) Largest target is 8
		 -> g_i2c_bus(BANK1[8]), 

    smbus8_read_byte@data	PTR unsigned char  size(2) Largest target is 1
		 -> read_reg@val(BANK0[1]), LNB_error(BANK1[1]), lnb_do_configure@value(BANK0[1]), 

    smbus8_read_byte@msg.data	PTR void  size(2) Largest target is 128
		 -> print_char@map(BANK0[8]), lcd_clear_screen@buf(BANK1[128]), ssd1306_setpos@data(BANK0[3]), ssd1306_databyte@data(COMRAM[1]), 
		 -> ssd1306_init_commands(BANK2[27]), read_reg@val(BANK0[1]), LNB_error(BANK1[1]), lnb_do_configure@value(BANK0[1]), 
		 -> smbus16_write_regset@tmp(COMRAM[4]), smbus16_read_short@reg(COMRAM[2]), smbus16_write_short@tmp(COMRAM[3]), smbus16_read_data_raw@ger(COMRAM[2]), 
		 -> smbus16_read_data@ger(COMRAM[2]), smbus16_read_byte@reg(COMRAM[2]), smbus16_write_byte@tmp(COMRAM[3]), smbus16_write_data_raw@ger(COMRAM[2]), 
		 -> smbus16_write_data@ger(COMRAM[2]), smbus8_write_regset@tmp(COMRAM[2]), smbus8_read_short@reg(COMRAM[1]), smbus8_read_data@reg(COMRAM[1]), 
		 -> smbus8_read_byte@reg(BANK0[1]), smbus8_write_short@tmp(COMRAM[4]), smbus8_write_data@reg(BANK0[1]), smbus8_write_byte@tmp(BANK0[2]), 
		 -> i2c_write_byte@data(COMRAM[1]), NULL(NULL[0]), 

    msg.data	PTR void  size(2) Largest target is 128
		 -> print_char@map(BANK0[8]), lcd_clear_screen@buf(BANK1[128]), ssd1306_setpos@data(BANK0[3]), ssd1306_databyte@data(COMRAM[1]), 
		 -> ssd1306_init_commands(BANK2[27]), read_reg@val(BANK0[1]), LNB_error(BANK1[1]), lnb_do_configure@value(BANK0[1]), 
		 -> smbus16_write_regset@tmp(COMRAM[4]), smbus16_read_short@reg(COMRAM[2]), smbus16_write_short@tmp(COMRAM[3]), smbus16_read_data_raw@ger(COMRAM[2]), 
		 -> smbus16_read_data@ger(COMRAM[2]), smbus16_read_byte@reg(COMRAM[2]), smbus16_write_byte@tmp(COMRAM[3]), smbus16_write_data_raw@ger(COMRAM[2]), 
		 -> smbus16_write_data@ger(COMRAM[2]), smbus8_write_regset@tmp(COMRAM[2]), smbus8_read_short@reg(COMRAM[1]), smbus8_read_data@reg(COMRAM[1]), 
		 -> smbus8_read_byte@reg(BANK0[1]), smbus8_write_short@tmp(COMRAM[4]), smbus8_write_data@reg(BANK0[1]), smbus8_write_byte@tmp(BANK0[2]), 
		 -> i2c_write_byte@data(COMRAM[1]), NULL(NULL[0]), 

    smbus8_write_data@dev	PTR struct i2c_dev__ size(2) Largest target is 8
		 -> g_i2c_bus(BANK1[8]), NULL(NULL[0]), 

    smbus8_write_data@data	PTR const unsigned char  size(2) Largest target is 128
		 -> print_char@map(BANK0[8]), lcd_clear_screen@buf(BANK1[128]), ssd1306_setpos@data(BANK0[3]), ssd1306_databyte@data(COMRAM[1]), 
		 -> ssd1306_init_commands(BANK2[27]), 

    smbus8_write_data@msg.data	PTR void  size(2) Largest target is 128
		 -> print_char@map(BANK0[8]), lcd_clear_screen@buf(BANK1[128]), ssd1306_setpos@data(BANK0[3]), ssd1306_databyte@data(COMRAM[1]), 
		 -> ssd1306_init_commands(BANK2[27]), read_reg@val(BANK0[1]), LNB_error(BANK1[1]), lnb_do_configure@value(BANK0[1]), 
		 -> smbus16_write_regset@tmp(COMRAM[4]), smbus16_read_short@reg(COMRAM[2]), smbus16_write_short@tmp(COMRAM[3]), smbus16_read_data_raw@ger(COMRAM[2]), 
		 -> smbus16_read_data@ger(COMRAM[2]), smbus16_read_byte@reg(COMRAM[2]), smbus16_write_byte@tmp(COMRAM[3]), smbus16_write_data_raw@ger(COMRAM[2]), 
		 -> smbus16_write_data@ger(COMRAM[2]), smbus8_write_regset@tmp(COMRAM[2]), smbus8_read_short@reg(COMRAM[1]), smbus8_read_data@reg(COMRAM[1]), 
		 -> smbus8_read_byte@reg(BANK0[1]), smbus8_write_short@tmp(COMRAM[4]), smbus8_write_data@reg(BANK0[1]), smbus8_write_byte@tmp(BANK0[2]), 
		 -> i2c_write_byte@data(COMRAM[1]), NULL(NULL[0]), 

    smbus8_write_byte@dev	PTR struct i2c_dev__ size(2) Largest target is 8
		 -> g_i2c_bus(BANK1[8]), NULL(NULL[0]), 

    msg.data	PTR void  size(2) Largest target is 128
		 -> print_char@map(BANK0[8]), lcd_clear_screen@buf(BANK1[128]), ssd1306_setpos@data(BANK0[3]), ssd1306_databyte@data(COMRAM[1]), 
		 -> ssd1306_init_commands(BANK2[27]), read_reg@val(BANK0[1]), LNB_error(BANK1[1]), lnb_do_configure@value(BANK0[1]), 
		 -> smbus16_write_regset@tmp(COMRAM[4]), smbus16_read_short@reg(COMRAM[2]), smbus16_write_short@tmp(COMRAM[3]), smbus16_read_data_raw@ger(COMRAM[2]), 
		 -> smbus16_read_data@ger(COMRAM[2]), smbus16_read_byte@reg(COMRAM[2]), smbus16_write_byte@tmp(COMRAM[3]), smbus16_write_data_raw@ger(COMRAM[2]), 
		 -> smbus16_write_data@ger(COMRAM[2]), smbus8_write_regset@tmp(COMRAM[2]), smbus8_read_short@reg(COMRAM[1]), smbus8_read_data@reg(COMRAM[1]), 
		 -> smbus8_read_byte@reg(BANK0[1]), smbus8_write_short@tmp(COMRAM[4]), smbus8_write_data@reg(BANK0[1]), smbus8_write_byte@tmp(BANK0[2]), 
		 -> i2c_write_byte@data(COMRAM[1]), NULL(NULL[0]), 

    msg.data	PTR void  size(2) Largest target is 128
		 -> print_char@map(BANK0[8]), lcd_clear_screen@buf(BANK1[128]), ssd1306_setpos@data(BANK0[3]), ssd1306_databyte@data(COMRAM[1]), 
		 -> ssd1306_init_commands(BANK2[27]), read_reg@val(BANK0[1]), LNB_error(BANK1[1]), lnb_do_configure@value(BANK0[1]), 
		 -> smbus16_write_regset@tmp(COMRAM[4]), smbus16_read_short@reg(COMRAM[2]), smbus16_write_short@tmp(COMRAM[3]), smbus16_read_data_raw@ger(COMRAM[2]), 
		 -> smbus16_read_data@ger(COMRAM[2]), smbus16_read_byte@reg(COMRAM[2]), smbus16_write_byte@tmp(COMRAM[3]), smbus16_write_data_raw@ger(COMRAM[2]), 
		 -> smbus16_write_data@ger(COMRAM[2]), smbus8_write_regset@tmp(COMRAM[2]), smbus8_read_short@reg(COMRAM[1]), smbus8_read_data@reg(COMRAM[1]), 
		 -> smbus8_read_byte@reg(BANK0[1]), smbus8_write_short@tmp(COMRAM[4]), smbus8_write_data@reg(BANK0[1]), smbus8_write_byte@tmp(BANK0[2]), 
		 -> i2c_write_byte@data(COMRAM[1]), NULL(NULL[0]), 

    msg.data	PTR void  size(2) Largest target is 128
		 -> print_char@map(BANK0[8]), lcd_clear_screen@buf(BANK1[128]), ssd1306_setpos@data(BANK0[3]), ssd1306_databyte@data(COMRAM[1]), 
		 -> ssd1306_init_commands(BANK2[27]), read_reg@val(BANK0[1]), LNB_error(BANK1[1]), lnb_do_configure@value(BANK0[1]), 
		 -> smbus16_write_regset@tmp(COMRAM[4]), smbus16_read_short@reg(COMRAM[2]), smbus16_write_short@tmp(COMRAM[3]), smbus16_read_data_raw@ger(COMRAM[2]), 
		 -> smbus16_read_data@ger(COMRAM[2]), smbus16_read_byte@reg(COMRAM[2]), smbus16_write_byte@tmp(COMRAM[3]), smbus16_write_data_raw@ger(COMRAM[2]), 
		 -> smbus16_write_data@ger(COMRAM[2]), smbus8_write_regset@tmp(COMRAM[2]), smbus8_read_short@reg(COMRAM[1]), smbus8_read_data@reg(COMRAM[1]), 
		 -> smbus8_read_byte@reg(BANK0[1]), smbus8_write_short@tmp(COMRAM[4]), smbus8_write_data@reg(BANK0[1]), smbus8_write_byte@tmp(BANK0[2]), 
		 -> i2c_write_byte@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_probe_addr@dev	PTR struct i2c_dev__ size(2) Largest target is 8
		 -> g_i2c_bus(BANK1[8]), 

    S26i2c_msg$data	PTR void  size(2) Largest target is 128
		 -> print_char@map(BANK0[8]), lcd_clear_screen@buf(BANK1[128]), ssd1306_setpos@data(BANK0[3]), ssd1306_databyte@data(COMRAM[1]), 
		 -> ssd1306_init_commands(BANK2[27]), read_reg@val(BANK0[1]), LNB_error(BANK1[1]), lnb_do_configure@value(BANK0[1]), 
		 -> smbus16_write_regset@tmp(COMRAM[4]), smbus16_read_short@reg(COMRAM[2]), smbus16_write_short@tmp(COMRAM[3]), smbus16_read_data_raw@ger(COMRAM[2]), 
		 -> smbus16_read_data@ger(COMRAM[2]), smbus16_read_byte@reg(COMRAM[2]), smbus16_write_byte@tmp(COMRAM[3]), smbus16_write_data_raw@ger(COMRAM[2]), 
		 -> smbus16_write_data@ger(COMRAM[2]), smbus8_write_regset@tmp(COMRAM[2]), smbus8_read_short@reg(COMRAM[1]), smbus8_read_data@reg(COMRAM[1]), 
		 -> smbus8_read_byte@reg(BANK0[1]), smbus8_write_short@tmp(COMRAM[4]), smbus8_write_data@reg(BANK0[1]), smbus8_write_byte@tmp(BANK0[2]), 
		 -> i2c_write_byte@data(COMRAM[1]), NULL(NULL[0]), 

    msg.data	PTR void  size(2) Largest target is 128
		 -> print_char@map(BANK0[8]), lcd_clear_screen@buf(BANK1[128]), ssd1306_setpos@data(BANK0[3]), ssd1306_databyte@data(COMRAM[1]), 
		 -> ssd1306_init_commands(BANK2[27]), read_reg@val(BANK0[1]), LNB_error(BANK1[1]), lnb_do_configure@value(BANK0[1]), 
		 -> smbus16_write_regset@tmp(COMRAM[4]), smbus16_read_short@reg(COMRAM[2]), smbus16_write_short@tmp(COMRAM[3]), smbus16_read_data_raw@ger(COMRAM[2]), 
		 -> smbus16_read_data@ger(COMRAM[2]), smbus16_read_byte@reg(COMRAM[2]), smbus16_write_byte@tmp(COMRAM[3]), smbus16_write_data_raw@ger(COMRAM[2]), 
		 -> smbus16_write_data@ger(COMRAM[2]), smbus8_write_regset@tmp(COMRAM[2]), smbus8_read_short@reg(COMRAM[1]), smbus8_read_data@reg(COMRAM[1]), 
		 -> smbus8_read_byte@reg(BANK0[1]), smbus8_write_short@tmp(COMRAM[4]), smbus8_write_data@reg(BANK0[1]), smbus8_write_byte@tmp(BANK0[2]), 
		 -> i2c_write_byte@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_transfer@dev.setbaud	PTR FTN(PTR struct i2c_dev__,int ,)int  size(2) Largest target is 0

    i2c_transfer@dev.transfer	PTR FTN(PTR struct i2c_dev__,PTR struct i2c_msg,int ,)int  size(2) Largest target is 2
		 -> i2c_transfer_native(), 

    i2c_transfer@msg	PTR struct i2c_msg size(2) Largest target is 16
		 -> smbus16_write_regset@msg(COMRAM[7]), smbus16_read_short@msg(COMRAM[14]), smbus16_write_short@msg(COMRAM[7]), smbus16_read_data_raw@msg(COMRAM[14]), 
		 -> smbus16_read_data@msg(COMRAM[14]), smbus16_read_byte@msg(COMRAM[14]), smbus16_write_byte@msg(COMRAM[7]), smbus16_write_data_raw@msg(COMRAM[14]), 
		 -> smbus16_write_data@msg(COMRAM[14]), smbus8_write_regset@msg(COMRAM[7]), smbus8_read_short@msg(COMRAM[14]), smbus8_read_data@msg(COMRAM[14]), 
		 -> smbus8_read_byte@msg(BANK0[14]), smbus8_write_short@msg(COMRAM[7]), smbus8_write_data@msg(BANK0[14]), smbus8_write_byte@msg(BANK0[7]), 
		 -> i2c_write_data@msg(COMRAM[7]), i2c_read_data@msg(COMRAM[7]), i2c_probe_addr@msg(BANK0[7]), 

    i2c_transfer@dev	PTR struct i2c_dev__ size(2) Largest target is 8
		 -> g_i2c_bus(BANK1[8]), NULL(NULL[0]), 

    S33i2c_driver_ops$setbaud	PTR FTN(PTR struct i2c_dev__,int ,)int  size(2) Largest target is 0

    i2c_setbaud@dev.setbaud	PTR FTN(PTR struct i2c_dev__,int ,)int  size(2) Largest target is 0

    S33i2c_driver_ops$transfer	PTR FTN(PTR struct i2c_dev__,PTR struct i2c_msg,int ,)int  size(2) Largest target is 2
		 -> i2c_transfer_native(), 

    i2c_setbaud@dev.transfer	PTR FTN(PTR struct i2c_dev__,PTR struct i2c_msg,int ,)int  size(2) Largest target is 2
		 -> i2c_transfer_native(), 


Critical Paths under _main in COMRAM

    _usart_init->___lldiv
    _itoa->_memset
    _adf4351_calc_counters->_gcd
    _gcd->___llmod
    _rx_usart->_usart_getc
    _init_gps->_send_UBX_string
    _send_UBX_string->_putgps
    _putgps->_usart_putc
    _i2c_native_init->_i2c_reset
    _i2c_write->_i2c_wait_int
    _i2c_stop->_i2c_reset
    _i2c_reset->___lldiv
    _i2c_start->_i2c_wait_int
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->___lodiv
    _dtoa->___aodiv
    _pad->_fputs
    _fputs->_fputc
    _fputc->_usart_putc
    _abs->___aomod
    _atoi->_isspace
    _adf4351_set_mode->_adf4351_setup
    _adf4351_setup->_adf4351_write_reg0
    _adf4351_setup->_adf4351_write_reg1
    _adf4351_setup->_adf4351_write_reg2
    _adf4351_setup->_adf4351_write_reg3
    _adf4351_write_reg5->_adf4351_write_latch
    _adf4351_write_reg4->_adf4351_write_latch
    _adf4351_write_reg3->_adf4351_write_latch
    _adf4351_write_reg2->_adf4351_write_latch
    _adf4351_write_reg1->_adf4351_write_latch
    _adf4351_write_reg0->_adf4351_write_latch
    _adf4351_init->_memset

Critical Paths under _global_irq_handler in COMRAM

    _global_irq_handler->_usart_rx_irq_handler

Critical Paths under _main in BANK0

    _si5328_init->_write_regset
    _show_display->_print_string
    _setQRG->_si5328_set_freq
    _si5328_set_freq->_write_regset
    _write_regset->_smbus8_write_byte
    _si5328_perform_ical->_smbus8_write_byte
    _setADF4351frequency->_adf4351_set_freq
    _adf4351_set_freq->_adf4351_calc_rcnt_block
    _adf4351_calc_rcnt_block->_printf
    _lnb_configure->_check_LNB_status
    _lnb_do_configure->_smbus8_read_byte
    _check_LNB_status->_smbus8_read_byte
    _lcd_init->_print_string
    _ssd1306_commandbyte->_smbus8_write_byte
    _smbus8_write_byte->_i2c_transfer
    _print_string->_print_char
    _print_char->_lcd_draw8x8
    _lcd_draw8x8->_ssd1306_setpos
    _lcd_clear_screen->_ssd1306_setpos
    _ssd1306_setpos->_ssd1306_command
    _ssd1306_command->_smbus8_write_data
    _ssd1306_data->_smbus8_write_data
    _smbus8_write_data->_i2c_transfer
    _i2c_probe_addr->_i2c_transfer
    _check_si5328_status->_read_reg
    _read_reg->_smbus8_read_byte
    _smbus8_read_byte->_i2c_transfer
    _i2c_transfer->_i2c_transfer_native
    _i2c_transfer_native->_i2c_read
    _i2c_read->_printf
    _check_ADF5341_status->_printf
    _vfprintf->_vfpfcnvrt

Critical Paths under _global_irq_handler in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_lcd_init
    _show_display->_lcd_clear_screen
    _lcd_init->_lcd_clear_screen
    _print_string->_print_char

Critical Paths under _global_irq_handler in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_show_display

Critical Paths under _global_irq_handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _global_irq_handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _global_irq_handler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _global_irq_handler in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0 1630130
                                            135 BANK1      1     1      0
                       _adf4351_init
                   _adf4351_set_mode
                   _adf4351_set_tune
               _check_ADF5341_status
                   _check_LNB_status
                _check_si5328_status
                    _i2c_native_init
                         _init_gpios
                           _init_gps
                           _lcd_init
                      _lnb_configure
                             _printf
                           _rx_usart
                _setADF4351frequency
                             _setQRG
                       _show_display
                        _si5328_init
                         _usart_init
 ---------------------------------------------------------------------------------
 (1) _usart_init                                           6     2      4    1829
                                             25 COMRAM     6     2      4
                            ___lldiv
                    _irq_set_handler
 ---------------------------------------------------------------------------------
 (2) _irq_set_handler                                      5     1      4     262
                                             12 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _si5328_init                                          7     4      3  275563
                                            100 BANK0      7     4      3
                     _i2c_probe_addr
                             _printf
                _si5328_perform_ical
                  _smbus8_write_byte
                       _write_regset
 ---------------------------------------------------------------------------------
 (1) _show_display                                         8     8      0  216319
                                            130 BANK1      2     2      0
                                              0 BANK2      6     6      0
                               _itoa
                   _lcd_clear_screen
                             _memcmp
                             _memcpy
                       _print_string
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              11     5      6    2098
                                             12 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (2) _memcmp                                              12     6      6     803
                                             12 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 3     1      2    4666
                                             24 COMRAM     3     1      2
                            ___awdiv
                            ___awmod
                             _memset
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     613
                                             12 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _setQRG                                               5     5      0  184375
                                            106 BANK0      5     5      0
                    _si5328_set_freq
 ---------------------------------------------------------------------------------
 (2) _si5328_set_freq                                      6     2      4  184168
                                            100 BANK0      6     2      4
                             _printf
                _si5328_perform_ical
                       _write_regset
 ---------------------------------------------------------------------------------
 (2) _write_regset                                        11     4      7   77283
                                             89 BANK0     11     4      7
                             _printf
                  _smbus8_write_byte
 ---------------------------------------------------------------------------------
 (2) _si5328_perform_ical                                  3     0      3   76759
                                             89 BANK0      3     0      3
                             _printf
                  _smbus8_write_byte
 ---------------------------------------------------------------------------------
 (1) _setADF4351frequency                                  8     8      0   73119
                                             51 BANK0      8     8      0
                   _adf4351_get_lock
                   _adf4351_set_freq
                             _printf
                        _read_switch
 ---------------------------------------------------------------------------------
 (2) _read_switch                                          7     7      0      92
                                             12 COMRAM     7     7      0
 ---------------------------------------------------------------------------------
 (2) _adf4351_set_freq                                     8     2      6   43120
                                             43 BANK0      8     2      6
              _adf4351_calc_counters
            _adf4351_calc_rcnt_block
         _adf4351_calc_vco_core_freq
                      _adf4351_setup
 ---------------------------------------------------------------------------------
 (3) _adf4351_calc_vco_core_freq                          12     6      6     397
                                             12 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (3) _adf4351_calc_rcnt_block                              8     6      2   33219
                                             35 BANK0      8     6      2
                            ___awdiv
                            ___lldiv
                            ___llmod
                             _printf
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     805
                                             12 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _adf4351_calc_counters                               22    20      2    3965
                                             33 COMRAM    22    20      2
                            ___lldiv
                            ___llmod
                                _gcd
 ---------------------------------------------------------------------------------
 (4) _gcd                                                 12     4      8    1058
                                             21 COMRAM    12     4      8
                            ___llmod
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     659
                                             12 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) _adf4351_get_lock                                     5     3      2      76
                                             12 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _rx_usart                                             2     2      0     584
                                             18 COMRAM     2     2      0
                             _rx_gps
                         _usart_getc
 ---------------------------------------------------------------------------------
 (2) _usart_getc                                           6     4      2      23
                                             12 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _rx_gps                                               4     2      2     516
                                             12 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _lnb_configure                                        7     4      3  273810
                                            102 BANK0      7     4      3
                   _check_LNB_status
                     _i2c_probe_addr
                   _lnb_do_configure
                             _printf
 ---------------------------------------------------------------------------------
 (2) _lnb_do_configure                                     6     3      3  123219
                                             95 BANK0      6     3      3
                             _printf
                   _smbus8_read_byte
                  _smbus8_write_byte
 ---------------------------------------------------------------------------------
 (2) _check_LNB_status                                     7     4      3   75914
                                             95 BANK0      7     4      3
                             _printf
                   _smbus8_read_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             5     2      3  375251
                                            130 BANK1      5     2      3
                     _i2c_probe_addr
                   _lcd_clear_screen
                       _print_string
                             _printf
                    _ssd1306_command
                _ssd1306_commandbyte
 ---------------------------------------------------------------------------------
 (2) _ssd1306_commandbyte                                  1     1      0   46868
                                             89 BANK0      1     1      0
                  _smbus8_write_byte
 ---------------------------------------------------------------------------------
 (3) _smbus8_write_byte                                   14     9      5   46837
                                             75 BANK0     14     9      5
                       _i2c_transfer
 ---------------------------------------------------------------------------------
 (2) _print_string                                         8     3      5  111858
                                            126 BANK0      2     2      0
                                             16 BANK1      6     1      5
                               _itoa (ARG)
                         _print_char
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _print_char                                          32    29      3   96804
                                            110 BANK0     16    13      3
                                              0 BANK1     16    16      0
                        _lcd_draw8x8
                             _memset
 ---------------------------------------------------------------------------------
 (4) _lcd_draw8x8                                          4     0      4   93215
                                            106 BANK0      4     0      4
                       _ssd1306_data
                     _ssd1306_setpos
 ---------------------------------------------------------------------------------
 (2) _lcd_clear_screen                                   130   130      0   95744
                                              0 BANK1    130   130      0
                             _memset
                       _ssd1306_data
                     _ssd1306_setpos
 ---------------------------------------------------------------------------------
 (5) _ssd1306_setpos                                       5     4      1   46624
                                            101 BANK0      5     4      1
                    _ssd1306_command
 ---------------------------------------------------------------------------------
 (6) _ssd1306_command                                      4     0      4   46228
                                             97 BANK0      4     0      4
                  _smbus8_write_data
 ---------------------------------------------------------------------------------
 (5) _ssd1306_data                                         4     0      4   46228
                                             97 BANK0      4     0      4
                  _smbus8_write_data
 ---------------------------------------------------------------------------------
 (7) _smbus8_write_data                                   22    14      8   45806
                                             75 BANK0     22    14      8
                       _i2c_transfer
 ---------------------------------------------------------------------------------
 (2) _i2c_probe_addr                                      10     7      3   44715
                                             75 BANK0     10     7      3
                       _i2c_transfer
 ---------------------------------------------------------------------------------
 (1) _init_gps                                             0     0      0    1668
                    _send_UBX_string
 ---------------------------------------------------------------------------------
 (2) _send_UBX_string                                     67    62      5    1668
                                             14 COMRAM    67    62      5
                             _putgps
 ---------------------------------------------------------------------------------
 (3) _putgps                                               1     1      0      69
                                             13 COMRAM     1     1      0
                         _usart_putc
 ---------------------------------------------------------------------------------
 (1) _init_gpios                                           3     3      0       0
                                             12 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _i2c_native_init                                      6     0      6    4756
                                             39 COMRAM     6     0      6
                          _i2c_reset
                             _memset
 ---------------------------------------------------------------------------------
 (1) _check_si5328_status                                  9     6      3   76366
                                            102 BANK0      9     6      3
                             _printf
                           _read_reg
 ---------------------------------------------------------------------------------
 (2) _read_reg                                             7     3      4   46302
                                             95 BANK0      7     3      4
                   _smbus8_read_byte
 ---------------------------------------------------------------------------------
 (3) _smbus8_read_byte                                    20    14      6   45865
                                             75 BANK0     20    14      6
                       _i2c_transfer
 ---------------------------------------------------------------------------------
 (4) _i2c_transfer                                         6     0      6   43944
                                             69 BANK0      6     0      6
                _i2c_transfer_native *
 ---------------------------------------------------------------------------------
 (5) _i2c_transfer_native                                 27    21      6   38659
                                             42 BANK0     27    21      6
                             ___wmul
                           _i2c_read
                          _i2c_reset
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (6) _i2c_write                                            5     3      2     788
                                             16 COMRAM     5     3      2
                       _i2c_wait_int
 ---------------------------------------------------------------------------------
 (6) _i2c_stop                                             2     0      2    2566
                                             39 COMRAM     2     0      2
                          _i2c_reset
                       _i2c_wait_int
 ---------------------------------------------------------------------------------
 (7) _i2c_reset                                           14    12      2    1784
                                             25 COMRAM    14    12      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8    1381
                                             12 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (6) _i2c_start                                            9     3      6    1126
                                             16 COMRAM     9     3      6
                       _i2c_wait_int
 ---------------------------------------------------------------------------------
 (6) _i2c_read                                             7     3      4   30443
                                             35 BANK0      7     3      4
                       _i2c_wait_int
                             _printf
 ---------------------------------------------------------------------------------
 (7) _i2c_wait_int                                         4     0      4     571
                                             12 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _check_ADF5341_status                                 6     4      2   29686
                                             35 BANK0      6     4      2
                             _printf
 ---------------------------------------------------------------------------------
 (7) _printf                                              14     4     10   29500
                                             21 BANK0     14     4     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (8) _vfprintf                                             8     2      6   26413
                                             94 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (9) _vfpfcnvrt                                           56    50      6   25823
                                             74 COMRAM    20    14      6
                                              0 BANK0     21    21      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (10) _xtoa                                               39    28     11    6525
                                             35 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (11) _toupper                                             8     6      2     586
                                             18 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (12) _islower                                             6     4      2     191
                                             12 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (11) _isupper                                             6     4      2     191
                                             12 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (11) _isalpha                                             6     4      2     265
                                             12 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (10) _utoa                                               32    22     10    5669
                                             37 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (11) ___lomod                                            17     1     16     412
                                             12 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (11) ___lodiv                                            25     9     16     421
                                             12 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (10) _strncmp                                            11     5      6    1675
                                             12 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (10) _dtoa                                               36    26     10    6523
                                             38 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (11) _pad                                                11     5      6    4077
                                             24 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (12) _strlen                                              4     2      2     760
                                             12 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) _fputs                                               7     3      4    1327
                                             17 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (13) _fputc                                               4     0      4     827
                                             13 COMRAM     4     0      4
                         _usart_putc
 ---------------------------------------------------------------------------------
 (14) _usart_putc                                          1     1      0      38
                                             12 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _abs                                                 4     2      2     183
                                             30 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (11) ___aomod                                            18     2     16     613
                                             12 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (11) ___aodiv                                            26    10     16     625
                                             12 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (10) _atoi                                               15    13      2    2021
                                             19 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (11) _isspace                                             7     5      2     333
                                             12 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (10) _isdigit                                             6     4      2     355
                                             12 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (11) ___wmul                                              6     2      4     680
                                             12 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _adf4351_set_tune                                     8     2      6     460
                                             12 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _adf4351_set_mode                                     6     2      4    7476
                                             38 COMRAM     6     2      4
                      _adf4351_setup
                 _adf4351_write_reg2
                 _adf4351_write_reg4
 ---------------------------------------------------------------------------------
 (3) _adf4351_setup                                        2     0      2    5111
                                             36 COMRAM     2     0      2
                 _adf4351_write_reg0
                 _adf4351_write_reg1
                 _adf4351_write_reg2
                 _adf4351_write_reg3
                 _adf4351_write_reg4
                 _adf4351_write_reg5
 ---------------------------------------------------------------------------------
 (4) _adf4351_write_reg5                                  11     9      2     668
                                             24 COMRAM    11     9      2
                _adf4351_write_latch
 ---------------------------------------------------------------------------------
 (4) _adf4351_write_reg4                                  11     9      2     951
                                             24 COMRAM    11     9      2
                _adf4351_write_latch
 ---------------------------------------------------------------------------------
 (4) _adf4351_write_reg3                                  12    10      2     783
                                             24 COMRAM    12    10      2
                _adf4351_write_latch
 ---------------------------------------------------------------------------------
 (4) _adf4351_write_reg2                                  12    10      2    1020
                                             24 COMRAM    12    10      2
                _adf4351_write_latch
 ---------------------------------------------------------------------------------
 (4) _adf4351_write_reg1                                  12    10      2     714
                                             24 COMRAM    12    10      2
                _adf4351_write_latch
 ---------------------------------------------------------------------------------
 (4) _adf4351_write_reg0                                  12    10      2     691
                                             24 COMRAM    12    10      2
                _adf4351_write_latch
 ---------------------------------------------------------------------------------
 (5) _adf4351_write_latch                                 12     8      4     524
                                             12 COMRAM    12     8      4
 ---------------------------------------------------------------------------------
 (1) _adf4351_init                                        13     3     10    3420
                                             24 COMRAM    13     3     10
                    _adf4351_default
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                              12     6      6    2637
                                             12 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) _adf4351_default                                      2     0      2     296
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (19) _global_irq_handler                                  5     5      0     122
                                              7 COMRAM     5     5      0
               _usart_rx_irq_handler *
 ---------------------------------------------------------------------------------
 (20) _usart_rx_irq_handler                                7     5      2     121
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 20
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adf4351_init
     _adf4351_default
     _memset
   _adf4351_set_mode
     _adf4351_setup
       _adf4351_write_reg0
         _adf4351_write_latch
       _adf4351_write_reg1
         _adf4351_write_latch
       _adf4351_write_reg2
         _adf4351_write_latch
       _adf4351_write_reg3
         _adf4351_write_latch
       _adf4351_write_reg4
         _adf4351_write_latch
       _adf4351_write_reg5
         _adf4351_write_latch
     _adf4351_write_reg2
       _adf4351_write_latch
     _adf4351_write_reg4
       _adf4351_write_latch
   _adf4351_set_tune
   _check_ADF5341_status
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _usart_putc
               _fputs
                 _fputc
                   _usart_putc
               _strlen
           _fputc
             _usart_putc
           _isdigit
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _usart_putc
               _fputs
                 _fputc
                   _usart_putc
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _usart_putc
               _fputs
                 _fputc
                   _usart_putc
               _strlen
             _toupper
               _islower
   _check_LNB_status
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _usart_putc
               _fputs
                 _fputc
                   _usart_putc
               _strlen
           _fputc
             _usart_putc
           _isdigit
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _usart_putc
               _fputs
                 _fputc
                   _usart_putc
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _usart_putc
               _fputs
                 _fputc
                   _usart_putc
               _strlen
             _toupper
               _islower
     _smbus8_read_byte
       _i2c_transfer
         _i2c_transfer_native *
           ___wmul
           _i2c_read
             _i2c_wait_int
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     ___wmul
                     _isdigit
                     _isspace
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                       ___aomod (ARG)
                     _pad
                       _fputc
                         _usart_putc
                       _fputs
                         _fputc
                           _usart_putc
                       _strlen
                   _fputc
                     _usart_putc
                   _isdigit
                   _strncmp
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _usart_putc
                       _fputs
                         _fputc
                           _usart_putc
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _usart_putc
                       _fputs
                         _fputc
                           _usart_putc
                       _strlen
                     _toupper
                       _islower
           _i2c_reset
             ___lldiv
           _i2c_start
             _i2c_wait_int
           _i2c_stop
             _i2c_reset
               ___lldiv
             _i2c_wait_int
           _i2c_write
             _i2c_wait_int
   _check_si5328_status
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _usart_putc
               _fputs
                 _fputc
                   _usart_putc
               _strlen
           _fputc
             _usart_putc
           _isdigit
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _usart_putc
               _fputs
                 _fputc
                   _usart_putc
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _usart_putc
               _fputs
                 _fputc
                   _usart_putc
               _strlen
             _toupper
               _islower
     _read_reg
       _smbus8_read_byte
         _i2c_transfer
           _i2c_transfer_native *
             ___wmul
             _i2c_read
               _i2c_wait_int
               _printf
                 _vfprintf
                   _vfpfcnvrt
                     _atoi
                       ___wmul
                       _isdigit
                       _isspace
                     _dtoa
                       ___aodiv
                       ___aomod
                       _abs
                         ___aomod (ARG)
                       _pad
                         _fputc
                           _usart_putc
                         _fputs
                           _fputc
                             _usart_putc
                         _strlen
                     _fputc
                       _usart_putc
                     _isdigit
                     _strncmp
                     _utoa
                       ___lodiv
                       ___lomod
                       _pad
                         _fputc
                           _usart_putc
                         _fputs
                           _fputc
                             _usart_putc
                         _strlen
                     _xtoa
                       _isalpha
                       _isupper
                       _pad
                         _fputc
                           _usart_putc
                         _fputs
                           _fputc
                             _usart_putc
                         _strlen
                       _toupper
                         _islower
             _i2c_reset
               ___lldiv
             _i2c_start
               _i2c_wait_int
             _i2c_stop
               _i2c_reset
                 ___lldiv
               _i2c_wait_int
             _i2c_write
               _i2c_wait_int
   _i2c_native_init
     _i2c_reset
       ___lldiv
     _memset
   _init_gpios
   _init_gps
     _send_UBX_string
       _putgps
         _usart_putc
   _lcd_init
     _i2c_probe_addr
       _i2c_transfer
         _i2c_transfer_native *
           ___wmul
           _i2c_read
             _i2c_wait_int
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     ___wmul
                     _isdigit
                     _isspace
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                       ___aomod (ARG)
                     _pad
                       _fputc
                         _usart_putc
                       _fputs
                         _fputc
                           _usart_putc
                       _strlen
                   _fputc
                     _usart_putc
                   _isdigit
                   _strncmp
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _usart_putc
                       _fputs
                         _fputc
                           _usart_putc
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _usart_putc
                       _fputs
                         _fputc
                           _usart_putc
                       _strlen
                     _toupper
                       _islower
           _i2c_reset
             ___lldiv
           _i2c_start
             _i2c_wait_int
           _i2c_stop
             _i2c_reset
               ___lldiv
             _i2c_wait_int
           _i2c_write
             _i2c_wait_int
     _lcd_clear_screen
       _memset
       _ssd1306_data
         _smbus8_write_data
           _i2c_transfer
             _i2c_transfer_native *
               ___wmul
               _i2c_read
                 _i2c_wait_int
                 _printf
                   _vfprintf
                     _vfpfcnvrt
                       _atoi
                         ___wmul
                         _isdigit
                         _isspace
                       _dtoa
                         ___aodiv
                         ___aomod
                         _abs
                           ___aomod (ARG)
                         _pad
                           _fputc
                             _usart_putc
                           _fputs
                             _fputc
                               _usart_putc
                           _strlen
                       _fputc
                         _usart_putc
                       _isdigit
                       _strncmp
                       _utoa
                         ___lodiv
                         ___lomod
                         _pad
                           _fputc
                             _usart_putc
                           _fputs
                             _fputc
                               _usart_putc
                           _strlen
                       _xtoa
                         _isalpha
                         _isupper
                         _pad
                           _fputc
                             _usart_putc
                           _fputs
                             _fputc
                               _usart_putc
                           _strlen
                         _toupper
                           _islower
               _i2c_reset
                 ___lldiv
               _i2c_start
                 _i2c_wait_int
               _i2c_stop
                 _i2c_reset
                   ___lldiv
                 _i2c_wait_int
               _i2c_write
                 _i2c_wait_int
       _ssd1306_setpos
         _ssd1306_command
           _smbus8_write_data
             _i2c_transfer
               _i2c_transfer_native *
                 ___wmul
                 _i2c_read
                   _i2c_wait_int
                   _printf
                     _vfprintf
                       _vfpfcnvrt
                         _atoi
                           ___wmul
                           _isdigit
                           _isspace
                         _dtoa
                           ___aodiv
                           ___aomod
                           _abs
                             ___aomod (ARG)
                           _pad
                             _fputc
                               _usart_putc
                             _fputs
                               _fputc
                                 _usart_putc
                             _strlen
                         _fputc
                           _usart_putc
                         _isdigit
                         _strncmp
                         _utoa
                           ___lodiv
                           ___lomod
                           _pad
                             _fputc
                               _usart_putc
                             _fputs
                               _fputc
                                 _usart_putc
                             _strlen
                         _xtoa
                           _isalpha
                           _isupper
                           _pad
                             _fputc
                               _usart_putc
                             _fputs
                               _fputc
                                 _usart_putc
                             _strlen
                           _toupper
                             _islower
                 _i2c_reset
                   ___lldiv
                 _i2c_start
                   _i2c_wait_int
                 _i2c_stop
                   _i2c_reset
                     ___lldiv
                   _i2c_wait_int
                 _i2c_write
                   _i2c_wait_int
     _print_string
       _itoa (ARG)
         ___awdiv
         ___awmod
         _memset
       _print_char (ARG)
         _lcd_draw8x8
           _ssd1306_data
             _smbus8_write_data
               _i2c_transfer
                 _i2c_transfer_native *
                   ___wmul
                   _i2c_read
                     _i2c_wait_int
                     _printf
                       _vfprintf
                         _vfpfcnvrt
                           _atoi
                             ___wmul
                             _isdigit
                             _isspace
                           _dtoa
                             ___aodiv
                             ___aomod
                             _abs
                               ___aomod (ARG)
                             _pad
                               _fputc
                                 _usart_putc
                               _fputs
                                 _fputc
                                   _usart_putc
                               _strlen
                           _fputc
                             _usart_putc
                           _isdigit
                           _strncmp
                           _utoa
                             ___lodiv
                             ___lomod
                             _pad
                               _fputc
                                 _usart_putc
                               _fputs
                                 _fputc
                                   _usart_putc
                               _strlen
                           _xtoa
                             _isalpha
                             _isupper
                             _pad
                               _fputc
                                 _usart_putc
                               _fputs
                                 _fputc
                                   _usart_putc
                               _strlen
                             _toupper
                               _islower
                   _i2c_reset
                     ___lldiv
                   _i2c_start
                     _i2c_wait_int
                   _i2c_stop
                     _i2c_reset
                       ___lldiv
                     _i2c_wait_int
                   _i2c_write
                     _i2c_wait_int
           _ssd1306_setpos
             _ssd1306_command
               _smbus8_write_data
                 _i2c_transfer
                   _i2c_transfer_native *
                     ___wmul
                     _i2c_read
                       _i2c_wait_int
                       _printf
                         _vfprintf
                           _vfpfcnvrt
                             _atoi
                               ___wmul
                               _isdigit
                               _isspace
                             _dtoa
                               ___aodiv
                               ___aomod
                               _abs
                                 ___aomod (ARG)
                               _pad
                                 _fputc
                                   _usart_putc
                                 _fputs
                                   _fputc
                                     _usart_putc
                                 _strlen
                             _fputc
                               _usart_putc
                             _isdigit
                             _strncmp
                             _utoa
                               ___lodiv
                               ___lomod
                               _pad
                                 _fputc
                                   _usart_putc
                                 _fputs
                                   _fputc
                                     _usart_putc
                                 _strlen
                             _xtoa
                               _isalpha
                               _isupper
                               _pad
                                 _fputc
                                   _usart_putc
                                 _fputs
                                   _fputc
                                     _usart_putc
                                 _strlen
                               _toupper
                                 _islower
                     _i2c_reset
                       ___lldiv
                     _i2c_start
                       _i2c_wait_int
                     _i2c_stop
                       _i2c_reset
                         ___lldiv
                       _i2c_wait_int
                     _i2c_write
                       _i2c_wait_int
         _memset
       _strlen (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _usart_putc
               _fputs
                 _fputc
                   _usart_putc
               _strlen
           _fputc
             _usart_putc
           _isdigit
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _usart_putc
               _fputs
                 _fputc
                   _usart_putc
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _usart_putc
               _fputs
                 _fputc
                   _usart_putc
               _strlen
             _toupper
               _islower
     _ssd1306_command
       _smbus8_write_data
         _i2c_transfer
           _i2c_transfer_native *
             ___wmul
             _i2c_read
               _i2c_wait_int
               _printf
                 _vfprintf
                   _vfpfcnvrt
                     _atoi
                       ___wmul
                       _isdigit
                       _isspace
                     _dtoa
                       ___aodiv
                       ___aomod
                       _abs
                         ___aomod (ARG)
                       _pad
                         _fputc
                           _usart_putc
                         _fputs
                           _fputc
                             _usart_putc
                         _strlen
                     _fputc
                       _usart_putc
                     _isdigit
                     _strncmp
                     _utoa
                       ___lodiv
                       ___lomod
                       _pad
                         _fputc
                           _usart_putc
                         _fputs
                           _fputc
                             _usart_putc
                         _strlen
                     _xtoa
                       _isalpha
                       _isupper
                       _pad
                         _fputc
                           _usart_putc
                         _fputs
                           _fputc
                             _usart_putc
                         _strlen
                       _toupper
                         _islower
             _i2c_reset
               ___lldiv
             _i2c_start
               _i2c_wait_int
             _i2c_stop
               _i2c_reset
                 ___lldiv
               _i2c_wait_int
             _i2c_write
               _i2c_wait_int
     _ssd1306_commandbyte
       _smbus8_write_byte
         _i2c_transfer
           _i2c_transfer_native *
             ___wmul
             _i2c_read
               _i2c_wait_int
               _printf
                 _vfprintf
                   _vfpfcnvrt
                     _atoi
                       ___wmul
                       _isdigit
                       _isspace
                     _dtoa
                       ___aodiv
                       ___aomod
                       _abs
                         ___aomod (ARG)
                       _pad
                         _fputc
                           _usart_putc
                         _fputs
                           _fputc
                             _usart_putc
                         _strlen
                     _fputc
                       _usart_putc
                     _isdigit
                     _strncmp
                     _utoa
                       ___lodiv
                       ___lomod
                       _pad
                         _fputc
                           _usart_putc
                         _fputs
                           _fputc
                             _usart_putc
                         _strlen
                     _xtoa
                       _isalpha
                       _isupper
                       _pad
                         _fputc
                           _usart_putc
                         _fputs
                           _fputc
                             _usart_putc
                         _strlen
                       _toupper
                         _islower
             _i2c_reset
               ___lldiv
             _i2c_start
               _i2c_wait_int
             _i2c_stop
               _i2c_reset
                 ___lldiv
               _i2c_wait_int
             _i2c_write
               _i2c_wait_int
   _lnb_configure
     _check_LNB_status
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _usart_putc
                 _fputs
                   _fputc
                     _usart_putc
                 _strlen
             _fputc
               _usart_putc
             _isdigit
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _usart_putc
                 _fputs
                   _fputc
                     _usart_putc
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _usart_putc
                 _fputs
                   _fputc
                     _usart_putc
                 _strlen
               _toupper
                 _islower
       _smbus8_read_byte
         _i2c_transfer
           _i2c_transfer_native *
             ___wmul
             _i2c_read
               _i2c_wait_int
               _printf
                 _vfprintf
                   _vfpfcnvrt
                     _atoi
                       ___wmul
                       _isdigit
                       _isspace
                     _dtoa
                       ___aodiv
                       ___aomod
                       _abs
                         ___aomod (ARG)
                       _pad
                         _fputc
                           _usart_putc
                         _fputs
                           _fputc
                             _usart_putc
                         _strlen
                     _fputc
                       _usart_putc
                     _isdigit
                     _strncmp
                     _utoa
                       ___lodiv
                       ___lomod
                       _pad
                         _fputc
                           _usart_putc
                         _fputs
                           _fputc
                             _usart_putc
                         _strlen
                     _xtoa
                       _isalpha
                       _isupper
                       _pad
                         _fputc
                           _usart_putc
                         _fputs
                           _fputc
                             _usart_putc
                         _strlen
                       _toupper
                         _islower
             _i2c_reset
               ___lldiv
             _i2c_start
               _i2c_wait_int
             _i2c_stop
               _i2c_reset
                 ___lldiv
               _i2c_wait_int
             _i2c_write
               _i2c_wait_int
     _i2c_probe_addr
       _i2c_transfer
         _i2c_transfer_native *
           ___wmul
           _i2c_read
             _i2c_wait_int
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     ___wmul
                     _isdigit
                     _isspace
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                       ___aomod (ARG)
                     _pad
                       _fputc
                         _usart_putc
                       _fputs
                         _fputc
                           _usart_putc
                       _strlen
                   _fputc
                     _usart_putc
                   _isdigit
                   _strncmp
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _usart_putc
                       _fputs
                         _fputc
                           _usart_putc
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _usart_putc
                       _fputs
                         _fputc
                           _usart_putc
                       _strlen
                     _toupper
                       _islower
           _i2c_reset
             ___lldiv
           _i2c_start
             _i2c_wait_int
           _i2c_stop
             _i2c_reset
               ___lldiv
             _i2c_wait_int
           _i2c_write
             _i2c_wait_int
     _lnb_do_configure
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _usart_putc
                 _fputs
                   _fputc
                     _usart_putc
                 _strlen
             _fputc
               _usart_putc
             _isdigit
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _usart_putc
                 _fputs
                   _fputc
                     _usart_putc
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _usart_putc
                 _fputs
                   _fputc
                     _usart_putc
                 _strlen
               _toupper
                 _islower
       _smbus8_read_byte
         _i2c_transfer
           _i2c_transfer_native *
             ___wmul
             _i2c_read
               _i2c_wait_int
               _printf
                 _vfprintf
                   _vfpfcnvrt
                     _atoi
                       ___wmul
                       _isdigit
                       _isspace
                     _dtoa
                       ___aodiv
                       ___aomod
                       _abs
                         ___aomod (ARG)
                       _pad
                         _fputc
                           _usart_putc
                         _fputs
                           _fputc
                             _usart_putc
                         _strlen
                     _fputc
                       _usart_putc
                     _isdigit
                     _strncmp
                     _utoa
                       ___lodiv
                       ___lomod
                       _pad
                         _fputc
                           _usart_putc
                         _fputs
                           _fputc
                             _usart_putc
                         _strlen
                     _xtoa
                       _isalpha
                       _isupper
                       _pad
                         _fputc
                           _usart_putc
                         _fputs
                           _fputc
                             _usart_putc
                         _strlen
                       _toupper
                         _islower
             _i2c_reset
               ___lldiv
             _i2c_start
               _i2c_wait_int
             _i2c_stop
               _i2c_reset
                 ___lldiv
               _i2c_wait_int
             _i2c_write
               _i2c_wait_int
       _smbus8_write_byte
         _i2c_transfer
           _i2c_transfer_native *
             ___wmul
             _i2c_read
               _i2c_wait_int
               _printf
                 _vfprintf
                   _vfpfcnvrt
                     _atoi
                       ___wmul
                       _isdigit
                       _isspace
                     _dtoa
                       ___aodiv
                       ___aomod
                       _abs
                         ___aomod (ARG)
                       _pad
                         _fputc
                           _usart_putc
                         _fputs
                           _fputc
                             _usart_putc
                         _strlen
                     _fputc
                       _usart_putc
                     _isdigit
                     _strncmp
                     _utoa
                       ___lodiv
                       ___lomod
                       _pad
                         _fputc
                           _usart_putc
                         _fputs
                           _fputc
                             _usart_putc
                         _strlen
                     _xtoa
                       _isalpha
                       _isupper
                       _pad
                         _fputc
                           _usart_putc
                         _fputs
                           _fputc
                             _usart_putc
                         _strlen
                       _toupper
                         _islower
             _i2c_reset
               ___lldiv
             _i2c_start
               _i2c_wait_int
             _i2c_stop
               _i2c_reset
                 ___lldiv
               _i2c_wait_int
             _i2c_write
               _i2c_wait_int
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _usart_putc
               _fputs
                 _fputc
                   _usart_putc
               _strlen
           _fputc
             _usart_putc
           _isdigit
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _usart_putc
               _fputs
                 _fputc
                   _usart_putc
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _usart_putc
               _fputs
                 _fputc
                   _usart_putc
               _strlen
             _toupper
               _islower
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _usart_putc
             _fputs
               _fputc
                 _usart_putc
             _strlen
         _fputc
           _usart_putc
         _isdigit
         _strncmp
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _usart_putc
             _fputs
               _fputc
                 _usart_putc
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _usart_putc
             _fputs
               _fputc
                 _usart_putc
             _strlen
           _toupper
             _islower
   _rx_usart
     _rx_gps
     _usart_getc
   _setADF4351frequency
     _adf4351_get_lock
     _adf4351_set_freq
       _adf4351_calc_counters
         ___lldiv
         ___llmod
         _gcd
           ___llmod
       _adf4351_calc_rcnt_block
         ___awdiv
         ___lldiv
         ___llmod
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _usart_putc
                   _fputs
                     _fputc
                       _usart_putc
                   _strlen
               _fputc
                 _usart_putc
               _isdigit
               _strncmp
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _usart_putc
                   _fputs
                     _fputc
                       _usart_putc
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _usart_putc
                   _fputs
                     _fputc
                       _usart_putc
                   _strlen
                 _toupper
                   _islower
       _adf4351_calc_vco_core_freq
       _adf4351_setup
         _adf4351_write_reg0
           _adf4351_write_latch
         _adf4351_write_reg1
           _adf4351_write_latch
         _adf4351_write_reg2
           _adf4351_write_latch
         _adf4351_write_reg3
           _adf4351_write_latch
         _adf4351_write_reg4
           _adf4351_write_latch
         _adf4351_write_reg5
           _adf4351_write_latch
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _usart_putc
               _fputs
                 _fputc
                   _usart_putc
               _strlen
           _fputc
             _usart_putc
           _isdigit
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _usart_putc
               _fputs
                 _fputc
                   _usart_putc
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _usart_putc
               _fputs
                 _fputc
                   _usart_putc
               _strlen
             _toupper
               _islower
     _read_switch
   _setQRG
     _si5328_set_freq
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _usart_putc
                 _fputs
                   _fputc
                     _usart_putc
                 _strlen
             _fputc
               _usart_putc
             _isdigit
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _usart_putc
                 _fputs
                   _fputc
                     _usart_putc
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _usart_putc
                 _fputs
                   _fputc
                     _usart_putc
                 _strlen
               _toupper
                 _islower
       _si5328_perform_ical
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _usart_putc
                   _fputs
                     _fputc
                       _usart_putc
                   _strlen
               _fputc
                 _usart_putc
               _isdigit
               _strncmp
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _usart_putc
                   _fputs
                     _fputc
                       _usart_putc
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _usart_putc
                   _fputs
                     _fputc
                       _usart_putc
                   _strlen
                 _toupper
                   _islower
         _smbus8_write_byte
           _i2c_transfer
             _i2c_transfer_native *
               ___wmul
               _i2c_read
                 _i2c_wait_int
                 _printf
                   _vfprintf
                     _vfpfcnvrt
                       _atoi
                         ___wmul
                         _isdigit
                         _isspace
                       _dtoa
                         ___aodiv
                         ___aomod
                         _abs
                           ___aomod (ARG)
                         _pad
                           _fputc
                             _usart_putc
                           _fputs
                             _fputc
                               _usart_putc
                           _strlen
                       _fputc
                         _usart_putc
                       _isdigit
                       _strncmp
                       _utoa
                         ___lodiv
                         ___lomod
                         _pad
                           _fputc
                             _usart_putc
                           _fputs
                             _fputc
                               _usart_putc
                           _strlen
                       _xtoa
                         _isalpha
                         _isupper
                         _pad
                           _fputc
                             _usart_putc
                           _fputs
                             _fputc
                               _usart_putc
                           _strlen
                         _toupper
                           _islower
               _i2c_reset
                 ___lldiv
               _i2c_start
                 _i2c_wait_int
               _i2c_stop
                 _i2c_reset
                   ___lldiv
                 _i2c_wait_int
               _i2c_write
                 _i2c_wait_int
       _write_regset
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _usart_putc
                   _fputs
                     _fputc
                       _usart_putc
                   _strlen
               _fputc
                 _usart_putc
               _isdigit
               _strncmp
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _usart_putc
                   _fputs
                     _fputc
                       _usart_putc
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _usart_putc
                   _fputs
                     _fputc
                       _usart_putc
                   _strlen
                 _toupper
                   _islower
         _smbus8_write_byte
           _i2c_transfer
             _i2c_transfer_native *
               ___wmul
               _i2c_read
                 _i2c_wait_int
                 _printf
                   _vfprintf
                     _vfpfcnvrt
                       _atoi
                         ___wmul
                         _isdigit
                         _isspace
                       _dtoa
                         ___aodiv
                         ___aomod
                         _abs
                           ___aomod (ARG)
                         _pad
                           _fputc
                             _usart_putc
                           _fputs
                             _fputc
                               _usart_putc
                           _strlen
                       _fputc
                         _usart_putc
                       _isdigit
                       _strncmp
                       _utoa
                         ___lodiv
                         ___lomod
                         _pad
                           _fputc
                             _usart_putc
                           _fputs
                             _fputc
                               _usart_putc
                           _strlen
                       _xtoa
                         _isalpha
                         _isupper
                         _pad
                           _fputc
                             _usart_putc
                           _fputs
                             _fputc
                               _usart_putc
                           _strlen
                         _toupper
                           _islower
               _i2c_reset
                 ___lldiv
               _i2c_start
                 _i2c_wait_int
               _i2c_stop
                 _i2c_reset
                   ___lldiv
                 _i2c_wait_int
               _i2c_write
                 _i2c_wait_int
   _show_display
     _itoa
       ___awdiv
       ___awmod
       _memset
     _lcd_clear_screen
       _memset
       _ssd1306_data
         _smbus8_write_data
           _i2c_transfer
             _i2c_transfer_native *
               ___wmul
               _i2c_read
                 _i2c_wait_int
                 _printf
                   _vfprintf
                     _vfpfcnvrt
                       _atoi
                         ___wmul
                         _isdigit
                         _isspace
                       _dtoa
                         ___aodiv
                         ___aomod
                         _abs
                           ___aomod (ARG)
                         _pad
                           _fputc
                             _usart_putc
                           _fputs
                             _fputc
                               _usart_putc
                           _strlen
                       _fputc
                         _usart_putc
                       _isdigit
                       _strncmp
                       _utoa
                         ___lodiv
                         ___lomod
                         _pad
                           _fputc
                             _usart_putc
                           _fputs
                             _fputc
                               _usart_putc
                           _strlen
                       _xtoa
                         _isalpha
                         _isupper
                         _pad
                           _fputc
                             _usart_putc
                           _fputs
                             _fputc
                               _usart_putc
                           _strlen
                         _toupper
                           _islower
               _i2c_reset
                 ___lldiv
               _i2c_start
                 _i2c_wait_int
               _i2c_stop
                 _i2c_reset
                   ___lldiv
                 _i2c_wait_int
               _i2c_write
                 _i2c_wait_int
       _ssd1306_setpos
         _ssd1306_command
           _smbus8_write_data
             _i2c_transfer
               _i2c_transfer_native *
                 ___wmul
                 _i2c_read
                   _i2c_wait_int
                   _printf
                     _vfprintf
                       _vfpfcnvrt
                         _atoi
                           ___wmul
                           _isdigit
                           _isspace
                         _dtoa
                           ___aodiv
                           ___aomod
                           _abs
                             ___aomod (ARG)
                           _pad
                             _fputc
                               _usart_putc
                             _fputs
                               _fputc
                                 _usart_putc
                             _strlen
                         _fputc
                           _usart_putc
                         _isdigit
                         _strncmp
                         _utoa
                           ___lodiv
                           ___lomod
                           _pad
                             _fputc
                               _usart_putc
                             _fputs
                               _fputc
                                 _usart_putc
                             _strlen
                         _xtoa
                           _isalpha
                           _isupper
                           _pad
                             _fputc
                               _usart_putc
                             _fputs
                               _fputc
                                 _usart_putc
                             _strlen
                           _toupper
                             _islower
                 _i2c_reset
                   ___lldiv
                 _i2c_start
                   _i2c_wait_int
                 _i2c_stop
                   _i2c_reset
                     ___lldiv
                   _i2c_wait_int
                 _i2c_write
                   _i2c_wait_int
     _memcmp
     _memcpy
     _print_string
       _itoa (ARG)
         ___awdiv
         ___awmod
         _memset
       _print_char (ARG)
         _lcd_draw8x8
           _ssd1306_data
             _smbus8_write_data
               _i2c_transfer
                 _i2c_transfer_native *
                   ___wmul
                   _i2c_read
                     _i2c_wait_int
                     _printf
                       _vfprintf
                         _vfpfcnvrt
                           _atoi
                             ___wmul
                             _isdigit
                             _isspace
                           _dtoa
                             ___aodiv
                             ___aomod
                             _abs
                               ___aomod (ARG)
                             _pad
                               _fputc
                                 _usart_putc
                               _fputs
                                 _fputc
                                   _usart_putc
                               _strlen
                           _fputc
                             _usart_putc
                           _isdigit
                           _strncmp
                           _utoa
                             ___lodiv
                             ___lomod
                             _pad
                               _fputc
                                 _usart_putc
                               _fputs
                                 _fputc
                                   _usart_putc
                               _strlen
                           _xtoa
                             _isalpha
                             _isupper
                             _pad
                               _fputc
                                 _usart_putc
                               _fputs
                                 _fputc
                                   _usart_putc
                               _strlen
                             _toupper
                               _islower
                   _i2c_reset
                     ___lldiv
                   _i2c_start
                     _i2c_wait_int
                   _i2c_stop
                     _i2c_reset
                       ___lldiv
                     _i2c_wait_int
                   _i2c_write
                     _i2c_wait_int
           _ssd1306_setpos
             _ssd1306_command
               _smbus8_write_data
                 _i2c_transfer
                   _i2c_transfer_native *
                     ___wmul
                     _i2c_read
                       _i2c_wait_int
                       _printf
                         _vfprintf
                           _vfpfcnvrt
                             _atoi
                               ___wmul
                               _isdigit
                               _isspace
                             _dtoa
                               ___aodiv
                               ___aomod
                               _abs
                                 ___aomod (ARG)
                               _pad
                                 _fputc
                                   _usart_putc
                                 _fputs
                                   _fputc
                                     _usart_putc
                                 _strlen
                             _fputc
                               _usart_putc
                             _isdigit
                             _strncmp
                             _utoa
                               ___lodiv
                               ___lomod
                               _pad
                                 _fputc
                                   _usart_putc
                                 _fputs
                                   _fputc
                                     _usart_putc
                                 _strlen
                             _xtoa
                               _isalpha
                               _isupper
                               _pad
                                 _fputc
                                   _usart_putc
                                 _fputs
                                   _fputc
                                     _usart_putc
                                 _strlen
                               _toupper
                                 _islower
                     _i2c_reset
                       ___lldiv
                     _i2c_start
                       _i2c_wait_int
                     _i2c_stop
                       _i2c_reset
                         ___lldiv
                       _i2c_wait_int
                     _i2c_write
                       _i2c_wait_int
         _memset
       _strlen (ARG)
     _strlen
   _si5328_init
     _i2c_probe_addr
       _i2c_transfer
         _i2c_transfer_native *
           ___wmul
           _i2c_read
             _i2c_wait_int
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     ___wmul
                     _isdigit
                     _isspace
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                       ___aomod (ARG)
                     _pad
                       _fputc
                         _usart_putc
                       _fputs
                         _fputc
                           _usart_putc
                       _strlen
                   _fputc
                     _usart_putc
                   _isdigit
                   _strncmp
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _usart_putc
                       _fputs
                         _fputc
                           _usart_putc
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _usart_putc
                       _fputs
                         _fputc
                           _usart_putc
                       _strlen
                     _toupper
                       _islower
           _i2c_reset
             ___lldiv
           _i2c_start
             _i2c_wait_int
           _i2c_stop
             _i2c_reset
               ___lldiv
             _i2c_wait_int
           _i2c_write
             _i2c_wait_int
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _usart_putc
               _fputs
                 _fputc
                   _usart_putc
               _strlen
           _fputc
             _usart_putc
           _isdigit
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _usart_putc
               _fputs
                 _fputc
                   _usart_putc
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _usart_putc
               _fputs
                 _fputc
                   _usart_putc
               _strlen
             _toupper
               _islower
     _si5328_perform_ical
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _usart_putc
                 _fputs
                   _fputc
                     _usart_putc
                 _strlen
             _fputc
               _usart_putc
             _isdigit
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _usart_putc
                 _fputs
                   _fputc
                     _usart_putc
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _usart_putc
                 _fputs
                   _fputc
                     _usart_putc
                 _strlen
               _toupper
                 _islower
       _smbus8_write_byte
         _i2c_transfer
           _i2c_transfer_native *
             ___wmul
             _i2c_read
               _i2c_wait_int
               _printf
                 _vfprintf
                   _vfpfcnvrt
                     _atoi
                       ___wmul
                       _isdigit
                       _isspace
                     _dtoa
                       ___aodiv
                       ___aomod
                       _abs
                         ___aomod (ARG)
                       _pad
                         _fputc
                           _usart_putc
                         _fputs
                           _fputc
                             _usart_putc
                         _strlen
                     _fputc
                       _usart_putc
                     _isdigit
                     _strncmp
                     _utoa
                       ___lodiv
                       ___lomod
                       _pad
                         _fputc
                           _usart_putc
                         _fputs
                           _fputc
                             _usart_putc
                         _strlen
                     _xtoa
                       _isalpha
                       _isupper
                       _pad
                         _fputc
                           _usart_putc
                         _fputs
                           _fputc
                             _usart_putc
                         _strlen
                       _toupper
                         _islower
             _i2c_reset
               ___lldiv
             _i2c_start
               _i2c_wait_int
             _i2c_stop
               _i2c_reset
                 ___lldiv
               _i2c_wait_int
             _i2c_write
               _i2c_wait_int
     _smbus8_write_byte
       _i2c_transfer
         _i2c_transfer_native *
           ___wmul
           _i2c_read
             _i2c_wait_int
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     ___wmul
                     _isdigit
                     _isspace
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                       ___aomod (ARG)
                     _pad
                       _fputc
                         _usart_putc
                       _fputs
                         _fputc
                           _usart_putc
                       _strlen
                   _fputc
                     _usart_putc
                   _isdigit
                   _strncmp
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _usart_putc
                       _fputs
                         _fputc
                           _usart_putc
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _usart_putc
                       _fputs
                         _fputc
                           _usart_putc
                       _strlen
                     _toupper
                       _islower
           _i2c_reset
             ___lldiv
           _i2c_start
             _i2c_wait_int
           _i2c_stop
             _i2c_reset
               ___lldiv
             _i2c_wait_int
           _i2c_write
             _i2c_wait_int
     _write_regset
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _usart_putc
                 _fputs
                   _fputc
                     _usart_putc
                 _strlen
             _fputc
               _usart_putc
             _isdigit
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _usart_putc
                 _fputs
                   _fputc
                     _usart_putc
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _usart_putc
                 _fputs
                   _fputc
                     _usart_putc
                 _strlen
               _toupper
                 _islower
       _smbus8_write_byte
         _i2c_transfer
           _i2c_transfer_native *
             ___wmul
             _i2c_read
               _i2c_wait_int
               _printf
                 _vfprintf
                   _vfpfcnvrt
                     _atoi
                       ___wmul
                       _isdigit
                       _isspace
                     _dtoa
                       ___aodiv
                       ___aomod
                       _abs
                         ___aomod (ARG)
                       _pad
                         _fputc
                           _usart_putc
                         _fputs
                           _fputc
                             _usart_putc
                         _strlen
                     _fputc
                       _usart_putc
                     _isdigit
                     _strncmp
                     _utoa
                       ___lodiv
                       ___lomod
                       _pad
                         _fputc
                           _usart_putc
                         _fputs
                           _fputc
                             _usart_putc
                         _strlen
                     _xtoa
                       _isalpha
                       _isupper
                       _pad
                         _fputc
                           _usart_putc
                         _fputs
                           _fputc
                             _usart_putc
                         _strlen
                       _toupper
                         _islower
             _i2c_reset
               ___lldiv
             _i2c_start
               _i2c_wait_int
             _i2c_stop
               _i2c_reset
                 ___lldiv
               _i2c_wait_int
             _i2c_write
               _i2c_wait_int
   _usart_init
     ___lldiv
     _irq_set_handler

 _global_irq_handler (ROOT)
   _usart_rx_irq_handler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0      D5      10       83.2%
BITBANK2           100      0       0       7        0.0%
BANK2              100      6      E6       8       89.8%
BITBANK1           100      0       0       5        0.0%
BANK1              100     88      FF       6       99.6%
BITBANK5            F4      0       0      15        0.0%
BANK5               F4      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80     80      80       4      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     66      72       1       90.5%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3AC      14        0.0%
DATA                 0      0     3AC      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Oct 18 14:07:49 2019

                 _PIN_LED_LNB_GOOD_DEF 78B1                  __end_of_adf4351_setup 618A  
                       _out_freq_table 7753              adf4351_calc_counters@frac 0034  
     __size_of_adf4351_calc_rcnt_block 02E4                      i2c_probe_addr@dev 00CB  
                    i2c_probe_addr@msg 00CE                            _SSPSTATbits 000FC7  
                                   l13 5CDA                                     l31 613E  
                                   l40 5DF6                                     l16 629A  
                                   l34 6004                                     _LO 01C5  
                         ___awdiv@sign 0012                     i2c_probe_addr@addr 00CD  
                  ___wmul@multiplicand 000F                            __CFG_BORV$3 000000  
                       _PIN_LED_CPU_OK 7783                           __CFG_CP0$OFF 000000  
                         __CFG_CP1$OFF 000000                           __CFG_CP2$OFF 000000  
                         __CFG_CP3$OFF 000000                  print_string@underline 0114  
             __end_of_adf4351_set_freq 572A               __end_of_adf4351_set_mode 535E  
                                  l131 4DFC                                    l212 4506  
                                  l220 3242                                    l301 4928  
                                  l141 61D0                                    l302 49B2  
                                  l310 6442                                    l231 4884  
                                  l208 505E                                    l216 1874  
                                  l224 23C2                                    l232 47EE  
                                  l136 56BA                                    l153 535C  
                                  l313 49F4                                    l233 4840  
                                  l137 5728                                    l162 5F02  
                                  l314 4A92                                    l322 5B36  
                                  l235 48BE                                    l171 2740  
                                  l244 307C                                    l228 59C2  
                                  l236 48CE                                    l165 555C  
                                  l421 6602                                    l149 47E8  
                                  l174 28D6                                    l343 2674  
                                  l271 5FB0                                    l183 1B58  
                                  l511 4F96                                    l503 4D24  
                                  l168 6188                                    l424 6614  
                                  l344 2660                                    l184 19BC  
                                  l192 41D2                                    l442 6620  
                                  l290 5B3C                                    l530 3722  
                                  l186 1A2C                                    l506 4EF2  
                                  l418 5C12                                    l275 528C  
                                  l507 4F0C                                    l292 5BAA  
                                  l372 3F46                                    l428 5EAA  
                                  l516 5E50                                    l508 4F26  
                                  l277 529C                                    l541 65E2  
                                  l613 651E                                    l605 460C  
                                  l509 4F40                                    l278 52A2  
                                  l446 661E                                    l295 5B86  
                                  l631 5C76                                    l439 654C  
                                  l616 636C                                    l608 632E  
                                  l368 54B6                                    l704 58BE  
                                  l289 5B6A                                    l617 6394  
                                  l609 6356                                    l377 3F7E  
                                  l626 6318                                    l634 65BE  
                                  l538 4C4C                                    l458 6214  
                                  l299 48EC                                    l811 65FE  
                                  l643 3B88                                    l387 43FA  
                                  l672 0884                                    l817 3588  
                                  l649 57B2                                    l659 0EE4  
                                  l780 2E2C               __end_of_adf4351_set_tune 5F04  
                                  l781 2E34                                    l693 0D20  
                                  l782 2E40                                    l775 2D0E  
                                  l784 2EAE                                    l877 14FA  
                                  l976 3CF6                                    l985 40B6  
                                  l988 3270                                    l989 328E  
                         __CFG_CPB$OFF 000000                           __CFG_CPD$OFF 000000  
                          __CFG_WDTPS$ 000018                            lcd_init@i2c 0182  
                                  _abs 629C                                    _gcd 47EA  
                                  _pad 5124           __size_of_i2c_transfer_native 02B2  
                        _font8x8_basic 7427                            lcd_init@res 0185  
                         ___awmod@sign 0012                                    prod 000FF3  
                                  tosl 000FFD                                    wreg 000FE8  
                         lcd_draw8x8@x 00EC                           lcd_draw8x8@y 00ED  
                     _PIN_LED_ADF_LOCK 7793                __end_of_irq_set_handler 6216  
                       read_switch@rb1 0010                         read_switch@rb2 0011  
                       read_switch@rb3 0012                         read_switch@rb4 0013  
                         __CFG_LVP$OFF 000000                        _PIN_LED_SI_LOCK 7787  
                         __CFG_WDT$OFF 000000                                   l1000 33EC  
                                 l1005 42A2                                   l1008 42E8  
                                 l1202 1E36                                   l2003 2CC6  
                                 ?_abs 001F                                   l2006 2CCE  
                                 l1222 1E6E                                   l2015 64EA  
                                 l2023 6056                                   l1207 290E  
                                 l2111 5D9A                                   l1231 1F0C  
                                 l1224 1E76                                   l1217 2AD6  
                                 l1209 2916                                   l2009 63D0  
                                 l2106 5D92                                   l2050 60A6  
                                 l1411 38AA                                   l1171 5168  
                                 l1331 5600                                   l1324 55F0  
                                 l2044 569A                                   l2029 64B2  
                                 l1245 20A8                                   l1261 0106  
                                 l2054 3A20                                   l1174 51AA  
                                 l1182 1BF8                                   ?_gcd 0016  
                                 l1247 210A                                   l1424 3CEC  
                                 l1176 51E4                                   l1184 1C00  
                                 l2091 4B70                                   l2075 6574  
                                 l2068 6258                                   l1276 0826  
                                 l1293 5D34                                   l1541 540C  
                                 l1294 5D3C                                   l2087 60F4  
                                 l1528 5122                                   l1297 659A  
                                 l2185 647A                                   l1724 583A  
                                 l1717 582A                                   l1742 46FC  
                                 l1735 46DC                                   l6000 4F98  
                                 l1752 4ECC                                   l1745 4EAC  
                                 l6002 4FB2                                   l6010 47EA  
                                 l6004 4FC2                                   l6012 47FE  
                                 l6100 4184                                   l6006 5008  
                                 l6014 481C                                   l6102 41C2  
                                 l6008 504A                                   l7000 0F42  
                                 l6016 4850                                   l7010 101A  
                                 l7002 0F6A                                   l1972 62D2  
                                 l7020 10EC                                   l7012 104A  
                                 l7004 0F9A                                   l7030 11C6  
                                 l7022 111A                                   l7014 1072  
                                 l7006 0FC2                                   ?_pad 0019  
                                 l1975 62DA                                   l8000 3C14  
                                 l7040 1290                                   l7032 11EE  
                                 l7024 1142                                   l7016 1098  
                                 l7008 0FF2                                   l6400 2D9C  
                                 l6170 6140                                   l8010 3C96  
                                 l8002 3C28                                   l7050 1356  
                                 l7042 12B6                                   l7034 121C  
                                 l7026 1170                                   l7018 10C6  
                                 l6410 2E00                                   l6402 2DB0  
                                 l6090 40F0                                   l6082 40B8  
               ??_check_ADF5341_status 00A5                                   l8004 3C36  
                                 l8012 3C9C                                   l8020 460E  
                                 l7060 142C                                   l7052 1384  
                                 l7044 12DC                                   l7036 1244  
                                 l7028 1198                                   l6412 2E14  
                                 l6404 2DC4                                   l6092 410E  
                                 l6084 40C0                                   l8102 2C86  
                                 l8014 3CAC                                   l8006 3C64  
                                 l8030 4662                                   l8022 461A  
                                 l7062 1452                                   l7054 13AA  
                                 l7046 1302                                   l7038 126A  
                                 l6422 2E48                                   l6406 2DD8  
                                 l6094 412A                                   l6280 54B8  
                                 l8104 2C98                                   l8016 3CCC  
                                 l8008 3C84                                   l8120 1BD0  
                                 l8112 1B5A                                   l8040 46D6  
                                 l8032 4674                                   l8024 4638  
                                 l8200 2A6C                                   l7064 1480  
                                 l7056 13D8                                   l7048 1330  
                                 l6424 2E4E                                   l6408 2DEC  
                                 l6432 2E5A                                   l6360 5E54  
                                 l6096 4148                                   l6088 40E2  
                                 l9000 53EC                                   l5810 2F26  
                                 l5802 2EB0                                   l8106 2CAA  
                                 l8130 1C28                                   l8122 1BD2  
                                 l8114 1B7A                                   l8034 46A2  
                                 l8026 4640                                   l8050 4E46  
                                 l8042 4DFE                                   l8202 2A86  
                                 l8210 1E38                                   l7066 14A6  
                                 l7058 13FE                                   l9010 6262  
                                 l6370 5EA2                                   l6362 5E6C  
                                 l6098 4168                                   l9002 53FC  
                                 l6354 61D4                                   l5820 2FF2  
                                 l5812 2F58                                   l5804 2EC0  
                                 l8060 600A                                   l8140 1CC8  
                                 l8132 1C2E                                   l8124 1BEC  
                                 l8116 1BA2                                   l8036 46C2  
                                 l8028 4654                                   l8052 4E74  
                                 l8044 4E1C                                   l8204 2AA0  
                                 l8220 1E94                                   l8212 1E46  
                                 l8300 0044                                   l7068 14D4  
                                 l9012 626E                                   l6380 2CEE  
                                 l6364 5E76                                   l9100 4F86  
                                 l9004 5404                                   l6356 61E4  
                                 l5814 2F88                                   l5822 2FFC  
                                 l5806 2EF0                                   l5910 2176  
                                 l8062 601E                                   l8070 2AD8  
                                 l8150 1D70                                   l8142 1CCE  
                                 l8134 1C36                                   l8126 1C08  
                                 l8118 1BC2                                   l8038 46C4  
                                 l8054 4E94                                   l8046 4E24  
                                 l8206 2AAE                                   l8230 1ED4  
                                 l8222 1EB4                                   l8214 1E48  
                                 l8310 007C                                   l8302 0056  
                                 l9102 65C0                                   l9014 6276  
                                 l6390 2D38                                   l6374 2CD0  
                                 l6366 5E8C                                   l6358 5E52  
                                 l9030 571C                                   l9022 56CA  
                                 l5824 3012                                   l5816 2FBA  
                                 l5808 2EF8                                   l5920 22B2  
                                 l5912 21B6                                   l5904 210C  
                                 l6640 52D4                                   l8064 604C  
                                 l8080 2B6E                                   l8072 2AEC  
                                 l8160 1DD2                                   l8152 1D8A  
                                 l8144 1CD4                                   l8136 1C40  
                                 l8128 1C1A                                   l8056 4EA6  
                                 l8048 4E38                                   l8240 1F52  
                                 l8232 1EF0                                   l8224 1EBC  
                                 l8216 1E62                                   l8400 0620  
                                 l8304 005A                                   l9104 65DE  
                                 l9200 3460                                   l9008 625A  
                                 l9112 6504                                   l9040 3E9A  
                                 l6392 2D4C                                   l6384 2D06  
                                 l6376 2CD4                                   l6368 5EA0  
                                 l9024 56E6                                   l5826 3040  
                                 l5818 2FEE                                   l5930 14FC  
                                 l5922 22F2                                   l5914 21F6  
                                 l5906 2126                                   l6642 5304  
                                 l6634 52A4                                   l6650 5EAC  
                                 l8066 6050                                   l8058 6006  
                                 l8090 2B96                                   l8082 2B72  
                                 l8074 2AF0                                   l8162 1DD8  
                                 l8170 1E0E                                   l8154 1DA4  
                                 l8138 1C46                                   l8146 1D38  
                                 l8250 1FC2                                   l8234 1F00  
                                 l8226 1EC6                                   l8218 1E8C  
                                 l8410 06EE                                   l8330 00A0  
                                 l8322 008E                                   l8314 0082  
                                 l8306 0068                                   l9210 3498  
                                 l9202 3464                                   l9122 5C4E  
                                 l9114 5C18                                   l9130 5734  
                                 l9050 3F0A                                   l9042 3EAE  
                                 l9034 3E40                                   l6394 2D60  
                                 l6386 2D12                                   l6378 2CE8  
                                 l6298 618A                                   l5850 57EC  
                                 l5842 57B4                                   l9026 56F2  
                                 l9018 569C                                   l5828 3074  
                                 l5940 15E6                                   l5932 1516  
                                 l5924 232E                                   l5916 2232  
                                 l5908 2136                                   l6644 5314  
                                 l6660 5EF2                                   l6652 5EBE  
                                 l8092 2B9E                                   l8076 2AF4  
                                 l8164 1DEA                                   l8148 1D52  
                                 l8156 1DB2                                   l8180 2902  
                                 l8260 2066                                   l8252 1FC8  
                                 l8244 1F8C                                   l8228 1ECC  
                                 l8420 07A8                                   l8412 06FE  
                                 l8404 065C                                   l8340 0170  
                                 l8308 006A                                   l8332 00F4  
                                 l8500 5278                                   l9220 34E6  
                                 l9212 34B4                                   l9204 3474  
                                 l9124 5C6E                                   l9116 5C34  
                                 l9132 5782                                   l9108 64F0  
                                 l9060 3F6A                                   l9052 3F1E  
                                 l9044 3EB2                                   l9036 3E62  
                                 l6396 2D74                                   l6388 2D24  
                                 l5852 580A                                   l5844 57CA  
                                 l9028 56FE                                   l9140 585C  
                                 l9300 5BAC                                   l5950 1722  
                                 l5942 1626                                   l5934 1526  
                                 l5926 236E                                   l5918 2272  
                                 l6646 5344                                   l6638 52C2  
                                 l6654 5ECA                                   l8094 2BE6  
                                 l8086 2B78                                   l8078 2B24  
                                 l8166 1DF6                                   l8158 1DC4  
                                 l8190 29CC                                   l8182 293E  
                                 l8174 28D8                                   l8270 20CC  
                                 l8262 2080                                   l8254 1FCE  
                                 l8246 1F9E                                   l8238 1F40  
                                 l8430 07E4                                   l8422 07B6  
                                 l8414 0748                                   l8406 0692  
                                 l8342 0180                                   l8334 0114  
                                 l8326 0094                                   l8318 0088  
                                 l8510 5B78                                   l8502 5B38  
                                 l9230 3530                                   l9222 34F8  
                                 l9214 34B8                                   l9206 3478  
                                 l9118 5C38                                   l9134 5786  
                                 l9070 4352                                   l9054 3F22  
                                 l9046 3ED2                                   l9038 3E76  
                                 l6398 2D88                                   l6734 6520  
                                 l5854 581A                                   l5846 57D2  
                                 l9142 5884                                   l9150 5602  
                                 l9310 5BCA                                   l9302 5BC2  
                                 l5960 1860                                   l5952 1768  
                                 l5944 1666                                   l5936 1566  
                                 l5928 23AE                                   l6648 5350  
                                 l6656 5ED2                                   l8088 2B8E  
                                 l8168 1DFE                                   l8192 29D2  
                                 l8184 2946                                   l8176 28E6  
                                 l8272 20E2                                   l8264 209A  
                                 l8248 1FB2                                   l8256 202C  
                                 l8424 07CA                                   l8408 06C8  
                                 l8360 02A8                                   l8352 0204  
                                 l8344 018E                                   l8336 0116  
                                 l8512 5B94                                   l8504 5B3E  
                                 l8600 5AE4                                   l9240 356A  
                                 l9232 3534                                   l9224 34FE  
                                 l9216 34BC                                   l9208 3488  
                                 l9128 572A                                   l9400 4508  
                                 l9080 43F4                                   l9072 435E  
                                 l9064 42EA                                   l9048 3EE6  
                                 l9056 3F46                                   l6736 652C  
                                 l5856 5824                                   l5848 57DE  
                                 l9144 58A0                                   l9136 583C  
                                 l9160 566A                                   l9152 5616  
                                 l9320 5BD4                                   l9312 5BCC  
                                 l9304 5BC4                                   l9250 4D8A  
                                 l9242 4D26                                   l5954 17A0  
                                 l5946 16A2                                   l5938 15A6  
                                 l5970 307E                                   l5962 5944  
                                 l6658 5EE2                                   l8098 2C34  
                                 l8290 4B22                                   l8282 4ACA  
                                 l8194 29D8                                   l8186 2950  
                                 l8178 28E8                                   l8266 20B6  
                                 l8258 2048                                   l8418 0784  
                                 l8370 03CE                                   l8346 01AE  
                                 l8354 0216                                   l8338 013A  
                                 l8434 07F0                                   l8514 5B96  
                                 l8506 5B5E                                   l8530 490A  
                                 l8522 48D2                                   l8602 5AF6  
                                 l9234 3548                                   l9226 3502  
                                 l9218 34D2                                   l9410 454A  
                                 l9402 4520                                   l9074 4394  
                                 l9082 43F8                                   l9066 4330  
                                 l9058 3F5A                                   l6738 6540  
                                 l9090 4F04                                   l9146 58B2  
                                 l9138 5840                                   l9162 5676  
                                 l9154 5624                                   l9170 6078  
                                 l9330 5C10                                   l9322 5C04  
                                 l9314 5BCE                                   l9306 5BC6  
                                 l9252 4DBA                                   l9244 4D42  
                                 l5956 17E0                                   l5948 16E2  
                                 l5980 316E                                   l5972 3098  
                                 l5964 595E                                   l7900 518C  
                                 l8292 4B4C                                   l8284 4AD8  
                                 l8276 4A94                                   l8188 2956  
                                 l8196 2A3C                                   l8268 20BC  
                                 l8436 0814                                   l8428 07D6  
                                 l8364 02E0                                   l8356 023A  
                                 l8348 01BC                                   l8452 5CDC  
                                 l9260 4744                                   l8540 494C  
                                 l8532 491C                                   l8524 48D4  
                                 l8460 555E                                   l8612 5B2E  
                                 l8604 5B02                                   l8620 23D6  
                                 l9236 3554                                   l9228 3520  
                                 l9180 33F8                                   l9420 457E  
                                 l9412 4552                                   l9404 4534  
                                 l9076 43B0                                   l9068 4342  
                                 l6596 3F80                                   l9092 4F1E  
                                 l9156 5636                                   l9172 607C  
                                 l9500 0A86                                   l9340 4CA0  
                                 l9332 4C4E                                   l9324 5C08  
                                 l9316 5BD0                                   l9308 5BC8  
                                 l9254 4DE8                                   l9246 4D52  
                                 l5990 4416                                   l5958 1820  
                                 l5982 31AE                                   l5974 30A8  
                                 l5966 596E                                   l7910 62B6  
                                 l7902 51B8                                   l8286 4AF4  
                                 l8278 4ABE                                   l8198 2A4E  
                                 l8390 0576                                   l8382 04AE  
                                 l8374 0406                                   l8366 0316  
                                 l8358 025E                                   l8454 5CE4  
                                 l9270 47B2                                   l9262 4756  
                                 l8518 5BA2                                   l8550 499E  
                                 l8542 4968                                   l8534 492A  
                                 l8526 48E6                                   l8470 55A6  
                                 l8462 556E                                   l8606 5B14  
                                 l8630 245C                                   l8622 23E2  
                                 l9238 3566                                   l9190 3428  
                                 l8710 5FD4                                   l8702 5FB2  
                                 l9430 45D8                                   l9422 4584  
                                 l9414 4556                                   l9406 4542  
                                 l9078 43C4                                   l6598 4090  
                                 l9094 4F38                                   l9086 4ECE  
                                 l9158 5658                                   l9174 6088  
                                 l9166 6058                                   l9510 0AC2  
                                 l9502 0A88                                   l9342 4CC0  
                                 l9334 4C66                                   l9326 5C0C  
                                 l9318 5BD2                                   l9256 4DF4  
                                 l9248 4D6E                                   l5992 4426  
                                 l5984 31EE                                   l5976 30EE  
                                 l5968 59AE                                   l7904 51CC  
                                 l8288 4B10                                   l7912 647C  
                                 l7920 5D3E                                   l8392 059A  
                                 l8384 04E4                                   l8376 042A  
                                 l8368 034C                                   l8296 0012  
                                 l8456 5CF2                                   l9272 47E4  
                                 l9264 4766                                   l8536 493C  
                                 l8528 48EE                                   l8480 55EA  
                                 l8472 55B0                                   l8464 5584  
                                 l8560 6410                                   l8608 5B22  
                                 l8632 2476                                   l8640 24C4  
                                 l8624 2404                                   l8616 23C4  
                                 l9360 35EE                                   l9352 358A  
                                 l9280 5FA0                                   l9192 3438  
                                 l9184 3418                                   l8712 5FD8  
                                 l8704 5FBA                                   l9432 45F2  
                                 l9424 458A                                   l9416 4564  
                                 l8800 50A0                                   l9096 4F52  
                                 l9088 4EEA                                   l9600 42B2  
                                 l9168 606C                                   l9176 608C  
                                 l9520 0BBA                                   l9512 0AD6  
                                 l9504 0A8E                                   l9440 0850  
                                 l9344 4CCE                                   l9336 4C7A  
                                 l9328 5C0E                                   l5994 446C  
                                 l5986 322E                                   l5978 312E  
                                 l7930 64B4                                   l7850 6610  
                                 l8394 05BE                                   l8386 053E  
                                 l8378 0476                                   l8298 0036  
                                 l8458 5D18                                   l8482 654E  
                                 l9266 4772                                   l9258 46FE  
                                 l8570 49E8                                   l8554 49AA  
                                 l8546 497E                                   l8538 4946  
                                 l8474 55CE                                   l8466 558C  
                                 l8490 51E8                                   l8562 6436  
                                 l8650 252A                                   l8642 24D6  
                                 l8634 24A4                                   l8626 2418  
                                 l8618 23CC                                   l9370 3650  
                                 l9362 35FE                                   l9354 3590  
                                 l9274 5F5C                                   l9194 343C  
                                 l9186 3420                                   l9178 33F0  
                                 l8714 5FE8                                   l8706 5FC6  
                                 l8722 6330                                   l8730 62E0  
                                 l9426 45A4                                   l9418 4568  
                                 l9290 5456                                   l9282 540E  
                                 l8810 50D6                                   l8802 50B2  
                                 l9610 3248                                   l9098 4F72  
                                 l9602 42B6                                   l9530 0C00  
                                 l9522 0BC0                                   l9514 0AE6  
                                 l9506 0A92                                   l9450 0902  
                                 l9442 0860                                   l9434 0828  
                                 l9346 4D04                                   l9338 4C86  
                                 l5996 44B2                                   l5988 43FC  
                                 l7940 3724                                   l7908 629C  
                                 l7916 6396                                   l7924 5D74  
                                 l8396 05D4                                   l8484 6558  
                                 l9268 47A6                                   l8580 4A2A  
                                 l8572 4A02                                   l8564 49B4  
                                 l8548 4990                                   l8476 55DE  
                                 l8468 5598                                   l8492 51F0  
                                 l8660 2594                                   l8644 24EE  
                                 l8628 243A                                   l9380 36BA  
                                 l9372 3656                                   l9364 360A  
                                 l9356 35D4                                   l9276 5F78  
                                 l9196 344C                                   l9188 3424  
                                 l8708 5FCE                                   l8724 6358  
                                 l8732 62EC                                   l8740 610A  
                                 l9428 45BE                                   l9292 5476  
                                 l9284 5426                                   l8900 2872  
                                 l8812 50EC                                   l8804 50BA  
                                 l8820 5102                                   l9620 32AC  
                                 l9612 3252                                   l9604 42CC  
                                 l9540 0C7A                                   l9532 0C14  
                                 l9524 0BC4                                   l9516 0B50  
                                 l9508 0AB0                                   l9460 0938  
                                 l9444 0870                                   l9348 4D18  
                                 l8750 38AC                                   l5998 44F2  
                                 l7934 6576                                   l7950 3768  
                                 l7942 3728                                   l7854 6620  
                                 l7870 60E8                                   l7926 5D86  
                                 l8398 05E2                                   l8590 4A8A  
                                 l8582 4A54                                   l8574 4A10  
                                 l8566 49B8                                   l8478 55E0  
                                 l8494 51F2                                   l8558 640C  
                                 l8670 25E4                                   l8662 259A  
                                 l8646 2508                                   l8654 2540  
                                 l8638 24BC                                   l8830 5DA4  
                                 l9390 36FE                                   l9382 36C8  
                                 l9374 3688                                   l9366 3610  
                                 l9358 35EA                                   l9278 5F94  
                                 l8910 6618                                   l9198 3450  
                                 l8718 631A                                   l8734 6304  
                                 l8742 6112                                   l9294 5496  
                                 l9286 543A                                   l8902 2886  
                                 l8822 5112                                   l8814 50F4  
                                 l8806 50C2                                   l9630 332A  
                                 l9622 32B4                                   l9614 3266  
                                 l9606 42D0                                   l9550 0CE2  
                                 l9534 0C28                                   l9542 0C82  
                                 l9518 0BB6                                   l9526 0BC8  
                                 l9470 09A8                                   l9462 0948  
                                 l9454 090C                                   l9446 0880  
                                 l9438 083C                                   l8760 390C  
                                 l7936 6592                                   l7960 37BE  
                                 l7952 3788                                   l7944 3736  
                                 l7848 6602                                   l7880 6238  
                                 l7864 60A8                                   l8584 4A56  
                                 l8576 4A1C                                   l8568 49D4  
                                 l8496 51F4                                   l8488 51E6  
                                 l8672 25F0                                   l8648 2524  
                                 l8656 255E                                   l8840 5DCA  
                                 l8832 5DB0                                   l9392 370E  
                                 l9384 36D6                                   l9368 3644  
                                 l9376 368C                                   l6992 0EE6  
                                 l8728 636E                                   l8744 6116  
                                 l8736 60F6                                   l9288 5446  
                                 l9296 54AA                                   l8904 289A  
                                 l8824 511A                                   l8816 50F6  
                                 l8808 50D0                                   l9640 33B0  
                                 l9632 3334                                   l9624 32CA  
                                 l9616 3284                                   l8920 4C04  
                                 l8912 4B72                                   l9608 42E4  
                                 l9560 0D7A                                   l9552 0D3A  
                                 l9544 0C98                                   l9536 0C46  
                                 l9528 0BE8                                   l9480 0A1C  
                                 l9472 09BA                                   l9464 0958  
                                 l9456 0918                                   l9448 0894  
                                 l8762 3964                                   l8754 38CA  
                                 l7970 3840                                   l7962 37D2  
                                 l7954 378C                                   l7946 3756  
                                 l7874 6216                                   l7866 60B4  
                                 l7890 5146                                   l7882 6444  
                                 l8586 4A72                                   l8578 4A28  
                                 l8498 525E                                   l8594 5AC2  
                                 l8674 25FA                                   l8658 2576  
                                 l8666 25B0                                   l8682 2628  
                                 l8842 5DD2                                   l8834 5DB8  
                                 l9394 371A                                   l9386 36E2  
                                 l9378 36A4                                   l6994 0EEA  
                                 l8746 611A                                   l8738 60FE  
                                 l8906 28AE                                   l8818 50FC  
                                 l9642 33C4                                   l9634 3378  
                                 l9626 32DA                                   l9618 32A2  
                                 l8930 5E34                                   l8922 4C1E  
                                 l8914 4B80                                   l9562 0D8C  
                                 l9570 0DE8                                   l9546 0CB0  
                                 l9554 0D3E                                   l9538 0C60  
                                 l9490 0A6C                                   l9482 0A36  
                                 l9474 09D6                                   l9466 0968  
                                 l9458 0928                                   l8780 3A0E  
                                 l8772 39C4                                   l8756 38D6  
                                 l7980 388A                                   l7972 3842  
                                 l7964 37E0                                   l7956 3798  
                                 l7948 375A                                   l7876 6222  
                                 l7868 60B8                                   l7892 5154  
                                 l8596 5AC4                                   l8684 263E  
                                 l8668 25CA                                   l8676 25FE  
                                 l8692 5C78                                   l8836 5DBE  
                                 l8828 5D9C                                   l9388 36F2  
                                 l9396 371E                                   l6996 0EEC  
                                 l8940 3A5E                                   l8860 19F4  
                                 l8852 195A                                   l9644 33E0  
                                 l9636 337E                                   l9628 3326  
                                 l8932 5E44                                   l8924 4C38  
                                 l8916 4BF8                                   l9580 0EC8  
                                 l9572 0E16                                   l9564 0DA0  
                                 l9556 0D50                                   l9548 0CC4  
                                 l9492 0A72                                   l9476 09EE  
                                 l9468 0984                                   l8774 39F8  
                                 l8766 397E                                   l7974 3854  
                                 l7966 37F2                                   l7958 37B6  
                                 l7990 3BBC                                   l7878 6234  
                                 l7894 5160                                   l7886 5124  
                                 l8598 5AC8                                   l8686 2654  
                                 l8678 261C                                   l8694 5C8C  
                                 l8838 5DC2                                   l6998 0F12  
                                 l9582 65E4                                   l8782 659C  
                                 l8934 3A26                                   l8790 507A  
                                 l8870 1AB4                                   l8862 1A08  
                                 l8854 1974                                   l8846 1876  
                                 l9638 3392                                   l8926 5DF8  
                                 l8918 4BFC                                   l9590 4274  
                                 l9574 0E4A                                   l9566 0DBA  
                                 l9558 0D62                                   l9494 0A78  
                                 l9478 09FE                                   l8776 3A04  
                                 l8768 39AA                                   l7968 3820  
                                 l7976 385A                                   l7992 3BC0  
                                 l7984 3B8A                                   l7896 5174  
                                 l7888 5132                                   l8688 266C  
                                 l8960 3B20                                   l8952 3A68  
                                 l8936 3A3E                                   l8792 507E  
                                 l8784 5060                                   l8872 1B06  
                                 l8864 1A3C                                   l8848 1910  
                                 l8928 5E06                                   l9592 4278  
                                 l9584 41D4                                   l9576 0E66  
                                 l9568 0DE4                                   l9496 0A7A  
                                 l9488 0A5A                                   l8778 3A0A  
                                 l7978 386A                                   l7994 3BCE  
                                 l7986 3B8E                                   l7898 5188  
                                 l8698 5C98                                   l8970 3B74  
                                 l8962 3B4E                                   l8954 3AFA  
                                 l8946 3A64                                   l8938 3A42  
                                 l8890 2770                                   l8882 2676  
                                 l8794 508C                                   l8786 5064  
                                 l8874 1B1C                                   l8866 1A8E  
                                 l8858 19CA                                   l9594 428A  
                                 l9586 421A                                   l9578 0E94  
                                 l9498 0A82                                   l7996 3BEE  
                                 l7988 3B9C                                   l8964 3B52  
                                 l8956 3B0C                                   l8892 2784  
                                 l8884 270E                                   l8796 5094  
                                 l8788 5072                                   l8868 1AA4  
                                 l9596 428E                                   l9588 421E  
                                 l8980 537C                                   l8972 535E  
                                 l7998 3C0C                                   l8966 3B62  
                                 l8958 3B1C                                   l8894 279C  
                                 l8886 2728                                   l8798 5098  
                                 l8878 1B48                                   l9598 429E  
                                 l8990 53B4                                   l8982 538A  
                                 l8974 5362                                   STR_1 7C2B  
                                 l8968 3B64                                   l8896 27B2  
                                 l8888 2750                                   l8992 53C2  
                                 l8984 5392                                   l8976 5370  
                                 STR_2 7CD4                                   STR_3 78F7  
                                 l8898 2852                                   l8994 53D8  
                                 l8986 53A4                                   l8978 5378  
                                 STR_4 7941                                   STR_5 79CE  
                                 l8996 53E0                                   l8988 53AC  
                                 STR_6 7B7B                                   STR_7 7B2B  
                                 l8998 53E6                                   STR_8 7BC3  
                                 STR_9 7D9B                                   l9998 3CEE  
                                 _PIE1 000F9D                                   _PIE2 000FA0  
                                 u6010 1516                                   u6011 1512  
                                 u6005 238E                                   u7000 2DB0  
                                 u6105 17C0                                   u6025 1546  
                                 u7001 2DAC                                   u6130 595E  
                                 u7010 2DC4                                   u6115 1800  
                                 u6035 1586                                   u6131 595A  
                                 u7011 2DC0                                   u6220 4416  
                                 u7020 2DD8                                   u6300 48BE  
                                 u6221 4412                                   u6125 1840  
                                 u6045 15C6                                   u6205 31CE  
                                 u7021 2DD4                                   u6301 48BA  
                                 u6150 3098                                   u7030 2DEC  
                                 u6055 1606                                   u6215 320E  
                                 u6151 3094                                   u7031 2DE8  
                                 u7040 2E00                                   u6400 4148  
                                 u6065 1646                                   u6145 598E  
                                 u7041 2DFC                                   u6401 4144  
                                 u7050 2E14                                   u6410 4164  
                                 u6235 444C                                   u6075 16C2  
                                 u7051 2E10                                   u6411 4160  
                                 u6260 4FB2                                   u7060 2E28  
                                 u6420 41BE                                   u7300 404A  
                                 u6261 4FAE                                   u6245 4492  
                                 u6085 1702                                   u6165 30CE  
                                 u7061 2E24                                   u6421 41B8  
                                 u6430 41C0                                   u7310 408C  
                                 u6255 44D2                                   u6095 1748  
                                 u6175 310E                                   u7311 4086  
                                 u5800 2F26                                   u9000 4E1C  
                                 u7320 408E                                   u5801 2F22  
                                 u6185 314E                                   u9001 4E18  
                                 u5810 3012                                   u9010 4E46  
                                 u6290 481C                                   u6370 40DE  
                                 u7250 3FC0                                   u5811 300E  
                                 u6275 4FE8                                   u6195 318E  
                                 u9011 4E42                                   u6291 4818  
                                 u6371 40DA                                   u7251 3FBA  
                                 u9100 2BBE                                   u9020 4E74  
                                 u6380 410E                                   u7260 3FC2  
                                 u6285 502A                                   u9021 4E70  
                                 u6381 410A                                   u5910 2126  
                                 u9030 601E                                   u9110 2C1A  
                                 u5830 57CA                                   u6390 412A  
                                 u7270 4004                                   u5911 2122  
                                 u9031 601A                                   u5831 57C6  
                                 u6391 4126                                   u7271 3FFE  
                                 u9040 604C                                   u9120 2C5C  
                                 u9200 1BD0                                   u5840 57EC  
                                 u7280 4006                                   u9041 6048  
                                 u9201 1BCC                                   u5841 57E8  
                                 u7370 52BE                                   u9130 2C80  
                                 u9050 2B14                                   u9210 1BEC  
                                 u5850 580A                                   u7290 4048  
                                 u7371 52BA                                   u9131 2C7A  
                                 u9107 2BB4                                   u9211 1BE8  
                                 u5851 5806                                   u7291 4042  
                                 u7380 52D4                                   u9140 2C82  
                                 u9060 2B24                                   u9300 1DD2  
                                 u9220 1C1A                                   u6900 5E6C  
                                 u7460 6540                                   u5925 2156  
                                 u7381 52D0                                   u9117 2C10  
                                 u9061 2B20                                   u9301 1DCE  
                                 u9221 1C16                                   u6901 5E68  
                                 u7461 653C                                   u7390 5EBE  
                                 u9150 2C98                                   u9070 2B4C  
                                 u9310 1DEA                                   u9230 1C28  
                                 u6910 2CE8                                   u5935 2196  
                                 u7391 5EBA                                   u9151 2C94  
                                 u9127 2C52                                   u9311 1DE6  
                                 u9231 1C24                                   u6911 2CE4  
                                 u9160 2CAA                                   u9080 2B6E  
                                 u9240 1D52                                   u9320 28E6  
                                 u9400 1E62                                   u6920 2D02  
                                 u5945 21D6                                   u9161 2CA6  
                                 u9081 2B6A                                   u9057 2B0A  
                                 u9241 1D4E                                   u9321 28E2  
                                 u9401 1E5E                                   u6921 2CFE  
                         _si5328locked 01AF                                   u9090 2B8A  
                                 u9250 1D70                                   u9170 1B8A  
                                 u9330 2902                                   u9410 1E8C  
                                 u6930 2D24                                   u5955 2252  
                                 u9091 2B86                                   u9251 1D6C  
                                 u9171 1B84                                   u9331 28FE  
                                 u9411 1E88                                   u6931 2D20  
                                 u8700 5154                                   u9260 1D8A  
                                 u9180 1B8C                                   u9340 2A4E  
                                 u9500 2048                                   u9420 1EF0  
                                 u6940 2D38                                   u6780 61CA  
                                 u5965 2292                                   u9077 2B42  
                                 u8701 5150                                   u9261 1D86  
                                 u9341 2A4A                                   u9501 2044  
                                 u9421 1EEC                                   u6941 2D34  
                                 u6781 61C4                                   u8630 6610  
                                 u8710 51AA                                   u9270 1DA4  
                                 u9190 1BA2                                   u9350 2A6C  
                                 u9510 2066                                   u9430 1F3A  
                                 u6950 2D4C                                   u6790 61CC  
                                 u5975 22D2                                   u8631 660C  
                                 u8711 51A6                                   u9271 1DA0  
                                 u9191 1B9E                                   u9351 2A68  
                                 u9511 2062                                   u9431 1F34  
                                 u6951 2D48                                   u8640 60D8  
                                 u8720 51B8                                   u9280 1DB2  
                                 u9600 4B4C                                   u9360 2A86  
                                 u8800 5D86                                   u9520 2080  
                                 u9440 1F3C                                   u6960 2D60  
                                 u5985 230E                                   u8721 51B4  
                                 u9281 1DAE                                   u9601 4B48  
                                 u9361 2A82                                   u8801 5D82  
                                 u9521 207C                                   u6961 2D5C  
                                 u8810 64E4                                   u8730 62B6  
                                 u8650 60E8                                   u9290 1DC4  
                                 u9370 2AA0                                   u9530 209A  
                                 u9450 1F52                                   u9610 0036  
                                 u6970 2D74                                   u6890 61E4  
                                 u5995 234E                                   u8811 64DE  
                                 u8731 62B2                                   u8651 60E4  
                                 u9291 1DC0                                   u9371 2A9C  
                                 u9531 2096                                   u9451 1F4E  
                                 u9611 0032                                   u6971 2D70  
                                 u6891 61E0                                   u8820 64E6  
                                 u8900 3B9C                                   u8660 6258  
                                 u9380 2AAE                                   u8740 64AC  
                                 u9540 20A8                                   u9460 1F86  
                                 u9700 025E                                   u9620 0106  
                                 u6980 2D88                                   u8901 3B98  
                                 u8661 6254                                   u9381 2AAA  
                                 u8741 64A6                                   u9541 20A4  
                                 u9461 1F80                                   u9701 025A  
                                 u9621 0102                                   u6981 2D84  
                                 u8830 3736                                   u8910 3BCE  
                                 u8750 64AE                                   u8670 6474  
                                 u9550 20B6                                   u9470 1F88  
                                 u9390 1E46                                   u9710 0316  
                                 u9630 0114                                   u6990 2D9C  
                                 u8831 3732                                   u8911 3BCA  
                                 u8647 60CE                                   u8671 646E  
                                 u9551 20B2                                   u9391 1E42  
                                 u9711 0312                                   u9631 0110  
                                 u6991 2D98                                   u8840 3768  
                                 u8920 3C0C                                   u9560 4ABE  
                                 u8760 63CA                                   u8680 6476  
                                 u9480 1F9E                                   u9720 034C  
                                 u9640 013A                                   u9800 5D34  
                                 u8841 3764                                   u8921 3C08  
                                 u9561 4ABA                                   u8761 63C4  
                                 u9481 1F9A                                   u9721 0348  
                                 u9641 0136                                   u9801 5D30  
                                 u8930 3C36                                   u8690 5132  
                                 u9570 4AF4                                   u8770 63CC  
                                 u9490 2006                                   u9730 042A  
                                 u9650 0180                                   u9810 5584  
                                 u8851 3792                                   u8931 3C32  
                                 u8691 512E                                   u9571 4AF0  
                                 u9731 0426                                   u9651 017C  
                                 u9811 5580                                   u8860 37B6  
                                 u8940 3C64                                   u9580 4B10  
                                 u8780 5D6E                                   u9740 04E4  
                                 u9660 01FC                                   u9900 48E6  
                                 u9820 55A6                                   u8861 37B2  
                                 u8941 3C60                                   u9581 4B0C  
                                 u8781 5D68                                   u9741 04E0  
                                 u9661 01F6                                   u9901 48E2  
                                 u9821 55A2                                   u8870 37E0  
                                 u8950 3CAC                                   u9590 4B22  
                                 u8790 5D70                                   u9750 059A  
                                 u9670 01FE                                   u9910 491C  
                                 u9830 55CE                                   u8871 37DC  
                                 u8951 3CA8                                   u9591 4B1E  
                                 u9495 1FF4                                   u9751 0596  
                                 u9911 4918                                   u9831 55CA  
                                 u8880 3820                                   u9760 05BE  
                                 u9680 0216                                   u9920 493C  
                                 u8881 381C                                   u8961 4614  
                                 u9761 05BA                                   u9681 0212  
                                 u9921 4938                                   u8890 386A  
                                 u8970 4638                                   u9770 0692  
                                 u9690 023A                                   u9930 497A  
                                 u9850 5278                                   u8891 3866  
                                 u8971 4634                                   u9771 068E  
                                 u9691 0236                                   u9931 4976  
                                 u9851 5274                                   u8980 4662  
                                 u9780 06C8                                   u9860 5B5E  
                                 u9940 4990                                   u8981 465E  
                                 u9781 06C4                                   u9861 5B5A  
                                 u9941 498C                                   u9845 5222  
                                 u8990 46A2                                   u9790 07A8  
                                 u9870 5B78                                   u9950 499E  
                                 u8991 469E                                   u9791 07A4  
                                 u9871 5B74                                   u9951 499A  
                                 u9880 5B86                                   u9960 6436  
                                 u9881 5B82                                   u9961 6432  
                                 u9890 5B94                                   u9970 49E8  
                                 u9891 5B90                                   u9971 49E4  
                                 u9980 4A02                                   u9981 49FE  
                                 u9990 4A10                                   u9991 4A0C  
              adf4351_write_latch@mask 0015                        __end_of_PIN_SJ3 777B  
                      __end_of_PIN_SJ4 7779                        __end_of_PIN_SJ5 7777  
                      __end_of_PIN_SJ6 7775                                   abs@a 001F  
                __end_of_PIN_LNB_FAULT 778F                                   _dbuf 0269  
                                 gcd@a 0016                                   gcd@b 001A  
                                 gcd@c 001E                                   _atoi 2AD8  
                                 _main 3CEE                                   _dtoa 1B5A  
                                 _itoa 583C                           lcd_init@addr 0184  
                                 _prec 0067                                   _nout 0196  
                                 pad@i 0020                                   pad@p 001D  
                                 fsr0h 000FEA                                   fsr1h 000FE2  
                                 indf0 000FEF                                   fsr2h 000FDA  
                                 fsr0l 000FE9                                   indf1 000FE7  
                                 indf2 000FDF                                   fsr1l 000FE1  
                                 pad@w 0022                                   fsr2l 000FD9  
                                 btemp 0073                                   _utoa 28D8  
                                 _xtoa 1E38                 __end_of_PIN_SI5328_LOL 778B  
                                 prodh 000FF4                                   prodl 000FF3  
                                 start 000E                          __CFG_IESO$OFF 000000  
                          main@running 0188                       _PIN_LED_LNB_GOOD 778B  
               __end_of_out_freq_table 7767                          __CFG_MCLRE$ON 000000  
                  lcd_clear_screen@buf 0100                           ___param_bank 000000  
                  lcd_clear_screen@row 0181                          ?_i2c_wait_int 000D  
                        show_display@p 02E3                 __end_of_PIN_LED_CPU_OK 7785  
              __size_of_ssd1306_setpos 003E                                  ??_abs 0021  
                     lnb_configure@i2c 00E6                                  ??_gcd 001E  
                                ??_pad 001F            __end_of_PIN_LED_SI_LOCK_DEF 78D4  
                     lnb_configure@res 00EB                          ?_i2c_transfer 00C5  
                                l10000 3D04                                  l10010 3D4E  
                                l10002 3D0C                                  l10020 3DCC  
                                l10012 3D60                                  l10004 3D10  
                                l10030 3DEC                                  l10022 3DE0  
                                l10014 3D72                                  l10006 3D24  
                                l10040 3E2C                                  l10032 3DF0  
                                l10024 3DE2                                  l10016 3D84  
                                l10008 3D32                                  l10042 3E30  
                                l10034 3E06                                  l10026 3DE4  
                                l10018 3DB0                                  l10044 3E34  
                                l10036 3E0C                                  l10028 3DE6  
                                l10038 3E1A                      ??_si5328_set_freq 0067  
                                l10270 2E70                                  l10272 00C6  
                                l10274 2BD0                        __end_of___aodiv 38AC  
                                ?_atoi 0014                                  ?_main 0001  
                                ?_dtoa 0027                        __end_of___aomod 3CEE  
                    _smbus8_write_data 5FB2                                  ?_itoa 0019  
                      __end_of___awdiv 5124                                  STR_10 7CC4  
                                STR_11 7BEE                                  STR_20 7D2D  
                                STR_12 7C03                                  STR_21 7B94  
                                STR_13 7AAB                                  STR_14 7CB4  
                                STR_30 7BD9                                  STR_22 7B47  
                                STR_23 7D1F                                  STR_31 7CA3  
                                STR_15 7BAC                                  STR_40 7DBB  
                                STR_24 7D53                                  STR_32 7D47  
                                STR_16 7D02                                  STR_41 7D91  
                                STR_17 7D3A                                  STR_33 7CE4  
                                STR_25 7ACE                                  STR_50 7C3D  
                                STR_42 7D96                                  STR_34 7CF3  
                                STR_18 7C18                                  STR_26 7B0E  
                                STR_51 7C3D                                  STR_43 7D91  
                                STR_35 7D11                                  STR_27 7A88  
                                STR_19 7A35                                  STR_52 7C3D  
                                STR_44 7D96                                  STR_60 7D8C  
                                STR_36 7C92                                  STR_28 7AEE  
                      __end_of___awmod 540E                                  STR_61 7C46  
                                STR_45 7D70                                  STR_53 7D5F  
                                STR_37 7C5F                                  STR_29 7B62  
                                STR_54 7DA4                                  STR_62 7D87  
                                STR_38 7C4E                                  STR_46 7C3D  
                                STR_71 7DB2                                  STR_55 7DA8  
                                STR_63 7D82                                  STR_47 7C81  
                                STR_39 7C70                                  STR_48 7C3D  
                                STR_56 7D7D                                  STR_64 7A60  
                                STR_73 7DB2                                  STR_81 7DB8  
                                STR_57 7D77                                  STR_49 7D69  
                                STR_65 7989                                  STR_58 7DA0  
                                STR_66 7A05                                  STR_83 7DB8  
                                STR_59 7DA8                                  STR_67 7DAF  
                                STR_76 7DB5                                  STR_69 7DAF  
                                STR_85 7DAC                                  STR_78 7DB5  
                                STR_87 7DAC                      _smbus8_write_byte 60F6  
                                u10000 4A42            check_si5328_status@lastlock 01D5  
                                u10001 4A3A                        __end_of___lldiv 5602  
                                u10020 4A86                                  u10100 2476  
                                u10021 4A82                                  u10101 2472  
                                u10030 5AF6                                  u10110 24B8  
                                u10031 5AF2                                  u10111 24B4  
                                ?_utoa 0026                            i2c_read@ack 00A5  
                                u11000 4742                                  u10040 5B14  
                                u10200 261C                                  u10120 24D6  
                                u10041 5B10                                  u10201 2618  
                                u10121 24D2                                  u11010 4756  
                                u10018 4A46                                  u10050 5B22  
                                u10210 263E                                  u10130 2502  
                                u11011 4752                                  u10051 5B1E  
                                u10211 263A                                  u10131 24FC  
                                u10300 39C0                                  u11020 4766  
                                u10220 2654                                  u10140 2504  
                                u10060 2434                                  u11100 36BA  
                                u10301 39BC                                  u11021 4762  
                                u10221 2650                                  u10061 242E  
                                u11101 36B6                                  u10310 3A20  
                                u10150 253C                                  u10070 2436  
                                u10230 5C8C                                  u11110 36C8  
                                u11030 543A                                  u10311 3A1C  
                                u10151 2538                                  u10231 5C88  
                                u11111 36C4                                  u11031 5436  
                                u10160 255A                                  u10080 2456  
                                u11120 36D6                                  u11040 5496  
                                u10320 5072                                  u10400 19CA  
                                u11200 0880                                  u10161 2556  
                                u10081 2450                                  u11121 36D2  
                                u11041 5492                                  u10321 506E  
                                u10401 19C6                                  u11201 087C  
                                u10170 25AC                                  u10090 2458  
                                u11130 36F2                                  u10250 632A  
                                u10330 508C                                  u10410 1AA4  
                                u11210 0894                                  u11050 4C7A  
                                u10171 25A8                                  u11131 36EE  
                                u10251 6326                                  u10331 5088  
                                u10411 1AA0                                  u11211 0890  
                                u11051 4C76                                  u10180 25CA  
                                u11140 370E                                  u11060 35D0  
                                u10260 6368                                  u10340 50B2  
                                u10420 1B1C                                  u10500 4BDC  
                                u11300 0AD6                                  u11220 0928  
                                u10181 25C6                                  u11141 370A  
                                u11061 35CA                                  u10261 6364  
                                u10341 50AE                                  u10421 1B18  
                                u11301 0AD2                                  u11221 0924  
                                u10270 38C6                                  u10190 25E4  
                                u11070 35D2                                  u11150 4534  
                                u10430 2728                                  u10350 50D0  
                                u10510 4BF8                                  u11310 0AE6  
                                u11230 0938                                  u10271 38C2  
                                u10191 25E0                                  u11151 4530  
                                u10431 2724                                  u10351 50CC  
                                u10511 4BF4                                  u11311 0AE2  
                                u11231 0934                                  u10280 3908  
                                u10248 5CBE                                  u11080 35EA  
                                u10600 3B1C                                  u10440 273C  
                                u10360 50EC                                  u10520 4C1E  
                                u11400 4218                                  u11320 0BE8  
                                u11240 0948                                  u11160 0838  
                                u10281 3904                                  u10249 5CD2  
                                u11081 35E6                                  u10601 3B18  
                                u10441 2738                                  u10361 50E8  
                                u10521 4C1A                                  u11321 0BE4  
                                u11241 0944                                  u11161 0834  
                                u10290 397A                                  u11090 35FE  
                                u10450 279C                                  u10370 5112  
                                u10530 4C38                                  u11410 425E  
                                u11330 0C98                                  u11250 0958  
                                u11170 0850                                  u10291 3976  
                      __end_of___lodiv 46FE                                  u11091 35FA  
                                u12107 5462                                  u10451 2798  
                                u10371 510E                                  u10531 4C34  
                                u10507 4BD2                                  u11411 4258  
                                u11331 0C94                                  u11251 0954  
                                u11171 084C                                  u10620 3B62  
                                u10460 27B2                                  u10380 1910  
                                u10700 56B6                                  u11500 32A2  
                                u10540 5E34                                  u11420 4260  
                                u11340 0CC4                                  u11260 0968  
                                u11180 0860                        ___awdiv@divisor 000F  
                                u12117 3076                                  u10621 3B5E  
                                u10461 27AE                                  u10381 190C  
                                u10701 56B2                                  u11501 329E  
                                u10541 5E30                                  u11341 0CC0  
                                u11261 0964                                  u11181 085C  
                                u10630 3B74                                  u10614 3B34  
                                u10550 3A3E                                  u10470 28D2  
                                u10390 1974                                  u10710 571C  
                                u11510 32CA                                  u11430 4274  
                                u11350 0D50                                  u11270 09BA  
                                u11190 0870                                  u12127 4DF6  
                                u10631 3B70                                  u10615 3B30  
                                u10551 3A3A                                  u10471 28CC  
                                u10391 1970                                  u10711 5718  
                                u11511 32C6                                  u11431 4270  
                                u11351 0D4C                                  u11271 09B6  
                                u11191 086C                                  ?_xtoa 0024  
                                u10800 4352                                  u10720 3E76  
                                u10480 28D4                                  u11520 32DA  
                                u11440 428A                                  u10640 5370  
                                u11360 0D62                                  u11280 09FE  
                                u10801 434E                                  u10721 3E72  
                      __end_of___llmod 583C                                  u11521 32D6  
                                u11441 4286                                  u10641 536C  
                                u11361 0D5E                                  u11281 09FA  
                                u10570 3AF4                                  u10730 3EAE  
                                u11530 33B0                                  u10490 4BAC  
                                u10810 4EEA                                  u11450 429E  
                                u10650 538A                                  u11370 0E16  
                                u11290 0A6C                                  u10571 3AEE  
                                u10731 3EAA                                  u11531 33AC  
                                u10811 4EE6                                  u11451 429A  
                                u10651 5386                                  u11371 0E12  
                                u11291 0A68                                  u12067 4CAC  
                                u10580 3AF6                                  u10564 3AD6  
                                u10740 3EE6                                  u11540 33C4  
                                u10820 4F04                                  u11460 42B2  
                                u10660 53A4                                  u10900 58B2  
                                u11380 0E94                                  u10565 3AD2  
                                u10741 3EE2                                  u11541 33C0  
                                u10821 4F00                                  u11461 42AE  
                                u10661 53A0                                  u10901 58AE  
                                u11381 0E90                                  u12077 4CF8  
                                u10590 3B0C                                  u10750 3F1E  
                                u11550 33E0                                  u10830 4F1E  
                                u11470 42CC                                  u11390 4216  
                                u10670 53C2                                  u10910 5636  
                                u10591 3B08                                  u10751 3F1A  
                                u11551 33DC                                  u10831 4F1A  
                                u11471 42C8                                  u11391 4210  
                                u10671 53BE                                  u10911 5632  
                                u12087 0A42                                  u10760 3F5A  
                                u11480 3266                                  u10840 4F38  
                                u10680 53D8                                  u10920 5658  
                                u10761 3F56                                  u12097 3386  
                                u11481 3262                                  u10497 4BA2  
                                u10841 4F34                                  u10681 53D4  
                                u10921 5654                                  u10770 432C  
                                u11490 3284                                  u10850 4F52  
                                u10690 53FC                                  u10930 566A  
                                u10771 4326                                  u11491 3280  
                                u10851 4F4E                                  u10691 53F8  
                                u10931 5666                                  u10860 6500  
                                u10780 432E                                  u10940 60A6  
                                u11740 3D04                                  u10861 64FC  
                                u10941 60A2                                  u11741 3D00  
                                u10950 3414                                  u10870 5C4A  
                                u10790 4342                                  u10951 3410  
                                u10871 5C46                                  u10791 433E  
                                u10960 34D2                                  u10880 577E  
                                u10961 34CE                                  u10970 3520  
                                u10890 57B2                                  u10971 351C  
                                u10891 57AE                                  u10980 3588  
                                u10981 3584                                  u10990 4740  
                                u10991 473A                                  u10887 5774  
                      __end_of___lomod 4ECE                            i2c_read@res 00A8  
                                i2l431 58D2                                  i2l432 5942  
                                i2l433 58E8                                  i2l464 5AAC  
                      ___awdiv@counter 0011                                  _RCREG 000FAE  
                         vfpfcnvrt@fmt 004D                           vfpfcnvrt@llu 008D  
                                _SPBRG 000FAF                                  _PORTA 000F80  
                                _PORTB 000F81                                  _PORTC 000F82  
                                _TRISA 000F92                                  _TRISB 000F93  
                                _TRISC 000F94                       __end_of_PIN_LED0 776D  
                     __end_of_PIN_LED1 776B                       __end_of_PIN_LED2 7769  
                     __end_of_PIN_LED3 776F                                  _TXREG 000FAD  
                   ?_smbus8_write_data 00CB                          __CFG_PWRT$OFF 000000  
             adf4351_write_latch@value 000D                     ?_smbus8_write_byte 00CB  
                        __CFG_WRT0$OFF 000000                          ?_ssd1306_data 00E1  
                        __CFG_WRT1$OFF 000000                          __CFG_WRT2$OFF 000000  
                        __CFG_WRT3$OFF 000000                         __CFG_EBTR0$OFF 000000  
                       __CFG_FCMEN$OFF 000000                   irq_set_handler@udata 000F  
                       __CFG_EBTR1$OFF 000000                         __CFG_EBTR2$OFF 000000  
                       __CFG_EBTR3$OFF 000000               __end_of_lnb_do_configure 3F80  
                  print_char@underline 00F0                          __CFG_WRTB$OFF 000000  
                        __CFG_WRTC$OFF 000000                     i2c_native_init@ctx 0028  
                        __CFG_WRTD$OFF 000000                     ssd1306_command@cmd 00E1  
                   ssd1306_command@len 00E3                         __CFG_EBTRB$OFF 000000  
                                _g_ipc 01CE                                  _flags 0069  
                                _p_len 019E                                  _errno 0194  
                                _fputc 6620                        __end_of_isalpha 63D2  
                                _fputs 6216                        __end_of_isdigit 64EC  
                                atoi@n 0021                                  pad@fp 0019  
                                atoi@s 0014                                  _width 0198  
                         ?_read_switch 0001                          print_char@idx 00FB  
                                dtoa@d 0029                          print_char@map 00F1  
                                dtoa@i 0049                                  dtoa@n 0041  
                                dtoa@p 003B                                  dtoa@s 003F  
                                dtoa@w 003D                    ??_smbus8_write_data 0067  
                      __end_of_islower 647C                        __end_of_isspace 6058  
                     _lcd_clear_screen 5C14                    ??_smbus8_write_byte 0067  
                                itoa@c 001B                        __end_of_isupper 64B4  
                                pclath 000FFA                                  tablat 000FF5  
               si5328_perform_ical@i2c 00D9                                  plusw1 000FE3  
                          i2c_stop@ctx 0028                                  ttemp5 0074  
                                ttemp6 0077                                  ttemp7 007B  
                                utoa@d 0028                                  utoa@i 0044  
                                utoa@n 003C                                  utoa@p 0038  
                                utoa@w 003A                                  status 000FD8  
                                wtemp8 0074                                  xtoa@c 0049  
                                xtoa@d 0026                                  xtoa@i 0047  
                                xtoa@n 003F                                  xtoa@p 003B  
                                xtoa@w 003D                                  xtoa@x 002E  
                      ssd1306_data@len 00E3                         _i2c_reset$1596 0020  
                      __end_of_strncmp 4B72                        __end_of_toupper 5D9C  
                     ___lodiv@dividend 000D                        _actualADFswitch 01D3  
                     ?_adf4351_default 000D                           _toupper$3884 0019  
                      _send_UBX_string 33EE                        __initialization 59C4  
             __size_of_ssd1306_command 003E                         ??_i2c_wait_int 0011  
                         __end_of_atoi 2CD0                           __end_of_main 3E40  
                         __end_of_dtoa 1E38                           __end_of_itoa 58C0  
                         __end_of_utoa 2AD8                           __end_of_xtoa 210C  
                     __end_of_i2c_read 4A94                         ??_i2c_transfer 0067  
                  lnb_do_configure@i2c 00DF                       __end_of_i2c_stop 6444  
            __end_of_smbus8_write_data 6006                    lnb_do_configure@res 00E3  
               __size_of_lnb_configure 00AA              __end_of_smbus8_write_byte 6140  
                usart_rx_irq_handler@c 0005                  __size_of_write_regset 00DC  
                               ??_atoi 0016                                 ??_main 0067  
                               ??_dtoa 0031                                 ??_itoa 001B  
                usart_init@spbrg_value 001E                      lnb_configure@addr 00E8  
                               ??_utoa 0030                                 ??_xtoa 002F  
                        __activetblptr 000002                fp__usart_rx_irq_handler 0000  
              __end_of_PIN_LED_SI_LOCK 7789                         ??_ssd1306_data 0067  
                    ?_check_LNB_status 00DF                       ___lodiv@quotient 001D  
                     ?_irq_set_handler 000D                        ssd1306_setpos@x 00E9  
                      ssd1306_setpos@y 00E5                          print_string@i 0115  
                        print_string@s 0110                          print_string@x 0112  
                        print_string@y 0113                         _i2c_probe_addr 625A  
              ??_adf4351_calc_counters 0024                     ??_check_LNB_status 00E2  
                               ?_fputc 000E                       ___llmod@dividend 000D  
                               ?_fputs 0012                       ___awdiv@dividend 000D  
         check_si5328_status@lastinput 01D4                           i2c_read@data 00A3  
                  _si5328_perform_ical 5DF8                                 i2l7410 5A76  
                               i2l7412 5A98                                 i2l7414 5AA6  
                               i2l7406 5A54                                 i2l6720 58C0  
                               i2l7408 5A62                                 i2l6730 592A  
                               i2l6732 593A                                 i2l6726 58F6  
                               i2l6728 58FE                                 _OSCCON 000FD3  
                        vfpfcnvrt@done 0080                check_ADF5341_status@ctx 00A3  
                               _SPBRGH 000FB0                                 _WDTCON 000FD1  
                   __size_of_i2c_reset 00BE                                 _SSPADD 000FC8  
                               _SSPBUF 000FC9                     __size_of_i2c_start 00E4  
                   __size_of_i2c_write 0078            __end_of_setADF4351frequency 33EE  
                       __CFG_XINST$OFF 000000                   __size_of_lcd_draw8x8 0024  
                         _write_regset 4B72                _adf4351_calc_rcnt_block 1876  
                         vfprintf@cfmt 0065                       __end_of_lcd_init 460E  
                  i2c_native_init@baud 002A                              ??___aodiv 001D  
                     _PIN_LNB_QRG1_DEF 787A                       _PIN_LNB_QRG2_DEF 787F  
                            ??___aomod 001D                                 ___wmul 6576  
                   write_regset@errors 00E2                           i2c_reset@ctx 001A  
                            ??___awdiv 0011                           i2c_reset@reg 0024  
                       __CFG_STVREN$ON 000000                              ??___awmod 0011  
                     _freq_table_25_24 784D                       _freq_table_25_25 7825  
                               _g_freq 0190                       _freq_table_27_26 77FD  
                            ??___lldiv 0015                              ??___lodiv 001D  
                            ??___llmod 0015                              ??___lomod 001D  
                 ?_si5328_perform_ical 00D9                                 _g_pout 01CC  
                _ssd1306_init_commands 0289            __size_of_global_irq_handler 5AB8  
                               _memcmp 5602                                 _memcpy 6058  
                               _gpsbuf 0380                       __end_of_init_gps 6600  
                               _memset 38AC                                 _setQRG 41D4  
                               clear_0 5A0A                                 clear_1 5A16  
                               clear_2 5A22                                 clear_3 5A2E  
                     __end_of_read_reg 65E4                       ___awdiv@quotient 0013  
                      ___awmod@divisor 000F            ?_adf4351_calc_vco_core_freq 000D  
                      _i2c_native_init 5F5C                                 _ubx_id 01A8  
                      ___awmod@counter 0011                                 _printf 654E  
                               pad@buf 001B                                 _rx_gps 2CD0  
         __size_of_adf4351_write_latch 01CE                                 _putgps 6616  
             __end_of_PIN_SI5328_CS_CA 7787                                 dtoa@fp 0027  
                               _strlen 60A8                        _PIN_SIO_CLK_DEF 78DE  
                       print_char@xpos 00EE                         print_char@ypos 00EF  
                   _g_irq_handler_info 018C                                 fputc@c 000E  
                   _adf4351_write_reg0 4F98                     _adf4351_write_reg1 43FC  
                   _adf4351_write_reg2 14FC                     _adf4351_write_reg3 307E  
                   _adf4351_write_reg4 210C                     _adf4351_write_reg5 5944  
                               fputs@c 0016                                 fputs@i 0017  
               __end_of_i2c_probe_addr 629C                                 fputs@s 0012  
                            ??_isalpha 000F                              ??_isdigit 000F  
                   _PIN_LED_CPU_OK_DEF 78C5                              ??_islower 000F  
                         i2c_start@rep 0013                           i2c_start@res 0018  
                         __mediumconst 7426                              ??_isspace 000F  
                               tblptrh 000FF7                              ??_isupper 000F  
                               tblptrl 000FF6                                 tblptru 000FF8  
         __size_of_ssd1306_commandbyte 0034                si5328_perform_ical@addr 00DB  
           i2c_transfer_native@wantack 00B7                            read_reg@i2c 00DF  
          __end_of_check_si5328_status 3724                       __end_of_vfprintf 5D3E  
                          read_reg@reg 00E2                                 utoa@fp 0026  
                          read_reg@val 00E5                       __end_of_rx_usart 654E  
                               xtoa@fp 0024                    ?_adf4351_write_reg0 0019  
                  ?_adf4351_write_reg1 0019                    ?_adf4351_write_reg2 0019  
                  ?_adf4351_write_reg3 0019                    ?_adf4351_write_reg4 0019  
                            ??_strncmp 0013                    ?_adf4351_write_reg5 0019  
                            ??_toupper 0015                       ssd1306_data@data 00E1  
                        _lnb_configure 540E                __end_of_send_UBX_string 358A  
                         i2c_write@res 0014                             __accesstop 0080  
              __end_of__initialization 5A34                        __CFG_PBADEN$OFF 000000  
                        ___rparam_used 000001                    _i2c_transfer_native 23C4  
                    ?_adf4351_get_lock 000D               __end_of_PIN_LED_ADF_LOCK 7795  
                          setQRG@newLO 00ED                          ?_adf4351_init 0019  
                       __pcstackCOMRAM 0001                           __pidataBANK1 63D2  
                         __pidataBANK2 5F04                         _ssd1306_setpos 62DC  
                   ??_adf4351_get_lock 000F                  ??_si5328_perform_ical 0067  
                      write_regset@i2c 00D9                   ??_adf4351_write_reg0 001B  
                 ??_adf4351_write_reg1 001B                   ??_adf4351_write_reg2 001B  
                 ??_adf4351_write_reg3 001B                   ??_adf4351_write_reg4 001B  
                 ??_adf4351_write_reg5 001B                        write_regset@len 00DE  
                      write_regset@set 00DC                          __end_of_fputc 6622  
                        __end_of_fputs 625A             __size_of_smbus8_write_data 0054  
            __size_of_smbus8_read_byte 005C             __size_of_smbus8_write_byte 004A  
                    ??_ssd1306_command 0067          __size_of_usart_rx_irq_handler 0084  
                    __end_of_i2c_reset 52A4                      __end_of_i2c_start 49B4  
                    ?_adf4351_set_freq 00AB                   lnb_do_configure@addr 00E1  
                    __end_of_i2c_write 5B38                      ?_adf4351_set_mode 0027  
             show_display@old_GPS_lock 01D2                      ?_adf4351_set_tune 000D  
                 ?_i2c_transfer_native 00AA                        ?_i2c_probe_addr 00CB  
             __end_of_PIN_LED_LNB_GOOD 778D                     ??_adf4351_set_freq 00B1  
                   ??_adf4351_set_mode 002B                     ??_adf4351_set_tune 0013  
                 __end_of_i2c_wait_int 5BAC                                ??_fputc 0012  
                              ??_fputs 0016                         ?_lnb_configure 00E6  
                           __pbssBANK1 0188                             __pbssBANK2 0200  
                           __pbssBANK3 0300                   __end_of_i2c_transfer 5CDC  
                            ?_i2c_read 00A3                          rx_gps@len_lsb 019C  
                        ??_si5328_init 00E7                              ?_i2c_stop 0028  
                 __size_of_read_switch 0138              ??_adf4351_calc_rcnt_block 0067  
                      _si5328_set_freq 4ECE           __end_of_PIN_LED_ADF_LOCK_DEF 78C0  
                 __end_of_ssd1306_data 6396                         ??_adf4351_init 0023  
               __end_of_ssd1306_setpos 631A                __end_of_i2c_native_init 5FB2  
                   show_display@lnbqrg 02E5                     ssd1306_setpos@data 00E6  
              __end_of_PIN_SIO_CLK_DEF 78E3                                ?___wmul 000D  
                   show_display@outqrg 02E1                si5328_set_freq@freq_MHz 00E7  
             __end_of_lcd_clear_screen 5C78                                ?_memcmp 000D  
                              ?_memcpy 000D                                ?_memset 000D  
                              ?_setQRG 0001                         usart_init@baud 001A  
        adf4351_calc_rcnt_block@bscdiv 00A5                                ?_printf 0095  
                              ?_rx_gps 000D                 show_display@old_lnbqrg 01AB  
                              ?_putgps 0001                                ?_strlen 000D  
                ??_i2c_transfer_native 00B0                      _PIN_LNB_FAULT_DEF 7875  
               show_display@old_outqrg 01A2                     __size_of_vfpfcnvrt 0816  
                              _GPS_lat 01E6                                _GPS_lon 01D7  
                              _GPS_sat 01AD                                _PIN_SJ3 7779  
                              _PIN_SJ4 7777                                _PIN_SJ5 7775  
                              _PIN_SJ6 7773                                _OSCTUNE 000F9B  
                setADF4351frequency@sw 00BA               check_ADF5341_status@stat 00A8  
                    ?_lnb_do_configure 00DF                      send_UBX_string@id 000F  
                   __end_of_PIN_ADF_CE 7799                     __end_of_PIN_ADF_LE 779B  
                            ?_lcd_init 0182                 __size_of_adf4351_setup 004A  
                     ___lomod@dividend 000D                     ??_lnb_do_configure 0067  
                           ??_i2c_read 00A7                 irq_set_handler@handler 000D  
                     ?_send_UBX_string 000F                             ??_i2c_stop 002A  
        __size_of_check_ADF5341_status 00EC                              ?_init_gps 0001  
                            ?_read_reg 00DF    __size_of_adf4351_calc_vco_core_freq 011C  
                              __Hparam 0000                        ?_ssd1306_setpos 00E5  
                              __Lparam 0000                    __end_of_si5328_init 4D26  
                              ___aodiv 3724                                ___aomod 3B8A  
                              ___awdiv 5060                                ___awmod 535E  
                              ___lldiv 555E                        __size_of___wmul 0026  
                              ___lodiv 460E                                ___llmod 57B4  
                              ___lomod 4DFE                              ?_vfprintf 005F  
                            ?_rx_usart 0001                             _init_gpios 0EE6  
                              __pcinit 59C4                        __size_of_memcmp 009A  
                      __size_of_memcpy 0050                        __size_of_memset 0176  
                      __size_of_setQRG 0116              __end_of_PIN_LNB_FAULT_DEF 787A  
                              __ramtop 0600                                _lcd_i2c 01A4  
                    _freq_table_27_OPT 77D5                                __ptext0 3CEE  
                              __ptext1 5BAC                                __ptext2 61D2  
                              __ptext3 4C4E                                __ptext4 0828  
                              __ptext5 6058                                __ptext6 5602  
                              __ptext7 583C                                __ptext8 535E  
                              __ptext9 41D4                        __size_of_printf 0028  
               check_si5328_status@i2c 00E6                        __size_of_rx_gps 01E0  
                              _booting 01AC                        __size_of_putgps 000A  
                      __size_of_strlen 004E                 check_si5328_status@res 00EE  
               check_si5328_status@ret 00EC                           __size_of_abs 0040  
                         __size_of_gcd 00E6                           __size_of_pad 00C2  
                              _isalpha 6396                                _isdigit 64B4  
                     ___awmod@dividend 000D                                _islower 6444  
                              _payload 0200                                _isspace 6006  
                              _isupper 647C                       _PIN_SIO_DATA_DEF 78E3  
                              _ubx_ack 01AA                        ??_lnb_configure 00E9  
                              _ubx_len 01A0                      _reg_set_LNB_LO_24 01F5  
                    _reg_set_LNB_LO_25 02D6                      _reg_set_LNB_LO_26 02CC  
                    _reg_set_LNB_LO_27 02C2                                atoi@neg 001A  
               i2c_transfer_native@ack 00B1                 i2c_transfer_native@dev 00AA  
             __end_of_PIN_LNB_QRG1_DEF 787F               __end_of_PIN_LNB_QRG2_DEF 7884  
               i2c_transfer_native@ctx 00BD                 i2c_transfer_native@msg 00AC  
               i2c_transfer_native@res 00C1                 i2c_transfer_native@num 00AE  
                           ??_lcd_init 0067               __end_of_freq_table_25_24 7875  
             __end_of_freq_table_25_25 784D               __end_of_freq_table_27_26 7825  
                              _strncmp 4A94                         __pintcode_body 5A42  
                              _toupper 5D3E         __size_of_adf4351_calc_counters 0262  
                 end_of_initialization 5A34          __end_of_adf4351_calc_counters 28D8  
              __end_of_si5328_set_freq 4F98                           _g_usart_rpos 006D  
                         _g_usart_wpos 006B                                memcmp@l 0015  
                              memcmp@n 0011                                memcmp@r 0017  
                              memcpy@d 0014                                memcpy@n 0011  
                              memcpy@s 0016                                fputc@fp 0010  
                              memset@c 000F                                memset@k 0015  
                              memset@n 0011                                memset@s 0017  
                        __Lmediumconst 7426                    _adf4351_write_latch 2EB0  
                           ??_init_gps 0052                                int_func 5A42  
                              fputs@fp 0014                             ??_read_reg 0067  
                  adf4351_get_lock@ctx 000D              __size_of_check_LNB_status 0112  
                        i2c_start@addr 0017                          i2c_start@read 0011  
                      ___lldiv@divisor 0011                        ___lldiv@counter 0019  
                  _ssd1306_commandbyte 64EC                              _LNB_error 01C4  
                    __end_of_vfpfcnvrt 0828                       ?_i2c_native_init 0028  
                            _RCSTAbits 000FAB                       si5328_set_freq@p 00E8  
                              postdec1 000FE5                                postdec2 000FDD  
                              postinc0 000FEE                                postinc1 000FE6  
                              postinc2 000FDE                                rx_gps@c 000D  
                        _adf4351_setup 6140                           read_reg@addr 00E1  
                           ??_vfprintf 0065                                putgps@c 000E  
            __end_of_freq_table_27_OPT 77FD                       _smbus8_read_byte 5D9C  
             __size_of_adf4351_default 00A6                             ??_rx_usart 0013  
                              strlen@a 000F                                strlen@s 000D  
                        ?_show_display 0001                   ?_adf4351_write_latch 000D  
                            _PORTCbits 000F82                    send_UBX_string@CK_A 004F  
                  send_UBX_string@CK_B 004E                             _print_char 3A22  
                __size_of_i2c_wait_int 0074                   __end_of_PIN_ADF_LOCK 7797  
                        i2c_write@data 0013                   ?_ssd1306_commandbyte 0001  
                __size_of_i2c_transfer 0064                   __end_of_adf4351_init 4DFE  
                 _PIN_LED_ADF_LOCK_DEF 78BB         adf4351_calc_counters@remainder 0024  
                        ?_print_string 0110                   __end_of_reg_set_univ 77D5  
                 __end_of_PIN_LED0_DEF 78C5                   __end_of_PIN_LED1_DEF 78BB  
                 __end_of_PIN_LED2_DEF 78B1                   __end_of_PIN_LED3_DEF 78CF  
               adf4351_write_reg0@data 0021                 adf4351_write_reg1@data 0021  
               adf4351_write_reg2@data 0021                 adf4351_write_reg3@data 0021  
               adf4351_write_reg4@data 0020                 adf4351_write_reg5@data 0020  
                __size_of_ssd1306_data 003E               adf4351_set_tune@lownoise 0011  
                          _si5328_init 4C4E               __size_of_irq_set_handler 0044  
                        ??_lcd_draw8x8 0067                              _TXSTAbits 000FAC  
                        _PIN_LNB_FAULT 778D                             _usart_getc 5E52  
                           _usart_init 5BAC                             _usart_putc 6600  
                          print_char@b 00FA                            print_char@c 00F9  
                          print_char@x 00FC                            print_char@y 00FD  
                 __end_of_PIN_LNB_QRG1 7771                   __end_of_PIN_LNB_QRG2 7773  
                      _ssd1306_command 631A             __end_of_global_irq_handler 5AC0  
                       ?_adf4351_setup 0025                           _i2c_wait_int 5B38  
                 __end_of_PIN_SIO_DATA 7791           __size_of_setADF4351frequency 01AA  
                       ??_show_display 0182                            vfpfcnvrt@ap 004F  
                          vfpfcnvrt@fp 004B                            vfpfcnvrt@ll 0084  
                     ??_i2c_probe_addr 0067                         __end_of___wmul 659C  
                          ?_init_gpios 0001                            _BAUDCONbits 000FB8  
                ??_adf4351_write_latch 0011                           _i2c_transfer 5C78  
                     write_regset@addr 00DB                   __end_of_PIN_USART_RX 777D  
                 __end_of_PIN_USART_TX 777F                         __end_of_memcmp 569C  
                       __end_of_memcpy 60A8                         __end_of_memset 3A22  
                       __end_of_setQRG 42EA                  __end_of_font8x8_basic 772F  
                       __end_of_printf 6576                 lcd_clear_screen@ystart 0180  
                       __end_of_rx_gps 2EB0                         __end_of_putgps 6620  
                       __end_of_strlen 60F6              __size_of_adf4351_get_lock 0048  
                ??_ssd1306_commandbyte 0067                    start_initialization 59C4  
                      ___lodiv@divisor 0015                        ___lodiv@counter 0025  
                         _ssd1306_data 6358                              _i2c_reset 51E6  
              global_irq_handler@dummy 000C                       _PIN_USART_RX_DEF 7898  
                          __end_of_abs 62DC                            __end_of_gcd 48D0  
                            _i2c_start 48D0                       _PIN_USART_TX_DEF 789D  
                          __end_of_pad 51E6                         ??_print_string 00FE  
                            _i2c_write 5AC0                       ?_si5328_set_freq 00E4  
         __end_of_usart_rx_irq_handler 5944                       show_display@xpos 02E0  
                lnb_do_configure@value 00E2              __size_of_adf4351_set_freq 008E  
            __size_of_adf4351_set_mode 00BA           __size_of_check_si5328_status 019A  
                      ___llmod@divisor 0011                       __CFG_OSC$INTIO67 000000  
            __size_of_adf4351_set_tune 0058                        ___llmod@counter 0015  
          __end_of_si5328_perform_ical 5E52                      __size_of_i2c_read 00E0  
                    __size_of_i2c_stop 0038                   _adf4351_set_tune$675 0013  
                          vfprintf@fmt 0061           __end_of_PIN_SI5328_CS_CA_DEF 78D9  
           setADF4351frequency@timeout 00B6                               ??___wmul 0011  
                  __end_of_lcd_draw8x8 65C0            __size_of_adf4351_write_reg0 00C8  
          __size_of_adf4351_write_reg1 010C            __size_of_adf4351_write_reg2 037A  
          __size_of_adf4351_write_reg3 01C6            __size_of_adf4351_write_reg4 02B8  
          __size_of_adf4351_write_reg5 0080                   i2c_transfer_native@i 00B9  
                          __pdataBANK1 01C5                            __pdataBANK2 0289  
                           itoa@buffer 01B0                       __CFG_LPT1OSC$OFF 000000  
                             ??_memcmp 0013                               ??_memcpy 0013  
                             ??_memset 0013                               ??_setQRG 00EA  
                    ?_lcd_clear_screen 0001                             memset@dest 000D  
                             ??_printf 0067                               ??_rx_gps 000F  
                 check_LNB_status@addr 00E1                               ??_putgps 000E  
                             ??_strlen 000F                   check_LNB_status@stat 00E5  
                          ?_print_char 00EE                     ??_lcd_clear_screen 0067  
            _gps_activate10MHz_payload 772F                            __pbssCOMRAM 0067  
                    ??_adf4351_default 000F                              _g_i2c_bus 01BC  
                        __pcstackBANK0 0080                          __pcstackBANK1 0100  
                        __pcstackBANK2 02E0                     adf4351_default@ctx 000D  
                     ___aodiv@dividend 000D                             ?_i2c_reset 001A  
                           ?_i2c_start 0011                             ?_i2c_write 0011  
                    irq_set_handler@id 0011                              _g_adf4351 0232  
                        ??_read_switch 000D                show_display@old_GPS_lat 02B3  
              show_display@old_GPS_lon 02A4                show_display@old_GPS_sat 01D1  
              __end_of_ssd1306_command 6358                       ??_ssd1306_setpos 0067  
                    __size_of_lcd_init 0106                    __size_of_init_gpios 0616  
                  ssd1306_setpos@F3126 01C9                              _atoi$3762 001C  
                            _atoi$3763 0020             __end_of_PIN_SI5328_LOL_DEF 78DE  
                            _atoi$3764 001E                            ?_usart_getc 000D  
                     _check_LNB_status 42EA                            ?_usart_init 001A  
                          ?_usart_putc 0001                      __size_of_init_gps 001C  
                      ??_adf4351_setup 0027                    _PIN_LED_SI_LOCK_DEF 78CF  
                        usart_getc@res 0011                      __size_of_read_reg 0024  
                            _dtoa$3247 0039                      __CFG_CCP2MX$PORTC 000000  
            __size_of_lnb_do_configure 0140               __end_of_PIN_SIO_DATA_DEF 78E8  
                            __pintcode 0008                      ??_irq_set_handler 0011  
                        __pmediumconst 7426                               ?___aodiv 000D  
                             ?___aomod 000D                               ?___awdiv 000D  
                     ___aodiv@quotient 001F                               ?___awmod 000D  
                          usart_putc@c 000D            __end_of_i2c_transfer_native 2676  
                             ?___lldiv 000D                               ?___lodiv 000D  
                             ?___llmod 000D                               ?___lomod 000D  
         __end_of_check_ADF5341_status 47EA                   setADF4351frequency@p 00B8  
                __size_of_adf4351_init 00D8                       send_UBX_string@i 0048  
                    __size_of_vfprintf 0062                       _PIN_ADF_LOCK_DEF 78F2  
                    __size_of_rx_usart 002E                        ___lomod@divisor 0015  
                      ___lomod@counter 001D                               ?_isalpha 000D  
                             ?_isdigit 000D                       i2c_start@wantack 0015  
                             ?_islower 000D                               ?_isspace 000D  
                             ?_isupper 000D                        si5328_init@addr 00E6  
                            _currentLO 01D6               adf4351_calc_counters@div 0028  
                       __size_of_fputc 0002               adf4351_calc_counters@ctx 0022  
                       __size_of_fputs 0044               adf4351_calc_counters@mod 0030  
                            _gpsbufidx 01D0                               ?_strncmp 000D  
                             ?_toupper 0013                   adf4351_set_freq@freq 00AD  
             ?_adf4351_calc_rcnt_block 00A3               __end_of_smbus8_read_byte 5DF8  
                 __end_of_show_display 0EE6                    i2c_wait_int@timeout 000D  
                       ___wmul@product 0011                            _g_usart_buf 0300  
                          _lcd_draw8x8 659C                               _PIE1bits 000F9D  
                  __end_of_read_switch 40B8                    __size_of_print_char 0168  
                         _PIN_ADF_LOCK 7795                          ?_write_regset 00D9  
                             _PIR1bits 000F9E                               i2u810_40 5AA6  
                             i2u810_41 5AA2                               i2u742_40 58CE  
                             i2u742_41 58CA                               i2u743_40 58E4  
                             i2u807_40 5A62                               i2u743_41 58E0  
                             i2u807_41 5A5E                               i2u744_40 58F6  
                             i2u808_40 5A76                               i2u744_41 58F2  
                             i2u808_41 5A72                               i2u745_40 592A  
                             _PIN_LED0 776B                               i2u745_41 5926  
                             _GPS_lock 01AE                               _PIN_LED1 7769  
                             _PIN_LED2 7767                               _PIN_LED3 776D  
                             i2u809_48 5A84                               i2u809_49 5A98  
                         _adf4351_init 4D26                               _RCONbits 000FD0  
             __size_of_send_UBX_string 019C                              _ubx_class 01A9  
                         _LNB_laststat 0071                   __end_of_print_string 57B4  
                     adf4351_setup@ctx 0025                 ssd1306_commandbyte@cmd 00D9  
                         _reg_set_univ 779B                           _PIN_LED0_DEF 78C0  
                         _PIN_LED1_DEF 78B6                           _PIN_LED2_DEF 78AC  
                         _PIN_LED3_DEF 78CA                    __end_of_PIN_I2C_SDA 7781  
                  __end_of_PIN_I2C_SCL 7783                     send_UBX_string@idx 0050  
                   send_UBX_string@len 0010                              _vfpfcnvrt 0012  
                            _xtoa$3265 0037                              _xtoa$3266 0039  
                 _usart_rx_irq_handler 58C0           ??_adf4351_calc_vco_core_freq 0013  
                           _ADCON1bits 000FC1                      ___wmul@multiplier 000D  
                adf4351_write_reg0@ctx 0019                  adf4351_write_reg1@ctx 0019  
                adf4351_write_reg2@ctx 0019                  adf4351_write_reg3@ctx 0019  
                adf4351_write_reg4@ctx 0019                  adf4351_write_reg5@ctx 0019  
             i2c_transfer_native@bdata 00BB                       _adf4351_get_lock 618A  
             i2c_transfer_native@inmsg 00B3                    __size_of_usart_getc 005A  
                         _PIN_LNB_QRG1 776F                           _PIN_LNB_QRG2 7771  
                  __size_of_usart_init 0068                    __end_of_PIN_SJ3_DEF 7898  
                  __end_of_PIN_SJ4_DEF 7893                    __size_of_usart_putc 0016  
                  __end_of_PIN_SJ5_DEF 788E                    __end_of_PIN_SJ6_DEF 7889  
                          ??_i2c_reset 001C                            ??_i2c_start 0017  
                         _isspace$3789 0013                            ??_i2c_write 0013  
                  si5328_set_freq@addr 00E6                    __end_of_PIN_SIO_CLK 7793  
                           vfpfcnvrt@c 008C                  __end_of_lnb_configure 54B8  
                          _INTCON2bits 000FF1                              copy_data0 59D8  
                            copy_data1 59F8                   _PIN_SI5328_CS_CA_DEF 78D4  
                         _PIN_SIO_DATA 778F                       _adf4351_lockstat 0072  
                  _setADF4351frequency 3244                       ?_ssd1306_command 00E1  
                             _i2c_read 49B4                   adf4351_set_tune@pout 0010  
                             _i2c_stop 640C                           ?_si5328_init 00E4  
                         _PIN_USART_RX 777B                           _PIN_USART_TX 777D  
                     _adf4351_set_freq 569C                       _adf4351_set_mode 52A4  
                _adf4351_calc_counters 2676                       _adf4351_set_tune 5EAC  
                           rx_gps@stat 01A6                         ??_write_regset 00E0  
                             __Hrparam 0000                              memcpy@tmp 0013  
                           vfprintf@ap 0063                               __Lrparam 0000  
                           vfprintf@fp 005F               __end_of_PIN_USART_RX_DEF 789D  
                   __CFG_BOREN$SBORDIS 000000               __end_of_PIN_USART_TX_DEF 78A2  
                  check_LNB_status@i2c 00DF                              itoa@value 0019  
adf4351_calc_vco_core_freq@rf_out_freq 000F                       __size_of___aodiv 0188  
                 ?_setADF4351frequency 0001                       __size_of___aomod 0164  
                     __size_of___awdiv 00C4                       __size_of___awmod 00B0  
                         ??_init_gpios 000D                       __size_of___lldiv 00A4  
                     __size_of___lodiv 00F0                       __size_of___llmod 0088  
                     __size_of___lomod 00D0                             ?_vfpfcnvrt 004B  
                ?_usart_rx_irq_handler 0001                        _PIN_I2C_SDA_DEF 78A2  
                      ___aodiv@divisor 0015                        _PIN_I2C_SCL_DEF 78A7  
                      ___aodiv@counter 001D                    _check_si5328_status 358A  
             __size_of_i2c_native_init 0056           adf4351_calc_counters@integer 002C  
                   _global_irq_handler 0008           __end_of_PIN_LED_LNB_GOOD_DEF 78B6  
                             _datamode 01A7                       __size_of_isalpha 003C  
                     __size_of_isdigit 0038        __end_of_adf4351_calc_rcnt_block 1B5A  
                     __size_of_islower 0038                       __size_of_isspace 0052  
                             __ptext10 4ECE                               __ptext11 4B72  
                             __ptext20 47EA                               __ptext12 5DF8  
                             __ptext21 57B4                               __ptext13 3244  
                             __ptext30 64EC                               __ptext22 618A  
                             __ptext14 3F80                               __ptext31 60F6  
                             __ptext23 6520                               __ptext15 569C  
                             __ptext40 625A                               __ptext32 572A  
                             __ptext24 5E52                               __ptext16 40B8  
                             __ptext41 65E4                               __ptext33 3A22  
                             __ptext25 2CD0                               __ptext17 1876  
                             __ptext50 23C4                               __ptext42 33EE  
                             __ptext34 659C                               __ptext26 540E  
                             __ptext18 5060                               __ptext51 5AC0  
                             __ptext43 6616                               __ptext35 5C14  
                             __ptext27 3E40                               __ptext19 2676  
                             __ptext60 5CDC                               __ptext52 640C  
                             __ptext44 0EE6                               __ptext36 62DC  
                             __ptext28 42EA                               __ptext61 0012  
                             __ptext53 51E6                               __ptext45 5F5C  
                             __ptext37 631A                               __ptext29 4508  
                             __ptext70 4A94                               __ptext62 1E38  
                             __ptext54 555E                               __ptext46 358A  
                             __ptext38 6358                               __ptext71 1B5A  
                             __ptext63 5D3E                               __ptext55 48D0  
                             __ptext47 65C0                               __ptext39 5FB2  
                             __ptext80 2AD8                               __ptext72 5124  
                             __ptext64 6444                               __ptext56 49B4  
                             __ptext48 5D9C                               __ptext81 6006  
                             __ptext73 60A8                               __ptext65 647C  
                             __ptext57 5B38                               __ptext49 5C78  
                             __ptext90 14FC                               __ptext82 64B4  
                             __ptext74 6216                               __ptext66 6396  
                             __ptext58 46FE                               __ptext91 43FC  
                             __ptext83 6576                               __ptext75 6620  
                             __ptext67 28D8                               __ptext59 654E  
                             __ptext92 4F98                               __ptext84 5EAC  
                             __ptext76 6600                               __ptext68 4DFE  
                             __ptext93 2EB0                               __ptext85 52A4  
                             __ptext77 629C                               __ptext69 460E  
                             __ptext94 4D26                               __ptext86 6140  
                             __ptext78 3B8A                               __ptext95 38AC  
                             __ptext87 5944                               __ptext79 3724  
                             __ptext96 54B8                               __ptext88 210C  
                             __ptext89 307E                               __ptext98 58C0  
                             __ptext99 0000                       __size_of_isupper 0038  
                             _lcd_addr 0070                               _lcd_init 4508  
                          _read_switch 3F80                    ?_global_irq_handler 0001  
              check_si5328_status@addr 00E8                check_si5328_status@lock 00ED  
                     __size_of_strncmp 00DE                       __size_of_toupper 005E  
                       si5328_init@i2c 00E4                        adf4351_init@ctx 0019  
                      adf4351_init@pfd 001F                        adf4351_init@ref 001B  
                       si5328_init@res 00E9                   _check_ADF5341_status 46FE  
                        __size_of_atoi 01F8                               _init_gps 65E4  
                        __size_of_main 0152                          __size_of_dtoa 02DE  
                 ?_check_si5328_status 00E6                          __size_of_itoa 0084  
                             _read_reg 65C0                     __end_of_init_gpios 14FC  
                        __size_of_utoa 0200                          __size_of_xtoa 02D4  
                  adf4351_set_freq@ctx 00AB                        i2c_transfer@dev 00C5  
                      i2c_transfer@msg 00C7                        i2c_transfer@num 00C9  
        adf4351_calc_vco_core_freq@div 0017          adf4351_calc_vco_core_freq@ctx 000D  
                          _PIN_I2C_SDA 777F                            _PIN_I2C_SCL 7781  
                  adf4351_set_mode@ctx 0027                       _lnb_do_configure 3E40  
          __end_of_adf4351_write_latch 307E                   smbus8_read_byte@addr 00CD  
                 smbus8_read_byte@data 00CF                               int$flags 0073  
                      _adf4351_default 54B8                  ??_setADF4351frequency 00B3  
                 ??_global_irq_handler 0008                               _vfprintf 5CDC  
                            printf@fmt 0095                               _rx_usart 6520  
              i2c_transfer_native@left 00BF                i2c_transfer_native@read 00B5  
          __end_of_ssd1306_commandbyte 6520                               main@lock 0187  
              i2c_transfer_native@pmsg 00C3                            _PIN_SJ3_DEF 7893  
                          _PIN_SJ4_DEF 788E                            _PIN_SJ5_DEF 7889  
                          _PIN_SJ6_DEF 7884                     si5328_set_freq@i2c 00E4  
                     ___aomod@dividend 000D                      ??_send_UBX_string 0014  
                         ??_print_char 0100                            _PIN_SIO_CLK 7791  
                  adf4351_set_tune@icp 000F                    adf4351_set_tune@ctx 000D  
             __end_of_check_LNB_status 43FC                         _vfpfcnvrt$3280 0082  
                           _INTCONbits 000FF2                               memcmp@vl 000D  
                             memcmp@vr 000F                               memcpy@d1 000D  
                             memcpy@s1 000F                          _lcd_available 006F  
                __size_of_show_display 06BE             adf4351_calc_rcnt_block@div 00A9  
                             isalpha@c 000D             adf4351_calc_rcnt_block@ctx 00A3  
                             isdigit@c 000D                               setQRG@sw 00EE  
               adf4351_set_mode@enable 0029                  smbus8_write_data@addr 00CD  
                smbus8_write_data@data 00CF                               intlevel2 0000  
                            rx_usart@c 0013              __size_of_lcd_clear_screen 0064  
               ?_adf4351_calc_counters 0022                        _irq_set_handler 61D2  
                ?_check_ADF5341_status 00A3                  ??_check_si5328_status 00E9  
                       _PIN_ADF_CE_DEF 78ED                               islower@c 000D  
                             isspace@c 000D      __end_of_gps_activate10MHz_payload 7753  
                     ___lldiv@dividend 000D                         _PIN_ADF_LE_DEF 78E8  
             __end_of_PIN_ADF_LOCK_DEF 78F7                           ??_usart_getc 000F  
                         ??_usart_init 001E                  __size_of_print_string 008A  
                         ??_usart_putc 000D                               isupper@c 000D  
                            strncmp@_l 000D                              strncmp@_r 000F  
                           _OSCCONbits 000FD3                     __end_of_print_char 3B8A  
                           _PIN_ADF_CE 7797                             _PIN_ADF_LE 7799  
             __size_of_si5328_set_freq 00CA             __end_of_adf4351_write_reg0 5060  
           __end_of_adf4351_write_reg1 4508             __end_of_adf4351_write_reg2 1876  
           __end_of_adf4351_write_reg3 3244             __end_of_adf4351_write_reg4 23C4  
           __end_of_adf4351_write_reg5 59C4                __end_of_PIN_I2C_SDA_DEF 78A7  
           __end_of_PIN_LED_CPU_OK_DEF 78CA                    smbus8_read_byte@dev 00CB  
              __end_of_PIN_I2C_SCL_DEF 78AC                    smbus8_read_byte@reg 00CE  
                  smbus8_read_byte@msg 00D1                               printf@ap 00A1  
         __size_of_si5328_perform_ical 005A                 ??_usart_rx_irq_handler 0003  
                      ___aomod@divisor 0015                            ??_vfpfcnvrt 0051  
                      ___aomod@counter 001D     __end_of_adf4351_calc_vco_core_freq 41D4  
           _adf4351_calc_vco_core_freq 40B8                     _PIN_SI5328_LOL_DEF 78D9  
                         _show_display 0828                  smbus8_write_byte@addr 00CD  
             setADF4351frequency@force 00B5                   smbus8_write_data@dev 00CB  
                smbus8_write_byte@data 00CF                   smbus8_write_data@len 00D1  
                 smbus8_write_data@reg 00CE                   smbus8_write_data@msg 00D3  
                     ___lldiv@quotient 0015                 fp__i2c_transfer_native 0000  
                send_UBX_string@i_2444 004A                  send_UBX_string@i_2445 004C  
               send_UBX_string@payload 0012                               strncmp@l 0014  
                             strncmp@n 0011                               strncmp@r 0016  
                 __end_of_write_regset 4C4E                               toupper@c 0013  
                   __end_of_usart_getc 5EAC                     __end_of_usart_init 5C14  
                   __end_of_usart_putc 6616                            _SSPCON1bits 000FC6  
                          _SSPCON2bits 000FC5                __size_of_i2c_probe_addr 0042  
                    ??_i2c_native_init 002E                           _print_string 572A  
               __end_of_PIN_ADF_CE_DEF 78F2                   smbus8_write_byte@dev 00CB  
                         ___aodiv@sign 001E                   smbus8_write_byte@reg 00CE  
                 smbus8_write_byte@msg 00D2                   smbus8_write_byte@tmp 00D0  
               __end_of_PIN_ADF_LE_DEF 78ED                      ?_smbus8_read_byte 00CB  
                send_UBX_string@ubxdel 019A                       _PIN_SI5328_CS_CA 7785  
            usart_rx_irq_handler@udata 0001                   send_UBX_string@class 0047  
                     i2c_write@wantack 0011                           ?_lcd_draw8x8 00EA  
            usart_rx_irq_handler@wposn 0006                     ??_smbus8_read_byte 0067  
              __end_of_adf4351_default 555E                   send_UBX_string@txbuf 0015  
                         ___aomod@sign 001E                   __size_of_si5328_init 00D8  
             __end_of_adf4351_get_lock 61D2                      lcd_draw8x8@buffer 00EA  
                       _PIN_SI5328_LOL 7789  
